// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 4/9/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _21356124e_acceptRange;
struct _1e9a030bc_StrBuilder;
struct _1d1b93286_Range16;
struct _1d1b937b4_Range32;
struct _1d1b93c37_RangeTable;
struct _1d190b8b2_lazyBuff;
struct _21467189c_DirEntry;
struct _214671b33_Directory;
struct _214672d32_File;
struct _214674e66_Status;
struct _1d1d2ea0a_cmdAttrs;
struct _1d1c6d64c_Log;
struct _1b914608c_floatInfo;
struct _1b9146c19_decimalSlice;
struct _1b9158e5c_leftCheat;
struct _1b9159974_decimal;
struct _1b916c16d_Const;
struct _1c80b653c_Token;
struct _1c80bbcc3_File;
struct _1c80bde29_kindPair;
struct _1c80c4e0d_lex;
struct _1a59c2058_Ast;
struct _1a59c2e6b_Node;
struct _1a59c3389_Directive;
struct _1a59c3e6c_TypeDecl;
struct _1a59c4577_IdentTypeDecl;
struct _1a59c4841_SubIdentTypeDecl;
struct _1a59c4c1a_NamespaceTypeDecl;
struct _1a59c5017_SptrTypeDecl;
struct _1a59c539c_SlcTypeDecl;
struct _1a59c5699_TupleTypeDecl;
struct _1a59c5996_PtrTypeDecl;
struct _1a59c6238_ArrTypeDecl;
struct _1a59c6986_MapTypeDecl;
struct _1a59c6d60_RetTypeDecl;
struct _1a59c82a1_Expr;
struct _1a59c856a_RangeExpr;
struct _1a59c8b75_UseExpr;
struct _1a59c8d95_TupleExpr;
struct _1a59c923b_LitExpr;
struct _1a59c9615_UnsafeExpr;
struct _1a59c9abb_IdentExpr;
struct _1a59ca35d_UnaryExpr;
struct _1a59ca737_VariadicExpr;
struct _1a59cab11_CastExpr;
struct _1a59caeda_NsSelectionExpr;
struct _1a59cb3b4_SubIdentExpr;
struct _1a59cb86a_BinaryExpr;
struct _1a59cbeca_FnCallExpr;
struct _1a59cc9c0_FieldExprPair;
struct _1a59cd2ea_StructLit;
struct _1a59cd7a1_BraceLit;
struct _1a59ce0cb_KeyValPair;
struct _1a59ce807_SliceExpr;
struct _1a59d0264_IndexingExpr;
struct _1a59d08c4_SlicingExpr;
struct _1a59d0bc1_Constraint;
struct _1a59d1177_GenericDecl;
struct _1a59d1551_LabelSt;
struct _1a59d192a_GotoSt;
struct _1a59d1c27_FallSt;
struct _1a59d2387_AssignLeft;
struct _1a59d291a_AssignSt;
struct _1a59d382d_Stmt;
struct _1a59d3e8d_ScopeTree;
struct _1a59d46ca_ParamDecl;
struct _1a59d5b2c_FnDecl;
struct _1a59d6cd7_VarDecl;
struct _1a59d71b1_RetSt;
struct _1a59d7931_Iter;
struct _1a59d825b_WhileKind;
struct _1a59d8b63_RangeKind;
struct _1a59d903c_BreakSt;
struct _1a59d9416_ContSt;
struct _1a59d98bc_If;
struct _1a59d9c96_Else;
struct _1a59da24c_Conditional;
struct _1a59da989_TypeAliasDecl;
struct _1a59dae40_Case;
struct _1a59db759_MatchCase;
struct _1a59dc073_UseDecl;
struct _1a59dc529_EnumItemDecl;
struct _1a59dd0da_EnumDecl;
struct _1a59dd915_TypeEnumItemDecl;
struct _1a59de075_TypeEnumDecl;
struct _1a59de33e_FieldDecl;
struct _1a59dec35_StructDecl;
struct _1a59e0472_TraitDecl;
struct _1a59e0ad2_Impl;
struct _1a59e1dd0_Field;
struct _1a59e3de3_Operators;
struct _1a59e4d06_Struct;
struct _1a59e6ed4_FieldIns;
struct _1a59e7a84_StructIns;
struct _1a59eb989_OperandExprModel;
struct _1a59ebe84_BinaryExprModel;
struct _1a59ec35d_UnaryExprModel;
struct _1a59ec88b_StructArgExprModel;
struct _1a59ecc32_StructLitExprModel;
struct _1a59ed02e_AllocStructLitExprModel;
struct _1a59ed5b2_CastingExprModel;
struct _1a59ede64_FnCallExprModel;
struct _1a59ee33d_SliceExprModel;
struct _1a59ee7e4_IndexingExprModel;
struct _1a59eec9a_AnonFnExprModel;
struct _1a5a00174_KeyValPairExprModel;
struct _1a5a0062a_MapExprModel;
struct _1a5a00bad_SlicingExprModel;
struct _1a5a01241_TraitSubIdentExprModel;
struct _1a5a01ad2_StructSubIdentExprModel;
struct _1a5a01e78_StructStaticIdentExprModel;
struct _1a5a02352_ArrayExprModel;
struct _1a5a0264e_TupleExprModel;
struct _1a5a02a28_BuiltinOutCallExprModel;
struct _1a5a02e02_BuiltinOutlnCallExprModel;
struct _1a5a032cb_BuiltinNewCallExprModel;
struct _1a5a036a5_BuiltinPanicCallExprModel;
struct _1a5a03b5b_BuiltinAssertCallExprModel;
struct _1a5a04112_BuiltinMakeCallExprModel;
struct _1a5a044db_BuiltinAppendCallExprModel;
struct _1a5a047d8_BuiltinLenCallExprModel;
struct _1a5a04ad5_BuiltinCapCallExprModel;
struct _1a5a04eae_BuiltinDeleteCallExprModel;
struct _1a5a05388_BuiltinCopyCallExprModel;
struct _1a5a05762_BuiltinErrorCallExprModel;
struct _1a5a05e16_SizeofExprModel;
struct _1a5a06103_AlignofExprModel;
struct _1a5a0639a_RuneExprModel;
struct _1a5a06697_IntegratedToStrExprModel;
struct _1a5a06a71_BackendEmitExprModel;
struct _1a5a06d6d_FreeExprModel;
struct _1a5a07a72_RetType;
struct _1a5a08303_Param;
struct _1a5a09cc7_Fn;
struct _1a5a0bc30_ParamIns;
struct _1a5a0cca8_FnIns;
struct _1a5a10e87_ReferenceStack;
struct _1a5a12494_Pass;
struct _1a5a16e49_symbolBuilder;
struct _1a5a1d181_Trait;
struct _1a5a1ed20_EnumItem;
struct _1a5a2088c_Enum;
struct _1a5a219c0_TypeEnumItem;
struct _1a5a22097_TypeEnum;
struct _1a5a251ee_comptimeRange;
struct _1a5a25bc2_comptimeStructField;
struct _1a5a27883_comptimeStructFields;
struct _1a5a28e7d_comptimeStatic;
struct _1a5a2ab3e_comptimeStatics;
struct _1a5a2c239_comptimeEnumField;
struct _1a5a2d5d1_comptimeEnumFields;
struct _1a5a2ebcb_comptimeParam;
struct _1a5a31d65_comptimeParams;
struct _1a5a3342c_comptimeTypeInfos;
struct _1a5a34a27_comptimeTypeInfo;
struct _1a5a3b039_comptimeValue;
struct _1a5a3d888_comptimeFiles;
struct _1a5a3ee83_comptimeFile;
struct _1a5a44493_constraintChecker;
struct _1a5a467e7_Impl;
struct _1a5a4bc4d_Scope;
struct _1a5a4c16b_If;
struct _1a5a4c468_Else;
struct _1a5a4c886_Conditional;
struct _1a5a4cb83_InfIter;
struct _1a5a4d139_WhileIter;
struct _1a5a4da85_RangeIter;
struct _1a5a4de1a_ContSt;
struct _1a5a4e2e4_BreakSt;
struct _1a5a4e5e1_Label;
struct _1a5a4e9ba_GotoSt;
struct _1a5a4ed94_Postfix;
struct _1a5a5034a_Assign;
struct _1a5a50801_MultiAssign;
struct _1a5a50e61_Match;
struct _1a5a51989_Case;
struct _1a5a52182_FallSt;
struct _1a5a52528_RetSt;
struct _1a5a52b88_scopeLabel;
struct _1a5a5321b_scopeGoto;
struct _1a5a5420b_scopeChecker;
struct _1a5a6783a_directiveChecker;
struct _1a5a6dcd6_ImportInfo;
struct _1a5a71c0c_Package;
struct _1a5a8d575_commonSemaMeta;
struct _1a5a8e17a_Sema;
struct _1a5aadd48_missingRetChecker;
struct _1a5ab1ee4_Var;
struct _1a5ab2d6e_FuncPattern;
struct _1a5b017b4_typeCompatibilityChecker;
struct _1a5b03563_assignTypeChecker;
struct _1a5b04e38_dynamicTypeAnnotation;
struct _1a5b09c95_fnCallArgChecker;
struct _1a5b0cbcc_structLitChecker;
struct _1a5b0e9ae_rangeChecker;
struct _1a5b12220_retTypeChecker;
struct _1a5b14783_SymbolTable;
struct _1a5b19aeb_Data;
struct _1a5b1ac73_Value;
struct _1a5b1b823_Eval;
struct _1a5b3eda7_unaryEval;
struct _1a5b41d43_binaryEval;
struct _1a5b4e46b_InsGeneric;
struct _1a5b50060_TypeAlias;
struct _1a5b50d52_TypeKind;
struct _1a5b58024_TypeSymbol;
struct _1a5b5892b_Prim;
struct _1a5b5c457_Sptr;
struct _1a5b5ce2a_Slc;
struct _1a5b5da1e_Tuple;
struct _1a5b5e5be_Map;
struct _1a5b6024b_Arr;
struct _1a5b60c1e_Ptr;
struct _1a5b61c20_referencer;
struct _1a5b62c10_typeChecker;
struct _1a5b6a8b6_identTypeLookup;
struct _1a682b884_FileInfo;
struct _1a68725de_stmt;
struct _1a6872e80_scopeParser;
struct _1a68808a5_exprBuilder;
struct _1a6892e6c_assignInfo;
struct _1a689636b_parser;
struct _1a68a848d_typeBuilder;
struct _1a5d6146e_CompileInfo;
struct _1a5d62948_directiveEval;
struct _1a68ac5c4_JuleImporter;
struct _1a68b3d17_ExprInspector;
struct _1a68be196_OrderedDefines;
struct _1a69c95c0_liveTable;
struct _1a69c9999_ObjectDeadCode;
struct _1a69cd5e6_scopeDeadCode;
struct _1a69d2ce3_exprDeadCode;
struct _1c7998c88_ExceptionalForwardingExprModel;
struct _1c799910c_SwapExprModel;
struct _1c79994d6_EmptyCompareExprModel;
struct _1c799985a_RefExprModel;
struct _1c7999ccd_StrCompExprModel;
struct _1c799a361_MutSlicingExprModel;
struct _1c799a65d_UnsafeBinaryExprModel;
struct _1c799a9e3_UnsafeIndexingExprModel;
struct _1c799adbc_PushToSliceExprModel;
struct _1c799b296_AppendToSliceExprModel;
struct _1c799b670_StrRuneIter;
struct _1c799b96c_UnsafeDerefExprModel;
struct _1c799bc69_UnsafeCastingExprModel;
struct _1c799c94b_nilVar;
struct _1c799cc8c_nils;
struct _1a68c08b2_scopeOptimizer;
struct _1a68c75cd_exprOptimizer;
struct _1a68cc9bd_dynamicVar;
struct _1a68ccd0e_dynamic;
struct _1a68d098d_data;
struct _1a68d20cc_boundaryVar;
struct _1a68d241d_boundary;
struct _1a69d3e7b_Optimizer;
struct _1a6a10293_AnsiEscape;
struct _1a6a11816_Logger;
struct _1a7570bb0_AbsTime;
struct _1a7571386_Time;
struct _1a6a6b3a9_scopeCoder;
struct _1a74ab1d3_exprCoder;
struct _1a74bb9da_TestCoder;
struct _1a74be966_identCoder;
struct _1a7579b64_SerializationInfo;
struct _1a757a082_traitCast;
struct _1a757a45b_anonHash;
struct _1a757b913_ObjectCoder;
struct _1a758aa98_customType;
struct _1a758b6d1_typeCoder;
struct _1a75942bb_resultCoder;
struct _1aac5ee4a_Flag;
struct _1aac639ed_Flag;
struct _1aac67161_Flag;
struct _1aac6a818_Flag;
struct _1aac6de7b_Flag;
struct _1a668eb59_FlagSet;
struct _1a669261d_argParser;
struct _1d1d2a7b4_Cmd;
struct _1a68d0493_dataCheckpoint;
struct _1a68b0055_IR;
struct _21356124e_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_21356124e_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_21356124e_acceptRange _other) { return !this->operator==(_other); }


};
struct _1e9a030bc_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _1d1b93286_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_1d1b93286_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1d1b93286_Range16 _other) { return !this->operator==(_other); }


};
struct _1d1b937b4_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_1d1b937b4_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1d1b937b4_Range32 _other) { return !this->operator==(_other); }


};
struct _1d1b93c37_RangeTable {
	jule::Slice<_1d1b93286_Range16> _field_R16;
	jule::Slice<_1d1b937b4_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _1d190b8b2_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _21467189c_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_214674e66_Status> _field_Stat;
	

	inline bool operator==(_21467189c_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_21467189c_DirEntry _other) { return !this->operator==(_other); }


};
struct _214671b33_Directory {
	

	inline bool operator==(_214671b33_Directory _other) { return true; }

	inline bool operator!=(_214671b33_Directory _other) { return !this->operator==(_other); }


};
struct _214672d32_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_214672d32_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_214672d32_File _other) { return !this->operator==(_other); }


};
struct _214674e66_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_214674e66_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_214674e66_Status _other) { return !this->operator==(_other); }


};
struct _1d1d2ea0a_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	inline bool operator==(_1d1d2ea0a_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_1d1d2ea0a_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1d1c6d64c_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1d1c6d64c_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1d1c6d64c_Log _other) { return !this->operator==(_other); }


};
struct _1b914608c_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_1b914608c_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1b914608c_floatInfo _other) { return !this->operator==(_other); }


};
struct _1b9146c19_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1b9158e5c_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1b9158e5c_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1b9158e5c_leftCheat _other) { return !this->operator==(_other); }


};
struct _1b9159974_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1b9159974_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1b9159974_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b9172c23_Eq(_1b916c16d_Const* _self_, _1b916c16d_Const _26014_x);
inline jule::Bool _1b9173064_Lt(_1b916c16d_Const* _self_, _1b916c16d_Const _28714_x);
inline jule::Bool _1b91733a5_LtEq(_1b916c16d_Const* _self_, _1b916c16d_Const _31016_x);
inline jule::Bool _1b91736e6_Gt(_1b916c16d_Const* _self_, _1b916c16d_Const _33314_x);
inline jule::Bool _1b9173a37_GtEq(_1b916c16d_Const* _self_, _1b916c16d_Const _35616_x);
struct _1b916c16d_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1b916c16d_Const _other) { return _1b9172c23_Eq(this, _other); }

	inline bool operator!=(_1b916c16d_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1b916c16d_Const _other) { return _1b91736e6_Gt(this, _other); }

	inline jule::Bool operator>=(_1b916c16d_Const _other) { return _1b9173a37_GtEq(this, _other); }

	inline jule::Bool operator<(_1b916c16d_Const _other) { return _1b9173064_Lt(this, _other); }

	inline jule::Bool operator<=(_1b916c16d_Const _other) { return _1b91733a5_LtEq(this, _other); }


};
struct _1c80b653c_Token {
	jule::Ptr<_1c80bbcc3_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1c80b653c_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1c80b653c_Token _other) { return !this->operator==(_other); }


};
struct _1c80bbcc3_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_Tokens;
	


};
struct _1c80bde29_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1c80bde29_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1c80bde29_kindPair _other) { return !this->operator==(_other); }


};
struct _1c80c4e0d_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_tokens;
	jule::Ptr<_1c80bbcc3_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1d1c6d64c_Log> _field_errors;
	


};
struct _1a59c2058_Ast {
	jule::Ptr<_1c80bbcc3_File> _field_File;
	jule::Slice<jule::Ptr<_1a59c3389_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1a59dc073_UseDecl>> _field_UseDecls;
	jule::Slice<_1a59c2e6b_Node> _field_Nodes;
	


};
struct _1a59c2e6b_Node {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1a59c2e6b_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a59c2e6b_Node _other) { return !this->operator==(_other); }


};
struct _1a59c3389_Directive {
	jule::Ptr<_1c80b653c_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_Args;
	


};
struct _1a59c3e6c_TypeDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1a59c3e6c_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a59c3e6c_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1a59c4577_IdentTypeDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> _field_Generics;
	


};
struct _1a59c4841_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1a59c4577_IdentTypeDecl>> _field_Idents;
	


};
struct _1a59c4c1a_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_Idents;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Kind;
	


};
struct _1a59c5017_SptrTypeDecl {
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a59c5017_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a59c5017_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a59c539c_SlcTypeDecl {
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a59c539c_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a59c539c_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a59c5699_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> _field_Types;
	


};
struct _1a59c5996_PtrTypeDecl {
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a59c5996_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a59c5996_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a59c6238_ArrTypeDecl {
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Elem;
	jule::Ptr<_1a59c82a1_Expr> _field_Size;
	

	inline bool operator==(_1a59c6238_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1a59c6238_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a59c6986_MapTypeDecl {
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Key;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Val;
	

	inline bool operator==(_1a59c6986_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a59c6986_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a59c6d60_RetTypeDecl {
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_Idents;
	


};
struct _1a59c82a1_Expr {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1c80b653c_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1a59c82a1_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a59c82a1_Expr _other) { return !this->operator==(_other); }


};
struct _1a59c856a_RangeExpr {
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	

	inline bool operator==(_1a59c856a_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a59c856a_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1a59c8b75_UseExpr {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	

	inline bool operator==(_1a59c8b75_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a59c8b75_UseExpr _other) { return !this->operator==(_other); }


};
struct _1a59c8d95_TupleExpr {
	jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _field_Expr;
	


};
struct _1a59c923b_LitExpr {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1a59c923b_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a59c923b_LitExpr _other) { return !this->operator==(_other); }


};
struct _1a59c9615_UnsafeExpr {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	

	inline bool operator==(_1a59c9615_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a59c9615_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1a59c9abb_IdentExpr {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1a59c9abb_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1a59c9abb_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1a59ca35d_UnaryExpr {
	jule::Ptr<_1c80b653c_Token> _field_Op;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	

	inline bool operator==(_1a59ca35d_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a59ca35d_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1a59ca737_VariadicExpr {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	

	inline bool operator==(_1a59ca737_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a59ca737_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1a59cab11_CastExpr {
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Kind;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	

	inline bool operator==(_1a59cab11_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a59cab11_CastExpr _other) { return !this->operator==(_other); }


};
struct _1a59caeda_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_Ns;
	jule::Ptr<_1c80b653c_Token> _field_Ident;
	


};
struct _1a59cb3b4_SubIdentExpr {
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	jule::Ptr<_1c80b653c_Token> _field_Ident;
	

	inline bool operator==(_1a59cb3b4_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a59cb3b4_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1a59cb86a_BinaryExpr {
	jule::Ptr<_1a59c82a1_Expr> _field_Left;
	jule::Ptr<_1a59c82a1_Expr> _field_Right;
	jule::Ptr<_1c80b653c_Token> _field_Op;
	

	inline bool operator==(_1a59cb86a_BinaryExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a59cb86a_BinaryExpr _other) { return !this->operator==(_other); }


};
struct _1a59cbeca_FnCallExpr {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _field_Args;
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1a59cc9c0_FieldExprPair {
	jule::Ptr<_1c80b653c_Token> _field_Field;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	

	inline bool operator==(_1a59cc9c0_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a59cc9c0_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1a59cd2ea_StructLit {
	jule::Ptr<_1c80b653c_Token> _field_End;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _field_Exprs;
	


};
struct _1a59cd7a1_BraceLit {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1c80b653c_Token> _field_End;
	jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _field_Exprs;
	


};
struct _1a59ce0cb_KeyValPair {
	jule::Ptr<_1a59c82a1_Expr> _field_Key;
	jule::Ptr<_1a59c82a1_Expr> _field_Val;
	jule::Ptr<_1c80b653c_Token> _field_Colon;
	

	inline bool operator==(_1a59ce0cb_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1a59ce0cb_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1a59ce807_SliceExpr {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1c80b653c_Token> _field_End;
	jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _field_Exprs;
	


};
struct _1a59d0264_IndexingExpr {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1c80b653c_Token> _field_End;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	jule::Ptr<_1a59c82a1_Expr> _field_Index;
	

	inline bool operator==(_1a59d0264_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a59d0264_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1a59d08c4_SlicingExpr {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1c80b653c_Token> _field_End;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	jule::Ptr<_1a59c82a1_Expr> _field_Start;
	jule::Ptr<_1a59c82a1_Expr> _field_To;
	

	inline bool operator==(_1a59d08c4_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1a59d08c4_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1a59d0bc1_Constraint {
	jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> _field_Mask;
	


};
struct _1a59d1177_GenericDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a59d0bc1_Constraint> _field_Constraint;
	

	inline bool operator==(_1a59d1177_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1a59d1177_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1a59d1551_LabelSt {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a59d1551_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a59d1551_LabelSt _other) { return !this->operator==(_other); }


};
struct _1a59d192a_GotoSt {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1c80b653c_Token> _field_Label;
	

	inline bool operator==(_1a59d192a_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a59d192a_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a59d1c27_FallSt {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	

	inline bool operator==(_1a59d1c27_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1a59d1c27_FallSt _other) { return !this->operator==(_other); }


};
struct _1a59d2387_AssignLeft {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	

	inline bool operator==(_1a59d2387_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a59d2387_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1a59d291a_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1c80b653c_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1a59d2387_AssignLeft>> _field_Left;
	jule::Ptr<_1a59c82a1_Expr> _field_Right;
	


};
struct _1a59d382d_Stmt {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1a59d382d_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a59d382d_Stmt _other) { return !this->operator==(_other); }


};
struct _1a59d3e8d_ScopeTree {
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1a59d382d_Stmt> _field_Stmts;
	jule::Ptr<_1c80b653c_Token> _field_End;
	


};
struct _1a59d46ca_ParamDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a59d46ca_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a59d46ca_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1a59d5b2c_FnDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a59c3389_Directive>> _field_Directives;
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>> _field_Generics;
	jule::Ptr<_1a59c6d60_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1a59d46ca_ParamDecl>> _field_Params;
	


};
struct _1a59d6cd7_VarDecl {
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_Scope;
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1c80b653c_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1a59c3389_Directive>> _field_Directives;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Kind;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	


};
struct _1a59d71b1_RetSt {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	

	inline bool operator==(_1a59d71b1_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a59d71b1_RetSt _other) { return !this->operator==(_other); }


};
struct _1a59d7931_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a59d7931_Iter _other) {
		return 
			this->_field_Comptime == _other._field_Comptime &&
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a59d7931_Iter _other) { return !this->operator==(_other); }


};
struct _1a59d825b_WhileKind {
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1c80b653c_Token> _field_NextToken;
	

	inline bool operator==(_1a59d825b_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1a59d825b_WhileKind _other) { return !this->operator==(_other); }


};
struct _1a59d8b63_RangeKind {
	jule::Ptr<_1c80b653c_Token> _field_InToken;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	jule::Ptr<_1a59d6cd7_VarDecl> _field_KeyA;
	jule::Ptr<_1a59d6cd7_VarDecl> _field_KeyB;
	

	inline bool operator==(_1a59d8b63_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a59d8b63_RangeKind _other) { return !this->operator==(_other); }


};
struct _1a59d903c_BreakSt {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1c80b653c_Token> _field_Label;
	

	inline bool operator==(_1a59d903c_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a59d903c_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a59d9416_ContSt {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1c80b653c_Token> _field_Label;
	

	inline bool operator==(_1a59d9416_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a59d9416_ContSt _other) { return !this->operator==(_other); }


};
struct _1a59d98bc_If {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a59d98bc_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a59d98bc_If _other) { return !this->operator==(_other); }


};
struct _1a59d9c96_Else {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a59d9c96_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a59d9c96_Else _other) { return !this->operator==(_other); }


};
struct _1a59da24c_Conditional {
	jule::Ptr<_1a59d98bc_If> _field_Head;
	jule::Slice<jule::Ptr<_1a59d98bc_If>> _field_Tail;
	jule::Ptr<_1a59d9c96_Else> _field_Default;
	


};
struct _1a59da989_TypeAliasDecl {
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Kind;
	

	inline bool operator==(_1a59da989_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a59da989_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1a59dae40_Case {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _field_Exprs;
	


};
struct _1a59db759_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1c80b653c_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a59dae40_Case>> _field_Cases;
	jule::Ptr<_1a59d9c96_Else> _field_Default;
	


};
struct _1a59dc073_UseDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1a59dc529_EnumItemDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	

	inline bool operator==(_1a59dc529_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a59dc529_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1a59dd0da_EnumDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a59dc529_EnumItemDecl>> _field_Items;
	jule::Ptr<_1c80b653c_Token> _field_End;
	


};
struct _1a59dd915_TypeEnumItemDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Kind;
	

	inline bool operator==(_1a59dd915_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a59dd915_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1a59de075_TypeEnumDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a59dd915_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1c80b653c_Token> _field_End;
	


};
struct _1a59de33e_FieldDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Kind;
	jule::Ptr<_1a59c82a1_Expr> _field_Default;
	

	inline bool operator==(_1a59de33e_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a59de33e_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1a59dec35_StructDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1c80b653c_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a59de33e_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a59c3389_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>> _field_Generics;
	


};
struct _1a59e0472_TraitDecl {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1c80b653c_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a59d5b2c_FnDecl>> _field_Methods;
	


};
struct _1a59e0ad2_Impl {
	jule::Ptr<_1c80b653c_Token> _field_End;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Base;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a59d5b2c_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1a59d6cd7_VarDecl>> _field_Statics;
	


};
struct _1a59e1dd0_Field {
	jule::Ptr<_1a59e4d06_Struct> _field_Owner;
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a5b58024_TypeSymbol> _field_Kind;
	jule::Ptr<_1a59c82a1_Expr> _field_Default;
	

	inline bool operator==(_1a59e1dd0_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a59e1dd0_Field _other) { return !this->operator==(_other); }


};
struct _1a59e3de3_Operators {
	jule::Ptr<_1a5a0cca8_FnIns> _field_Eq;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Gt;
	jule::Ptr<_1a5a0cca8_FnIns> _field_GtEq;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Lt;
	jule::Ptr<_1a5a0cca8_FnIns> _field_LtEq;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Shl;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Shr;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Add;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Sub;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Div;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Mul;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Mod;
	jule::Ptr<_1a5a0cca8_FnIns> _field_BitAnd;
	jule::Ptr<_1a5a0cca8_FnIns> _field_BitOr;
	jule::Ptr<_1a5a0cca8_FnIns> _field_BitXor;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Neg;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Pos;
	jule::Ptr<_1a5a0cca8_FnIns> _field_BitNot;
	jule::Ptr<_1a5a0cca8_FnIns> _field_AddAssign;
	jule::Ptr<_1a5a0cca8_FnIns> _field_SubAssign;
	jule::Ptr<_1a5a0cca8_FnIns> _field_DivAssign;
	jule::Ptr<_1a5a0cca8_FnIns> _field_MulAssign;
	jule::Ptr<_1a5a0cca8_FnIns> _field_ModAssign;
	jule::Ptr<_1a5a0cca8_FnIns> _field_ShlAssign;
	jule::Ptr<_1a5a0cca8_FnIns> _field_ShrAssign;
	jule::Ptr<_1a5a0cca8_FnIns> _field_BitOrAssign;
	jule::Ptr<_1a5a0cca8_FnIns> _field_BitAndAssign;
	jule::Ptr<_1a5a0cca8_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1a59e3de3_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1a59e3de3_Operators _other) { return !this->operator==(_other); }


};
struct _1a59e4d06_Struct {
	jule::Ptr<_1a5a8e17a_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1a59e4d06_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1a59e4d06_Struct>> _field_Uses;
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a59e1dd0_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1a5a09cc7_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a59c3389_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1a5a1d181_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1a59e7a84_StructIns>> _field_Instances;
	


};
struct _1a59e6ed4_FieldIns {
	jule::Ptr<_1a59e1dd0_Field> _field_Decl;
	jule::Ptr<_1a5b50d52_TypeKind> _field_Kind;
	jule::Ptr<_1a5b19aeb_Data> _field_Default;
	

	inline bool operator==(_1a59e6ed4_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a59e6ed4_FieldIns _other) { return !this->operator==(_other); }


};
struct _1a59e7a84_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1a59e4d06_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1a5b4e46b_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a59e6ed4_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1a5a09cc7_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1a5a10e87_ReferenceStack> _field_Refers;
	_1a59e3de3_Operators _field_Operators;
	


};
struct _1a59eb989_OperandExprModel {
	jule::Ptr<_1a5b50d52_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1a59eb989_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1a59eb989_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1a59ebe84_BinaryExprModel {
	jule::Ptr<_1a59eb989_OperandExprModel> _field_Left;
	jule::Ptr<_1a59eb989_OperandExprModel> _field_Right;
	jule::Ptr<_1c80b653c_Token> _field_Op;
	

	inline bool operator==(_1a59ebe84_BinaryExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a59ebe84_BinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a59ec35d_UnaryExprModel {
	jule::Ptr<_1a5b19aeb_Data> _field_Expr;
	jule::Ptr<_1c80b653c_Token> _field_Op;
	

	inline bool operator==(_1a59ec35d_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a59ec35d_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a59ec88b_StructArgExprModel {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a59e6ed4_FieldIns> _field_Field;
	jule::Ptr<_1a5b19aeb_Data> _field_Expr;
	

	inline bool operator==(_1a59ec88b_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a59ec88b_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1a59ecc32_StructLitExprModel {
	jule::Ptr<_1a59e7a84_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1a59ec88b_StructArgExprModel>> _field_Args;
	


};
struct _1a59ed02e_AllocStructLitExprModel {
	jule::Ptr<_1a59ecc32_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1a59ed02e_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1a59ed02e_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a59ed5b2_CastingExprModel {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a5b19aeb_Data> _field_Expr;
	jule::Ptr<_1a5b50d52_TypeKind> _field_Kind;
	jule::Ptr<_1a5b50d52_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1a59ed5b2_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1a59ed5b2_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a59ede64_FnCallExprModel {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1a5a4bc4d_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1a59ee33d_SliceExprModel {
	jule::Ptr<_1a5b50d52_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1a59ee7e4_IndexingExprModel {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a5b19aeb_Data> _field_Expr;
	jule::Ptr<_1a5b19aeb_Data> _field_Index;
	

	inline bool operator==(_1a59ee7e4_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a59ee7e4_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a59eec9a_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _field_Captured;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	


};
struct _1a5a00174_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1a5a00174_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a5a00174_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a0062a_MapExprModel {
	jule::Ptr<_1a5b50d52_TypeKind> _field_KeyKind;
	jule::Ptr<_1a5b50d52_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1a5a00174_KeyValPairExprModel>> _field_Entries;
	


};
struct _1a5a00bad_SlicingExprModel {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1a5a00bad_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a5a00bad_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a01241_TraitSubIdentExprModel {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a5a09cc7_Fn> _field_Method;
	jule::Ptr<_1a5a1d181_Trait> _field_Trt;
	

	inline bool operator==(_1a5a01241_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1a5a01241_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a01ad2_StructSubIdentExprModel {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Ptr<_1a5b19aeb_Data> _field_Expr;
	jule::Ptr<_1a5a0cca8_FnIns> _field_Method;
	jule::Ptr<_1a59e6ed4_FieldIns> _field_Field;
	jule::Ptr<_1a59e7a84_StructIns> _field_Owner;
	

	inline bool operator==(_1a5a01ad2_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1a5a01ad2_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a01e78_StructStaticIdentExprModel {
	jule::Ptr<_1a59e7a84_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a5a0cca8_FnIns> _field_Method;
	

	inline bool operator==(_1a5a01e78_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1a5a01e78_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a02352_ArrayExprModel {
	jule::Ptr<_1a5b6024b_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1a5a0264e_TupleExprModel {
	jule::Slice<jule::Ptr<_1a5b19aeb_Data>> _field_Datas;
	


};
struct _1a5a02a28_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1a5a02a28_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a5a02a28_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a02e02_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1a5a02e02_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a5a02e02_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a032cb_BuiltinNewCallExprModel {
	jule::Ptr<_1a5b50d52_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1a5a032cb_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1a5a032cb_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a036a5_BuiltinPanicCallExprModel {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a5a036a5_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a5a036a5_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a03b5b_BuiltinAssertCallExprModel {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1a5a03b5b_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1a5a03b5b_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a04112_BuiltinMakeCallExprModel {
	jule::Ptr<_1a5b50d52_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1a5a04112_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1a5a04112_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a044db_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1a5a044db_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1a5a044db_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a047d8_BuiltinLenCallExprModel {
	jule::Ptr<_1a5b19aeb_Data> _field_Expr;
	

	inline bool operator==(_1a5a047d8_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a5a047d8_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a04ad5_BuiltinCapCallExprModel {
	jule::Ptr<_1a5b19aeb_Data> _field_Expr;
	

	inline bool operator==(_1a5a04ad5_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a5a04ad5_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a04eae_BuiltinDeleteCallExprModel {
	jule::Ptr<_1a5b19aeb_Data> _field_Dest;
	jule::Ptr<_1a5b19aeb_Data> _field_Key;
	

	inline bool operator==(_1a5a04eae_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1a5a04eae_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a05388_BuiltinCopyCallExprModel {
	jule::Ptr<_1a5b19aeb_Data> _field_Dest;
	jule::Ptr<_1a5b19aeb_Data> _field_Src;
	

	inline bool operator==(_1a5a05388_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1a5a05388_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a05762_BuiltinErrorCallExprModel {
	jule::Ptr<_1a5a0cca8_FnIns> _field_Func;
	jule::Ptr<_1a5b19aeb_Data> _field_Err;
	

	inline bool operator==(_1a5a05762_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1a5a05762_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a05e16_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a5a05e16_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a5a05e16_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a06103_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a5a06103_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a5a06103_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a0639a_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1a5a0639a_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1a5a0639a_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a06697_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a5a06697_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a5a06697_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a06a71_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1a5a06d6d_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a5a06d6d_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a5a06d6d_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1a5a07a72_RetType {
	jule::Ptr<_1a5b58024_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_Idents;
	


};
struct _1a5a08303_Param {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a5b58024_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a5a08303_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a5a08303_Param _other) { return !this->operator==(_other); }


};
struct _1a5a09cc7_Fn {
	jule::Ptr<_1a5a8e17a_Sema> _field_sema;
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a59c3389_Directive>> _field_Directives;
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>> _field_Generics;
	jule::Ptr<_1a5a07a72_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1a5a08303_Param>> _field_Params;
	jule::Ptr<_1a59e4d06_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1a5a0cca8_FnIns>> _field_Instances;
	


};
struct _1a5a0bc30_ParamIns {
	jule::Ptr<_1a5a08303_Param> _field_Decl;
	jule::Ptr<_1a5b50d52_TypeKind> _field_Kind;
	

	inline bool operator==(_1a5a0bc30_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a5a0bc30_ParamIns _other) { return !this->operator==(_other); }


};
struct _1a5a0cca8_FnIns {
	jule::Ptr<_1a59e7a84_StructIns> _field_Owner;
	jule::Ptr<_1a5a09cc7_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1a5b4e46b_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>> _field_Params;
	jule::Ptr<_1a5b50d52_TypeKind> _field_Result;
	jule::Ptr<_1a5a4bc4d_Scope> _field_Scope;
	jule::Ptr<_1a5a10e87_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Bool _field_AsAnon = false;
	jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1a5a10e87_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1a5a12494_Pass {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1a5a12494_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1a5a12494_Pass _other) { return !this->operator==(_other); }


};
struct _1a5a16e49_symbolBuilder {
	jule::Ptr<_1a5a16e49_symbolBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1d1c6d64c_Log> _field_errors;
	jule::Ptr<_1a59c2058_Ast> _field_ast;
	jule::Ptr<_1a5b14783_SymbolTable> _field_table;
	


};
struct _1a5a1d181_Trait {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1a5b58024_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a5a09cc7_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a59e4d06_Struct>> _field_Implemented;
	


};
struct _1a5a1ed20_EnumItem {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a5b1ac73_Value> _field_Value;
	

	inline bool operator==(_1a5a1ed20_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a5a1ed20_EnumItem _other) { return !this->operator==(_other); }


};
struct _1a5a2088c_Enum {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a5b58024_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a5a1ed20_EnumItem>> _field_Items;
	


};
struct _1a5a219c0_TypeEnumItem {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a5b58024_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1a5a219c0_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a5a219c0_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1a5a22097_TypeEnum {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a5a219c0_TypeEnumItem>> _field_Items;
	


};
struct _1a5a251ee_comptimeRange {
	jule::Trait _field_kind;
	

	inline bool operator==(_1a5a251ee_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a5a251ee_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1a5a25bc2_comptimeStructField {
	jule::Ptr<_1a59e6ed4_FieldIns> _field_field;
	

	inline bool operator==(_1a5a25bc2_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a5a25bc2_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1a5a27883_comptimeStructFields {
	jule::Slice<jule::Ptr<_1a59e6ed4_FieldIns>> _field_fields;
	


};
struct _1a5a28e7d_comptimeStatic {
	jule::Ptr<_1a5ab1ee4_Var> _field_field;
	

	inline bool operator==(_1a5a28e7d_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a5a28e7d_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1a5a2ab3e_comptimeStatics {
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _field_fields;
	


};
struct _1a5a2c239_comptimeEnumField {
	jule::Ptr<_1a5a1ed20_EnumItem> _field_field;
	

	inline bool operator==(_1a5a2c239_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a5a2c239_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1a5a2d5d1_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1a5a1ed20_EnumItem>> _field_fields;
	


};
struct _1a5a2ebcb_comptimeParam {
	jule::Ptr<_1a5a0bc30_ParamIns> _field_param;
	

	inline bool operator==(_1a5a2ebcb_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1a5a2ebcb_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1a5a31d65_comptimeParams {
	jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>> _field_params;
	


};
struct _1a5a3342c_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1a5a34a27_comptimeTypeInfo>> _field_types;
	


};
struct _1a5a34a27_comptimeTypeInfo {
	jule::Ptr<_1a5b50d52_TypeKind> _field_base;
	

	inline bool operator==(_1a5a34a27_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1a5a34a27_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1a5a3b039_comptimeValue {
	jule::Ptr<_1a5b19aeb_Data> _field_data;
	

	inline bool operator==(_1a5a3b039_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a5a3b039_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1a5a3d888_comptimeFiles {
	jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>> _field_files;
	


};
struct _1a5a3ee83_comptimeFile {
	jule::Ptr<_1a5b14783_SymbolTable> _field_file;
	

	inline bool operator==(_1a5a3ee83_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1a5a3ee83_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1a5a44493_constraintChecker {
	jule::Ptr<_1a5a8e17a_Sema> _field_s;
	jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1a5b4e46b_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _field_genericsA;
	jule::Ptr<_1a5a0cca8_FnIns> _field_fi;
	jule::Ptr<_1a59e7a84_StructIns> _field_si;
	jule::Ptr<_1c80b653c_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1a5a467e7_Impl {
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Base;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a5a09cc7_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _field_Statics;
	


};
struct _1a5a4bc4d_Scope {
	jule::Ptr<_1a5a4bc4d_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1a5a4c16b_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a5a4bc4d_Scope> _field_Scope;
	

	inline bool operator==(_1a5a4c16b_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a5a4c16b_If _other) { return !this->operator==(_other); }


};
struct _1a5a4c468_Else {
	jule::Ptr<_1a5a4bc4d_Scope> _field_Scope;
	

	inline bool operator==(_1a5a4c468_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a5a4c468_Else _other) { return !this->operator==(_other); }


};
struct _1a5a4c886_Conditional {
	jule::Slice<jule::Ptr<_1a5a4c16b_If>> _field_Elifs;
	jule::Ptr<_1a5a4c468_Else> _field_Default;
	


};
struct _1a5a4cb83_InfIter {
	jule::Ptr<_1a5a4bc4d_Scope> _field_Scope;
	

	inline bool operator==(_1a5a4cb83_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a5a4cb83_InfIter _other) { return !this->operator==(_other); }


};
struct _1a5a4d139_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a5a4bc4d_Scope> _field_Scope;
	

	inline bool operator==(_1a5a4d139_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a5a4d139_WhileIter _other) { return !this->operator==(_other); }


};
struct _1a5a4da85_RangeIter {
	jule::Ptr<_1a5b19aeb_Data> _field_Expr;
	jule::Ptr<_1a5a4bc4d_Scope> _field_Scope;
	jule::Ptr<_1a5ab1ee4_Var> _field_KeyA;
	jule::Ptr<_1a5ab1ee4_Var> _field_KeyB;
	

	inline bool operator==(_1a5a4da85_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a5a4da85_RangeIter _other) { return !this->operator==(_other); }


};
struct _1a5a4de1a_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1a5a4de1a_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1a5a4de1a_ContSt _other) { return !this->operator==(_other); }


};
struct _1a5a4e2e4_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1a5a4e2e4_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1a5a4e2e4_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a5a4e5e1_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1a5a4e5e1_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a5a4e5e1_Label _other) { return !this->operator==(_other); }


};
struct _1a5a4e9ba_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1a5a4e5e1_Label> _field_Label;
	

	inline bool operator==(_1a5a4e9ba_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a5a4e9ba_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a5a4ed94_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1a5a4ed94_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a5a4ed94_Postfix _other) { return !this->operator==(_other); }


};
struct _1a5a5034a_Assign {
	jule::Ptr<_1a59eb989_OperandExprModel> _field_Left;
	jule::Ptr<_1a59eb989_OperandExprModel> _field_Right;
	jule::Ptr<_1c80b653c_Token> _field_Op;
	

	inline bool operator==(_1a5a5034a_Assign _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a5a5034a_Assign _other) { return !this->operator==(_other); }


};
struct _1a5a50801_MultiAssign {
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1a5b19aeb_Data>> _field_Left;
	jule::Any _field_Right = jule::Any(nullptr);
	


};
struct _1a5a50e61_Match {
	jule::Ptr<_1a5b19aeb_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1a5a51989_Case>> _field_Cases;
	jule::Ptr<_1a5a51989_Case> _field_Default;
	


};
struct _1a5a51989_Case {
	jule::Ptr<_1a5a50e61_Match> _field_Owner;
	jule::Ptr<_1a5a4bc4d_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1a5b19aeb_Data>> _field_Exprs;
	jule::Ptr<_1a5a51989_Case> _field_Next;
	


};
struct _1a5a52182_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1a5a52182_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1a5a52182_FallSt _other) { return !this->operator==(_other); }


};
struct _1a5a52528_RetSt {
	jule::Ptr<_1a5a0cca8_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a5a52528_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a5a52528_RetSt _other) { return !this->operator==(_other); }


};
struct _1a5a52b88_scopeLabel {
	jule::Ptr<_1c80b653c_Token> _field_token;
	jule::Ptr<_1a5a4e5e1_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1a5a5420b_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1a5a52b88_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1a5a52b88_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1a5a5321b_scopeGoto {
	jule::Ptr<_1a5a4e9ba_GotoSt> _field_st;
	jule::Ptr<_1a59d192a_GotoSt> _field_gt;
	jule::Ptr<_1a5a5420b_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1a5a5321b_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a5a5321b_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1a5a5420b_scopeChecker {
	jule::Ptr<_1c80b653c_Token> _field_calledFrom;
	jule::Ptr<_1a5a8e17a_Sema> _field_s;
	jule::Ptr<_1a5a0cca8_FnIns> _field_owner;
	jule::Ptr<_1a5a5420b_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1a5b14783_SymbolTable> _field_table;
	jule::Ptr<_1a5a4bc4d_Scope> _field_scope;
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_tree;
	jule::Ptr<_1a5a0cca8_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1a5a52b88_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a5a5321b_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1a5a5420b_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_captured == _other._field_captured &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a5a5420b_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1a5a6783a_directiveChecker {
	jule::Ptr<_1a5a8e17a_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1a59c3389_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1a5a6783a_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1a5a6783a_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1a5a6dcd6_ImportInfo {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_Selected;
	jule::Ptr<_1a5a71c0c_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1a5a71c0c_Package {
	jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>> _field_Files;
	


};
struct _1a5a8d575_commonSemaMeta {
	jule::Slice<jule::Ptr<_1a5a34a27_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1a5a8e17a_Sema {
	jule::Slice<_1d1c6d64c_Log> _field_errors;
	jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>> _field_files;
	jule::Ptr<_1a5b14783_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1a5a8d575_commonSemaMeta> _field_meta;
	


};
struct _1a5aadd48_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1a5ab1ee4_Var {
	jule::Ptr<_1a5a4bc4d_Scope> _field_Scope;
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a5b58024_TypeSymbol> _field_Kind;
	jule::Ptr<_1a5b1ac73_Value> _field_Value;
	jule::Ptr<_1a5a10e87_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1a59c3389_Directive>> _field_Directives;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _field_Depends;
	


};
struct _1a5ab2d6e_FuncPattern {
	


};
struct _1a5b017b4_typeCompatibilityChecker {
	jule::Ptr<_1a5a8e17a_Sema> _field_s;
	jule::Ptr<_1a5b50d52_TypeKind> _field_dest;
	jule::Ptr<_1a5b50d52_TypeKind> _field_src;
	jule::Ptr<_1c80b653c_Token> _field_errorToken;
	

	inline bool operator==(_1a5b017b4_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a5b017b4_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1a5b03563_assignTypeChecker {
	jule::Ptr<_1a5a8e17a_Sema> _field_s;
	jule::Ptr<_1a5b50d52_TypeKind> _field_dest;
	jule::Ptr<_1a5b19aeb_Data> _field_d;
	jule::Ptr<_1c80b653c_Token> _field_errorToken;
	

	inline bool operator==(_1a5b03563_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a5b03563_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1a5b04e38_dynamicTypeAnnotation {
	jule::Ptr<_1a5b1b823_Eval> _field_e;
	jule::Ptr<_1a5a0cca8_FnIns> _field_f;
	jule::Ptr<_1a5a0bc30_ParamIns> _field_p;
	jule::Ptr<_1a5b19aeb_Data> _field_a;
	jule::Ptr<_1c80b653c_Token> _field_errorToken;
	jule::Ptr<_1a5b50d52_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> _field_ignored;
	


};
struct _1a5b09c95_fnCallArgChecker {
	jule::Ptr<_1a5b1b823_Eval> _field_e;
	jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _field_args;
	jule::Ptr<_1c80b653c_Token> _field_errorToken;
	jule::Ptr<_1a5a0cca8_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> _field_ignored;
	


};
struct _1a5b0cbcc_structLitChecker {
	jule::Ptr<_1a5b1b823_Eval> _field_e;
	jule::Ptr<_1c80b653c_Token> _field_errorToken;
	jule::Ptr<_1a59e7a84_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1a59ec88b_StructArgExprModel>> _field_args;
	


};
struct _1a5b0e9ae_rangeChecker {
	jule::Ptr<_1a5a5420b_scopeChecker> _field_sc;
	jule::Ptr<_1a59d8b63_RangeKind> _field_rang;
	jule::Ptr<_1a5a4da85_RangeIter> _field_Kind;
	jule::Ptr<_1a5b19aeb_Data> _field_d;
	

	inline bool operator==(_1a5b0e9ae_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a5b0e9ae_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1a5b12220_retTypeChecker {
	jule::Ptr<_1a5a5420b_scopeChecker> _field_sc;
	jule::Ptr<_1a5a0cca8_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _field_exprs;
	jule::Ptr<_1c80b653c_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1a5b14783_SymbolTable {
	jule::Ptr<_1c80bbcc3_File> _field_File;
	jule::Slice<_1a5a12494_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1a5a6dcd6_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1a59e4d06_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a5a09cc7_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1a5a1d181_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1a5a2088c_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1a5a22097_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1a5a467e7_Impl>> _field_Impls;
	


};
struct _1a5b19aeb_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1a5b50d52_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1b916c16d_Const> _field_Constant;
	

	inline bool operator==(_1a5b19aeb_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1a5b19aeb_Data _other) { return !this->operator==(_other); }


};
struct _1a5b1ac73_Value {
	jule::Ptr<_1a59c82a1_Expr> _field_Expr;
	jule::Ptr<_1a5b19aeb_Data> _field_Data;
	

	inline bool operator==(_1a5b1ac73_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a5b1ac73_Value _other) { return !this->operator==(_other); }


};
struct _1a5b1b823_Eval {
	jule::Ptr<_1a5a8e17a_Sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1a5b50d52_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1a5ab1ee4_Var> _field_owner;
	jule::Ptr<_1a59e6ed4_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1a5b1b823_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1a5b1b823_Eval _other) { return !this->operator==(_other); }


};
struct _1a5b3eda7_unaryEval {
	jule::Ptr<_1a5b1b823_Eval> _field_e;
	jule::Ptr<_1a5b19aeb_Data> _field_d;
	jule::Ptr<_1a59ca35d_UnaryExpr> _field_u;
	

	inline bool operator==(_1a5b3eda7_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a5b3eda7_unaryEval _other) { return !this->operator==(_other); }


};
struct _1a5b41d43_binaryEval {
	jule::Ptr<_1a5b1b823_Eval> _field_e;
	jule::Ptr<_1a5b19aeb_Data> _field_l;
	jule::Ptr<_1a5b19aeb_Data> _field_r;
	jule::Ptr<_1c80b653c_Token> _field_op;
	

	inline bool operator==(_1a5b41d43_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a5b41d43_binaryEval _other) { return !this->operator==(_other); }


};
struct _1a5b4e46b_InsGeneric {
	jule::Ptr<_1a5b50d52_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> _field_Constraint;
	


};
struct _1a5b50060_TypeAlias {
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a5b58024_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _field_Generics;
	


};
struct _1a5b50d52_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait _field_Kind;
	

	inline bool operator==(_1a5b50d52_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a5b50d52_TypeKind _other) { return !this->operator==(_other); }


};
struct _1a5b58024_TypeSymbol {
	jule::Ptr<_1a59c3e6c_TypeDecl> _field_Decl;
	jule::Ptr<_1a5b50d52_TypeKind> _field_Kind;
	

	inline bool operator==(_1a5b58024_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a5b58024_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1a5b5892b_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1a5b5892b_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a5b5892b_Prim _other) { return !this->operator==(_other); }


};
struct _1a5b5c457_Sptr {
	jule::Ptr<_1a5b50d52_TypeKind> _field_Elem;
	

	inline bool operator==(_1a5b5c457_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a5b5c457_Sptr _other) { return !this->operator==(_other); }


};
struct _1a5b5ce2a_Slc {
	jule::Ptr<_1a5b50d52_TypeKind> _field_Elem;
	

	inline bool operator==(_1a5b5ce2a_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a5b5ce2a_Slc _other) { return !this->operator==(_other); }


};
struct _1a5b5da1e_Tuple {
	jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> _field_Types;
	


};
struct _1a5b5e5be_Map {
	jule::Ptr<_1a5b50d52_TypeKind> _field_Key;
	jule::Ptr<_1a5b50d52_TypeKind> _field_Val;
	

	inline bool operator==(_1a5b5e5be_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a5b5e5be_Map _other) { return !this->operator==(_other); }


};
struct _1a5b6024b_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1a5b50d52_TypeKind> _field_Elem;
	

	inline bool operator==(_1a5b6024b_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a5b6024b_Arr _other) { return !this->operator==(_other); }


};
struct _1a5b60c1e_Ptr {
	jule::Ptr<_1a5b50d52_TypeKind> _field_Elem;
	

	inline bool operator==(_1a5b60c1e_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a5b60c1e_Ptr _other) { return !this->operator==(_other); }


};
struct _1a5b61c20_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1a5b61c20_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a5b61c20_referencer _other) { return !this->operator==(_other); }


};
struct _1a5b62c10_typeChecker {
	jule::Ptr<_1a5a8e17a_Sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1a5b61c20_referencer> _field_referencer;
	jule::Ptr<_1a5a10e87_ReferenceStack> _field_refers;
	jule::Ptr<_1c80b653c_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1a5b50060_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1a5b6a8b6_identTypeLookup {
	

	inline bool operator==(_1a5b6a8b6_identTypeLookup _other) { return true; }

	inline bool operator!=(_1a5b6a8b6_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1a682b884_FileInfo {
	jule::Ptr<_1a59c2058_Ast> _field_Ast;
	jule::Slice<_1d1c6d64c_Log> _field_Errors;
	


};
struct _1a68725de_stmt {
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1a6872e80_scopeParser {
	jule::Ptr<_1a689636b_parser> _field_p;
	jule::Ptr<_1a59d3e8d_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a68725de_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1a68808a5_exprBuilder {
	jule::Ptr<_1a689636b_parser> _field_p;
	

	inline bool operator==(_1a68808a5_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1a68808a5_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1a6892e6c_assignInfo {
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_l;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_r;
	jule::Ptr<_1c80b653c_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1a689636b_parser {
	jule::Ptr<_1a59c2058_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1a59c3389_Directive>> _field_directives;
	jule::Slice<_1d1c6d64c_Log> _field_errors;
	jule::Ptr<_1a68808a5_exprBuilder> _field_ep;
	


};
struct _1a68a848d_typeBuilder {
	jule::Ptr<_1a689636b_parser> _field_p;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1a5d6146e_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1a5d6146e_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1a5d6146e_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1a5d62948_directiveEval {
	jule::Slice<_1d1c6d64c_Log> _field_logs;
	jule::Ptr<_1a59c3389_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a68ac5c4_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1a5a6dcd6_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a68b3d17_ExprInspector {
	jule::Bool _field_SkipChild = false;
	jule::Fn<void,jule::Any*> _field_handler;
	


};
struct _1a68be196_OrderedDefines {
	jule::Slice<jule::Ptr<_1a59e4d06_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _field_Globals;
	


};
struct _1a69c95c0_liveTable {
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1a5a0cca8_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1a59e7a84_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1a5a1d181_Trait>> _field_traits;
	


};
struct _1a69c9999_ObjectDeadCode {
	_1a69c95c0_liveTable _field_live;
	jule::Ptr<_1a68b0055_IR> _field_ir;
	


};
struct _1a69cd5e6_scopeDeadCode {
	jule::Ptr<_1a69cd5e6_scopeDeadCode> _field_parent;
	jule::Ptr<_1a5a4bc4d_Scope> _field_s;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a5a4e5e1_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a5a4e9ba_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1a69cd5e6_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1a69cd5e6_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1a69d2ce3_exprDeadCode {
	jule::Ptr<_1a69cd5e6_scopeDeadCode> _field_s;
	

	inline bool operator==(_1a69d2ce3_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1a69d2ce3_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1c7998c88_ExceptionalForwardingExprModel {
	jule::Ptr<_1a59ede64_FnCallExprModel> _field_Expr;
	

	inline bool operator==(_1c7998c88_ExceptionalForwardingExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1c7998c88_ExceptionalForwardingExprModel _other) { return !this->operator==(_other); }


};
struct _1c799910c_SwapExprModel {
	jule::Ptr<_1a5b19aeb_Data> _field_Left;
	jule::Ptr<_1a5b19aeb_Data> _field_Right;
	

	inline bool operator==(_1c799910c_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c799910c_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1c79994d6_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1c79994d6_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1c79994d6_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1c799985a_RefExprModel {
	jule::Ptr<_1a5ab1ee4_Var> _field_Var;
	

	inline bool operator==(_1c799985a_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1c799985a_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1c7999ccd_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1b916c16d_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1c7999ccd_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1c7999ccd_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1c799a361_MutSlicingExprModel {
	jule::Ptr<_1c80b653c_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1c799a361_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1c799a361_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1c799a65d_UnsafeBinaryExprModel {
	jule::Ptr<_1a59ebe84_BinaryExprModel> _field_Node;
	

	inline bool operator==(_1c799a65d_UnsafeBinaryExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1c799a65d_UnsafeBinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1c799a9e3_UnsafeIndexingExprModel {
	jule::Ptr<_1a59ee7e4_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1c799a9e3_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1c799a9e3_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1c799adbc_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1a59ee33d_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1c799adbc_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1c799adbc_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c799b296_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1c799b296_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1c799b296_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1c799b670_StrRuneIter {
	jule::Ptr<_1a5b19aeb_Data> _field_Expr;
	jule::Ptr<_1a5a4da85_RangeIter> _field_Base;
	

	inline bool operator==(_1c799b670_StrRuneIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1c799b670_StrRuneIter _other) { return !this->operator==(_other); }


};
struct _1c799b96c_UnsafeDerefExprModel {
	jule::Ptr<_1a59ec35d_UnaryExprModel> _field_Base;
	

	inline bool operator==(_1c799b96c_UnsafeDerefExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1c799b96c_UnsafeDerefExprModel _other) { return !this->operator==(_other); }


};
struct _1c799bc69_UnsafeCastingExprModel {
	jule::Ptr<_1a59ed5b2_CastingExprModel> _field_Base;
	

	inline bool operator==(_1c799bc69_UnsafeCastingExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1c799bc69_UnsafeCastingExprModel _other) { return !this->operator==(_other); }


};
struct _1c799c94b_nilVar {
	jule::Uintptr _field_var = 0;
	jule::Bool _field_safe = false;
	

	inline bool operator==(_1c799c94b_nilVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_safe == _other._field_safe;
	}

	inline bool operator!=(_1c799c94b_nilVar _other) { return !this->operator==(_other); }


};
struct _1c799cc8c_nils {
	jule::Slice<_1c799c94b_nilVar> _field_vars;
	


};
struct _1a68c08b2_scopeOptimizer {
	jule::Ptr<_1a68c08b2_scopeOptimizer> _field_parent;
	jule::I64 _field_i = 0;
	jule::Ptr<_1a5a4bc4d_Scope> _field_scope;
	jule::Ptr<_1a68d098d_data> _field_data;
	

	inline bool operator==(_1a68c08b2_scopeOptimizer _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a68c08b2_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1a68c75cd_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1a68d098d_data> _field_data;
	

	inline bool operator==(_1a68c75cd_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a68c75cd_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1a68cc9bd_dynamicVar {
	jule::Uintptr _field_var = 0;
	jule::Ptr<_1a5b50d52_TypeKind> _field_kind;
	

	inline bool operator==(_1a68cc9bd_dynamicVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a68cc9bd_dynamicVar _other) { return !this->operator==(_other); }


};
struct _1a68ccd0e_dynamic {
	jule::Slice<_1a68cc9bd_dynamicVar> _field_vars;
	


};
struct _1a68d098d_data {
	jule::Ptr<_1a68d241d_boundary> _field_boundary;
	jule::Ptr<_1c799cc8c_nils> _field_nils;
	jule::Ptr<_1a68ccd0e_dynamic> _field_dynamic;
	

	inline bool operator==(_1a68d098d_data _other) {
		return 
			this->_field_boundary == _other._field_boundary &&
			this->_field_nils == _other._field_nils &&
			this->_field_dynamic == _other._field_dynamic;
	}

	inline bool operator!=(_1a68d098d_data _other) { return !this->operator==(_other); }


};
struct _1a68d20cc_boundaryVar {
	jule::Uintptr _field_var = 0;
	jule::Slice<jule::Any> _field_maxSize;
	


};
struct _1a68d241d_boundary {
	jule::Slice<_1a68d20cc_boundaryVar> _field_vars;
	


};
struct _1a69d3e7b_Optimizer {
	jule::Ptr<_1a68b0055_IR> _field_ir;
	

	inline bool operator==(_1a69d3e7b_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a69d3e7b_Optimizer _other) { return !this->operator==(_other); }


};
struct _1a6a10293_AnsiEscape {
	

	inline bool operator==(_1a6a10293_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a6a10293_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1a6a11816_Logger {
	

	inline bool operator==(_1a6a11816_Logger _other) { return true; }

	inline bool operator!=(_1a6a11816_Logger _other) { return !this->operator==(_other); }


};
struct _1a7570bb0_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1a7570bb0_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1a7570bb0_AbsTime _other) { return !this->operator==(_other); }


};
struct _1a7571386_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1a7571386_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a7571386_Time _other) { return !this->operator==(_other); }


};
struct _1a6a6b3a9_scopeCoder {
	jule::Ptr<_1a757b913_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a6a6b3a9_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a6a6b3a9_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1a74ab1d3_exprCoder {
	jule::Ptr<_1a757b913_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a5ab1ee4_Var>>> _field_varPrefixes;
	


};
struct _1a74bb9da_TestCoder {
	jule::Ptr<_1a59e7a84_StructIns> _field_t;
	jule::Ptr<_1a5a09cc7_Fn> _field_tmReset;
	jule::Ptr<_1a5a09cc7_Fn> _field_tmFailed;
	jule::Ptr<_1a5a09cc7_Fn> _field_tmSkipped;
	jule::Ptr<_1a757b913_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a74bb9da_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a74bb9da_TestCoder _other) { return !this->operator==(_other); }


};
struct _1a74be966_identCoder {
	

	inline bool operator==(_1a74be966_identCoder _other) { return true; }

	inline bool operator!=(_1a74be966_identCoder _other) { return !this->operator==(_other); }


};
struct _1a7579b64_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1a7579b64_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1a7579b64_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a757a082_traitCast {
	jule::Ptr<_1a5a1d181_Trait> _field_t1;
	jule::Ptr<_1a5a1d181_Trait> _field_t2;
	

	inline bool operator==(_1a757a082_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1a757a082_traitCast _other) { return !this->operator==(_other); }


};
struct _1a757a45b_anonHash {
	jule::Ptr<_1a59eec9a_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

	inline bool operator==(_1a757a45b_anonHash _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a757a45b_anonHash _other) { return !this->operator==(_other); }


};
struct _1a757b913_ObjectCoder {
	_1e9a030bc_StrBuilder _field_Buf;
	_1e9a030bc_StrBuilder _field_resultDecls;
	_1e9a030bc_StrBuilder _field_anyObj;
	_1e9a030bc_StrBuilder _field_anonObj;
	_1e9a030bc_StrBuilder _field_deallocObj;
	jule::Ptr<_1a68b0055_IR> _field_ir;
	_1a7579b64_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a757a45b_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1a757a082_traitCast> _field_traitCastMap;
	jule::Map<jule::Ptr<_1a5a0cca8_FnIns>,jule::Slice<jule::Uintptr>> _field_traitMetMap;
	jule::Ptr<_1a74ab1d3_exprCoder> _field_ec;
	jule::Ptr<_1a6a6b3a9_scopeCoder> _field_sc;
	jule::Ptr<_1a758b6d1_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	jule::I64 _field_wrapPos = 0;
	


};
struct _1a758aa98_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1a758aa98_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a758aa98_customType _other) { return !this->operator==(_other); }


};
struct _1a758b6d1_typeCoder {
	jule::Ptr<_1a757b913_ObjectCoder> _field_oc;
	jule::Ptr<_1a75942bb_resultCoder> _field_rc;
	

	inline bool operator==(_1a758b6d1_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1a758b6d1_typeCoder _other) { return !this->operator==(_other); }


};
struct _1a75942bb_resultCoder {
	jule::Ptr<_1a758b6d1_typeCoder> _field_tc;
	

	inline bool operator==(_1a75942bb_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1a75942bb_resultCoder _other) { return !this->operator==(_other); }


};
struct _1aac5ee4a_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1aac5ee4a_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1aac5ee4a_Flag _other) { return !this->operator==(_other); }


};struct _1aac639ed_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1aac639ed_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1aac639ed_Flag _other) { return !this->operator==(_other); }


};struct _1aac67161_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1aac67161_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1aac67161_Flag _other) { return !this->operator==(_other); }


};struct _1aac6a818_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1aac6a818_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1aac6a818_Flag _other) { return !this->operator==(_other); }


};struct _1aac6de7b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1aac6de7b_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1aac6de7b_Flag _other) { return !this->operator==(_other); }


};
struct _1a668eb59_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	


};
struct _1a669261d_argParser {
	_1a668eb59_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1d1d2a7b4_Cmd {
	_1d1d2ea0a_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct _1a68d0493_dataCheckpoint {
	_1a68d241d_boundary _field_boundary;
	_1c799cc8c_nils _field_nils;
	_1a68ccd0e_dynamic _field_dynamic;
	


};
struct _1a68b0055_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1a5a71c0c_Package> _field_Main;
	jule::Slice<jule::Ptr<_1a5a6dcd6_ImportInfo>> _field_Used;
	_1a68be196_OrderedDefines _field_Ordered;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a5b19aeb_Data__jule_tuple_x_1a5b19aeb_Data {
	jule::Ptr<_1a5b19aeb_Data> __jule_result_arg0;
	jule::Ptr<_1a5b19aeb_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1a5b19aeb_Data__jule_tuple_bool {
	jule::Ptr<_1a5b19aeb_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a59c82a1_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a59c82a1_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a59dae40_Case__jule_tuple_bool {
	jule::Ptr<_1a59dae40_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a59dae40_Case__jule_tuple_x_1a59d9c96_Else {
	jule::Slice<jule::Ptr<_1a59dae40_Case>> __jule_result_arg0;
	jule::Ptr<_1a59d9c96_Else> __jule_result_arg1;
};
struct __jule_tuple__1a59d35ca_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a59d291a_AssignSt__jule_tuple_bool {
	jule::Ptr<_1a59d291a_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1a59c3e6c_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a59c6d60_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1a59c6d60_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log {
	jule::Slice<jule::Ptr<_1a59c2058_Ast>> __jule_result_arg0;
	jule::Slice<_1d1c6d64c_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1d1c6d64c_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1d1c6d64c_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a5a0cca8_FnIns__jule_tuple_bool {
	jule::Ptr<_1a5a0cca8_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a68b0055_IR__jule_tuple_s_1d1c6d64c_Log {
	jule::Ptr<_1a68b0055_IR> __jule_result_arg0;
	jule::Slice<_1d1c6d64c_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1b8a0782d_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1b8a0782d_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1b8a0782d_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1b8a0782d_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a5b14783_SymbolTable__jule_tuple_s_1d1c6d64c_Log {
	jule::Ptr<_1a5b14783_SymbolTable> __jule_result_arg0;
	jule::Slice<_1d1c6d64c_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a5a71c0c_Package__jule_tuple_s_1d1c6d64c_Log {
	jule::Ptr<_1a5a71c0c_Package> __jule_result_arg0;
	jule::Slice<_1d1c6d64c_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log {
	jule::Ptr<_1a59c2058_Ast> __jule_result_arg0;
	jule::Slice<_1d1c6d64c_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c80b653c_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1c80b653c_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c80b653c_Token__jule_tuple_sx_1c80b653c_Token {
	jule::Slice<jule::Ptr<_1c80b653c_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1c80b653c_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1c80b653c_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> __jule_result_arg0;
	jule::Slice<_1d1c6d64c_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _1e9a030bc_StrBuilder static__1e9a034eb_New(jule::I64 _1516_cap);
inline void _1e9a037a4_Write(_1e9a030bc_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b);
inline void _1e9a03a5c_WriteStr(_1e9a030bc_StrBuilder* _self_, jule::Str _3024_s);
inline void _1e9a03d15_WriteByte(_1e9a030bc_StrBuilder* _self_, jule::U8 _3525_b);
inline jule::Str _1e9a04354_Str(_1e9a030bc_StrBuilder* _self_);
inline void _1e9a04552_Clear(_1e9a030bc_StrBuilder* _self_);
inline jule::I64 _1e9a047d8_Len(_1e9a030bc_StrBuilder* _self_);
inline jule::Slice<jule::U8> _1e9a04d05_Buf(_1e9a030bc_StrBuilder* _self_);
inline void _1e9a050ad_SetBuf(_1e9a030bc_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf);
inline jule::U8 _1d190bd46_index(_1d190b8b2_lazyBuff* _self_, jule::I64 _5521_i);
inline void _1d190c0ee_append(_1d190b8b2_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _1d190c385_string(_1d190b8b2_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_21467189c_DirEntry>>> static__1d190e750_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__1d190e981_Create(jule::Str _3919_path);
inline jule::VoidExceptional static__1d190ebb2_Remove(jule::Str _5319_path);
inline jule::Ptr<_214672d32_File> static__214673250_New(jule::Uintptr _4516_handle);
inline jule::Exceptional<jule::Ptr<_214672d32_File>> static__214673519_Create(jule::Str _5519_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__2146737d3_Read(jule::Str _6717_path);
inline jule::VoidExceptional static__214673b79_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm);
inline jule::VoidExceptional _2146743b6_Close(_214672d32_File* _self_);
inline jule::Exceptional<jule::Ptr<_214672d32_File>> static__21356c018_Open(jule::Str _2217_path, jule::I64 _2228_flag, jule::I64 _2241_mode);
inline jule::VoidExceptional static__21356c249_Remove(jule::Str _3519_path);
inline jule::Exceptional<jule::I64> _21356c6cd_Write(_214672d32_File* _self_, jule::Slice<jule::U8> _5021_buf);
inline jule::Exceptional<jule::I64> _21356ca1e_Read(_214672d32_File* _self_, jule::Slice<jule::U8> _8124_buf);
inline jule::Bool _214675340_IsDir(_214674e66_Status* _self_);
inline jule::Bool _2146755c6_IsReg(_214674e66_Status* _self_);
inline jule::U64 _21467585c_Size(_214674e66_Status* _self_);
inline jule::Exceptional<jule::Ptr<_214674e66_Status>> static__1d191061e_Of(jule::Str _1215_path);
inline jule::Bool _1b91513a5_set(_1b9159974_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1b91516e6_floatBits(_1b9159974_decimal* _self_, _1b914608c_floatInfo* _33226_flt);
inline void _1b9159d2b_assign(_1b9159974_decimal* _self_, jule::U64 _15126_v);
inline void _1b915a0d4_shift(_1b9159974_decimal* _self_, jule::I64 _17625_k);
inline void _1b915a38c_roundDown(_1b9159974_decimal* _self_, jule::I64 _19625_nd);
inline void _1b915a645_roundUp(_1b9159974_decimal* _self_, jule::I64 _20523_nd);
inline void _1b915a8ed_round(_1b9159974_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _1b915ab84_roundedInteger(_1b9159974_decimal* _self_);
inline jule::Ptr<_1b916c16d_Const> static__1b916c5ad_NewI64(jule::I64 _1619_x);
inline jule::Ptr<_1b916c16d_Const> static__1b916c877_NewU64(jule::U64 _1919_x);
inline jule::Ptr<_1b916c16d_Const> static__1b916cb41_NewBool(jule::Bool _2220_x);
inline jule::Ptr<_1b916c16d_Const> static__1b916ce0a_NewStr(jule::Str _2519_x);
inline jule::Ptr<_1b916c16d_Const> static__1b916d1c4_NewF64(jule::F64 _2819_x);
inline jule::Ptr<_1b916c16d_Const> static__1b916d3d3_NewNil(void);
inline jule::I64 _1b916da43_ReadI64(_1b916c16d_Const* _self_);
inline jule::U64 _1b916dcc9_ReadU64(_1b916c16d_Const* _self_);
inline jule::Bool _1b916e060_ReadBool(_1b916c16d_Const* _self_);
inline jule::Str _1b916e2e6_ReadStr(_1b916c16d_Const* _self_);
inline jule::F64 _1b916e57c_ReadF64(_1b916c16d_Const* _self_);
inline jule::I64 _1b916e813_AsI64(_1b916c16d_Const* _self_);
inline jule::U64 _1b916ea99_AsU64(_1b916c16d_Const* _self_);
inline jule::F64 _1b916ed30_AsF64(_1b916c16d_Const* _self_);
inline void _1b91700d8_SetI64(_1b916c16d_Const* _self_, jule::I64 _13822_x);
inline void _1b9170391_SetU64(_1b916c16d_Const* _self_, jule::U64 _14122_x);
inline void _1b9170649_SetBool(_1b916c16d_Const* _self_, jule::Bool _14423_x);
inline void _1b9170902_SetStr(_1b916c16d_Const* _self_, jule::Str _14722_x);
inline void _1b9170baa_SetF64(_1b916c16d_Const* _self_, jule::F64 _15022_x);
inline jule::Bool _1b917113e_IsI64(_1b916c16d_Const* _self_);
inline jule::Bool _1b91713c5_IsU64(_1b916c16d_Const* _self_);
inline jule::Bool _1b917165b_IsBool(_1b916c16d_Const* _self_);
inline jule::Bool _1b91718e2_IsStr(_1b916c16d_Const* _self_);
inline jule::Bool _1b9171b78_IsF64(_1b916c16d_Const* _self_);
inline jule::Bool _1b9171e0e_IsNil(_1b916c16d_Const* _self_);
inline jule::Bool _1b9172591_And(_1b916c16d_Const* _self_, _1b916c16d_Const _23815_x);
inline jule::Bool _1b91728d2_Or(_1b916c16d_Const* _self_, _1b916c16d_Const _24914_x);
inline jule::Bool _1b9173d78_Add(_1b916c16d_Const* _self_, _1b916c16d_Const _37719_x);
inline jule::Bool _1b91741b9_Sub(_1b916c16d_Const* _self_, _1b916c16d_Const _40619_x);
inline jule::Bool _1b917450a_Mul(_1b916c16d_Const* _self_, _1b916c16d_Const _43019_x);
inline jule::Bool _1b917484b_Div(_1b916c16d_Const* _self_, _1b916c16d_Const _45819_x);
inline jule::Bool _1b9174b8c_Mod(_1b916c16d_Const* _self_, _1b916c16d_Const _48719_x);
inline jule::Bool _1b9174ecd_BitwiseAnd(_1b916c16d_Const* _self_, _1b916c16d_Const _50926_x);
inline jule::Bool _1b917531e_BitwiseOr(_1b916c16d_Const* _self_, _1b916c16d_Const _52325_x);
inline jule::Bool _1b9175660_Xor(_1b916c16d_Const* _self_, _1b916c16d_Const _53719_x);
inline jule::Bool _1b91759a1_Lshift(_1b916c16d_Const* _self_, _1b916c16d_Const _55122_x);
inline jule::Bool _1b9175ce2_Rshift(_1b916c16d_Const* _self_, _1b916c16d_Const _57122_x);
inline jule::U8 _1c80b68b1_Prec(_1c80b653c_Token* _self_);
inline void _1c80bc1e1_Fill(_1c80bbcc3_File* _self_, jule::Slice<jule::U8> _1724_data);
inline jule::Str _1c80bc477_Dir(_1c80bbcc3_File* _self_);
inline jule::Str _1c80bc70d_Name(_1c80bbcc3_File* _self_);
inline jule::Str _1c80bccd5_GetRow(_1c80bbcc3_File* _self_, jule::I64 _3818_row);
inline void _1c80c5491_pushErr(_1c80c4e0d_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args);
inline void _1c80c5a02_lex(_1c80c4e0d_lex* _self_);
inline jule::Str _1c80c5d43_id(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _47119_ln);
inline jule::Slice<jule::U8> _1c80c60c9_resume(_1c80c4e0d_lex* _self_);
inline void _1c80c6382_lexLineComment(_1c80c4e0d_lex* _self_, jule::Ptr<_1c80b653c_Token>* _52135_token);
inline void _1c80c663a_lexRangeComment(_1c80c4e0d_lex* _self_, jule::Ptr<_1c80b653c_Token>* _53636_token);
inline jule::Str _1c80c697b_num(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _56420_txt);
inline jule::Str _1c80c6cbc_escapeSeq(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _58626_txt);
inline jule::Str _1c80c71b8_getRune(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw);
inline jule::Str _1a59bea17_lexRune(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _62524_txt);
inline jule::Str _1a59bec15_lexStr(_1c80c4e0d_lex* _self_);
inline void _1a59c0199_newLine(_1c80c4e0d_lex* _self_);
inline jule::Bool _1a59c070a_isOp(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1c80b653c_Token>* _70763_t);
inline jule::Bool _1a59c0b06_lexBasicOps(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1c80b653c_Token>* _71745_tok);
inline jule::Bool _1a59c1002_lexId(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1c80b653c_Token>* _72640_t);
inline jule::Bool _1a59c13ed_lexNum(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1c80b653c_Token>* _73641_t);
inline jule::Ptr<_1c80b653c_Token> _1a59c1684_token(_1c80c4e0d_lex* _self_);
inline jule::Bool _1a59c5d09_IsUnsafe(_1a59c5996_PtrTypeDecl* _self_);
inline jule::Bool _1a59c659b_AutoSized(_1a59c6238_ArrTypeDecl* _self_);
inline jule::Bool _1a59cc34e_Unhandled(_1a59cbeca_FnCallExpr* _self_);
inline jule::Bool _1a59cc5d5_Ignored(_1a59cbeca_FnCallExpr* _self_);
inline jule::Bool _1a59d4a4e_IsSelf(_1a59d46ca_ParamDecl* _self_);
inline jule::Bool _1a59d5e90_IsAnon(_1a59d5b2c_FnDecl* _self_);
inline jule::Bool _1a59d7c94_IsInf(_1a59d7931_Iter* _self_);
inline jule::Bool _1a59d85be_IsWhileNext(_1a59d825b_WhileKind* _self_);
inline jule::Ptr<_1a59e6ed4_FieldIns> _1a59e2287_instance(jule::Ptr<_1a59e1dd0_Field> _self_);
inline jule::Ptr<_1a59e7a84_StructIns> _1a59e5268_instance(jule::Ptr<_1a59e4d06_Struct> _self_);
inline jule::Ptr<_1a59e7a84_StructIns> _1a59e5576_appendInstance(_1a59e4d06_Struct* _self_, jule::Ptr<_1a59e7a84_StructIns>* _13435_ins);
inline jule::Ptr<_1a5a09cc7_Fn> _1a59e5972_FindMethod(_1a59e4d06_Struct* _self_, jule::Str _15226_ident, jule::Bool _15238_statically);
inline jule::Ptr<_1a5ab1ee4_Var> _1a59e5cb3_FindStatic(_1a59e4d06_Struct* _self_, jule::Str _16326_ident);
inline jule::Ptr<_1a59e1dd0_Field> _1a59e6104_FindField(_1a59e4d06_Struct* _self_, jule::Str _17425_ident);
inline jule::Bool _1a59e6445_IsImplements(_1a59e4d06_Struct* _self_, jule::Ptr<_1a5a1d181_Trait> _18424_t);
inline jule::Bool _1a59e6786_IsUses(_1a59e4d06_Struct* _self_, jule::Ptr<_1a59e4d06_Struct> _19418_s);
inline jule::Str _1a59e7e08_Str(_1a59e7a84_StructIns* _self_);
inline jule::Bool _1a59e8249_Equal(jule::Ptr<_1a59e7a84_StructIns> _self_, jule::Ptr<_1a5b50d52_TypeKind> _25518_other);
inline jule::Bool _1a59e8700_Same(_1a59e7a84_StructIns* _self_, jule::Ptr<_1a59e7a84_StructIns> _28316_s);
inline jule::Ptr<_1a5a09cc7_Fn> _1a59e8aeb_FindMethod(_1a59e7a84_StructIns* _self_, jule::Str _29826_ident, jule::Bool _29838_statically);
inline jule::Ptr<_1a59e6ed4_FieldIns> _1a59e8e3c_FindField(_1a59e7a84_StructIns* _self_, jule::Str _30925_ident);
inline jule::Ptr<_1a5ab1ee4_Var> _1a59e927d_FindStatic(_1a59e7a84_StructIns* _self_, jule::Str _32026_ident);
inline jule::Ptr<_1a5a0bc30_ParamIns> _1a5a08688_instance(jule::Ptr<_1a5a08303_Param> _self_);
inline jule::Bool _1a5a0891e_IsSelf(_1a5a08303_Param* _self_);
inline jule::Bool _1a5a08ba5_IsRef(_1a5a08303_Param* _self_);
inline jule::Bool _1a5a0a24a_IsVoid(_1a5a09cc7_Fn* _self_);
inline jule::Bool _1a5a0a4d1_IsMethod(_1a5a09cc7_Fn* _self_);
inline jule::Bool _1a5a0a767_IsEntryPoint(_1a5a09cc7_Fn* _self_);
inline jule::Bool _1a5a0a9ed_IsInit(_1a5a09cc7_Fn* _self_);
inline jule::Bool _1a5a0ac84_IsAnon(_1a5a09cc7_Fn* _self_);
inline jule::Bool _1a5a0b01a_AnyVar(_1a5a09cc7_Fn* _self_);
inline jule::Ptr<_1a5a0cca8_FnIns> _1a5a0b2a1_instanceForce(jule::Ptr<_1a5a09cc7_Fn> _self_);
inline jule::Ptr<_1a5a0cca8_FnIns> _1a5a0b537_instance(jule::Ptr<_1a5a09cc7_Fn> _self_);
inline jule::Ptr<_1a5a0cca8_FnIns> _1a5a0b845_appendInstance(_1a5a09cc7_Fn* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _12935_ins);
inline jule::Str _1a5a0c093_Str(_1a5a0bc30_ParamIns* _self_);
inline jule::Str _1a5a0d0e9_Str(_1a5a0cca8_FnIns* _self_);
inline jule::Bool _1a5a0d43a_Equal(jule::Ptr<_1a5a0cca8_FnIns> _self_, jule::Ptr<_1a5b50d52_TypeKind> _21918_other);
inline jule::Bool _1a5a0d8d0_EqualFn(jule::Ptr<_1a5a0cca8_FnIns> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _23021_f);
inline jule::Bool _1a5a0dc21_equalTrait(jule::Ptr<_1a5a0cca8_FnIns> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _28924_other);
inline jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> _1a5a0dea7_Types(_1a5a0cca8_FnIns* _self_);
inline jule::Bool _1a5a0e23d_IsBuiltin(_1a5a0cca8_FnIns* _self_);
inline jule::Bool _1a5a0e4c4_IsAnon(_1a5a0cca8_FnIns* _self_);
inline jule::Bool _1a5a0e815_Same(_1a5a0cca8_FnIns* _self_, jule::Ptr<_1a5a0cca8_FnIns> _33216_f);
inline jule::Str _1a5a0eb56_GetKindStr(_1a5a0cca8_FnIns* _self_, jule::Bool _34922_ident);
inline jule::Ptr<_1a5a10e87_ReferenceStack> static__1a5a11273_new(void);
inline jule::I64 _1a5a1166e_Len(_1a5a10e87_ReferenceStack* _self_);
inline jule::Any _1a5a119b0_At(_1a5a10e87_ReferenceStack* _self_, jule::I64 _6818_i);
inline void _1a5a11c68_Push(_1a5a10e87_ReferenceStack* _self_, jule::Any _7324_ref);
inline jule::Bool _1a97ec39b_Exist(_1a5a10e87_ReferenceStack* _self_, jule::Ptr<_1a5a0cca8_FnIns> _7820_t);
inline jule::Bool _1a9813280_Exist(_1a5a10e87_ReferenceStack* _self_, jule::Ptr<_1a5ab1ee4_Var> _7820_t);
inline jule::Bool _1a8c3b269_Exist(_1a5a10e87_ReferenceStack* _self_, jule::Ptr<_1a59e7a84_StructIns> _7820_t);
inline jule::Bool _1a9b84205_Exist(_1a5a10e87_ReferenceStack* _self_, jule::Ptr<_1a5a1d181_Trait> _7820_t);
inline void _1a5a178ea_pushErr(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1c80b653c_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args);
inline void _1a5a1817b_pushSuggestion(_1a5a16e49_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args);
inline jule::Bool _1a5a18577_checkCppUseDeclPath(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a59dc073_UseDecl>* _34536_decl, jule::Str* _34553_path);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a18885_buildCppHeaderImport(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a59dc073_UseDecl>* _36541_decl);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a18bc6_buildStdImport(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a59dc073_UseDecl>* _39335_decl);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a19017_buildIdentImport(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a59dc073_UseDecl>* _43338_decl);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a19358_buildImport(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a59dc073_UseDecl>* _48733_decl);
inline jule::Bool _1a5a19699_checkDuplicateUseDecl(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _49838_pkg);
inline void _1a5a19a0c_implImportSelections(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _51241_imp, jule::Ptr<_1a59dc073_UseDecl>* _51264_decl);
inline jule::Str _1a5a19d4d_getAsLinkPath(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Str _52734_path);
inline void _1a5a1a26b_pushCycleError(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a5a16e49_symbolBuilder>* _54132_sb, jule::Str _54152_path, _1e9a030bc_StrBuilder* _54168_message);
inline void _1a5a1a689_pushCrossCycleError(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a5a16e49_symbolBuilder>* _55437_target, jule::Ptr<_1a5a6dcd6_ImportInfo>* _55462_imp, jule::Ptr<_1c80b653c_Token>* _55481_errorToken);
inline jule::Bool _1a5a1aa85_checkImportCycles(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a5a6dcd6_ImportInfo> _57734_imp, jule::Ptr<_1a59dc073_UseDecl>* _57753_decl);
inline void _1a5a1aea3_checkPackageAccessibility(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a59dc073_UseDecl>* _60842_decl, jule::Str* _60859_mod, jule::Str* _60870_path);
inline jule::Bool _1a5a1b39e_importPackage(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _61435_imp, jule::Ptr<_1a59dc073_UseDecl>* _61458_decl);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a1b6e0_importUseDecl(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a59dc073_UseDecl>* _66135_decl);
inline void _1a5a1b8dd_importUseDecls(jule::Ptr<_1a5a16e49_symbolBuilder> _self_);
inline void _1a5a1bb96_appendNode(_1a5a16e49_symbolBuilder* _self_, _1a59c2e6b_Node* _69231_node);
inline void _1a5a1bd94_appendNodes(_1a5a16e49_symbolBuilder* _self_);
inline void _1a5a1c14c_pushDirectivePass(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a59c3389_Directive>* _72838_d);
inline void _1a5a1c34a_appendTopDirectives(_1a5a16e49_symbolBuilder* _self_);
inline void _1a5a1c548_build(jule::Ptr<_1a5a16e49_symbolBuilder> _self_);
inline jule::Str _1a5a1d549_Str(_1a5a1d181_Trait* _self_);
inline jule::Bool _1a5a1d88a_Equal(jule::Ptr<_1a5a1d181_Trait> _self_, jule::Ptr<_1a5b50d52_TypeKind> _2518_other);
inline jule::Ptr<_1a5a09cc7_Fn> _1a5a1dd30_FindMethod(_1a5a1d181_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1a5a09cc7_Fn> _1a5a1e4b2_findMethodInherit(_1a5a1d181_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1a5a201c7_AutoExpr(_1a5a1ed20_EnumItem* _self_);
inline jule::Str _1a5a20c11_Str(_1a5a2088c_Enum* _self_);
inline jule::Bool _1a5a21052_Equal(jule::Ptr<_1a5a2088c_Enum> _self_, jule::Ptr<_1a5b50d52_TypeKind> _3818_other);
inline jule::Ptr<_1a5a1ed20_EnumItem> _1a5a21481_FindItem(_1a5a2088c_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1a5a223d8_Str(_1a5a22097_TypeEnum* _self_);
inline jule::Bool _1a5a22729_Equal(jule::Ptr<_1a5a22097_TypeEnum> _self_, jule::Ptr<_1a5b50d52_TypeKind> _8018_other);
inline jule::Ptr<_1a5a219c0_TypeEnumItem> _1a5a22b58_FindItem(_1a5a22097_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1a5a25573_Str(_1a5a251ee_comptimeRange* _self_);
inline jule::Bool _1a5a258b4_Equal(jule::Ptr<_1a5a251ee_comptimeRange> _self_, jule::Ptr<_1a5b50d52_TypeKind> _3618_other);
inline jule::Str _1a5a2608a_Str(_1a5a25bc2_comptimeStructField* _self_);
inline jule::Bool _1a5a263cb_Equal(jule::Ptr<_1a5a25bc2_comptimeStructField> _self_, jule::Ptr<_1a5b50d52_TypeKind> _4618_other);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a26970__Name(jule::Ptr<_1a5a25bc2_comptimeStructField> _self_, jule::Ptr<_1a5b1b823_Eval>* _5023_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _5038_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a26d6b__Type(jule::Ptr<_1a5a25bc2_comptimeStructField> _self_, jule::Ptr<_1a5b1b823_Eval>* _6327_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _6342_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a27267__Public(jule::Ptr<_1a5a25bc2_comptimeStructField> _self_, jule::Ptr<_1a5b1b823_Eval>* _7129_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _7144_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a27575_subIdent(jule::Ptr<_1a5a25bc2_comptimeStructField> _self_, jule::Str* _8426_ident);
inline jule::Str _1a5a27c07_Str(_1a5a27883_comptimeStructFields* _self_);
inline jule::Bool _1a5a28048_Equal(jule::Ptr<_1a5a27883_comptimeStructFields> _self_, jule::Ptr<_1a5b50d52_TypeKind> _12018_other);
inline void _1a5a284bb_ready(_1a5a27883_comptimeStructFields* _self_, jule::Ptr<_1a5ab1ee4_Var>* _12426_keyA, jule::Ptr<_1a5ab1ee4_Var>* _12443_keyB);
inline void _1a5a288d9_step(_1a5a27883_comptimeStructFields* _self_, jule::I64 _14520_i, jule::Ptr<_1a5ab1ee4_Var>* _14533_keyA, jule::Ptr<_1a5ab1ee4_Var>* _14550_keyB);
inline jule::I64 _1a5a28b70_len(_1a5a27883_comptimeStructFields* _self_);
inline jule::Str _1a5a29302_Str(_1a5a28e7d_comptimeStatic* _self_);
inline jule::Bool _1a5a29643_Equal(jule::Ptr<_1a5a28e7d_comptimeStatic> _self_, jule::Ptr<_1a5b50d52_TypeKind> _16918_other);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a29c70__Name(jule::Ptr<_1a5a28e7d_comptimeStatic> _self_, jule::Ptr<_1a5b1b823_Eval>* _17323_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _17338_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a2a16b__Type(jule::Ptr<_1a5a28e7d_comptimeStatic> _self_, jule::Ptr<_1a5b1b823_Eval>* _18627_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _18642_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a2a567__Public(jule::Ptr<_1a5a28e7d_comptimeStatic> _self_, jule::Ptr<_1a5b1b823_Eval>* _19429_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _19444_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a2a8a8_subIdent(jule::Ptr<_1a5a28e7d_comptimeStatic> _self_, jule::Str* _20726_ident);
inline jule::Str _1a5a2aeb3_Str(_1a5a2ab3e_comptimeStatics* _self_);
inline jule::Bool _1a5a2b304_Equal(jule::Ptr<_1a5a2ab3e_comptimeStatics> _self_, jule::Ptr<_1a5b50d52_TypeKind> _24318_other);
inline void _1a5a2b777_ready(_1a5a2ab3e_comptimeStatics* _self_, jule::Ptr<_1a5ab1ee4_Var>* _24726_keyA, jule::Ptr<_1a5ab1ee4_Var>* _24743_keyB);
inline void _1a5a2bb95_step(_1a5a2ab3e_comptimeStatics* _self_, jule::I64 _26820_i, jule::Ptr<_1a5ab1ee4_Var>* _26833_keyA, jule::Ptr<_1a5ab1ee4_Var>* _26850_keyB);
inline jule::I64 _1a5a2be2b_len(_1a5a2ab3e_comptimeStatics* _self_);
inline jule::Str _1a5a2c6bd_Str(_1a5a2c239_comptimeEnumField* _self_);
inline jule::Bool _1a5a2ca0e_Equal(jule::Ptr<_1a5a2c239_comptimeEnumField> _self_, jule::Ptr<_1a5b50d52_TypeKind> _29218_other);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a2ce82__Name(jule::Ptr<_1a5a2c239_comptimeEnumField> _self_, jule::Ptr<_1a5b1b823_Eval>* _29623_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _29638_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a2d2c3_subIdent(jule::Ptr<_1a5a2c239_comptimeEnumField> _self_, jule::Str* _30926_ident);
inline jule::Str _1a5a2d955_Str(_1a5a2d5d1_comptimeEnumFields* _self_);
inline jule::Bool _1a5a2dc96_Equal(jule::Ptr<_1a5a2d5d1_comptimeEnumFields> _self_, jule::Ptr<_1a5b50d52_TypeKind> _33118_other);
inline void _1a5a2e219_ready(_1a5a2d5d1_comptimeEnumFields* _self_, jule::Ptr<_1a5ab1ee4_Var>* _33526_keyA, jule::Ptr<_1a5ab1ee4_Var>* _33543_keyB);
inline void _1a5a2e637_step(_1a5a2d5d1_comptimeEnumFields* _self_, jule::I64 _35620_i, jule::Ptr<_1a5ab1ee4_Var>* _35633_keyA, jule::Ptr<_1a5ab1ee4_Var>* _35650_keyB);
inline jule::I64 _1a5a2e8bd_len(_1a5a2d5d1_comptimeEnumFields* _self_);
inline jule::Str _1a5a30050_Str(_1a5a2ebcb_comptimeParam* _self_);
inline jule::Bool _1a5a30391_Equal(jule::Ptr<_1a5a2ebcb_comptimeParam> _self_, jule::Ptr<_1a5b50d52_TypeKind> _38018_other);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a30b00__Name(jule::Ptr<_1a5a2ebcb_comptimeParam> _self_, jule::Ptr<_1a5b1b823_Eval>* _38423_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _38438_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a30eeb__Type(jule::Ptr<_1a5a2ebcb_comptimeParam> _self_, jule::Ptr<_1a5b1b823_Eval>* _39727_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _39742_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a313e7__Variadic(jule::Ptr<_1a5a2ebcb_comptimeParam> _self_, jule::Ptr<_1a5b1b823_Eval>* _40531_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _40546_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a317e3__Reference(jule::Ptr<_1a5a2ebcb_comptimeParam> _self_, jule::Ptr<_1a5b1b823_Eval>* _41832_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _41847_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a31b34_subIdent(jule::Ptr<_1a5a2ebcb_comptimeParam> _self_, jule::Str* _43126_ident);
inline jule::Str _1a5a321a6_Str(_1a5a31d65_comptimeParams* _self_);
inline jule::Bool _1a5a324e7_Equal(jule::Ptr<_1a5a31d65_comptimeParams> _self_, jule::Ptr<_1a5b50d52_TypeKind> _47418_other);
inline void _1a5a3296a_ready(_1a5a31d65_comptimeParams* _self_, jule::Ptr<_1a5ab1ee4_Var>* _47826_keyA, jule::Ptr<_1a5ab1ee4_Var>* _47843_keyB);
inline void _1a5a32d88_step(_1a5a31d65_comptimeParams* _self_, jule::I64 _49920_i, jule::Ptr<_1a5ab1ee4_Var>* _49933_keyA, jule::Ptr<_1a5ab1ee4_Var>* _49950_keyB);
inline jule::I64 _1a5a3311e_len(_1a5a31d65_comptimeParams* _self_);
inline jule::Str _1a5a337a1_Str(_1a5a3342c_comptimeTypeInfos* _self_);
inline jule::Bool _1a5a33ae2_Equal(jule::Ptr<_1a5a3342c_comptimeTypeInfos> _self_, jule::Ptr<_1a5b50d52_TypeKind> _52318_other);
inline void _1a5a34065_ready(_1a5a3342c_comptimeTypeInfos* _self_, jule::Ptr<_1a5ab1ee4_Var>* _52726_keyA, jule::Ptr<_1a5ab1ee4_Var>* _52743_keyB);
inline void _1a5a34483_step(_1a5a3342c_comptimeTypeInfos* _self_, jule::I64 _54820_i, jule::Ptr<_1a5ab1ee4_Var>* _54833_keyA, jule::Ptr<_1a5ab1ee4_Var>* _54850_keyB);
inline jule::I64 _1a5a34719_len(_1a5a3342c_comptimeTypeInfos* _self_);
inline jule::Str _1a5a34d9b_Str(_1a5a34a27_comptimeTypeInfo* _self_);
inline jule::Bool _1a5a351dc_Equal(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b50d52_TypeKind> _57218_other);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3583b__Str(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _57622_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _57637_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a35c37__Kind(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _58927_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _58942_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a36133__Bits(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _66727_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _66742_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3652e__Elem(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _69027_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _69042_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3692a__Size(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _72327_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _72342_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a36d26__Key(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _74126_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _74141_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a37222__Value(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _75428_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _75443_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3761d__Fields(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _76729_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _76744_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a37a19__Statics(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _79630_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _79645_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a37e15__Public(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _81529_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _81544_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a38311__Binded(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _84229_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _84244_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3870c__Ordered(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _85526_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _85541_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a38b08__Comparable(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _86829_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _86844_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a39004__Mutable(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _88126_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _88141_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a39400__Types(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _89428_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _89443_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a397eb__Exceptional(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _91734_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _91749_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a39be7__CanNil(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _93529_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _93544_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3a0e3__RC(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _94825_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _94840_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3a4de__Result(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _96129_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _96144_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3a8da__Params(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _97729_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _97744_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3ac2b_subIdent(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Str* _99426_ident);
inline jule::Str _1a5a3b3ad_Str(_1a5a3b039_comptimeValue* _self_);
inline jule::Bool _1a5a3b6ee_Equal(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b50d52_TypeKind> _114918_other);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3bc4e__Unwrap(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b1b823_Eval>* _115329_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _115344_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3c14a__Type(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b1b823_Eval>* _116127_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _116142_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3c546__Lvalue(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b1b823_Eval>* _116929_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _116944_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3c942__Mutable(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b1b823_Eval>* _118230_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _118245_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3cd3d__Const(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b1b823_Eval>* _119528_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _119543_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3d239__Field(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b1b823_Eval>* _120828_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _120843_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a3d57a_subIdent(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Str* _124326_ident);
inline jule::Str _1a5a3dc0c_Str(_1a5a3d888_comptimeFiles* _self_);
inline jule::Bool _1a5a3e04d_Equal(jule::Ptr<_1a5a3d888_comptimeFiles> _self_, jule::Ptr<_1a5b50d52_TypeKind> _130018_other);
inline void _1a5a3e4c1_ready(_1a5a3d888_comptimeFiles* _self_, jule::Ptr<_1a5ab1ee4_Var>* _130426_keyA, jule::Ptr<_1a5ab1ee4_Var>* _130443_keyB);
inline void _1a5a3e8de_step(_1a5a3d888_comptimeFiles* _self_, jule::I64 _132520_i, jule::Ptr<_1a5ab1ee4_Var>* _132533_keyA, jule::Ptr<_1a5ab1ee4_Var>* _132550_keyB);
inline jule::I64 _1a5a3eb75_len(_1a5a3d888_comptimeFiles* _self_);
inline jule::Str _1a5a40538_Str(_1a5a3ee83_comptimeFile* _self_);
inline jule::Bool _1a5a40879_Equal(jule::Ptr<_1a5a3ee83_comptimeFile> _self_, jule::Ptr<_1a5b50d52_TypeKind> _134918_other);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a40c86__Path(jule::Ptr<_1a5a3ee83_comptimeFile> _self_, jule::Ptr<_1a5b1b823_Eval>* _135327_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _135342_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a41182__Name(jule::Ptr<_1a5a3ee83_comptimeFile> _self_, jule::Ptr<_1a5b1b823_Eval>* _136627_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _136642_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a4157d__Dir(jule::Ptr<_1a5a3ee83_comptimeFile> _self_, jule::Ptr<_1a5b1b823_Eval>* _137926_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _137941_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a418be_subIdent(jule::Ptr<_1a5a3ee83_comptimeFile> _self_, jule::Str* _139226_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1a5a8e17a_Sema>*,jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>*> _1a5a4488e_readyFn(jule::Ptr<_1a5a44493_constraintChecker> _self_);
inline jule::Bool _1a5a44b25_readyFi(jule::Ptr<_1a5a44493_constraintChecker> _self_);
inline jule::Bool _1a5a44dab_readySi(jule::Ptr<_1a5a44493_constraintChecker> _self_);
inline jule::Bool _1a5a45142_ready(jule::Ptr<_1a5a44493_constraintChecker> _self_);
inline jule::Bool _1a5a453c8_check(jule::Ptr<_1a5a44493_constraintChecker> _self_);
inline jule::Bool _1a5a46bb0_IsTraitImpl(_1a5a467e7_Impl* _self_);
inline jule::Bool _1a5a46e46_IsStructImpl(_1a5a467e7_Impl* _self_);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a546a1_SelectPackage(_1a5a5420b_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> _46029_selector);
inline jule::Ptr<_1a5ab1ee4_Var> _1a5a54a9c_FindVar(_1a5a5420b_scopeChecker* _self_, jule::Str _47123_ident, jule::Bool _47135_binded);
inline jule::Ptr<_1a5b50060_TypeAlias> _1a5a54e98_FindTypeAlias(_1a5a5420b_scopeChecker* _self_, jule::Str _48829_ident, jule::Bool _48841_binded);
inline jule::Ptr<_1a59e4d06_Struct> _1a5a55394_FindStruct(_1a5a5420b_scopeChecker* _self_, jule::Str _51326_ident, jule::Bool _51338_binded);
inline jule::Ptr<_1a5a09cc7_Fn> _1a5a55790_FindFn(_1a5a5420b_scopeChecker* _self_, jule::Str _52222_ident, jule::Bool _52234_binded);
inline jule::Ptr<_1a5a1d181_Trait> _1a5a55ad1_FindTrait(_1a5a5420b_scopeChecker* _self_, jule::Str _53125_ident);
inline jule::Ptr<_1a5a2088c_Enum> _1a5a55e22_FindEnum(_1a5a5420b_scopeChecker* _self_, jule::Str _54024_ident);
inline jule::Ptr<_1a5a22097_TypeEnum> _1a5a56263_FindTypeEnum(_1a5a5420b_scopeChecker* _self_, jule::Str _54928_ident);
inline jule::Bool _1a5a565b5_isUnsafe(jule::Ptr<_1a5a5420b_scopeChecker> _self_);
inline jule::Bool _1a5a5684b_isRoot(_1a5a5420b_scopeChecker* _self_);
inline void _1a5a56a49_stop(_1a5a5420b_scopeChecker* _self_);
inline jule::Bool _1a5a56cd0_stopped(_1a5a5420b_scopeChecker* _self_);
inline jule::Bool _1a5a57066_isDeferred(jule::Ptr<_1a5a5420b_scopeChecker> _self_);
inline void _1a5a5731e_pushCaptured(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5ab1ee4_Var>* _61134_v);
inline jule::Ptr<_1a5a5420b_scopeChecker> _1a5a575a5_getRoot(jule::Ptr<_1a5a5420b_scopeChecker> _self_);
inline jule::Ptr<_1a5a5420b_scopeChecker> _1a5a5783b_getHardRoot(jule::Ptr<_1a5a5420b_scopeChecker> _self_);
inline jule::Ptr<_1a5ab1ee4_Var> _1a5a57b7c_findVar(_1a5a5420b_scopeChecker* _self_, jule::Str _65423_ident);
inline jule::Ptr<_1a5a4e5e1_Label> _1a5a57ebd_findLabel(_1a5a5420b_scopeChecker* _self_, jule::Str* _67526_ident);
inline jule::Ptr<_1a5a52b88_scopeLabel> _1a5a5830e_findLabelScope(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Str* _69132_ident);
inline jule::Ptr<_1a5a52b88_scopeLabel> _1a5a58650_findLabelAll(_1a5a5420b_scopeChecker* _self_, jule::Str* _70329_ident);
inline jule::Bool _1a5a58a4b_isDuplicatedIdent(_1a5a5420b_scopeChecker* _self_, jule::Uintptr _71533_itself, jule::Str* _71551_ident);
inline void _1a5a58d04_checkVarDecl(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d6cd7_VarDecl> _73533_decl);
inline void _1a5a590ac_checkTypeAlias(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5b50060_TypeAlias>* _76636_ta);
inline void _1a5a59365_checkTypeAliasDecl(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59da989_TypeAliasDecl> _78239_decl);
inline jule::Ptr<_1a5a4bc4d_Scope> _1a5a595eb_getChild(_1a5a5420b_scopeChecker* _self_);
inline void _1a5a59a19_checkChildSsc(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d3e8d_ScopeTree>* _79335_tree, jule::Ptr<_1a5a4bc4d_Scope>* _79358_s, jule::Ptr<_1a5a5420b_scopeChecker>* _79374_ssc);
inline jule::Ptr<_1a5a4bc4d_Scope> _1a5a59e15_checkChildSc(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d3e8d_ScopeTree>* _79834_tree, jule::Ptr<_1a5a5420b_scopeChecker>* _79857_ssc);
inline jule::Ptr<_1a5a4bc4d_Scope> _1a5a5a256_checkChild(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d3e8d_ScopeTree>* _80432_tree);
inline void _1a5a5a50e_checkAnonScope(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d3e8d_ScopeTree> _80935_tree);
inline void _1a5a5a872_processErrorCall(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5a05762_BuiltinErrorCallExprModel>* _81438_m, jule::Ptr<_1c80b653c_Token> _81469_err);
inline void _1a5a5ab2a_checkExpr(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59c82a1_Expr> _82730_expr);
inline jule::Ptr<_1a5a4c16b_If> _1a5a5ae6b_checkIf(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d98bc_If> _85828_i);
inline jule::Ptr<_1a5a4c468_Else> _1a5a5b2ac_checkElse(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d9c96_Else> _87830_e);
inline void _1a5a5b565_checkConditional(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59da24c_Conditional> _88437_conditional);
inline void _1a5a5ba3d_checkIterScopeSsc(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Uintptr _90034_it, jule::Ptr<_1a59d3e8d_ScopeTree> _90051_tree, jule::Ptr<_1a5a4bc4d_Scope>* _90074_s, jule::Ptr<_1a5a5420b_scopeChecker> _90089_ssc);
inline jule::Ptr<_1a5a4bc4d_Scope> _1a5a5bee4_checkIterScopeSc(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Uintptr _90533_it, jule::Ptr<_1a59d3e8d_ScopeTree> _90550_tree, jule::Ptr<_1a5a5420b_scopeChecker> _90572_ssc);
inline jule::Ptr<_1a5a4bc4d_Scope> _1a5a5c3e0_checkIterScope(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Uintptr _91131_it, jule::Ptr<_1a59d3e8d_ScopeTree>* _91149_tree);
inline void _1a5a5c698_checkInfIter(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d7931_Iter>* _91634_it);
inline void _1a5a5c951_checkWhileIter(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d7931_Iter>* _92236_it);
inline void _1a5a5cd6e_checkComptimeRangeIter(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d7931_Iter>* _97244_it, jule::Ptr<_1a5a4da85_RangeIter>* _97260_kind, jule::Ptr<_1a5b19aeb_Data>* _97283_d);
inline void _1a5a5d127_checkRangeIter(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d7931_Iter>* _102936_it);
inline void _1a5a5d3d0_checkIter(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d7931_Iter> _108930_it);
inline jule::Bool _1a5a5d721_checkValidContLabel(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Uintptr _111336_it);
inline jule::Bool _1a5a5da62_checkValidBreakLabel(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Uintptr _112937_ptr);
inline jule::Ptr<_1a5a4de1a_ContSt> _1a5a5dda3_checkContValidScope(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d9416_ContSt> _115236_c);
inline void _1a5a5e15b_checkCont(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d9416_ContSt> _117626_c);
inline void _1a5a5e414_checkLabel(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d1551_LabelSt> _122331_l);
inline void _1a5a5e6bc_pushGoto(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d192a_GotoSt> _124229_gt);
inline void _1a5a5e975_checkPostfix(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d291a_AssignSt> _125633_a);
inline jule::Bool _1a5a5ecb6_isNewAssignIdent(_1a5a5420b_scopeChecker* _self_, jule::Str _128932_ident);
inline void _1a5a6006e_removeInteriorMutRisk(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5b19aeb_Data>* _130243_d);
inline jule::Bool _1a5a60525_checkStructureAssignOp(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59e7a84_StructIns>* _131644_s, jule::Ptr<_1a59d291a_AssignSt>* _131664_a, jule::Ptr<_1a5b19aeb_Data>* _131683_r);
inline void _1a5a607cd_checkSingleAssign(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d291a_AssignSt>* _135539_a);
inline void _1a5a60d61_processEndPartOfMultiAssign(_1a5a5420b_scopeChecker* _self_, jule::Ptr<_1a5a50801_MultiAssign>* _143348_st, jule::Ptr<_1a59d291a_AssignSt>* _14348_a, jule::Ptr<_1a59d2387_AssignLeft>* _143427_lexpr, jule::Ptr<_1a5b19aeb_Data>* _143452_l, jule::Ptr<_1a5b19aeb_Data>* _143467_r);
inline void _1a5a61119_checkMultiAssign(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d291a_AssignSt>* _150338_a);
inline void _1a5a613c2_checkAssignSt(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d291a_AssignSt> _155134_a);
inline jule::Ptr<_1a5a4bc4d_Scope> _1a5a617bd_checkCaseScope(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5a51989_Case>* _156232_c, jule::Ptr<_1a59d3e8d_ScopeTree>* _156247_tree);
inline jule::Ptr<_1a5a51989_Case> _1a5a61d2e_checkCase(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5a50e61_Match> _156830_m, jule::I64 _156841_i, jule::Ptr<_1a59dae40_Case> _156853_c, jule::Ptr<_1a5b19aeb_Data> _156872_expr);
inline void _1a5a6224c_checkCases(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59db759_MatchCase>* _164332_m, jule::Ptr<_1a5a50e61_Match> _164351_rm, jule::Ptr<_1a5b19aeb_Data> _164367_expr);
inline jule::Ptr<_1a5a51989_Case> _1a5a62648_checkDefault(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5a50e61_Match> _166433_m, jule::Ptr<_1a59d9c96_Else> _166448_d);
inline void _1a5a629ab_checkComptimePanic(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1c80b653c_Token> _167239_callToken, jule::Ptr<_1a5a4bc4d_Scope>* _167259_s);
inline void _1a5a62d1e_processConstMatch(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5a50e61_Match>* _170439_tm, jule::Ptr<_1a59db759_MatchCase>* _170456_m);
inline void _1a5a630c7_checkTypeMatch(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59db759_MatchCase>* _173336_m);
inline void _1a5a63380_checkCommonMatch(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59db759_MatchCase>* _177538_m);
inline void _1a5a63638_checkMatch(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59db759_MatchCase> _182531_m);
inline void _1a5a638e1_checkFall(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d1c27_FallSt> _183326_f);
inline jule::Ptr<_1a5a4e2e4_BreakSt> _1a5a63c32_checkBreakWithLabel(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d903c_BreakSt> _185636_b);
inline jule::Ptr<_1a5a4e2e4_BreakSt> _1a5a64073_checkPlainBreak(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d903c_BreakSt> _191432_b);
inline void _1a5a6432b_checkBreak(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d903c_BreakSt> _193627_b);
inline void _1a5a645d4_checkRet(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d71b1_RetSt> _194729_r);
inline void _1a5a6488c_checkUseExpr(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59c8b75_UseExpr> _197229_ue);
inline void _1a5a64b45_checkNode(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Any* _198831_node);
inline void _1a5a64d43_checkResult(jule::Ptr<_1a5a5420b_scopeChecker> _self_);
inline void _1a5a65041_checkTree(jule::Ptr<_1a5a5420b_scopeChecker> _self_);
inline void _1a5a653a4_checkGoto(_1a5a5420b_scopeChecker* _self_, jule::Ptr<_1a5a5321b_scopeGoto>* _209030_gt, jule::Ptr<_1a5a52b88_scopeLabel>* _209051_label);
inline void _1a5a655a2_checkGotos(_1a5a5420b_scopeChecker* _self_);
inline void _1a5a657a0_checkLabels(_1a5a5420b_scopeChecker* _self_);
inline void _1a5a6599d_checkVars(_1a5a5420b_scopeChecker* _self_);
inline void _1a5a65b9b_checkAliases(_1a5a5420b_scopeChecker* _self_);
inline void _1a5a6600e_check(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d3e8d_ScopeTree>* _216827_tree, jule::Ptr<_1a5a4bc4d_Scope>* _216850_s);
inline jule::Ptr<_1a5a5420b_scopeChecker> _1a5a66295_newChildChecker(jule::Ptr<_1a5a5420b_scopeChecker> _self_);
inline void _1a5a67c47_checkCdef(_1a5a6783a_directiveChecker* _self_, jule::Ptr<_1a59c3389_Directive>* _1626_d);
inline void _1a5a68000_checkTypedef(_1a5a6783a_directiveChecker* _self_, jule::Ptr<_1a59c3389_Directive>* _3229_d);
inline void _1a5a682a8_checkNamespace(_1a5a6783a_directiveChecker* _self_, jule::Ptr<_1a59c3389_Directive>* _4835_d);
inline void _1a5a68561_checkDeprecated(_1a5a6783a_directiveChecker* _self_, jule::Ptr<_1a59c3389_Directive>* _9936_d);
inline void _1a5a68819_checkTest(_1a5a6783a_directiveChecker* _self_, jule::Ptr<_1a59c3389_Directive>* _13926_d);
inline void _1a5a68ac2_checkDirective(_1a5a6783a_directiveChecker* _self_, jule::Ptr<_1a59c3389_Directive>* _16035_d);
inline void _1a5a68cc0_check(_1a5a6783a_directiveChecker* _self_);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a6e2c0_SelectPackage(_1a5a6dcd6_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> );
inline jule::Ptr<_1a5ab1ee4_Var> _1a5a6e6bb_FindVar(_1a5a6dcd6_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1a5b50060_TypeAlias> _1a5a6eab7_FindTypeAlias(_1a5a6dcd6_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1a59e4d06_Struct> _1a5a6eeb3_FindStruct(_1a5a6dcd6_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1a5a09cc7_Fn> _1a5a703ae_FindFn(_1a5a6dcd6_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1a5a1d181_Trait> _1a5a70700_FindTrait(_1a5a6dcd6_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1a5a2088c_Enum> _1a5a70a41_FindEnum(_1a5a6dcd6_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1a5a22097_TypeEnum> _1a5a70d82_FindTypeEnum(_1a5a6dcd6_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1a5a71327_isLookupable(_1a5a6dcd6_ImportInfo* _self_, jule::Str* _26725_ident);
inline jule::Bool _1a5a71668_existIdent(_1a5a6dcd6_ImportInfo* _self_, jule::Str _28722_ident);
inline jule::Bool _1a5a718ee_isAccessibleViaSelection(_1a5a6dcd6_ImportInfo* _self_);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a721a2_SelectPackage(_1a5a71c0c_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> );
inline jule::Ptr<_1a5ab1ee4_Var> _1a5a7259d_FindVar(_1a5a71c0c_Package* _self_, jule::Str _31423_ident, jule::Bool _31435_binded);
inline jule::Ptr<_1a5b50060_TypeAlias> _1a5a72999_FindTypeAlias(_1a5a71c0c_Package* _self_, jule::Str _32029_ident, jule::Bool _32041_binded);
inline jule::Ptr<_1a59e4d06_Struct> _1a5a72d95_FindStruct(_1a5a71c0c_Package* _self_, jule::Str _32626_ident, jule::Bool _32638_binded);
inline jule::Ptr<_1a5a09cc7_Fn> _1a5a73291_FindFn(_1a5a71c0c_Package* _self_, jule::Str _33222_ident, jule::Bool _33234_binded);
inline jule::Ptr<_1a5a1d181_Trait> _1a5a735d2_FindTrait(_1a5a71c0c_Package* _self_, jule::Str _33825_ident);
inline jule::Ptr<_1a5a2088c_Enum> _1a5a73923_FindEnum(_1a5a71c0c_Package* _self_, jule::Str _34424_ident);
inline jule::Ptr<_1a5a22097_TypeEnum> _1a5a73c64_FindTypeEnum(_1a5a71c0c_Package* _self_, jule::Str _35028_ident);
inline jule::Ptr<_1a5a34a27_comptimeTypeInfo> _1a5a8d9b5_pushComptimeTypeInfo(_1a5a8d575_commonSemaMeta* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _21441_t);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a8e620_SelectPackage(_1a5a8e17a_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> _24329_selector);
inline jule::Ptr<_1a5ab1ee4_Var> _1a5a8ea1b_FindVar(_1a5a8e17a_Sema* _self_, jule::Str _25323_ident, jule::Bool _25335_binded);
inline jule::Ptr<_1a5b50060_TypeAlias> _1a5a8ee17_FindTypeAlias(_1a5a8e17a_Sema* _self_, jule::Str _28529_ident, jule::Bool _28541_binded);
inline jule::Ptr<_1a59e4d06_Struct> _1a5a90313_FindStruct(_1a5a8e17a_Sema* _self_, jule::Str _31726_ident, jule::Bool _31738_binded);
inline jule::Ptr<_1a5a09cc7_Fn> _1a5a9070e_FindFn(_1a5a8e17a_Sema* _self_, jule::Str _34822_ident, jule::Bool _34834_binded);
inline jule::Ptr<_1a5a1d181_Trait> _1a5a90a50_FindTrait(_1a5a8e17a_Sema* _self_, jule::Str _38025_ident);
inline jule::Ptr<_1a5a2088c_Enum> _1a5a90d91_FindEnum(_1a5a8e17a_Sema* _self_, jule::Str _41224_ident);
inline jule::Ptr<_1a5a22097_TypeEnum> _1a5a911d2_FindTypeEnum(_1a5a8e17a_Sema* _self_, jule::Str _44428_ident);
inline jule::Bool _1a5a915de_isFlag(_1a5a8e17a_Sema* _self_, jule::I64 _47318_flags);
inline void _1a5a91897_setCurrentFile(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5b14783_SymbolTable> _47534_f);
inline void _1a5a91cb5_pushErr(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token> _47723_token, jule::Str _47738_fmt, jule::Slice<jule::Any> _47751_args);
inline void _1a5a92128_pushSuggestion(_1a5a8e17a_Sema* _self_, jule::Str _48230_fmt, jule::Slice<jule::Any> _48243_args);
inline jule::Bool _1a5a92524_isAccessibleDefine(_1a5a8e17a_Sema* _self_, jule::Bool _48730_public, jule::Ptr<_1c80b653c_Token> _48744_token);
inline jule::Bool _1a5a929ca_isDuplicatedIdent(_1a5a8e17a_Sema* _self_, jule::Uintptr _49429_itself, jule::Str* _49447_ident, jule::Bool _49459_binded);
inline void _1a5a92d3d_checkDirectives(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Slice<jule::Ptr<_1a59c3389_Directive>>* _51137_d, jule::Any _51163_o);
inline jule::Bool _1a5a932e4_checkGenericQuantity(_1a5a8e17a_Sema* _self_, jule::I64 _52036_required, jule::I64 _52051_given, jule::Ptr<_1c80b653c_Token> _52063_token);
inline jule::Bool _1a5a936e0_isDuplicatedImportSelection(_1a5a8e17a_Sema* _self_, jule::Uintptr _53939_itself, jule::Str* _53957_ident);
inline jule::Any _1a5a93adb_getImportDef(_1a5a8e17a_Sema* _self_, jule::Str* _55225_ident, jule::Ptr<_1a5a6dcd6_ImportInfo>* _55242_imp);
inline jule::Bool _1a9321dd2_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a5ab1ee4_Var>* _56756_s);
inline jule::Bool _1a93261a0_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a5b50060_TypeAlias>* _56756_s);
inline jule::Bool _1a932a429_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a59e4d06_Struct>* _56756_s);
inline jule::Bool _1a932e98e_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a5a1d181_Trait>* _56756_s);
inline jule::Bool _1a9333c3a_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a5a2088c_Enum>* _56756_s);
inline jule::Bool _1a9337ed6_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a5a22097_TypeEnum>* _56756_s);
inline jule::Bool _1a933c260_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a5a09cc7_Fn>* _56756_s);
inline jule::Bool _1a5a94328_checkImportSelectedSelections(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _58150_imp);
inline jule::Bool _1a9341a28_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et);
inline jule::Bool _1a93426b6_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et);
inline jule::Bool _1a93458a6_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a59e4d06_Struct>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et);
inline jule::Bool _1a9346bb5_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5a09cc7_Fn>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et);
inline jule::Bool _1a934939e_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5a1d181_Trait>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et);
inline jule::Bool _1a934c946_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5a2088c_Enum>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et);
inline jule::Bool _1a93500db_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5a22097_TypeEnum>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et);
inline jule::Bool _1a5a94a65_checkImportAllSelections(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _64041_imp);
inline jule::Bool _1a5a94da6_checkImportSelections(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _65442_imp);
inline jule::Bool _1a5a951e7_isUseAliasDuplication(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _66338_imp);
inline jule::Bool _1a5a95538_checkImport(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _67932_imp);
inline void _1a5a95736_checkImports(_1a5a8e17a_Sema* _self_);
inline void _1a5a95934_implFileImpls(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5a95b32_implImpls(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5a95d30_checkEnums(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5a9602d_checkFileInherits(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5a9622b_checkInherits(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline _1a5b62c10_typeChecker _1a5a966d2_typeChecker(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Trait _76832_l, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _76847_generics, jule::Ptr<_1a5b61c20_referencer> _7697_referencer);
inline jule::Ptr<_1a5b50d52_TypeKind> _1a5a96c43_buildTypeWithRefers(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59c3e6c_TypeDecl>* _79541_t, jule::Trait _79564_l, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _7967_generics, jule::Ptr<_1a5b61c20_referencer> _79635_referencer);
inline jule::Bool _1a5a972a4_checkTypeWithRefers(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b58024_TypeSymbol>* _80241_t, jule::Trait _80261_l, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _8037_generics, jule::Ptr<_1a5b61c20_referencer> _80335_referencer);
inline jule::Ptr<_1a5a44493_constraintChecker> _1a5a9753a_constraintChecker(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline jule::Bool _1a5a97936_checkType(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b58024_TypeSymbol>* _81731_t, jule::Trait _81751_l);
inline jule::Ptr<_1a5b50d52_TypeKind> _1a5a97ddc_buildTypeWithGenerics(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59c3e6c_TypeDecl>* _82343_t, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _8247_generics, jule::Ptr<_1a5a10e87_ReferenceStack> _82435_refers);
inline jule::Ptr<_1a5b50d52_TypeKind> _1a5a9856e_selectType(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59c3e6c_TypeDecl>* _84132_t);
inline jule::Ptr<_1a5b1b823_Eval> _1a5a98a25_evalpd(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Trait _85327_l, jule::Ptr<_1a5b50d52_TypeKind> _85342_p, jule::Ptr<_1a5ab1ee4_Var> _85360_owner);
inline jule::Ptr<_1a5b1b823_Eval> _1a5a98e21_evalp(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Trait _86826_l, jule::Ptr<_1a5b50d52_TypeKind> _86841_p);
inline jule::Ptr<_1a5b1b823_Eval> _1a5a99262_eval(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Trait _87325_l);
inline jule::Bool _1a5a997c3_checkAssignType(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Bool _87732_destIsRef, jule::Ptr<_1a5b50d52_TypeKind>* _87754_dest, jule::Ptr<_1a5b19aeb_Data>* _8788_d, jule::Ptr<_1c80b653c_Token> _87822_errorToken);
inline jule::Bool _1a5a99c79__checkTypeCompatibility(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b50d52_TypeKind>* _91945_dest, jule::Ptr<_1a5b50d52_TypeKind>* _91967_src, jule::Ptr<_1c80b653c_Token> _9207_errorToken);
inline jule::Bool _1a5a9a230_checkTypeCompatibility(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b50d52_TypeKind>* _93744_dest, jule::Ptr<_1a5b50d52_TypeKind>* _9388_src, jule::Ptr<_1c80b653c_Token>* _93829_errorToken);
inline void _1a5a9a64d_pushCompatiblityError(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _94642_dest, jule::Ptr<_1a5b19aeb_Data>* _94664_src, jule::Ptr<_1c80b653c_Token>* _9478_errorToken);
inline jule::Bool _1a5a9ab04_checkTypeCompatibility1(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b50d52_TypeKind>* _96445_dest, jule::Ptr<_1a5b19aeb_Data>* _96467_src, jule::Ptr<_1c80b653c_Token>* _9658_errorToken);
inline jule::Ptr<_1a5b50d52_TypeKind> _1a5a9b0aa_buildNonGenericTypeKind(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59c3e6c_TypeDecl>* _97945_ast, jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>>* _9808_generics, jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>* _98044_ignored);
inline jule::Bool _1a5a9b4a6_buildFnNonGenericTypeKinds(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _99148_f, jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>* _99164_ignored);
inline jule::Ptr<_1a5a0cca8_FnIns> _1a5a9b7e7_getTraitCheckFnKind(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _101341_f);
inline jule::Bool _1a5a9bc9d_checkConstraintsFn(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _103640_f, jule::Ptr<_1c80b653c_Token>* _103656_et, jule::Ptr<_1a5a0cca8_FnIns> _103672_exist);
inline jule::Bool _1a5a9c254_checkConstraintsStruct(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _105044_s, jule::Ptr<_1c80b653c_Token>* _105064_et, jule::Ptr<_1a59e7a84_StructIns> _105080_exist);
inline jule::Bool _1a5a9c650_fnEnvironment(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _106735_f, jule::Fn<jule::Bool,jule::Ptr<_1a5a8e17a_Sema>*,jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>*> _106746_algo);
inline void _1a5a9c908_checkFnParamKind(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0bc30_ParamIns>* _109438_p);
inline jule::Bool _1a5a9cc49_reloadFnInsTypes(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0cca8_FnIns> _110137_f);
inline jule::Bool _1a5a9d200_checkRefValidityForInitExpr(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Bool _113744_leftMut, jule::Ptr<_1a5b19aeb_Data>* _113764_d, jule::Ptr<_1c80b653c_Token>* _113779_errorToken);
inline jule::Bool _1a5a9d541_isMutRiskyStruct(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a59e7a84_StructIns>* _115429_s);
inline jule::Bool _1a5a9db5c_checkValidityForInitExpr(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Bool _118141_leftMut, jule::Bool _118156_leftRef, jule::Ptr<_1a5b50d52_TypeKind>* _11824_leftKind, jule::Ptr<_1a5b19aeb_Data>* _118230_d, jule::Ptr<_1c80b653c_Token>* _118245_errorToken);
inline jule::Bool _1a5a9e058_checkTypeAliasDeclKind(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b50060_TypeAlias>* _120944_ta, jule::Trait _120964_l);
inline void _1a5a9e3bb_checkTypeAliasDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b50060_TypeAlias>* _123240_ta, jule::Trait _123260_l);
inline void _1a5a9e674_checkTypeAliasDeclDup(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b50060_TypeAlias>* _124043_ta);
inline jule::Bool _1a5a9e90a_checkTypeAliasDecls(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a9408040_checkEnumItemsDup(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5a1ed20_EnumItem>> _126436_items);
inline void _1a9415349_checkEnumItemsDup(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5a219c0_TypeEnumItem>> _126436_items);
inline void _1a5a9ee6b_checkEnumItemsStr(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a2088c_Enum>* _128439_e);
inline void _1a93d89d2_checkEnumItemInt(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b1b823_Eval>* _131043_eval, jule::Ptr<_1a5a2088c_Enum>* _131061_e, jule::Ptr<_1a5b5892b_Prim>* _131072_prim, jule::Ptr<_1a5a1ed20_EnumItem>* _131090_item, jule::U64* _1310112_n);
inline void _1a93e8a36_checkEnumItemInt(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b1b823_Eval>* _131043_eval, jule::Ptr<_1a5a2088c_Enum>* _131061_e, jule::Ptr<_1a5b5892b_Prim>* _131072_prim, jule::Ptr<_1a5a1ed20_EnumItem>* _131090_item, jule::I64* _1310112_n);
inline void _1a93d4b76_checkEnumItemsInt1(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b5892b_Prim>* _134541_prim, jule::Ptr<_1a5a2088c_Enum>* _134559_e);
inline void _1a93e523b_checkEnumItemsInt1(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b5892b_Prim>* _134541_prim, jule::Ptr<_1a5a2088c_Enum>* _134559_e);
inline void _1a5aa0b1a_checkEnumItemsInt(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a2088c_Enum>* _138039_e);
inline void _1a5aa0dc3_checkEnumDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a2088c_Enum>* _139035_e);
inline void _1a5aa117b_checkTypeEnumDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a22097_TypeEnum>* _143139_e);
inline jule::Bool _1a5aa1412_checkEnumDecls(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline jule::Bool _1a5aa1698_checkTypeEnumDecls(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline jule::Bool _1a5aa19d9_checkDeclGenerics(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>>* _149434_generics);
inline jule::Bool _1a5aa1d2a_checkFnDeclParamsDup(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a09cc7_Fn>* _152137_f);
inline jule::Bool _1a5aa216b_checkFnDeclResultDup(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a09cc7_Fn>* _155837_f);
inline jule::Bool _1a5aa24ac_checkFnVariadicParam(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _160342_f);
inline void _1a5aa2765_checkFnDeclPrototype(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _161642_f);
inline jule::Bool _1a5aa2c1b_catchTraitInheritCycle(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a1d181_Trait> _163839_t1, jule::Ptr<_1a5a1d181_Trait> _163855_t2, _1e9a030bc_StrBuilder* _163872_message);
inline jule::Bool _1a5aa305c__checkTraitDeclInherits(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a1d181_Trait>* _165745_t);
inline void _1a5aa3315_checkTraitDeclInherits(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a1d181_Trait>* _169844_t);
inline void _1a5aa35bd_checkTraitDeclMethod(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _172342_f);
inline void _1a5aa3876_checkTraitDeclMethods(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a1d181_Trait>* _173743_t);
inline void _1a5aa3b2e_checkTraitDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a1d181_Trait>* _177336_t);
inline jule::Bool _1a5aa3db5_checkTraitDecls(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline jule::Bool _1a5aa42b1_checkTraitImplMethods(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a1d181_Trait>* _179742_base, jule::Ptr<_1a5a467e7_Impl>* _179757_ipl);
inline jule::Bool _1a5aa46ac_implToStruct(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _180834_dest, jule::Ptr<_1a5a467e7_Impl>* _180854_ipl);
inline void _1a5aa4965_implTrait(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a467e7_Impl>* _185031_decl);
inline void _1a5aa4c1d_implStruct(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a467e7_Impl>* _189332_decl);
inline void _1a5aa4ec6_implImpl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a467e7_Impl>* _191730_decl);
inline void _1a5aa5339_checkVarDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5ab1ee4_Var>* _192834_decl, jule::Trait _192850_l);
inline void _1a5aa55e2_checkGlobalVarDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5ab1ee4_Var>* _196540_decl);
inline jule::Bool _1a5aa5878_checkGlobalDecls(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline jule::Bool _1a5aa5c74_checkStructTraitImpl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _199342_strct, jule::Ptr<_1a5a1d181_Trait>* _199363_trt);
inline jule::Bool _1a5aa60b5_checkStructImpls(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _201738_s);
inline jule::Bool _1a5aa6406_checkStructFields(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _202539_st);
inline void _1a5aa66ae_checkStructDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _204237_s);
inline jule::Bool _1a5aa6945_checkStructDecls(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5aa6bed_checkAnonFuncDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _207239_f);
inline void _1a5aa6ea6_checkFuncDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _207735_f);
inline jule::Bool _1a5aa72e7_checkFuncDeclsBy(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Slice<jule::Ptr<_1a5a09cc7_Fn>>* _209938_funcs);
inline jule::Bool _1a5aa757d_checkFuncDecls(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5aa799b_pushCycleError(_1a5a8e17a_Sema* _self_, jule::Str* _211527_st1, jule::Str* _211538_st2, _1e9a030bc_StrBuilder* _211553_message);
inline void _1a5aa8150_checkPackageDecls(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5aa84b3_checkDataForTypeInference(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5b19aeb_Data>* _217542_d, jule::Ptr<_1c80b653c_Token>* _217553_err_token);
inline void _1a5aa876b_checkVarValue(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5ab1ee4_Var>* _218735_v);
inline void _1a5aa8ace_evalVarValue(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5ab1ee4_Var>* _224034_decl, jule::Trait _224050_l);
inline void _1a5aa8e42_checkVar(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5ab1ee4_Var>* _225730_decl, jule::Trait _225746_l);
inline void _1a5aa9140_checkGlobals(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline jule::Ptr<_1a5a0cca8_FnIns> _1a5aa953b_readyToCheckFn(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _228136_s, jule::Ptr<_1a5a09cc7_Fn>* _228156_f);
inline void _1a5aa989e_checkTypeMethod(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _229537_s, jule::Ptr<_1a5a09cc7_Fn>* _229557_f);
inline jule::Ptr<_1a5a0cca8_FnIns> _1a5aa9d55_checkStructInsOp(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _230838_s, jule::Ptr<_1a5a09cc7_Fn>* _230858_f, jule::Fn<jule::Bool,jule::Ptr<_1a5a09cc7_Fn>> _230866_p);
inline jule::Bool _1a5aaa251_checkStructEnv(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _231836_s, jule::Ptr<_1c80b653c_Token> _231855_errorToken);
inline jule::Bool _1a5aaa64c_precheckStructIns(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _241539_s, jule::Ptr<_1c80b653c_Token> _241558_errorToken);
inline void _1a5aaa905_checkStructIns(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _243036_s);
inline void _1a5aaabad_checkTypeStruct(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _243637_s);
inline void _1a5aaadab_checkStructTypes(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5aab164_checkStructInsOperators(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns> _246044_s);
inline void _1a5aab41c_precheckStructType(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _252440_s);
inline void _1a5aab61a_precheckStructTypes(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5aab8c3_checkRets(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _255030_f);
inline void _1a5aabc36_checkFnInsSc(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _256133_f, jule::Ptr<_1a5a5420b_scopeChecker>* _256149_sc);
inline void _1a5aac099_checkFnInsCaller(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _257438_f, jule::Ptr<_1c80b653c_Token> _257453_caller);
inline void _1a5aac352_checkFnIns(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _259632_f);
inline void _1a5aac60a_checkFunc(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _260031_f);
inline void _1a5aac8b3_checkTestFn(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _261532_f);
inline void _1a5aacb6b_precheckFunc(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _264834_f);
inline void _1a5aacd69_precheckFuncs(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5aad067_checkFuncs(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5aad265_checkPackageTypes(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5aad463_setFileSemaFields(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5aad661_setSemaFields(jule::Ptr<_1a5a8e17a_Sema> _self_);
inline void _1a5aad919_check(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _272627_files);
inline _1a5aadd48_missingRetChecker static__1a5aae211_new(void);
inline jule::Bool _1a5aae51e_checkConditional(_1a5aadd48_missingRetChecker* _self_, jule::Ptr<_1a5a4c886_Conditional> _277432_c);
inline jule::Bool _1a5aae860_checkMatch(_1a5aadd48_missingRetChecker* _self_, jule::Ptr<_1a5a50e61_Match> _278626_m);
inline jule::Bool _1a5aaeba1_checkInfIter(_1a5aadd48_missingRetChecker* _self_, jule::Ptr<_1a5a4cb83_InfIter> _281228_it);
inline jule::Bool _1a5aaeee2_checkScope(_1a5aadd48_missingRetChecker* _self_, jule::Ptr<_1a5a4bc4d_Scope> _283126_s);
inline jule::Bool _1a5ab0333_check(_1a5aadd48_missingRetChecker* _self_, jule::Ptr<_1a5a4bc4d_Scope> _287721_s);
inline jule::Bool _1a5ab23bd_IsInitialized(_1a5ab1ee4_Var* _self_);
inline jule::Bool _1a5ab2654_IsTypeInferred(_1a5ab1ee4_Var* _self_);
inline jule::Bool _1a5ab28da_untypedConstant(_1a5ab1ee4_Var* _self_);
inline jule::Bool static__1a5ab348a_Dispose(jule::Ptr<_1a5a09cc7_Fn> _1020_f);
inline jule::Bool static__1a5ab3754_Str(jule::Ptr<_1a5a09cc7_Fn> _2416_f);
inline jule::Bool static__1a5ab3ac8_logical(jule::Ptr<_1a5a09cc7_Fn>* _4621_f, jule::Str _4629_ident);
inline jule::Bool static__1a5ab3d92_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _7215_f);
inline jule::Bool static__1a5ab415b_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _7715_f);
inline jule::Bool static__1a5ab4425_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _8217_f);
inline jule::Bool static__1a5ab46de_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _8715_f);
inline jule::Bool static__1a5ab49a8_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _9217_f);
inline jule::Bool static__1a5ab4d2c_result(jule::Ptr<_1a5a09cc7_Fn>* _9620_f, jule::Str _9628_ident);
inline jule::Bool static__1a5ab50e6_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _11816_f);
inline jule::Bool static__1a5ab53b0_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _12316_f);
inline jule::Bool static__1a5ab5679_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _12816_f);
inline jule::Bool static__1a5ab5943_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _13316_f);
inline jule::Bool static__1a5ab5c0c_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _13816_f);
inline jule::Bool static__1a5ab5ec6_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _14316_f);
inline jule::Bool static__1a5ab6290_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _14816_f);
inline jule::Bool static__1a5ab6559_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _15319_f);
inline jule::Bool static__1a5ab6823_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _15818_f);
inline jule::Bool static__1a5ab6adc_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _16319_f);
inline jule::Bool static__1a5ab6e61_unary(jule::Ptr<_1a5a09cc7_Fn>* _16719_f, jule::Str _16727_ident);
inline jule::Bool static__1a5ab722a_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _18716_f);
inline jule::Bool static__1a5ab74e4_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _19216_f);
inline jule::Bool static__1a5ab77ad_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _19719_f);
inline jule::Bool static__1a5ab7b32_assign(jule::Ptr<_1a5a09cc7_Fn>* _20120_f, jule::Str _20128_ident);
inline jule::Bool static__1a5ab7deb_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _22122_f);
inline jule::Bool static__1a5ab81b5_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _22622_f);
inline jule::Bool static__1a5ab847e_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _23122_f);
inline jule::Bool static__1a5ab8748_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _23622_f);
inline jule::Bool static__1a5ab8a12_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _24122_f);
inline jule::Bool static__1a5ab8ccb_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _24622_f);
inline jule::Bool static__1a5ab9095_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _25122_f);
inline jule::Bool static__1a5ab935e_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _25624_f);
inline jule::Bool static__1a5ab9628_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _26125_f);
inline jule::Bool static__1a5ab98e2_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _26625_f);
inline void _1a5b01cae_pushErr(_1a5b017b4_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args);
inline jule::Bool _1a5b02045_checkTrait(_1a5b017b4_typeCompatibilityChecker* _self_);
inline jule::Bool _1a5b022cb_checkPtr(_1a5b017b4_typeCompatibilityChecker* _self_);
inline jule::Bool _1a5b02562_checkPrim(_1a5b017b4_typeCompatibilityChecker* _self_);
inline jule::Bool _1a5b0295d_typeEnum(_1a5b017b4_typeCompatibilityChecker* _self_, jule::Ptr<_1a5a22097_TypeEnum>* _19925_e, jule::Ptr<_1a5b50d52_TypeKind>* _19944_t2);
inline jule::Bool _1a5b02be4_checkTypeEnum(_1a5b017b4_typeCompatibilityChecker* _self_);
inline jule::Bool _1a5b02e7a_check(_1a5b017b4_typeCompatibilityChecker* _self_);
inline void _1a5b039e7_pushErr(_1a5b03563_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25536_args);
inline jule::Bool _1a5b03c7d_checkValidity(_1a5b03563_assignTypeChecker* _self_);
inline jule::Bool _1a5b04014_checkConst(_1a5b03563_assignTypeChecker* _self_);
inline jule::Bool _1a5b0429a_checkCompatibility(_1a5b03563_assignTypeChecker* _self_);
inline jule::Bool _1a5b04531_check(_1a5b03563_assignTypeChecker* _self_);
inline jule::Bool _1a9669944_annotateConstraintElem(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _35746_k);
inline jule::Bool _1a966b55b_annotateConstraintElem(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _35746_k);
inline jule::Bool _1a966a637_annotateConstraintElem(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _35746_k);
inline jule::Bool _1a9673ae6_annotateConstraintElem(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _35746_k);
inline jule::Bool _1a5b0582e_annotateConstraintMap(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _37742_k);
inline jule::Bool _1a5b05b70_annotateConstraintTup(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _39242_k);
inline jule::Bool _1a5b05eb1_annotateConstraintFn(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _40941_k);
inline jule::Bool _1a5b06302_annotateConstraintIdent(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _43044_k);
inline jule::Bool _1a5b06643_annotateConstraint(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _45939_k);
inline void _1a5b069a6_pushGeneric(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _48432_k, jule::I64 _48446_i);
inline jule::Bool _1a5b06ce7_annotatePrim(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _49940_k);
inline jule::Bool _1a5b07138_annotateArr(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _50339_k);
inline jule::Bool _1a5b07479_annotateSlc(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _51339_k);
inline jule::Bool _1a5b07875_checkMapKey(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _52338_k, jule::Ptr<_1a5b50d52_TypeKind>* _52358_ck);
inline jule::Bool _1a5b07bb6_annotateMap(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _53139_k);
inline jule::Bool _1a5b08007_annotateFn(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _54138_k);
inline jule::Bool _1a5b08348_annotatePtr(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _57039_k);
inline jule::Bool _1a5b08689_annotateSptr(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _58040_k);
inline jule::Bool _1a5b089ca_annotateStruct(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _59042_k);
inline jule::Bool _1a5b08d1b_annotateAny(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _61239_k);
inline jule::Bool _1a5b0915c_annotateKind(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _63340_k);
inline jule::Bool _1a5b093e3_annotate(_1a5b04e38_dynamicTypeAnnotation* _self_);
inline void _1a5b0a306_pushErrToken(_1a5b09c95_fnCallArgChecker* _self_, jule::Ptr<_1c80b653c_Token> _67828_token, jule::Str _67843_fmt, jule::Slice<jule::Any> _67856_args);
inline void _1a5b0a669_pushErr(_1a5b09c95_fnCallArgChecker* _self_, jule::Str _68223_fmt, jule::Slice<jule::Any> _68236_args);
inline jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>> _1a5b0a900_getParams(_1a5b09c95_fnCallArgChecker* _self_);
inline jule::Bool _1a5b0ac41_checkCounts(_1a5b09c95_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>>* _69528_params);
inline jule::Bool _1a5b0b1e7_checkArg(_1a5b09c95_fnCallArgChecker* _self_, jule::Ptr<_1a5a0bc30_ParamIns>* _72729_p, jule::Ptr<_1a5b19aeb_Data>* _72748_arg, jule::Ptr<_1c80b653c_Token>* _72765_errorToken);
inline jule::Bool _1a5b0b5e3_push(_1a5b09c95_fnCallArgChecker* _self_, jule::Ptr<_1a5a0bc30_ParamIns>* _75625_p, jule::Ptr<_1a59c82a1_Expr> _75643_arg);
inline jule::Bool _1a5b0b9de_pushVariadic(_1a5b09c95_fnCallArgChecker* _self_, jule::Ptr<_1a5a0bc30_ParamIns>* _78033_p, jule::I64 _78051_i);
inline jule::Bool _1a5b0bd30_checkArgs(_1a5b09c95_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>>* _86130_params);
inline jule::Bool _1a5b0c0b6_checkDynamicTypeAnnotation(_1a5b09c95_fnCallArgChecker* _self_);
inline jule::Bool _1a5b0c34c_check(_1a5b09c95_fnCallArgChecker* _self_);
inline void _1a5b0d22c_pushErr(_1a5b0cbcc_structLitChecker* _self_, jule::Ptr<_1c80b653c_Token> _94123_token, jule::Str _94138_fmt, jule::Slice<jule::Any> _94151_args);
inline void _1a5b0d590_pushSuggestion(_1a5b0cbcc_structLitChecker* _self_, jule::Str _94630_fmt, jule::Slice<jule::Any> _94643_args);
inline void _1a5b0d9ad_pushMatch(_1a5b0cbcc_structLitChecker* _self_, jule::Ptr<_1a59e6ed4_FieldIns>* _95030_f, jule::Ptr<_1a5b19aeb_Data>* _95049_d, jule::Ptr<_1c80b653c_Token>* _95064_errorToken);
inline void _1a5b0dd21_checkPair(_1a5b0cbcc_structLitChecker* _self_, jule::Ptr<_1a59cc9c0_FieldExprPair>* _96930_pair, jule::Slice<jule::Ptr<_1a59c82a1_Expr>>* _96957_exprs);
inline jule::Bool _1a5b0e162_readyExprs(_1a5b0cbcc_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a59c82a1_Expr>>* _100831_exprs);
inline void _1a5b0e41a_check(_1a5b0cbcc_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a59c82a1_Expr>>* _103226_exprs);
inline jule::Ptr<_1a5ab1ee4_Var> _1a5b0ee98_buildVar(_1a5b0e9ae_rangeChecker* _self_, jule::Ptr<_1a59d6cd7_VarDecl>* _110825_decl);
inline void _1a5b10196_setSizeKey(_1a5b0e9ae_rangeChecker* _self_);
inline void _1a5b105b4_checkRangeExprValidity(_1a5b0e9ae_rangeChecker* _self_, jule::Ptr<_1a5b19aeb_Data>* _112743_d, jule::Ptr<_1a5ab1ee4_Var>* _112754_key, jule::Ptr<_1a5b50d52_TypeKind>* _112770_k);
inline void _1a5b107b2_checkSlice(_1a5b0e9ae_rangeChecker* _self_);
inline void _1a5b109b0_checkArray(_1a5b0e9ae_rangeChecker* _self_);
inline void _1a5b10bad_checkMapKeyA(_1a5b0e9ae_rangeChecker* _self_);
inline void _1a5b10dab_checkMapKeyB(_1a5b0e9ae_rangeChecker* _self_);
inline void _1a5b110a9_checkMap(_1a5b0e9ae_rangeChecker* _self_);
inline void _1a5b112a7_checkStr(_1a5b0e9ae_rangeChecker* _self_);
inline void _1a5b114a5_checkComptime(_1a5b0e9ae_rangeChecker* _self_);
inline jule::Bool _1a5b1173b_checkComptimeRange(_1a5b0e9ae_rangeChecker* _self_);
inline jule::Bool _1a5b119c2_check(_1a5b0e9ae_rangeChecker* _self_);
inline void _1a5b1264e_prepareTypes(_1a5b12220_retTypeChecker* _self_);
inline void _1a5b12907_prepareExprs(_1a5b12220_retTypeChecker* _self_, jule::Ptr<_1a59c82a1_Expr>* _128533_e);
inline void _1a5b12b05_checkExprs(_1a5b12220_retTypeChecker* _self_);
inline jule::Bool _1a5b12d8b_tryFuncMultiRetForward(_1a5b12220_retTypeChecker* _self_);
inline jule::Bool _1a5b131cc_check(_1a5b12220_retTypeChecker* _self_, jule::Ptr<_1a59c82a1_Expr>* _138426_e);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5b14c6c_SelectPackage(_1a5b14783_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> _2729_selector);
inline jule::Ptr<_1a5ab1ee4_Var> _1a5b15168_FindVar(_1a5b14783_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1a5b50060_TypeAlias> _1a5b15564_FindTypeAlias(_1a5b14783_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1a59e4d06_Struct> _1a5b15960_FindStruct(_1a5b14783_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1a5a09cc7_Fn> _1a5b15d5b_FindFn(_1a5b14783_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1a5a1d181_Trait> _1a5b1619c_FindTrait(_1a5b14783_SymbolTable* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1a5a2088c_Enum> _1a5b164dd_FindEnum(_1a5b14783_SymbolTable* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1a5a22097_TypeEnum> _1a5b1682e_FindTypeEnum(_1a5b14783_SymbolTable* _self_, jule::Str _9728_ident);
inline jule::Ptr<_1a5ab1ee4_Var> _1a5b16e4a_findVar(_1a5b14783_SymbolTable* _self_, jule::Str* _10824_ident, jule::Bool _10836_binded, jule::Bool _10850_reverse);
inline jule::Ptr<_1a5b50060_TypeAlias> _1a5b17401_findTypeAlias(_1a5b14783_SymbolTable* _self_, jule::Str* _12730_ident, jule::Bool _12742_binded, jule::Bool _12756_reverse);
inline jule::Any _1a5b177ec_defByIdent(_1a5b14783_SymbolTable* _self_, jule::Str* _14827_ident, jule::Bool _14839_binded);
inline jule::Bool _1a5b17ca3_isDuplicatedIdent(_1a5b14783_SymbolTable* _self_, jule::Uintptr _20129_itself, jule::Str* _20147_ident, jule::Bool _20159_binded);
inline jule::Bool _1a5b19ed6_IsNil(_1a5b19aeb_Data* _self_);
inline jule::Bool _1a5b1a26c_IsVoid(_1a5b19aeb_Data* _self_);
inline jule::Bool _1a5b1a503_IsConst(_1a5b19aeb_Data* _self_);
inline jule::Bool _1a5b1a844_GoodOperand(_1a5b19aeb_Data* _self_, jule::Ptr<_1a5b19aeb_Data>* _10528_other);
inline void _1a5b1bd73_pushErr(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _13623_token, jule::Str _13638_fmt, jule::Slice<jule::Any> _13651_args);
inline void _1a5b1c1d6_pushSuggestion(_1a5b1b823_Eval* _self_, jule::Str _14130_fmt, jule::Slice<jule::Any> _14143_args);
inline void _1a5b1c3d4_allowBuiltin(_1a5b1b823_Eval* _self_);
inline void _1a5b1c5d2_disallowBuiltin(_1a5b1b823_Eval* _self_);
inline jule::Bool _1a5b1c868_isUnsafe(_1a5b1b823_Eval* _self_);
inline jule::Bool _1a5b1caee_isGlobal(_1a5b1b823_Eval* _self_);
inline jule::Bool _1a5b1ce0c_applyNumericPrefix(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _16839_d);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b1d24d_litStr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c923b_LitExpr>* _20319_l);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b1d58e_litRune(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c923b_LitExpr>* _22020_l);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b1d8d0_litFloat(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c923b_LitExpr>* _23921_l);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b1dc21_litInt(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c923b_LitExpr>* _25123_l);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b1e062_litNum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c923b_LitExpr>* _30623_l);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b1e3a3_evalLit(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c923b_LitExpr> _31523_lit);
inline jule::Any _1a5b1e6e4_findBuiltins(_1a5b1b823_Eval* _self_, jule::Str* _32829_ident);
inline jule::Any _1a5b1eae0_getDef(_1a5b1b823_Eval* _self_, jule::Str* _35523_ident, jule::Bool _35535_binded);
inline jule::Ptr<_1a5a10e87_ReferenceStack> _1a5b1ed76_getOwnerRefers(_1a5b1b823_Eval* _self_);
inline void _1a97ea058_pushReference(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _41037_ref);
inline void _1a9810eb4_pushReference(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5ab1ee4_Var>* _41037_ref);
inline void _1a8c38dc1_pushReference(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59e7a84_StructIns>* _41037_ref);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b20470__evalEnum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a2088c_Enum> _41725_enm);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b2086b_evalEnum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a2088c_Enum> _42628_enm, jule::Ptr<_1c80b653c_Token> _42640_errorToken);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b20bac__evalTypeEnum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a22097_TypeEnum> _43529_enm);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b210a8_evalTypeEnum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a22097_TypeEnum> _44432_enm, jule::Ptr<_1c80b653c_Token> _44448_errorToken);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b213e9__evalStruct(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59e7a84_StructIns> _45327_s);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b217e5_evalStruct(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59e7a84_StructIns> _46730_s, jule::Ptr<_1c80b653c_Token> _46745_errorToken);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b21b36_evalFnIns(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a0cca8_FnIns> _47725_f);
inline void _1a5b21e99_checkDeprecated(_1a5b1b823_Eval* _self_, jule::Slice<jule::Ptr<_1a59c3389_Directive>>* _48636_directives, jule::Ptr<_1c80b653c_Token> _48667_tok);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b22395_evalFn(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a09cc7_Fn> _50226_f, jule::Ptr<_1c80b653c_Token> _50234_errorToken);
inline void _1a5b227b3_pushIllegalCycleError(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5ab1ee4_Var>* _51638_v1, jule::Ptr<_1a5ab1ee4_Var>* _51649_v2, _1e9a030bc_StrBuilder* _51664_message);
inline jule::Bool _1a5b22bae_checkCrossCycle(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5ab1ee4_Var>* _52632_v, _1e9a030bc_StrBuilder* _52646_message);
inline jule::Bool _1a5b230aa_checkIllegalCycles(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5ab1ee4_Var>* _54339_v, jule::Ptr<_1c80b653c_Token> _54348_declToken);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b234a6_evalVar(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5ab1ee4_Var> _57127_v, jule::Ptr<_1c80b653c_Token> _57136_errorToken);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b238a2_evalTypeAlias(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50060_TypeAlias> _67033_ta, jule::Ptr<_1c80b653c_Token> _67049_errorToken);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b23c9d_evalDef(_1a5b1b823_Eval* _self_, jule::Any* _70628_def, jule::Ptr<_1c80b653c_Token> _70638_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b240de_evalIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c9abb_IdentExpr> _73025_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b24430_evalUnary(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59ca35d_UnaryExpr> _73530_u);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b24771_evalVariadic(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59ca737_VariadicExpr> _74033_v);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b24ab2_evalUnsafe(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59c9615_UnsafeExpr> _76231_u);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b24e03_evalArr(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59ce807_SliceExpr> _77028_s);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b253a9_evalExpSlc(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59ce807_SliceExpr> _84731_s, jule::Ptr<_1a5b50d52_TypeKind> _84750_t, jule::Any _84768_first);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b2a568_evalSliceExpr(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59ce807_SliceExpr> _88534_s);
inline void _1a5b2a8ba_checkIntegerIndexingByData(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _92047_d, jule::Ptr<_1c80b653c_Token> _92061_token);
inline void _1a5b2acd8_indexingPtr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _93232_d, jule::Ptr<_1a5b19aeb_Data>* _93247_index, jule::Ptr<_1a59d0264_IndexingExpr>* _93266_i);
inline void _1a5b2b206_indexingArr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _94832_d, jule::Ptr<_1a5b19aeb_Data>* _94847_index, jule::Ptr<_1a59d0264_IndexingExpr>* _94866_i);
inline void _1a5b2b624_indexingSlc(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _95832_d, jule::Ptr<_1a5b19aeb_Data>* _95847_index, jule::Ptr<_1a59d0264_IndexingExpr>* _95866_i);
inline void _1a5b2ba42_indexingMap(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _98132_d, jule::Ptr<_1a5b19aeb_Data>* _98147_index, jule::Ptr<_1a59d0264_IndexingExpr>* _98166_i);
inline void _1a5b2be60_indexingStr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _99732_d, jule::Ptr<_1a5b19aeb_Data>* _99747_index, jule::Ptr<_1a59d0264_IndexingExpr>* _99766_i);
inline void _1a5b2c37d_toIndexing(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _102631_d, jule::Ptr<_1a5b19aeb_Data>* _102646_index, jule::Ptr<_1a59d0264_IndexingExpr>* _102665_i);
inline jule::Bool _1a5b2c834_pushGenericsFromExprSubIdent(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _105150_sexpr, jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>* _10528_generics, jule::Ptr<_1a59c82a1_Expr>* _105236_expr);
inline jule::Bool _1a5b2cc30_pushGenericsFromData(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>* _106242_generics, jule::Ptr<_1a59c82a1_Expr>* _106270_expr);
inline void _1a5b2d093_evalIdentDeclFromIndexing(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a5b19aeb_Data>* _113247_d, jule::Ptr<_1a59d0264_IndexingExpr>* _113262_i);
inline jule::Bool _1a5b2d549_checkGenericFn(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _117536_f, jule::Ptr<_1c80b653c_Token>* _117552_et, jule::Any* _117569_model);
inline void _1a5b2d8ac_evalFnGenericFromIndexing(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a5b19aeb_Data>* _120447_d, jule::Ptr<_1a59d0264_IndexingExpr>* _120462_i);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b2dbed_evalIndexing(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59d0264_IndexingExpr> _124333_i);
inline __jule_tuple_x_1a5b19aeb_Data__jule_tuple_x_1a5b19aeb_Data _1a5b2e03e_evalSlicingExprs(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59d08c4_SlicingExpr>* _129738_s);
inline void _1a5b2e2e7_slicingArr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _133327_d);
inline void _1a5b2e715_slicingStr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _134827_d, jule::Ptr<_1a5b19aeb_Data>* _134838_l, jule::Ptr<_1a5b19aeb_Data>* _134849_r);
inline void _1a5b2ebdd_checkSlicing(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _138633_d, jule::Ptr<_1a5b19aeb_Data>* _138644_l, jule::Ptr<_1a5b19aeb_Data>* _138655_r, jule::Ptr<_1a59d08c4_SlicingExpr>* _138666_s);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3002e_evalSlicing(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59d08c4_SlicingExpr> _140532_s);
inline void _1a5b3044c_castPtr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _144227_t, jule::Ptr<_1a5b19aeb_Data> _144245_d, jule::Ptr<_1c80b653c_Token> _144255_errorToken);
inline void _1a5b3086a_castStruct(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _146430_t, jule::Ptr<_1a5b19aeb_Data> _146448_d, jule::Ptr<_1c80b653c_Token> _146458_errorToken);
inline void _1a5b30c88_castRef(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _148127_t, jule::Ptr<_1a5b19aeb_Data> _148145_d, jule::Ptr<_1c80b653c_Token> _148155_errorToken);
inline void _1a5b311a6_castSlc(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _150427_t, jule::Ptr<_1a5b19aeb_Data> _150445_d, jule::Ptr<_1c80b653c_Token> _150455_errorToken);
inline void _1a5b31519_castStr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data> _155927_d, jule::Ptr<_1c80b653c_Token> _155937_errorToken);
inline void _1a5b31937_castInt(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _160627_t, jule::Ptr<_1a5b19aeb_Data> _160645_d, jule::Ptr<_1c80b653c_Token> _160655_errorToken);
inline void _1a5b31d55_castNum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _165227_t, jule::Ptr<_1a5b19aeb_Data> _165245_d, jule::Ptr<_1c80b653c_Token> _165255_errorToken);
inline void _1a5b32273_castPrim(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _168328_t, jule::Ptr<_1a5b19aeb_Data> _168346_d, jule::Ptr<_1c80b653c_Token> _168356_errorToken);
inline void _1a5b325d6_castConstant(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _170133_t, jule::Ptr<_1a5b19aeb_Data>* _170152_d);
inline void _1a5b32a04_castTypeEnum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _171033_t, jule::Ptr<_1a5b19aeb_Data>* _171052_d, jule::Ptr<_1c80b653c_Token>* _171067_errorToken);
inline void _1a5b32e22_castTypeEnumT(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _172034_t, jule::Ptr<_1a5b19aeb_Data>* _172053_d, jule::Ptr<_1c80b653c_Token>* _172068_errorToken);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b333c8_evalCastByTypeNData(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _173039_t, jule::Ptr<_1a5b19aeb_Data> _173057_d, jule::Ptr<_1c80b653c_Token> _173071_errorToken);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3387e_evalCastT(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a5b50d52_TypeKind>* _180331_t, jule::Ptr<_1a59c82a1_Expr>* _180350_e, jule::Ptr<_1c80b653c_Token>* _180365_et);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b33bc0_evalCast(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cab11_CastExpr> _182029_c);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b34011_evalNsSelection(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59caeda_NsSelectionExpr> _182931_s);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b344b7_evalStructLitExplicit(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59e7a84_StructIns> _185542_s, jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _18567_exprs, jule::Ptr<_1c80b653c_Token> _185627_errorToken);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b34808_evalStructLit(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cd2ea_StructLit> _189334_lit);
inline _1a5b62c10_typeChecker _1a5b34a8e_typeChecker(_1a5b1b823_Eval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b34dd0_evalType(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c3e6c_TypeDecl> _192528_t);
inline void _1a5b35243_callTypeFn(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cbeca_FnCallExpr>* _193832_fc, jule::Ptr<_1a5b19aeb_Data>* _193854_d);
inline void _1a5b355a6_callBuiltinFn(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cbeca_FnCallExpr>* _196435_fc, jule::Ptr<_1a5b19aeb_Data>* _196457_d);
inline void _1a5b35919_checkFnOfConcurrentCall(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _197640_f, jule::Ptr<_1c80b653c_Token> _197651_errorToken);
inline void _1a5b35d37_processExceptionalHandler(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _199546_f, jule::Ptr<_1a59cbeca_FnCallExpr>* _199562_fc, jule::Ptr<_1a5b19aeb_Data>* _199584_d);
inline void _1a5b3619a_callFn(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cbeca_FnCallExpr>* _202228_fc, jule::Ptr<_1a5b19aeb_Data>* _202250_d);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b364db_evalFnCall(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cbeca_FnCallExpr> _217431_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b368d7_evalEnumStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a2088c_Enum> _220734_enm, jule::Ptr<_1c80b653c_Token> _220750_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b36cd3_evalTypeEnumStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a22097_TypeEnum> _221538_enm, jule::Ptr<_1c80b653c_Token> _221554_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b371ce_evalStructStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59e7a84_StructIns> _223836_s, jule::Ptr<_1c80b653c_Token> _223851_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b37685_evalTraitSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data> _227337_d, jule::Ptr<_1a5a1d181_Trait> _227351_trt, jule::Ptr<_1c80b653c_Token> _227368_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b37be6_evalStructSubIdentField(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _229344_d, jule::Ptr<_1a59e7a84_StructIns>* _229359_s, jule::Ptr<_1c80b653c_Token>* _229379_tok, jule::Ptr<_1a59e6ed4_FieldIns>* _229397_f);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b38257_evalStructSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data> _231638_d, jule::Ptr<_1a59e7a84_StructIns> _231652_s, jule::Ptr<_1a59cb3b4_SubIdentExpr> _231671_si, jule::Bool _231690_ref);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b38598_evalIntTypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _235733_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b388d9_evalUintTypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _238434_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b38c2a_evalI8TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _240232_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3906b_evalI16TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _243133_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b393ac_evalI32TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _246033_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b396ed_evalI64TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _248933_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b39a3e_evalU8TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _251832_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b39d80_evalU16TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _253733_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3a1c1_evalU32TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _255633_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3a512_evalU64TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _257533_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3a853_evalF32TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _259433_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3ab94_evalF64TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _263333_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3b090_evalPrimStatic(_1a5b1b823_Eval* _self_, jule::Str _267230_kind, jule::Ptr<_1c80b653c_Token> _267241_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3b48b_evalTypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data> _270434_d, jule::Ptr<_1a59cb3b4_SubIdentExpr> _270448_si);
inline jule::Ptr<_1a5b19aeb_Data> _1a9970530_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a34a27_comptimeTypeInfo>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si);
inline jule::Ptr<_1a5b19aeb_Data> _1a9974b83_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a25bc2_comptimeStructField>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si);
inline jule::Ptr<_1a5b19aeb_Data> _1a9979292_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a2c239_comptimeEnumField>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si);
inline jule::Ptr<_1a5b19aeb_Data> _1a997d8e5_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a2ebcb_comptimeParam>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si);
inline jule::Ptr<_1a5b19aeb_Data> _1a9983279_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a28e7d_comptimeStatic>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si);
inline jule::Ptr<_1a5b19aeb_Data> _1a9987888_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a3b039_comptimeValue>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si);
inline jule::Ptr<_1a5b19aeb_Data> _1a998be97_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a3ee83_comptimeFile>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si);
inline __jule_tuple_x_1a5b19aeb_Data__jule_tuple_bool _1a5b3bd3d_tryComptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _272843_d, jule::Ptr<_1a59cb3b4_SubIdentExpr> _272857_si);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3c239_evalObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data> _275635_d, jule::Ptr<_1a59cb3b4_SubIdentExpr> _275649_si);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3c57a_evalSubIdent(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cb3b4_SubIdentExpr> _280033_si);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3c8bb_evalTuple(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59c8d95_TupleExpr> _281430_tup);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3ccb7_evalMap(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a5b5e5be_Map> _284328_m, jule::Ptr<_1a59cd7a1_BraceLit> _284341_lit);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3d108_evalBraceLit(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cd7a1_BraceLit> _289233_lit);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3d449_evalAnonFunc(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59d5b2c_FnDecl> _290733_decl);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3d78a_evalBinary(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cb86a_BinaryExpr> _294531_op);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3dacb_evalExprKind(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Any _296033_kind);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3de1c_eval1(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59c82a1_Expr> _300826_expr);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3e25d_eval(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59c82a1_Expr> _303625_expr);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3e59e_evalExpr1(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59c82a1_Expr> _305130_expr);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b3e8e0_evalExpr(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59c82a1_Expr> _306729_expr);
inline _1a5b3eda7_unaryEval static__1a5b402e7_new(jule::Ptr<_1a5b1b823_Eval> _308820_e);
inline void _1a5b404e5_minus(_1a5b3eda7_unaryEval* _self_);
inline void _1a5b406e3_plus(_1a5b3eda7_unaryEval* _self_);
inline void _1a5b408e1_caret(_1a5b3eda7_unaryEval* _self_);
inline void _1a5b40ade_excl(_1a5b3eda7_unaryEval* _self_);
inline void _1a5b40cdc_star(_1a5b3eda7_unaryEval* _self_);
inline void _1a5b40eda_amper(_1a5b3eda7_unaryEval* _self_);
inline void _1a5b411d8_typeDecl(_1a5b3eda7_unaryEval* _self_);
inline void _1a5b413d6_evalData(_1a5b3eda7_unaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b41727_eval(_1a5b3eda7_unaryEval* _self_, jule::Ptr<_1a59ca35d_UnaryExpr> _334824_u);
inline _1a5b41d43_binaryEval static__1a5b423e8_newPlain(jule::Ptr<_1a5b1b823_Eval> _339625_e);
inline _1a5b41d43_binaryEval static__1a5b4276c_new(jule::Ptr<_1a5b1b823_Eval> _340220_e, jule::Ptr<_1c80b653c_Token> _340234_op);
inline jule::Bool _1a5b42a03_checkTypeCompatibility(_1a5b41d43_binaryEval* _self_);
inline jule::Bool _1a5b42c89_checkStructCommonOperatorCompatibility(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b43020_evalComptimeTypeInfo(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b432a6_evalNil(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b4353c_evalEnum(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b437c3_evalTypeEnum(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b43a59_evalSptr(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b43ce0_evalPtr(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b44076_evalArr(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b4430c_evalSlc(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b44593_evalStruct(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b44829_evalTrait(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b44ab0_evalAny(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b44d46_evalBool(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b450cc_evalStr(_1a5b41d43_binaryEval* _self_);
inline void _1a5b452ca_setTypeToGreater(_1a5b41d43_binaryEval* _self_);
inline void _1a5b45583_checkModData(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a5b19aeb_Data>* _382333_d);
inline void _1a5b45781_mod(_1a5b41d43_binaryEval* _self_);
inline jule::Bool _1a5b45b7c_numbersAreCompatibile(_1a5b41d43_binaryEval* _self_, jule::Str* _384534_lk, jule::Str* _384544_rk);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b45e13_evalFloat(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b46199_evalInt(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b46430_evalPrim(_1a5b41d43_binaryEval* _self_);
inline void _1a5b4662d_checkSpecialCases(_1a5b41d43_binaryEval* _self_);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b468b4_evalOp(_1a5b41d43_binaryEval* _self_);
inline void _1a5b46b6c_evalConst(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a5b19aeb_Data>* _408330_d);
inline void _1a5b46e25_checkData(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a5b19aeb_Data>* _416130_d);
inline void _1a5b47123_checkDatas(_1a5b41d43_binaryEval* _self_);
inline void _1a5b473cb_setModel(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a5b19aeb_Data>* _417329_d);
inline void _1a5b47684_postEval(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a5b19aeb_Data>* _420029_d);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b47a80_solveExplicit(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a5b19aeb_Data>* _420534_l, jule::Ptr<_1a5b19aeb_Data>* _420549_r);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b47dc1_eval(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a59cb86a_BinaryExpr>* _422525_op);
inline jule::Str _1a5b5121a_Str(_1a5b50d52_TypeKind* _self_);
inline jule::Bool _1a5b5155b_Equal(jule::Ptr<_1a5b50d52_TypeKind> _self_, jule::Ptr<_1a5b50d52_TypeKind> _9018_other);
inline jule::Bool _1a5b51b99_Binded(_1a5b50d52_TypeKind* _self_);
inline jule::Bool _1a5b51e30_IsNil(_1a5b50d52_TypeKind* _self_);
inline jule::Bool _1a5b521b6_Void(_1a5b50d52_TypeKind* _self_);
inline jule::Bool _1a5b5244c_Comparable(_1a5b50d52_TypeKind* _self_);
inline jule::Bool _1a5b526d3_Mutable(_1a5b50d52_TypeKind* _self_);
inline jule::Bool _1a5b52969_Ordered(_1a5b50d52_TypeKind* _self_);
inline jule::Bool _1a5b52c00_NilCompatible(_1a5b50d52_TypeKind* _self_);
inline jule::Bool _1a5b52e86_PerformsRC(_1a5b50d52_TypeKind* _self_);
inline jule::Bool _1a5b5321c_Variadicable(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5b5892b_Prim> _1a5b534a3_Prim(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5b5c457_Sptr> _1a5b53739_Sptr(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5b60c1e_Ptr> _1a5b539c0_Ptr(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a2088c_Enum> _1a5b53c56_Enum(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a22097_TypeEnum> _1a5b53edc_TypeEnum(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5b6024b_Arr> _1a5b54273_Arr(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5b5ce2a_Slc> _1a5b54509_Slc(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a0cca8_FnIns> _1a5b54790_Fn(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a59e7a84_StructIns> _1a5b54a26_Struct(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a1d181_Trait> _1a5b54cac_Trait(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5b5e5be_Map> _1a5b55043_Map(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5b5da1e_Tuple> _1a5b552c9_Tup(_1a5b50d52_TypeKind* _self_);
inline jule::Bool _1a5b55560_comptime(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a27883_comptimeStructFields> _1a5b557e6_comptimeStructFields(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a25bc2_comptimeStructField> _1a5b55a7c_comptimeStructField(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a2d5d1_comptimeEnumFields> _1a5b55d13_comptimeEnumFields(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a2c239_comptimeEnumField> _1a5b56099_comptimeEnumField(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a31d65_comptimeParams> _1a5b56330_comptimeParams(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a2ebcb_comptimeParam> _1a5b565b6_comptimeParam(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a251ee_comptimeRange> _1a5b5684c_comptimeRange(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a3342c_comptimeTypeInfos> _1a5b56ad3_comptimeTypeInfos(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a34a27_comptimeTypeInfo> _1a5b56d69_comptimeTypeInfo(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a2ab3e_comptimeStatics> _1a5b57100_comptimeStatics(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a28e7d_comptimeStatic> _1a5b57386_comptimeStatic(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a3b039_comptimeValue> _1a5b5761c_comptimeValue(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a3ee83_comptimeFile> _1a5b578a3_comptimeFile(_1a5b50d52_TypeKind* _self_);
inline jule::Ptr<_1a5a3d888_comptimeFiles> _1a5b57b39_comptimeFiles(_1a5b50d52_TypeKind* _self_);
inline jule::Bool _1a5b58398_checked(_1a5b58024_TypeSymbol* _self_);
inline jule::Str _1a5b58c6c_Str(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b590ad_Equal(jule::Ptr<_1a5b5892b_Prim> _self_, jule::Ptr<_1a5b50d52_TypeKind> _50818_other);
inline jule::Bool _1a5b59553_IsConstraint(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b597d9_IsI8(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b59a70_IsI16(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b59d06_IsI32(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5a08c_IsI64(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5a323_IsU8(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5a5a9_IsU16(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5a840_IsU32(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5aac6_IsU64(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5ad5c_IsF32(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5b0e3_IsF64(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5b379_IsInt(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5b610_IsUint(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5b896_IsUintptr(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5bb2c_IsBool(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5bdb3_IsStr(_1a5b5892b_Prim* _self_);
inline jule::Bool _1a5b5c149_IsAny(_1a5b5892b_Prim* _self_);
inline jule::Str _1a5b5c7cb_Str(_1a5b5c457_Sptr* _self_);
inline jule::Bool _1a5b5cb1c_Equal(jule::Ptr<_1a5b5c457_Sptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _58518_other);
inline jule::Str _1a5b5d3ae_Str(_1a5b5ce2a_Slc* _self_);
inline jule::Bool _1a5b5d700_Equal(jule::Ptr<_1a5b5ce2a_Slc> _self_, jule::Ptr<_1a5b50d52_TypeKind> _60418_other);
inline jule::Str _1a5b5dd93_Str(_1a5b5da1e_Tuple* _self_);
inline jule::Bool _1a5b5e1d4_Equal(jule::Ptr<_1a5b5da1e_Tuple> _self_, jule::Ptr<_1a5b50d52_TypeKind> _63318_other);
inline jule::Str _1a5b5e943_Str(_1a5b5e5be_Map* _self_);
inline jule::Bool _1a5b5ec84_Equal(jule::Ptr<_1a5b5e5be_Map> _self_, jule::Ptr<_1a5b50d52_TypeKind> _67018_other);
inline jule::Str _1a5b605c0_Str(_1a5b6024b_Arr* _self_);
inline jule::Bool _1a5b60911_Equal(jule::Ptr<_1a5b6024b_Arr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _69818_other);
inline jule::Str _1a5b61093_Str(_1a5b60c1e_Ptr* _self_);
inline jule::Bool _1a5b613d4_Equal(jule::Ptr<_1a5b60c1e_Ptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _72218_other);
inline jule::Bool _1a5b61758_IsUnsafe(_1a5b60c1e_Ptr* _self_);
inline void _1a5b6344c_pushErr(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1c80b653c_Token> _81223_token, jule::Str _81238_fmt, jule::Slice<jule::Any> _81251_args);
inline void _1a5b6364a_allowBuiltin(_1a5b62c10_typeChecker* _self_);
inline void _1a5b63848_disallowBuiltin(_1a5b62c10_typeChecker* _self_);
inline void _1a9b7eac4_pushReference(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59e7a84_StructIns>* _82437_t);
inline void _1a9b824bc_pushReference(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a5a1d181_Trait>* _82437_t);
inline void _1a5b63da9_pushReferenceByKind(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _83440_k);
inline void _1a5b642c7_pushCycleError(_1a5b62c10_typeChecker* _self_, jule::Any _84526_def1, jule::Any _84537_def2, _1e9a030bc_StrBuilder* _84553_message);
inline jule::Bool _1a5b646c3_checkCrossCycle(_1a5b62c10_typeChecker* _self_, jule::Any _86727_decl, _1e9a030bc_StrBuilder* _86743_message);
inline jule::Bool _1a5b64abe_checkIllegalCycles(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _90135_ident, jule::Any _90162_decl);
inline jule::Trait _1a5b64eba_fromTypeAlias(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _95130_decl, jule::Ptr<_1a5b50060_TypeAlias>* _95157_ta);
inline jule::Ptr<_1a5a2088c_Enum> _1a5b653b6_fromEnum(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _102525_decl, jule::Ptr<_1a5a2088c_Enum>* _102552_e);
inline jule::Ptr<_1a5a22097_TypeEnum> _1a5b657b2_fromTypeEnum(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _103729_decl, jule::Ptr<_1a5a22097_TypeEnum>* _103756_e);
inline jule::Ptr<_1a5a1d181_Trait> _1a5b65bad_fromTrait(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _104926_decl, jule::Ptr<_1a5a1d181_Trait>* _104953_t);
inline jule::Bool _1a5b660a9_checkStructIns(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59e7a84_StructIns>* _106235_ins, jule::Ptr<_1c80b653c_Token>* _106257_errorToken);
inline void _1a5b66362_appendUsedStructReference(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59e4d06_Struct>* _108346_s);
inline jule::Ptr<_1a59e7a84_StructIns> _1a5b6675d_buildStructInstance(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _109640_decl, jule::Ptr<_1a59e4d06_Struct>* _109667_s);
inline jule::Ptr<_1a59e7a84_StructIns> _1a5b66b59_fromStruct(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _114431_decl, jule::Ptr<_1a59e4d06_Struct>* _114458_s);
inline jule::Trait _1a5b66e9a_getDef(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _120227_decl);
inline jule::Trait _1a5b672db_buildIdent(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl> _126330_decl);
inline jule::Trait _1a5b6762c_buildSubIdent(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4841_SubIdentTypeDecl> _126733_decl);
inline jule::Ptr<_1a5b5c457_Sptr> _1a5b6796d_buildSptrFromType(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _130138_elem);
inline jule::Ptr<_1a5b5c457_Sptr> _1a5b67cae_buildSptr(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c5017_SptrTypeDecl> _132129_decl);
inline jule::Ptr<_1a5b60c1e_Ptr> _1a5b68100_buildPtrFromType(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _133037_elem);
inline jule::Ptr<_1a5b60c1e_Ptr> _1a5b68441_buildPtr(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c5996_PtrTypeDecl> _134528_decl);
inline jule::Ptr<_1a5b5ce2a_Slc> _1a5b68782_buildSlc(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c539c_SlcTypeDecl> _136228_decl);
inline jule::Ptr<_1a5b6024b_Arr> _1a5b68ac3_buildArr(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c6238_ArrTypeDecl> _138328_decl);
inline jule::Ptr<_1a5b5e5be_Map> _1a5b68e14_buildMap(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c6986_MapTypeDecl> _143228_decl);
inline jule::Ptr<_1a5b5da1e_Tuple> _1a5b69255_buildTuple(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c5699_TupleTypeDecl> _145630_decl);
inline jule::Bool _1a5b69596_checkFuncTypes(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _146935_f);
inline jule::Ptr<_1a5a0cca8_FnIns> _1a5b698d7_buildFunc(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59d5b2c_FnDecl> _148729_decl);
inline jule::Trait _1a5b69c28_buildByNamespace(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4c1a_NamespaceTypeDecl> _151736_decl);
inline jule::Ptr<_1a5b50d52_TypeKind> _1a5b6a069_build(_1a5b62c10_typeChecker* _self_, jule::Any* _154126_declKind);
inline jule::Ptr<_1a5b50d52_TypeKind> _1a5b6a3aa_checkDecl(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c3e6c_TypeDecl>* _162930_decl);
inline jule::Bool static__1a5b6ad06_prim(jule::Str* _165618_ident, jule::Ptr<_1a5b5892b_Prim> _165630_t);
inline jule::Bool static__1a5b6b17a_exist(jule::Str* _166019_ident, jule::Ptr<_1a5b50d52_TypeKind>* _166036_k);
inline void _1a6873601_stop(_1a6872e80_scopeParser* _self_);
inline jule::Bool _1a6873887_stopped(_1a6872e80_scopeParser* _self_);
inline jule::Bool _1a6873b1d_finished(_1a6872e80_scopeParser* _self_);
inline jule::Bool _1a6873da4_isLastSt(_1a6872e80_scopeParser* _self_);
inline void _1a6874217_pushErr(_1a6872e80_scopeParser* _self_, jule::Ptr<_1c80b653c_Token> _18823_token, jule::Str _18838_fmt);
inline void _1a687457a_pushSuggestion(_1a6872e80_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args);
inline void _1a6874833_insertAsNext(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _19733_tokens);
inline jule::Ptr<_1a68725de_stmt> _1a6874ab9_next(_1a6872e80_scopeParser* _self_);
inline jule::Ptr<_1a59d3e8d_ScopeTree> _1a6874eb5_buildScope(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _20731_tokens, jule::Ptr<_1c80b653c_Token> _20753_end);
inline jule::Ptr<_1a59d6cd7_VarDecl> _1a6875306_buildVarSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _21831_tokens);
inline jule::Ptr<_1a59d71b1_RetSt> _1a6875647_buildRetSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _22430_tokens);
inline jule::Ptr<_1a59d7931_Iter> _1a6875988_buildWhileNextIter(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a68725de_stmt>* _23539_s);
inline jule::Ptr<_1a59d825b_WhileKind> _1a6875cc9_buildWhileIterKind(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _28039_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1a687611a_getRangeKindKeysTokens(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _28643_toks);
inline jule::Ptr<_1a59d6cd7_VarDecl> _1a687645b_buildRangeKindKey(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _29238_tokens);
inline jule::Slice<jule::Ptr<_1a59d6cd7_VarDecl>> _1a687679c_buildRangeKindKeys(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>>* _31839_parts);
inline void _1a6876b10_setupRangeKindKeysPlain(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a59d8b63_RangeKind>* _32644_rng, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _32666_tokens);
inline void _1a6876e73_setupRangeKindKeysExplicit(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a59d8b63_RangeKind>* _34147_rng, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _34169_tokens);
inline void _1a68772d6_setupRangeKindKeys(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a59d8b63_RangeKind>* _35039_rng, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _35061_tokens);
inline jule::Ptr<_1a59d8b63_RangeKind> _1a687778c_buildRangeIterKind(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _35839_var_tokens, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _3598_exprTokens, jule::Ptr<_1c80b653c_Token>* _35935_inToken);
inline jule::Any _1a6877b88_buildCommonIterKind(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _37440_tokens, jule::Ptr<_1c80b653c_Token>* _37459_err_tok);
inline jule::Ptr<_1a59d7931_Iter> _1a6877ec9_buildCommonIter(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _40135_tokens);
inline jule::Ptr<_1a59d7931_Iter> _1a687831a_buildIterSt(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a68725de_stmt>* _43132_st);
inline jule::Ptr<_1a59d903c_BreakSt> _1a687865b_buildBreakSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _43833_tokens);
inline jule::Ptr<_1a59d9416_ContSt> _1a687899c_buildContSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _45632_tokens);
inline jule::Ptr<_1a59d98bc_If> _1a6878cdd_buildIf(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _47428_tokens);
inline jule::Ptr<_1a59d9c96_Else> _1a687912e_buildElse(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _50730_tokens);
inline jule::Ptr<_1a59da24c_Conditional> _1a6879470_buildIfElseChain(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _53136_tokens);
inline jule::Ptr<_1a59c82a1_Expr> _1a68797b1_buildCoCallSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _55433_tokens);
inline jule::Ptr<_1a59d192a_GotoSt> _1a6879b02_buildGotoSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _57032_tokens);
inline jule::Ptr<_1a59d1c27_FallSt> _1a6879e43_buildFallSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _59032_tokens);
inline jule::Ptr<_1a59da989_TypeAliasDecl> _1a687a284_buildTypeAliasSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _60037_tokens);
inline void _1a687a75c_pushCaseExpr(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _60632_tokens, jule::Ptr<_1c80b653c_Token> _60654_token, jule::Bool _6073_typeMatch, jule::Slice<jule::Ptr<_1a59c82a1_Expr>>* _60725_exprs);
inline __jule_tuple_sx_1a59c82a1_Expr__jule_tuple_bool _1a687ac13_buildCaseExprs(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _62935_tokens, jule::Ptr<_1c80b653c_Token>* _62958_colon, jule::Bool _62973_typeMatch);
inline jule::Ptr<_1a59d3e8d_ScopeTree> _1a687b054_buildCaseScope(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _67135_tokens);
inline __jule_tuple_x_1a59dae40_Case__jule_tuple_bool _1a687b450_buildCase(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _69830_tokens, jule::Bool _69848_typeMatch);
inline __jule_tuple_sx_1a59dae40_Case__jule_tuple_x_1a59d9c96_Else _1a687b84b_buildCases(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _71330_tokens, jule::Bool _71348_typeMatch);
inline jule::Ptr<_1a59db759_MatchCase> _1a687bb8c_buildMatchCase(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _74734_tokens);
inline jule::Ptr<_1a59d3e8d_ScopeTree> _1a687becd_buildScopeSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _78032_tokens);
inline jule::Ptr<_1a59d1551_LabelSt> _1a687c31e_buildLabelSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _82333_tokens);
inline __jule_tuple__1a59d35ca_StmtData__jule_tuple_bool _1a687c660_buildIdSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _83830_tokens);
inline jule::Ptr<_1a6892e6c_assignInfo> _1a687c9a1_buildAssignInfo(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _85236_tokens);
inline jule::Ptr<_1a59d2387_AssignLeft> _1a687cce2_buildAssignL(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _89733_tokens);
inline jule::Slice<jule::Ptr<_1a59d2387_AssignLeft>> _1a687d133_buildAssignLs(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>>* _90834_parts);
inline __jule_tuple__1a59d35ca_StmtData__jule_tuple_bool _1a687d474_buildPlainAssign(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _91737_tokens);
inline jule::Bool _1a687d870_buildDeclAssign1(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _96737_lefts, jule::Ptr<_1a59d291a_AssignSt>* _96759_assign);
inline __jule_tuple_x_1a59d291a_AssignSt__jule_tuple_bool _1a687dbb1_buildDeclAssign(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _101235_tokens);
inline __jule_tuple__1a59d35ca_StmtData__jule_tuple_bool _1a687e002_buildAssignSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _104634_tokens);
inline jule::Ptr<_1a59c8b75_UseExpr> _1a687e343_buildUseExpr(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _105933_tokens);
inline jule::Any _1a687e684_buildConstSt(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a68725de_stmt>* _107233_st);
inline jule::Any _1a687e9c5_buildSt(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a68725de_stmt>* _109728_st);
inline void _1a687ed38_build(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _116126_tokens, jule::Ptr<_1a59d3e8d_ScopeTree>* _116149_s);
inline void _1a688118b_pushErr(_1a68808a5_exprBuilder* _self_, jule::Ptr<_1c80b653c_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args);
inline void _1a68814ee_pushSuggestion(_1a68808a5_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args);
inline jule::Ptr<_1a59c8d95_TupleExpr> _1a6881840_buildTuple(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>>* _5431_parts);
inline jule::Ptr<_1a59c923b_LitExpr> _1a6881b81_buildLit(_1a68808a5_exprBuilder* _self_, jule::Ptr<_1c80b653c_Token> _6424_token);
inline jule::Any _1a6882313_buildSingle(_1a68808a5_exprBuilder* _self_, jule::Ptr<_1c80b653c_Token> _7531_token);
inline jule::Ptr<_1a59c9abb_IdentExpr> _1a6882654_buildBindIdent(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _9235_tokens);
inline jule::Ptr<_1a59ca35d_UnaryExpr> _1a6882995_buildUnary(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _11130_tokens);
inline jule::Ptr<_1a59cb3b4_SubIdentExpr> _1a6882cd6_buildObjSubIdent(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _13236_tokens);
inline jule::Ptr<_1a59caeda_NsSelectionExpr> _1a6883127_buildNsSubIdent(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _14736_tokens);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a6883468_buildType(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _17230_tokens);
inline jule::Any _1a68837a9_buildSubIdent(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _18634_tokens);
inline jule::Ptr<_1a59ca737_VariadicExpr> _1a6883aea_buildVariadic(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _20833_tokens);
inline jule::Ptr<_1a59c856a_RangeExpr> _1a6883e3b_buildBetweenParentheses(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _21743_tokens);
inline jule::Ptr<_1a59cab11_CastExpr> _1a688427c_tryBuildCast(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _22933_tokens);
inline void _1a688469a_pushArg(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a59c82a1_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1c80b653c_Token>> _30347_tokens, jule::Ptr<_1c80b653c_Token> _30365_err_token);
inline jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _1a68849db_buildArgs(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _31229_tokens);
inline jule::Ptr<_1a59cbeca_FnCallExpr> _1a68852d3_buildFnCall(_1a68808a5_exprBuilder* _self_, jule::Ptr<_1c80b653c_Token>* _37832_token, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _37873_args);
inline jule::Any _1a6885624_buildParenthesesRange(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _38642_tokens);
inline jule::Ptr<_1a59c9615_UnsafeExpr> _1a6885965_buildUnsafeExpr(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _40835_tokens);
inline jule::Ptr<_1a59d5b2c_FnDecl> _1a6885ca6_buildAnonFn(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _42332_tokens);
inline jule::Any _1a68860e7_buildUnsafe(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _43232_tokens);
inline void _1a6886515_pushRangeLitPart(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _44236_part, jule::Ptr<_1c80b653c_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>>* _44328_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1a6886856_getBraceRangeLitExprParts(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _45345_tokens);
inline jule::Ptr<_1a59cc9c0_FieldExprPair> _1a6886b97_buildFieldExprPair(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _49538_tokens);
inline jule::Ptr<_1a59c82a1_Expr> _1a6886ed8_buildStructLitExpr(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _50839_tokens);
inline jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _1a6887329_buildStructLitExprs(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _52340_tokens);
inline jule::Ptr<_1a59cd2ea_StructLit> _1a688766a_buildTypedStructLiteral(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _53643_tokens);
inline jule::Ptr<_1a59c82a1_Expr> _1a68879ab_buildBraceLitPart(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _56038_tokens);
inline jule::Ptr<_1a59cd7a1_BraceLit> _1a6887cec_buildBraceLit(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _57734_tokens);
inline jule::Any _1a688813d_buildBraceRange(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _59636_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1a688847e_getEnumerableParts(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _64838_tokens);
inline jule::Ptr<_1a59ce807_SliceExpr> _1a68887c0_buildSlice(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _65530_tokens);
inline jule::Ptr<_1a59d0264_IndexingExpr> _1a6888c76_buildIndexing(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1c80b653c_Token>> _6787_tokens, jule::Ptr<_1c80b653c_Token> _67829_errorToken);
inline jule::Ptr<_1a59d08c4_SlicingExpr> _1a6889392_buildSlicing(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _70160_start, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _7028_to, jule::Ptr<_1c80b653c_Token>* _70227_errorToken, jule::Ptr<_1c80b653c_Token> _70251_end);
inline jule::Any _1a68896d3_buildBracketRange(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _71737_tokens);
inline jule::Any _1a6889a24_buildExclRight(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _74235_tokens);
inline jule::Any _1a6889d65_buildData(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _76030_tokens);
inline jule::Any _1a688a261_buildBinary(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _82932_tokens, jule::I64 _82950_i);
inline jule::Any _1a688a5a2_build(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _85426_tokens);
inline jule::Any _1a688a8e3_buildKind(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _86530_tokens);
inline jule::Ptr<_1a59c82a1_Expr> _1a688ac34_buildFromTokens(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _87635_tokens);
inline void _1a6896668_stop(_1a689636b_parser* _self_);
inline jule::Bool _1a68968ee_stopped(_1a689636b_parser* _self_);
inline void _1a6896d1c_pushErr(_1a689636b_parser* _self_, jule::Ptr<_1c80b653c_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args);
inline void _1a6897180_pushSuggestion(_1a689636b_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args);
inline jule::Ptr<_1a59c82a1_Expr> _1a68974c1_buildExpr(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _21731_tokens);
inline jule::Ptr<_1a59c3389_Directive> _1a6897812_buildDirective(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _22134_tokens);
inline void _1a6897aba_pushDirective(_1a689636b_parser* _self_, jule::Ptr<_1a59c3389_Directive> _23633_d);
inline jule::Ptr<_1a59d3e8d_ScopeTree> _1a6897eb6_buildScope(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _24932_tokens, jule::Ptr<_1c80b653c_Token> _24954_end);
inline __jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool _1a689846c__buildType(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err);
inline __jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool _1a6898923_buildType(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err);
inline jule::Ptr<_1a59da989_TypeAliasDecl> _1a6898c64_buildTypeAliasDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _28140_tokens);
inline void _1a68990c7_buildVarTypeAndExpr(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59d6cd7_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _32159_tokens);
inline void _1a689943a_buildVarCommon(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59d6cd7_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1c80b653c_Token>> _35453_tokens);
inline void _1a689979d_buildVarBegin(_1a689636b_parser* _self_, jule::Ptr<_1a59d6cd7_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _37052_tokens);
inline jule::Ptr<_1a59d6cd7_VarDecl> _1a6899ade_buildVar(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _39829_tokens);
inline jule::Ptr<_1a59d1177_GenericDecl> _1a6899e30_buildGeneric(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _41734_tokens);
inline jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>> _1a689a32b_buildGenerics(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _45435_tokens, jule::Ptr<_1c80b653c_Token>* _45454_errorToken);
inline jule::Ptr<_1a59d46ca_ParamDecl> _1a689a66c_buildSelfParam(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _47434_tokens);
inline void _1a689aa8a_paramTypeBegin(_1a689636b_parser* _self_, jule::Ptr<_1a59d46ca_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _51468_tokens);
inline void _1a689aded_buildParamType(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59d46ca_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _52960_tokens);
inline void _1a689b261_buildParamBody(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59d46ca_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1c80b653c_Token>> _54259_tokens);
inline jule::Ptr<_1a59d46ca_ParamDecl> _1a689b5a2_buildParam(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _56231_tokens);
inline void _1a689b85a_checkParams(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1a59d46ca_ParamDecl>>* _60532_params);
inline jule::Slice<jule::Ptr<_1a59d46ca_ParamDecl>> _1a689bc56_buildParams(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _62533_tokens, jule::Bool _62551_method);
inline __jule_tuple_x_1a59c6d60_RetTypeDecl__jule_tuple_bool _1a689c152_buildMultiRetType(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _65539_tokens, jule::I64* _65562_i);
inline __jule_tuple_x_1a59c6d60_RetTypeDecl__jule_tuple_bool _1a689c54d_buildRetType(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _72634_tokens, jule::I64* _72657_i);
inline jule::Ptr<_1a59d5b2c_FnDecl> _1a689ca04_buildFnPrototype(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method);
inline jule::Ptr<_1a59d5b2c_FnDecl> _1a689ceaa_buildFn(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype);
inline jule::Slice<jule::Ptr<_1c80b653c_Token>> _1a689d2eb_getUseDeclSelectors(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _87639_tokens);
inline void _1a689d65e_buildBindUseDecl(_1a689636b_parser* _self_, jule::Ptr<_1a59dc073_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _90154_tokens);
inline jule::Str _1a689d9a0_useDeclTokstoa(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _91431_tokens);
inline void _1a689dd13_buildStdUseDecl(_1a689636b_parser* _self_, jule::Ptr<_1a59dc073_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1c80b653c_Token>> _92956_tokens);
inline void _1a689e176_buildIdentUseDecl(_1a689636b_parser* _self_, jule::Ptr<_1a59dc073_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1c80b653c_Token>> _98758_tokens);
inline void _1a689e4d9_parseUseDecl(_1a689636b_parser* _self_, jule::Ptr<_1a59dc073_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1c80b653c_Token>> _103553_tokens);
inline jule::Ptr<_1a59dc073_UseDecl> _1a689e8d5_buildUseDecl(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _106932_tokens, jule::Bool _106950_binded);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a689ecd1_buildTypeEnumItemKind(jule::Ptr<_1a689636b_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _108356_tokens);
inline jule::Slice<jule::Ptr<_1a59dd915_TypeEnumItemDecl>> _1a68a0122_buildTypeEnumItems(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _112040_tokens);
inline jule::Ptr<_1a59de075_TypeEnumDecl> _1a68a0463_buildTypeEnumDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _114439_tokens);
inline jule::Ptr<_1a59c82a1_Expr> _1a68a085e_buildEnumItemExpr(jule::Ptr<_1a689636b_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _117152_tokens);
inline jule::Slice<jule::Ptr<_1a59dc529_EnumItemDecl>> _1a68a0ba0_buildEnumItems(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _120336_tokens);
inline jule::Ptr<_1a59dd0da_EnumDecl> _1a68a0ee1_buildEnumDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _124035_tokens);
inline jule::Any _1a68a1332_buildNodeEnumDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _128539_tokens);
inline jule::Ptr<_1a59de33e_FieldDecl> _1a68a1673_buildField(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _129431_tokens);
inline jule::Slice<jule::Ptr<_1a59de33e_FieldDecl>> _1a68a19b4_buildStructDeclFields(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _134342_tokens);
inline jule::Ptr<_1a59dec35_StructDecl> _1a68a1d05_buildStructDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _135437_tokens);
inline void _1a68a20ad_checkMethodReceiver(_1a689636b_parser* _self_, jule::Ptr<_1a59d5b2c_FnDecl>* _140236_f);
inline void _1a68a2421_buildTraitBody(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59e0472_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1c80b653c_Token>> _142155_tokens);
inline jule::Ptr<_1a59e0472_TraitDecl> _1a68a2762_buildTraitDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _145336_tokens);
inline jule::Ptr<_1a59d5b2c_FnDecl> _1a68a2aa3_buildBindFn(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _148332_tokens);
inline jule::Ptr<_1a59d6cd7_VarDecl> _1a68a2de4_buildBindVar(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _149333_tokens);
inline jule::Ptr<_1a59dec35_StructDecl> _1a68a3235_buildBindStruct(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _150636_tokens);
inline jule::Ptr<_1a59da989_TypeAliasDecl> _1a68a3576_buildBindTypeAlias(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _152039_tokens);
inline jule::Ptr<_1a59dc073_UseDecl> _1a68a38b7_buildBindUse(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _153033_tokens);
inline jule::Any _1a68a3c08_buildBind(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _154131_tokens);
inline jule::Ptr<_1a59d5b2c_FnDecl> _1a68a4049_getMethod(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _156531_tokens);
inline void _1a68a43ac_parseImplBody(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59e0ad2_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _159452_tokens);
inline jule::Ptr<_1a59e0ad2_Impl> _1a68a46ed_buildImpl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _162730_tokens);
inline jule::Any _1a68a4a3e_buildNodeData(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _169835_tokens);
inline void _1a68a4ce7_applyFnMeta(_1a689636b_parser* _self_, jule::Ptr<_1a59d5b2c_FnDecl>* _173132_f);
inline void _1a68a50a0_applyMeta(_1a689636b_parser* _self_, _1a59c2e6b_Node* _173630_node);
inline void _1a68a5358_pushUseDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59dc073_UseDecl>* _176133_decl);
inline jule::Bool _1a68a5699_pushMetaNodes(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _176935_tokens);
inline _1a59c2e6b_Node _1a68a59da_parseNode(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _178931_st);
inline void _1a68a5c93_appendNode(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _181332_st);
inline void _1a68a626b_removeRange(_1a689636b_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges);
inline void _1a68a6689_pushWrongOrderCloseErr(_1a689636b_parser* _self_, jule::Ptr<_1c80b653c_Token>* _183539_t, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges);
inline void _1a68a6b62_pushRangeClose(_1a689636b_parser* _self_, jule::Ptr<_1c80b653c_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges);
inline void _1a68a6e1a_checkRanges(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _186428_tokens);
inline void _1a68a71c3_parse(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1c80bbcc3_File>* _189527_f);
inline void _1a68a8a32_pushErr(_1a68a848d_typeBuilder* _self_, jule::Ptr<_1c80b653c_Token> _4123_token, jule::Str _4138_fmt);
inline void _1a68a8d95_pushSuggestion(_1a68a848d_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68a912b_buildNamespace(_1a68a848d_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> _1a68a93b2_buildGenerics(_1a68a848d_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1a68a9648_identGenerics(_1a68a848d_typeBuilder* _self_);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68a98ce_buildIdent(_1a68a848d_typeBuilder* _self_);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68a9b65_buildCppLink(_1a68a848d_typeBuilder* _self_);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68a9deb_buildFn(_1a68a848d_typeBuilder* _self_);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68aa182_buildPtr(_1a68a848d_typeBuilder* _self_);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68aa418_buildSptr(_1a68a848d_typeBuilder* _self_);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68aa69e_buildSlc(_1a68a848d_typeBuilder* _self_);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68aa935_buildArr(_1a68a848d_typeBuilder* _self_);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68aabbb_buildMap(_1a68a848d_typeBuilder* _self_);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68aae52_buildEnumerable(_1a68a848d_typeBuilder* _self_);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68ab1d8_step(_1a68a848d_typeBuilder* _self_);
inline __jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool _1a68ab46e_build(_1a68a848d_typeBuilder* _self_);
inline void _1a5d62e98_pushErr(_1a5d62948_directiveEval* _self_, jule::Ptr<_1c80b653c_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1a5d63394_splitOperans(_1a5d62948_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _3346_tokens);
inline jule::Bool _1a5d636d5_evalDirectiveIdent(_1a5d62948_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1a5d63a26_evalDirectivePart(_1a5d62948_directiveEval* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _7837_part);
inline jule::Bool _1a5d63cac_eval(_1a5d62948_directiveEval* _self_);
inline jule::Ptr<_1a68ac5c4_JuleImporter> static__1a68ac9c0_New(_1a5d6146e_CompileInfo _5816_info);
inline jule::Slice<jule::Ptr<_1a5a6dcd6_ImportInfo>> _1a68acc56_AllPackages(_1a68ac5c4_JuleImporter* _self_);
inline void _1a68ad196_SetModPath(_1a68ac5c4_JuleImporter* _self_, jule::Str _7526_path);
inline jule::Str _1a68ad42c_GetModPath(_1a68ac5c4_JuleImporter* _self_);
inline jule::Str _1a68ad76d_ModById(_1a68ac5c4_JuleImporter* _self_, jule::I64 _8319_id);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a68adaae_GetImport(_1a68ac5c4_JuleImporter* _self_, jule::Str _8725_path);
inline __jule_tuple_sx_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log _1a68adeaa_ImportPackage(_1a68ac5c4_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_update_mod);
inline void _1a68ae263_Imported(_1a68ac5c4_JuleImporter* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo> _15328_imp);
inline __jule_tuple_bool__jule_tuple_s_1d1c6d64c_Log _1a68ae692_isPassBuildDirectives(_1a68ac5c4_JuleImporter* _self_, jule::Ptr<_1a59c2058_Ast>* _17942_file);
inline jule::Ptr<_1a68b3d17_ExprInspector> static__1a68b417a_New(void);
inline void _1a68b4433_args(_1a68b3d17_ExprInspector* _self_, jule::Slice<jule::Any> _5724_args);
inline void _1a68b46db_inspect(_1a68b3d17_ExprInspector* _self_, jule::Any _6327_m);
inline void _1a68b4a4e_Inspect(_1a68b3d17_ExprInspector* _self_, jule::Any _16827_m, jule::Fn<void,jule::Any*> _16841_f);
inline jule::Ptr<_1a69c9999_ObjectDeadCode> static__1a69c9e3e_new(jule::Ptr<_1a68b0055_IR>* _3521_ir);
inline jule::Bool _1aa395ad1_isLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a1d181_Trait>* _4127_t);
inline jule::Bool _1aa39b532_isLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _4127_t);
inline jule::Bool _1aa3a237e_isLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a59e7a84_StructIns>* _4127_t);
inline jule::Bool _1aa3a95c8_isLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5ab1ee4_Var>* _4127_t);
inline void _1aa395e77_pushLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a1d181_Trait> _6132_t);
inline void _1aa39b8c8_pushLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a0cca8_FnIns> _6132_t);
inline void _1aa3a2934_pushLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a59e7a84_StructIns> _6132_t);
inline void _1aa3a996e_pushLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5ab1ee4_Var> _6132_t);
inline void _1a69ca7e1_setReferencesAsLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a10e87_ReferenceStack>* _7441_rs);
inline void _1a69caa99_inits(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a71c0c_Package>* _15627_pkg);
inline void _1a69cad52_collectLivePackage(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a71c0c_Package>* _16840_pkg);
inline void _1a69cb050_collectLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_);
inline void _1a69cb308_removeDeadGlobals(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>* _20139_vars);
inline void _1a69cb5b1_removeDeadFns(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a5a09cc7_Fn>>* _21335_funcs);
inline void _1a69cb869_removeDeadStructs(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a59e4d06_Struct>>* _23439_structs);
inline void _1a69cbb22_removeDeadTraits(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a5a1d181_Trait>>* _25638_traits);
inline void _1a69cbdca_removeDeadsFile(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5b14783_SymbolTable>* _27737_file);
inline void _1a69cc183_removeDeadsPackage(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a71c0c_Package>* _28440_pkg);
inline void _1a69cc381_removeDeads(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_);
inline void _1a69cc57e_elimanate(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_);
inline void _1a69cdad0_optimizeChild(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4bc4d_Scope>* _3835_s);
inline void _1a69cdd88_optimizeBodyChildExceptional(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4bc4d_Scope>* _4850_s);
inline void _1a69ce141_optimizeBodyChild(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4bc4d_Scope>* _5839_s);
inline void _1a69ce3e9_optimizeExprModel(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Any* _6739_model);
inline void _1a69ce5e7_eliminateFollowed(_1a69cd5e6_scopeDeadCode* _self_);
inline void _1a69ce8a0_pushGoto(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4e9ba_GotoSt> _8829_gt);
inline void _1a69ceb58_pushLabel(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4e5e1_Label> _9830_l);
inline void _1a69cee11_optimizeRangeIter(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4da85_RangeIter> _11138_it);
inline void _1a69d01b9_optimizeWhileIter(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4d139_WhileIter> _11638_it);
inline void _1a69d0472_optimizeInfIter(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4cb83_InfIter> _12436_it);
inline void _1a69d072a_optimizeConditional(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4c886_Conditional> _12840_c);
inline void _1a69d09d3_optimizeMatch(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a50e61_Match> _14634_m);
inline void _1a69d0c8b_optimizeAssign(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a5034a_Assign> _16435_assign);
inline void _1a69d1044_optimizeMultiAssign(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a50801_MultiAssign> _16940_assign);
inline void _1a69d12ec_optimizeStmt(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Any _17833_st);
inline void _1a69d14ea_optimizeStmts(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_);
inline _1a69d2ce3_exprDeadCode static__1a69d31de_new(jule::Ptr<_1a69cd5e6_scopeDeadCode>* _2121_s);
inline void _1a69d3497_optimize(_1a69d2ce3_exprDeadCode* _self_, jule::Any* _2725_model);
inline void _1c799d1ee_pushVar(_1c799cc8c_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe);
inline jule::Bool _1c799d540_removeVar(_1c799cc8c_nils* _self_, jule::Uintptr _5225_var);
inline jule::Bool _1c799d881_isSafe(_1c799cc8c_nils* _self_, jule::Uintptr _6622_var);
inline jule::Ptr<_1a68c08b2_scopeOptimizer> static__1a68c0e34_new(jule::Ptr<_1a5a4bc4d_Scope> _5120_scope);
inline void _1a68c11dc_setCurrentStmt(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Any _6335_stmt);
inline void _1a68c13da_removeCurrent(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_);
inline jule::Bool _1a68c1671_isLastStmt(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_);
inline jule::Bool _1a68c1907_isIter(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_);
inline void _1a68c1bb0_optimizeData(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5b19aeb_Data> _9533_d);
inline void _1a68c1e68_optimizeVar(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5ab1ee4_Var> _12132_v);
inline void _1a68c2221_optimizeConditional(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a4c886_Conditional> _14240_c);
inline void _1a68c263e_buildDefaultConstantTrueCase(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a51989_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1a5a50e61_Match>* _21680_m);
inline void _1a68c28e7_optimizeMatch(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a50e61_Match> _24234_m);
inline void _1a68c2ba0_optimizeRangeIter(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a4da85_RangeIter> _32438_it);
inline void _1a68c2e58_optimizeWhileIter(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a4d139_WhileIter> _36938_it);
inline jule::Bool _1a68c3299_substr(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a5034a_Assign> _37527_a);
inline jule::Bool _1a68c35da_strAssign(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a5034a_Assign> _39530_a);
inline jule::Bool _1a68c392b_sliceAssign(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a5034a_Assign> _40632_a);
inline void _1a68c3bd4_optimizePostfix(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a4ed94_Postfix> _41436_postfix);
inline void _1a68c3e8c_optimizeAssign(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a5034a_Assign> _42135_assign);
inline jule::Bool _1a68c42cd_tryOptimizeSwap(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a50801_MultiAssign>* _52637_assign);
inline void _1a68c4586_optimizeMultiAssign(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a50801_MultiAssign> _56340_assign);
inline void _1a68c483e_optimizeRet(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a52528_RetSt> _60932_r);
inline void _1a68c4ae7_optimizeStmt(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Any _63333_stmt);
inline void _1a68c4da0_optimizeChild(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a4bc4d_Scope> _66234_child);
inline void _1a68c509d_optimize(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_);
inline void static__1a68c7a73_optimize(jule::Any* _3926_model);
inline void static__1a68c7d5e_optimizeData(jule::Any* _4330_model, jule::Ptr<_1a68d098d_data>* _4353_d);
inline jule::Bool _1a68c81a0_selfCmpCond(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel>* _5428_m);
inline jule::Bool _1a68c84e1_boolCond(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel>* _7825_m);
inline jule::Bool _1a68c8832_strCond(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel> _13123_m);
inline jule::Bool _1a68c8cd8_tryNeutralElement1(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel>* _18835_m, jule::Ptr<_1b916c16d_Const> _18860_c, jule::Ptr<_1a59eb989_OperandExprModel>* _18872_nc);
inline jule::Bool _1a68c9129_tryNeutralElement(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel>* _23234_m);
inline void _1a68c93d2_checkBinaryForBoundary(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel>* _24739_m);
inline void _1a68c968a_checkBinaryForNil(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel>* _29934_m);
inline void _1a68c9943_binary(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel> _33122_m);
inline void _1a68c9beb_unary(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ec35d_UnaryExprModel> _41621_m);
inline void _1a68c9ea4_structureLit(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ecc32_StructLitExprModel> _45928_m);
inline void _1a68ca25c_casting(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ed5b2_CastingExprModel> _47523_m);
inline void _1a68ca5c0_args(_1a68c75cd_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>> _48920_params, jule::Slice<jule::Any>* _48946_args);
inline void _1a68ca878_scope(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a5a4bc4d_Scope>* _51022_s);
inline void _1a68cab31_funcCall(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ede64_FnCallExprModel> _51624_m);
inline void _1a68cadd9_indexing(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ee7e4_IndexingExprModel> _52324_m);
inline void _1a68cb192_anonFunc(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59eec9a_AnonFnExprModel> _54724_m);
inline void _1a68cb390_do(_1a68c75cd_exprOptimizer* _self_);
inline void _1a68cd271_pushVar(jule::Ptr<_1a68ccd0e_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1a5b50d52_TypeKind> _3242_kind);
inline jule::Bool _1a68cd5b2_removeVar(_1a68ccd0e_dynamic* _self_, jule::Uintptr _5525_var);
inline jule::Bool _1a68cd9ad_isFits(_1a68ccd0e_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1a5b50d52_TypeKind> _6936_kind);
inline _1a68d0493_dataCheckpoint _1a68d0d12_getCheckpoint(_1a68d098d_data* _self_);
inline void _1a68d10ba_loadCheckpoint(_1a68d098d_data* _self_, _1a68d0493_dataCheckpoint* _3535_c);
inline void _1a68d2880_pushVar(_1a68d241d_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1a68d30bc_fitsMaxSize(_1a68d241d_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1a69d3e7b_Optimizer> static__1a69d43ee_New(jule::Ptr<_1a68b0055_IR>* _2621_ir);
inline void _1a69d46a7_optimizeGlobal(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a5ab1ee4_Var>* _3235_v);
inline void _1a69d4960_optimizeFunction(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a5a09cc7_Fn>* _3837_func);
inline void _1a69d4c18_optimizeStruct(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a59e4d06_Struct>* _4835_s);
inline void _1a69d4ec1_optimizeGlobals(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a5a71c0c_Package>* _6436_p);
inline void _1a69d5279_optimizeFunctions(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a5a71c0c_Package>* _7238_p);
inline void _1a69d5532_optimizeStructs(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a5a71c0c_Package>* _8036_p);
inline void _1a69d57da_optimizePackage(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a5a71c0c_Package>* _8836_p);
inline void _1a69d59d8_Optimize(_1a69d3e7b_Optimizer* _self_);
inline void static__1a69d6236_Reset(void);
inline void static__1a6a0e11b_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1a6a11ae1_LogFlat(_1d1c6d64c_Log* _1421_l);
inline void static__1a6a11d22_LogError(_1d1c6d64c_Log* _1922_l);
inline void static__1a6a12053_Log(_1d1c6d64c_Log* _6417_l);
inline void static__1a6a12284_PrintLogs(jule::Slice<_1d1c6d64c_Log>* _7423_logs);
inline _1a7571386_Time static__1a757173d_Unix(jule::U64 _9117_sec);
inline _1a7571386_Time static__1a757194c_Now(void);
inline _1a7570bb0_AbsTime _1a7573135_Abs(_1a7571386_Time* _self_);
inline jule::Ptr<_1a6a6b3a9_scopeCoder> static__1a6a6ba19_new(jule::Ptr<_1a757b913_ObjectCoder>* _7321_oc);
inline void _1aa6c5cbd_iterHead(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4da85_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin);
inline void _1a6a6c1e0_rangeIndexIter(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4da85_RangeIter>* _12936_it);
inline void _1a6a6c498_rangeHashmapIter(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4da85_RangeIter>* _19638_it);
inline void _1a6a6c751_strRuneIter(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1c799b670_StrRuneIter> _24332_it);
inline void _1a6a6ca09_ifCase(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4c16b_If> _35127_i);
inline void _1a6a6ccb2_conditional(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4c886_Conditional> _36032_c);
inline void _1a6a6d06a_infIter(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4cb83_InfIter> _38028_it);
inline void _1a6a6d323_whileIter(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4d139_WhileIter> _39730_it);
inline void _1a6a6d5cb_rangeIter(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4da85_RangeIter> _43630_it);
inline void _1a6a6d884_cont(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4de1a_ContSt> _44921_c);
inline void _1a6a6db3c_label(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4e5e1_Label> _45422_l);
inline void _1a6a6dde5_gotoSt(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4e9ba_GotoSt> _45923_gt);
inline void _1a6a6e19d_postfix(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4ed94_Postfix> _46428_p);
inline void _1a6a6e456_assign(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a5034a_Assign> _47127_a);
inline void _1a6a6e70e_mapLookupAssign(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50801_MultiAssign>* _47737_a);
inline void _1a6a6e9b7_multiAssignTup(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50801_MultiAssign>* _50036_a);
inline void _1a6a6ec70_multiAssignFn(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50801_MultiAssign>* _54935_a);
inline void _1a6a70028_multiAssign(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50801_MultiAssign> _60932_a);
inline jule::Fn<void> _1a6a70369_matchExpr(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50e61_Match> _63530_m);
inline void _1a6a706cc_case(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50e61_Match> _64525_m, jule::Ptr<_1a5a51989_Case> _64540_c);
inline void _1a6a70985_matchSt(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50e61_Match> _71528_m);
inline void _1a6a70c3d_fallSt(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a52182_FallSt> _77023_f);
inline void _1a74a69d6_breakSt(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4e2e4_BreakSt> _77524_b);
inline void _1a749eea7_setResult(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a52528_RetSt> _78430_r);
inline void _1a74a660c_retSt(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a52528_RetSt> _81226_r);
inline void _1a703271b_var(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5ab1ee4_Var> _84824_v);
inline void _1a70329b3_mutSlicing(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1c799a361_MutSlicingExprModel> _85431_m);
inline void _1a70358d9_swap(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1c799910c_SwapExprModel> _87125_m);
inline void _1a7035b2b_exceptionalForwarding(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1c7998c88_ExceptionalForwardingExprModel> _87942_m);
inline void _1a74a6b4b_st(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Any _88523_st);
inline void _1a74a6d27_scopeStmts(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4bc4d_Scope>* _94132_s);
inline void _1a74a70d0_scope(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4bc4d_Scope> _95026_s);
inline void _1a74a7388_commonFuncScope(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _96537_f);
inline void _1a74a76a7_anonFuncScope(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a59eec9a_AnonFnExprModel> _100534_m, jule::Str _100555_ident);
inline void _1a74a7960_funcScope(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns> _103730_f);
inline jule::Ptr<_1a74ab1d3_exprCoder> static__1a74ab59b_new(jule::Ptr<_1a757b913_ObjectCoder>* _11421_oc);
inline void _1a74ab854_string(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1b916c16d_Const>* _12024_c);
inline void _1a74abb0c_boolean(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Bool _13524_b);
inline void _1a74abd0a_nilLit(jule::Ptr<_1a74ab1d3_exprCoder> _self_);
inline jule::Bool _1a74ac14b_ftoaSpecialCases(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::F64* _14734_x);
inline void _1a74ac404_float32(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1b916c16d_Const>* _16125_c);
inline void _1a74ac6ac_float64(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1b916c16d_Const>* _18025_c);
inline void _1a74ac965_constant(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1b916c16d_Const> _19829_c);
inline void _1a74acd83_divByZeroBinary(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c80b653c_Token>* _22233_op, jule::Ptr<_1a59eb989_OperandExprModel>* _22250_l, jule::Ptr<_1a59eb989_OperandExprModel>* _22277_r);
inline void _1a74ad13b_unsafeBinary(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ebe84_BinaryExprModel> _24433_m);
inline void _1a74ad3e4_binary(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ebe84_BinaryExprModel> _27527_m);
inline void _1a74ad69c_var(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5ab1ee4_Var> _28724_m);
inline void _1a74ad955_structureIns(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59e7a84_StructIns> _30333_m);
inline void _1a74adc0d_unary(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ec35d_UnaryExprModel> _30726_m);
inline void _1a74adeb6_structureLit(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ecc32_StructLitExprModel> _33133_m);
inline void _1a74ae26e_allocStructure(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ed02e_AllocStructLitExprModel> _36235_m);
inline void _1a74ae527_possibleRefExpr(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Any _37032_expr);
inline void _1a74ae945_castTraitFromTrait(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ed5b2_CastingExprModel>* _38440_m, jule::Ptr<_1a5a1d181_Trait> _38466_t1, jule::Ptr<_1a5a1d181_Trait> _38482_t2);
inline void _1a74aebed_casting(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ed5b2_CastingExprModel> _39728_m);
inline void _1a74aeea6_models(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Slice<jule::Any> _51327_args);
inline void _1a74b025e_args(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ede64_FnCallExprModel>* _52526_m);
inline void _1a74b0517_modelForCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Any _55633_expr);
inline void _1a74b07c0_pushCallInf(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ede64_FnCallExprModel>* _57129_m);
inline jule::Bool _1a74b0b11_isWrapped(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ede64_FnCallExprModel>* _59431_m);
inline jule::Bool _1a74b0e52_writeReceiver(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Any _61834_m);
inline void _1a74b120a_pureFuncCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ede64_FnCallExprModel>* _63134_m);
inline void _1a74b14b3_coFuncCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ede64_FnCallExprModel>* _72132_m);
inline void _1a74b1826_writeUseExpr(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _77234_f, jule::Ptr<_1a5b19aeb_Data> _77249_d);
inline void _1a74b1ace_funcCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ede64_FnCallExprModel> _79329_m);
inline void _1a74b1d87_slice(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ee33d_SliceExprModel> _86626_m);
inline void _1a74b2140_indexing(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ee7e4_IndexingExprModel> _87829_m);
inline void _1a74b23e8_unsafeIndexing(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c799a9e3_UnsafeIndexingExprModel> _91835_m);
inline void _1a74b26a1_anonFunc(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59eec9a_AnonFnExprModel> _93529_m);
inline void _1a74b2959_mapExpr(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a0062a_MapExprModel> _96628_m);
inline void _1a74b2c12_slicing(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a00bad_SlicingExprModel> _98728_m);
inline void _1a74b2eba_traitSub(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a01241_TraitSubIdentExprModel> _100329_m);
inline void _1a74b3273_structureSub(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _101933_m);
inline void _1a74b352b_array(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a02352_ArrayExprModel> _102826_m);
inline void _1a74b37d4_funcInsCommon(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns> _105134_m);
inline void _1a74b3a8c_funcIns(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns> _105828_m);
inline void _1a74b3d45_tuple(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a0264e_TupleExprModel> _106926_m);
inline void _1a74b40ed_newCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a032cb_BuiltinNewCallExprModel> _108028_m);
inline void _1a74b43a6_outCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a02a28_BuiltinOutCallExprModel> _109028_m);
inline void _1a74b465e_outlnCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a02e02_BuiltinOutlnCallExprModel> _109930_m);
inline void _1a74b4917_panicCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a036a5_BuiltinPanicCallExprModel> _110830_m);
inline void _1a74b4bc0_assertCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a03b5b_BuiltinAssertCallExprModel> _111631_m);
inline void _1a74b4e78_errorCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a05762_BuiltinErrorCallExprModel> _112930_m);
inline void _1a74b5231_copyCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a05388_BuiltinCopyCallExprModel> _116129_m);
inline void _1a74b54d9_lenCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a047d8_BuiltinLenCallExprModel> _116928_m);
inline void _1a74b5792_capCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a04ad5_BuiltinCapCallExprModel> _117428_m);
inline void _1a74b5a4a_deleteCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a04eae_BuiltinDeleteCallExprModel> _117931_m);
inline void _1a74b5d03_makeCallSlice(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a04112_BuiltinMakeCallExprModel>* _119035_m);
inline void _1a74b60ab_makeCallStr(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a04112_BuiltinMakeCallExprModel>* _120833_m);
inline void _1a74b6364_makeCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a04112_BuiltinMakeCallExprModel> _121929_m);
inline void _1a74b661c_pushToSlice(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c799adbc_PushToSliceExprModel> _122732_m);
inline void _1a74b68c5_appendToSlice(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c799b296_AppendToSliceExprModel> _128734_m);
inline void _1a74b6b7d_appendCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a044db_BuiltinAppendCallExprModel> _129531_m);
inline void _1a74b6e36_sizeof(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a05e16_SizeofExprModel> _130327_m);
inline void _1a74b71de_alignof(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a06103_AlignofExprModel> _130928_m);
inline void _1a74b7497_runeLit(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a0639a_RuneExprModel> _131524_m);
inline void _1a74b7750_structureStatic(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a01e78_StructStaticIdentExprModel> _132936_m);
inline void _1a74b7a08_integratedToStr(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a06697_IntegratedToStrExprModel> _133336_m);
inline void _1a74b7cb1_backendEmit(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a06a71_BackendEmitExprModel> _133932_m);
inline void _1a74b8069_free(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a06d6d_FreeExprModel> _135525_m);
inline void _1a74b8322_strComp(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c7999ccd_StrCompExprModel> _136428_m);
inline void _1a74b85ca_emptyCompare(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c79994d6_EmptyCompareExprModel> _138033_m);
inline void _1a74b8883_unsafeDeref(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c799b96c_UnsafeDerefExprModel> _138932_m);
inline void _1a74b8b3b_unsafeCasting(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c799bc69_UnsafeCastingExprModel> _140034_m);
inline void _1a74b8de4_model(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Any _141726_m);
inline void _1a74b919c_initExpr(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5b50d52_TypeKind> _151829_t);
inline jule::Ptr<_1a74bb9da_TestCoder> static__1a74bbe5d_New(jule::Ptr<_1a757b913_ObjectCoder>* _2921_oc);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a74bc1e4_findTestingPackage(jule::Ptr<_1a74bb9da_TestCoder> _self_);
inline void _1a74bc49c_appendTest(jule::Ptr<_1a74bb9da_TestCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns> _4431_f);
inline void _1a74bc755_appendPackageTests(jule::Ptr<_1a74bb9da_TestCoder> _self_, jule::Ptr<_1a5a71c0c_Package>* _5940_p);
inline jule::Bool _1a74bc9db_readyTestingPackage(jule::Ptr<_1a74bb9da_TestCoder> _self_);
inline void _1a74bcbd9_callTmReset(jule::Ptr<_1a74bb9da_TestCoder> _self_);
inline void _1a74bcdd7_callTmFailed(jule::Ptr<_1a74bb9da_TestCoder> _self_);
inline void _1a74bd0d5_callTmSkipped(jule::Ptr<_1a74bb9da_TestCoder> _self_);
inline void _1a74bd2d3_Serialize(jule::Ptr<_1a74bb9da_TestCoder> _self_);
inline void static__1a74bee72_writeIdentTo(_1e9a030bc_StrBuilder* _3530_buf, jule::Str* _3548_ident);
inline void static__1a74c0318_toOut(_1e9a030bc_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr);
inline void static__1a74c0769_toLocal(_1e9a030bc_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident);
inline void static__1a74c0a55_func(_1e9a030bc_StrBuilder* _8622_buf, jule::Ptr<_1a5a09cc7_Fn>* _8640_f);
inline void static__1a74c0d41_funcIns(_1e9a030bc_StrBuilder* _10225_buf, jule::Ptr<_1a5a0cca8_FnIns>* _10243_f);
inline void static__1a74c112c_traitDecl(_1e9a030bc_StrBuilder* _11727_buf, jule::Ptr<_1a5a1d181_Trait> _11744_t);
inline void static__1a74c1418_param(_1e9a030bc_StrBuilder* _12123_buf, jule::Ptr<_1a5a08303_Param>* _12141_p);
inline void static__1a74c1704_structure(_1e9a030bc_StrBuilder* _13627_buf, jule::Ptr<_1a59e4d06_Struct>* _13645_s);
inline void static__1a74c19e0_structureIns(_1e9a030bc_StrBuilder* _14730_buf, jule::Ptr<_1a59e7a84_StructIns>* _14748_s);
inline void static__1a74c1ccb_field(_1e9a030bc_StrBuilder* _15523_buf, jule::Ptr<_1a59e1dd0_Field>* _15541_f);
inline void static__1a74c20b7_var(_1e9a030bc_StrBuilder* _16521_buf, jule::Ptr<_1a5ab1ee4_Var> _16542_v);
inline void static__1a74c23a3_iterBegin(_1e9a030bc_StrBuilder* _18727_buf, jule::Uintptr _18744_it);
inline void static__1a74c268e_iterEnd(_1e9a030bc_StrBuilder* _19225_buf, jule::Uintptr _19242_it);
inline void static__1a74c297a_iterNext(_1e9a030bc_StrBuilder* _19726_buf, jule::Uintptr _19743_it);
inline void static__1a74c2c66_label(_1e9a030bc_StrBuilder* _20223_buf, jule::Uintptr _20240_u);
inline void static__1a74c3052_matchEnd(_1e9a030bc_StrBuilder* _20726_buf, jule::Uintptr _20743_m);
inline void static__1a74c333d_caseBegin(_1e9a030bc_StrBuilder* _21227_buf, jule::Uintptr _21244_c);
inline jule::Ptr<_1a757b913_ObjectCoder> static__1a757bd0e_New(jule::Ptr<_1a68b0055_IR>* _11521_ir, _1a7579b64_SerializationInfo _11530_info);
inline void _1a757c0b7_write(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Str _12622_s);
inline void _1a757c370_writeBytes(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Slice<jule::U8> _13027_b);
inline void _1a757c56d_addIndent(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a757c76b_doneIndent(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a757c969_indent(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline jule::I64 _1a757ccaa_findAnyType(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5b50d52_TypeKind>* _14933_t);
inline jule::I64 _1a757d0eb_pushDealloc(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5b50d52_TypeKind> _15832_t);
inline jule::Str _1a757d43c_pushAnonFn(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59eec9a_AnonFnExprModel>* _17432_m);
inline jule::I64 _1a757d77d_pushAnyType(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5b50d52_TypeKind> _21432_t);
inline void _1a757da36_pushResultIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _31335_f);
inline void _1a757dcde_pushResult(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a09cc7_Fn>* _33432_f);
inline void _1a757e152_pushAndWriteMaskMapper(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a1d181_Trait> _34743_t1, jule::Ptr<_1a5a1d181_Trait> _34759_t2);
inline void _1a757e40a_locInfo(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1c80b653c_Token>* _39825_t);
inline void _1a757e608_head(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a757e806_links(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a757eaae_prepareStructure(_1a757b913_ObjectCoder* _self_, jule::Ptr<_1a59e4d06_Struct>* _47937_s);
inline void _1a757ecac_prepareStructures(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a7580065_structurePlainDecl(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e4d06_Struct>* _51040_s);
inline void _1a7580263_structurePlainDecls(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a758051b_fieldDecl(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e6ed4_FieldIns>* _52631_f);
inline void _1a75807c4_structureDestructor(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _54441_s);
inline void _1a7580b37_structureOperatorEq(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Slice<jule::U8> _56036_ident, jule::Ptr<_1a59e7a84_StructIns>* _56056_s);
inline void _1a7580e9a_structureOperatorNotEq(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Slice<jule::U8> _61739_ident, jule::Ptr<_1a59e7a84_StructIns>* _61759_s);
inline void _1a75813b8_structureOperator(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Slice<jule::U8> _63134_ident, jule::Ptr<_1a5a0cca8_FnIns>* _63154_f, jule::Str _63165_op);
inline void _1a7581671_structureOperators(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _68040_s);
inline void _1a7581929_structureInsDecl(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _72138_s);
inline void _1a7581bd2_structureDecl(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e4d06_Struct>* _75135_s);
inline void _1a7581dd0_structureDecls(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a75820cd_structureMethodDecls(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a75825a6_funcHead(jule::Ptr<_1a757b913_ObjectCoder> _self_, _1e9a030bc_StrBuilder* _78530_buf, jule::Ptr<_1a5a0cca8_FnIns>* _78552_f, jule::Bool _78563_ptr, jule::Str _78574_ident);
inline void _1a7582919_funcDeclIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _80433_f, jule::Bool _80444_ptr);
inline void _1a7582c7c_funcDecl(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a09cc7_Fn>* _81130_f, jule::Bool _81138_ptr);
inline void _1a7583035_funcDeclTrait(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a09cc7_Fn>* _81735_f);
inline void _1a7583233_funcDecls(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a75834db_traitDataTypeMethods(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a1d181_Trait>* _83942_t);
inline void _1a75836d9_traitDataTypes(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a7583a4c_paramIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, _1e9a030bc_StrBuilder* _87530_buf, jule::Ptr<_1a5a0bc30_ParamIns>* _87552_p);
inline void _1a7583db0_paramsIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, _1e9a030bc_StrBuilder* _88131_buf, jule::Ptr<_1a5a0cca8_FnIns>* _88153_f);
inline void _1a7584223_varInitExpr(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5ab1ee4_Var>* _90233_v, jule::Fn<void> _90242_init);
inline void _1a75844cb_var(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5ab1ee4_Var> _92024_v);
inline void _1a758483e_anonFuncInsDecl(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59eec9a_AnonFnExprModel>* _95137_m, jule::Str _95158_ident);
inline void _1a7584ba2_anonFuncIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59eec9a_AnonFnExprModel>* _95733_m, jule::Str _95754_ident);
inline void _1a7585015_funcIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _96729_f, jule::Str _96740_ident);
inline void _1a75852bd_func(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a09cc7_Fn>* _97726_f);
inline void _1a7585631_funcTrait(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _98327_s, jule::Ptr<_1a5a0cca8_FnIns>* _98347_f);
inline __jule_tuple_x_1a5a0cca8_FnIns__jule_tuple_bool _1a7585972_findTraitMetMap(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a09cc7_Fn>* _99837_m);
inline void _1a7585cd5_traitWrapper(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a1d181_Trait>* _101034_t, jule::Ptr<_1a5a09cc7_Fn>* _101050_m);
inline void _1a7585ed3_traitWrappers(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a7586346_traitDataMethods(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a1d181_Trait>* _107638_t, jule::Ptr<_1a59e7a84_StructIns> _107649_s);
inline void _1a7586764_traitData(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a1d181_Trait>* _109331_t, jule::I64 _109342_i, jule::Ptr<_1a59e7a84_StructIns>* _109355_s);
inline void _1a7586962_traitDatas(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a7586b60_globals(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a7586d5d_decls(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a7587116_structureMethods(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _115838_s);
inline void _1a75873be_structureOstream(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _116538_s);
inline void _1a7587677_structureIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _121634_s);
inline void _1a7587930_structure(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e4d06_Struct>* _122231_s);
inline void _1a7587b2d_structures(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a7587d2b_funcs(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a75880d4_pushInit(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a71c0c_Package>* _125430_pkg);
inline void _1a75882d2_anonHashes(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a75884d0_initCaller(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a75886cd_end(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a7588a41_insertBuf(jule::Ptr<_1a757b913_ObjectCoder> _self_, _1e9a030bc_StrBuilder* _131131_buf, jule::I64 _131148_pos);
inline void _1a7588c3e_serializeHead(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline void _1a7588e3c_Serialize(jule::Ptr<_1a757b913_ObjectCoder> _self_);
inline jule::Str _1a758ae61_Str(_1a758aa98_customType* _self_);
inline jule::Bool _1a758b2a2_Equal(jule::Ptr<_1a758aa98_customType> _self_, jule::Ptr<_1a5b50d52_TypeKind> _4418_k);
inline jule::Ptr<_1a758b6d1_typeCoder> static__1a758bbed_new(jule::Ptr<_1a757b913_ObjectCoder>* _6921_oc);
inline void _1a758c061_toType(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _7627_buf, jule::Str _7648_id);
inline void _1a758c3c4_prim(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _9025_buf, jule::Ptr<_1a5b5892b_Prim> _9042_p);
inline void _1a758c737_tuple(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _9526_buf, jule::Ptr<_1a5b5da1e_Tuple> _9547_t);
inline void _1a758ca9a_asSptr(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem);
inline void _1a758ce0d_sptr(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _11425_buf, jule::Ptr<_1a5b5c457_Sptr> _11446_sptr);
inline void _1a758d271_ptr(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _12124_buf, jule::Ptr<_1a5b60c1e_Ptr> _12145_p);
inline void _1a758d5d4_enumDecl(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _13229_buf, jule::Ptr<_1a5a2088c_Enum> _13250_e);
inline void _1a758d947_typeEnumDecl(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _13733_buf, jule::Ptr<_1a5a22097_TypeEnum> _13754_e);
inline void _1a758dcaa_asSlice(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _14128_buf, jule::Ptr<_1a5b50d52_TypeKind> _14149_elem);
inline void _1a758e11d_slice(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _14826_buf, jule::Ptr<_1a5b5ce2a_Slc> _14847_s);
inline void _1a758e481_mapType(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _15328_buf, jule::Ptr<_1a5b5e5be_Map> _15349_m);
inline void _1a758eb57_structureIns(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _16733_buf, jule::Ptr<_1a59e7a84_StructIns> _16754_s);
inline void _1a758eeba_array(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _19126_buf, jule::Ptr<_1a5b6024b_Arr> _19147_a);
inline void _1a7590691_paramIns(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _21429_buf, jule::Ptr<_1a5a0bc30_ParamIns>* _21451_p);
inline void _1a7590d67_funcInsResult(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _24634_s, jule::Ptr<_1a5a0cca8_FnIns>* _24654_f);
inline void _1a75911ca_anonFunc(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _26429_buf, jule::Ptr<_1a5a0cca8_FnIns> _26450_f);
inline void _1a759153d_func(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _28525_buf, jule::Ptr<_1a5a0cca8_FnIns> _28546_f);
inline void _1a75918a1_kind(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _29225_buf, jule::Ptr<_1a5b50d52_TypeKind> _29246_k);
inline jule::Ptr<_1a75942bb_resultCoder> static__1a7594794_new(jule::Ptr<_1a758b6d1_typeCoder>* _35921_tc);
inline void _1a7594b07_ptr(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _36324_s, jule::Ptr<_1a5b60c1e_Ptr> _36343_p);
inline void _1a7594e6a_sptr(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _36825_s, jule::Ptr<_1a5b5c457_Sptr> _36844_p);
inline void _1a75952cd_mapType(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _37328_s, jule::Ptr<_1a5b5e5be_Map> _37347_p);
inline void _1a7595641_slice(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _37926_s, jule::Ptr<_1a5b5ce2a_Slc> _37945_slc);
inline void _1a75959a4_arr(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _38424_s, jule::Ptr<_1a5b6024b_Arr> _38443_arr);
inline void _1a7595d17_func(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _39025_s, jule::Ptr<_1a5a0cca8_FnIns> _39044_f);
inline void _1a759617a_tup(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _40324_s, jule::Ptr<_1a5b5da1e_Tuple> _40343_tup);
inline void _1a75964dd_codeMut(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _41028_s, jule::Ptr<_1a5b50d52_TypeKind>* _41048_t);
inline void _1a7596851_codeMut1(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _44529_s, jule::Ptr<_1a5b50d52_TypeKind>* _44549_t);
inline jule::Slice<jule::U8> _1a7596b5e_code(_1a75942bb_resultCoder* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _45425_t);
inline jule::Str _1aac60368_Name(_1aac5ee4a_Flag* _self_);
inline jule::Str _1aac604bc_What(_1aac5ee4a_Flag* _self_);
inline void _1aac60621_Reset(_1aac5ee4a_Flag* _self_);
inline jule::I32 _1aac60775_Short(_1aac5ee4a_Flag* _self_);
inline jule::Str _1aac63679_Name(_1aac639ed_Flag* _self_);
inline jule::Str _1aac63cd9_What(_1aac639ed_Flag* _self_);
inline void _1aac63e2c_Reset(_1aac639ed_Flag* _self_);
inline jule::I32 _1aac64070_Short(_1aac639ed_Flag* _self_);
inline jule::Str _1aac66cdc_Name(_1aac67161_Flag* _self_);
inline jule::Str _1aac6744c_What(_1aac67161_Flag* _self_);
inline void _1aac67590_Reset(_1aac67161_Flag* _self_);
inline jule::I32 _1aac676d3_Short(_1aac67161_Flag* _self_);
inline jule::Str _1aac6a494_Name(_1aac6a818_Flag* _self_);
inline jule::Str _1aac6ab04_What(_1aac6a818_Flag* _self_);
inline void _1aac6ac47_Reset(_1aac6a818_Flag* _self_);
inline jule::I32 _1aac6ad8a_Short(_1aac6a818_Flag* _self_);
inline jule::Str _1aac6db07_Name(_1aac6de7b_Flag* _self_);
inline jule::Str _1aac6e267_What(_1aac6de7b_Flag* _self_);
inline void _1aac6e3aa_Reset(_1aac6de7b_Flag* _self_);
inline jule::I32 _1aac6e4ed_Short(_1aac6de7b_Flag* _self_);
inline jule::Ptr<_1a668eb59_FlagSet> static__1a668ee45_New(void);
inline jule::Trait _1a66903eb_FindFlag(_1a668eb59_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1a669073c_FindFlagShort(_1a668eb59_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a6690d14_Parse(_1a668eb59_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1aac6de7b_Flag> _1aacd9557_addFlagCommon(_1a668eb59_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1aac6a818_Flag> _1aace185b_addFlagCommon(_1a668eb59_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1aacd6d29_AddVar(_1a668eb59_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1aacde172_AddVar(_1a668eb59_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1aac81b5e_parseInteger(_1a669261d_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1aac895d4_parseInteger(_1a669261d_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _1a6692e37_getData(_1a669261d_argParser* _self_);
inline jule::VoidExceptional _1a66931ac_processFlag(_1a669261d_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1a6693465_singleDash(_1a669261d_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1a669371d_doubleDash(_1a669261d_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1a669391b_tryArg(_1a669261d_argParser* _self_);
inline jule::VoidExceptional _1a6693b19_parse(_1a669261d_argParser* _self_);
inline jule::Ptr<_1d1d2a7b4_Cmd> static__1d1d2abb0_New(jule::Str _2616_path);
inline jule::VoidExceptional _1d1d2adad_Spawn(_1d1d2a7b4_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1d1d2b342_Wait(_1d1d2a7b4_Cmd* _self_);
inline jule::VoidExceptional _1d1d2ed7e_spawn(_1d1d2a7b4_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1d1d30313_wait(_1d1d2a7b4_Cmd* _self_);
inline __jule_tuple_x_1a68b0055_IR__jule_tuple_s_1d1c6d64c_Log static__1a68b04ea_Build(jule::Str _2718_path, jule::I64 _2729_flags);
inline void _1a68b09d4_appendStructs(_1a68b0055_IR* _self_, jule::Ptr<_1a5a71c0c_Package>* _5630_p, jule::Slice<jule::Ptr<_1a59e4d06_Struct>>* _5654_buffer);
inline jule::Slice<jule::Ptr<_1a59e4d06_Struct>> _1a68b0c6a_GetAllStructures(_1a68b0055_IR* _self_);
inline void _1a68b10cd_appendGlobals(_1a68b0055_IR* _self_, jule::Ptr<_1a5a71c0c_Package>* _7930_p, jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>* _7954_buffer);
inline jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _1a68b1364_GetAllGlobals(_1a68b0055_IR* _self_);
inline void _1a68b1562_Order(_1a68b0055_IR* _self_);
inline jule::I32 _21462e3b5_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2);
inline __jule_tuple_i32__jule_tuple_i32 _21462e67e_EncodeRune(jule::I32 _7819_r);
inline jule::Slice<jule::U16> _21462e9c0_Encode(jule::Slice<jule::I32> _8711_s);
inline jule::Slice<jule::I32> _21462ec56_Decode(jule::Slice<jule::U16> _11911_s);
inline jule::Slice<jule::U16> _2146300ca_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r);
inline jule::Slice<jule::U16> _21463032d_UTF16FromStr(jule::Str _1417_s);
inline jule::Str _21463063b_UTF16ToStr(jule::Slice<jule::U16> _3415_s);
inline jule::Str _214630905_U16PtrToStr(jule::U16* _5023_s);
inline jule::I64 _21457d3be_GetLastErrno(void);
inline jule::Uintptr _2146590e3_GetStdHandle(jule::Uintptr _6417_stdh);
inline jule::Bool _2146593ac_CloseHandle(jule::Uintptr _6523_stdh);
inline jule::I64 _214659731_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat);
inline jule::I64 _214659b60_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode);
inline jule::U32 _214659d6e_GetLastError(void);
inline jule::U32 _21465a1e3_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff);
inline jule::Bool _21465a776_DeleteFile(jule::U16* _9322_path);
inline jule::Bool _21465aa40_CreateDirectory(jule::U16* _9827_path);
inline jule::Bool _21465ad09_RemoveDirectory(jule::U16* _10327_path);
inline jule::U32 _21465b2e3_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1092_buff, jule::U16** _10914_fname);
inline jule::Bool _21465b667_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode);
inline jule::Bool _21465bc72_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode);
inline jule::Bool _21465c2c2_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _1257_written, void* _12521_reserved);
inline jule::Bool _21465c7ab_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _1337_readed);
inline jule::Uintptr _21465cd3e_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data);
inline jule::I64 _21465d1b3_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data);
inline jule::I64 _21465d47c_FindClose(jule::Uintptr _15414_h);
inline jule::I64 _21466055b_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _214660935_Close(jule::I64 _2510_handle);
inline jule::I64 _214660cdc_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _21466101d_Exit(jule::I64 _339_code);
inline __jule_tuple_i32__jule_tuple_int _213561e31_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _213562272_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _2135627c2_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::I64 _213562a8b_RuneLen(jule::I32 _35212_r);
inline jule::I64 _213563020_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r);
inline jule::Slice<jule::U8> _21356331c_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _213563691_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _213563c24_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _213563edd_RuneStart(jule::U8 _51714_b);
inline void _213565132_handleRW(jule::Slice<jule::U8>* _514_b);
inline void _21356ad91_HandleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Str _1e99e65aa_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1a7676ea3_Slice(jule::U8* _2316_e, jule::I64 _2326_n);
inline jule::Slice<jule::U8> _1e9a02352_StrBytes(jule::Str _4113_s);
inline jule::Str _1e9a025d8_BytesStr(jule::Slice<jule::U8> _5013_b);
inline jule::Str _1e9a028a2_StrFromBytes(jule::Slice<jule::U8> _5817_b);
inline jule::I64 _1e9a31a24_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _1e9a32a9c_Args(void);
inline jule::Exceptional<jule::Str> _1e9a3300e_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1e9a33949_getwd(void);
inline jule::Bool _1d1b2e9d6_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1d1b95024_is16(jule::Slice<_1d1b93286_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1d1b95398_is32(jule::Slice<_1d1b937b4_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1d1b95ba1_isExcludingLatin(jule::Ptr<_1d1b93c37_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1d1b95de3_IsUpper(jule::I32 _29512_r);
inline jule::I64 _1d1901a94_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _1d19022d1_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _1d1902655_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _1d1902a0c_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _1d1902dc5_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1d1903249_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _1d1903700_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _1d1903a41_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _1d1903e70_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _1d19042e4_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _1d1905acb_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _1d1905e50_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _1d1906879_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1d190701c_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Bool _1d1907391_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _1d1907e0d_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I64 _1d1908282_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _1d190876b_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n);
inline jule::Str _1d19094e7_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _1d190986b_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _1d1909be0_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Bool _1e9a05b19_IsPathSep(jule::U8 _4914_c);
inline jule::Bool _1e9a05e27_isSlash(jule::U8 _5312_c);
inline jule::U8 _1e9a061e1_toUpper(jule::U8 _5512_c);
inline jule::I64 _1e9a067b8_volumeNameLen(jule::Str _8318_path);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1e9a06a82_cutPath(jule::Str _12012_path);
inline __jule_tuple_str__jule_tuple_bool _1e9a06d4b_fullPath(jule::Str _12913_name);
inline __jule_tuple_str__jule_tuple_bool _1e9a07225_abs(jule::Str _14612_path);
inline jule::Str _1e9a07467_join(jule::Slice<jule::Str> _16013_elem);
inline jule::Str _1d190c74d_Clean(jule::Str _10914_path);
inline jule::Str _1d190cd25_FromSlash(jule::Str _21214_path);
inline jule::Str _1d190d166_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _1d190d3ec_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _1d190d6b6_Abs(jule::Str _2468_path);
inline jule::Str _1d190d980_Base(jule::Str _25213_path);
inline jule::Str _1d190dd59_Dir(jule::Str _2838_path);
inline jule::Str _1d190e09b_VolumeName(jule::Str _30115_path);
inline jule::I64 _21467124d_getLastFsError(void);
inline jule::Bool _21356cd93_isConsoleHandle(jule::Uintptr _11620_handle);
inline void _1d1d306ba_appendEscapeArg(_1e9a030bc_StrBuilder* _10225_s, jule::Str _10240_arg);
inline jule::Str _1d1d30984_makeCmdLine(jule::Slice<jule::Str> _16316_args);
inline jule::Exceptional<jule::Slice<jule::U16>> _1d1d30d5d_createEnvBlock(jule::Slice<jule::Str> _17919_env);
inline jule::I64 _1d1d31d5e_processErrorFromCode(jule::I64 _1125_code);
inline jule::I64 _1d1d3207e_getLastProcessError(void);
inline void _1d1d32898_Exit(jule::I64 _129_code);
inline jule::Str _1d1d32aa7_Executable(void);
inline jule::Bool _1d1c61035_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1d1c61310_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1d1c615c9_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1d1c6daae_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args);
inline jule::Str _1d1c6ddbc_argToStr(jule::Any _32713_arg);
inline jule::I64 _1d1c6e186_findNextFmt(jule::Str _34016_fmt);
inline jule::Str _1d1c6e54e_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args);
inline jule::Bool _1d1c703a7_IsTopDirective(jule::Str _2219_directive);
inline jule::Bool _1d1c717c6_IsWindows(jule::Str _3714_os);
inline jule::Bool _1d1c71ad4_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1d1c71d9d_IsLinux(jule::Str _4312_os);
inline jule::Bool _1d1c721de_IsI386(jule::Str _4611_arch);
inline jule::Bool _1d1c72475_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1d1c7273e_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1d1c72a08_IsUnix(jule::Str _5511_os);
inline jule::Bool _1d1c72dd2_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1d1c73124_Is64Bit(jule::Str _6112_arch);
inline void _1d1d33d3e_init(void);
inline jule::I64 _1b910129a_LeadingZeros64(jule::U64 _6119_x);
inline jule::I64 _1b91021e1_TrailingZeros(jule::U64 _8318_x);
inline jule::I64 _1b9102ac6_TrailingZeros32(jule::U32 _10520_x);
inline jule::I64 _1b9102d90_TrailingZeros64(jule::U64 _11420_x);
inline jule::I64 _1b9108868_Len32(jule::U32 _35214_x);
inline jule::I64 _1b9108b32_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _1b91098be_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1b910b1c8_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::U32 _1b900cea9_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1b900d2b7_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1b900d581_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1b900d8c2_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1b9010e35_Frexp(jule::F64 _4714_f);
inline jule::F64 _1b9113312_NaN(void);
inline jule::Bool _1b9113620_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1b91138d9_Inf(jule::I64 _618_sign);
inline jule::Bool _1b9113ca2_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1b911406b_normalize(jule::F64 _8214_x);
inline jule::F64 _1b9115a40_Log(jule::F64 _1118_x);
inline jule::F64 _1b9116425_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1b911ceed_Modf(jule::F64 _449_f);
inline jule::F64 _1b911d806_Log2(jule::F64 _449_x);
inline jule::Str _1b914729c_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1b9147885_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1b914808e_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1b914608c_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1b9148765_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1b9146c19_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _1b9148b83_roundShortest(_1b9159974_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1b914608c_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1b9149227_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1b9146c19_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1b9149711_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1b9146c19_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1b9149db5_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1b914608c_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1b914a547_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1b914608c_floatInfo* _51232_flt);
inline jule::I64 _1b914a8bb_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1b914ac40_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1b914b8cd_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1b8a0782d_ConvError _1b914bd51_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1b914c280_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1b914c736_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1b914d3e6_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1b914d869_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1b915064b_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b9150959_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b9150c23_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1b915276e_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1b9152b9d_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1b8a0782d_ConvError _1b9153242_atofHex(_1b914608c_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b8a0782d_ConvError _1b915361b_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b8a0782d_ConvError _1b915385d_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b8a0782d_ConvError _1b9153bd2_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1b9154056_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1b91548d6_ryuFtoaFixed32(_1b9146c19_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1b9154d7b_ryuFtoaFixed64(_1b9146c19_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1b91556b7_formatDecimal(_1b9146c19_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1b9155b90_ryuFtoaShortest(_1b9146c19_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1b914608c_floatInfo* _26168_flt);
inline jule::I64 _1b9155e26_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1b91561e0_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b915661e_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1b914608c_floatInfo* _3963_flt);
inline void _1b9156c6d_ryuDigits(_1b9146c19_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1b91573de_ryuDigits32(_1b9146c19_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b915781d_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b9157c4c_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1b91580c1_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1b915838a_divmod1e9(jule::U64 _60214_x);
inline void _1b915b2c2_trim(_1b9159974_decimal* _27414_a);
inline void _1b915b5ad_rightShift(_1b9159974_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1b915ba64_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1b915bd1c_leftShift(_1b9159974_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1b915c191_shouldRoundUp(_1b9159974_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1b915d923_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1b915dcdb_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1b915e0a5_Itoa(jule::I64 _819_i);
inline jule::Str _1b915e3e6_small(jule::I64 _8610_i);
inline jule::Bool _1b915e67c_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1b915ec21_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline jule::Str _1b916121c_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1b91614d6_BitsizeOf(jule::Str _5914_k);
inline jule::Str _1b9161827_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1b9161aad_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1b9161d77_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1b916297c_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1b9162c46_BitsizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1b9163010_BitsizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1b91632c9_BitsizeOfUint(jule::U64 _19718_x);
inline void _1b9163472_UpdateTarget(void);
inline void _1b91635e8_init(void);
inline jule::I64 _1b9167256_MinI(jule::Str _6113_k);
inline jule::I64 _1b9167564_MaxI(jule::Str _7913_k);
inline jule::U64 _1b916782d_MaxU(jule::Str _9713_k);
inline jule::F64 _1b9167b6e_Min(jule::Str _11512_k);
inline jule::F64 _1b9167e05_Max(jule::Str _13312_k);
inline jule::Bool _1b91683ab_IsI16Greater(jule::Str _621_k);
inline jule::Bool _1b91686b9_IsI32Greater(jule::Str _1121_k);
inline jule::Bool _1b9168983_IsI64Greater(jule::Str _1621_k);
inline jule::Bool _1b9168cc4_IsU16Greater(jule::Str _2321_k);
inline jule::Bool _1b916905a_IsU32Greater(jule::Str _2821_k);
inline jule::Bool _1b9169324_IsU64Greater(jule::Str _3421_k);
inline jule::Bool _1b91695dd_IsF32Greater(jule::Str _4117_k);
inline jule::Bool _1b91699b7_IsF64Greater(jule::Str _4617_k);
inline jule::Bool _1b9169cb4_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2);
inline jule::Bool _1b916ae2a_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1b916b238_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1b916b502_IsInt(jule::Str _4610_k);
inline jule::Bool _1b916b843_IsFloat(jule::Str _5112_k);
inline jule::Bool _1b916bac9_IsNum(jule::Str _5610_k);
inline jule::Bool _1b916bd93_IsSigNum(jule::Str _6113_k);
inline void _1b9176188_lshiftUnsig(_1b916c16d_Const* _59021_c, _1b916c16d_Const* _59032_x);
inline void _1b91764b8_rshiftUnsig(_1b916c16d_Const* _59621_c, _1b916c16d_Const* _59632_x);
inline jule::Bool _1c80b6c79_IsUnaryOp(jule::U64 _33414_id);
inline jule::Bool _1c80b7087_IsBinOp(jule::U64 _34412_id);
inline jule::Bool _1c80b7692_IsStr(jule::Str _36410_k);
inline jule::Bool _1c80b7928_IsRawStr(jule::Str _36713_k);
inline jule::Bool _1c80b7be2_IsRune(jule::Str _37111_k);
inline jule::Bool _1c80b85c7_IsFloat(jule::Str _38012_k);
inline jule::Bool _1c80b8891_IsNum(jule::Str _38810_k);
inline jule::Bool _1c80b8e24_IsIgnoreIdent(jule::Str _40318_ident);
inline jule::Bool _1c80b91dd_IsAnonIdent(jule::Str _40616_ident);
inline jule::Bool _1c80b9771_IsSpace(jule::I32 _41912_r);
inline jule::Bool _1c80b9c6b_IsLetter(jule::I32 _42913_r);
inline jule::Bool _1c80ba1de_IsDecimal(jule::U8 _44914_b);
inline jule::Bool _1c80ba4a8_IsBinary(jule::U8 _45213_b);
inline jule::Bool _1c80ba772_IsOctal(jule::U8 _45512_b);
inline jule::Bool _1c80baa3b_IsHex(jule::U8 _45810_b);
inline jule::Bool _1c80bad05_IsAssign(jule::U64 _47313_id);
inline jule::Bool _1c80bb0be_IsPostfixOp(jule::U64 _48516_id);
inline jule::Bool _1c80bb388_IsAssignOp(jule::U64 _49515_id);
inline jule::Ptr<_1c80bbcc3_File> _1c80bd19d_NewFileSet(jule::Str _5715_path);
inline _1d1c6d64c_Log _1c80bebc7_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1c80bbcc3_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args);
inline jule::Bool _1c80c0090_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1c80c0414_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i);
inline jule::Str _1c80c07cc_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i);
inline jule::Str _1c80c0b51_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i);
inline jule::Str _1c80c0ec5_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i);
inline jule::Str _1c80c1349_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i);
inline jule::Str _1c80c17cd_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i);
inline jule::Str _1c80c1a20_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1c80c1cd9_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1c80c215d_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i);
inline jule::Bool _1c80c24d2_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i);
inline jule::Bool _1c80c2856_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i);
inline jule::Bool _1c80c2bca_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i);
inline jule::Bool _1c80c304e_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i);
inline jule::Str _1c80c3549_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1c80c3725_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1c80c3a77_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n);
inline jule::Str _1c80c3d41_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1c80c410a_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1c80c43c4_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1c80c468d_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_1d1c6d64c_Log> _1a59c1b07_Lex(jule::Ptr<_1c80bbcc3_File> _80612_f, jule::I64 _80622_mode);
inline jule::Bool _1a5a8a374_FindModuleFile(jule::Slice<jule::Ptr<_21467189c_DirEntry>>* _1320_dirents);
inline jule::Str _1a5a8a62c_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_1d1c6d64c_Log> _1a5a8a8e6_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1a5a8b243_IsPub(jule::Str _910_ident);
inline jule::Bool _1a5ad3aa4_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1a5aedad0_ToRune(jule::Str _2015_lit);
inline jule::Str _1a5aedcde_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1a5aee130_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1a5aee3b6_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1a5aee73a_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1a5aeead1_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _1c79831c3_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i);
inline jule::Slice<jule::U8> _1c7983503_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes);
inline void _1c79837de_FmtByDefault(_1e9a030bc_StrBuilder* _4722_buf, jule::Any* _4740_arg);
inline void _1c7983c0c_applyFmtByDefault(_1e9a030bc_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args);
inline void _1c798412a_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1e9a030bc_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args);
inline jule::Slice<jule::U8> _1c798449e_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args);
inline jule::Str _1c798656c_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Bool _1a5a10085_parameterUsesGenerics(jule::Ptr<_1a5a0bc30_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>>* _38546_generics);
inline jule::Ptr<_1a5b58024_TypeSymbol> _1a5a12807_buildType(jule::Ptr<_1a59c3e6c_TypeDecl> _9418_t);
inline jule::Ptr<_1a5b1ac73_Value> _1a5a12b15_buildExpr(jule::Ptr<_1a59c82a1_Expr> _10318_expr);
inline jule::Ptr<_1a5b50060_TypeAlias> _1a5a12dce_buildTypeAlias(jule::Ptr<_1a59da989_TypeAliasDecl> _11223_decl);
inline jule::Ptr<_1a59e1dd0_Field> _1a5a13220_buildField(jule::Ptr<_1a59de33e_FieldDecl> _12319_decl);
inline jule::Slice<jule::Ptr<_1a59e1dd0_Field>> _1a5a134a6_buildFields(jule::Slice<jule::Ptr<_1a59de33e_FieldDecl>>* _13421_decls);
inline jule::Ptr<_1a59e4d06_Struct> _1a5a13770_buildStruct(jule::Ptr<_1a59dec35_StructDecl> _14220_decl);
inline jule::Ptr<_1a5a08303_Param> _1a5a13a39_buildParam(jule::Ptr<_1a59d46ca_ParamDecl> _15419_decl);
inline jule::Slice<jule::Ptr<_1a5a08303_Param>> _1a5a13e13_buildParams(jule::Slice<jule::Ptr<_1a59d46ca_ParamDecl>>* _16521_decls);
inline jule::Ptr<_1a5a07a72_RetType> _1a5a14155_buildRetType(jule::Ptr<_1a59c6d60_RetTypeDecl> _17321_decl);
inline jule::Ptr<_1a5a09cc7_Fn> _1a5a1441e_buildFunc(jule::Ptr<_1a59d5b2c_FnDecl> _18318_decl);
inline jule::Slice<jule::Ptr<_1a5a09cc7_Fn>> _1a5a146d8_buildMethods(jule::Slice<jule::Ptr<_1a59d5b2c_FnDecl>>* _20122_decls);
inline jule::Slice<jule::Ptr<_1a5b58024_TypeSymbol>> _1a5a149a2_buildTraitInherits(jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>* _20928_inherits);
inline jule::Ptr<_1a5a1d181_Trait> _1a5a14c6b_buildTrait(jule::Ptr<_1a59e0472_TraitDecl> _21719_decl);
inline jule::Ptr<_1a5a1ed20_EnumItem> _1a5a15035_buildEnumItem(jule::Ptr<_1a59dc529_EnumItemDecl> _22722_decl);
inline jule::Slice<jule::Ptr<_1a5a1ed20_EnumItem>> _1a5a152ee_buildEnumItems(jule::Slice<jule::Ptr<_1a59dc529_EnumItemDecl>>* _23524_decls);
inline jule::Ptr<_1a5a2088c_Enum> _1a5a157e9_buildEnum(jule::Ptr<_1a59dd0da_EnumDecl> _24318_decl);
inline jule::Ptr<_1a5a219c0_TypeEnumItem> _1a5a159c5_buildTypeEnumItem(jule::Ptr<_1a59dd915_TypeEnumItemDecl> _25326_decl);
inline jule::Slice<jule::Ptr<_1a5a219c0_TypeEnumItem>> _1a5a15c6c_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a59dd915_TypeEnumItemDecl>>* _26128_decls);
inline jule::Ptr<_1a5a22097_TypeEnum> _1a5a16036_buildTypeEnum(jule::Ptr<_1a59de075_TypeEnumDecl> _26922_decl);
inline jule::Ptr<_1a5ab1ee4_Var> _1a5a16300_buildVar(jule::Ptr<_1a59d6cd7_VarDecl> _27817_decl);
inline jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _1a5a165b9_buildVars(jule::Slice<jule::Ptr<_1a59d6cd7_VarDecl>> _29518_decls);
inline jule::Ptr<_1a5a467e7_Impl> _1a5a16883_buildImpl(jule::Ptr<_1a59e0ad2_Impl> _30318_decl);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a41c43_buildAsComptimeMethodData(jule::Ptr<_1a5a0cca8_FnIns>* _142135_f);
inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a42051_findComptimePackage(jule::Ptr<_1a5a8e17a_Sema>* _142929_s);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a423c5_buildComptimeTypeInfoData(jule::Ptr<_1a5a8e17a_Sema>* _143535_s, jule::Ptr<_1a5b50d52_TypeKind>* _143550_t);
inline jule::Ptr<_1a5b19aeb_Data> _1a5a42716_buildComptimeValue(jule::Ptr<_1a5b19aeb_Data>* _144328_d);
inline jule::Str _1a5a45791_toStrConstraints(jule::Ptr<_1a5b4e46b_InsGeneric> _14321_g);
inline jule::Bool _1a5a45b59_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a5b50d52_TypeKind>* _15434_g);
inline jule::Bool _1a5a45e23_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1a5a5420b_scopeChecker> _1a5a48a2a_newScopeCheckerBase(jule::Ptr<_1a5a8e17a_Sema>* _5829_s, jule::Ptr<_1a5a0cca8_FnIns> _5843_owner);
inline jule::Ptr<_1a5a5420b_scopeChecker> _1a5a48de3_newScopeChecker(jule::Ptr<_1a5a8e17a_Sema>* _6625_s, jule::Ptr<_1a5a0cca8_FnIns> _6639_owner);
inline jule::Ptr<_1a5a52b88_scopeLabel> _1a5a49267_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1a5a5420b_scopeChecker> _7637_scope);
inline jule::Bool _1a5a49630_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1a5a4bc4d_Scope>* _9034_sc);
inline jule::Bool _1a5a499a4_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1a5a4bc4d_Scope>* _10434_sc);
inline jule::I64 _1a5a49d28_countMatchType(jule::Ptr<_1a5a50e61_Match>* _14720_m, jule::Ptr<_1a5b50d52_TypeKind>* _14732_t);
inline jule::Slice<jule::Ptr<_1a5b19aeb_Data>> _1a5a4a0e2_getDatasFromTupleData(jule::Ptr<_1a5b19aeb_Data>* _17131_d);
inline jule::Bool _1a5a4a92d_checkMut(jule::Ptr<_1a5a8e17a_Sema>* _20618_s, jule::Ptr<_1a5b19aeb_Data>* _20629_left, jule::Ptr<_1a5b19aeb_Data> _20646_right, jule::Ptr<_1c80b653c_Token> _20660_op);
inline jule::Bool _1a5a4ae17_checkAssign(jule::Ptr<_1a5a8e17a_Sema>* _22521_s, jule::Ptr<_1a5b19aeb_Data>* _22536_left, jule::Ptr<_1a5b19aeb_Data> _22553_right, jule::Ptr<_1c80b653c_Token> _22567_op);
inline jule::Bool _1a5a4b1d1_isValidAstStForNextSt(jule::Any* _24731_n);
inline jule::Bool _1a5a4b49a_isValidStForNextSt(jule::Any* _25824_st);
inline jule::Bool _1a5a4b764_stmtIsDef(jule::Any* _27615_st);
inline jule::U64 _1a5a66619_removeEqFromOp(jule::U64 _220119_op);
inline void _1a5a6684a_makeComptimeRange(jule::Ptr<_1a5b19aeb_Data>* _223027_d);
inline jule::Bool _1a5a66d45_canComptimeMatch(jule::Ptr<_1a5b19aeb_Data>* _225126_d);
inline jule::Ptr<_1a5ab1ee4_Var> _1a5a6b2bc_findVarInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded);
inline jule::Ptr<_1a5b50060_TypeAlias> _1a5a6b740_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded);
inline jule::Ptr<_1a59e4d06_Struct> _1a5a6bb6e_findStructInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded);
inline jule::Ptr<_1a5a09cc7_Fn> _1a5a6c125_findFnInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded);
inline jule::Ptr<_1a5a1d181_Trait> _1a5a6c466_findTraitInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _9428_files, jule::Str* _9452_ident);
inline jule::Ptr<_1a5a2088c_Enum> _1a5a6c7da_findEnumInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _10627_files, jule::Str* _10651_ident);
inline jule::Ptr<_1a5a22097_TypeEnum> _1a5a6cb5e_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _11831_files, jule::Str* _11855_ident);
inline jule::Any _1a5a6d19d_defByIdentPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded);
inline jule::Bool _1a5a741d7_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p);
inline jule::Bool _1a5a8b81a_isValidModelForRef(jule::Any* _1328_m);
inline _1d1c6d64c_Log _1a5a8bcc1_compilerErr(jule::Ptr<_1c80b653c_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args);
inline jule::Bool _1a5a8c145_impIsLookupable(jule::Ptr<_1a5a6dcd6_ImportInfo>* _5621_i, jule::Str* _5638_ident);
inline void _1a5a8c475_appendRetVars(jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>* _6823_dest, jule::Ptr<_1a5a0cca8_FnIns>* _6842_f);
inline void _1a5a8c761_appendParamVars(jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>* _9825_dest, jule::Ptr<_1a5a0cca8_FnIns>* _9844_f);
inline void _1a5a8ca4c_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>* _15834_dest, jule::Ptr<_1a5a0cca8_FnIns>* _15859_f);
inline jule::Ptr<_1a5b14783_SymbolTable> _1a5a8cdc1_findFile(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _19618_files, jule::Ptr<_1c80bbcc3_File>* _19642_handler);
inline void _1a5a8d377_pushSuggestion(_1d1c6d64c_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args);
inline void _1a5ab06c9_pushImplemented(jule::Ptr<_1a5a1d181_Trait> _288224_t, jule::Ptr<_1a59e4d06_Struct>* _288240_d);
inline void _1a5ab09b5_pushImplements(jule::Ptr<_1a59e4d06_Struct>* _290024_s, jule::Ptr<_1a5a1d181_Trait> _290040_t);
inline jule::Bool _1a5b00362_traitHasReferenceReceiver(jule::Ptr<_1a5a1d181_Trait>* _2831_t);
inline jule::Bool _1a5b00719_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1a5b19aeb_Data>* _4333_d);
inline jule::Bool _1a5b00a8d_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1a5b19aeb_Data>* _4830_d);
inline jule::Bool _1a5b00e56_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1a5b19aeb_Data>* _7132_d);
inline jule::Bool _1a5b012ca_intAssignable(jule::Str _10018_kind, jule::Ptr<_1a5b19aeb_Data>* _10030_d);
inline void _1a5b0c6e3_checkMutRiskOfStructLit(jule::Ptr<_1a5a8e17a_Sema>* _92033_s, jule::Ptr<_1a59ecc32_StructLitExprModel>* _92044_m);
inline jule::Ptr<_1a5b50d52_TypeKind> _1a5b1352e_lenKind(void);
inline jule::Bool _1a5b13881_isGoodValueToInfer(jule::Ptr<_1a5b19aeb_Data>* _142124_d);
inline jule::Ptr<_1a59c3389_Directive> _1a5b48300_findDirective(jule::Slice<jule::Ptr<_1a59c3389_Directive>>* _425923_directives, jule::Str _425954_d);
inline jule::Any _1a5b486b8_findBuiltinsImport(jule::Str* _426824_ident, jule::Ptr<_1a5a6dcd6_ImportInfo> _426836_imp);
inline void _1a5b488e9_fitBitsize(jule::Ptr<_1a5b19aeb_Data>* _427720_d);
inline void _1a5b48c29_makeStructLitAlloc(jule::Ptr<_1a5b19aeb_Data>* _430628_d, jule::Ptr<_1a59ecc32_StructLitExprModel>* _430643_lit);
inline jule::Ptr<_1a5ab1ee4_Var> _1a5b4909d_buildErrorVar(jule::Ptr<_1a5a4bc4d_Scope>* _431723_s, jule::Ptr<_1a59cbeca_FnCallExpr>* _431739_fc);
inline jule::Any _1a5b49422_findBuiltinsSema(jule::Str* _433222_ident, jule::Ptr<_1a5a8e17a_Sema> _433238_s);
inline jule::Bool _1a5b496db_isOkForShifting(jule::Ptr<_1a5b19aeb_Data>* _435725_d);
inline jule::Bool _1a5b49ab5_isInstancedStruct(jule::Ptr<_1a59e7a84_StructIns> _437422_s);
inline jule::Bool _1a5b49db2_isPtrArithmeticCompatible(jule::Ptr<_1a5b19aeb_Data>* _437835_l, jule::Ptr<_1a5b19aeb_Data>* _437850_r);
inline void _1a5b4a258_applyCastKindModel(jule::Ptr<_1a5b19aeb_Data>* _439928_d, jule::Ptr<_1a5b50d52_TypeKind>* _439943_t, jule::Ptr<_1c80b653c_Token>* _439962_token);
inline void _1a5b4a5ee_applyCastKind(jule::Ptr<_1a5b19aeb_Data>* _440823_d, jule::Ptr<_1a5b50d52_TypeKind>* _440838_t, jule::Ptr<_1c80b653c_Token>* _440857_token);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b4a80d_buildVoidData(void);
inline jule::Str _1a5b4ab82_checkDataForIntegerIndexing(jule::Ptr<_1a5b19aeb_Data>* _441937_d, jule::Ptr<_1c80b653c_Token>* _441952_token);
inline void _1a5b4b028_applyCastModelByEnum(jule::Ptr<_1a5b19aeb_Data>* _444430_d, jule::Ptr<_1a5a2088c_Enum> _444444_e, jule::Ptr<_1c80b653c_Token>* _444459_token);
inline void _1a5b4b314_castConstByType(jule::Str* _445521_t, jule::Ptr<_1a5b19aeb_Data>* _445534_d);
inline void _1a5b4b831_updateModelToGenericIns(jule::Any* _448933_m, jule::Ptr<_1a5a0cca8_FnIns>* _448952_f);
inline jule::Bool _1a5b4ba95_pushSubIdentFromExpr(jule::Any _450029_expr, jule::Ptr<_1a59c4841_SubIdentTypeDecl>* _450050_t);
inline jule::Str _1a5b4bd5e_constoa(jule::Ptr<_1b916c16d_Const>* _452313_c);
inline jule::Ptr<_1a5b19aeb_Data> _1a5b4c28d_evalEnumStatic(jule::Ptr<_1a5a2088c_Enum>* _453424_enm, jule::Ptr<_1a5a1ed20_EnumItem>* _453441_item, jule::Ptr<_1c80b653c_Token>* _453463_token);
inline jule::Ptr<_1a59ecc32_StructLitExprModel> _1a5b4c557_isLitBased(jule::Any* _455120_m);
inline void _1a5b4c843_makeImplicitDeref(jule::Ptr<_1a5b19aeb_Data>* _456827_d, jule::Ptr<_1c80b653c_Token> _456841_baseToken);
inline void _1a8c03330_updateRefer(jule::Ptr<_1a5a10e87_ReferenceStack> _457923_ref, jule::Ptr<_1a5a0cca8_FnIns>* _457946_old, jule::Ptr<_1a5a0cca8_FnIns>* _457959_new);
inline void _1a5b4cec5_makeVariadic(jule::Ptr<_1a5b19aeb_Data>* _458722_d, jule::Ptr<_1a5b50d52_TypeKind> _458736_elem);
inline jule::Bool _1a5b4d404_isVarCaptured(jule::Ptr<_1a5a5420b_scopeChecker> _460118_r, jule::Ptr<_1a5a5420b_scopeChecker> _460140_s, jule::Ptr<_1a5ab1ee4_Var> _460158_v);
inline jule::Bool _1a5b6b5a9_kindUsesGenerics(jule::Ptr<_1a5b50d52_TypeKind>* _171626_k, jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>>* _171641_generics);
inline jule::Bool _1a5b6b972_hasDirective(jule::Slice<jule::Ptr<_1a59c3389_Directive>>* _172622_directives, jule::Str _172653_tag);
inline jule::Bool _1a5b6bc3b_canGetPtr(jule::Ptr<_1a5b19aeb_Data>* _173519_d);
inline jule::Bool _1a5b6c07c_isValidForSptrType(jule::Ptr<_1a5b50d52_TypeKind>* _174728_t);
inline jule::Bool _1a5b6c313_isValidForRef(jule::Ptr<_1a5b50d52_TypeKind>* _175623_t);
inline jule::Bool _1a5b6c5cc_isBuiltinStrConvertable(jule::Ptr<_1a5b50d52_TypeKind>* _175933_t);
inline jule::Str _1a5b6c896_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _176327_tokens);
inline jule::Ptr<_1a5b5892b_Prim> _1a5b6cc70_buildPrimType(jule::Str _178218_kind);
inline void _1a5b6d358_applyImplicitCast(jule::Ptr<_1a5b50d52_TypeKind>* _181027_dest, jule::Ptr<_1a5b19aeb_Data>* _181049_d, jule::Ptr<_1c80b653c_Token>* _181064_token);
inline jule::Bool _1a5b6d622_validTypeForXof(jule::Ptr<_1a5b50d52_TypeKind>* _183825_t);
inline __jule_tuple_x_1a5b14783_SymbolTable__jule_tuple_s_1d1c6d64c_Log _1a5b71735_buildSymbols(jule::Ptr<_1a59c2058_Ast>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1a5a16e49_symbolBuilder> _1662_owner);
inline __jule_tuple_x_1a5a71c0c_Package__jule_tuple_s_1d1c6d64c_Log _1a5b71ba8_analyzePackage(jule::Slice<jule::Ptr<_1a59c2058_Ast>>* _3024_files, jule::Trait* _3044_importer, jule::I64* _3065_flags);
inline __jule_tuple_x_1a5a71c0c_Package__jule_tuple_s_1d1c6d64c_Log _1a5b720d7_AnalyzePackage(jule::Slice<jule::Ptr<_1a59c2058_Ast>> _7423_files, jule::Trait _7442_importer, jule::I64 _7462_flags);
inline jule::Ptr<_1a5a0cca8_FnIns> _1c7987073_findBuiltinFunc(jule::Str* _2621_ident);
inline jule::Ptr<_1a5b50060_TypeAlias> _1c7987381_primTypeAlias(jule::Ptr<_1a5b50d52_TypeKind>* _6623_k);
inline jule::Ptr<_1a5ab1ee4_Var> _1c798ac36_findBuiltinVar(jule::Str* _9420_ident);
inline jule::Ptr<_1a5b50060_TypeAlias> _1c798b077_findBuiltinTypeAlias(jule::Str _14225_ident);
inline jule::Any _1c798b30d_findBuiltinDef(jule::Str* _19720_ident);
inline jule::Any _1c798b5c7_findBuiltinDefStdDebug(jule::Str* _21328_ident);
inline jule::Any _1c798b891_findBuiltinDefStdMem(jule::Str* _22626_ident);
inline jule::Any _1c798bc6a_findBuiltinDefStdComptime(jule::Str* _24231_ident);
inline jule::Any _1c798beac_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident);
inline jule::Any _1c798c331_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident);
inline jule::Ptr<_1a5b19aeb_Data> _1c798c6a5_builtinCallerError(jule::Ptr<_1a5b1b823_Eval>* _30028_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _30043_fc);
inline jule::Ptr<_1a5b19aeb_Data> _1c798cad4_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _32226_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _32241_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c798d013_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _34628_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _34643_fc, jule::Ptr<_1a5b19aeb_Data>* _34665_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c798d442_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _35826_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _35841_fc, jule::Ptr<_1a5b19aeb_Data>* _35863_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c798d871_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _42028_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _42043_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c798ded1_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _44627_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _44642_fc, jule::Ptr<_1a5b19aeb_Data>* _44664_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c798e300_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _49729_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _49744_fc, jule::Ptr<_1a5b19aeb_Data>* _49766_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c798e7d9_callerCopySlice(jule::Ptr<_1a5b19aeb_Data>* _60625_dest, jule::Ptr<_1a5b1b823_Eval>* _60643_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _60658_fc, jule::Ptr<_1a5b19aeb_Data>* _60680_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c798ec18_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _64027_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _64042_fc, jule::Ptr<_1a5b19aeb_Data>* _64064_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c799008c_callerLenSlice(jule::Ptr<_1a5b19aeb_Data>* _66524_expr, jule::Ptr<_1a5b19aeb_Data>* _66542_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c7990411_callerLenMap(jule::Ptr<_1a5b19aeb_Data>* _67322_expr, jule::Ptr<_1a5b19aeb_Data>* _67340_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c7990785_callerLenArr(jule::Ptr<_1a5b19aeb_Data>* _68122_expr, jule::Ptr<_1a5b19aeb_Data>* _68140_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c7990b09_callerLenStr(jule::Ptr<_1a5b19aeb_Data>* _68822_expr, jule::Ptr<_1a5b19aeb_Data>* _68840_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c7990e7d_callerLenComptime(jule::Ptr<_1a5b19aeb_Data>* _70127_d, jule::I64 _70137_n);
inline jule::Ptr<_1a5b19aeb_Data> _1c79913ac_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _70826_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _70841_fc, jule::Ptr<_1a5b19aeb_Data>* _70863_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c7991731_callerCapSlice(jule::Ptr<_1a5b19aeb_Data>* _74624_expr, jule::Ptr<_1a5b19aeb_Data>* _74642_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c7991b60_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _75426_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _75441_fc, jule::Ptr<_1a5b19aeb_Data>* _75463_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c7992149_callerDeleteMap(jule::Ptr<_1a5b1b823_Eval>* _77725_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _77740_fc, jule::Ptr<_1a5b19aeb_Data>* _77762_expr, jule::Ptr<_1a5b19aeb_Data>* _77780_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c7992578_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _80629_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _80644_fc, jule::Ptr<_1a5b19aeb_Data>* _80666_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c79929a7_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _82929_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _82944_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c7992dd6_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _87340_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _87355_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c7993557_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _90941_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _90956_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c7993986_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _92938_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _92953_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c7993db5_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _94138_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _94153_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c79942e4_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _95439_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _95454_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c7994723_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _96743_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _96758_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c7994b52_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _102735_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _102750_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c7995081_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _105236_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _105251_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c79954b0_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _107733_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _107748_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c79958de_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _110045_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _110060_fc, jule::Ptr<_1a5b19aeb_Data>* );
inline jule::Ptr<_1a5b19aeb_Data> _1c7995d1d_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _112744_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _112759_fc, jule::Ptr<_1a5b19aeb_Data>* _112781_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c799624c_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _117834_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _117849_fc, jule::Ptr<_1a5b19aeb_Data>* _117871_d);
inline jule::Ptr<_1a5b19aeb_Data> _1c799667b_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _118736_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _118751_fc, jule::Ptr<_1a5b19aeb_Data>* _118773_d);
inline jule::Ptr<_1a682b884_FileInfo> _1a6870334_ParseFile(jule::Ptr<_1c80bbcc3_File> _2318_f);
inline __jule_tuple_x_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log _1a68708c8_parseFileset(jule::Ptr<_1c80bbcc3_File> _5521_f);
inline jule::Ptr<_1a59d3e8d_ScopeTree> _1a6871368_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a68716ed_isSt(jule::Ptr<_1c80b653c_Token> _499_current, jule::Ptr<_1c80b653c_Token> _4926_prev);
inline jule::Bool _1a6871a72_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _5526_tokens, jule::I64* _5545_i);
inline __jule_tuple_int__jule_tuple_bool _1a6871e3a_nextStPos(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _6815_tokens, jule::I64 _6833_start);
inline __jule_tuple_sx_1c80b653c_Token__jule_tuple_bool _1a68722ae_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1c80b653c_Token>> _13028_tokens);
inline jule::Slice<jule::Ptr<_1a68725de_stmt>> _1a6872996_splitStmts(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _15120_tokens);
inline jule::Bool _1a688b0ec_isTypeOp(jule::U64* _89314_id);
inline jule::Bool _1a688b40a_isTypeRange(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _90021_tokens);
inline jule::Slice<jule::Ptr<_1c80b653c_Token>> _1a688b6c4_getBlockExpr(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _93322_tokens);
inline __jule_tuple_sx_1c80b653c_Token__jule_tuple_sx_1c80b653c_Token _1a68918e9_splitDelim(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _96520_tokens, jule::U64 _96538_delim);
inline jule::I64 _1a6891bb3_findLowestPrecOp(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _100422_tokens);
inline jule::Ptr<_1a59c9abb_IdentExpr> _1a6891e7c_buildIdentExpr(jule::Ptr<_1c80b653c_Token>* _106924_token);
inline __jule_tuple_sx_1c80b653c_Token__jule_tuple_int _1a6892246_getRangeExprTokens(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _107728_tokens);
inline jule::Bool _1a6892620_isAnonFnHead(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _110018_tokens);
inline jule::Bool _1a6893324_checkAssignTokens(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _1623_tokens);
inline _1d1c6d64c_Log _1a68944e0_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1c80bbcc3_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args);
inline jule::Slice<jule::Ptr<_1c80b653c_Token>> _1a6894a1d_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _6959_tokens);
inline __jule_tuple_sx_1c80b653c_Token__jule_tuple_sx_1c80b653c_Token _1a6894cd7_rangeLast(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _9919_tokens);
inline __jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log _1a689528d_parts(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust);
inline jule::U64 _1a6895524_getCloseOfBrace(jule::U64 _16720_left);
inline _1d1c6d64c_Log _1a6895953_compilerErr(jule::Ptr<_1c80b653c_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args);
inline void _1a6895ce9_pushSuggestion(_1d1c6d64c_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args);
inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68a7bc9_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1a5d45b18_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1a5d45c5b_checkArch(jule::Str _2814_arg);
inline jule::Bool _1a5d45e04_isPassFileAnnotation(jule::Str _5029_p);
inline void _1a5d6178d_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1a5d61a13_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1a5d61cee_initVars(jule::Slice<jule::Str>* _5518_vars, _1a5d6146e_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1a68abccc_readBuff(jule::Str _3013_path);
inline _1d1c6d64c_Log _1a68ac0da_flatCompilerErr(jule::Str _4120_text);
inline void _1a68b1908_pushPasses(jule::Ptr<_1a5a71c0c_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes);
inline jule::Slice<jule::Str> _1a68b1cc1_getAllUniquePasses(jule::Ptr<_1a5a71c0c_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1a5a6dcd6_ImportInfo>> _12853_uses);
inline _1a5d6146e_CompileInfo _1a68b1ed0_buildCompileInfo(void);
inline void _1a68b2794_IterPackages(jule::Ptr<_1a68b0055_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a5a71c0c_Package>*> _731_f);
inline void _1a68b2ac4_IterFiles(jule::Ptr<_1a5a71c0c_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a5b14783_SymbolTable>*> _1634_f);
inline void _1a68b2e6a_iterTraitInheritMethods(jule::Ptr<_1a5a1d181_Trait>* _2233_base, jule::Ptr<_1a5a1d181_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1a5a09cc7_Fn>*> _2263_f);
inline void _1a68b3388_iterTraitInheritMethods1(jule::Ptr<_1a5a1d181_Trait>* _3134_base, jule::Ptr<_1a5a1d181_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1a5a09cc7_Fn>*> _3164_f);
inline void _1a68b3641_IterTraitMethods(jule::Ptr<_1a5a1d181_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1a5a09cc7_Fn>*> _3937_f);
inline jule::Bool _1a68ba989_IsForwarded(jule::Ptr<_1a5a4bc4d_Scope>* _2317_s);
inline jule::Bool _1a68bac97_IsExprComesFromBind(jule::Ptr<_1a5b19aeb_Data>* _3925_d);
inline jule::Bool _1a68bb061_IsAny(jule::Ptr<_1a5b50d52_TypeKind>* _5115_t);
inline jule::Bool _1a68bb3a2_IsClosure(jule::Ptr<_1a59eec9a_AnonFnExprModel>* _6015_m);
inline jule::Bool _1a68bb638_IsOpMethod(jule::Ptr<_1a5a09cc7_Fn>* _6316_m);
inline jule::Bool _1a68bb9ac_IsTraitMethod(jule::Ptr<_1a59e7a84_StructIns>* _7923_owner, jule::Ptr<_1a5a0cca8_FnIns>* _7943_f);
inline jule::Bool _1a68bbd31_IsStdPackage(jule::Str* _9218_f, jule::Str _9226_p);
inline jule::Ptr<_1a59c3389_Directive> _1a68bc749_FindDirective(jule::Slice<jule::Ptr<_1a59c3389_Directive>>* _923_directives, jule::Str _954_tag);
inline jule::Bool _1a68bcb12_HasDirective(jule::Slice<jule::Ptr<_1a59c3389_Directive>>* _1918_directives, jule::Str _1949_tag);
inline jule::Bool _1a68bce86_ContainsTraitMethod(jule::Ptr<_1a5a1d181_Trait>* _2429_t, jule::Str* _2441_ident);
inline jule::I64 _1a68bd64b_FindTraitTypeOffsetS(jule::Ptr<_1a5a1d181_Trait> _3725_t, jule::Ptr<_1a59e7a84_StructIns> _3740_s);
inline jule::I64 _1a68bd9c0_FindTraitTypeOffset(jule::Ptr<_1a5a1d181_Trait> _6024_t, jule::Ptr<_1a5b50d52_TypeKind> _6039_k);
inline jule::Bool _1aa334102_isOrdered(jule::Ptr<_1a59e4d06_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a59e4d06_Struct>> _1425_s);
inline jule::Bool _1aa33a69c_isOrdered(jule::Ptr<_1a5ab1ee4_Var>* _1418_t, jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _1425_s);
inline void _1aa330dce_order(jule::Slice<jule::Ptr<_1a59e4d06_Struct>>* _3718_s);
inline void _1aa336533_order(jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>* _3718_s);
inline void _1a69cc8ae_EliminateDefines(jule::Ptr<_1a68b0055_IR>* _30526_ir);
inline void _1a69d182a_eliminateDeadCodeOfScope(jule::Ptr<_1a5a4bc4d_Scope> _23733_s);
inline void _1a69d1aa0_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a5a09cc7_Fn>>* _24933_funcs);
inline void _1a69d1cd1_eliminateFunctionsScopePackage(jule::Ptr<_1a5a71c0c_Package>* _25740_pkg);
inline void _1a69d2089_eliminateScopePackage(jule::Ptr<_1a5a71c0c_Package>* _26331_pkg);
inline void _1a69d2287_EliminateScopes(jule::Ptr<_1a68b0055_IR>* _26825_ir);
inline jule::Uintptr _1c79969cd_typeData(jule::Any* _1714_m);
inline jule::Bool _1c7996d96_equalConst(jule::Ptr<_1b916c16d_Const> _2115_l, jule::Ptr<_1b916c16d_Const> _2126_r);
inline jule::Bool _1c799721a_equalCasting(jule::Ptr<_1a59ed5b2_CastingExprModel> _4017_l, jule::Ptr<_1a59ed5b2_CastingExprModel> _4039_r);
inline jule::Bool _1c79975d3_equalUnary(jule::Ptr<_1a59ec35d_UnaryExprModel> _4715_l, jule::Ptr<_1a59ec35d_UnaryExprModel> _4735_r);
inline jule::Bool _1c7997957_equalIndexing(jule::Ptr<_1a59ee7e4_IndexingExprModel> _5418_l, jule::Ptr<_1a59ee7e4_IndexingExprModel> _5441_r);
inline jule::Bool _1c7997ccb_equalBinary(jule::Ptr<_1a59ebe84_BinaryExprModel> _5916_l, jule::Ptr<_1a59ebe84_BinaryExprModel> _5937_r);
inline jule::Bool _1c7998150_equalModels(jule::Any _7016_l, jule::Any _7030_r);
inline void _1c799dc6b_possibleNilRemove(jule::Ptr<_1c799cc8c_nils>* _7827_n, jule::Any _7837_m);
inline jule::Bool _1c799e134_isGuaranteedNonNilExpr(jule::Ptr<_1c799cc8c_nils>* _8432_n, jule::Any _8442_m);
inline jule::Bool _1c799e3ed_isNilValidType(jule::Ptr<_1a5b50d52_TypeKind> _9223_t);
inline jule::Uintptr _1c799e73e_getNilVar(jule::Any _9414_m);
inline jule::Bool _1a68c5466_isConstantValidConditionalCase(jule::Ptr<_1a5a4c16b_If>* _67836_i);
inline jule::Bool _1a68c5774_isUnreachableExpr(jule::Any* _68723_expr);
inline jule::Bool _1a68c5a3d_isConstantValidMatchCase(jule::Ptr<_1a5a51989_Case>* _70230_case);
inline jule::Bool _1a68c5d7e_isUnreachableConditionalCase(jule::Ptr<_1a5a4c16b_If>* _71134_i);
inline jule::Bool _1a68c6115_isUnreachableMatchCase(jule::Ptr<_1a5a51989_Case>* _71528_case);
inline __jule_tuple_bool__jule_tuple_u64 _1a68cb813_checkForBitShiftOpt(jule::Ptr<_1a59eb989_OperandExprModel>* _58325_l, jule::Ptr<_1a59eb989_OperandExprModel>* _58348_r);
inline jule::Bool _1a68cbbcb_areSameLvalueExprModel(jule::Any* _60028_l, jule::Any* _60043_r);
inline void _1a68cdd98_possibleDynamicRemove(jule::Ptr<_1a68ccd0e_dynamic>* _8131_d, jule::Any _8144_m);
inline jule::Bool _1a68ce1a6_isDynamicValidType(jule::Ptr<_1a5b50d52_TypeKind> _8727_t);
inline jule::Ptr<_1a5b50d52_TypeKind> _1a68ce5d5_isTypeGuaranteedDynamicData(jule::Ptr<_1a68ccd0e_dynamic>* _8937_dy, jule::Ptr<_1a5b50d52_TypeKind> _8955_t, jule::Any _8973_m);
inline jule::Uintptr _1a68ce926_getDynamicVar(jule::Any _11418_m);
inline jule::Bool _1a68d3485_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1a68d384d_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr);
inline jule::Bool _1a68d3bc2_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2);
inline void _1a68d4002_possibleBoundaryRemove(jule::Ptr<_1a68d241d_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1a68d42bb_isBoundaryRiskyType(jule::Ptr<_1a5b50d52_TypeKind> _13628_t);
inline jule::Bool _1a68d4585_isBoundaryValidType(jule::Ptr<_1a5b50d52_TypeKind> _14128_t);
inline jule::Uintptr _1a68d484e_getBoundaryVar(jule::Any _14319_m);
inline void _1a68d78c9_PushOptLevel(jule::I64 _3217_level);
inline void _1a69d5c80_detectEnabled(void);
inline void _1a6a12c46_Throw(jule::Str _910_msg);
inline jule::U64 _1a7573476_unix(void);
inline jule::Bool _1a74a7d28_isCopyOptimizable(jule::Ptr<_1a5b19aeb_Data>* _105023_expr);
inline jule::Bool _1a74a81e1_isIterCopyOptimizable(jule::Ptr<_1a5b19aeb_Data>* _106127_expr, jule::Ptr<_1a5ab1ee4_Var>* _106141_v);
inline jule::Bool _1a74a8620_captureVarHandling(jule::Ptr<_1a757b913_ObjectCoder>* _106828_oc, jule::Ptr<_1a59eec9a_AnonFnExprModel>* _106851_m, jule::Ptr<_1a5ab1ee4_Var>* _106877_v);
inline jule::Str _1a74b9565_decomposeCommonEsq(jule::U8 _158323_b);
inline jule::Str _1a74b9873_sbtoa(jule::U8 _161010_b);
inline void _1a74b9b5e_cstrBytes(_1e9a030bc_StrBuilder* _163019_s, jule::Str _163034_ctx);
inline void _1a74b9e8e_cstrLit(_1e9a030bc_StrBuilder* _163617_s, jule::Str _163632_ctx);
inline void _1a74ba335_ftoa(_1e9a030bc_StrBuilder* _164214_s, jule::F64 _164229_f, jule::I64 _164237_bitsize);
inline void _1a74ba621_itoa(_1e9a030bc_StrBuilder* _166014_s, jule::I64 _166029_x);
inline void _1a74ba90c_utoa(_1e9a030bc_StrBuilder* _167714_s, jule::U64 _167729_x);
inline jule::Slice<jule::U8> _1a7589305_concatAllParts(jule::Slice<jule::Ptr<_1c80b653c_Token>> _135719_parts);
inline jule::Bool _1a7589613_isHeadDecl(jule::Ptr<_1a5a09cc7_Fn>* _137320_m);
inline jule::Bool _1a75984bd_shouldInitialized(jule::Ptr<_1a5b50d52_TypeKind>* _46427_t);
inline void _1d1d36c54_printErrorMessage(jule::Str _3022_msg);
inline void _1d1d36ec9_help(jule::Slice<jule::Str>* _3510_args);
inline void _1d1d3720a_version(jule::Slice<jule::Str>* _6313_args);
inline void _1d1d37419_toolDistos(void);
inline void _1d1d3757e_toolDistarch(void);
inline void _1d1d3777c_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1d1d379ad_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1d1d37cee_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1d1d38041_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1d1d381d9_showInfo(void);
void entry_point(void);
inline void _1d1d38c12_enableVtp(void);
inline void _1d1d38dcc_init(void);
inline void _1a6695423_init(void);
inline jule::Ptr<_214672d32_File> _1a66956dc_openOutput(jule::Str* _4316_path);
inline void _1a6695885_clearObjects(void);
inline void _1a6695b93_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd);
inline jule::Bool _1a6695e5c_isCppSourceFile(jule::Str _9920_path);
inline void _1a669618d_pushCompCmdClang(_1e9a030bc_StrBuilder* _10726_cmd);
inline void _1a66963be_pushCompCmdGcc(_1e9a030bc_StrBuilder* _13324_cmd);
inline __jule_tuple_str__jule_tuple_str _1a6696853_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a68b0055_IR>* _15936_ir);
inline jule::Str _1a66969da_getCompilePath(void);
inline void _1a6696c1b_applyTargetIndependentOptimizations(jule::Ptr<_1a68b0055_IR>* _20545_ir);
inline void _1a6696db4_checkCompilerFlag(void);
inline void _1a66970c3_checkTargetArch(jule::Str _22720_arch);
inline void _1a6697304_checkTargetOs(jule::Str _23518_os);
inline void _1a6697535_checkTargetFlag(jule::Str* _24321_target);
inline void _1a6697766_checkOptFlag(jule::Str* _26618_opt);
inline void _1a6697b2e_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a6697ce9_checkFlags(jule::Slice<jule::Str>* _29216_args);
inline void _1a6698008_setupSemaFlags(jule::I64* _33724_flags);
inline jule::Ptr<_1a68b0055_IR> _1a66982c2_buildIr(jule::Slice<jule::Str>* _34313_args);
inline void _1a6698503_compileCommand(jule::Slice<jule::Str>* _38324_args);


struct _1a5a24ece_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a5a246c6_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5ab1ee4_Var>* _2426_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2443_keyB);
	void(*_1a5a24ae4_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a5ab1ee4_Var>* _2533_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2550_keyB);
	jule::I64(*_1a5a24d7a_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1a5a6adc1_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1a5a69ba0_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1a5a69e36_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a5a6a277_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_1a5a6dcd6_ImportInfo>(*_1a5a6a5b8_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log(*_1a5a6a9b4_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod);
	void(*_1a5a6ac6c_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5a6dcd6_ImportInfo> _4128__0);
};

struct _1a5b5089b_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a5b50406_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1a5b50747_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other);
};

struct _1a5b70943_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1a5a6dcd6_ImportInfo>(*_1a5b6dc2c_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> _929_selector);
	jule::Ptr<_1a5ab1ee4_Var>(*_1a5b6e128_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1a5b50060_TypeAlias>(*_1a5b6e524_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1a59e4d06_Struct>(*_1a5b6e920_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1a5a09cc7_Fn>(*_1a5b6ed1b_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1a5a1d181_Trait>(*_1a5b7015c_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1a5a2088c_Enum>(*_1a5b7049d_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1a5a22097_TypeEnum>(*_1a5b707de_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1a668d086_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1a665bc03_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1a665be34_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1a668cc34_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1a668ce32_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a27883_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a2ab3e_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a2d5d1_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a31d65_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a3342c_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a3d888_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a68ac5c4_JuleImporter>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59e7a84_StructIns>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a0cca8_FnIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a1d181_Trait>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a2088c_Enum>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a22097_TypeEnum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a251ee_comptimeRange>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a25bc2_comptimeStructField>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a28e7d_comptimeStatic>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a2c239_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a2ebcb_comptimeParam>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a34a27_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a3b039_comptimeValue>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a3ee83_comptimeFile>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5b50d52_TypeKind>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5b5892b_Prim>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5b5c457_Sptr>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5b5ce2a_Slc>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5b5da1e_Tuple>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5b5e5be_Map>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5b6024b_Arr>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5b60c1e_Ptr>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a758aa98_customType>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a5420b_scopeChecker>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a6dcd6_ImportInfo>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a71c0c_Package>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a8e17a_Sema>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5b14783_SymbolTable>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aac5ee4a_Flag>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aac639ed_Flag>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aac67161_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aac6a818_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aac6de7b_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5ab1ee4_Var>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59e0ad2_Impl>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59da989_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59dec35_StructDecl>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d5b2c_FnDecl>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59e0472_TraitDecl>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d6cd7_VarDecl>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59dd0da_EnumDecl>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59de075_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b916c16d_Const>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a4e5e1_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a4bc4d_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a05762_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5b19aeb_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a06a71_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a044db_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a02a28_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a02e02_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a036a5_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a03b5b_BuiltinAssertCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a05388_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a04eae_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a06d6d_FreeExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ede64_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a4c886_Conditional>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a4cb83_InfIter>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d825b_WhileKind>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a4d139_WhileIter>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d8b63_RangeKind>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a4da85_RangeIter>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a4de1a_ContSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a4e9ba_GotoSt>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a4ed94_Postfix>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a5034a_Assign>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ee7e4_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a50801_MultiAssign>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a50e61_Match>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a52182_FallSt>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a4e2e4_BreakSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a52528_RetSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d3e8d_ScopeTree>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c82a1_Expr>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59da24c_Conditional>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d7931_Iter>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d9416_ContSt>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d1551_LabelSt>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d192a_GotoSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d291a_AssignSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59db759_MatchCase>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d1c27_FallSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d903c_BreakSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d71b1_RetSt>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c8b75_UseExpr>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a09cc7_Fn>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59e4d06_Struct>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5b50060_TypeAlias>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c6238_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c539c_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c5996_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c5017_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c6986_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c5699_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c4577_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ca737_VariadicExpr>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ee33d_SliceExprModel>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59cc9c0_FieldExprPair>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ce0cb_KeyValPair>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c9abb_IdentExpr>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c8d95_TupleExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a0264e_TupleExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59cbeca_FnCallExpr>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a0639a_RuneExprModel>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a02352_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59cb3b4_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c4841_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ca35d_UnaryExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c3e6c_TypeDecl>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59caeda_NsSelectionExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c4c1a_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a00bad_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ed5b2_CastingExprModel>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ce807_SliceExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ecc32_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a01e78_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a01241_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a01ad2_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a0062a_MapExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59eec9a_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c856a_RangeExpr>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c923b_LitExpr>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59c9615_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d0264_IndexingExpr>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59d08c4_SlicingExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59cab11_CastExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59cd2ea_StructLit>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59cd7a1_BraceLit>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59cb86a_BinaryExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ec35d_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ebe84_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ed02e_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a032cb_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a04112_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a047d8_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a04ad5_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a05e16_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a06103_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5a06697_IntegratedToStrExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c7998c88_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c799b670_StrRuneIter>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c799a361_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c799adbc_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c799b296_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c799910c_SwapExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c79994d6_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c7999ccd_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c799a65d_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c799b96c_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c799985a_RefExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a59ec88b_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c799bc69_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c799a9e3_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1a87813a8_1a8737b23(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5ab1ee4_Var>* _2426_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2443_keyB) {
	_1a5a284bb_ready(_self_.as<_1a5a27883_comptimeStructFields>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1a87813a8_1a87508d8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5ab1ee4_Var>* _2426_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2443_keyB) {
	_1a5a2b777_ready(_self_.as<_1a5a2ab3e_comptimeStatics>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1a87813a8_1a873e069(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5ab1ee4_Var>* _2426_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2443_keyB) {
	_1a5a2e219_ready(_self_.as<_1a5a2d5d1_comptimeEnumFields>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1a87813a8_1a874439e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5ab1ee4_Var>* _2426_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2443_keyB) {
	_1a5a3296a_ready(_self_.as<_1a5a31d65_comptimeParams>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1a87813a8_1a874c7a3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5ab1ee4_Var>* _2426_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2443_keyB) {
	_1a5a34065_ready(_self_.as<_1a5a3342c_comptimeTypeInfos>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1a87813a8_1a8760893(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5ab1ee4_Var>* _2426_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2443_keyB) {
	_1a5a3e4c1_ready(_self_.as<_1a5a3d888_comptimeFiles>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1a87819e6_1a8737b23(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a5ab1ee4_Var>* _2533_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2550_keyB) {
	_1a5a288d9_step(_self_.as<_1a5a27883_comptimeStructFields>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1a87819e6_1a87508d8(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a5ab1ee4_Var>* _2533_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2550_keyB) {
	_1a5a2bb95_step(_self_.as<_1a5a2ab3e_comptimeStatics>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1a87819e6_1a873e069(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a5ab1ee4_Var>* _2533_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2550_keyB) {
	_1a5a2e637_step(_self_.as<_1a5a2d5d1_comptimeEnumFields>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1a87819e6_1a874439e(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a5ab1ee4_Var>* _2533_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2550_keyB) {
	_1a5a32d88_step(_self_.as<_1a5a31d65_comptimeParams>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1a87819e6_1a874c7a3(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a5ab1ee4_Var>* _2533_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2550_keyB) {
	_1a5a34483_step(_self_.as<_1a5a3342c_comptimeTypeInfos>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1a87819e6_1a8760893(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1a5ab1ee4_Var>* _2533_keyA, jule::Ptr<_1a5ab1ee4_Var>* _2550_keyB) {
	_1a5a3e8de_step(_self_.as<_1a5a3d888_comptimeFiles>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline jule::I64 __jule_trait_method_1a8782233_1a8737b23(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a28b70_len(_self_.as<_1a5a27883_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1a8782233_1a87508d8(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a2be2b_len(_self_.as<_1a5a2ab3e_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1a8782233_1a873e069(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a2e8bd_len(_self_.as<_1a5a2d5d1_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1a8782233_1a874439e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a3311e_len(_self_.as<_1a5a31d65_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1a8782233_1a874c7a3(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a34719_len(_self_.as<_1a5a3342c_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1a8782233_1a8760893(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a3eb75_len(_self_.as<_1a5a3d888_comptimeFiles>().alloc);
}
inline void __jule_trait_method_1a87826a6_1aa2bb067(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1a68ad196_SetModPath(_self_.as<_1a68ac5c4_JuleImporter>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1a8782b5c_1aa2bb067(jule::Ptr<jule::Uintptr> _self_) {
	return _1a68ad42c_GetModPath(_self_.as<_1a68ac5c4_JuleImporter>().alloc);
}
inline jule::Str __jule_trait_method_1a87830be_1aa2bb067(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _1a68ad76d_ModById(_self_.as<_1a68ac5c4_JuleImporter>().alloc, _2519_id);
}
inline jule::Ptr<_1a5a6dcd6_ImportInfo> __jule_trait_method_1a87835db_1aa2bb067(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1a68adaae_GetImport(_self_.as<_1a68ac5c4_JuleImporter>().alloc, _3125_path);
}
inline __jule_tuple_sx_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log __jule_trait_method_1a8783b4c_1aa2bb067(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod) {
	return _1a68adeaa_ImportPackage(_self_.as<_1a68ac5c4_JuleImporter>().alloc, _3729_path, _3740_update_mod);
}
inline void __jule_trait_method_1a8784587_1aa2bb067(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5a6dcd6_ImportInfo> _4128__0) {
	_1a68ae263_Imported(_self_.as<_1a68ac5c4_JuleImporter>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a88aa625(jule::Ptr<jule::Uintptr> _self_) {
	return _1a59e7e08_Str(_self_.as<_1a59e7a84_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a88a9ab9(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a0d0e9_Str(_self_.as<_1a5a0cca8_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a88c241c(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a1d549_Str(_self_.as<_1a5a1d181_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a889bdca(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a20c11_Str(_self_.as<_1a5a2088c_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a88a3d27(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a223d8_Str(_self_.as<_1a5a22097_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a874b10e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a25573_Str(_self_.as<_1a5a251ee_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a873a75d(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a2608a_Str(_self_.as<_1a5a25bc2_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a8737b23(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a27c07_Str(_self_.as<_1a5a27883_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a8753523(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a29302_Str(_self_.as<_1a5a28e7d_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a87508d8(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a2aeb3_Str(_self_.as<_1a5a2ab3e_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a8741bc6(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a2c6bd_Str(_self_.as<_1a5a2c239_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a873e069(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a2d955_Str(_self_.as<_1a5a2d5d1_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a8746ed9(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a30050_Str(_self_.as<_1a5a2ebcb_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a874439e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a321a6_Str(_self_.as<_1a5a31d65_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a874c7a3(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a337a1_Str(_self_.as<_1a5a3342c_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a88d41a9(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a34d9b_Str(_self_.as<_1a5a34a27_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a8756d2e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a3b3ad_Str(_self_.as<_1a5a3b039_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a8760893(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a3dc0c_Str(_self_.as<_1a5a3d888_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a875c087(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5a40538_Str(_self_.as<_1a5a3ee83_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a8b7b1ba(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5b5121a_Str(_self_.as<_1a5b50d52_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a8b808d9(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5b58c6c_Str(_self_.as<_1a5b5892b_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a8b87072(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5b5c7cb_Str(_self_.as<_1a5b5c457_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a88a828d(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5b5d3ae_Str(_self_.as<_1a5b5ce2a_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a8bd928e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5b5dd93_Str(_self_.as<_1a5b5da1e_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a8bd7754(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5b5e943_Str(_self_.as<_1a5b5e5be_Map>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a88a68a7(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5b605c0_Str(_self_.as<_1a5b6024b_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1a889a1a3(jule::Ptr<jule::Uintptr> _self_) {
	return _1a5b61093_Str(_self_.as<_1a5b60c1e_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1a8784ac6_1aa6bce19(jule::Ptr<jule::Uintptr> _self_) {
	return _1a758ae61_Str(_self_.as<_1a758aa98_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1a878507c_1a88aa625(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a59e8249_Equal(_self_.as<_1a59e7a84_StructIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a88a9ab9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a0d43a_Equal(_self_.as<_1a5a0cca8_FnIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a88c241c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a1d88a_Equal(_self_.as<_1a5a1d181_Trait>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a889bdca(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a21052_Equal(_self_.as<_1a5a2088c_Enum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a88a3d27(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a22729_Equal(_self_.as<_1a5a22097_TypeEnum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a874b10e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a258b4_Equal(_self_.as<_1a5a251ee_comptimeRange>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a873a75d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a263cb_Equal(_self_.as<_1a5a25bc2_comptimeStructField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a8737b23(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a28048_Equal(_self_.as<_1a5a27883_comptimeStructFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a8753523(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a29643_Equal(_self_.as<_1a5a28e7d_comptimeStatic>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a87508d8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a2b304_Equal(_self_.as<_1a5a2ab3e_comptimeStatics>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a8741bc6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a2ca0e_Equal(_self_.as<_1a5a2c239_comptimeEnumField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a873e069(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a2dc96_Equal(_self_.as<_1a5a2d5d1_comptimeEnumFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a8746ed9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a30391_Equal(_self_.as<_1a5a2ebcb_comptimeParam>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a874439e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a324e7_Equal(_self_.as<_1a5a31d65_comptimeParams>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a874c7a3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a33ae2_Equal(_self_.as<_1a5a3342c_comptimeTypeInfos>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a88d41a9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a351dc_Equal(_self_.as<_1a5a34a27_comptimeTypeInfo>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a8756d2e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a3b6ee_Equal(_self_.as<_1a5a3b039_comptimeValue>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a8760893(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a3e04d_Equal(_self_.as<_1a5a3d888_comptimeFiles>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a875c087(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5a40879_Equal(_self_.as<_1a5a3ee83_comptimeFile>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a8b7b1ba(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5b5155b_Equal(_self_.as<_1a5b50d52_TypeKind>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a8b808d9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5b590ad_Equal(_self_.as<_1a5b5892b_Prim>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a8b87072(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5b5cb1c_Equal(_self_.as<_1a5b5c457_Sptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a88a828d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5b5d700_Equal(_self_.as<_1a5b5ce2a_Slc>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a8bd928e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5b5e1d4_Equal(_self_.as<_1a5b5da1e_Tuple>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a8bd7754(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5b5ec84_Equal(_self_.as<_1a5b5e5be_Map>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a88a68a7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5b60911_Equal(_self_.as<_1a5b6024b_Arr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1a889a1a3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a5b613d4_Equal(_self_.as<_1a5b60c1e_Ptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1a878507c_1aa6bce19(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _5618_other) {
	return _1a758b2a2_Equal(_self_.as<_1a758aa98_customType>(), _5618_other);
}
inline jule::Ptr<_1a5a6dcd6_ImportInfo> __jule_trait_method_1a8785643_1a86e2b00(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> _929_selector) {
	return _1a5a546a1_SelectPackage(_self_.as<_1a5a5420b_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1a5a6dcd6_ImportInfo> __jule_trait_method_1a8785643_1a88adcaa(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> _929_selector) {
	return _1a5a6e2c0_SelectPackage(_self_.as<_1a5a6dcd6_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1a5a6dcd6_ImportInfo> __jule_trait_method_1a8785643_1a88aedaa(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> _929_selector) {
	return _1a5a721a2_SelectPackage(_self_.as<_1a5a71c0c_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1a5a6dcd6_ImportInfo> __jule_trait_method_1a8785643_1a88abc86(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> _929_selector) {
	return _1a5a8e620_SelectPackage(_self_.as<_1a5a8e17a_Sema>().alloc, _929_selector);
}
inline jule::Ptr<_1a5a6dcd6_ImportInfo> __jule_trait_method_1a8785643_1a88ac748(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> _929_selector) {
	return _1a5b14c6c_SelectPackage(_self_.as<_1a5b14783_SymbolTable>().alloc, _929_selector);
}
inline jule::Ptr<_1a5ab1ee4_Var> __jule_trait_method_1a87864ce_1a86e2b00(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a5a54a9c_FindVar(_self_.as<_1a5a5420b_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a5ab1ee4_Var> __jule_trait_method_1a87864ce_1a88adcaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a5a6e6bb_FindVar(_self_.as<_1a5a6dcd6_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a5ab1ee4_Var> __jule_trait_method_1a87864ce_1a88aedaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a5a7259d_FindVar(_self_.as<_1a5a71c0c_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a5ab1ee4_Var> __jule_trait_method_1a87864ce_1a88abc86(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a5a8ea1b_FindVar(_self_.as<_1a5a8e17a_Sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a5ab1ee4_Var> __jule_trait_method_1a87864ce_1a88ac748(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1a5b15168_FindVar(_self_.as<_1a5b14783_SymbolTable>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1a5b50060_TypeAlias> __jule_trait_method_1a8786b0b_1a86e2b00(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a5a54e98_FindTypeAlias(_self_.as<_1a5a5420b_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a5b50060_TypeAlias> __jule_trait_method_1a8786b0b_1a88adcaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a5a6eab7_FindTypeAlias(_self_.as<_1a5a6dcd6_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a5b50060_TypeAlias> __jule_trait_method_1a8786b0b_1a88aedaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a5a72999_FindTypeAlias(_self_.as<_1a5a71c0c_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a5b50060_TypeAlias> __jule_trait_method_1a8786b0b_1a88abc86(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a5a8ee17_FindTypeAlias(_self_.as<_1a5a8e17a_Sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a5b50060_TypeAlias> __jule_trait_method_1a8786b0b_1a88ac748(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1a5b15564_FindTypeAlias(_self_.as<_1a5b14783_SymbolTable>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1a59e4d06_Struct> __jule_trait_method_1a878726b_1a86e2b00(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a5a55394_FindStruct(_self_.as<_1a5a5420b_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a59e4d06_Struct> __jule_trait_method_1a878726b_1a88adcaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a5a6eeb3_FindStruct(_self_.as<_1a5a6dcd6_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a59e4d06_Struct> __jule_trait_method_1a878726b_1a88aedaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a5a72d95_FindStruct(_self_.as<_1a5a71c0c_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a59e4d06_Struct> __jule_trait_method_1a878726b_1a88abc86(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a5a90313_FindStruct(_self_.as<_1a5a8e17a_Sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a59e4d06_Struct> __jule_trait_method_1a878726b_1a88ac748(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1a5b15960_FindStruct(_self_.as<_1a5b14783_SymbolTable>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1a5a09cc7_Fn> __jule_trait_method_1a87878cb_1a86e2b00(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a5a55790_FindFn(_self_.as<_1a5a5420b_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a5a09cc7_Fn> __jule_trait_method_1a87878cb_1a88adcaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a5a703ae_FindFn(_self_.as<_1a5a6dcd6_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a5a09cc7_Fn> __jule_trait_method_1a87878cb_1a88aedaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a5a73291_FindFn(_self_.as<_1a5a71c0c_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a5a09cc7_Fn> __jule_trait_method_1a87878cb_1a88abc86(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a5a9070e_FindFn(_self_.as<_1a5a8e17a_Sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a5a09cc7_Fn> __jule_trait_method_1a87878cb_1a88ac748(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1a5b15d5b_FindFn(_self_.as<_1a5b14783_SymbolTable>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1a5a1d181_Trait> __jule_trait_method_1a878803b_1a86e2b00(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a5a55ad1_FindTrait(_self_.as<_1a5a5420b_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1a5a1d181_Trait> __jule_trait_method_1a878803b_1a88adcaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a5a70700_FindTrait(_self_.as<_1a5a6dcd6_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1a5a1d181_Trait> __jule_trait_method_1a878803b_1a88aedaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a5a735d2_FindTrait(_self_.as<_1a5a71c0c_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1a5a1d181_Trait> __jule_trait_method_1a878803b_1a88abc86(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a5a90a50_FindTrait(_self_.as<_1a5a8e17a_Sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1a5a1d181_Trait> __jule_trait_method_1a878803b_1a88ac748(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1a5b1619c_FindTrait(_self_.as<_1a5b14783_SymbolTable>().alloc, _2925_ident);
}
inline jule::Ptr<_1a5a2088c_Enum> __jule_trait_method_1a87885e1_1a86e2b00(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a5a55e22_FindEnum(_self_.as<_1a5a5420b_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1a5a2088c_Enum> __jule_trait_method_1a87885e1_1a88adcaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a5a70a41_FindEnum(_self_.as<_1a5a6dcd6_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1a5a2088c_Enum> __jule_trait_method_1a87885e1_1a88aedaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a5a73923_FindEnum(_self_.as<_1a5a71c0c_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1a5a2088c_Enum> __jule_trait_method_1a87885e1_1a88abc86(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a5a90d91_FindEnum(_self_.as<_1a5a8e17a_Sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1a5a2088c_Enum> __jule_trait_method_1a87885e1_1a88ac748(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1a5b164dd_FindEnum(_self_.as<_1a5b14783_SymbolTable>().alloc, _3324_ident);
}
inline jule::Ptr<_1a5a22097_TypeEnum> __jule_trait_method_1a8788b96_1a86e2b00(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a5a56263_FindTypeEnum(_self_.as<_1a5a5420b_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1a5a22097_TypeEnum> __jule_trait_method_1a8788b96_1a88adcaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a5a70d82_FindTypeEnum(_self_.as<_1a5a6dcd6_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1a5a22097_TypeEnum> __jule_trait_method_1a8788b96_1a88aedaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a5a73c64_FindTypeEnum(_self_.as<_1a5a71c0c_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1a5a22097_TypeEnum> __jule_trait_method_1a8788b96_1a88abc86(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a5a911d2_FindTypeEnum(_self_.as<_1a5a8e17a_Sema>().alloc, _3728_ident);
}
inline jule::Ptr<_1a5a22097_TypeEnum> __jule_trait_method_1a8788b96_1a88ac748(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1a5b1682e_FindTypeEnum(_self_.as<_1a5b14783_SymbolTable>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1aac70d90_1aac5ee4a(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac60368_Name(_self_.as<_1aac5ee4a_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aac70d90_1aac639ed(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac63679_Name(_self_.as<_1aac639ed_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aac70d90_1aac67161(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac66cdc_Name(_self_.as<_1aac67161_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aac70d90_1aac6a818(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac6a494_Name(_self_.as<_1aac6a818_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aac70d90_1aac6de7b(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac6db07_Name(_self_.as<_1aac6de7b_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aac725de_1aac5ee4a(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac60775_Short(_self_.as<_1aac5ee4a_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aac725de_1aac639ed(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac64070_Short(_self_.as<_1aac639ed_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aac725de_1aac67161(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac676d3_Short(_self_.as<_1aac67161_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aac725de_1aac6a818(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac6ad8a_Short(_self_.as<_1aac6a818_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1aac725de_1aac6de7b(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac6e4ed_Short(_self_.as<_1aac6de7b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aac729eb_1aac5ee4a(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac604bc_What(_self_.as<_1aac5ee4a_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aac729eb_1aac639ed(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac63cd9_What(_self_.as<_1aac639ed_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aac729eb_1aac67161(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac6744c_What(_self_.as<_1aac67161_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aac729eb_1aac6a818(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac6ab04_What(_self_.as<_1aac6a818_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1aac729eb_1aac6de7b(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac6e267_What(_self_.as<_1aac6de7b_Flag>().alloc);
}
inline void __jule_trait_method_1aac72e4c_1aac5ee4a(jule::Ptr<jule::Uintptr> _self_) {
	_1aac60621_Reset(_self_.as<_1aac5ee4a_Flag>().alloc);
}
inline void __jule_trait_method_1aac72e4c_1aac639ed(jule::Ptr<jule::Uintptr> _self_) {
	_1aac63e2c_Reset(_self_.as<_1aac639ed_Flag>().alloc);
}
inline void __jule_trait_method_1aac72e4c_1aac67161(jule::Ptr<jule::Uintptr> _self_) {
	_1aac67590_Reset(_self_.as<_1aac67161_Flag>().alloc);
}
inline void __jule_trait_method_1aac72e4c_1aac6a818(jule::Ptr<jule::Uintptr> _self_) {
	_1aac6ac47_Reset(_self_.as<_1aac6a818_Flag>().alloc);
}
inline void __jule_trait_method_1aac72e4c_1aac6de7b(jule::Ptr<jule::Uintptr> _self_) {
	_1aac6e3aa_Reset(_self_.as<_1aac6de7b_Flag>().alloc);
}


static _1a5a24ece_comptimeRangeKindMptrData _1a5a24ece_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1a5a246c6_ready=__jule_trait_method_1a87813a8_1a8737b23,
	._1a5a24ae4_step=__jule_trait_method_1a87819e6_1a8737b23,
	._1a5a24d7a_len=__jule_trait_method_1a8782233_1a8737b23,
};
static _1a5a24ece_comptimeRangeKindMptrData _1a5a24ece_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1a5a246c6_ready=__jule_trait_method_1a87813a8_1a87508d8,
	._1a5a24ae4_step=__jule_trait_method_1a87819e6_1a87508d8,
	._1a5a24d7a_len=__jule_trait_method_1a8782233_1a87508d8,
};
static _1a5a24ece_comptimeRangeKindMptrData _1a5a24ece_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1a5a246c6_ready=__jule_trait_method_1a87813a8_1a873e069,
	._1a5a24ae4_step=__jule_trait_method_1a87819e6_1a873e069,
	._1a5a24d7a_len=__jule_trait_method_1a8782233_1a873e069,
};
static _1a5a24ece_comptimeRangeKindMptrData _1a5a24ece_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1a5a246c6_ready=__jule_trait_method_1a87813a8_1a874439e,
	._1a5a24ae4_step=__jule_trait_method_1a87819e6_1a874439e,
	._1a5a24d7a_len=__jule_trait_method_1a8782233_1a874439e,
};
static _1a5a24ece_comptimeRangeKindMptrData _1a5a24ece_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1a5a246c6_ready=__jule_trait_method_1a87813a8_1a874c7a3,
	._1a5a24ae4_step=__jule_trait_method_1a87819e6_1a874c7a3,
	._1a5a24d7a_len=__jule_trait_method_1a8782233_1a874c7a3,
};
static _1a5a24ece_comptimeRangeKindMptrData _1a5a24ece_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1a5a246c6_ready=__jule_trait_method_1a87813a8_1a8760893,
	._1a5a24ae4_step=__jule_trait_method_1a87819e6_1a8760893,
	._1a5a24d7a_len=__jule_trait_method_1a8782233_1a8760893,
};
static _1a5a6adc1_ImporterMptrData _1a5a6adc1_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator6,
	._1a5a69ba0_SetModPath=__jule_trait_method_1a87826a6_1aa2bb067,
	._1a5a69e36_GetModPath=__jule_trait_method_1a8782b5c_1aa2bb067,
	._1a5a6a277_ModById=__jule_trait_method_1a87830be_1aa2bb067,
	._1a5a6a5b8_GetImport=__jule_trait_method_1a87835db_1aa2bb067,
	._1a5a6a9b4_ImportPackage=__jule_trait_method_1a8783b4c_1aa2bb067,
	._1a5a6ac6c_Imported=__jule_trait_method_1a8784587_1aa2bb067,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a88aa625,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a88aa625,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator8,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a88a9ab9,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a88a9ab9,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator9,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a88c241c,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a88c241c,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator10,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a889bdca,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a889bdca,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator11,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a88a3d27,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a88a3d27,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator12,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a874b10e,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a874b10e,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator13,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a873a75d,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a873a75d,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a8737b23,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a8737b23,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator14,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a8753523,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a8753523,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a87508d8,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a87508d8,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator15,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a8741bc6,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a8741bc6,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a873e069,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a873e069,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator16,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a8746ed9,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a8746ed9,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a874439e,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a874439e,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a874c7a3,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a874c7a3,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator17,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a88d41a9,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a88d41a9,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator18,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a8756d2e,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a8756d2e,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a8760893,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a8760893,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator19,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a875c087,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a875c087,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator20,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a8b7b1ba,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a8b7b1ba,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a8b808d9,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a8b808d9,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a8b87072,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a8b87072,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a88a828d,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a88a828d,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a8bd928e,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a8bd928e,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a8bd7754,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a8bd7754,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a88a68a7,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a88a68a7,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1a889a1a3,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1a889a1a3,
};
static _1a5b5089b_KindMptrData _1a5b5089b_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1a5b50406_Str=__jule_trait_method_1a8784ac6_1aa6bce19,
	._1a5b50747_Equal=__jule_trait_method_1a878507c_1aa6bce19,
};
static _1a5b70943_LookupMptrData _1a5b70943_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator29,
	._1a5b6dc2c_SelectPackage=__jule_trait_method_1a8785643_1a86e2b00,
	._1a5b6e128_FindVar=__jule_trait_method_1a87864ce_1a86e2b00,
	._1a5b6e524_FindTypeAlias=__jule_trait_method_1a8786b0b_1a86e2b00,
	._1a5b6e920_FindStruct=__jule_trait_method_1a878726b_1a86e2b00,
	._1a5b6ed1b_FindFn=__jule_trait_method_1a87878cb_1a86e2b00,
	._1a5b7015c_FindTrait=__jule_trait_method_1a878803b_1a86e2b00,
	._1a5b7049d_FindEnum=__jule_trait_method_1a87885e1_1a86e2b00,
	._1a5b707de_FindTypeEnum=__jule_trait_method_1a8788b96_1a86e2b00,
};
static _1a5b70943_LookupMptrData _1a5b70943_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator30,
	._1a5b6dc2c_SelectPackage=__jule_trait_method_1a8785643_1a88adcaa,
	._1a5b6e128_FindVar=__jule_trait_method_1a87864ce_1a88adcaa,
	._1a5b6e524_FindTypeAlias=__jule_trait_method_1a8786b0b_1a88adcaa,
	._1a5b6e920_FindStruct=__jule_trait_method_1a878726b_1a88adcaa,
	._1a5b6ed1b_FindFn=__jule_trait_method_1a87878cb_1a88adcaa,
	._1a5b7015c_FindTrait=__jule_trait_method_1a878803b_1a88adcaa,
	._1a5b7049d_FindEnum=__jule_trait_method_1a87885e1_1a88adcaa,
	._1a5b707de_FindTypeEnum=__jule_trait_method_1a8788b96_1a88adcaa,
};
static _1a5b70943_LookupMptrData _1a5b70943_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator31,
	._1a5b6dc2c_SelectPackage=__jule_trait_method_1a8785643_1a88aedaa,
	._1a5b6e128_FindVar=__jule_trait_method_1a87864ce_1a88aedaa,
	._1a5b6e524_FindTypeAlias=__jule_trait_method_1a8786b0b_1a88aedaa,
	._1a5b6e920_FindStruct=__jule_trait_method_1a878726b_1a88aedaa,
	._1a5b6ed1b_FindFn=__jule_trait_method_1a87878cb_1a88aedaa,
	._1a5b7015c_FindTrait=__jule_trait_method_1a878803b_1a88aedaa,
	._1a5b7049d_FindEnum=__jule_trait_method_1a87885e1_1a88aedaa,
	._1a5b707de_FindTypeEnum=__jule_trait_method_1a8788b96_1a88aedaa,
};
static _1a5b70943_LookupMptrData _1a5b70943_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator32,
	._1a5b6dc2c_SelectPackage=__jule_trait_method_1a8785643_1a88abc86,
	._1a5b6e128_FindVar=__jule_trait_method_1a87864ce_1a88abc86,
	._1a5b6e524_FindTypeAlias=__jule_trait_method_1a8786b0b_1a88abc86,
	._1a5b6e920_FindStruct=__jule_trait_method_1a878726b_1a88abc86,
	._1a5b6ed1b_FindFn=__jule_trait_method_1a87878cb_1a88abc86,
	._1a5b7015c_FindTrait=__jule_trait_method_1a878803b_1a88abc86,
	._1a5b7049d_FindEnum=__jule_trait_method_1a87885e1_1a88abc86,
	._1a5b707de_FindTypeEnum=__jule_trait_method_1a8788b96_1a88abc86,
};
static _1a5b70943_LookupMptrData _1a5b70943_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator33,
	._1a5b6dc2c_SelectPackage=__jule_trait_method_1a8785643_1a88ac748,
	._1a5b6e128_FindVar=__jule_trait_method_1a87864ce_1a88ac748,
	._1a5b6e524_FindTypeAlias=__jule_trait_method_1a8786b0b_1a88ac748,
	._1a5b6e920_FindStruct=__jule_trait_method_1a878726b_1a88ac748,
	._1a5b6ed1b_FindFn=__jule_trait_method_1a87878cb_1a88ac748,
	._1a5b7015c_FindTrait=__jule_trait_method_1a878803b_1a88ac748,
	._1a5b7049d_FindEnum=__jule_trait_method_1a87885e1_1a88ac748,
	._1a5b707de_FindTypeEnum=__jule_trait_method_1a8788b96_1a88ac748,
};
static _1a668d086_CommonFlagMptrData _1a668d086_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator34,
	._1a665bc03_Name=__jule_trait_method_1aac70d90_1aac5ee4a,
	._1a665be34_Short=__jule_trait_method_1aac725de_1aac5ee4a,
	._1a668cc34_What=__jule_trait_method_1aac729eb_1aac5ee4a,
	._1a668ce32_Reset=__jule_trait_method_1aac72e4c_1aac5ee4a,
};
static _1a668d086_CommonFlagMptrData _1a668d086_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator35,
	._1a665bc03_Name=__jule_trait_method_1aac70d90_1aac639ed,
	._1a665be34_Short=__jule_trait_method_1aac725de_1aac639ed,
	._1a668cc34_What=__jule_trait_method_1aac729eb_1aac639ed,
	._1a668ce32_Reset=__jule_trait_method_1aac72e4c_1aac639ed,
};
static _1a668d086_CommonFlagMptrData _1a668d086_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator36,
	._1a665bc03_Name=__jule_trait_method_1aac70d90_1aac67161,
	._1a665be34_Short=__jule_trait_method_1aac725de_1aac67161,
	._1a668cc34_What=__jule_trait_method_1aac729eb_1aac67161,
	._1a668ce32_Reset=__jule_trait_method_1aac72e4c_1aac67161,
};
static _1a668d086_CommonFlagMptrData _1a668d086_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator37,
	._1a665bc03_Name=__jule_trait_method_1aac70d90_1aac6a818,
	._1a665be34_Short=__jule_trait_method_1aac725de_1aac6a818,
	._1a668cc34_What=__jule_trait_method_1aac729eb_1aac6a818,
	._1a668ce32_Reset=__jule_trait_method_1aac72e4c_1aac6a818,
};
static _1a668d086_CommonFlagMptrData _1a668d086_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator38,
	._1a665bc03_Name=__jule_trait_method_1aac70d90_1aac6de7b,
	._1a665be34_Short=__jule_trait_method_1aac725de_1aac6de7b,
	._1a668cc34_What=__jule_trait_method_1aac729eb_1aac6de7b,
	._1a668ce32_Reset=__jule_trait_method_1aac72e4c_1aac6de7b,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator39, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator40, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator8, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1a5a0cca8_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator46, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1a5ab1ee4_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator7, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1a59e7a84_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator9, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1a5a1d181_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator47, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1a59e0ad2_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator48, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1a59da989_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator49, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1a59dec35_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator50, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1a59d5b2c_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator51, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1a59e0472_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator52, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1a59d6cd7_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator53, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1a59dd0da_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator54, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1a59de075_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator55, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1b916c16d_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator56, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1a5a4e5e1_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator57, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1a5a4bc4d_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator58, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1a5a05762_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator59, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1a5b19aeb_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator60, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1a5a06a71_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator61, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1a5a044db_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator62, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1a5a02a28_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator63, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1a5a02e02_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator64, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1a5a036a5_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator65, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1a5a03b5b_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator66, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1a5a05388_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator67, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1a5a04eae_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator68, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1a5a06d6d_FreeExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator69, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1a59ede64_FnCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator70, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1a5a4c886_Conditional> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator71, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1a5a4cb83_InfIter> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator72, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1a59d825b_WhileKind> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator73, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1a5a4d139_WhileIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator74, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1a59d8b63_RangeKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator75, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1a5a4da85_RangeIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator76, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1a5a4de1a_ContSt> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator77, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1a5a4e9ba_GotoSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator78, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1a5a4ed94_Postfix> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator79, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1a5a5034a_Assign> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator80, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1a59ee7e4_IndexingExprModel> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator81, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1a5a50801_MultiAssign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator82, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1a5a50e61_Match> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator83, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1a5a52182_FallSt> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator84, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1a5a4e2e4_BreakSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator85, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1a5a52528_RetSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator86, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1a59d3e8d_ScopeTree> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator87, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1a59c82a1_Expr> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator88, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1a59da24c_Conditional> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator89, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1a59d7931_Iter> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator90, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1a59d9416_ContSt> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator91, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1a59d1551_LabelSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator92, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1a59d192a_GotoSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator93, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1a59d291a_AssignSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator94, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1a59db759_MatchCase> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator95, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1a59d1c27_FallSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator96, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1a59d903c_BreakSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator97, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1a59d71b1_RetSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator98, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1a59c8b75_UseExpr> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator99, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1a5a09cc7_Fn> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator100, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1a59e4d06_Struct> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1a5b50060_TypeAlias> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator10, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1a5a2088c_Enum> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator11, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1a5a22097_TypeEnum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator102, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1a59c6238_ArrTypeDecl> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator103, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1a59c539c_SlcTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator104, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1a59c5996_PtrTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator105, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1a59c5017_SptrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator106, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1a59c6986_MapTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator107, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1a59c5699_TupleTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator108, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1a59c4577_IdentTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator109, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1a59ca737_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator110, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1a59ee33d_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator111, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1a59cc9c0_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator112, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1a59ce0cb_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator113, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1a59c9abb_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator114, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1a59c8d95_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator115, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1a5a0264e_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator116, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1a59cbeca_FnCallExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator117, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1a5a0639a_RuneExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator20, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1a5b50d52_TypeKind> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator118, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1a5a02352_ArrayExprModel> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator119, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1a59cb3b4_SubIdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator120, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1a59c4841_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator121, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1a59ca35d_UnaryExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator122, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1a59c3e6c_TypeDecl> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator123, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1a59caeda_NsSelectionExpr> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator124, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1a59c4c1a_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator125, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1a5a00bad_SlicingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator126, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1a59ed5b2_CastingExprModel> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator127, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1a59ce807_SliceExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator128, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1a59ecc32_StructLitExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator129, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1a5a01e78_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator130, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1a5a01241_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator131, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator132, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1a5a0062a_MapExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator133, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1a59eec9a_AnonFnExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator134, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1a59c856a_RangeExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator135, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1a59c923b_LitExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator136, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1a59c9615_UnsafeExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator137, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1a59d0264_IndexingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator138, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1a59d08c4_SlicingExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator139, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1a59cab11_CastExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator140, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1a59cd2ea_StructLit> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator141, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1a59cd7a1_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator142, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1a59cb86a_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator143, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1a59ec35d_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator144, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1a59ebe84_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator145, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1a59ed02e_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator146, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1a5a032cb_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator147, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1a5a04112_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator148, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1a5a047d8_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator149, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1a5a04ad5_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator150, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1a5a05e16_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator151, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1a5a06103_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator152, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1a5a06697_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator153, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1c7998c88_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator154, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1c799b670_StrRuneIter> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator155, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1c799a361_MutSlicingExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator156, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1c799adbc_PushToSliceExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator157, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1c799b296_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator158, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1c799910c_SwapExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator159, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1c79994d6_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator160, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1c7999ccd_StrCompExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator161, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1c799a65d_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator162, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1c799b96c_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator163, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1c799985a_RefExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator164, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1a59ec88b_StructArgExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator165, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1c799bc69_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator166, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1c799a9e3_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type133 && jule::ptr_equal(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator167, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator168, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator169, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator170, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
inline jule::Bool __jule_anon1a8e01330(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a0bc30_ParamIns> _24021_p1, jule::Ptr<_1a5a0bc30_ParamIns> _24036_p2);
struct __jule_anon_1a8e58398_ctx{
	jule::Ptr<_1a5a6dcd6_ImportInfo> *_49838_pkg;
};
static void __jule_anon_1a8e58398_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8e58398_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a8e58398(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a6dcd6_ImportInfo> _50039_spkg);
struct __jule_anon_1a7372ebd_ctx{
	jule::Ptr<_1a5a25bc2_comptimeStructField> _self_;
};
static void __jule_anon_1a7372ebd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a7372ebd_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7372ebd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _8821_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _8836_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a7374e6a_ctx{
	jule::Ptr<_1a5a25bc2_comptimeStructField> _self_;
};
static void __jule_anon_1a7374e6a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a7374e6a_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7374e6a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _9521_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _9536_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a7376dc3_ctx{
	jule::Ptr<_1a5a25bc2_comptimeStructField> _self_;
};
static void __jule_anon_1a7376dc3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a7376dc3_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7376dc3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _10221_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _10236_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a7388b93_ctx{
	jule::Ptr<_1a5a28e7d_comptimeStatic> _self_;
};
static void __jule_anon_1a7388b93_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a7388b93_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7388b93(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _21121_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _21136_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a738aaeb_ctx{
	jule::Ptr<_1a5a28e7d_comptimeStatic> _self_;
};
static void __jule_anon_1a738aaeb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a738aaeb_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a738aaeb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _21821_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _21836_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a738ca54_ctx{
	jule::Ptr<_1a5a28e7d_comptimeStatic> _self_;
};
static void __jule_anon_1a738ca54_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a738ca54_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a738ca54(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _22521_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _22536_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a7399874_ctx{
	jule::Ptr<_1a5a2c239_comptimeEnumField> _self_;
};
static void __jule_anon_1a7399874_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a7399874_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7399874(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _31321_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _31336_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a73ae3e4_ctx{
	jule::Ptr<_1a5a2ebcb_comptimeParam> _self_;
};
static void __jule_anon_1a73ae3e4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a73ae3e4_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a73ae3e4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _43521_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _43536_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a73b134c_ctx{
	jule::Ptr<_1a5a2ebcb_comptimeParam> _self_;
};
static void __jule_anon_1a73b134c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a73b134c_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a73b134c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _44221_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _44236_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a73b32a5_ctx{
	jule::Ptr<_1a5a2ebcb_comptimeParam> _self_;
};
static void __jule_anon_1a73b32a5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a73b32a5_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a73b32a5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _44921_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _44936_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a73b520d_ctx{
	jule::Ptr<_1a5a2ebcb_comptimeParam> _self_;
};
static void __jule_anon_1a73b520d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a73b520d_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a73b520d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _45621_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _45636_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a7447977_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a7447977_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a7447977_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7447977(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _99821_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _99836_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a74498d0_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a74498d0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a74498d0_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a74498d0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _100521_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _100536_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a744b838_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a744b838_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a744b838_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a744b838(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _101221_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _101236_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a744d791_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a744d791_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a744d791_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a744d791(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _101921_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _101936_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a74506e9_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a74506e9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a74506e9_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a74506e9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _102621_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _102636_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a7452652_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a7452652_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a7452652_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7452652(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _103321_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _103336_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a74545aa_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a74545aa_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a74545aa_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a74545aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _104021_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _104036_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a7456513_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a7456513_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a7456513_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7456513(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _104721_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _104736_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a74586e1_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a74586e1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a74586e1_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a74586e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _105421_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _105436_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a745a649_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a745a649_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a745a649_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a745a649(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _106121_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _106136_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a745c5a2_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a745c5a2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a745c5a2_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a745c5a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _106821_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _106836_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a745e50a_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a745e50a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a745e50a_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a745e50a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _107521_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _107536_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a7461463_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a7461463_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a7461463_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7461463(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _108221_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _108236_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a74633bb_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a74633bb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a74633bb_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a74633bb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _108921_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _108936_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a7465324_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a7465324_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a7465324_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7465324(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _109621_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _109636_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a746727c_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a746727c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a746727c_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a746727c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _110321_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _110336_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a74691d5_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a74691d5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a74691d5_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a74691d5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _111021_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _111036_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a746b13d_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a746b13d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a746b13d_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a746b13d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _111721_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _111736_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a746d096_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a746d096_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a746d096_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a746d096(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _112421_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _112436_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a746eeee_ctx{
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_;
};
static void __jule_anon_1a746eeee_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a746eeee_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a746eeee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _113121_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _113136_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a748a1e5_ctx{
	jule::Ptr<_1a5a3b039_comptimeValue> _self_;
};
static void __jule_anon_1a748a1e5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a748a1e5_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a748a1e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _124721_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _124736_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a748c14d_ctx{
	jule::Ptr<_1a5a3b039_comptimeValue> _self_;
};
static void __jule_anon_1a748c14d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a748c14d_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a748c14d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _125421_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _125436_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a748e0a6_ctx{
	jule::Ptr<_1a5a3b039_comptimeValue> _self_;
};
static void __jule_anon_1a748e0a6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a748e0a6_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a748e0a6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _126121_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _126136_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a749100e_ctx{
	jule::Ptr<_1a5a3b039_comptimeValue> _self_;
};
static void __jule_anon_1a749100e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a749100e_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a749100e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _126821_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _126836_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a7492e67_ctx{
	jule::Ptr<_1a5a3b039_comptimeValue> _self_;
};
static void __jule_anon_1a7492e67_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a7492e67_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7492e67(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _127521_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _127536_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a7494dc0_ctx{
	jule::Ptr<_1a5a3b039_comptimeValue> _self_;
};
static void __jule_anon_1a7494dc0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a7494dc0_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7494dc0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _128221_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _128236_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a90e5887_ctx{
	jule::Ptr<_1a5a3ee83_comptimeFile> _self_;
};
static void __jule_anon_1a90e5887_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a90e5887_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a90e5887(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _139621_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _139636_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a90e77e0_ctx{
	jule::Ptr<_1a5a3ee83_comptimeFile> _self_;
};
static void __jule_anon_1a90e77e0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a90e77e0_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a90e77e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _140321_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _140336_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a90e9748_ctx{
	jule::Ptr<_1a5a3ee83_comptimeFile> _self_;
};
static void __jule_anon_1a90e9748_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a90e9748_ctx>().dealloc(); }
inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a90e9748(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _141021_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _141036_fc, jule::Ptr<_1a5b19aeb_Data>* );
struct __jule_anon_1a910527b_ctx{
	jule::Ptr<_1a5a44493_constraintChecker> _self_;
};
static void __jule_anon_1a910527b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a910527b_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a910527b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a8e17a_Sema>* _6415_sema, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>* _6433_generics);
struct __jule_anon_1a93ade2a_ctx{
	jule::Ptr<_1a5a0cca8_FnIns> _110137_f;
	jule::Ptr<_1a5a8e17a_Sema> _self_;
};
static void __jule_anon_1a93ade2a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a93ade2a_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a93ade2a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a8e17a_Sema>* _110537_sema, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>* _110555_generics);
struct __jule_anon_1a8c9ba05_ctx{
	jule::Ptr<_1a59caeda_NsSelectionExpr> _182931_s;
	jule::Str _18303_path;
};
static void __jule_anon_1a8c9ba05_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a8c9ba05_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a8c9ba05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a6dcd6_ImportInfo> _183143_imp);
inline jule::Str __jule_anon1a9b86504(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _84719_def);
struct __jule_anon_1a9c17057_ctx{
	jule::Ptr<_1a59c4c1a_NamespaceTypeDecl> _151736_decl;
	jule::Str _15183_path;
};
static void __jule_anon_1a9c17057_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9c17057_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1a9c17057(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a6dcd6_ImportInfo> _151943_imp);
struct __jule_anon_1aa4304b7_ctx{
	_1a69d2ce3_exprDeadCode *_self_;
};
static void __jule_anon_1aa4304b7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa4304b7_ctx>().dealloc(); }
inline void __jule_anon_1aa4304b7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2840_expr);
struct __jule_anon_1aa5a1759_ctx{
	_1a68c75cd_exprOptimizer *_self_;
};
static void __jule_anon_1aa5a1759_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa5a1759_ctx>().dealloc(); }
inline void __jule_anon_1aa5a1759(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _55246_m);
struct __jule_anon_1aa6d676d_ctx{
	jule::Ptr<_1a6a6b3a9_scopeCoder> _self_;
	jule::Bool _1377_ref;
};
static void __jule_anon_1aa6d676d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa6d676d_ctx>().dealloc(); }
inline void __jule_anon_1aa6d676d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa6da233_ctx{
	jule::Ptr<_1a6a6b3a9_scopeCoder> _self_;
	jule::Ptr<_1a5a4da85_RangeIter> *_12936_it;
};
static void __jule_anon_1aa6da233_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa6da233_ctx>().dealloc(); }
inline void __jule_anon_1aa6da233(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa6e9709_ctx{
	jule::Ptr<_1a6a6b3a9_scopeCoder> _self_;
};
static void __jule_anon_1aa6e9709_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa6e9709_ctx>().dealloc(); }
inline void __jule_anon_1aa6e9709(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa6ebb7e_ctx{
	jule::Ptr<_1a6a6b3a9_scopeCoder> _self_;
};
static void __jule_anon_1aa6ebb7e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa6ebb7e_ctx>().dealloc(); }
inline void __jule_anon_1aa6ebb7e(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa7158ac_ctx{
	jule::Ptr<_1a6a6b3a9_scopeCoder> _self_;
};
static void __jule_anon_1aa7158ac_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa7158ac_ctx>().dealloc(); }
inline void __jule_anon_1aa7158ac(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa781043_ctx{
	jule::Ptr<_1a6a6b3a9_scopeCoder> _self_;
};
static void __jule_anon_1aa781043_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa781043_ctx>().dealloc(); }
inline void __jule_anon_1aa781043(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa782352_ctx{
	jule::Ptr<_1a6a6b3a9_scopeCoder> _self_;
	jule::Ptr<_1a5a50e61_Match> _63530_m;
};
static void __jule_anon_1aa782352_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa782352_ctx>().dealloc(); }
inline void __jule_anon_1aa782352(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aa807350_ctx{
	jule::Ptr<_1a6a6b3a9_scopeCoder> _self_;
	jule::Ptr<_1a59eec9a_AnonFnExprModel> _100534_m;
};
static void __jule_anon_1aa807350_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa807350_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1aa807350(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5ab1ee4_Var> _101167_v);
struct __jule_anon_1a9042e88_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a9042e88_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9042e88_ctx>().dealloc(); }
inline void __jule_anon_1a9042e88(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a71c0c_Package>* _82738_pkg);
struct __jule_anon_1a90444a6_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a90444a6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a90444a6_ctx>().dealloc(); }
inline void __jule_anon_1a90444a6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn>* _84036_m);
struct __jule_anon_1a9049ab6_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a9049ab6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9049ab6_ctx>().dealloc(); }
inline void __jule_anon_1a9049ab6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a71c0c_Package>* _85338_pkg);
struct __jule_anon_1a905a621_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
	jule::Ptr<_1a5ab1ee4_Var> _92024_v;
};
static void __jule_anon_1a905a621_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a905a621_ctx>().dealloc(); }
inline void __jule_anon_1a905a621(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a905c722_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
	jule::Ptr<_1a5ab1ee4_Var> _92024_v;
};
static void __jule_anon_1a905c722_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a905c722_ctx>().dealloc(); }
inline void __jule_anon_1a905c722(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a905ee3e_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a905ee3e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a905ee3e_ctx>().dealloc(); }
inline void __jule_anon_1a905ee3e(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a90610b6_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
	jule::Ptr<_1a5ab1ee4_Var> _92024_v;
};
static void __jule_anon_1a90610b6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a90610b6_ctx>().dealloc(); }
inline void __jule_anon_1a90610b6(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1a907e337_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a907e337_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a907e337_ctx>().dealloc(); }
inline void __jule_anon_1a907e337(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a71c0c_Package>* _106238_pkg);
struct __jule_anon_1a90806bd_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
	jule::Ptr<_1a59e7a84_StructIns> _107649_s;
};
static void __jule_anon_1a90806bd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a90806bd_ctx>().dealloc(); }
inline void __jule_anon_1a90806bd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn>* _107736_m);
struct __jule_anon_1a908d126_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a908d126_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a908d126_ctx>().dealloc(); }
inline void __jule_anon_1a908d126(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a71c0c_Package>* _111438_pkg);
struct __jule_anon_1a90ab1dd_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a90ab1dd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a90ab1dd_ctx>().dealloc(); }
inline void __jule_anon_1a90ab1dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a71c0c_Package>* _123938_pkg);
struct __jule_anon_1a90ac6b7_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a90ac6b7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a90ac6b7_ctx>().dealloc(); }
inline void __jule_anon_1a90ac6b7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b14783_SymbolTable>* _125531_file);
struct __jule_anon_1a90b548e_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a90b548e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a90b548e_ctx>().dealloc(); }
inline void __jule_anon_1a90b548e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a71c0c_Package>* _128438_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1aac81ea0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1aac89d65(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon1a8ea57d0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a6dcd6_ImportInfo> _143025_pkg);
struct __jule_anon_1a9043dac_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a9043dac_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9043dac_ctx>().dealloc(); }
inline void __jule_anon_1a9043dac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b14783_SymbolTable>* _82832_file);
struct __jule_anon_1a904a9b8_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a904a9b8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a904a9b8_ctx>().dealloc(); }
inline void __jule_anon_1a904a9b8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b14783_SymbolTable>* _85432_file);
struct __jule_anon_1a9080239_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a9080239_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a9080239_ctx>().dealloc(); }
inline void __jule_anon_1a9080239(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b14783_SymbolTable>* _106332_file);
struct __jule_anon_1a908e028_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a908e028_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a908e028_ctx>().dealloc(); }
inline void __jule_anon_1a908e028(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b14783_SymbolTable>* _111532_file);
struct __jule_anon_1a90ac0e0_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
};
static void __jule_anon_1a90ac0e0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a90ac0e0_ctx>().dealloc(); }
inline void __jule_anon_1a90ac0e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b14783_SymbolTable>* _124032_file);
struct __jule_anon_1a90821d6_ctx{
	jule::Ptr<_1a757b913_ObjectCoder> _self_;
	jule::Ptr<_1a5a1d181_Trait> _106417_t;
};
static void __jule_anon_1a90821d6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1a90821d6_ctx>().dealloc(); }
inline void __jule_anon_1a90821d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn>* _106839_m);
jule::Array<jule::Array<jule::Str,2>,5> _1d1d36a78_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1a6694bc5_OutDir = jule::Str::lit("dist", 4);
jule::Str _1a6694eb1_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1a6695269_Out = jule::Str();
jule::Str _2133d6eb5_Compiler = jule::Str();
jule::Str _2133d83b2_CompilerPath = jule::Str();
jule::Str _2133d85c1_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _2133d8802_Shadowing = false;
jule::Bool _2133d8aaa_Transpilation = false;
jule::Bool _2133d8d63_Test = false;
jule::Bool _2133d911b_RC = true;
jule::Bool _2133d94d4_Safety = true;
jule::Bool _2133d9726_Production = false;
jule::Uintptr _2146587da_STDIN = _2146590e3_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Uintptr _214658a82_STDOUT = _2146590e3_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _214658d7e_STDERR = _2146590e3_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<jule::U8,256> _213560b99_first = jule::Array<jule::U8,256>({});
jule::Array<_21356124e_acceptRange,16> _2135615e5_acceptRanges = jule::Array<_21356124e_acceptRange,16>({_21356124e_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_21356124e_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_21356124e_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_21356124e_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_21356124e_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_1d1b93c37_RangeTable> _1d1b31ab5__L = jule::new_ptr<_1d1b93c37_RangeTable>(_1d1b93c37_RangeTable{._field_R16=jule::Slice<_1d1b93286_Range16>::make({_1d1b93286_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1d1b93286_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1d1b93286_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1d1b93286_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1d1b93286_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1d1b93286_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1d1b93286_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1d1b93286_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1d1b93286_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1d1b93286_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1d1b93286_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1d1b93286_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1d1b93286_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1d1b93286_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1d1b93286_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1d1b93286_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1d1b93286_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1d1b93286_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1d1b93286_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1d1b93286_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1d1b93286_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1d1b93286_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1d1b93286_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1d1b93286_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1d1b93286_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1d1b93286_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1d1b93286_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1d1b93286_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1d1b93286_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1d1b93286_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1d1b93286_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1d1b93286_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1d1b93286_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1d1b93286_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1d1b93286_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1d1b93286_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1d1b93286_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1d1b93286_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1d1b93286_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1d1b93286_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1d1b93286_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1d1b93286_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1d1b93286_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1d1b93286_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1d1b93286_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1d1b93286_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1d1b93286_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1d1b93286_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1d1b93286_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1d1b93286_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1d1b93286_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1d1b93286_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1d1b93286_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1d1b93286_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1d1b93286_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1d1b93286_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1d1b93286_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1d1b93286_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1d1b93286_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1d1b93286_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1d1b937b4_Range32>::make({_1d1b937b4_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1d1b937b4_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1d1b937b4_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1d1b937b4_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1d1b937b4_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1d1b937b4_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1d1b937b4_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1d1b937b4_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1d1b937b4_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1d1b937b4_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1d1b937b4_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1d1b937b4_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1d1b937b4_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1d1b937b4_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1d1b937b4_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1d1b937b4_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1d1b937b4_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1d1b937b4_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1d1b937b4_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1d1b937b4_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1d1b937b4_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1d1b937b4_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1d1b937b4_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1d1b937b4_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1d1b937b4_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1d1b937b4_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1d1b937b4_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1d1b937b4_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1d1b937b4_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1d1b937b4_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1d1b937b4_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1d1b93c37_RangeTable> _1d1b329c8__LU = jule::new_ptr<_1d1b93c37_RangeTable>(_1d1b93c37_RangeTable{._field_R16=jule::Slice<_1d1b93286_Range16>::make({_1d1b93286_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1d1b93286_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1d1b93286_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1d1b93286_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1d1b93286_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1d1b93286_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1d1b93286_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1d1b93286_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1d1b93286_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1d1b93286_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1d1b93286_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1d1b93286_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1d1b93286_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1d1b93286_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1d1b93286_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1d1b93286_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1d1b93286_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1d1b937b4_Range32>::make({_1d1b937b4_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1d1b937b4_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1d1b937b4_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1d1b937b4_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1d1b937b4_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1d1b937b4_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1d1b937b4_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Ptr<_1d1b93c37_RangeTable> _1d1b389ac_Letter = _1d1b31ab5__L;
jule::Ptr<_1d1b93c37_RangeTable> _1d1b3ec7c_Upper = _1d1b329c8__LU;
jule::Array<jule::U8,256> _1d1b8c758__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _1d191107b_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _1d1c60573_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _1d1c5e2b9_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _1d1d32dd7_PathStdlib = jule::Str();
jule::Str _1d1d330e6_PathExec = jule::Str();
jule::Str _1d1d3338d_PathWd = jule::Str();
jule::Str _1d1d3368a_PathApi = jule::Str();
jule::Str _1d1d33943_Os = jule::Str::lit("windows", 7);
jule::Str _1d1d33beb_Arch = jule::Str::lit("arm64", 5);
jule::Array<jule::U8,32> _1b91018d8__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1b9101e7c__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1b914608c_floatInfo _1b9146488_f32info = _1b914608c_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1b914608c_floatInfo _1b9146785_f64info = _1b914608c_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1b914e260_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1b9151075_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1b9151b36_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1b9151e66_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1b91551bc_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1b9158e5c_leftCheat> _1b915938b_leftCheats = jule::Slice<_1b9158e5c_leftCheat>::make({_1b9158e5c_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1b9158e5c_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_1b9158e5c_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_1b9158e5c_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_1b9158e5c_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_1b9158e5c_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_1b9158e5c_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_1b9158e5c_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_1b9158e5c_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_1b9158e5c_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_1b9158e5c_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_1b9158e5c_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_1b9158e5c_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_1b9158e5c_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_1b9158e5c_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_1b9158e5c_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_1b9158e5c_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_1b9158e5c_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_1b9158e5c_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_1b9158e5c_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_1b9158e5c_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_1b9158e5c_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_1b9158e5c_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_1b9158e5c_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_1b9158e5c_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_1b9158e5c_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_1b9158e5c_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_1b9158e5c_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_1b9158e5c_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_1b9158e5c_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_1b9158e5c_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_1b9158e5c_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_1b9158e5c_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_1b9158e5c_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_1b9158e5c_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_1b9158e5c_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_1b9158e5c_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_1b9158e5c_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_1b9158e5c_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_1b9158e5c_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_1b9158e5c_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_1b9158e5c_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_1b9158e5c_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_1b9158e5c_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_1b9158e5c_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_1b9158e5c_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_1b9158e5c_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_1b9158e5c_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_1b9158e5c_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_1b9158e5c_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_1b9158e5c_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_1b9158e5c_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_1b9158e5c_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_1b9158e5c_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_1b9158e5c_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_1b9158e5c_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_1b9158e5c_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_1b9158e5c_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_1b9158e5c_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_1b9158e5c_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_1b9158e5c_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1b916043b_BitSize = 0LL;
jule::Str _1b9160738_SysInt = jule::Str();
jule::Str _1b91609e1_SysUint = jule::Str();
jule::Array<jule::I32,5> _1c801c53c_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1c801c75c_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1c801ca8c_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1c80b0a20_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1c80b0d0b_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1c80bde29_kindPair,28> _1c80be358_keywords = jule::Array<_1c80bde29_kindPair,28>({_1c80bde29_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1c80bde29_kindPair,46> _1c80be688_basicOps = jule::Array<_1c80bde29_kindPair,46>({_1c80bde29_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1c80bde29_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _1a5a43b57_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1a5b50d52_TypeKind> _1c798768e_primNil = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1a5b50d52_TypeKind> _1c798798b_primVoid = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c7987c44_primAny = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("any", 3)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c7988041_primStr = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("str", 3)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c79882e9_primBool = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("bool", 4)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c79885a2_primUintptr = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("uintptr", 7)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c798885a_primUint = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("uint", 4)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c7988c23_primInt = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("int", 3)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c7988e65_primI8 = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("i8", 2)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c798920c_primI16 = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("i16", 3)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c79894b5_primI32 = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("i32", 3)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c798976d_primI64 = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("i64", 3)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c7989a26_primU8 = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("u8", 2)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c7989cce_primU16 = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("u16", 3)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c798a087_primU32 = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("u32", 3)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c798a571_primU64 = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("u64", 3)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c798a7b3_primF32 = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("f32", 3)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a5b50d52_TypeKind> _1c798a9c2_primF64 = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType(jule::Str::lit("f64", 3)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
jule::Ptr<_1a68b3d17_ExprInspector> _1a69d2ae5_exprInspector = static__1a68b417a_New();
jule::Ptr<_1a68b3d17_ExprInspector> _1a68c7358_exprInspector = static__1a68b417a_New();
jule::Ptr<_1a68d098d_data> _1a68d0097_emptyData = jule::new_ptr<_1a68d098d_data>();
jule::Bool _1a68d50ad_Copy = false;
jule::Bool _1a68d53aa_Deadcode = false;
jule::Bool _1a68d5663_Append = false;
jule::Bool _1a68d5960_Math = false;
jule::Bool _1a68d5c18_Access = false;
jule::Bool _1a68d5ec1_Inline = false;
jule::Bool _1a68d6279_Ptr = false;
jule::Bool _1a68d6642_Cond = false;
jule::Bool _1a68d6884_Str = false;
jule::Bool _1a68d6b2b_Slice = false;
jule::Bool _1a68d6dd4_Assign = false;
jule::Bool _1a68d718c_Exceptional = false;
jule::Bool _1a68d7445_Iter = false;
jule::Bool _1a68d76ed_Dynamic = false;
jule::Bool _1a69d3a08_exprEnabled = false;
jule::Bool _1a69d3c7d_scopeEnabled = false;
jule::Array<jule::U64,12> _1a7570121_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1a6a6ab4a_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_1a5b50d52_TypeKind> _1a7579911_generalGCPtr = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5b5c457_Sptr>(_1a5b5c457_Sptr{._field_Elem=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5b5892b_Prim>(_1a5b5892b_Prim{._field_Kind=jule::Str::lit("uintptr", 7)}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)})}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data21)});



std::ostream &operator<<(std::ostream &_Stream, _21356124e_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _1e9a030bc_StrBuilder static__1e9a034eb_New(jule::I64 _1516_cap) {
	if ((_1516_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:4"));;
	};
	return _1e9a030bc_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1516_cap, 0)};;
}



inline void _1e9a037a4_Write(_1e9a030bc_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b) {
	((*(_self_))._field_buf).append(_2521_b);;
}



inline void _1e9a03a5c_WriteStr(_1e9a030bc_StrBuilder* _self_, jule::Str _3024_s) {
	((*(_self_))._field_buf).append(_3024_s);;
}



inline void _1e9a03d15_WriteByte(_1e9a030bc_StrBuilder* _self_, jule::U8 _3525_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3525_b); };
}



inline jule::Str _1e9a04354_Str(_1e9a030bc_StrBuilder* _self_) {
	jule::Str _507_s = _1e9a028a2_StrFromBytes((*(_self_))._field_buf);;
	_1e9a04552_Clear(_self_);
	return _507_s;;
}



inline void _1e9a04552_Clear(_1e9a030bc_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _1e9a047d8_Len(_1e9a030bc_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1e9a04d05_Buf(_1e9a030bc_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1e9a050ad_SetBuf(_1e9a030bc_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf) {
	(*(_self_))._field_buf=_7733_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _1e9a030bc_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d1b93286_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d1b937b4_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d1b93c37_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d190bd46_index(_1d190b8b2_lazyBuff* _self_, jule::I64 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _1d190c0ee_append(_1d190b8b2_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1d190c385_string(_1d190b8b2_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _1e9a025d8_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1d190b8b2_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _21467189c_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_21467189c_DirEntry>>> static__1d190e750_Read(jule::Str _1517_path) {
	jule::Slice<jule::Ptr<_21467189c_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _163_utf16Path = _21463032d_UTF16FromStr(_1d190d166_Join(jule::Slice<jule::Str>::make({_1517_path,jule::Str::lit("*", 1)})));;
	WIN32_FIND_DATAW _177_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _183_handle = _21465cd3e_FindFirstFile((&(_163_utf16Path[0LL])), (&(_177_data)));;
	if ((_183_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_21467189c_DirEntry>>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			jule::Ptr<_21467189c_DirEntry> _238_entry = jule::new_ptr<_21467189c_DirEntry>(_21467189c_DirEntry{._field_Name=_214630905_U16PtrToStr(((jule::U16*)(_177_data.cFileName))), });;
			(*(_238_entry))._field_Stat=({
				auto except = static__1d191061e_Of(_1d190d166_Join(jule::Slice<jule::Str>::make({_1517_path,(*_238_entry.alloc)._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_21467189c_DirEntry>>>{.error=except.error};
				} jule::Ptr<_214674e66_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_21467189c_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_238_entry); };
			if ((_21465d1b3_FindNextFile(_183_handle, (&(_177_data))) == 0LL)) {
				goto _iter_end_1a838d724;
			};
		}
	_iter_next_1a838d724:;
	}
	_iter_end_1a838d724:;;
	_21465d47c_FindClose(_183_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_21467189c_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1d190e981_Create(jule::Str _3919_path) {
	jule::Slice<jule::U16> _443_utf16Path = _21463032d_UTF16FromStr(_3919_path);;
	if ((!(_21465aa40_CreateDirectory((&(_443_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_21467124d_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1d190ebb2_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U16> _543_utf16Path = _21463032d_UTF16FromStr(_5319_path);;
	if ((!(_21465ad09_RemoveDirectory((&(_543_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_21467124d_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _214671b33_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_214672d32_File> static__214673250_New(jule::Uintptr _4516_handle) {
	return jule::new_ptr<_214672d32_File>(_214672d32_File{._field_handle=_4516_handle});;
}



inline jule::Exceptional<jule::Ptr<_214672d32_File>> static__214673519_Create(jule::Str _5519_path) {
	return static__21356c018_Open(_5519_path, static_cast<jule::I64>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__2146737d3_Read(jule::Str _6717_path) {
	jule::Ptr<_214674e66_Status> _683_s = ({
		auto except = static__1d191061e_Of(_6717_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_214674e66_Status>(nullptr);});
	});;
	if ((!(_2146755c6_IsReg(_683_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _737_sz = static_cast<jule::I64>(_21467585c_Size(_683_s));;
	if ((_737_sz != static_cast<jule::I64>(_21467585c_Size(_683_s)))) {
		_737_sz=0LL;
	};
	if ((_737_sz < 512LLU)) {
		_737_sz=512LLU;
	};
	jule::Ptr<_214672d32_File> _867_f = ({
		auto except = static__21356c018_Open(_6717_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_214672d32_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _877_buf = jule::Slice<jule::U8>::alloc(_737_sz, _737_sz, 0);;
	jule::I64 _887_n = 0LL;;
	while ((_887_n < _737_sz)) {
		{
			jule::I64 _904_rn = ({
				auto except = _21356ca1e_Read(_867_f.ptr(), _877_buf.slice(_887_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_904_rn == 0LL)) {
				goto _iter_end_1a8395187;
			};
			_887_n+=_904_rn;
		}
	_iter_next_1a8395187:;
	}
	_iter_end_1a8395187:;;
	({
		auto except = _2146743b6_Close(_867_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_877_buf.slice(0LL, _887_n)};;
}



inline jule::VoidExceptional static__214673b79_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm) {
	jule::Ptr<_214672d32_File> _1067_f = ({
		auto except = static__21356c018_Open(_10518_path, static_cast<jule::I64>(769LL), _10543_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_214672d32_File>(nullptr);});
	});;
	jule::I64 _1077_n = 0LL;;
	while ((_1077_n < _10529_data.len())) {
		{
			_1077_n+=({
				auto except = _21356c6cd_Write(_1067_f.ptr(), _10529_data.slice(_1077_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1a8399ed3:;
	}
	_iter_end_1a8399ed3:;;
	return _2146743b6_Close(_1067_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _2146743b6_Close(_214672d32_File* _self_) {
	if ((_214660935_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_21467124d_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_214672d32_File>> static__21356c018_Open(jule::Str _2217_path, jule::I64 _2228_flag, jule::I64 _2241_mode) {
	jule::Slice<jule::U16> _233_utf16Path = _21463032d_UTF16FromStr(_2217_path);;
	jule::I64 _243_handle = _214659b60_Wopen((&(_233_utf16Path[0LL])), _2228_flag, _2241_mode);;
	if ((_243_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_214672d32_File>>{.error=jule::Any(_21467124d_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_214672d32_File>>{.result=static__214673250_New(static_cast<jule::Uintptr>(_243_handle))};;
}



inline jule::VoidExceptional static__21356c249_Remove(jule::Str _3519_path) {
	jule::Slice<jule::U16> _363_utf16Path = _21463032d_UTF16FromStr(_3519_path);;
	if ((!(_21465a776_DeleteFile((&(_363_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_21467124d_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21356c6cd_Write(_214672d32_File* _self_, jule::Slice<jule::U8> _5021_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_5021_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	if (_21356cd93_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _564_utf16Buf = _21463032d_UTF16FromStr(static_cast<jule::Str>(_5021_buf));;
		jule::Bool _574_ok = _21465c2c2_WriteConsole((*(_self_))._field_handle, (&(_564_utf16Buf[0LL])), _564_utf16Buf.len(), &(__jule_func_result), nullptr);;
		if ((!(_574_ok))) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_21467124d_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_21356ad91_HandleRW(&(_5021_buf));
	__jule_func_result=_214660cdc_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_5021_buf[0LL])), static_cast<jule::U64>(_5021_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_21467124d_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _21356ca1e_Read(_214672d32_File* _self_, jule::Slice<jule::U8> _8124_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_8124_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	if (_21356cd93_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _878_codepage = jule::Slice<jule::U16>::alloc(_8124_buf.len(), _8124_buf.len(), 0);;
		jule::Bool _884_ok = _21465c7ab_ReadConsole((*(_self_))._field_handle, (&(_878_codepage[0LL])), _8124_buf.len(), &(__jule_func_result));;
		if ((!(_884_ok))) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_21467124d_getLastFsError(), &__jule_any_type0)};
		};
		jule::Slice<jule::I32> _934_runes = _21462ec56_Decode(_878_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_934_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a83a6d36:;
			if (it != expr_end) {
				jule::I32 *_9511_r = it;
				{
					jule::I64 _965_size = _213562a8b_RuneLen((*(_9511_r)));;
					if (((__jule_func_result + _965_size) > _8124_buf.len())) {
						goto _iter_end_1a83a6d36;
					};
					_213563020_EncodeRune(_8124_buf.slice(__jule_func_result), (*(_9511_r)));
					__jule_func_result+=_965_size;
				}
				_iter_next_1a83a6d36:;
				++it;
				goto _iter_begin_1a83a6d36;
			}
			_iter_end_1a83a6d36:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_21356ad91_HandleRW(&(_8124_buf));
	__jule_func_result=_21466055b_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_8124_buf[0LL])), static_cast<jule::U64>(_8124_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_21467124d_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}





std::ostream &operator<<(std::ostream &_Stream, _214672d32_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _214675340_IsDir(_214674e66_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _2146755c6_IsReg(_214674e66_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _21467585c_Size(_214674e66_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_214674e66_Status>> static__1d191061e_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<jule::Ptr<_214674e66_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _163_utf16Path = _21463032d_UTF16FromStr(_1215_path);;
	struct _stat _177_handle = (struct _stat){};;
	jule::I64 _183_code = _214659731_Wstat((&(_163_utf16Path[0LL])), (&(_177_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_214674e66_Status>>{.error=jule::Any(_21467124d_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_214674e66_Status> _227_stat = jule::new_ptr<_214674e66_Status>();;
	(*_227_stat.alloc)._field_size=_177_handle.st_size;
	if (((_177_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_177_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_214674e66_Status>>{.result=_227_stat};;
}





std::ostream &operator<<(std::ostream &_Stream, _214674e66_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d1d2ea0a_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1d1c6d64c_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b914608c_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9146c19_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9158e5c_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b91513a5_set(_1b9159974_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1a8807d8b:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1a8807e9b:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1a8807d03:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1a88098c6:;
					{
						goto _iter_next_1a8809277;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1a8809970:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1a8809277;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1a88099d6:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1a8809277;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1a8809277;
					}
				}
				_match_end_1a88097a5:;
			};
			goto _iter_end_1a8809277;
		}
	_iter_next_1a8809277:;
	}
	_iter_end_1a8809277:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1b914b8cd_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1a880ed2c;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1a880ed2c:;
		}
		_iter_end_1a880ed2c:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1b91516e6_floatBits(_1b9159974_decimal* _self_, _1b914608c_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1a8820722;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1a881e325;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1a8820722;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1b9151075_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1b9151075_powtab[(*(_self_))._field_dp];
			};
			_1b915a0d4_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1a881651a:;
	}
	_iter_end_1a881651a:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1b9151075_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1b9151075_powtab[(-((*(_self_))._field_dp))];
			};
			_1b915a0d4_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1a8816e11:;
	}
	_iter_end_1a8816e11:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1b915a0d4_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33226_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1a881e325;
	};
	_1b915a0d4_shift(_self_, static_cast<jule::I64>((1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1b915ab84_roundedInteger(_self_);
	if ((_3347_mant == (2LLU << (*(_33226_flt))._field_mantbits))) {
		_3347_mant>>=1LLU;
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33226_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1a881e325;
		};
	};
	if (((_3347_mant & (1LLU << (*(_33226_flt))._field_mantbits)) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1a8820722;
	_julec_label_1a881e325:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33226_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1a8820722:;
	jule::U64 _4227_bits = (_3347_mant & ((1LLU << (*(_33226_flt))._field_mantbits) - 1LLU));;
	_4227_bits|=(static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33226_flt))._field_expbits) - 1LL)))) << (*(_33226_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_4227_bits|=((1LLU << (*(_33226_flt))._field_mantbits) << (*(_33226_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1b9159d2b_assign(_1b9159974_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1a8823659:;
	}
	_iter_end_1a8823659:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1a88242a3:;
	}
	_iter_end_1a88242a3:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1b915b2c2_trim(_self_);
}



inline void _1b915a0d4_shift(_1b9159974_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1a882621c:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1a88262b6:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1b915bd1c_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1a8826d88:;
				}
				_iter_end_1a8826d88:;;
				_1b915bd1c_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1a882632c:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1b915b5ad_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1a8826cab:;
				}
				_iter_end_1a8826cab:;;
				_1b915b5ad_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_1a88260b8:;
	};
}



inline void _1b915a38c_roundDown(_1b9159974_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1b915b2c2_trim(_self_);
}



inline void _1b915a645_roundUp(_1b9159974_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1a882a2ed:;
	}
	_iter_end_1a882a2ed:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1b915a8ed_round(_1b9159974_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1b915c191_shouldRoundUp(_self_, _23221_nd)) {
		_1b915a645_roundUp(_self_, _23221_nd);
	} else {
		_1b915a38c_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1b915ab84_roundedInteger(_1b9159974_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=((_2507_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1a882d1ad:;
	}
	_iter_end_1a882d1ad:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1a882e4cd:;
	}
	_iter_end_1a882e4cd:;;
	if (_1b915c191_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9159974_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b916c16d_Const> static__1b916c5ad_NewI64(jule::I64 _1619_x) {
	return jule::new_ptr<_1b916c16d_Const>(_1b916c16d_Const{._field_data=jule::Any(_1619_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1b916c16d_Const> static__1b916c877_NewU64(jule::U64 _1919_x) {
	return jule::new_ptr<_1b916c16d_Const>(_1b916c16d_Const{._field_data=jule::Any(_1919_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1b916c16d_Const> static__1b916cb41_NewBool(jule::Bool _2220_x) {
	return jule::new_ptr<_1b916c16d_Const>(_1b916c16d_Const{._field_data=jule::Any(_2220_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1b916c16d_Const> static__1b916ce0a_NewStr(jule::Str _2519_x) {
	return jule::new_ptr<_1b916c16d_Const>(_1b916c16d_Const{._field_data=jule::Any(_2519_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1b916c16d_Const> static__1b916d1c4_NewF64(jule::F64 _2819_x) {
	return jule::new_ptr<_1b916c16d_Const>(_1b916c16d_Const{._field_data=jule::Any(_2819_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1b916c16d_Const> static__1b916d3d3_NewNil(void) {
	return jule::new_ptr<_1b916c16d_Const>(_1b916c16d_Const{._field_data=nullptr});;
}



inline jule::I64 _1b916da43_ReadI64(_1b916c16d_Const* _self_) {
	if ((!(_1b917113e_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _1b916dcc9_ReadU64(_1b916c16d_Const* _self_) {
	if ((!(_1b91713c5_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _1b916e060_ReadBool(_1b916c16d_Const* _self_) {
	if ((!(_1b917165b_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1b916e2e6_ReadStr(_1b916c16d_Const* _self_) {
	if ((!(_1b91718e2_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1b916e57c_ReadF64(_1b916c16d_Const* _self_) {
	if ((!(_1b9171b78_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _1b916e813_AsI64(_1b916c16d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a8896424:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a88961e3:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a8896259:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1a8895c92:;
			{
				return 0LL;;
			}
		}
		_match_end_1a8895ae9:;
	};
}



inline jule::U64 _1b916ea99_AsU64(_1b916c16d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a8896bb6:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a88979db:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a8897a52:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1a8895e6d:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a8895e18:;
	};
}



inline jule::F64 _1b916ed30_AsF64(_1b916c16d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a8899515:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a88984ae:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a88992d4:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1a8897832:;
			{
				return 0LL;;
			}
		}
		_match_end_1a88977cc:;
	};
}



inline void _1b91700d8_SetI64(_1b916c16d_Const* _self_, jule::I64 _13822_x) {
	(*(_self_))._field_data=jule::Any(_13822_x, &__jule_any_type1);
}



inline void _1b9170391_SetU64(_1b916c16d_Const* _self_, jule::U64 _14122_x) {
	(*(_self_))._field_data=jule::Any(_14122_x, &__jule_any_type2);
}



inline void _1b9170649_SetBool(_1b916c16d_Const* _self_, jule::Bool _14423_x) {
	(*(_self_))._field_data=jule::Any(_14423_x, &__jule_any_type3);
}



inline void _1b9170902_SetStr(_1b916c16d_Const* _self_, jule::Str _14722_x) {
	(*(_self_))._field_data=jule::Any(_14722_x, &__jule_any_type4);
}



inline void _1b9170baa_SetF64(_1b916c16d_Const* _self_, jule::F64 _15022_x) {
	(*(_self_))._field_data=jule::Any(_15022_x, &__jule_any_type5);
}



inline jule::Bool _1b917113e_IsI64(_1b916c16d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a5c65120:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a5c65384:;
			{
				return false;;
			}
		}
		_match_end_1a5c6532e:;
	};
}



inline jule::Bool _1b91713c5_IsU64(_1b916c16d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a5c65cd0:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a5c655d7:;
			{
				return false;;
			}
		}
		_match_end_1a5c65582:;
	};
}



inline jule::Bool _1b917165b_IsBool(_1b916c16d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a5c6672b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a5c66099:;
			{
				return false;;
			}
		}
		_match_end_1a5c66044:;
	};
}



inline jule::Bool _1b91718e2_IsStr(_1b916c16d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a5c67177:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a5c669e5:;
			{
				return false;;
			}
		}
		_match_end_1a5c66990:;
	};
}



inline jule::Bool _1b9171b78_IsF64(_1b916c16d_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a5c67ac3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a5c67441:;
			{
				return false;;
			}
		}
		_match_end_1a5c673db:;
	};
}



inline jule::Bool _1b9171e0e_IsNil(_1b916c16d_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1b9172591_And(_1b916c16d_Const* _self_, _1b916c16d_Const _23815_x) {
	{
		
		if ((_1b917165b_IsBool(_self_) && _1b917165b_IsBool(&_23815_x))) {
			_case_begin_1a5c6bd3b:;
			{
				return (_1b916e060_ReadBool(_self_) && _1b916e060_ReadBool(&_23815_x));;
			}
		}
		else {
			_case_begin_1a5c6bcc5:;
			{
				return false;;
			}
		}
		_match_end_1a5c6b8da:;
	};
}



inline jule::Bool _1b91728d2_Or(_1b916c16d_Const* _self_, _1b916c16d_Const _24914_x) {
	{
		
		if ((_1b917165b_IsBool(_self_) && _1b917165b_IsBool(&_24914_x))) {
			_case_begin_1a5c6d106:;
			{
				return (_1b916e060_ReadBool(_self_) || _1b916e060_ReadBool(&_24914_x));;
			}
		}
		else {
			_case_begin_1a5c6c7dc:;
			{
				return false;;
			}
		}
		_match_end_1a5c6c710:;
	};
}



inline jule::Bool _1b9172c23_Eq(_1b916c16d_Const* _self_, _1b916c16d_Const _26014_x) {
	{
		
		if (_1b9171e0e_IsNil(_self_)) {
			_case_begin_1a5c6e437:;
			{
				return _1b9171e0e_IsNil(&_26014_x);;
			}
		}
		else if (_1b917165b_IsBool(_self_)) {
			_case_begin_1a5c6e49d:;
			{
				return (_1b917165b_IsBool(&_26014_x) && (_1b916e060_ReadBool(_self_) == _1b916e060_ReadBool(&_26014_x)));;
			}
		}
		else if (_1b91718e2_IsStr(_self_)) {
			_case_begin_1a5c6e514:;
			{
				return (_1b91718e2_IsStr(&_26014_x) && (_1b916e2e6_ReadStr(_self_) == _1b916e2e6_ReadStr(&_26014_x)));;
			}
		}
		else if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a5c6e58b:;
			{
				return (_1b916da43_ReadI64(_self_) == _1b916e813_AsI64(&_26014_x));;
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a5c6e613:;
			{
				return (_1b916dcc9_ReadU64(_self_) == _1b916ea99_AsU64(&_26014_x));;
			}
		}
		else if (_1b9171b78_IsF64(_self_)) {
			_case_begin_1a5c6e789:;
			{
				return (_1b916e57c_ReadF64(_self_) == _1b916ed30_AsF64(&_26014_x));;
			}
		}
		else {
			_case_begin_1a5c6da96:;
			{
				return false;;
			}
		}
		_match_end_1a5c6d9b9:;
	};
}



inline jule::Bool _1b9173064_Lt(_1b916c16d_Const* _self_, _1b916c16d_Const _28714_x) {
	{
		
		if (_1b91718e2_IsStr(_self_)) {
			_case_begin_1a5c7320a:;
			{
				return (_1b91718e2_IsStr(&_28714_x) && (_1b916e2e6_ReadStr(_self_) < _1b916e2e6_ReadStr(&_28714_x)));;
			}
		}
		else if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a5c73271:;
			{
				return (_1b916da43_ReadI64(_self_) < _1b916e813_AsI64(&_28714_x));;
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a5c732d7:;
			{
				return (_1b916dcc9_ReadU64(_self_) < _1b916ea99_AsU64(&_28714_x));;
			}
		}
		else if (_1b9171b78_IsF64(_self_)) {
			_case_begin_1a5c7335e:;
			{
				return (_1b916e57c_ReadF64(_self_) < _1b916ed30_AsF64(&_28714_x));;
			}
		}
		else {
			_case_begin_1a5c6edb6:;
			{
				return false;;
			}
		}
		_match_end_1a5c6ecea:;
	};
}



inline jule::Bool _1b91733a5_LtEq(_1b916c16d_Const* _self_, _1b916c16d_Const _31016_x) {
	{
		
		if (_1b91718e2_IsStr(_self_)) {
			_case_begin_1a5c75ecc:;
			{
				return (_1b91718e2_IsStr(&_31016_x) && (_1b916e2e6_ReadStr(_self_) <= _1b916e2e6_ReadStr(&_31016_x)));;
			}
		}
		else if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a5c76043:;
			{
				return (_1b916da43_ReadI64(_self_) <= _1b916e813_AsI64(&_31016_x));;
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a5c760a9:;
			{
				return (_1b916dcc9_ReadU64(_self_) <= _1b916ea99_AsU64(&_31016_x));;
			}
		}
		else if (_1b9171b78_IsF64(_self_)) {
			_case_begin_1a5c76131:;
			{
				return (_1b916e57c_ReadF64(_self_) <= _1b916ed30_AsF64(&_31016_x));;
			}
		}
		else {
			_case_begin_1a5c73a8a:;
			{
				return false;;
			}
		}
		_match_end_1a5c739be:;
	};
}



inline jule::Bool _1b91736e6_Gt(_1b916c16d_Const* _self_, _1b916c16d_Const _33314_x) {
	{
		
		if (_1b91718e2_IsStr(_self_)) {
			_case_begin_1a5c78c9e:;
			{
				return (_1b91718e2_IsStr(&_33314_x) && (_1b916e2e6_ReadStr(_self_) > _1b916e2e6_ReadStr(&_33314_x)));;
			}
		}
		else if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a5c78d15:;
			{
				return (_1b916da43_ReadI64(_self_) > _1b916e813_AsI64(&_33314_x));;
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a5c78d7b:;
			{
				return (_1b916dcc9_ReadU64(_self_) > _1b916ea99_AsU64(&_33314_x));;
			}
		}
		else if (_1b9171b78_IsF64(_self_)) {
			_case_begin_1a5c78e03:;
			{
				return (_1b916e57c_ReadF64(_self_) > _1b916ed30_AsF64(&_33314_x));;
			}
		}
		else {
			_case_begin_1a5c7685c:;
			{
				return false;;
			}
		}
		_match_end_1a5c76791:;
	};
}



inline jule::Bool _1b9173a37_GtEq(_1b916c16d_Const* _self_, _1b916c16d_Const _35616_x) {
	{
		
		if (_1b91718e2_IsStr(_self_)) {
			_case_begin_1a5c7ba71:;
			{
				return (_1b91718e2_IsStr(&_35616_x) && (_1b916e2e6_ReadStr(_self_) >= _1b916e2e6_ReadStr(&_35616_x)));;
			}
		}
		else if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a5c7bad7:;
			{
				return (_1b916da43_ReadI64(_self_) >= _1b916e813_AsI64(&_35616_x));;
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a5c7bb4d:;
			{
				return (_1b916dcc9_ReadU64(_self_) >= _1b916ea99_AsU64(&_35616_x));;
			}
		}
		else if (_1b9171b78_IsF64(_self_)) {
			_case_begin_1a5c7bbc5:;
			{
				return (_1b916e57c_ReadF64(_self_) >= _1b916ed30_AsF64(&_35616_x));;
			}
		}
		else {
			_case_begin_1a5c7962e:;
			{
				return false;;
			}
		}
		_match_end_1a5c79563:;
	};
}



inline jule::Bool _1b9173d78_Add(_1b916c16d_Const* _self_, _1b916c16d_Const _37719_x) {
	{
		
		if (_1b91718e2_IsStr(_self_)) {
			_case_begin_1a5c7e843:;
			{
				if ((!(_1b91718e2_IsStr(&_37719_x)))) {
					return false;;
				};
				_1b9170902_SetStr(_self_, (_1b916e2e6_ReadStr(_self_) + _1b916e2e6_ReadStr(&_37719_x)));
			}
		}
		else if (_1b9171b78_IsF64(_self_)) {
			_case_begin_1a5c7e8a9:;
			{
				_1b9170baa_SetF64(_self_, (_1b916e57c_ReadF64(_self_) + _1b916ed30_AsF64(&_37719_x)));
			}
		}
		else if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a5c7e920:;
			{
				if (_1b9171b78_IsF64(&_37719_x)) {
					_1b9170baa_SetF64(_self_, (_1b916ed30_AsF64(_self_) + _1b916e57c_ReadF64(&_37719_x)));
				} else {
					_1b91700d8_SetI64(_self_, (_1b916da43_ReadI64(_self_) + _1b916e813_AsI64(&_37719_x)));
				};
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a5c7e997:;
			{
				if (_1b9171b78_IsF64(&_37719_x)) {
					_1b9170baa_SetF64(_self_, (_1b916ed30_AsF64(_self_) + _1b916e57c_ReadF64(&_37719_x)));
				} else {
					_1b9170391_SetU64(_self_, (_1b916dcc9_ReadU64(_self_) + _1b916ea99_AsU64(&_37719_x)));
				};
			}
		}
		else {
			_case_begin_1a5c7c401:;
			{
				return false;;
			}
		}
		_match_end_1a5c7c335:;
	};
	return true;;
}



inline jule::Bool _1b91741b9_Sub(_1b916c16d_Const* _self_, _1b916c16d_Const _40619_x) {
	{
		
		if (_1b9171b78_IsF64(_self_)) {
			_case_begin_1a89cbd62:;
			{
				_1b9170baa_SetF64(_self_, (_1b916e57c_ReadF64(_self_) - _1b916ed30_AsF64(&_40619_x)));
			}
		}
		else if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a89cbe0b:;
			{
				if (_1b9171b78_IsF64(&_40619_x)) {
					_1b9170baa_SetF64(_self_, (_1b916ed30_AsF64(_self_) - _1b916e57c_ReadF64(&_40619_x)));
				} else {
					_1b91700d8_SetI64(_self_, (_1b916da43_ReadI64(_self_) - _1b916e813_AsI64(&_40619_x)));
				};
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a89cbe83:;
			{
				if (_1b9171b78_IsF64(&_40619_x)) {
					_1b9170baa_SetF64(_self_, (_1b916ed30_AsF64(_self_) - _1b916e57c_ReadF64(&_40619_x)));
				} else {
					_1b9170391_SetU64(_self_, (_1b916dcc9_ReadU64(_self_) - _1b916ea99_AsU64(&_40619_x)));
				};
			}
		}
		else {
			_case_begin_1a89cbcc9:;
			{
				return false;;
			}
		}
		_match_end_1a89cbbca:;
	};
	return true;;
}



inline jule::Bool _1b917450a_Mul(_1b916c16d_Const* _self_, _1b916c16d_Const _43019_x) {
	{
		
		if (_1b9171b78_IsF64(_self_)) {
			_case_begin_1a89d0d66:;
			{
				_1b9170baa_SetF64(_self_, (_1b916e57c_ReadF64(_self_) * _1b916ed30_AsF64(&_43019_x)));
			}
		}
		else if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a89d0e10:;
			{
				if (_1b9171b78_IsF64(&_43019_x)) {
					_1b9170baa_SetF64(_self_, (_1b916ed30_AsF64(_self_) * _1b916e57c_ReadF64(&_43019_x)));
				} else {
					_1b91700d8_SetI64(_self_, (_1b916da43_ReadI64(_self_) * _1b916e813_AsI64(&_43019_x)));
				};
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a89d0e87:;
			{
				if (_1b9171b78_IsF64(&_43019_x)) {
					_1b9170baa_SetF64(_self_, (_1b916ed30_AsF64(_self_) * _1b916e57c_ReadF64(&_43019_x)));
				} else {
					_1b9170391_SetU64(_self_, (_1b916dcc9_ReadU64(_self_) * _1b916ea99_AsU64(&_43019_x)));
				};
			}
		}
		else {
			_case_begin_1a89d031b:;
			{
				return false;;
			}
		}
		_match_end_1a89d023e:;
	};
	return true;;
}



inline jule::Bool _1b917484b_Div(_1b916c16d_Const* _self_, _1b916c16d_Const _45819_x) {
	{
		
		if (_1b9171b78_IsF64(_self_)) {
			_case_begin_1a89d4d04:;
			{
				jule::F64 _4614_l = _1b916ed30_AsF64(&_45819_x);;
				if ((_4614_l == 0LL)) {
					return false;;
				};
				_1b9170baa_SetF64(_self_, jule::div(_1b916e57c_ReadF64(_self_),_4614_l));
			}
		}
		else if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a89d4d9d:;
			{
				jule::F64 _4674_l = _1b916ed30_AsF64(&_45819_x);;
				if ((_4674_l == 0LL)) {
					return false;;
				};
				_1b9170baa_SetF64(_self_, jule::div(_1b916ed30_AsF64(_self_),_4674_l));
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a89d4e25:;
			{
				jule::F64 _4734_l = _1b916ed30_AsF64(&_45819_x);;
				if ((_4734_l == 0LL)) {
					return false;;
				};
				_1b9170baa_SetF64(_self_, jule::div(_1b916ed30_AsF64(_self_),_4734_l));
			}
		}
		else {
			_case_begin_1a89d42a9:;
			{
				return false;;
			}
		}
		_match_end_1a89d41cc:;
	};
	return true;;
}



inline jule::Bool _1b9174b8c_Mod(_1b916c16d_Const* _self_, _1b916c16d_Const _48719_x) {
	{
		
		if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a89d8cc5:;
			{
				jule::I64 _4904_l = _1b916e813_AsI64(&_48719_x);;
				if ((_4904_l == 0LL)) {
					return false;;
				};
				_1b91700d8_SetI64(_self_, jule::mod(_1b916da43_ReadI64(_self_),_4904_l));
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a89d91c1:;
			{
				jule::U64 _4964_l = _1b916ea99_AsU64(&_48719_x);;
				if ((_4964_l == 0LLU)) {
					return false;;
				};
				_1b9170391_SetU64(_self_, jule::mod(_1b916dcc9_ReadU64(_self_),_4964_l));
			}
		}
		else {
			_case_begin_1a89d8c4d:;
			{
				return false;;
			}
		}
		_match_end_1a89d8b4e:;
	};
	return true;;
}



inline jule::Bool _1b9174ecd_BitwiseAnd(_1b916c16d_Const* _self_, _1b916c16d_Const _50926_x) {
	{
		
		if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a89dbaca:;
			{
				_1b91700d8_SetI64(_self_, (_1b916da43_ReadI64(_self_) & _1b916e813_AsI64(&_50926_x)));
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a89dbec6:;
			{
				_1b9170391_SetU64(_self_, (_1b916dcc9_ReadU64(_self_) & _1b916ea99_AsU64(&_50926_x)));
			}
		}
		else {
			_case_begin_1a89dba53:;
			{
				return false;;
			}
		}
		_match_end_1a89db954:;
	};
	return true;;
}



inline jule::Bool _1b917531e_BitwiseOr(_1b916c16d_Const* _self_, _1b916c16d_Const _52325_x) {
	{
		
		if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a89dd857:;
			{
				_1b91700d8_SetI64(_self_, (_1b916da43_ReadI64(_self_) | _1b916e813_AsI64(&_52325_x)));
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a89ddc53:;
			{
				_1b9170391_SetU64(_self_, (_1b916dcc9_ReadU64(_self_) | _1b916ea99_AsU64(&_52325_x)));
			}
		}
		else {
			_case_begin_1a89dd7d0:;
			{
				return false;;
			}
		}
		_match_end_1a89dd6d1:;
	};
	return true;;
}



inline jule::Bool _1b9175660_Xor(_1b916c16d_Const* _self_, _1b916c16d_Const _53719_x) {
	{
		
		if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a89e05d4:;
			{
				_1b91700d8_SetI64(_self_, (_1b916da43_ReadI64(_self_) ^ _1b916e813_AsI64(&_53719_x)));
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a89e09d0:;
			{
				_1b9170391_SetU64(_self_, (_1b916dcc9_ReadU64(_self_) ^ _1b916ea99_AsU64(&_53719_x)));
			}
		}
		else {
			_case_begin_1a89e055c:;
			{
				return false;;
			}
		}
		_match_end_1a89e045d:;
	};
	return true;;
}



inline jule::Bool _1b91759a1_Lshift(_1b916c16d_Const* _self_, _1b916c16d_Const _55122_x) {
	{
		
		if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a89e2361:;
			{
				jule::I64 _5544_l = _1b916e813_AsI64(_self_);;
				if ((_5544_l < 0LL)) {
					jule::U64 _5565_r = _1b916ea99_AsU64(&_55122_x);;
					_1b91700d8_SetI64(_self_, (_5544_l << _5565_r));
				} else {
					_1b9176188_lshiftUnsig(_self_, &(_55122_x));
				};
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a89e275c:;
			{
				_1b9176188_lshiftUnsig(_self_, &(_55122_x));
			}
		}
		else {
			_case_begin_1a89e22d9:;
			{
				return false;;
			}
		}
		_match_end_1a89e21da:;
	};
	return true;;
}



inline jule::Bool _1b9175ce2_Rshift(_1b916c16d_Const* _self_, _1b916c16d_Const _57122_x) {
	{
		
		if (_1b917113e_IsI64(_self_)) {
			_case_begin_1a89e4880:;
			{
				jule::I64 _5744_l = _1b916e813_AsI64(_self_);;
				if ((_5744_l < 0LL)) {
					jule::U64 _5765_r = _1b916ea99_AsU64(&_57122_x);;
					_1b91700d8_SetI64(_self_, (_5744_l >> _5765_r));
				} else {
					_1b91764b8_rshiftUnsig(_self_, &(_57122_x));
				};
			}
		}
		else if (_1b91713c5_IsU64(_self_)) {
			_case_begin_1a89e4c7b:;
			{
				_1b91764b8_rshiftUnsig(_self_, &(_57122_x));
			}
		}
		else {
			_case_begin_1a89e4808:;
			{
				return false;;
			}
		}
		_match_end_1a89e4709:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b916c16d_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1c80b68b1_Prec(_1c80b653c_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a8a50a2e:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a8a50556:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a8a505bc:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1a8a50a95:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a8a50b1c:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1a8a5006c:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a8a50479:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c80b653c_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1c80bc1e1_Fill(_1c80bbcc3_File* _self_, jule::Slice<jule::U8> _1724_data) {
	(*(_self_))._field_Data=_1724_data;
}



inline jule::Str _1c80bc477_Dir(_1c80bbcc3_File* _self_) {
	return _1d190dd59_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1c80bc70d_Name(_1c80bbcc3_File* _self_) {
	return _1d190d980_Base((*(_self_))._field_Path);;
}



inline jule::Str _1c80bccd5_GetRow(_1c80bbcc3_File* _self_, jule::I64 _3818_row) {
	jule::I64 _397_n = 0LL;;
	jule::I64 _407_lineStart = 0LL;;
	jule::I64 _417_i = 0LL;;
	for (; (_417_i < (*(_self_))._field_Data.len()); (_417_i)++) {
		{
			if (((*(_self_))._field_Data[_417_i] != '\n')) {
				goto _iter_next_1a8a5b100;
			};
			(_397_n)++;
			if ((_397_n == _3818_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_407_lineStart, _417_i));;
			};
			_407_lineStart=(_417_i + 1LL);
		}
	_iter_next_1a8a5b100:;
	}
	_iter_end_1a8a5b100:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c80bbcc3_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c80bde29_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1c80c5491_pushErr(_1c80c4e0d_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args) {
	{ jule::Slice<_1d1c6d64c_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c80bebc7_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44723_fmt, _44736_args)); };
}



inline void _1c80c5a02_lex(_1c80c4e0d_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1a59c0199_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1c80b653c_Token> _4628_token = _1a59c1684_token(_self_);;
			if (((*(_4628_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1c80b653c_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4628_token); };
			};
		}
	_iter_next_1a8a8a20b:;
	}
	_iter_end_1a8a8a20b:;;
}



inline jule::Str _1c80c5d43_id(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _47119_ln) {
	if (((*(_47119_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4753_r;
	jule::I64 _47510_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213561e31_DecodeRune((*(_47119_ln)));
		_4753_r = __jule_assign_result.__jule_result_arg0;
		_47510_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4753_r != '_') && (!(_1c80b9c6b_IsLetter(_4753_r))))) {
		return jule::Str();;
	};
	while ((_47510_i < (*(_47119_ln)).len())) {
		{
			jule::I32 _4814_pr;
			jule::I64 _4818_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213561e31_DecodeRune((*(_47119_ln)).slice(_47510_i));
				_4814_pr = __jule_assign_result.__jule_result_arg0;
				_4818_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4814_pr != '_') && (!(_1c80ba1de_IsDecimal(static_cast<jule::U8>(_4814_pr))))) && (!(_1c80b9c6b_IsLetter(_4814_pr))))) {
				(*(_self_))._field_pos+=_47510_i;
				return static_cast<jule::Str>((*(_47119_ln)).slice(0LL, _47510_i));;
			};
			_47510_i+=_4818_n;
		}
	_iter_next_1a8a8d61b:;
	}
	_iter_end_1a8a8d61b:;;
	(*(_self_))._field_pos+=(*(_47119_ln)).len();
	return static_cast<jule::Str>((*(_47119_ln)));;
}



inline jule::Slice<jule::U8> _1c80c60c9_resume(_1c80c4e0d_lex* _self_) {
	jule::I64 _4967_i = (*(_self_))._field_pos;;
	for (; (_4967_i < (*((*(_self_))._field_file))._field_Data.len()); (_4967_i)++) {
		{
			jule::I32 _4984_r = static_cast<jule::I32>((*(*(_self_))._field_file.alloc)._field_Data[_4967_i]);;
			if (_1c80b9771_IsSpace(_4984_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4984_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a8a92884:;
						{
							_1a59c0199_newLine(_self_);
						}
					}
					else {
						_case_begin_1a8a9218b:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1a8a92455:;
				};
				goto _iter_next_1a8a91069;
			};
			jule::I64 _5108_j = _4967_i;;
			for (; (_5108_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5108_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5108_j] == '\n')) {
						goto _iter_end_1a8a91652;
					};
				}
			_iter_next_1a8a91652:;
			}
			_iter_end_1a8a91652:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4967_i, _5108_j);;
		}
	_iter_next_1a8a91069:;
	}
	_iter_end_1a8a91069:;;
	return nullptr;;
}



inline void _1c80c6382_lexLineComment(_1c80c4e0d_lex* _self_, jule::Ptr<_1c80b653c_Token>* _52135_token) {
	jule::I64 _5223_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5254_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if (((_5254_r == '\n') || (_5254_r == '\r'))) {
				goto _iter_end_1a8a94ea2;
			};
		}
	_iter_next_1a8a94ea2:;
	}
	_iter_end_1a8a94ea2:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52135_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52135_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5223_start, (*(_self_))._field_pos));
	};
}



inline void _1c80c663a_lexRangeComment(_1c80c4e0d_lex* _self_, jule::Ptr<_1c80b653c_Token>* _53636_token) {
	jule::I64 _5373_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5404_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_5404_r == '\r')) {
				goto _iter_next_1a8a98615;
			};
			if ((_5404_r == '\n')) {
				_1a59c0199_newLine(_self_);
				goto _iter_next_1a8a98615;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5404_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53636_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53636_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5373_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1a8a98615:;
	}
	_iter_end_1a8a98615:;;
	_1c80c5491_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1c80c697b_num(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _56420_txt) {
	jule::Str __jule_func_result;
	if (((*(_56420_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1c80c3725_hexNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a8aa1046;
	};
	__jule_func_result=_1c80c3549_octalNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a8aa1046;
	};
	__jule_func_result=_1c80c1cd9_binaryNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1a8aa1046;
	};
	__jule_func_result=_1c80c1a20_commonNum(_56420_txt);
	_julec_label_1a8aa1046:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1c80c6cbc_escapeSeq(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _58626_txt) {
	jule::Str _5877_seq = jule::Str();;
	if (((*(_58626_txt)).len() < 2LL)) {
		goto _julec_label_1a8aa4ca3;
	};
	{
		auto &_match_expr{ (*(_58626_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a8aa2dd3:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58626_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a8aa3048:;
			{
				_5877_seq=_1c80c3d41_bigUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a8aa2b19:;
			{
				_5877_seq=_1c80c410a_littleUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a8aa2b80:;
			{
				_5877_seq=_1c80c43c4_hexByteEscape(_58626_txt);
			}
		}
		else {
			_case_begin_1a8aa2564:;
			{
				_5877_seq=_1c80c468d_byteEscape(_58626_txt);
			}
		}
		_match_end_1a8aa29a4:;
	};
	_julec_label_1a8aa4ca3:;
	if ((_5877_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1c80c5491_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5877_seq.len();
	return _5877_seq;;
}



inline jule::Str _1c80c71b8_getRune(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw) {
	if (((!(_61637_raw)) && ((*(_61624_txt))[0LL] == '\\'))) {
		return _1c80c6cbc_escapeSeq(_self_, _61624_txt);;
	};
	jule::I32 _6203_r;
	jule::I64 _6206_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213561e31_DecodeRune((*(_61624_txt)));
		_6203_r = __jule_assign_result.__jule_result_arg0;
		_6206_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6206_n;
	return jule::Str::from_rune(_6203_r);;
}



inline jule::Str _1a59bea17_lexRune(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _62524_txt) {
	_1e9a030bc_StrBuilder _6267_run = static__1e9a034eb_New(8LL);;
	_1e9a03d15_WriteByte(&_6267_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _6297_n = 0LL;;
	jule::I64 _6307_i = 1LL;;
	for (; (_6307_i < (*(_62524_txt)).len()); (_6307_i)++) {
		{
			if (((*(_62524_txt))[_6307_i] == '\r')) {
				goto _iter_next_1a8aa9181;
			};
			if (((*(_62524_txt))[_6307_i] == '\n')) {
				_1c80c5491_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1a59c0199_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6424_part = (*(_62524_txt)).slice(_6307_i);;
			jule::Str _6434_r = _1c80c71b8_getRune(_self_, &(_6424_part), false);;
			_1e9a03a5c_WriteStr(&_6267_run, _6434_r);
			(*(_self_))._field_column+=_213563c24_RuneCountStr(_6434_r);
			if (_6434_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1a8aa9181;
			};
			if ((_6434_r.len() > 1LL)) {
				_6307_i+=(_6434_r.len() - 1LL);
			};
			(_6297_n)++;
		}
	_iter_next_1a8aa9181:;
	}
	_iter_end_1a8aa9181:;;
	if ((_6297_n == 0LL)) {
		_1c80c5491_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_6297_n > 1LL)) {
		_1c80c5491_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _1e9a04354_Str(&_6267_run);;
}



inline jule::Str _1a59bec15_lexStr(_1c80c4e0d_lex* _self_) {
	_1e9a030bc_StrBuilder _6667_s = static__1e9a034eb_New(16LL);;
	jule::U8 _6673_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6693_raw = (_6673_mark == '`');;
	_1e9a03d15_WriteByte(&_6667_s, _6673_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6744_ch = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_6744_ch == '\r')) {
				goto _iter_next_1a8aae4b6;
			};
			if ((_6744_ch == '\n')) {
				_1a59c0199_newLine(_self_);
				if ((!(_6693_raw))) {
					_1c80c5491_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6868_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6874_r = _1c80c71b8_getRune(_self_, &(_6868_part), _6693_raw);;
			_1e9a03a5c_WriteStr(&_6667_s, _6874_r);
			(*(_self_))._field_column+=_213563c24_RuneCountStr(_6874_r);
			if ((_6744_ch == _6673_mark)) {
				goto _iter_end_1a8aae4b6;
			};
		}
	_iter_next_1a8aae4b6:;
	}
	_iter_end_1a8aae4b6:;;
	return _1e9a04354_Str(&_6667_s);;
}



inline void _1a59c0199_newLine(_1c80c4e0d_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1a59c070a_isOp(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1c80b653c_Token>* _70763_t) {
	if ((!(_1c80c0090_bytesHasPrefix(_70721_txt, _70734_kind)))) {
		return false;;
	};
	(*((*(_70763_t))))._field_Kind=_70734_kind;
	(*((*(_70763_t))))._field_Id=_70745_id;
	(*(_self_))._field_pos+=_70734_kind.len();
	return true;;
}



inline jule::Bool _1a59c0b06_lexBasicOps(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1c80b653c_Token>* _71745_tok) {
	{
		auto expr = &(_1c80be688_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ab629d:;
		if (it != expr_end) {
			_1c80bde29_kindPair *_71810_pair = it;
			{
				if (_1a59c070a_isOp(_self_, &(_71727_txt), (*(_71810_pair))._field_kind, (*(_71810_pair))._field_id, _71745_tok)) {
					return true;;
				};
			}
			_iter_next_1a8ab629d:;
			++it;
			goto _iter_begin_1a8ab629d;
		}
		_iter_end_1a8ab629d:;
	};
	return false;;
}



inline jule::Bool _1a59c1002_lexId(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1c80b653c_Token>* _72640_t) {
	jule::Str _7273_lex = _1c80c5d43_id(_self_, _72622_txt);;
	if ((_7273_lex).empty()) {
		return false;;
	};
	(*((*(_72640_t))))._field_Kind=_7273_lex;
	(*((*(_72640_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1a59c13ed_lexNum(_1c80c4e0d_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1c80b653c_Token>* _73641_t) {
	jule::Str _7373_lex = _1c80c697b_num(_self_, _73623_txt);;
	if ((_7373_lex).empty()) {
		return false;;
	};
	(*((*(_73641_t))))._field_Kind=_7373_lex;
	(*((*(_73641_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1c80b653c_Token> _1a59c1684_token(_1c80c4e0d_lex* _self_) {
	jule::Ptr<_1c80b653c_Token> _7487_t = jule::new_ptr<_1c80b653c_Token>(_1c80b653c_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7533_txt = _1c80c60c9_resume(_self_);;
	if ((_7533_txt == nullptr)) {
		return _7487_t;;
	};
	(*(_7487_t))._field_Column=(*(_self_))._field_column;
	(*_7487_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1a59c13ed_lexNum(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1a8abd3e8:;
			{
				goto _match_end_1a8abb2b4;
			}
		}
		else if ((_7533_txt[0LL] == '\'')) {
			_case_begin_1a8abd45e:;
			{
				(*_7487_t.alloc)._field_Kind=_1a59bea17_lexRune(_self_, &(_7533_txt));
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (((_7533_txt[0LL] == '\"') || (_7533_txt[0LL] == '`'))) {
			_case_begin_1a8abd4c5:;
			{
				(*_7487_t.alloc)._field_Kind=_1a59bec15_lexStr(_self_);
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (_1c80c0090_bytesHasPrefix(&(_7533_txt), jule::Str::lit("//", 2))) {
			_case_begin_1a8abbe1e:;
			{
				_1c80c6382_lexLineComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1c80c0090_bytesHasPrefix(&(_7533_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1a8abbe85:;
			{
				_1c80c663a_lexRangeComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1a59c0b06_lexBasicOps(_self_, _7533_txt, &(_7487_t))) {
			_case_begin_1a8abbeeb:;
			{
				goto _match_end_1a8abb2b4;
			}
		}
		else if (_1a59c1002_lexId(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1a8abc062:;
			{
				{
					auto expr = &(_1c80be358_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8abeeaa:;
					if (it != expr_end) {
						_1c80bde29_kindPair *_78511_pair = it;
						{
							if (((*(_78511_pair))._field_kind == (*_7487_t.alloc)._field_Kind)) {
								(*_7487_t.alloc)._field_Id=(*(_78511_pair))._field_id;
								goto _iter_end_1a8abeeaa;
							};
						}
						_iter_next_1a8abeeaa:;
						++it;
						goto _iter_begin_1a8abeeaa;
					}
					_iter_end_1a8abeeaa:;
				};
			}
		}
		else {
			_case_begin_1a8abbda8:;
			{
				jule::I32 _7924_r;
				jule::I64 _7927_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213561e31_DecodeRune(_7533_txt);
					_7924_r = __jule_assign_result.__jule_result_arg0;
					_7927_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1c80c5491_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_7924_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7927_sz;
				return _7487_t;;
			}
		}
		_match_end_1a8abb2b4:;
	};
	(*(_self_))._field_column+=_213563c24_RuneCountStr((*_7487_t.alloc)._field_Kind);
	return _7487_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c80c4e0d_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c2058_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c2e6b_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c3389_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c3e6c_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c4577_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c4841_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c4c1a_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c5017_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c539c_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c5699_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a59c5d09_IsUnsafe(_1a59c5996_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c5996_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a59c659b_AutoSized(_1a59c6238_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c6238_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c6986_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c6d60_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c82a1_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c856a_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c8b75_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c8d95_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c923b_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c9615_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59c9abb_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ca35d_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ca737_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59cab11_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59caeda_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59cb3b4_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59cb86a_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a59cc34e_Unhandled(_1a59cbeca_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1a59cc5d5_Ignored(_1a59cbeca_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59cbeca_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59cc9c0_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59cd2ea_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59cd7a1_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ce0cb_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ce807_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d0264_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d08c4_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d0bc1_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d1177_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d1551_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d192a_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d1c27_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d2387_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d291a_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d382d_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d3e8d_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a59d4a4e_IsSelf(_1a59d46ca_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d46ca_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a59d5e90_IsAnon(_1a59d5b2c_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d5b2c_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d6cd7_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d71b1_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a59d7c94_IsInf(_1a59d7931_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d7931_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a59d85be_IsWhileNext(_1a59d825b_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d825b_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d8b63_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d903c_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d9416_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d98bc_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59d9c96_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59da24c_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59da989_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59dae40_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59db759_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59dc073_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59dc529_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59dd0da_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59dd915_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59de075_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59de33e_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59dec35_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59e0472_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59e0ad2_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a59e6ed4_FieldIns> _1a59e2287_instance(jule::Ptr<_1a59e1dd0_Field> _self_) {
	return jule::new_ptr<_1a59e6ed4_FieldIns>(_1a59e6ed4_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59e1dd0_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59e3de3_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a59e7a84_StructIns> _1a59e5268_instance(jule::Ptr<_1a59e4d06_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	jule::Ptr<_1a59e7a84_StructIns> _1007_ins = jule::new_ptr<_1a59e7a84_StructIns>(_1a59e7a84_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1a59e6ed4_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()), ._field_Refers=static__1a5a11273_new(), });;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dbb7a1:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> _10715_s = *it;
			{
				(*(_1007_ins))._field_Statics=jule::append((*_1007_ins.alloc)._field_Statics,jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::make({jule::new_ptr<_1a5ab1ee4_Var>((*(_10715_s)))}));
			}
			_iter_next_1a8dbb7a1:;
			++it;
			goto _iter_begin_1a8dbb7a1;
		}
		_iter_end_1a8dbb7a1:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dbba6a:;
		if (it != expr_end) {
			jule::Ptr<_1a59e1dd0_Field> _11115_f = *it;
			{
				(*_1007_ins.alloc)._field_Fields=jule::append((*_1007_ins.alloc)._field_Fields,jule::Slice<jule::Ptr<_1a59e6ed4_FieldIns>>::make({_1a59e2287_instance(_11115_f)}));
				if ((((!((*_11115_f.alloc)._field_Mutable)) && ((*((*_11115_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1a5b526d3_Mutable((*(*_11115_f.alloc)._field_Kind.alloc)._field_Kind))) {
					(*_1007_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1a8dbba6a:;
			++it;
			goto _iter_begin_1a8dbba6a;
		}
		_iter_end_1a8dbba6a:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_1007_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_1007_ins.alloc)._field_Methods=jule::Slice<jule::Ptr<_1a5a09cc7_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len());
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8dc12cd:;
			if (it != expr_end) {
				jule::Ptr<_1a5a09cc7_Fn> _12216_f = *it;
				{
					jule::Ptr<_1a5a09cc7_Fn> _1239_fins = jule::new_ptr<_1a5a09cc7_Fn>((*(_12216_f)));;
					(*_1239_fins.alloc)._field_Instances=nullptr;
					(*_1007_ins.alloc)._field_Methods=jule::append((*_1007_ins.alloc)._field_Methods,jule::Slice<jule::Ptr<_1a5a09cc7_Fn>>::make({_1239_fins}));
				}
				_iter_next_1a8dc12cd:;
				++it;
				goto _iter_begin_1a8dc12cd;
			}
			_iter_end_1a8dc12cd:;
		};
	};
	return _1007_ins;;
}



inline jule::Ptr<_1a59e7a84_StructIns> _1a59e5576_appendInstance(_1a59e4d06_Struct* _self_, jule::Ptr<_1a59e7a84_StructIns>* _13435_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dc1641:;
		if (it != expr_end) {
			jule::Ptr<_1a59e7a84_StructIns> _14015_ains = *it;
			{
				if (_1a59e8700_Same(_14015_ains.ptr(), (*(_13435_ins)))) {
					return _14015_ains;;
				};
			}
			_iter_next_1a8dc1641:;
			++it;
			goto _iter_begin_1a8dc1641;
		}
		_iter_end_1a8dc1641:;
	};
	{ jule::Slice<jule::Ptr<_1a59e7a84_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13435_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1a5a09cc7_Fn> _1a59e5972_FindMethod(_1a59e4d06_Struct* _self_, jule::Str _15226_ident, jule::Bool _15238_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dc3b60:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _15315_f = *it;
			{
				if ((((*(_15315_f))._field_Statically == _15238_statically) && ((*_15315_f.alloc)._field_Ident == _15226_ident))) {
					return _15315_f;;
				};
			}
			_iter_next_1a8dc3b60:;
			++it;
			goto _iter_begin_1a8dc3b60;
		}
		_iter_end_1a8dc3b60:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a59e5cb3_FindStatic(_1a59e4d06_Struct* _self_, jule::Str _16326_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dc5205:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> _16415_v = *it;
			{
				if (((*(_16415_v))._field_Ident == _16326_ident)) {
					return _16415_v;;
				};
			}
			_iter_next_1a8dc5205:;
			++it;
			goto _iter_begin_1a8dc5205;
		}
		_iter_end_1a8dc5205:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a59e1dd0_Field> _1a59e6104_FindField(_1a59e4d06_Struct* _self_, jule::Str _17425_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dc6e4e:;
		if (it != expr_end) {
			jule::Ptr<_1a59e1dd0_Field> _17515_f = *it;
			{
				if (((*(_17515_f))._field_Ident == _17425_ident)) {
					return _17515_f;;
				};
			}
			_iter_next_1a8dc6e4e:;
			++it;
			goto _iter_begin_1a8dc6e4e;
		}
		_iter_end_1a8dc6e4e:;
	};
	return nullptr;;
}



inline jule::Bool _1a59e6445_IsImplements(_1a59e4d06_Struct* _self_, jule::Ptr<_1a5a1d181_Trait> _18424_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dc7e1c:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> *_18510_it = it;
			{
				if ((_18424_t == (*(_18510_it)))) {
					return true;;
				};
			}
			_iter_next_1a8dc7e1c:;
			++it;
			goto _iter_begin_1a8dc7e1c;
		}
		_iter_end_1a8dc7e1c:;
	};
	return false;;
}



inline jule::Bool _1a59e6786_IsUses(_1a59e4d06_Struct* _self_, jule::Ptr<_1a59e4d06_Struct> _19418_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dc88ac:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> *_19510_u = it;
			{
				while ((_19418_s == (*(_19510_u)))) {
					{
						return true;;
					}
				_iter_next_1a8dc93b3:;
				}
				_iter_end_1a8dc93b3:;;
			}
			_iter_next_1a8dc88ac:;
			++it;
			goto _iter_begin_1a8dc88ac;
		}
		_iter_end_1a8dc88ac:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59e4d06_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59e6ed4_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a59e7e08_Str(_1a59e7a84_StructIns* _self_) {
	_1e9a030bc_StrBuilder _2397_kind = static__1e9a034eb_New(32LL);;
	_1e9a03a5c_WriteStr(&_2397_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1e9a03d15_WriteByte(&_2397_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8dcc295:;
			if (it != expr_end) {
				jule::I64 _2438_i = it - expr->begin();
				jule::Ptr<_1a5b4e46b_InsGeneric> *_24311_g = it;
				{
					_1e9a03a5c_WriteStr(&_2397_kind, _1a5b5121a_Str((*((*(_24311_g))))._field_Kind.ptr()));
					if ((_2438_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1e9a03d15_WriteByte(&_2397_kind, ',');
					};
				}
				_iter_next_1a8dcc295:;
				++it;
				_2438_i++;
				goto _iter_begin_1a8dcc295;
			}
			_iter_end_1a8dcc295:;
		};
		_1e9a03d15_WriteByte(&_2397_kind, ']');
	};
	return _1e9a04354_Str(&_2397_kind);;
}



inline jule::Bool _1a59e8249_Equal(jule::Ptr<_1a59e7a84_StructIns> _self_, jule::Ptr<_1a5b50d52_TypeKind> _25518_other) {
	jule::Ptr<_1a59e7a84_StructIns> _2563_s = _1a5b54a26_Struct(_25518_other.ptr());;
	if ((_2563_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2563_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2563_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _2697_i = 0LL;;
	for (; (_2697_i < (*_self_.alloc)._field_Generics.len()); (_2697_i)++) {
		{
			if ((!(_1a5b5155b_Equal((*((*_self_.alloc)._field_Generics[_2697_i]))._field_Kind, (*((*(_2563_s))._field_Generics[_2697_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1a8dd0870:;
	}
	_iter_end_1a8dd0870:;;
	return true;;
}



inline jule::Bool _1a59e8700_Same(_1a59e7a84_StructIns* _self_, jule::Ptr<_1a59e7a84_StructIns> _28316_s) {
	if ((((*(_self_))._field_Decl != (*(_28316_s))._field_Decl) || ((*_28316_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dd3da1:;
		if (it != expr_end) {
			jule::I64 _2877_i = it - expr->begin();
			jule::Ptr<_1a5b4e46b_InsGeneric> *_28710_g = it;
			{
				jule::Ptr<_1a5b4e46b_InsGeneric> _2884_g2 = (*_28316_s.alloc)._field_Generics[_2877_i];;
				if ((((*((*((*(_28710_g))))._field_Kind))._field_BindIdent != (*(*(_2884_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a5b5155b_Equal((*(*(_28710_g)).alloc)._field_Kind, (*_2884_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1a8dd3da1:;
			++it;
			_2877_i++;
			goto _iter_begin_1a8dd3da1;
		}
		_iter_end_1a8dd3da1:;
	};
	return true;;
}



inline jule::Ptr<_1a5a09cc7_Fn> _1a59e8aeb_FindMethod(_1a59e7a84_StructIns* _self_, jule::Str _29826_ident, jule::Bool _29838_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dd68cb:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _29915_f = *it;
			{
				if ((((*(_29915_f))._field_Statically == _29838_statically) && ((*_29915_f.alloc)._field_Ident == _29826_ident))) {
					return _29915_f;;
				};
			}
			_iter_next_1a8dd68cb:;
			++it;
			goto _iter_begin_1a8dd68cb;
		}
		_iter_end_1a8dd68cb:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a59e6ed4_FieldIns> _1a59e8e3c_FindField(_1a59e7a84_StructIns* _self_, jule::Str _30925_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dd6e4d:;
		if (it != expr_end) {
			jule::Ptr<_1a59e6ed4_FieldIns> _31015_f = *it;
			{
				if (((*((*(_31015_f))._field_Decl))._field_Ident == _30925_ident)) {
					return _31015_f;;
				};
			}
			_iter_next_1a8dd6e4d:;
			++it;
			goto _iter_begin_1a8dd6e4d;
		}
		_iter_end_1a8dd6e4d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a59e927d_FindStatic(_1a59e7a84_StructIns* _self_, jule::Str _32026_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dd8da6:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> _32115_v = *it;
			{
				if (((*(_32115_v))._field_Ident == _32026_ident)) {
					return _32115_v;;
				};
			}
			_iter_next_1a8dd8da6:;
			++it;
			goto _iter_begin_1a8dd8da6;
		}
		_iter_end_1a8dd8da6:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59e7a84_StructIns _Src) {
	_Stream << _1a59e7e08_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59eb989_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ebe84_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ec35d_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ec88b_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ecc32_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ed02e_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ed5b2_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ede64_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ee33d_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59ee7e4_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a59eec9a_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Captured:" << _Src._field_Captured << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a00174_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a0062a_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a00bad_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a01241_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a01ad2_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a01e78_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a02352_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a0264e_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a02a28_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a02e02_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a032cb_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a036a5_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a03b5b_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a04112_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a044db_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a047d8_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a04ad5_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a04eae_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a05388_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a05762_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a05e16_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a06103_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a0639a_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a06697_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a06a71_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a06d6d_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a07a72_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5a0bc30_ParamIns> _1a5a08688_instance(jule::Ptr<_1a5a08303_Param> _self_) {
	return jule::new_ptr<_1a5a0bc30_ParamIns>(_1a5a0bc30_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1a5a0891e_IsSelf(_1a5a08303_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1a5a08ba5_IsRef(_1a5a08303_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a08303_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a5a0a24a_IsVoid(_1a5a09cc7_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1a5a0a4d1_IsMethod(_1a5a09cc7_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1a5a0a767_IsEntryPoint(_1a5a09cc7_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1a5a0a9ed_IsInit(_1a5a09cc7_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1a5a0ac84_IsAnon(_1a5a09cc7_Fn* _self_) {
	return _1c80b91dd_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1a5a0b01a_AnyVar(_1a5a09cc7_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1a5a0cca8_FnIns> _1a5a0b2a1_instanceForce(jule::Ptr<_1a5a09cc7_Fn> _self_) {
	jule::Ptr<_1a5a0cca8_FnIns> _1017_ins = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1a5a4bc4d_Scope>(), ._field_Refers=static__1a5a11273_new(), });;
	(*(_1017_ins))._field_Params=jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8de0d7a:;
		if (it != expr_end) {
			jule::Ptr<_1a5a08303_Param> _10815_p = *it;
			{
				(*_1017_ins.alloc)._field_Params=jule::append((*_1017_ins.alloc)._field_Params,jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>>::make({_1a5a08688_instance(_10815_p)}));
			}
			_iter_next_1a8de0d7a:;
			++it;
			goto _iter_begin_1a8de0d7a;
		}
		_iter_end_1a8de0d7a:;
	};
	if (((*((*_1017_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1017_ins.alloc)._field_Result=(*((*(*(*_1017_ins.alloc)._field_Decl.alloc)._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _1017_ins;;
}



inline jule::Ptr<_1a5a0cca8_FnIns> _1a5a0b537_instance(jule::Ptr<_1a5a09cc7_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	return _1a5a0b2a1_instanceForce(_self_);;
}



inline jule::Ptr<_1a5a0cca8_FnIns> _1a5a0b845_appendInstance(_1a5a09cc7_Fn* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _12935_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1a5a0cca8_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1a5a0cca8_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8de659a:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0cca8_FnIns> _14515_ains = *it;
			{
				if (_1a5a0e815_Same(_14515_ains.ptr(), (*(_12935_ins)))) {
					return _14515_ains;;
				};
			}
			_iter_next_1a8de659a:;
			++it;
			goto _iter_begin_1a8de659a;
		}
		_iter_end_1a8de659a:;
	};
	{ jule::Slice<jule::Ptr<_1a5a0cca8_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a09cc7_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5a0c093_Str(_1a5a0bc30_ParamIns* _self_) {
	_1e9a030bc_StrBuilder _1677_s = static__1e9a034eb_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_1e9a03a5c_WriteStr(&_1677_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_1e9a03a5c_WriteStr(&_1677_s, jule::Str::lit("&_:", 3));
	};
	if (_1a5a0891e_IsSelf((*(_self_))._field_Decl)) {
		if (_1a5a08ba5_IsRef((*(_self_))._field_Decl)) {
			_1e9a03d15_WriteByte(&_1677_s, '&');
		};
		_1e9a03a5c_WriteStr(&_1677_s, jule::Str::lit("self", 4));
		return _1e9a04354_Str(&_1677_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_1e9a03a5c_WriteStr(&_1677_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1e9a03a5c_WriteStr(&_1677_s, _1a5b5121a_Str((*(_self_))._field_Kind));
	};
	return _1e9a04354_Str(&_1677_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a0bc30_ParamIns _Src) {
	_Stream << _1a5a0c093_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a0d0e9_Str(_1a5a0cca8_FnIns* _self_) {
	;
	return _1a5a0eb56_GetKindStr(_self_, false);;
}



inline jule::Bool _1a5a0d43a_Equal(jule::Ptr<_1a5a0cca8_FnIns> _self_, jule::Ptr<_1a5b50d52_TypeKind> _21918_other) {
	jule::Ptr<_1a5a0cca8_FnIns> _2203_f = _1a5b54790_Fn(_21918_other.ptr());;
	if ((_2203_f == nullptr)) {
		return false;;
	};
	return _1a5a0d8d0_EqualFn(_self_, &(_2203_f));;
}



inline jule::Bool _1a5a0d8d0_EqualFn(jule::Ptr<_1a5a0cca8_FnIns> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _23021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_23021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Unsafety != (*(*((*(_23021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1a5a0a24a_IsVoid((*_self_.alloc)._field_Decl) != _1a5a0a24a_IsVoid((*((*(_23021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1a5a0bc30_ParamIns>,jule::Ptr<_1a5a0bc30_ParamIns>> _2403_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1a5a0bc30_ParamIns>,jule::Ptr<_1a5a0bc30_ParamIns>>((void*)__jule_anon1a8e01330, nullptr, nullptr);;
	if (((*((*(_23021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _2727_i = 0LL;;
	for (; (_2727_i < (*_self_.alloc)._field_Params.len()); (_2727_i)++) {
		{
			if ((!(_2403_checkParams((*_self_.alloc)._field_Params[_2727_i], (*((*(_23021_f))))._field_Params[_2727_i])))) {
				return false;;
			};
		}
	_iter_next_1a8e069c8:;
	}
	_iter_end_1a8e069c8:;;
	if ((!(_1a5a0a24a_IsVoid((*_self_.alloc)._field_Decl)))) {
		if ((!(_1a5b5155b_Equal((*_self_.alloc)._field_Result, (*((*(_23021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1a5a0dc21_equalTrait(jule::Ptr<_1a5a0cca8_FnIns> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _28924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Ident != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1a5a0d8d0_EqualFn(_self_, _28924_other)))) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Generics.len() != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> _1a5a0dea7_Types(_1a5a0cca8_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1a8e0cbee:;
			{
				return nullptr;;
			}
		}
		else if ((_1a5b552c9_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1a8e0cc65:;
			{
				return jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1a8e0c78c:;
			{
				return (*(_1a5b552c9_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1a8e0c68d:;
	};
}



inline jule::Bool _1a5a0e23d_IsBuiltin(_1a5a0cca8_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1a5a0e4c4_IsAnon(_1a5a0cca8_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1a5a0ac84_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1a5a0e815_Same(_1a5a0cca8_FnIns* _self_, jule::Ptr<_1a5a0cca8_FnIns> _33216_f) {
	if ((((*(_self_))._field_Decl != (*(_33216_f))._field_Decl) || ((*_33216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e11153:;
		if (it != expr_end) {
			jule::I64 _3377_i = it - expr->begin();
			jule::Ptr<_1a5b4e46b_InsGeneric> *_33710_g = it;
			{
				jule::Ptr<_1a5b4e46b_InsGeneric> _3384_g2 = (*_33216_f.alloc)._field_Generics[_3377_i];;
				if ((((*((*((*(_33710_g))))._field_Kind))._field_BindIdent != (*(*(_3384_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1a5b5155b_Equal((*(*(_33710_g)).alloc)._field_Kind, (*_3384_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1a8e11153:;
			++it;
			_3377_i++;
			goto _iter_begin_1a8e11153;
		}
		_iter_end_1a8e11153:;
	};
	return true;;
}



inline jule::Str _1a5a0eb56_GetKindStr(_1a5a0cca8_FnIns* _self_, jule::Bool _34922_ident) {
	_1e9a030bc_StrBuilder _3507_s = static__1e9a034eb_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_1e9a03a5c_WriteStr(&_3507_s, jule::Str::lit("unsafe ", 7));
	};
	_1e9a03a5c_WriteStr(&_3507_s, jule::Str::lit("fn", 2));
	if ((_34922_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1e9a03d15_WriteByte(&_3507_s, ' ');
		_1e9a03a5c_WriteStr(&_3507_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_1e9a03d15_WriteByte(&_3507_s, '(');
	jule::I64 _3643_n = (*(_self_))._field_Params.len();;
	if ((_3643_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8e16477:;
			if (it != expr_end) {
				jule::I64 _3668_i = it - expr->begin();
				jule::Ptr<_1a5a0bc30_ParamIns> *_36611_p = it;
				{
					_1e9a03a5c_WriteStr(&_3507_s, _1a5a0c093_Str((*(_36611_p)).ptr()));
					if ((_3668_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1e9a03d15_WriteByte(&_3507_s, ',');
					};
				}
				_iter_next_1a8e16477:;
				++it;
				_3668_i++;
				goto _iter_begin_1a8e16477;
			}
			_iter_end_1a8e16477:;
		};
	};
	_1e9a03d15_WriteByte(&_3507_s, ')');
	if ((*(*(_self_))._field_Decl.alloc)._field_Exceptional) {
		_1e9a03d15_WriteByte(&_3507_s, '!');
	};
	if ((!(_1a5a0a24a_IsVoid((*(_self_))._field_Decl)))) {
		_1e9a03d15_WriteByte(&_3507_s, ':');
		_1e9a03a5c_WriteStr(&_3507_s, _1a5b5121a_Str((*(_self_))._field_Result.ptr()));
	};
	return _1e9a04354_Str(&_3507_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a0cca8_FnIns _Src) {
	_Stream << _1a5a0d0e9_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a5a10e87_ReferenceStack> static__1a5a11273_new(void) {
	return jule::new_ptr<_1a5a10e87_ReferenceStack>(_1a5a10e87_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1a5a1166e_Len(_1a5a10e87_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1a5a119b0_At(_1a5a10e87_ReferenceStack* _self_, jule::I64 _6818_i) {
	return (*(_self_))._field_buffer[_6818_i];;
}



inline void _1a5a11c68_Push(_1a5a10e87_ReferenceStack* _self_, jule::Any _7324_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7324_ref); };
}



inline jule::Bool _1a97ec39b_Exist(_1a5a10e87_ReferenceStack* _self_, jule::Ptr<_1a5a0cca8_FnIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97ed721:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1a97ed721:;
			++it;
			goto _iter_begin_1a97ed721;
		}
		_iter_end_1a97ed721:;
	};
	return false;;
}

inline jule::Bool _1a9813280_Exist(_1a5a10e87_ReferenceStack* _self_, jule::Ptr<_1a5ab1ee4_Var> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a98145b1:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1a98145b1:;
			++it;
			goto _iter_begin_1a98145b1;
		}
		_iter_end_1a98145b1:;
	};
	return false;;
}

inline jule::Bool _1a8c3b269_Exist(_1a5a10e87_ReferenceStack* _self_, jule::Ptr<_1a59e7a84_StructIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c3c633:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1a8c3c633:;
			++it;
			goto _iter_begin_1a8c3c633;
		}
		_iter_end_1a8c3c633:;
	};
	return false;;
}

inline jule::Bool _1a9b84205_Exist(_1a5a10e87_ReferenceStack* _self_, jule::Ptr<_1a5a1d181_Trait> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b85503:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1a9b85503:;
			++it;
			goto _iter_begin_1a9b85503;
		}
		_iter_end_1a9b85503:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a10e87_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a12494_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1a5a178ea_pushErr(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1c80b653c_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args) {
	{ jule::Slice<_1d1c6d64c_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a5a8bcc1_compilerErr(_33224_token, true, _33239_fmt, _33252_args)); };
}



inline void _1a5a1817b_pushSuggestion(_1a5a16e49_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args) {
	{
		_1a5a8d377_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34130_fmt, _34143_args);
	};
}



inline jule::Bool _1a5a18577_checkCppUseDeclPath(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a59dc073_UseDecl>* _34536_decl, jule::Str* _34553_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3463_ext = _1d190d3ec_Ext((*(_34553_path)));;
	if (((!(_1d1c61310_IsValidHeaderExt(_3463_ext))) && (!(_1d1c615c9_IsValidCppExt(_3463_ext))))) {
		_1a5a178ea_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3463_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_214674e66_Status> _3533_info = ({
		auto except = static__1d191061e_Of((*(_34553_path)));
		(except.ok()) ? (except.result) : ({{
			_1a5a178ea_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_214674e66_Status>(nullptr);});
	});;
	if (_214675340_IsDir(_3533_info.ptr())) {
		_1a5a178ea_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a18885_buildCppHeaderImport(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a59dc073_UseDecl>* _36541_decl) {
	jule::Str _3667_path = (*((*(_36541_decl))))._field_LinkPath;;
	if ((!(_1d1c61035_IsStdHeaderPath((*((*(_36541_decl))))._field_LinkPath)))) {
		_3667_path=_1d190d166_Join(jule::Slice<jule::Str>::make({_1c80bc477_Dir((*((*((*(_36541_decl))))._field_Token))._field_File.ptr()),(*((*(_36541_decl))))._field_LinkPath}));
		jule::Bool _3708_ok = _1a5a18577_checkCppUseDeclPath(_self_, _36541_decl, &(_3667_path));;
		if ((!(_3708_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d190d6b6_Abs(_3667_path);
			_3667_path = __jule_assign_result.__jule_result_arg0;
			_3708_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3708_ok))) {
			_1a5a178ea_pushErr(_self_, &((*((*(_36541_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36541_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1a5a6dcd6_ImportInfo>(_1a5a6dcd6_ImportInfo{._field_Token=(*((*(_36541_decl))))._field_Token, ._field_Path=_3667_path, ._field_LinkPath=(*((*(_36541_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a18bc6_buildStdImport(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a59dc073_UseDecl>* _39335_decl) {
	jule::Str _3957_path = (*((*(_39335_decl))))._field_LinkPath.slice(5LL);;
	_3957_path=_1d190876b_Replace(_3957_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_3957_path=_1d190d166_Join(jule::Slice<jule::Str>::make({_1d1d32dd7_PathStdlib,_3957_path}));
	jule::Bool _3989_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d190d6b6_Abs(_3957_path);
		_3957_path = __jule_assign_result.__jule_result_arg0;
		_3989_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_3989_ok))) {
		_1a5a178ea_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_214674e66_Status> _4053_info = ({
		auto except = static__1d191061e_Of(_3957_path);
		(except.ok()) ? (except.result) : ({{
			_1a5a178ea_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_214674e66_Status>(nullptr);});
	});;
	if ((!(_214675340_IsDir(_4053_info.ptr())))) {
		_1a5a178ea_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4153_i = (_1d19042e4_FindLast((*((*(_39335_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4163_ident = (*((*(_39335_decl))))._field_LinkPath.slice(_4153_i);;
	return jule::new_ptr<_1a5a6dcd6_ImportInfo>(_1a5a6dcd6_ImportInfo{._field_Token=(*((*(_39335_decl))))._field_Token, ._field_Path=_3957_path, ._field_LinkPath=(*((*(_39335_decl))))._field_LinkPath, ._field_Ident=_4163_ident, ._field_Alias=(*((*(_39335_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39335_decl))))._field_Full, ._field_Package=jule::new_ptr<_1a5a71c0c_Package>(_1a5a71c0c_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a19017_buildIdentImport(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a59dc073_UseDecl>* _43338_decl) {
	if ((((*((*(_43338_decl))))._field_LinkPath.equal("_", 1) || (_1d1903a41_Find((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _1d1903249_HasSuffix((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1a5a178ea_pushErr(_self_.ptr(), &((*((*(_43338_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4413_modPath = ((_1a5a6adc1_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a5a69e36_GetModPath((*_self_.alloc)._field_importer.data);;
	if ((_4413_modPath.len() == 0LL)) {
		_1a5a178ea_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1a5a1817b_pushSuggestion(_self_, jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4487_path = (*((*(_43338_decl))))._field_LinkPath;;
	_4487_path=_1d190876b_Replace(_4487_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_4487_path=_1d190d166_Join(jule::Slice<jule::Str>::make({_4413_modPath,_4487_path}));
	jule::Bool _4529_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d190d6b6_Abs(_4487_path);
		_4487_path = __jule_assign_result.__jule_result_arg0;
		_4529_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_4529_ok))) {
		_1a5a178ea_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_214674e66_Status> _4593_info = ({
		auto except = static__1d191061e_Of(_4487_path);
		(except.ok()) ? (except.result) : ({{
			_1a5a178ea_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_214674e66_Status>(nullptr);});
	});;
	if ((!(_214675340_IsDir(_4593_info.ptr())))) {
		_1a5a178ea_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4693_i = (_1d19042e4_FindLast((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4703_ident = (*((*(_43338_decl))))._field_LinkPath.slice(_4693_i);;
	return jule::new_ptr<_1a5a6dcd6_ImportInfo>(_1a5a6dcd6_ImportInfo{._field_Token=(*((*(_43338_decl))))._field_Token, ._field_Path=_4487_path, ._field_LinkPath=(*((*(_43338_decl))))._field_LinkPath, ._field_Ident=_4703_ident, ._field_Alias=(*((*(_43338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1a5a71c0c_Package>(_1a5a71c0c_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a19358_buildImport(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a59dc073_UseDecl>* _48733_decl) {
	{
		
		if ((*((*(_48733_decl))))._field_Binded) {
			_case_begin_1a8e55cd0:;
			{
				return _1a5a18885_buildCppHeaderImport(_self_.ptr(), _48733_decl);;
			}
		}
		else if ((*((*(_48733_decl))))._field_Std) {
			_case_begin_1a8e561cb:;
			{
				return _1a5a18bc6_buildStdImport(_self_.ptr(), _48733_decl);;
			}
		}
		else {
			_case_begin_1a8e55c69:;
			{
				return _1a5a19017_buildIdentImport(_self_, _48733_decl);;
			}
		}
		_match_end_1a8e55b6a:;
	};
}



inline jule::Bool _1a5a19699_checkDuplicateUseDecl(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _49838_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5a6dcd6_ImportInfo> _5003_lpkg = _1a5b14c6c_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>>((void*)__jule_anon_1a8e58398, jule::Ptr<__jule_anon_1a8e58398_ctx>::make(__jule_anon_1a8e58398_ctx{._49838_pkg=_49838_pkg}).as<jule::Uintptr>(), __jule_anon_1a8e58398_ctx_handler));;
	if ((_5003_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1a5a178ea_pushErr(_self_, &((*((*(_49838_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49838_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1a5a1817b_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1a5a19a0c_implImportSelections(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _51241_imp, jule::Ptr<_1a59dc073_UseDecl>* _51264_decl) {
	(*((*(_51241_imp))))._field_Selected=(*((*(_51264_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51241_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e5ad5c:;
		if (it != expr_end) {
			jule::Ptr<_1c80b653c_Token> _51410_item = *it;
			{
				{
					auto expr = &((*((*(_51241_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8e5b753:;
					if (it != expr_end) {
						jule::Ptr<_1c80b653c_Token> _51511_citem = *it;
						{
							if ((_51410_item == _51511_citem)) {
								goto _iter_end_1a8e5b753;
							} else if (((*(_51410_item))._field_Kind == (*(_51511_citem))._field_Kind)) {
								_1a5a178ea_pushErr(_self_, &(_51410_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*_51410_item.alloc)._field_Kind, &__jule_any_type4)}));
								_1a5a1817b_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1a8e5b753;
							};
						}
						_iter_next_1a8e5b753:;
						++it;
						goto _iter_begin_1a8e5b753;
					}
					_iter_end_1a8e5b753:;
				};
			}
			_iter_next_1a8e5ad5c:;
			++it;
			goto _iter_begin_1a8e5ad5c;
		}
		_iter_end_1a8e5ad5c:;
	};
}



inline jule::Str _1a5a19d4d_getAsLinkPath(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Str _52734_path) {
	if (_1d1902dc5_HasPrefix(_52734_path, _1d1d32dd7_PathStdlib)) {
		(_52734_path).mut_slice(_1d1d32dd7_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _1d190876b_Replace(_52734_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5333_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d190d6b6_Abs(((_1a5a6adc1_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a5a69e36_GetModPath((*(_self_))._field_importer.data));
		_5333_root = __jule_assign_result.__jule_result_arg0;
	});
	(_52734_path).mut_slice(_5333_root.len());;
	if ((_52734_path[0LL] == 92LLU)) {
		(_52734_path).mut_slice(1LL);;
	};
	return _1d190876b_Replace(_52734_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1a5a1a26b_pushCycleError(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a5a16e49_symbolBuilder>* _54132_sb, jule::Str _54152_path, _1e9a030bc_StrBuilder* _54168_message) {
	;
	jule::Str _5433_refersTo = _1d1c6daae_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1a5a19d4d_getAsLinkPath(_self_, _1c80bc477_Dir((*((*((*(_54132_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1a5a19d4d_getAsLinkPath(_self_, _54152_path), &__jule_any_type4)}));;
	jule::Str _5473_m = _1e9a04354_Str(_54168_message);;
	_1e9a03a5c_WriteStr(_54168_message, _1d1902a0c_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1e9a03a5c_WriteStr(_54168_message, _5433_refersTo);
	_1e9a03d15_WriteByte(_54168_message, '\n');
	_1e9a03a5c_WriteStr(_54168_message, _5473_m);
}



inline void _1a5a1a689_pushCrossCycleError(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a5a16e49_symbolBuilder>* _55437_target, jule::Ptr<_1a5a6dcd6_ImportInfo>* _55462_imp, jule::Ptr<_1c80b653c_Token>* _55481_errorToken) {
	_1e9a030bc_StrBuilder _5557_message = static__1e9a034eb_New(32LL);;
	_1a5a1a26b_pushCycleError(_self_, &(_self_), (*((*(_55462_imp))))._field_Path, &(_5557_message));
	jule::Ptr<_1a5a16e49_symbolBuilder> _5597_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1a5a16e49_symbolBuilder> _5607_old = _self_;;
	while (((*(_5597_owner))._field_owner != nullptr)) {
		{
			_1a5a1a26b_pushCycleError(_self_, &((*_5607_old.alloc)._field_owner), _1c80bc477_Dir((*((*_5607_old.alloc)._field_table))._field_File.ptr()), &(_5557_message));
			if (((*_5597_owner.alloc)._field_owner == (*(_55437_target)))) {
				_1a5a1a26b_pushCycleError(_self_, _55437_target, _1c80bc477_Dir((*(*_5597_owner.alloc)._field_table.alloc)._field_File), &(_5557_message));
				goto _iter_end_1a8e653a5;
			};
			_5607_old=_5597_owner;
			_5597_owner=(*_5597_owner.alloc)._field_owner;
		}
	_iter_next_1a8e653a5:;
	}
	_iter_end_1a8e653a5:;;
	_1a5a178ea_pushErr(_self_, _55481_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_1e9a04354_Str(&_5557_message), &__jule_any_type4)}));
}



inline jule::Bool _1a5a1aa85_checkImportCycles(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a5a6dcd6_ImportInfo> _57734_imp, jule::Ptr<_1a59dc073_UseDecl>* _57753_decl) {
	if (((*(_57734_imp))._field_Path == _1c80bc477_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1a5a178ea_pushErr(_self_, &((*((*(_57753_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1a5a19d4d_getAsLinkPath(_self_, (*_57734_imp.alloc)._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a5a16e49_symbolBuilder> _5877_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1a8e6aca1:;
	if ((_1c80bc477_Dir((*(*(_5877_owner))._field_table.alloc)._field_File) == (*_57734_imp.alloc)._field_Path)) {
		_1a5a1a689_pushCrossCycleError(_self_, &(_5877_owner), &(_57734_imp), &((*((*(_57753_decl))))._field_Token));
		return false;;
	};
	if (((*_5877_owner.alloc)._field_owner != nullptr)) {
		_5877_owner=(*_5877_owner.alloc)._field_owner;
		goto _julec_label_1a8e6aca1;
	};
	return true;;
}



inline void _1a5a1aea3_checkPackageAccessibility(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a59dc073_UseDecl>* _60842_decl, jule::Str* _60859_mod, jule::Str* _60870_path) {
	if (((((_1a5a6adc1_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a5a69e36_GetModPath((*(_self_))._field_importer.data) != (*(_60859_mod))) && _1d1907391_Contains((*(_60870_path)), jule::Str::lit("internal", 8)))) {
		_1a5a178ea_pushErr(_self_, &((*((*(_60842_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a5a1b39e_importPackage(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _61435_imp, jule::Ptr<_1a59dc073_UseDecl>* _61458_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61435_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5a6dcd6_ImportInfo> _6197_port = ((_1a5a6adc1_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1a5a6a5b8_GetImport((*(_self_))._field_importer.data, (*((*(_61435_imp))))._field_Path);;
	if ((_6197_port != nullptr)) {
		(*((*(_61435_imp))))._field_Package=(*_6197_port.alloc)._field_Package;
		(*((*(_61435_imp))))._field_Duplicate=true;
		jule::Str _6244_oldMod = ((_1a5a6adc1_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a5a69e36_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1a5a6adc1_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a5a69ba0_SetModPath((*_self_.alloc)._field_importer.data, ((_1a5a6adc1_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a5a6a277_ModById((*_self_.alloc)._field_importer.data, (*((*(_61435_imp))))._field_ModId));
		_1a5a1aea3_checkPackageAccessibility(_self_, _61458_decl, &(_6244_oldMod), &((*_6197_port.alloc)._field_Path));
		((_1a5a6adc1_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a5a69ba0_SetModPath((*_self_.alloc)._field_importer.data, _6244_oldMod);
	} else {
		if ((!(_1a5a1aa85_checkImportCycles(_self_, (*(_61435_imp)), _61458_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6334_oldMod = ((_1a5a6adc1_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a5a69e36_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1a5a6adc1_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a5a69ba0_SetModPath((*_self_.alloc)._field_importer.data, _6334_oldMod);
		});;
		if ((*((*(_61435_imp))))._field_Std) {
			((_1a5a6adc1_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a5a69ba0_SetModPath((*_self_.alloc)._field_importer.data, _1d1d32dd7_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1a59c2058_Ast>> _6388_asts;
		jule::Slice<_1d1c6d64c_Log> _63818_errors;
		({
			__jule_tuple_sx_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = ((_1a5a6adc1_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a5a6a9b4_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_61435_imp))))._field_Path, (!((*((*(_61435_imp))))._field_Std)));
			_6388_asts = __jule_assign_result.__jule_result_arg0;
			_63818_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63818_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63818_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1a5a1aea3_checkPackageAccessibility(_self_, _61458_decl, &(_6334_oldMod), &((*((*(_61435_imp))))._field_Path));
		{
			auto expr = &(_6388_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8e7c235:;
			if (it != expr_end) {
				jule::Ptr<_1a59c2058_Ast> _64616_ast = *it;
				{
					jule::Ptr<_1a5b14783_SymbolTable> _64713_table = nullptr;;
					({
						__jule_tuple_x_1a5b14783_SymbolTable__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a5b71735_buildSymbols(&(_64616_ast), &((*_self_.alloc)._field_importer), _self_);
						_64713_table = __jule_assign_result.__jule_result_arg0;
						_63818_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63818_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63818_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61435_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61435_imp))))._field_Package.alloc)._field_Files,jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>::make({_64713_table}));
				}
				_iter_next_1a8e7c235:;
				++it;
				goto _iter_begin_1a8e7c235;
			}
			_iter_end_1a8e7c235:;
		};
	};
	_1a5a19a0c_implImportSelections(_self_, _61435_imp, _61458_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a1b6e0_importUseDecl(jule::Ptr<_1a5a16e49_symbolBuilder> _self_, jule::Ptr<_1a59dc073_UseDecl>* _66135_decl) {
	jule::Ptr<_1a5a6dcd6_ImportInfo> _6627_imp = _1a5a19358_buildImport(_self_, _66135_decl);;
	if ((_6627_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6687_ok = _1a5a19699_checkDuplicateUseDecl(_self_, &(_6627_imp));;
	if ((!(_6687_ok))) {
		return nullptr;;
	};
	_6687_ok=_1a5a1b39e_importPackage(_self_, &(_6627_imp), _66135_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Imports,jule::Slice<jule::Ptr<_1a5a6dcd6_ImportInfo>>::make({_6627_imp}));
	if (_6687_ok) {
		((_1a5a6adc1_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1a5a6ac6c_Imported((*_self_.alloc)._field_importer.data, _6627_imp);
		return _6627_imp;;
	};
	return nullptr;;
}



inline void _1a5a1b8dd_importUseDecls(jule::Ptr<_1a5a16e49_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e82bb9:;
		if (it != expr_end) {
			jule::Ptr<_1a59dc073_UseDecl> _68315_decl = *it;
			{
				_1a5a1b6e0_importUseDecl(_self_, &(_68315_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1a8e82bb9;
				};
			}
			_iter_next_1a8e82bb9:;
			++it;
			goto _iter_begin_1a8e82bb9;
		}
		_iter_end_1a8e82bb9:;
	};
}



inline void _1a5a1bb96_appendNode(_1a5a16e49_symbolBuilder* _self_, _1a59c2e6b_Node* _69231_node) {
	{
		auto &_match_expr{ (*(_69231_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a8e83219:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,jule::Slice<jule::Ptr<_1a5a467e7_Impl>>::make({_1a5a16883_buildImpl((*(_69231_node))._field_Data.unsafe_cast_ptr<_1a59e0ad2_Impl>())}));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a8e8422b:;
			{
				jule::Ptr<_1a5b50060_TypeAlias> _6978_ta = _1a5a12dce_buildTypeAlias((*(_69231_node))._field_Data.unsafe_cast_ptr<_1a59da989_TypeAliasDecl>());;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>::make({_6978_ta}));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a8e84292:;
			{
				jule::Ptr<_1a59e4d06_Struct> _7008_srct = _1a5a13770_buildStruct((*(_69231_node))._field_Data.unsafe_cast_ptr<_1a59dec35_StructDecl>());;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,jule::Slice<jule::Ptr<_1a59e4d06_Struct>>::make({_7008_srct}));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a8e84308:;
			{
				jule::Ptr<_1a5a09cc7_Fn> _7038_f = _1a5a1441e_buildFunc((*(_69231_node))._field_Data.unsafe_cast_ptr<_1a59d5b2c_FnDecl>());;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,jule::Slice<jule::Ptr<_1a5a09cc7_Fn>>::make({_7038_f}));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a8e8436e:;
			{
				jule::Ptr<_1a5a1d181_Trait> _7068_t = _1a5a14c6b_buildTrait((*(_69231_node))._field_Data.unsafe_cast_ptr<_1a59e0472_TraitDecl>());;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,jule::Slice<jule::Ptr<_1a5a1d181_Trait>>::make({_7068_t}));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a8e843d5:;
			{
				jule::Ptr<_1a5ab1ee4_Var> _7098_v = _1a5a16300_buildVar((*(_69231_node))._field_Data.unsafe_cast_ptr<_1a59d6cd7_VarDecl>());;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::make({_7098_v}));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a8e84a23:;
			{
				jule::Ptr<_1a5a2088c_Enum> _7128_e = _1a5a157e9_buildEnum((*(_69231_node))._field_Data.unsafe_cast_ptr<_1a59dd0da_EnumDecl>());;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,jule::Slice<jule::Ptr<_1a5a2088c_Enum>>::make({_7128_e}));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1a8e84a89:;
			{
				jule::Ptr<_1a5a22097_TypeEnum> _7158_e = _1a5a16036_buildTypeEnum((*(_69231_node))._field_Data.unsafe_cast_ptr<_1a59de075_TypeEnumDecl>());;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,jule::Slice<jule::Ptr<_1a5a22097_TypeEnum>>::make({_7158_e}));
			}
		}
		else {
			_case_begin_1a8e8411b:;
			{
				_1a5a178ea_pushErr(_self_, &((*(_69231_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8e840b6:;
	};
}



inline void _1a5a1bd94_appendNodes(_1a5a16e49_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e8dd18:;
		if (it != expr_end) {
			_1a59c2e6b_Node _72315_node = *it;
			{
				_1a5a1bb96_appendNode(_self_, &(_72315_node));
			}
			_iter_next_1a8e8dd18:;
			++it;
			goto _iter_begin_1a8e8dd18;
		}
		_iter_end_1a8e8dd18:;
	};
}



inline void _1a5a1c14c_pushDirectivePass(_1a5a16e49_symbolBuilder* _self_, jule::Ptr<_1a59c3389_Directive>* _72838_d) {
	if (((*((*(_72838_d))))._field_Args.len() == 0LL)) {
		_1a5a178ea_pushErr(_self_, &((*((*(_72838_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72838_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1c80b653c_Token> _7334_arg = (*((*(_72838_d))))._field_Args[1LL];;
		_1a5a178ea_pushErr(_self_, &(_7334_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1c80b653c_Token> _7373_arg = (*((*(_72838_d))))._field_Args[0LL];;
	if (((*(_7373_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a5a178ea_pushErr(_self_, &(_7373_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7373_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a5a178ea_pushErr(_self_, &(_7373_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,jule::Slice<_1a5a12494_Pass>::make({_1a5a12494_Pass{._field_Token=(*((*(_72838_d))))._field_Tag, ._field_Text=(*_7373_arg.alloc)._field_Kind.slice(1LL, ((*_7373_arg.alloc)._field_Kind.len() - 1LL))}}));
}



inline void _1a5a1c34a_appendTopDirectives(_1a5a16e49_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e944a0:;
		if (it != expr_end) {
			jule::Ptr<_1a59c3389_Directive> _75515_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75515_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1a8e95e52:;
						{
							_1a5a1c14c_pushDirectivePass(_self_, &(_75515_d));
						}
					}
					_match_end_1a8e95d86:;
				};
			}
			_iter_next_1a8e944a0:;
			++it;
			goto _iter_begin_1a8e944a0;
		}
		_iter_end_1a8e944a0:;
	};
}



inline void _1a5a1c548_build(jule::Ptr<_1a5a16e49_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1a5b14783_SymbolTable>(_1a5b14783_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, });
	_1a5a1c34a_appendTopDirectives(_self_);
	_1a5a1b8dd_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1a5a1bd94_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a16e49_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5a1d549_Str(_1a5a1d181_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a5a1d88a_Equal(jule::Ptr<_1a5a1d181_Trait> _self_, jule::Ptr<_1a5b50d52_TypeKind> _2518_other) {
	jule::Ptr<_1a5a1d181_Trait> _263_trt = _1a5b54cac_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1a5a09cc7_Fn> _1a5a1dd30_FindMethod(_1a5a1d181_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e99829:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1a8e99829:;
			++it;
			goto _iter_begin_1a8e99829;
		}
		_iter_end_1a8e99829:;
	};
	return _1a5a1e4b2_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1a5a09cc7_Fn> _1a5a1e4b2_findMethodInherit(_1a5a1d181_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e9ba4b:;
		if (it != expr_end) {
			jule::Ptr<_1a5b58024_TypeSymbol> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Kind == nullptr)) {
					goto _iter_next_1a8e9ba4b;
				};
				jule::Ptr<_1a5a1d181_Trait> _608_t = _1a5b54cac_Trait((*_5615_i.alloc)._field_Kind.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1a5a09cc7_Fn> _629_f2 = _1a5a1dd30_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1a8e9ba4b:;
			++it;
			goto _iter_begin_1a8e9ba4b;
		}
		_iter_end_1a8e9ba4b:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a1d181_Trait _Src) {
	_Stream << _1a5a1d549_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a5a201c7_AutoExpr(_1a5a1ed20_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a1ed20_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5a20c11_Str(_1a5a2088c_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a5a21052_Equal(jule::Ptr<_1a5a2088c_Enum> _self_, jule::Ptr<_1a5b50d52_TypeKind> _3818_other) {
	jule::Ptr<_1a5a2088c_Enum> _393_enm = _1a5b53c56_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1a5a1ed20_EnumItem> _1a5a21481_FindItem(_1a5a2088c_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ea1259:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1ed20_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1a8ea1259:;
			++it;
			goto _iter_begin_1a8ea1259;
		}
		_iter_end_1a8ea1259:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a2088c_Enum _Src) {
	_Stream << _1a5a20c11_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a219c0_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5a223d8_Str(_1a5a22097_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a5a22729_Equal(jule::Ptr<_1a5a22097_TypeEnum> _self_, jule::Ptr<_1a5b50d52_TypeKind> _8018_other) {
	jule::Ptr<_1a5a22097_TypeEnum> _813_tenm = _1a5b53edc_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1a5a219c0_TypeEnumItem> _1a5a22b58_FindItem(_1a5a22097_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ea34d1:;
		if (it != expr_end) {
			jule::Ptr<_1a5a219c0_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1a8ea34d1:;
			++it;
			goto _iter_begin_1a8ea34d1;
		}
		_iter_end_1a8ea34d1:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a22097_TypeEnum _Src) {
	_Stream << _1a5a223d8_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a25573_Str(_1a5a251ee_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1a5a258b4_Equal(jule::Ptr<_1a5a251ee_comptimeRange> _self_, jule::Ptr<_1a5b50d52_TypeKind> _3618_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a251ee_comptimeRange _Src) {
	_Stream << _1a5a25573_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a2608a_Str(_1a5a25bc2_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1a5a263cb_Equal(jule::Ptr<_1a5a25bc2_comptimeStructField> _self_, jule::Ptr<_1a5b50d52_TypeKind> _4618_other) {
	return false;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a26970__Name(jule::Ptr<_1a5a25bc2_comptimeStructField> _self_, jule::Ptr<_1a5b1b823_Eval>* _5023_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _5038_fc) {
	if (((*((*(_5038_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_5023_e)).ptr(), (*((*((*(_5038_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _557_constant = static__1b916ce0a_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Model=jule::Any(_557_constant, &__jule_any_type19), ._field_Constant=_557_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a26d6b__Type(jule::Ptr<_1a5a25bc2_comptimeStructField> _self_, jule::Ptr<_1a5b1b823_Eval>* _6327_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _6342_fc) {
	if (((*((*(_6342_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_6327_e)).ptr(), (*((*((*(_6342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_6327_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a27267__Public(jule::Ptr<_1a5a25bc2_comptimeStructField> _self_, jule::Ptr<_1a5b1b823_Eval>* _7129_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _7144_fc) {
	if (((*((*(_7144_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_7129_e)).ptr(), (*((*((*(_7144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _767_constant = static__1b916cb41_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_767_constant, &__jule_any_type19), ._field_Constant=_767_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a27575_subIdent(jule::Ptr<_1a5a25bc2_comptimeStructField> _self_, jule::Str* _8426_ident) {
	{
		auto &_match_expr{ (*(_8426_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a7371bae:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _878_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a7372ebd, jule::Ptr<__jule_anon_1a7372ebd_ctx>::make(__jule_anon_1a7372ebd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a7372ebd_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1a7371c58:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _948_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a7374e6a, jule::Ptr<__jule_anon_1a7374e6a_ctx>::make(__jule_anon_1a7374e6a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a7374e6a_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a7371cd0:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _1018_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a7376dc3, jule::Ptr<__jule_anon_1a7376dc3_ctx>::make(__jule_anon_1a7376dc3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a7376dc3_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_1018_method));;
			}
		}
		else {
			_case_begin_1a73718c3:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7371a49:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a25bc2_comptimeStructField _Src) {
	_Stream << _1a5a2608a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a27c07_Str(_1a5a27883_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1a5a28048_Equal(jule::Ptr<_1a5a27883_comptimeStructFields> _self_, jule::Ptr<_1a5b50d52_TypeKind> _12018_other) {
	return false;;
}



inline void _1a5a284bb_ready(_1a5a27883_comptimeStructFields* _self_, jule::Ptr<_1a5ab1ee4_Var>* _12426_keyA, jule::Ptr<_1a5ab1ee4_Var>* _12443_keyB) {
	if (((*(_12426_keyA)) != nullptr)) {
		(*((*(_12426_keyA))))._field_Constant=true;
		(*((*(_12426_keyA))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		(*((*(_12426_keyA))))._field_Kind=(*(_1c798b077_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12443_keyB)) != nullptr)) {
		(*((*(_12443_keyB))))._field_Constant=true;
		(*((*(_12443_keyB))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		(*((*(_12443_keyB))))._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a25bc2_comptimeStructField>(), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data6)})});
	};
}



inline void _1a5a288d9_step(_1a5a27883_comptimeStructFields* _self_, jule::I64 _14520_i, jule::Ptr<_1a5ab1ee4_Var>* _14533_keyA, jule::Ptr<_1a5ab1ee4_Var>* _14550_keyB) {
	if (((*(_14533_keyA)) != nullptr)) {
		(*((*((*((*(_14533_keyA))))._field_Value))._field_Data))._field_Constant=static__1b916c5ad_NewI64(static_cast<jule::I64>(_14520_i));
		(*(*(*((*(_14533_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_14533_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_14550_keyB)) != nullptr)) {
		(*(_1a5b55a7c_comptimeStructField((*((*((*(_14550_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14520_i];
	};
}



inline jule::I64 _1a5a28b70_len(_1a5a27883_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a27883_comptimeStructFields _Src) {
	_Stream << _1a5a27c07_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a29302_Str(_1a5a28e7d_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1a5a29643_Equal(jule::Ptr<_1a5a28e7d_comptimeStatic> _self_, jule::Ptr<_1a5b50d52_TypeKind> _16918_other) {
	return false;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a29c70__Name(jule::Ptr<_1a5a28e7d_comptimeStatic> _self_, jule::Ptr<_1a5b1b823_Eval>* _17323_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _17338_fc) {
	if (((*((*(_17338_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_17323_e)).ptr(), (*((*((*(_17338_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _1787_constant = static__1b916ce0a_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Model=jule::Any(_1787_constant, &__jule_any_type19), ._field_Constant=_1787_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a2a16b__Type(jule::Ptr<_1a5a28e7d_comptimeStatic> _self_, jule::Ptr<_1a5b1b823_Eval>* _18627_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _18642_fc) {
	if (((*((*(_18642_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_18627_e)).ptr(), (*((*((*(_18642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_18627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a2a567__Public(jule::Ptr<_1a5a28e7d_comptimeStatic> _self_, jule::Ptr<_1a5b1b823_Eval>* _19429_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _19444_fc) {
	if (((*((*(_19444_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_19429_e)).ptr(), (*((*((*(_19444_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _1997_constant = static__1b916cb41_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_1997_constant, &__jule_any_type19), ._field_Constant=_1997_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a2a8a8_subIdent(jule::Ptr<_1a5a28e7d_comptimeStatic> _self_, jule::Str* _20726_ident) {
	{
		auto &_match_expr{ (*(_20726_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a73878a6:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _2108_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a7388b93, jule::Ptr<__jule_anon_1a7388b93_ctx>::make(__jule_anon_1a7388b93_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a7388b93_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_2108_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1a7387950:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _2178_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a738aaeb, jule::Ptr<__jule_anon_1a738aaeb_ctx>::make(__jule_anon_1a738aaeb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a738aaeb_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_2178_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a73879c7:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _2248_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a738ca54, jule::Ptr<__jule_anon_1a738ca54_ctx>::make(__jule_anon_1a738ca54_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a738ca54_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_2248_method));;
			}
		}
		else {
			_case_begin_1a73875ba:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7387741:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a28e7d_comptimeStatic _Src) {
	_Stream << _1a5a29302_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a2aeb3_Str(_1a5a2ab3e_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1a5a2b304_Equal(jule::Ptr<_1a5a2ab3e_comptimeStatics> _self_, jule::Ptr<_1a5b50d52_TypeKind> _24318_other) {
	return false;;
}



inline void _1a5a2b777_ready(_1a5a2ab3e_comptimeStatics* _self_, jule::Ptr<_1a5ab1ee4_Var>* _24726_keyA, jule::Ptr<_1a5ab1ee4_Var>* _24743_keyB) {
	if (((*(_24726_keyA)) != nullptr)) {
		(*((*(_24726_keyA))))._field_Constant=true;
		(*((*(_24726_keyA))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		(*((*(_24726_keyA))))._field_Kind=(*(_1c798b077_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24743_keyB)) != nullptr)) {
		(*((*(_24743_keyB))))._field_Constant=true;
		(*((*(_24743_keyB))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		(*((*(_24743_keyB))))._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a28e7d_comptimeStatic>(), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data8)})});
	};
}



inline void _1a5a2bb95_step(_1a5a2ab3e_comptimeStatics* _self_, jule::I64 _26820_i, jule::Ptr<_1a5ab1ee4_Var>* _26833_keyA, jule::Ptr<_1a5ab1ee4_Var>* _26850_keyB) {
	if (((*(_26833_keyA)) != nullptr)) {
		(*((*((*((*(_26833_keyA))))._field_Value))._field_Data))._field_Constant=static__1b916c5ad_NewI64(static_cast<jule::I64>(_26820_i));
		(*(*(*((*(_26833_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_26833_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_26850_keyB)) != nullptr)) {
		(*(_1a5b57386_comptimeStatic((*((*((*(_26850_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26820_i];
	};
}



inline jule::I64 _1a5a2be2b_len(_1a5a2ab3e_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a2ab3e_comptimeStatics _Src) {
	_Stream << _1a5a2aeb3_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a2c6bd_Str(_1a5a2c239_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1a5a2ca0e_Equal(jule::Ptr<_1a5a2c239_comptimeEnumField> _self_, jule::Ptr<_1a5b50d52_TypeKind> _29218_other) {
	return false;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a2ce82__Name(jule::Ptr<_1a5a2c239_comptimeEnumField> _self_, jule::Ptr<_1a5b1b823_Eval>* _29623_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _29638_fc) {
	if (((*((*(_29638_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_29623_e)).ptr(), (*((*((*(_29638_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _3017_constant = static__1b916ce0a_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Model=jule::Any(_3017_constant, &__jule_any_type19), ._field_Constant=_3017_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a2d2c3_subIdent(jule::Ptr<_1a5a2c239_comptimeEnumField> _self_, jule::Str* _30926_ident) {
	{
		auto &_match_expr{ (*(_30926_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a7398697:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _3128_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a7399874, jule::Ptr<__jule_anon_1a7399874_ctx>::make(__jule_anon_1a7399874_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a7399874_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_3128_method));;
			}
		}
		else {
			_case_begin_1a73983bc:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7398543:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a2c239_comptimeEnumField _Src) {
	_Stream << _1a5a2c6bd_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a2d955_Str(_1a5a2d5d1_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1a5a2dc96_Equal(jule::Ptr<_1a5a2d5d1_comptimeEnumFields> _self_, jule::Ptr<_1a5b50d52_TypeKind> _33118_other) {
	return false;;
}



inline void _1a5a2e219_ready(_1a5a2d5d1_comptimeEnumFields* _self_, jule::Ptr<_1a5ab1ee4_Var>* _33526_keyA, jule::Ptr<_1a5ab1ee4_Var>* _33543_keyB) {
	if (((*(_33526_keyA)) != nullptr)) {
		(*((*(_33526_keyA))))._field_Constant=true;
		(*((*(_33526_keyA))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		(*((*(_33526_keyA))))._field_Kind=(*(_1c798b077_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33543_keyB)) != nullptr)) {
		(*((*(_33543_keyB))))._field_Constant=true;
		(*((*(_33543_keyB))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		(*((*(_33543_keyB))))._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a2c239_comptimeEnumField>(), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data10)})});
	};
}



inline void _1a5a2e637_step(_1a5a2d5d1_comptimeEnumFields* _self_, jule::I64 _35620_i, jule::Ptr<_1a5ab1ee4_Var>* _35633_keyA, jule::Ptr<_1a5ab1ee4_Var>* _35650_keyB) {
	if (((*(_35633_keyA)) != nullptr)) {
		(*((*((*((*(_35633_keyA))))._field_Value))._field_Data))._field_Constant=static__1b916c5ad_NewI64(static_cast<jule::I64>(_35620_i));
		(*(*(*((*(_35633_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_35633_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_35650_keyB)) != nullptr)) {
		(*(_1a5b56099_comptimeEnumField((*((*((*(_35650_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35620_i];
	};
}



inline jule::I64 _1a5a2e8bd_len(_1a5a2d5d1_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a2d5d1_comptimeEnumFields _Src) {
	_Stream << _1a5a2d955_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a30050_Str(_1a5a2ebcb_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1a5a30391_Equal(jule::Ptr<_1a5a2ebcb_comptimeParam> _self_, jule::Ptr<_1a5b50d52_TypeKind> _38018_other) {
	return false;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a30b00__Name(jule::Ptr<_1a5a2ebcb_comptimeParam> _self_, jule::Ptr<_1a5b1b823_Eval>* _38423_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _38438_fc) {
	if (((*((*(_38438_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_38423_e)).ptr(), (*((*((*(_38438_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _3897_constant = static__1b916ce0a_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Model=jule::Any(_3897_constant, &__jule_any_type19), ._field_Constant=_3897_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a30eeb__Type(jule::Ptr<_1a5a2ebcb_comptimeParam> _self_, jule::Ptr<_1a5b1b823_Eval>* _39727_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _39742_fc) {
	if (((*((*(_39742_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_39727_e)).ptr(), (*((*((*(_39742_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_39727_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a313e7__Variadic(jule::Ptr<_1a5a2ebcb_comptimeParam> _self_, jule::Ptr<_1a5b1b823_Eval>* _40531_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _40546_fc) {
	if (((*((*(_40546_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_40531_e)).ptr(), (*((*((*(_40546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _4107_constant = static__1b916cb41_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_4107_constant, &__jule_any_type19), ._field_Constant=_4107_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a317e3__Reference(jule::Ptr<_1a5a2ebcb_comptimeParam> _self_, jule::Ptr<_1a5b1b823_Eval>* _41832_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _41847_fc) {
	if (((*((*(_41847_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_41832_e)).ptr(), (*((*((*(_41847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _4237_constant = static__1b916cb41_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_4237_constant, &__jule_any_type19), ._field_Constant=_4237_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a31b34_subIdent(jule::Ptr<_1a5a2ebcb_comptimeParam> _self_, jule::Str* _43126_ident) {
	{
		auto &_match_expr{ (*(_43126_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a73ad0b3:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _4348_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a73ae3e4, jule::Ptr<__jule_anon_1a73ae3e4_ctx>::make(__jule_anon_1a73ae3e4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a73ae3e4_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_4348_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1a73ad129:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _4418_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a73b134c, jule::Ptr<__jule_anon_1a73b134c_ctx>::make(__jule_anon_1a73b134c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a73b134c_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_4418_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1a73ad1a1:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _4488_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a73b32a5, jule::Ptr<__jule_anon_1a73b32a5_ctx>::make(__jule_anon_1a73b32a5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a73b32a5_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_4488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a73ad228:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _4558_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a73b520d, jule::Ptr<__jule_anon_1a73b520d_ctx>::make(__jule_anon_1a73b520d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a73b520d_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_4558_method));;
			}
		}
		else {
			_case_begin_1a73acc83:;
			{
				return nullptr;;
			}
		}
		_match_end_1a73ace09:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a2ebcb_comptimeParam _Src) {
	_Stream << _1a5a30050_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a321a6_Str(_1a5a31d65_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1a5a324e7_Equal(jule::Ptr<_1a5a31d65_comptimeParams> _self_, jule::Ptr<_1a5b50d52_TypeKind> _47418_other) {
	return false;;
}



inline void _1a5a3296a_ready(_1a5a31d65_comptimeParams* _self_, jule::Ptr<_1a5ab1ee4_Var>* _47826_keyA, jule::Ptr<_1a5ab1ee4_Var>* _47843_keyB) {
	if (((*(_47826_keyA)) != nullptr)) {
		(*((*(_47826_keyA))))._field_Constant=true;
		(*((*(_47826_keyA))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		(*((*(_47826_keyA))))._field_Kind=(*(_1c798b077_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47843_keyB)) != nullptr)) {
		(*((*(_47843_keyB))))._field_Constant=true;
		(*((*(_47843_keyB))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		(*((*(_47843_keyB))))._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a2ebcb_comptimeParam>(), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data12)})});
	};
}



inline void _1a5a32d88_step(_1a5a31d65_comptimeParams* _self_, jule::I64 _49920_i, jule::Ptr<_1a5ab1ee4_Var>* _49933_keyA, jule::Ptr<_1a5ab1ee4_Var>* _49950_keyB) {
	if (((*(_49933_keyA)) != nullptr)) {
		(*((*((*((*(_49933_keyA))))._field_Value))._field_Data))._field_Constant=static__1b916c5ad_NewI64(static_cast<jule::I64>(_49920_i));
		(*(*(*((*(_49933_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_49933_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_49950_keyB)) != nullptr)) {
		(*(_1a5b565b6_comptimeParam((*((*((*(_49950_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49920_i];
	};
}



inline jule::I64 _1a5a3311e_len(_1a5a31d65_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a31d65_comptimeParams _Src) {
	_Stream << _1a5a321a6_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a337a1_Str(_1a5a3342c_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1a5a33ae2_Equal(jule::Ptr<_1a5a3342c_comptimeTypeInfos> _self_, jule::Ptr<_1a5b50d52_TypeKind> _52318_other) {
	return false;;
}



inline void _1a5a34065_ready(_1a5a3342c_comptimeTypeInfos* _self_, jule::Ptr<_1a5ab1ee4_Var>* _52726_keyA, jule::Ptr<_1a5ab1ee4_Var>* _52743_keyB) {
	if (((*(_52726_keyA)) != nullptr)) {
		(*((*(_52726_keyA))))._field_Constant=true;
		(*((*(_52726_keyA))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		(*((*(_52726_keyA))))._field_Kind=(*(_1c798b077_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52743_keyB)) != nullptr)) {
		(*((*(_52743_keyB))))._field_Constant=true;
		(*((*(_52743_keyB))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		(*((*(_52743_keyB))))._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a34a27_comptimeTypeInfo>(), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data15)})});
	};
}



inline void _1a5a34483_step(_1a5a3342c_comptimeTypeInfos* _self_, jule::I64 _54820_i, jule::Ptr<_1a5ab1ee4_Var>* _54833_keyA, jule::Ptr<_1a5ab1ee4_Var>* _54850_keyB) {
	if (((*(_54833_keyA)) != nullptr)) {
		(*((*((*((*(_54833_keyA))))._field_Value))._field_Data))._field_Constant=static__1b916c5ad_NewI64(static_cast<jule::I64>(_54820_i));
		(*(*(*((*(_54833_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_54833_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_54850_keyB)) != nullptr)) {
		(*((*((*((*(_54850_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_54820_i], (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data15);
	};
}



inline jule::I64 _1a5a34719_len(_1a5a3342c_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a3342c_comptimeTypeInfos _Src) {
	_Stream << _1a5a337a1_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a34d9b_Str(_1a5a34a27_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1a5b5121a_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1a5a351dc_Equal(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b50d52_TypeKind> _57218_other) {
	return false;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3583b__Str(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _57622_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _57637_fc) {
	if (((*((*(_57637_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_57622_e)).ptr(), (*((*((*(_57637_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _5817_constant = static__1b916ce0a_NewStr(_1a5b5121a_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Model=jule::Any(_5817_constant, &__jule_any_type19), ._field_Constant=_5817_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a35c37__Kind(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _58927_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _58942_fc) {
	if (((*((*(_58942_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_58927_e)).ptr(), (*((*((*(_58942_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5a2088c_Enum> _5947_enm = _1a5a70a41_FindEnum(_1a5a42051_findComptimePackage(&((*((*(_58927_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1a5a1ed20_EnumItem> _59511_item = nullptr;;
	{
		
		if (_1a5b521b6_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1a73ca9d7:;
			{
				_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1a5b54a26_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a73ca8e9:;
			{
				_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1a5b54cac_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a73ca5a8:;
			{
				_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1a5b539c0_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a73ca61e:;
			{
				if (_1a5b61758_IsUnsafe(_1a5b539c0_Ptr((*_self_.alloc)._field_base).ptr())) {
					_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1a5b53739_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a73ca685:;
			{
				_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1a5b53c56_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a73ca6eb:;
			{
				_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1a5b55043_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a73cb246:;
			{
				_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1a5b54509_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a73cb2ac:;
			{
				_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1a5b54273_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a73cb323:;
			{
				_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1a5b54790_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a73cb389:;
			{
				_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1a5b552c9_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a73cb400:;
			{
				_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1a5b534a3_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a73cb477:;
			{
				jule::Ptr<_1a5b5892b_Prim> _6244_prim = _1a5b534a3_Prim((*_self_.alloc)._field_base);;
				{
					
					if (_1a5b5c149_IsAny(_6244_prim.ptr())) {
						_case_begin_1a73d74d8:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1a5b5bb2c_IsBool(_6244_prim.ptr())) {
						_case_begin_1a73d73ea:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1a5b5bdb3_IsStr(_6244_prim.ptr())) {
						_case_begin_1a73d71db:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1a5b5ad5c_IsF32(_6244_prim.ptr())) {
						_case_begin_1a73d7252:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1a5b5b0e3_IsF64(_6244_prim.ptr())) {
						_case_begin_1a73d72b8:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1a5b597d9_IsI8(_6244_prim.ptr())) {
						_case_begin_1a73d732e:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1a5b59a70_IsI16(_6244_prim.ptr())) {
						_case_begin_1a73d7c47:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1a5b59d06_IsI32(_6244_prim.ptr())) {
						_case_begin_1a73d7cbe:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1a5b5a08c_IsI64(_6244_prim.ptr())) {
						_case_begin_1a73d7d46:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1a5b5a323_IsU8(_6244_prim.ptr())) {
						_case_begin_1a73d7dbd:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1a5b5a5a9_IsU16(_6244_prim.ptr())) {
						_case_begin_1a73d7e45:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1a5b5a840_IsU32(_6244_prim.ptr())) {
						_case_begin_1a73d7ebc:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1a5b5aac6_IsU64(_6244_prim.ptr())) {
						_case_begin_1a73d8044:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1a5b5b379_IsInt(_6244_prim.ptr())) {
						_case_begin_1a73d80bb:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1a5b5b610_IsUint(_6244_prim.ptr())) {
						_case_begin_1a73d8143:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1a5b5b896_IsUintptr(_6244_prim.ptr())) {
						_case_begin_1a73d81ba:;
						{
							_59511_item=_1a5a21481_FindItem(_5947_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1a73d7043:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a5b5121a_Str((*_self_.alloc)._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:5"));;
						}
					}
					_match_end_1a73d6ecc:;
				};
			}
		}
		else {
			_case_begin_1a73ca542:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1a5b5121a_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:4"));;
			}
		}
		_match_end_1a73ca498:;
	};
	return _1a5b4c28d_evalEnumStatic(&(_5947_enm), &(_59511_item), &((*((*(_58942_fc))))._field_Token));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a36133__Bits(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _66727_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _66742_fc) {
	if (((*((*(_66742_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_66727_e)).ptr(), (*((*((*(_66742_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5b5892b_Prim> _6723_prim = _1a5b534a3_Prim((*(_self_))._field_base.ptr());;
	if ((_6723_prim == nullptr)) {
		_1a5b1bd73_pushErr((*(_66727_e)).ptr(), (*((*(_66742_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6773_n = _1b91614d6_BitsizeOf((*(_6723_prim))._field_Kind);;
	if ((_6773_n == -1LL)) {
		_1a5b1bd73_pushErr((*(_66727_e)).ptr(), (*((*(_66742_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _6827_constant = static__1b916c5ad_NewI64(static_cast<jule::I64>(_6773_n));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Model=jule::Any(_6827_constant, &__jule_any_type19), ._field_Constant=_6827_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3652e__Elem(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _69027_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _69042_fc) {
	if (((*((*(_69042_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_69027_e)).ptr(), (*((*((*(_69042_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5b60c1e_Ptr> _6957_ptr = _1a5b539c0_Ptr((*(_self_))._field_base.ptr());;
	if ((_6957_ptr != nullptr)) {
		if (_1a5b61758_IsUnsafe(_6957_ptr)) {
			_1a5b1bd73_pushErr((*(_69027_e)).ptr(), (*((*(_69042_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_6957_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a5b5c457_Sptr> _7037_sptr = _1a5b53739_Sptr((*_self_.alloc)._field_base);;
	if ((_7037_sptr != nullptr)) {
		return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_7037_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1a5b5ce2a_Slc> _7077_slice = _1a5b54509_Slc((*_self_.alloc)._field_base);;
	if ((_7077_slice != nullptr)) {
		return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_7077_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1a5b6024b_Arr> _7117_array = _1a5b54273_Arr((*_self_.alloc)._field_base);;
	if ((_7117_array != nullptr)) {
		return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_7117_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1a5a2088c_Enum> _7157_enm = _1a5b53c56_Enum((*_self_.alloc)._field_base);;
	if ((_7157_enm != nullptr)) {
		return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*((*_7157_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1a5b1bd73_pushErr((*(_69027_e)).ptr(), (*((*(_69042_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3692a__Size(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _72327_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _72342_fc) {
	if (((*((*(_72342_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_72327_e)).ptr(), (*((*((*(_72342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5b6024b_Arr> _7287_arr = _1a5b54273_Arr((*(_self_))._field_base.ptr());;
	if ((_7287_arr == nullptr)) {
		_1a5b1bd73_pushErr((*(_72327_e)).ptr(), (*((*(_72342_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _7337_constant = static__1b916c5ad_NewI64(static_cast<jule::I64>((*(_7287_arr))._field_N));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988c23_primInt, ._field_Model=jule::Any(_7337_constant, &__jule_any_type19), ._field_Constant=_7337_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a36d26__Key(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _74126_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _74141_fc) {
	if (((*((*(_74141_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_74126_e)).ptr(), (*((*((*(_74141_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5b5e5be_Map> _7467_m = _1a5b55043_Map((*(_self_))._field_base.ptr());;
	if ((_7467_m == nullptr)) {
		_1a5b1bd73_pushErr((*(_74126_e)).ptr(), (*((*(_74141_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_74126_e))))._field_s), &((*(_7467_m))._field_Key));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a37222__Value(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _75428_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _75443_fc) {
	if (((*((*(_75443_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_75428_e)).ptr(), (*((*((*(_75443_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5b5e5be_Map> _7597_m = _1a5b55043_Map((*(_self_))._field_base.ptr());;
	if ((_7597_m == nullptr)) {
		_1a5b1bd73_pushErr((*(_75428_e)).ptr(), (*((*(_75443_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_75428_e))))._field_s), &((*(_7597_m))._field_Val));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3761d__Fields(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _76729_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _76744_fc) {
	if (((*((*(_76744_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_76729_e)).ptr(), (*((*((*(_76744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _7727_s = _1a5b54a26_Struct((*(_self_))._field_base.ptr());;
	if ((_7727_s != nullptr)) {
		return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a27883_comptimeStructFields>(_1a5a27883_comptimeStructFields{._field_fields=(*_7727_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data7)}), });;
	};
	jule::Ptr<_1a5a2088c_Enum> _7827_enm = _1a5b53c56_Enum((*_self_.alloc)._field_base);;
	if ((_7827_enm != nullptr)) {
		return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a2d5d1_comptimeEnumFields>(_1a5a2d5d1_comptimeEnumFields{._field_fields=(*_7827_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data11)}), });;
	};
	_1a5b1bd73_pushErr((*(_76729_e)).ptr(), (*((*(_76744_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a37a19__Statics(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _79630_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _79645_fc) {
	if (((*((*(_79645_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_79630_e)).ptr(), (*((*((*(_79645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _8017_s = _1a5b54a26_Struct((*(_self_))._field_base.ptr());;
	if ((_8017_s == nullptr)) {
		_1a5b1bd73_pushErr((*(_79630_e)).ptr(), (*((*(_79645_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a2ab3e_comptimeStatics>(_1a5a2ab3e_comptimeStatics{._field_fields=(*(_8017_s))._field_Statics}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data9)}), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a37e15__Public(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _81529_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _81544_fc) {
	if (((*((*(_81544_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_81529_e)).ptr(), (*((*((*(_81544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _8207_public = false;;
	{
		
		if ((_1a5b54a26_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a741a719:;
			{
				_8207_public=(*((*(_1a5b54a26_Struct((*_self_.alloc)._field_base)))._field_Decl))._field_Public;
			}
		}
		else if ((_1a5b54cac_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a741b808:;
			{
				_8207_public=(*(_1a5b54cac_Trait((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1a5b53c56_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a741b86e:;
			{
				_8207_public=(*(_1a5b53c56_Enum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1a5b53edc_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1a741a450:;
			{
				_8207_public=(*(_1a5b53edc_TypeEnum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else {
			_case_begin_1a741a3d9:;
			{
				_1a5b1bd73_pushErr((*(_81529_e)).ptr(), (*((*(_81544_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a741a2a7:;
	};
	jule::Ptr<_1b916c16d_Const> _8347_constant = static__1b916cb41_NewBool(_8207_public);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_8347_constant, &__jule_any_type19), ._field_Constant=_8347_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a38311__Binded(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _84229_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _84244_fc) {
	if (((*((*(_84244_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_84229_e)).ptr(), (*((*((*(_84244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _8477_constant = static__1b916cb41_NewBool(_1a5b51b99_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_8477_constant, &__jule_any_type19), ._field_Constant=_8477_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3870c__Ordered(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _85526_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _85541_fc) {
	if (((*((*(_85541_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_85526_e)).ptr(), (*((*((*(_85541_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _8607_constant = static__1b916cb41_NewBool(_1a5b52969_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Model=jule::Any(_8607_constant, &__jule_any_type19), ._field_Constant=_8607_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a38b08__Comparable(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _86829_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _86844_fc) {
	if (((*((*(_86844_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_86829_e)).ptr(), (*((*((*(_86844_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _8737_constant = static__1b916cb41_NewBool(_1a5b5244c_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Model=jule::Any(_8737_constant, &__jule_any_type19), ._field_Constant=_8737_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a39004__Mutable(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _88126_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _88141_fc) {
	if (((*((*(_88141_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_88126_e)).ptr(), (*((*((*(_88141_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _8867_constant = static__1b916cb41_NewBool(_1a5b526d3_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_8867_constant, &__jule_any_type19), ._field_Constant=_8867_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a39400__Types(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _89428_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _89443_fc) {
	if (((*((*(_89443_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_89428_e)).ptr(), (*((*((*(_89443_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5b5da1e_Tuple> _8997_tup = _1a5b552c9_Tup((*(_self_))._field_base.ptr());;
	if ((_8997_tup == nullptr)) {
		_1a5b1bd73_pushErr((*(_89428_e)).ptr(), (*((*(_89443_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5a3342c_comptimeTypeInfos> _9047_infos = jule::new_ptr<_1a5a3342c_comptimeTypeInfos>(_1a5a3342c_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1a5a34a27_comptimeTypeInfo>>::alloc(0LL, (*(_8997_tup))._field_Types.len())});;
	{
		auto expr = &((*(_8997_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7430e38:;
		if (it != expr_end) {
			jule::Ptr<_1a5b50d52_TypeKind> _90715_t = *it;
			{
				(*(_9047_infos))._field_types=jule::append((*_9047_infos.alloc)._field_types,jule::Slice<jule::Ptr<_1a5a34a27_comptimeTypeInfo>>::make({_1a5a8d9b5_pushComptimeTypeInfo((*((*((*(_89428_e))))._field_s))._field_meta.ptr(), &(_90715_t))}));
			}
			_iter_next_1a7430e38:;
			++it;
			goto _iter_begin_1a7430e38;
		}
		_iter_end_1a7430e38:;
	};
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_9047_infos, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data14)}), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a397eb__Exceptional(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _91734_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _91749_fc) {
	if (((*((*(_91749_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_91734_e)).ptr(), (*((*((*(_91749_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _9227_f = _1a5b54790_Fn((*(_self_))._field_base.ptr());;
	if ((_9227_f == nullptr)) {
		_1a5b1bd73_pushErr((*(_91734_e)).ptr(), (*((*(_91749_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _9277_constant = static__1b916cb41_NewBool((((*(_9227_f))._field_Decl != nullptr) && (*(*(_9227_f))._field_Decl.alloc)._field_Exceptional));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_9277_constant, &__jule_any_type19), ._field_Constant=_9277_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a39be7__CanNil(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _93529_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _93544_fc) {
	if (((*((*(_93544_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_93529_e)).ptr(), (*((*((*(_93544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _9407_constant = static__1b916cb41_NewBool(_1a5b52c00_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_9407_constant, &__jule_any_type19), ._field_Constant=_9407_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3a0e3__RC(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _94825_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _94840_fc) {
	if (((*((*(_94840_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_94825_e)).ptr(), (*((*((*(_94840_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _9537_constant = static__1b916cb41_NewBool(_1a5b52e86_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_9537_constant, &__jule_any_type19), ._field_Constant=_9537_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3a4de__Result(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _96129_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _96144_fc) {
	if (((*((*(_96144_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_96129_e)).ptr(), (*((*((*(_96144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _9667_f = _1a5b54790_Fn((*(_self_))._field_base.ptr());;
	if ((_9667_f == nullptr)) {
		_1a5b1bd73_pushErr((*(_96129_e)).ptr(), (*((*(_96144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_9667_f))._field_Result == nullptr)) {
		return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_96129_e))))._field_s), &(_1c798798b_primVoid));;
	};
	return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_96129_e))))._field_s), &((*(_9667_f))._field_Result));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3a8da__Params(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Ptr<_1a5b1b823_Eval>* _97729_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _97744_fc) {
	if (((*((*(_97744_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_97729_e)).ptr(), (*((*((*(_97744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _9827_f = _1a5b54790_Fn((*(_self_))._field_base.ptr());;
	if ((_9827_f == nullptr)) {
		_1a5b1bd73_pushErr((*(_97729_e)).ptr(), (*((*(_97744_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a31d65_comptimeParams>(_1a5a31d65_comptimeParams{._field_params=(*(_9827_f))._field_Params}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data13)}), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3ac2b_subIdent(jule::Ptr<_1a5a34a27_comptimeTypeInfo> _self_, jule::Str* _99426_ident) {
	{
		auto &_match_expr{ (*(_99426_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1a74460b3:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _9978_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a7447977, jule::Ptr<__jule_anon_1a7447977_ctx>::make(__jule_anon_1a7447977_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a7447977_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_9978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1a7445d71:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10048_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a74498d0, jule::Ptr<__jule_anon_1a74498d0_ctx>::make(__jule_anon_1a74498d0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a74498d0_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1a7445dd7:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10118_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a744b838, jule::Ptr<__jule_anon_1a744b838_ctx>::make(__jule_anon_1a744b838_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a744b838_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1a7446129:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10188_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a744d791, jule::Ptr<__jule_anon_1a744d791_ctx>::make(__jule_anon_1a744d791_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a744d791_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10188_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1a7446190:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10258_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a74506e9, jule::Ptr<__jule_anon_1a74506e9_ctx>::make(__jule_anon_1a74506e9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a74506e9_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10258_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1a7446206:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10328_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a7452652, jule::Ptr<__jule_anon_1a7452652_ctx>::make(__jule_anon_1a7452652_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a7452652_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10328_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1a744626c:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10398_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a74545aa, jule::Ptr<__jule_anon_1a74545aa_ctx>::make(__jule_anon_1a74545aa_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a74545aa_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10398_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1a7446349:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10468_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a7456513, jule::Ptr<__jule_anon_1a7456513_ctx>::make(__jule_anon_1a7456513_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a7456513_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10468_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1a74463b0:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10538_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a74586e1, jule::Ptr<__jule_anon_1a74586e1_ctx>::make(__jule_anon_1a74586e1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a74586e1_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10538_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1a7446426:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10608_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a745a649, jule::Ptr<__jule_anon_1a745a649_ctx>::make(__jule_anon_1a745a649_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a745a649_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10608_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1a744649d:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10678_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a745c5a2, jule::Ptr<__jule_anon_1a745c5a2_ctx>::make(__jule_anon_1a745c5a2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a745c5a2_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10678_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1a7446525:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10748_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a745e50a, jule::Ptr<__jule_anon_1a745e50a_ctx>::make(__jule_anon_1a745e50a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a745e50a_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10748_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1a744659c:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10818_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a7461463, jule::Ptr<__jule_anon_1a7461463_ctx>::make(__jule_anon_1a7461463_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a7461463_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10818_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1a7446624:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10888_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a74633bb, jule::Ptr<__jule_anon_1a74633bb_ctx>::make(__jule_anon_1a74633bb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a74633bb_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10888_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1a744669b:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10958_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a7465324, jule::Ptr<__jule_anon_1a7465324_ctx>::make(__jule_anon_1a7465324_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a7465324_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_10958_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1a7446723:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _11028_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a746727c, jule::Ptr<__jule_anon_1a746727c_ctx>::make(__jule_anon_1a746727c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a746727c_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_11028_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1a744679a:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _11098_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a74691d5, jule::Ptr<__jule_anon_1a74691d5_ctx>::make(__jule_anon_1a74691d5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a74691d5_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_11098_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1a7446822:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _11168_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a746b13d, jule::Ptr<__jule_anon_1a746b13d_ctx>::make(__jule_anon_1a746b13d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a746b13d_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_11168_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1a7446899:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _11238_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a746d096, jule::Ptr<__jule_anon_1a746d096_ctx>::make(__jule_anon_1a746d096_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a746d096_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_11238_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1a7446921:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _11308_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a746eeee, jule::Ptr<__jule_anon_1a746eeee_ctx>::make(__jule_anon_1a746eeee_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a746eeee_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_11308_method));;
			}
		}
		else {
			_case_begin_1a7443b2c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7445b51:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a34a27_comptimeTypeInfo _Src) {
	_Stream << _1a5a34d9b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a3b3ad_Str(_1a5a3b039_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1a5a3b6ee_Equal(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b50d52_TypeKind> _114918_other) {
	return false;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3bc4e__Unwrap(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b1b823_Eval>* _115329_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _115344_fc) {
	if (((*((*(_115344_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_115329_e)).ptr(), (*((*((*(_115344_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3c14a__Type(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b1b823_Eval>* _116127_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _116142_fc) {
	if (((*((*(_116142_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_116127_e)).ptr(), (*((*((*(_116142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_116127_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3c546__Lvalue(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b1b823_Eval>* _116929_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _116944_fc) {
	if (((*((*(_116944_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_116929_e)).ptr(), (*((*((*(_116944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _11747_constant = static__1b916cb41_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_11747_constant, &__jule_any_type19), ._field_Constant=_11747_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3c942__Mutable(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b1b823_Eval>* _118230_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _118245_fc) {
	if (((*((*(_118245_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_118230_e)).ptr(), (*((*((*(_118245_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _11877_constant = static__1b916cb41_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_11877_constant, &__jule_any_type19), ._field_Constant=_11877_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3cd3d__Const(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b1b823_Eval>* _119528_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _119543_fc) {
	if (((*((*(_119543_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_119528_e)).ptr(), (*((*((*(_119543_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _12007_constant = static__1b916cb41_NewBool(_1a5b1a503_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_12007_constant, &__jule_any_type19), ._field_Constant=_12007_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3d239__Field(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Ptr<_1a5b1b823_Eval>* _120828_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _120843_fc) {
	if (((*((*(_120843_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr((*(_120828_e)).ptr(), (*((*((*(_120843_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _12137_s = _1a5b54a26_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_12137_s == nullptr)) {
		_1a5b1bd73_pushErr((*(_120828_e)).ptr(), (*((*(_120843_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(*_self_.alloc)._field_data.alloc)._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a59c82a1_Expr> _12187_arg = (*((*(_120843_fc))))._field_Args[0LL];;
	jule::Ptr<_1a5b19aeb_Data> _12197_d = _1a5b3e8e0_evalExpr((*(_120828_e)), _12187_arg);;
	if ((_12197_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a5b1a503_IsConst(_12197_d.ptr())))) {
		_1a5b1bd73_pushErr((*(_120828_e)).ptr(), (*(_12187_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5b5892b_Prim> _12273_prim = _1a5b534a3_Prim((*(_12197_d))._field_Kind);;
	if (((_12273_prim == nullptr) || (!(_1a5b5bdb3_IsStr(_12273_prim.ptr()))))) {
		_1a5b1bd73_pushErr((*(_120828_e)).ptr(), (*_12187_arg.alloc)._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(_12197_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12323_ident = _1b916e2e6_ReadStr((*(_12197_d))._field_Constant.ptr());;
	jule::Ptr<_1a59e6ed4_FieldIns> _12337_f = _1a59e8e3c_FindField(_12137_s.ptr(), _12323_ident);;
	if ((_12337_f == nullptr)) {
		_1a5b1bd73_pushErr((*(_120828_e)).ptr(), (*_12187_arg.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_12137_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12323_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_12197_d=jule::new_ptr<_1a5b19aeb_Data>((*(*_self_.alloc)._field_data.alloc));
	_12197_d=_1a5b37be6_evalStructSubIdentField((*(_120828_e)).ptr(), &(_12197_d), &(_12137_s), &((*_12187_arg.alloc)._field_Token), &(_12337_f));
	return _1a5a42716_buildComptimeValue(&(_12197_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a3d57a_subIdent(jule::Ptr<_1a5a3b039_comptimeValue> _self_, jule::Str* _124326_ident) {
	{
		auto &_match_expr{ (*(_124326_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1a7488cd7:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _12468_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a748a1e5, jule::Ptr<__jule_anon_1a748a1e5_ctx>::make(__jule_anon_1a748a1e5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a748a1e5_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_12468_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1a7488d4d:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _12538_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a748c14d, jule::Ptr<__jule_anon_1a748c14d_ctx>::make(__jule_anon_1a748c14d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a748c14d_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_12538_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1a7488db4:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _12608_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a748e0a6, jule::Ptr<__jule_anon_1a748e0a6_ctx>::make(__jule_anon_1a748e0a6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a748e0a6_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_12608_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1a7488e3b:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _12678_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a749100e, jule::Ptr<__jule_anon_1a749100e_ctx>::make(__jule_anon_1a749100e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a749100e_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_12678_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1a7488eb3:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _12748_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a7492e67, jule::Ptr<__jule_anon_1a7492e67_ctx>::make(__jule_anon_1a7492e67_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a7492e67_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_12748_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1a7489139:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _12818_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a7494dc0, jule::Ptr<__jule_anon_1a7494dc0_ctx>::make(__jule_anon_1a7494dc0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a7494dc0_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_12818_method));;
			}
		}
		else {
			_case_begin_1a7488a84:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7488bb6:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a3b039_comptimeValue _Src) {
	_Stream << _1a5a3b3ad_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a3dc0c_Str(_1a5a3d888_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1a5a3e04d_Equal(jule::Ptr<_1a5a3d888_comptimeFiles> _self_, jule::Ptr<_1a5b50d52_TypeKind> _130018_other) {
	return false;;
}



inline void _1a5a3e4c1_ready(_1a5a3d888_comptimeFiles* _self_, jule::Ptr<_1a5ab1ee4_Var>* _130426_keyA, jule::Ptr<_1a5ab1ee4_Var>* _130443_keyB) {
	if (((*(_130426_keyA)) != nullptr)) {
		(*((*(_130426_keyA))))._field_Constant=true;
		(*((*(_130426_keyA))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		(*((*(_130426_keyA))))._field_Kind=(*(_1c798b077_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130443_keyB)) != nullptr)) {
		(*((*(_130443_keyB))))._field_Constant=true;
		(*((*(_130443_keyB))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		(*((*(_130443_keyB))))._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a3ee83_comptimeFile>(), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data18)})});
	};
}



inline void _1a5a3e8de_step(_1a5a3d888_comptimeFiles* _self_, jule::I64 _132520_i, jule::Ptr<_1a5ab1ee4_Var>* _132533_keyA, jule::Ptr<_1a5ab1ee4_Var>* _132550_keyB) {
	if (((*(_132533_keyA)) != nullptr)) {
		(*((*((*((*(_132533_keyA))))._field_Value))._field_Data))._field_Constant=static__1b916c5ad_NewI64(static_cast<jule::I64>(_132520_i));
		(*(*(*((*(_132533_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_132533_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_132550_keyB)) != nullptr)) {
		(*((*((*((*((*(_132550_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1a5a3ee83_comptimeFile>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_132520_i];
	};
}



inline jule::I64 _1a5a3eb75_len(_1a5a3d888_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a3d888_comptimeFiles _Src) {
	_Stream << _1a5a3dc0c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5a40538_Str(_1a5a3ee83_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1a5a40879_Equal(jule::Ptr<_1a5a3ee83_comptimeFile> _self_, jule::Ptr<_1a5b50d52_TypeKind> _134918_other) {
	return false;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a40c86__Path(jule::Ptr<_1a5a3ee83_comptimeFile> _self_, jule::Ptr<_1a5b1b823_Eval>* _135327_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _135342_fc) {
	if (((*((*(_135342_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_135327_e)).ptr(), (*((*((*(_135342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _13587_constant = static__1b916ce0a_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Model=jule::Any(_13587_constant, &__jule_any_type19), ._field_Constant=_13587_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a41182__Name(jule::Ptr<_1a5a3ee83_comptimeFile> _self_, jule::Ptr<_1a5b1b823_Eval>* _136627_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _136642_fc) {
	if (((*((*(_136642_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_136627_e)).ptr(), (*((*((*(_136642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _13717_constant = static__1b916ce0a_NewStr(_1c80bc70d_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Model=jule::Any(_13717_constant, &__jule_any_type19), ._field_Constant=_13717_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a4157d__Dir(jule::Ptr<_1a5a3ee83_comptimeFile> _self_, jule::Ptr<_1a5b1b823_Eval>* _137926_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _137941_fc) {
	if (((*((*(_137941_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_137926_e)).ptr(), (*((*((*(_137941_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b916c16d_Const> _13847_constant = static__1b916ce0a_NewStr(_1c80bc477_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Model=jule::Any(_13847_constant, &__jule_any_type19), ._field_Constant=_13847_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a418be_subIdent(jule::Ptr<_1a5a3ee83_comptimeFile> _self_, jule::Str* _139226_ident) {
	{
		auto &_match_expr{ (*(_139226_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1a90e459a:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _13958_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a90e5887, jule::Ptr<__jule_anon_1a90e5887_ctx>::make(__jule_anon_1a90e5887_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a90e5887_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_13958_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1a90e4644:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _14028_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a90e77e0, jule::Ptr<__jule_anon_1a90e77e0_ctx>::make(__jule_anon_1a90e77e0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a90e77e0_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_14028_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1a90e46bb:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _14098_method = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>((void*)__jule_anon_1a90e9748, jule::Ptr<__jule_anon_1a90e9748_ctx>::make(__jule_anon_1a90e9748_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a90e9748_ctx_handler), });;
				return _1a5a41c43_buildAsComptimeMethodData(&(_14098_method));;
			}
		}
		else {
			_case_begin_1a90e42ae:;
			{
				return nullptr;;
			}
		}
		_match_end_1a90e4435:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a3ee83_comptimeFile _Src) {
	_Stream << _1a5a40538_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool,jule::Ptr<_1a5a8e17a_Sema>*,jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>*> _1a5a4488e_readyFn(jule::Ptr<_1a5a44493_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1a5a8e17a_Sema>*,jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>*>((void*)__jule_anon_1a910527b, jule::Ptr<__jule_anon_1a910527b_ctx>::make(__jule_anon_1a910527b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a910527b_ctx_handler);;
}



inline jule::Bool _1a5a44b25_readyFi(jule::Ptr<_1a5a44493_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a5a9c650_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1a5a4488e_readyFn(_self_)));;
}



inline jule::Bool _1a5a44dab_readySi(jule::Ptr<_1a5a44493_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1a5a4488e_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1a5a45142_ready(jule::Ptr<_1a5a44493_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1a5a44b25_readyFi(_self_);;
	};
	return _1a5a44dab_readySi(_self_);;
}



inline jule::Bool _1a5a453c8_check(jule::Ptr<_1a5a44493_constraintChecker> _self_) {
	if ((!(_1a5a45142_ready(_self_)))) {
		return false;;
	};
	_julec_label_1a9114950:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9115324:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_1a5b4e46b_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1a9115324;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9116501:;
					if (it != expr_end) {
						jule::Ptr<_1a5b50d52_TypeKind> _12416_c2 = *it;
						{
							jule::Ptr<_1a5b5892b_Prim> _1259_prim = _1a5b534a3_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1a5b59553_IsConstraint(_1259_prim))) {
								if (_1a5a45b59_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Kind))) {
									goto _iter_next_1a9115324;
								};
								goto _iter_next_1a9116501;
							};
							if (_1a5b5155b_Equal(_12416_c2, (*_12015_g.alloc)._field_Kind)) {
								goto _iter_next_1a9115324;
							};
						}
						_iter_next_1a9116501:;
						++it;
						goto _iter_begin_1a9116501;
					}
					_iter_end_1a9116501:;
				};
				_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_12015_g.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type4),jule::Any(_1a5a45791_toStrConstraints(_12015_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1a9115324:;
			++it;
			_1208_i++;
			goto _iter_begin_1a9115324;
		}
		_iter_end_1a9115324:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a44493_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a5a46bb0_IsTraitImpl(_1a5a467e7_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1a5a46e46_IsStructImpl(_1a5a467e7_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a467e7_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a4bc4d_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a4c16b_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a4c468_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a4c886_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a4cb83_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a4d139_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a4da85_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a4de1a_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a4e2e4_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a4e5e1_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a4e9ba_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a4ed94_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a5034a_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a50801_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "Decls:" << _Src._field_Decls << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a50e61_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a51989_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a52182_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a52528_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a52b88_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a5321b_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a546a1_SelectPackage(_1a5a5420b_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> _46029_selector) {
	return _1a5a8e620_SelectPackage((*(_self_))._field_s.ptr(), _46029_selector);;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a5a54a9c_FindVar(_1a5a5420b_scopeChecker* _self_, jule::Str _47123_ident, jule::Bool _47135_binded) {
	if ((!(_47135_binded))) {
		jule::Ptr<_1a5ab1ee4_Var> _4738_v = _1a5a57b7c_findVar(_self_, _47123_ident);;
		if ((_4738_v != nullptr)) {
			return _4738_v;;
		};
	};
	return _1a5a8ea1b_FindVar((*(_self_))._field_s.ptr(), _47123_ident, _47135_binded);;
}



inline jule::Ptr<_1a5b50060_TypeAlias> _1a5a54e98_FindTypeAlias(_1a5a5420b_scopeChecker* _self_, jule::Str _48829_ident, jule::Bool _48841_binded) {
	;
	jule::Ptr<_1a5b50060_TypeAlias> _4917_ta = _1a5b17401_findTypeAlias((*(_self_))._field_table.ptr(), &(_48829_ident), _48841_binded, true);;
	if ((_4917_ta != nullptr)) {
		return _4917_ta;;
	};
	jule::Ptr<_1a5a5420b_scopeChecker> _4967_parent = (*(_self_))._field_parent;;
	while ((_4967_parent != nullptr)) {
		{
			_4917_ta=_1a5b17401_findTypeAlias((*_4967_parent.alloc)._field_table, &(_48829_ident), _48841_binded, true);
			if ((_4917_ta != nullptr)) {
				return _4917_ta;;
			};
			_4967_parent=(*_4967_parent.alloc)._field_parent;
		}
	_iter_next_1a9155595:;
	}
	_iter_end_1a9155595:;;
	return _1a5a8ee17_FindTypeAlias((*(_self_))._field_s.ptr(), _48829_ident, _48841_binded);;
}



inline jule::Ptr<_1a59e4d06_Struct> _1a5a55394_FindStruct(_1a5a5420b_scopeChecker* _self_, jule::Str _51326_ident, jule::Bool _51338_binded) {
	return _1a5a90313_FindStruct((*(_self_))._field_s.ptr(), _51326_ident, _51338_binded);;
}



inline jule::Ptr<_1a5a09cc7_Fn> _1a5a55790_FindFn(_1a5a5420b_scopeChecker* _self_, jule::Str _52222_ident, jule::Bool _52234_binded) {
	return _1a5a9070e_FindFn((*(_self_))._field_s.ptr(), _52222_ident, _52234_binded);;
}



inline jule::Ptr<_1a5a1d181_Trait> _1a5a55ad1_FindTrait(_1a5a5420b_scopeChecker* _self_, jule::Str _53125_ident) {
	return _1a5a90a50_FindTrait((*(_self_))._field_s.ptr(), _53125_ident);;
}



inline jule::Ptr<_1a5a2088c_Enum> _1a5a55e22_FindEnum(_1a5a5420b_scopeChecker* _self_, jule::Str _54024_ident) {
	return _1a5a90d91_FindEnum((*(_self_))._field_s.ptr(), _54024_ident);;
}



inline jule::Ptr<_1a5a22097_TypeEnum> _1a5a56263_FindTypeEnum(_1a5a5420b_scopeChecker* _self_, jule::Str _54928_ident) {
	return _1a5a911d2_FindTypeEnum((*(_self_))._field_s.ptr(), _54928_ident);;
}



inline jule::Bool _1a5a565b5_isUnsafe(jule::Ptr<_1a5a5420b_scopeChecker> _self_) {
	jule::Ptr<_1a5a5420b_scopeChecker> _5577_scope = _self_;;
	_julec_label_1a915a28c:;
	if ((*((*(_5577_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_5577_scope.alloc)._field_parent != nullptr)) {
		_5577_scope=(*_5577_scope.alloc)._field_parent;
		goto _julec_label_1a915a28c;
	};
	return false;;
}



inline jule::Bool _1a5a5684b_isRoot(_1a5a5420b_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1a5a56a49_stop(_1a5a5420b_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1a5a56cd0_stopped(_1a5a5420b_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1a5a57066_isDeferred(jule::Ptr<_1a5a5420b_scopeChecker> _self_) {
	jule::Ptr<_1a5a5420b_scopeChecker> _5907_scope = _self_;;
	_julec_label_1a915d5d1:;
	if ((*((*(_5907_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_5907_scope.alloc)._field_parent != nullptr)) {
		_5907_scope=(*_5907_scope.alloc)._field_parent;
		goto _julec_label_1a915d5d1;
	};
	return false;;
}



inline void _1a5a5731e_pushCaptured(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5ab1ee4_Var>* _61134_v) {
	jule::Ptr<_1a5a5420b_scopeChecker> _6127_sc = _self_;;
	for (;;) {
		{
			if (((*(_6127_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*_6127_sc.alloc)._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a91614e6:;
					if (it != expr_end) {
						jule::Ptr<_1a5ab1ee4_Var> _61512_cv = *it;
						{
							if ((_61512_cv == (*(_61134_v)))) {
								goto _julec_label_1a91622a5;
							};
						}
						_iter_next_1a91614e6:;
						++it;
						goto _iter_begin_1a91614e6;
					}
					_iter_end_1a91614e6:;
				};
				(*(*_6127_sc.alloc)._field_captured.alloc)=jule::append((*(*_6127_sc.alloc)._field_captured.alloc),jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::make({(*(_61134_v))}));
				_julec_label_1a91622a5:;
			};
			if (((*_6127_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1a915e3a1;
			};
			_6127_sc=(*_6127_sc.alloc)._field_parent;
			if ((!(_1a5b4d404_isVarCaptured(_6127_sc, _6127_sc, (*(_61134_v)))))) {
				goto _iter_end_1a915e3a1;
			};
		}
	_iter_next_1a915e3a1:;
	}
	_iter_end_1a915e3a1:;;
}



inline jule::Ptr<_1a5a5420b_scopeChecker> _1a5a575a5_getRoot(jule::Ptr<_1a5a5420b_scopeChecker> _self_) {
	jule::Ptr<_1a5a5420b_scopeChecker> _6367_root = _self_;;
	while ((((*(_6367_root))._field_parent != nullptr) && ((*_6367_root.alloc)._field_owner == nullptr))) {
		{
			_6367_root=(*_6367_root.alloc)._field_parent;
		}
	_iter_next_1a91646d6:;
	}
	_iter_end_1a91646d6:;;
	return _6367_root;;
}



inline jule::Ptr<_1a5a5420b_scopeChecker> _1a5a5783b_getHardRoot(jule::Ptr<_1a5a5420b_scopeChecker> _self_) {
	jule::Ptr<_1a5a5420b_scopeChecker> _6467_root = _self_;;
	while (((*(_6467_root))._field_parent != nullptr)) {
		{
			_6467_root=(*_6467_root.alloc)._field_parent;
		}
	_iter_next_1a9165a17:;
	}
	_iter_end_1a9165a17:;;
	return _6467_root;;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a5a57b7c_findVar(_1a5a5420b_scopeChecker* _self_, jule::Str _65423_ident) {
	;
	;
	jule::Ptr<_1a5ab1ee4_Var> _6577_v = _1a5b16e4a_findVar((*(_self_))._field_table.ptr(), &(_65423_ident), false, true);;
	if ((_6577_v != nullptr)) {
		return _6577_v;;
	};
	jule::Ptr<_1a5a5420b_scopeChecker> _6617_parent = (*(_self_))._field_parent;;
	while ((_6617_parent != nullptr)) {
		{
			_6577_v=_1a5b16e4a_findVar((*_6617_parent.alloc)._field_table, &(_65423_ident), false, true);
			if ((_6577_v != nullptr)) {
				return _6577_v;;
			};
			_6617_parent=(*_6617_parent.alloc)._field_parent;
		}
	_iter_next_1a91679c5:;
	}
	_iter_end_1a91679c5:;;
	return nullptr;;
}



inline jule::Ptr<_1a5a4e5e1_Label> _1a5a57ebd_findLabel(_1a5a5420b_scopeChecker* _self_, jule::Str* _67526_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9169a0a:;
		if (it != expr_end) {
			jule::Any _67615_st = *it;
			{
				{
					auto &_match_expr{ _67615_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1a916a2d0:;
						{
							jule::Ptr<_1a5a4e5e1_Label> _6799_label = _67615_st.unsafe_cast_ptr<_1a5a4e5e1_Label>();;
							if (((*(_6799_label))._field_Ident == (*(_67526_ident)))) {
								return _6799_label;;
							};
						}
					}
					_match_end_1a916a27a:;
				};
			}
			_iter_next_1a9169a0a:;
			++it;
			goto _iter_begin_1a9169a0a;
		}
		_iter_end_1a9169a0a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a52b88_scopeLabel> _1a5a5830e_findLabelScope(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Str* _69132_ident) {
	jule::Ptr<_1a5a52b88_scopeLabel> _6927_label = _1a5a58650_findLabelAll(_self_.ptr(), _69132_ident);;
	if (((_6927_label != nullptr) && ((*_6927_label.alloc)._field_scope == _self_))) {
		return _6927_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a52b88_scopeLabel> _1a5a58650_findLabelAll(_1a5a5420b_scopeChecker* _self_, jule::Str* _70329_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a916c8ba:;
		if (it != expr_end) {
			jule::Ptr<_1a5a52b88_scopeLabel> _70415_lbl = *it;
			{
				if (((*((*(_70415_lbl))._field_label))._field_Ident == (*(_70329_ident)))) {
					return _70415_lbl;;
				};
			}
			_iter_next_1a916c8ba:;
			++it;
			goto _iter_begin_1a916c8ba;
		}
		_iter_end_1a916c8ba:;
	};
	return nullptr;;
}



inline jule::Bool _1a5a58a4b_isDuplicatedIdent(_1a5a5420b_scopeChecker* _self_, jule::Uintptr _71533_itself, jule::Str* _71551_ident) {
	jule::Ptr<_1a5ab1ee4_Var> _7163_v = _1a5a54a9c_FindVar(_self_, (*(_71551_ident)), false);;
	if (((_7163_v != nullptr) && (static_cast<jule::Uintptr>(_7163_v) != _71533_itself))) {
		if (((*_7163_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7163_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1a5a915de_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1a5b50060_TypeAlias> _7243_ta = _1a5a54e98_FindTypeAlias(_self_, (*(_71551_ident)), false);;
	if (((_7243_ta != nullptr) && (static_cast<jule::Uintptr>(_7243_ta) != _71533_itself))) {
		if (((*_7243_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7243_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1a5a915de_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1a5a58d04_checkVarDecl(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d6cd7_VarDecl> _73533_decl) {
	jule::Ptr<_1a5ab1ee4_Var> _7367_v = _1a5a16300_buildVar(_73533_decl);;
	(*(_7367_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::make({_7367_v}));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_7367_v, &__jule_any_type8)}));
	});;
	if (_1a5a58a4b_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_7367_v), &((*_7367_v.alloc)._field_Ident))) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*_7367_v.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_7367_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a5a56a49_stop(_self_);
		return;;
	};
	_1a5aa5339_checkVarDecl((*_self_.alloc)._field_s, &(_7367_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0));
	if (((!(_1a5ab2654_IsTypeInferred(_7367_v))) && (((*_7367_v.alloc)._field_Kind == nullptr) || ((*((*_7367_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1a5aa8ace_evalVarValue((*_self_.alloc)._field_s, &(_7367_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0));
	if (((!(_1a5ab23bd_IsInitialized(_7367_v))) || ((*((*_7367_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1a5a6006e_removeInteriorMutRisk(_self_, &((*(*_7367_v.alloc)._field_Value.alloc)._field_Data));
	_1a5aa876b_checkVarValue((*_self_.alloc)._field_s, &(_7367_v));
}



inline void _1a5a590ac_checkTypeAlias(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5b50060_TypeAlias>* _76636_ta) {
	if (_1a5a58a4b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_76636_ta))), &((*((*(_76636_ta))))._field_Ident))) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_76636_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_76636_ta))))._field_Ident, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a5a56a49_stop(_self_);
		return;;
	};
	_1a5a9e3bb_checkTypeAliasDecl((*_self_.alloc)._field_s, _76636_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*_self_.alloc)._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>::make({(*(_76636_ta))}));
	if (((*((*((*(_76636_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1a5a56a49_stop(_self_);
	};
}



inline void _1a5a59365_checkTypeAliasDecl(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59da989_TypeAliasDecl> _78239_decl) {
	jule::Ptr<_1a5b50060_TypeAlias> _7837_ta = _1a5a12dce_buildTypeAlias(_78239_decl);;
	_1a5a590ac_checkTypeAlias(_self_, &(_7837_ta));
}



inline jule::Ptr<_1a5a4bc4d_Scope> _1a5a595eb_getChild(_1a5a5420b_scopeChecker* _self_) {
	return jule::new_ptr<_1a5a4bc4d_Scope>(_1a5a4bc4d_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1a5a59a19_checkChildSsc(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d3e8d_ScopeTree>* _79335_tree, jule::Ptr<_1a5a4bc4d_Scope>* _79358_s, jule::Ptr<_1a5a5420b_scopeChecker>* _79374_ssc) {
	(*((*(_79374_ssc))))._field_parent=_self_;
	_1a5a6600e_check((*(_79374_ssc)), _79335_tree, _79358_s);
}



inline jule::Ptr<_1a5a4bc4d_Scope> _1a5a59e15_checkChildSc(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d3e8d_ScopeTree>* _79834_tree, jule::Ptr<_1a5a5420b_scopeChecker>* _79857_ssc) {
	jule::Ptr<_1a5a4bc4d_Scope> _7997_s = _1a5a595eb_getChild(_self_.ptr());;
	_1a5a59a19_checkChildSsc(_self_, _79834_tree, &(_7997_s), _79857_ssc);
	return _7997_s;;
}



inline jule::Ptr<_1a5a4bc4d_Scope> _1a5a5a256_checkChild(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d3e8d_ScopeTree>* _80432_tree) {
	jule::Ptr<_1a5a5420b_scopeChecker> _8057_ssc = _1a5a66295_newChildChecker(_self_);;
	return _1a5a59e15_checkChildSc(_self_, _80432_tree, &(_8057_ssc));;
}



inline void _1a5a5a50e_checkAnonScope(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d3e8d_ScopeTree> _80935_tree) {
	jule::Ptr<_1a5a4bc4d_Scope> _8107_s = _1a5a5a256_checkChild(_self_, &(_80935_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_8107_s, &__jule_any_type21)}));
}



inline void _1a5a5a872_processErrorCall(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5a05762_BuiltinErrorCallExprModel>* _81438_m, jule::Ptr<_1c80b653c_Token> _81469_err) {
	if (_1a5a57066_isDeferred(_self_)) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), _81469_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5a5420b_scopeChecker> _8197_root = _1a5a575a5_getRoot(_self_);;
	if ((!((*((*((*(_8197_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s, _81469_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_81438_m))))._field_Func=(*_8197_root.alloc)._field_owner;
}



inline void _1a5a5ab2a_checkExpr(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59c82a1_Expr> _82730_expr) {
	jule::Ptr<_1a5b1b823_Eval> _8287_eval = _1a5a99262_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0));;
	(*(_8287_eval))._field_ignored=true;
	jule::Ptr<_1a5b19aeb_Data> _8307_d = _1a5b3e8e0_evalExpr(_8287_eval, _82730_expr);;
	if (((_8307_d == nullptr) || ((*(_8307_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_8307_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a918a223:;
			{
				jule::Ptr<_1a5a05762_BuiltinErrorCallExprModel> _8398_m = (*(_8307_d))._field_Model.unsafe_cast_ptr<_1a5a05762_BuiltinErrorCallExprModel>();;
				_1a5a5a872_processErrorCall(_self_, &(_8398_m), (*(_82730_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_8307_d, &__jule_any_type23)}));
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33) {
			_case_begin_1a918a850:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_8307_d, &__jule_any_type23)}));
			}
		}
		else {
			_case_begin_1a918a7d9:;
			{
				_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*(_82730_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a918a784:;
	};
}



inline jule::Ptr<_1a5a4c16b_If> _1a5a5ae6b_checkIf(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d98bc_If> _85828_i) {
	jule::Ptr<_1a5a4bc4d_Scope> _8597_s = _1a5a5a256_checkChild(_self_, &((*(_85828_i))._field_Scope));;
	jule::Ptr<_1a5b19aeb_Data> _8617_d = _1a5b3e8e0_evalExpr(_1a5a99262_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)), (*_85828_i.alloc)._field_Expr);;
	if ((_8617_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a5b5892b_Prim> _8667_prim = _1a5b534a3_Prim((*(_8617_d))._field_Kind.ptr());;
	if (((_8667_prim == nullptr) || (!(_1a5b5bb2c_IsBool(_8667_prim.ptr()))))) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*((*_85828_i.alloc)._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a5a4c16b_If>(_1a5a4c16b_If{._field_Expr=(*(_8617_d))._field_Model, ._field_Scope=_8597_s});;
}



inline jule::Ptr<_1a5a4c468_Else> _1a5a5b2ac_checkElse(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d9c96_Else> _87830_e) {
	return jule::new_ptr<_1a5a4c468_Else>(_1a5a4c468_Else{._field_Scope=_1a5a5a256_checkChild(_self_, &((*(_87830_e))._field_Scope))});;
}



inline void _1a5a5b565_checkConditional(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59da24c_Conditional> _88437_conditional) {
	jule::Ptr<_1a5a4c886_Conditional> _8857_c = jule::new_ptr<_1a5a4c886_Conditional>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_8857_c, &__jule_any_type34)}));
	(*_8857_c.alloc)._field_Elifs=jule::Slice<jule::Ptr<_1a5a4c16b_If>>::alloc(0LL, ((*(_88437_conditional))._field_Tail.len() + 1LL));
	(*_8857_c.alloc)._field_Elifs=jule::append((*_8857_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1a5a4c16b_If>>::make({_1a5a5ae6b_checkIf(_self_, (*_88437_conditional.alloc)._field_Head)}));
	{
		auto expr = &((*_88437_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9197373:;
		if (it != expr_end) {
			jule::Ptr<_1a59d98bc_If> _89115_elif = *it;
			{
				(*_8857_c.alloc)._field_Elifs=jule::append((*_8857_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1a5a4c16b_If>>::make({_1a5a5ae6b_checkIf(_self_, _89115_elif)}));
			}
			_iter_next_1a9197373:;
			++it;
			goto _iter_begin_1a9197373;
		}
		_iter_end_1a9197373:;
	};
	if (((*_88437_conditional.alloc)._field_Default != nullptr)) {
		(*_8857_c.alloc)._field_Default=_1a5a5b2ac_checkElse(_self_, (*_88437_conditional.alloc)._field_Default);
	};
}



inline void _1a5a5ba3d_checkIterScopeSsc(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Uintptr _90034_it, jule::Ptr<_1a59d3e8d_ScopeTree> _90051_tree, jule::Ptr<_1a5a4bc4d_Scope>* _90074_s, jule::Ptr<_1a5a5420b_scopeChecker> _90089_ssc) {
	(*(_90089_ssc))._field_it=_90034_it;
	_1a5a59a19_checkChildSsc(_self_, &(_90051_tree), _90074_s, &(_90089_ssc));
}



inline jule::Ptr<_1a5a4bc4d_Scope> _1a5a5bee4_checkIterScopeSc(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Uintptr _90533_it, jule::Ptr<_1a59d3e8d_ScopeTree> _90550_tree, jule::Ptr<_1a5a5420b_scopeChecker> _90572_ssc) {
	jule::Ptr<_1a5a4bc4d_Scope> _9067_scope = _1a5a595eb_getChild(_self_.ptr());;
	_1a5a5ba3d_checkIterScopeSsc(_self_, _90533_it, _90550_tree, &(_9067_scope), _90572_ssc);
	return _9067_scope;;
}



inline jule::Ptr<_1a5a4bc4d_Scope> _1a5a5c3e0_checkIterScope(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Uintptr _91131_it, jule::Ptr<_1a59d3e8d_ScopeTree>* _91149_tree) {
	jule::Ptr<_1a5a5420b_scopeChecker> _9127_ssc = _1a5a66295_newChildChecker(_self_);;
	return _1a5a5bee4_checkIterScopeSc(_self_, _91131_it, (*(_91149_tree)), _9127_ssc);;
}



inline void _1a5a5c698_checkInfIter(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d7931_Iter>* _91634_it) {
	jule::Ptr<_1a5a4cb83_InfIter> _9177_kind = jule::new_ptr<_1a5a4cb83_InfIter>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_9177_kind, &__jule_any_type35)}));
	(*_9177_kind.alloc)._field_Scope=_1a5a5c3e0_checkIterScope(_self_, static_cast<jule::Uintptr>(_9177_kind), &((*((*(_91634_it))))._field_Scope));
}



inline void _1a5a5c951_checkWhileIter(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d7931_Iter>* _92236_it) {
	jule::Ptr<_1a59d825b_WhileKind> _9237_wh = (*((*(_92236_it))))._field_Kind.cast_ptr<_1a59d825b_WhileKind>(&__jule_any_type36);;
	if ((((*(_9237_wh))._field_Expr == nullptr) && ((*_9237_wh.alloc)._field_Next == nullptr))) {
		_1a5a5c698_checkInfIter(_self_, _92236_it);
		return;;
	};
	jule::Ptr<_1a5a4d139_WhileIter> _9297_kind = jule::new_ptr<_1a5a4d139_WhileIter>();;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_9297_kind, &__jule_any_type37)}));
	(*_9297_kind.alloc)._field_Scope=_1a5a5c3e0_checkIterScope(_self_, static_cast<jule::Uintptr>(_9297_kind), &((*((*(_92236_it))))._field_Scope));
	if (((*_9237_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1a5b19aeb_Data> _9348_d = _1a5b3e8e0_evalExpr(_1a5a99262_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)), (*_9237_wh.alloc)._field_Expr);;
		if ((_9348_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a5b5892b_Prim> _9394_prim = _1a5b534a3_Prim((*(_9348_d))._field_Kind.ptr());;
		if ((_9394_prim == nullptr)) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*((*(_92236_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a5b5bb2c_IsBool(_9394_prim.ptr())))) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*((*(_92236_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*_9297_kind.alloc)._field_Expr=(*(_9348_d))._field_Model;
	};
	if (_1a59d85be_IsWhileNext(_9237_wh)) {
		if ((!(_1a5a4b1d1_isValidAstStForNextSt(&((*_9237_wh.alloc)._field_Next))))) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_9237_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _9594_n = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len();;
		_1a5a64b45_checkNode(_self_, &((*_9237_wh.alloc)._field_Next));
		if ((_9594_n < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _9629_st = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[_9594_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _9594_n);;
			if ((!(_1a5a4b49a_isValidStForNextSt(&(_9629_st))))) {
				_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_9237_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*_9297_kind.alloc)._field_Next=_9629_st;
		};
	};
}



inline void _1a5a5cd6e_checkComptimeRangeIter(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d7931_Iter>* _97244_it, jule::Ptr<_1a5a4da85_RangeIter>* _97260_kind, jule::Ptr<_1a5b19aeb_Data>* _97283_d) {
	if (((*((*(_97260_kind))))._field_KeyA != nullptr)) {
		if (((!(_1a5a915de_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a5a58a4b_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_97260_kind))))._field_KeyB != nullptr)) {
		if (((!(_1a5a915de_isFlag((*_self_.alloc)._field_s, static_cast<jule::I64>(1LL)))) && _1a5a58a4b_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1a59d8b63_RangeKind> _9867_rang = (*((*(_97244_it))))._field_Kind.cast_ptr<_1a59d8b63_RangeKind>(&__jule_any_type38);;
	_1a5a6684a_makeComptimeRange(_97283_d);
	if ((*((*(_97283_d))))._field_Decl) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*((*(_9867_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_97283_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1a5b0e9ae_rangeChecker _9937_rc = _1a5b0e9ae_rangeChecker{._field_sc=_self_, ._field_rang=_9867_rang, ._field_Kind=(*(_97260_kind)), ._field_d=(*(_97283_d))};;
	jule::Bool _9993_ok = _1a5b119c2_check(&_9937_rc);;
	if ((!(_9993_ok))) {
		return;;
	};
	jule::Ptr<_1a5a251ee_comptimeRange> _10047_comptime = _1a5b5684c_comptimeRange((*((*(_97283_d))))._field_Kind);;
	((_1a5a24ece_comptimeRangeKindMptrData*)(*(_10047_comptime))._field_kind.safe_type())->_1a5a246c6_ready((*(_10047_comptime))._field_kind.data, &((*((*(_97260_kind))))._field_KeyA), &((*((*(_97260_kind))))._field_KeyB));
	jule::I64 _10067_i = 0LL;;
	jule::I64 _10073_errors = (*(*_self_.alloc)._field_s.alloc)._field_errors.len();;
	for (; (_10067_i < ((_1a5a24ece_comptimeRangeKindMptrData*)(*_10047_comptime.alloc)._field_kind.safe_type())->_1a5a24d7a_len((*_10047_comptime.alloc)._field_kind.data)); (_10067_i)++) {
		{
			jule::Ptr<_1a5a5420b_scopeChecker> _10098_ssc = _1a5a66295_newChildChecker(_self_);;
			jule::Ptr<_1a5a4bc4d_Scope> _10108_scope = _1a5a595eb_getChild(_self_);;
			if (((*((*(_97260_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Scope=_10108_scope;
				(*((*(_10098_ssc))._field_table))._field_Vars=jule::append((*(*_10098_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::make({(*((*(_97260_kind))))._field_KeyA}));
			};
			if (((*((*(_97260_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Scope=_10108_scope;
				(*(*_10098_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_10098_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::make({(*((*(_97260_kind))))._field_KeyB}));
			};
			((_1a5a24ece_comptimeRangeKindMptrData*)(*_10047_comptime.alloc)._field_kind.safe_type())->_1a5a24ae4_step((*_10047_comptime.alloc)._field_kind.data, _10067_i, &((*((*(_97260_kind))))._field_KeyA), &((*((*(_97260_kind))))._field_KeyB));
			_1a5a59a19_checkChildSsc(_self_, &((*((*(_97244_it))))._field_Scope), &(_10108_scope), &(_10098_ssc));
			if ((_10073_errors != (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1a91b7c23;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_10108_scope, &__jule_any_type21)}));
		}
	_iter_next_1a91b7c23:;
	}
	_iter_end_1a91b7c23:;;
}



inline void _1a5a5d127_checkRangeIter(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d7931_Iter>* _102936_it) {
	jule::Ptr<_1a59d8b63_RangeKind> _10307_rang = (*((*(_102936_it))))._field_Kind.cast_ptr<_1a59d8b63_RangeKind>(&__jule_any_type38);;
	jule::Ptr<_1a5b19aeb_Data> _10327_d = _1a5b3e59e_evalExpr1(_1a5a99262_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)), (*(_10307_rang))._field_Expr);;
	if ((_10327_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a5a4da85_RangeIter> _10377_kind = jule::new_ptr<_1a5a4da85_RangeIter>(_1a5a4da85_RangeIter{._field_Expr=_10327_d, });;
	if ((*((*(_102936_it))))._field_Comptime) {
		_1a5a5cd6e_checkComptimeRangeIter(_self_, _102936_it, &(_10377_kind), &(_10327_d));
		return;;
	};
	if (_1a5b55560_comptime((*(_10327_d))._field_Kind.ptr())) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*((*_10307_rang.alloc)._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1a5b0e9ae_rangeChecker _10517_rc = _1a5b0e9ae_rangeChecker{._field_sc=_self_, ._field_rang=_10307_rang, ._field_Kind=_10377_kind, ._field_d=_10327_d};;
	jule::Bool _10573_ok = _1a5b119c2_check(&_10517_rc);;
	if ((!(_10573_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_10377_kind, &__jule_any_type39)}));
	jule::Ptr<_1a5a5420b_scopeChecker> _10647_ssc = _1a5a66295_newChildChecker(_self_);;
	jule::Ptr<_1a5a4bc4d_Scope> _10657_scope = _1a5a595eb_getChild(_self_);;
	if (((*(_10377_kind))._field_KeyA != nullptr)) {
		if (((!(_1a5a915de_isFlag((*_self_.alloc)._field_s, static_cast<jule::I64>(1LL)))) && _1a5a58a4b_isDuplicatedIdent(_self_, 0LLU, &((*(*_10377_kind.alloc)._field_KeyA.alloc)._field_Ident)))) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*(*_10377_kind.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_10377_kind.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_10377_kind.alloc)._field_KeyA.alloc)._field_Scope=_10657_scope;
		(*((*(_10647_ssc))._field_table))._field_Vars=jule::append((*(*_10647_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::make({(*_10377_kind.alloc)._field_KeyA}));
	};
	if (((*_10377_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1a5a915de_isFlag((*_self_.alloc)._field_s, static_cast<jule::I64>(1LL)))) && _1a5a58a4b_isDuplicatedIdent(_self_, 0LLU, &((*(*_10377_kind.alloc)._field_KeyB.alloc)._field_Ident)))) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*(*_10377_kind.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_10377_kind.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_10377_kind.alloc)._field_KeyB.alloc)._field_Scope=_10657_scope;
		(*(*_10647_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_10647_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::make({(*_10377_kind.alloc)._field_KeyB}));
	};
	_1a5a5ba3d_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_10377_kind), (*((*(_102936_it))))._field_Scope, &(_10657_scope), _10647_ssc);
	(*_10377_kind.alloc)._field_Scope=_10657_scope;
}



inline void _1a5a5d3d0_checkIter(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d7931_Iter> _108930_it) {
	if (_1a59d7c94_IsInf(_108930_it.ptr())) {
		if ((*_108930_it.alloc)._field_Comptime) {
			_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*_108930_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1a5a5c698_checkInfIter(_self_, &(_108930_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_108930_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a91d0950:;
			{
				if ((*_108930_it.alloc)._field_Comptime) {
					_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_108930_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1a5a5c951_checkWhileIter(_self_, &(_108930_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a91d21d2:;
			{
				_1a5a5d127_checkRangeIter(_self_, &(_108930_it));
			}
		}
		else {
			_case_begin_1a91d1bd7:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1a91d1b82:;
	};
}



inline jule::Bool _1a5a5d721_checkValidContLabel(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Uintptr _111336_it) {
	jule::Ptr<_1a5a5420b_scopeChecker> _11147_scope = _self_;;
	_julec_label_1a91d41c3:;
	if (((*(_11147_scope))._field_it == _111336_it)) {
		return true;;
	};
	if (((*_11147_scope.alloc)._field_parent != nullptr)) {
		_11147_scope=(*_11147_scope.alloc)._field_parent;
		goto _julec_label_1a91d41c3;
	};
	return false;;
}



inline jule::Bool _1a5a5da62_checkValidBreakLabel(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Uintptr _112937_ptr) {
	jule::Ptr<_1a5a5420b_scopeChecker> _11307_scope = _self_;;
	_julec_label_1a91d626e:;
	if (((*(_11307_scope))._field_it == _112937_ptr)) {
		return true;;
	};
	if (((*_11307_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _11384_mtch = static_cast<jule::Uintptr>((*(((_1a5a51989_Case*)((*_11307_scope.alloc)._field_cse))))._field_Owner);;
		if ((_11384_mtch == _112937_ptr)) {
			return true;;
		};
	};
	if (((*_11307_scope.alloc)._field_parent != nullptr)) {
		_11307_scope=(*_11307_scope.alloc)._field_parent;
		goto _julec_label_1a91d626e;
	};
	return false;;
}



inline jule::Ptr<_1a5a4de1a_ContSt> _1a5a5dda3_checkContValidScope(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d9416_ContSt> _115236_c) {
	if (_1a5a57066_isDeferred(_self_)) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*(_115236_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_115236_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1a5a4de1a_ContSt>();;
	};
	jule::Ptr<_1a5a5420b_scopeChecker> _11627_scope = _self_;;
	_julec_label_1a869b405:;
	{
		
		if (((((*_11627_scope.alloc)._field_it == 0LLU) && ((*_11627_scope.alloc)._field_parent != nullptr)) && ((*_11627_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1a8eabd9c:;
			{
				_11627_scope=(*_11627_scope.alloc)._field_parent;
				goto _julec_label_1a869b405;
			}
		}
		else if (((*_11627_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1a8eabe35:;
			{
				return jule::new_ptr<_1a5a4de1a_ContSt>(_1a5a4de1a_ContSt{._field_It=(*_11627_scope.alloc)._field_it});;
			}
		}
		_match_end_1a8eabd14:;
	};
	_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_115236_c.alloc)._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a5a5e15b_checkCont(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d9416_ContSt> _117626_c) {
	jule::Ptr<_1a5a4de1a_ContSt> _11777_cont = _1a5a5dda3_checkContValidScope(_self_, _117626_c);;
	if ((_11777_cont == nullptr)) {
		return;;
	};
	if (((*(_117626_c))._field_Label != nullptr)) {
		jule::Ptr<_1a5a52b88_scopeLabel> _11838_label = _1a5a49267_findLabelParent(&((*(*_117626_c.alloc)._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_11838_label == nullptr)) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*_117626_c.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_117626_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_11838_label))._field_used=true;
		if ((((*(_11838_label))._field_pos + 1LL) >= (*((*((*(_11838_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_117626_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _11964_i = ((*(_11838_label))._field_pos + 1LL);;
		if ((_11964_i >= (*(*(*(_11838_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _12009_st = (*(*(*(_11838_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_11964_i];;
			{
				auto &_match_expr{ _12009_st };
				
				if (_match_expr.type == &__jule_any_type35) {
					_case_begin_1a8eb769e:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1a5a4cb83_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1a8eb787a:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1a5a4da85_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1a8eb78e1:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1a5a4d139_WhileIter>());
					}
				}
				else {
					_case_begin_1a8eb7814:;
					{
						_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_117626_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1a8eb77ae:;
			};
		};
	};
	if (((*(_11777_cont))._field_It != 0LLU)) {
		if ((!(_1a5a5d721_checkValidContLabel(_self_, (*(_11777_cont))._field_It)))) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_117626_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_11777_cont, &__jule_any_type40)}));
}



inline void _1a5a5e414_checkLabel(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d1551_LabelSt> _122331_l) {
	if ((_1a5a57ebd_findLabel(_self_.ptr(), &((*(_122331_l))._field_Ident)) != nullptr)) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*_122331_l.alloc)._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*_122331_l.alloc)._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a5a4e5e1_Label> _12297_label = jule::new_ptr<_1a5a4e5e1_Label>(_1a5a4e5e1_Label{._field_Ident=(*_122331_l.alloc)._field_Ident});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_12297_label, &__jule_any_type20)}));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1a5a52b88_scopeLabel>>::make({jule::new_ptr<_1a5a52b88_scopeLabel>(_1a5a52b88_scopeLabel{._field_token=(*_122331_l.alloc)._field_Token, ._field_label=_12297_label, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL), ._field_scope=_self_, })}));
}



inline void _1a5a5e6bc_pushGoto(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d192a_GotoSt> _124229_gt) {
	jule::Ptr<_1a5a4e9ba_GotoSt> _12437_st = jule::new_ptr<_1a5a4e9ba_GotoSt>(_1a5a4e9ba_GotoSt{._field_Ident=(*((*(_124229_gt))._field_Label))._field_Kind, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_12437_st, &__jule_any_type41)}));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1a5a5321b_scopeGoto>>::make({jule::new_ptr<_1a5a5321b_scopeGoto>(_1a5a5321b_scopeGoto{._field_st=_12437_st, ._field_gt=_124229_gt, ._field_scope=_self_, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL)})}));
}



inline void _1a5a5e975_checkPostfix(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d291a_AssignSt> _125633_a) {
	if (((*(_125633_a))._field_Left.len() > 1LL)) {
		_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*_125633_a.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a59c82a1_Expr> _12627_expr = (*((*_125633_a.alloc)._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1a5b19aeb_Data> _12637_d = _1a5b3e8e0_evalExpr(_1a5a99262_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)), _12627_expr);;
	if ((_12637_d == nullptr)) {
		return;;
	};
	_1a5a4ae17_checkAssign(&((*_self_.alloc)._field_s), &(_12637_d), nullptr, (*_125633_a.alloc)._field_Setter);
	if ((_1a5b539c0_Ptr((*(_12637_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a5b60c1e_Ptr> _12718_ptr = _1a5b539c0_Ptr((*(_12637_d))._field_Kind);;
		if (_1a5b61758_IsUnsafe(_12718_ptr.ptr())) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_125633_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_125633_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(_12637_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1a5b534a3_Prim((*(_12637_d))._field_Kind.ptr()) == nullptr) || (!(_1b916bac9_IsNum((*(_1a5b534a3_Prim((*(_12637_d))._field_Kind)))._field_Kind))))) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_125633_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_125633_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(_12637_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a5a4ed94_Postfix>(_1a5a4ed94_Postfix{._field_Expr=(*(_12637_d))._field_Model, ._field_Op=(*((*_125633_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type42)}));
}



inline jule::Bool _1a5a5ecb6_isNewAssignIdent(_1a5a5420b_scopeChecker* _self_, jule::Str _128932_ident) {
	if ((_1c80b8e24_IsIgnoreIdent(_128932_ident) || (_128932_ident).empty())) {
		return false;;
	};
	return (_1a5b177ec_defByIdent((*(_self_))._field_table.ptr(), &(_128932_ident), false) == nullptr);;
}



inline void _1a5a6006e_removeInteriorMutRisk(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5b19aeb_Data>* _130243_d) {
	jule::Ptr<_1a59e7a84_StructIns> _13033_s = _1a5b54a26_Struct((*((*(_130243_d))))._field_Kind.ptr());;
	if ((_13033_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1a5a5420b_scopeChecker> _13073_root = _1a5a5783b_getHardRoot(_self_);;
	if (((*((*(_13073_root))._field_owner))._field_Owner != _13033_s)) {
		return;;
	};
	(*((*(_130243_d))))._field_Mutable=true;
}



inline jule::Bool _1a5a60525_checkStructureAssignOp(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59e7a84_StructIns>* _131644_s, jule::Ptr<_1a59d291a_AssignSt>* _131664_a, jule::Ptr<_1a5b19aeb_Data>* _131683_r) {
	jule::Ptr<_1a5a0cca8_FnIns> _131911_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_131664_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a8ed3c92:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1a8ed3951:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1a8ed39b7:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1a8ed3a2d:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1a8ed3a94:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1a8ed3b0a:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1a8ed3b71:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1a8ed52e3:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1a8ed5359:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1a8ed53c0:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1a8ed3214:;
			{
				_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_131664_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_131664_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a59e7e08_Str((*(_131644_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1a8ed38da:;
	};
	if ((_131911_overload == nullptr)) {
		_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_131664_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_131664_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1a59e7e08_Str((*(_131644_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1a5a0bc30_ParamIns> _13517_p = (*(_131911_overload))._field_Params[1LL];;
	return _1a5a997c3_checkAssignType((*_self_.alloc)._field_s, (*((*(_13517_p))._field_Decl))._field_Reference, &((*_13517_p.alloc)._field_Kind), _131683_r, (*((*(_131664_a))))._field_Setter);;
}



inline void _1a5a607cd_checkSingleAssign(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d291a_AssignSt>* _135539_a) {
	jule::Ptr<_1a5b19aeb_Data> _135611_l = nullptr;;
	if ((!(_1c80b8e24_IsIgnoreIdent((*((*((*(_135539_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1a59c82a1_Expr> _13598_expr = (*((*((*(_135539_a))))._field_Left[0LL]))._field_Expr;;
		_135611_l=_1a5b3e8e0_evalExpr(_1a5a99262_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)), _13598_expr);
		if ((_135611_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a5b1b823_Eval> _136611_eval = nullptr;;
	if ((_135611_l != nullptr)) {
		_136611_eval=_1a5a98e21_evalp((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0), (*(_135611_l))._field_Kind);
	} else {
		_136611_eval=_1a5a99262_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0));
	};
	(*(_136611_eval))._field_unsafety=_1a5a565b5_isUnsafe(_self_);
	jule::Ptr<_1a5b19aeb_Data> _13737_r = _1a5b3e8e0_evalExpr(_136611_eval, (*((*(_135539_a))))._field_Right);;
	if ((_13737_r == nullptr)) {
		return;;
	};
	_1a5a6006e_removeInteriorMutRisk(_self_, &(_13737_r));
	if ((_135611_l == nullptr)) {
		if (_1a5b521b6_Void((*(_13737_r))._field_Kind.ptr())) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*((*((*(_135539_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_13737_r, &__jule_any_type23)}));
		return;;
	};
	if ((!(_1a5a4ae17_checkAssign(&((*_self_.alloc)._field_s), &(_135611_l), _13737_r, (*((*(_135539_a))))._field_Setter)))) {
		return;;
	};
	if ((_1a5b552c9_Tup((*(_13737_r))._field_Kind) != nullptr)) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*((*(_135539_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a59eb989_OperandExprModel> _13977_lm = jule::new_ptr<_1a59eb989_OperandExprModel>(_1a59eb989_OperandExprModel{._field_Kind=(*(_135611_l))._field_Kind, ._field_Model=(*(_135611_l))._field_Model});;
	jule::Ptr<_1a59eb989_OperandExprModel> _14017_rm = jule::new_ptr<_1a59eb989_OperandExprModel>(_1a59eb989_OperandExprModel{._field_Kind=(*(_13737_r))._field_Kind, ._field_Model=(*(_13737_r))._field_Model});;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a5a5034a_Assign>(_1a5a5034a_Assign{._field_Left=_13977_lm, ._field_Right=_14017_rm, ._field_Op=(*((*(_135539_a))))._field_Setter}), &__jule_any_type43)}));
	if (((*((*((*(_135539_a))))._field_Setter))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a5b03563_assignTypeChecker _14088_checker = _1a5b03563_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_135611_l))._field_Kind, ._field_d=_13737_r, ._field_errorToken=(*((*(_135539_a))))._field_Setter};;
		if (_1a5b04531_check(&_14088_checker)) {
			(*(_14017_rm))._field_Model=(*(_13737_r))._field_Model;
			(*(_13977_lm))._field_Model=(*(_135611_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _14207_strct = _1a5b54a26_Struct((*(_135611_l))._field_Kind);;
	if ((_14207_strct != nullptr)) {
		_1a5a60525_checkStructureAssignOp(_self_, &(_14207_strct), _135539_a, &(_13737_r));
		return;;
	};
	jule::U64 _14253_id = (*(*((*(_135539_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_135539_a))))._field_Setter.alloc)._field_Id=_1a5a66619_removeEqFromOp((*(*((*(_135539_a))))._field_Setter.alloc)._field_Id);
	_1a5b41d43_binaryEval _14277_solver = static__1a5b4276c_new(_136611_eval, (*((*(_135539_a))))._field_Setter);;
	({
		jule::Ptr<_1a5b19aeb_Data> ___jule_assign_arg = _135611_l;
		jule::Ptr<_1a5b19aeb_Data> _1___jule_assign_arg = _13737_r;
		_14277_solver._field_l = ___jule_assign_arg;
		_14277_solver._field_r = _1___jule_assign_arg;
	});
	_1a5b468b4_evalOp(&_14277_solver);
	(*(*((*(_135539_a))))._field_Setter.alloc)._field_Id=_14253_id;
}



inline void _1a5a60d61_processEndPartOfMultiAssign(_1a5a5420b_scopeChecker* _self_, jule::Ptr<_1a5a50801_MultiAssign>* _143348_st, jule::Ptr<_1a59d291a_AssignSt>* _14348_a, jule::Ptr<_1a59d2387_AssignLeft>* _143427_lexpr, jule::Ptr<_1a5b19aeb_Data>* _143452_l, jule::Ptr<_1a5b19aeb_Data>* _143467_r) {
	if (((!((*((*(_143427_lexpr))))._field_Reference)) && _1c80b8e24_IsIgnoreIdent((*((*(_143427_lexpr))))._field_Ident))) {
		if (_1a5b521b6_Void((*((*(_143467_r))))._field_Kind.ptr())) {
			_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_14348_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1a5b19aeb_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_14348_a))))._field_Declarative && ((*((*(_143427_lexpr))))._field_Reference || _1a5a5ecb6_isNewAssignIdent(_self_, (*((*(_143427_lexpr))))._field_Ident)))) {
		if (_1a5a58a4b_isDuplicatedIdent(_self_, 0LLU, &((*((*(_143427_lexpr))))._field_Ident))) {
			_1a5a91cb5_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143427_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1a5a92128_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1a5a56a49_stop(_self_);
			return;;
		};
		if (_1c80b8e24_IsIgnoreIdent((*((*(_143427_lexpr))))._field_Ident)) {
			_1a5a91cb5_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a5ab1ee4_Var> _14558_v = jule::new_ptr<_1a5ab1ee4_Var>(_1a5ab1ee4_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_143427_lexpr))))._field_Token, ._field_Ident=(*((*(_143427_lexpr))))._field_Ident, ._field_Mutable=(*((*(_143427_lexpr))))._field_Mutable, ._field_Reference=(*((*(_143427_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Expr=(*((*(_14348_a))))._field_Right, ._field_Data=(*(_143467_r))}), });;
		_1a5aa876b_checkVarValue((*(_self_))._field_s, &(_14558_v));
		{ jule::Slice<jule::Ptr<_1a5b19aeb_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=(*((*_14558_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_14558_v.alloc)._field_Mutable, ._field_Reference=(*_14558_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_14558_v))._field_Constant)), ._field_Model=jule::Any(_14558_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> &__jule_push_dest = (*((*(_143348_st))))._field_Decls; __jule_push_dest.push(_14558_v); };
		(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::make({_14558_v}));
		return;;
	};
	if (((*((*(_143427_lexpr))))._field_Mutable || (*((*(_143427_lexpr))))._field_Reference)) {
		_1a5a91cb5_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143427_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1a5a4ae17_checkAssign(&((*(_self_))._field_s), _143452_l, (*(_143467_r)), (*((*(_143427_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1a5a9db5c_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_143452_l))))._field_Mutable, false, &((*((*(_143452_l))))._field_Kind), _143467_r, &((*((*(_14348_a))))._field_Setter));
	_1a5b03563_assignTypeChecker _14937_checker = _1a5b03563_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_143452_l))))._field_Kind, ._field_d=(*(_143467_r)), ._field_errorToken=(*((*(_14348_a))))._field_Setter};;
	_1a5b04531_check(&_14937_checker);
	{ jule::Slice<jule::Ptr<_1a5b19aeb_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push((*(_143452_l))); };
}



inline void _1a5a61119_checkMultiAssign(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d291a_AssignSt>* _150338_a) {
	jule::Ptr<_1a5b19aeb_Data> _15047_rd = _1a5b3e8e0_evalExpr(_1a5a99262_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)), (*((*(_150338_a))))._field_Right);;
	if ((_15047_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a5b19aeb_Data>> _15087_right = _1a5a4a0e2_getDatasFromTupleData(&(_15047_rd));;
	if ((_15087_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_15087_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1a9011a39:;
				{
					jule::Ptr<_1a59ee7e4_IndexingExprModel> _15129_iem = (*(_15087_right[0LL]))._field_Model.unsafe_cast_ptr<_1a59ee7e4_IndexingExprModel>();;
					if ((_1a5b55043_Map((*((*(_15129_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_15087_right=jule::Slice<jule::Ptr<_1a5b19aeb_Data>>::make({jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=(*(_1a5b55043_Map((*(*_15129_iem.alloc)._field_Expr.alloc)._field_Kind)))._field_Val, }),jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, })});
					};
				}
			}
			_match_end_1a9011990:;
		};
	};
	{
		
		if (((*((*(_150338_a))))._field_Left.len() > _15087_right.len())) {
			_case_begin_1a9011484:;
			{
				_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*((*(_150338_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_150338_a))))._field_Left.len() < _15087_right.len())) {
			_case_begin_1a9011d69:;
			{
				_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*((*(_150338_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a9011ae4:;
	};
	jule::Ptr<_1a5a50801_MultiAssign> _15317_st = jule::new_ptr<_1a5a50801_MultiAssign>(_1a5a50801_MultiAssign{._field_Right=(*(_15047_rd))._field_Model});;
	{
		auto expr = &((*((*(_150338_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9016a3e:;
		if (it != expr_end) {
			jule::I64 _15347_i = it - expr->begin();
			{
				jule::Ptr<_1a59d2387_AssignLeft> _15358_lexpr = (*((*(_150338_a))))._field_Left[_15347_i];;
				jule::Ptr<_1a5b19aeb_Data> _153612_l = nullptr;;
				if (((!(_1c80b8e24_IsIgnoreIdent((*(_15358_lexpr))._field_Ident))) && ((!((*((*(_150338_a))))._field_Declarative)) || (!(_1a5a5ecb6_isNewAssignIdent(_self_, (*_15358_lexpr.alloc)._field_Ident)))))) {
					_153612_l=_1a5b3e8e0_evalExpr(_1a5a99262_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)), (*_15358_lexpr.alloc)._field_Expr);
					if ((_153612_l == nullptr)) {
						goto _iter_next_1a9016a3e;
					};
				};
				jule::Ptr<_1a5b19aeb_Data> _15448_r = _15087_right[_15347_i];;
				_1a5a6006e_removeInteriorMutRisk(_self_, &(_15448_r));
				_1a5a60d61_processEndPartOfMultiAssign(_self_, &(_15317_st), _150338_a, &(_15358_lexpr), &(_153612_l), &(_15448_r));
			}
			_iter_next_1a9016a3e:;
			++it;
			_15347_i++;
			goto _iter_begin_1a9016a3e;
		}
		_iter_end_1a9016a3e:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_15317_st, &__jule_any_type45)}));
}



inline void _1a5a613c2_checkAssignSt(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d291a_AssignSt> _155134_a) {
	{
		
		if (_1c80bb0be_IsPostfixOp((*((*(_155134_a))._field_Setter))._field_Id)) {
			_case_begin_1a901bca8:;
			{
				_1a5a5e975_checkPostfix(_self_, _155134_a);
			}
		}
		else if (((*(_155134_a))._field_Left.len() == 1LL)) {
			_case_begin_1a901b967:;
			{
				_1a5a607cd_checkSingleAssign(_self_, &(_155134_a));
			}
		}
		else {
			_case_begin_1a901b901:;
			{
				_1a5a61119_checkMultiAssign(_self_, &(_155134_a));
			}
		}
		_match_end_1a901b802:;
	};
}



inline jule::Ptr<_1a5a4bc4d_Scope> _1a5a617bd_checkCaseScope(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5a51989_Case>* _156232_c, jule::Ptr<_1a59d3e8d_ScopeTree>* _156247_tree) {
	jule::Ptr<_1a5a5420b_scopeChecker> _15637_ssc = _1a5a66295_newChildChecker(_self_);;
	(*(_15637_ssc))._field_cse=static_cast<jule::Uintptr>((*(_156232_c)));
	return _1a5a59e15_checkChildSc(_self_, _156247_tree, &(_15637_ssc));;
}



inline jule::Ptr<_1a5a51989_Case> _1a5a61d2e_checkCase(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5a50e61_Match> _156830_m, jule::I64 _156841_i, jule::Ptr<_1a59dae40_Case> _156853_c, jule::Ptr<_1a5b19aeb_Data> _156872_expr) {
	jule::Ptr<_1a5a51989_Case> _15697_case = (*(_156830_m))._field_Cases[_156841_i];;
	(*(_15697_case))._field_Exprs=jule::Slice<jule::Ptr<_1a5b19aeb_Data>>::alloc(0LL, (*(_156853_c))._field_Exprs.len());
	jule::Bool _15717_constMatched = false;;
	jule::Ptr<_1a5b1b823_Eval> _15727_eval = _1a5a99262_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0));;
	{
		auto expr = &((*_156853_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a902252d:;
		if (it != expr_end) {
			jule::Ptr<_1a59c82a1_Expr> _157315_e = *it;
			{
				jule::Ptr<_1a5b19aeb_Data> _15748_d = _1a5b3dacb_evalExprKind(_15727_eval, (*(_157315_e))._field_Kind);;
				if ((_15748_d == nullptr)) {
					goto _iter_next_1a902252d;
				};
				if ((*_156830_m.alloc)._field_TypeMatch) {
					(*_15697_case.alloc)._field_Exprs=jule::append((*_15697_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a5b19aeb_Data>>::make({_15748_d}));
					if ((_1a5a49d28_countMatchType(&(_156830_m), &((*(_15748_d))._field_Kind)) > 1LL)) {
						_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_157315_e.alloc)._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_15748_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*_156830_m.alloc)._field_Comptime) {
						_15717_constMatched=(_15717_constMatched || _1a5b5155b_Equal((*(_156872_expr))._field_Kind, (*(_15748_d))._field_Kind));
					} else {
						if ((_1a5b53edc_TypeEnum((*(_156872_expr))._field_Kind) != nullptr)) {
							_1a5a9a230_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_156872_expr.alloc)._field_Kind), &((*(_15748_d))._field_Kind), &((*_157315_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1a5a1d181_Trait> _15937_trt = _1a5b54cac_Trait((*(_156872_expr))._field_Kind);;
							if ((_15937_trt != nullptr)) {
								_1a5a9a230_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_156872_expr.alloc)._field_Kind), &((*(_15748_d))._field_Kind), &((*_157315_e.alloc)._field_Token));
							};
						};
					};
					goto _iter_next_1a902252d;
				};
				if ((*(_15748_d))._field_Decl) {
					_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_157315_e.alloc)._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1a902252d;
				};
				if ((*_156830_m.alloc)._field_Comptime) {
					if (((!(_1a5b1a503_IsConst(_15748_d.ptr()))) && (_1a5b56d69_comptimeTypeInfo((*(_15748_d))._field_Kind) == nullptr))) {
						_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_157315_e.alloc)._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1a902252d;
					};
					if ((!(_15717_constMatched))) {
						if (_1a5b1a503_IsConst(_15748_d.ptr())) {
							_15717_constMatched=(_1a5b1a503_IsConst(_156872_expr.ptr()) && _1b9172c23_Eq((*(_15748_d))._field_Constant.ptr(), (*(*_156872_expr.alloc)._field_Constant.alloc)));
						} else {
							jule::Ptr<_1a5a34a27_comptimeTypeInfo> _16187_exprCti = _1a5b56d69_comptimeTypeInfo((*(_156872_expr))._field_Kind);;
							_15717_constMatched=((_16187_exprCti != nullptr) && _1a5b5155b_Equal((*(_1a5b56d69_comptimeTypeInfo((*(_15748_d))._field_Kind)))._field_base, (*_16187_exprCti.alloc)._field_base));
						};
					};
				};
				(*_15697_case.alloc)._field_Exprs=jule::append((*_15697_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a5b19aeb_Data>>::make({_15748_d}));
				if ((((!((*_156830_m.alloc)._field_Comptime)) || (_1a5b56d69_comptimeTypeInfo((*(_156872_expr))._field_Kind) == nullptr)) || (_1a5b56d69_comptimeTypeInfo((*(_15748_d))._field_Kind) == nullptr))) {
					_1a5b03563_assignTypeChecker _16289_checker = _1a5b03563_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_156872_expr.alloc)._field_Kind, ._field_d=_15748_d, ._field_errorToken=(*_157315_e.alloc)._field_Token};;
					_1a5b04531_check(&_16289_checker);
				};
			}
			_iter_next_1a902252d:;
			++it;
			goto _iter_begin_1a902252d;
		}
		_iter_end_1a902252d:;
	};
	if (((!((*_156830_m.alloc)._field_Comptime)) || _15717_constMatched)) {
		(*_15697_case.alloc)._field_Scope=_1a5a617bd_checkCaseScope(_self_, &(_15697_case), &((*_156853_c.alloc)._field_Scope));
	};
	return _15697_case;;
}



inline void _1a5a6224c_checkCases(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59db759_MatchCase>* _164332_m, jule::Ptr<_1a5a50e61_Match> _164351_rm, jule::Ptr<_1a5b19aeb_Data> _164367_expr) {
	(*(_164351_rm))._field_Cases=jule::Slice<jule::Ptr<_1a5a51989_Case>>::alloc(0LL, (*((*(_164332_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_164332_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91db120:;
		if (it != expr_end) {
			jule::I64 _16457_i = it - expr->begin();
			{
				jule::Ptr<_1a5a51989_Case> _16468_case = jule::new_ptr<_1a5a51989_Case>(_1a5a51989_Case{._field_Owner=_164351_rm, });;
				if ((_16457_i > 0LL)) {
					(*((*_164351_rm.alloc)._field_Cases[(_16457_i - 1LL)]))._field_Next=_16468_case;
				};
				(*_164351_rm.alloc)._field_Cases=jule::append((*_164351_rm.alloc)._field_Cases,jule::Slice<jule::Ptr<_1a5a51989_Case>>::make({_16468_case}));
			}
			_iter_next_1a91db120:;
			++it;
			_16457_i++;
			goto _iter_begin_1a91db120;
		}
		_iter_end_1a91db120:;
	};
	if ((((*_164351_rm.alloc)._field_Default != nullptr) && ((*((*(_164332_m))))._field_Cases.len() > 0LL))) {
		(*((*_164351_rm.alloc)._field_Cases[((*_164351_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_164351_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_164332_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91de6ea:;
		if (it != expr_end) {
			jule::I64 _16598_i = it - expr->begin();
			jule::Ptr<_1a59dae40_Case> _165915_c = *it;
			{
				_1a5a61d2e_checkCase(_self_, _164351_rm, _16598_i, _165915_c, _164367_expr);
			}
			_iter_next_1a91de6ea:;
			++it;
			_16598_i++;
			goto _iter_begin_1a91de6ea;
		}
		_iter_end_1a91de6ea:;
	};
}



inline jule::Ptr<_1a5a51989_Case> _1a5a62648_checkDefault(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5a50e61_Match> _166433_m, jule::Ptr<_1a59d9c96_Else> _166448_d) {
	jule::Ptr<_1a5a51989_Case> _16657_def = jule::new_ptr<_1a5a51989_Case>(_1a5a51989_Case{._field_Owner=_166433_m, });;
	(*(_16657_def))._field_Scope=_1a5a617bd_checkCaseScope(_self_, &(_16657_def), &((*(_166448_d))._field_Scope));
	return _16657_def;;
}



inline void _1a5a629ab_checkComptimePanic(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1c80b653c_Token> _167239_callToken, jule::Ptr<_1a5a4bc4d_Scope>* _167259_s) {
	if (((*((*(_167259_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16763_stmt = (*((*(_167259_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16763_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a91e2e07:;
			{
				jule::Ptr<_1a5b19aeb_Data> _16794_d = _16763_stmt.unsafe_cast_ptr<_1a5b19aeb_Data>();;
				{
					auto &_match_expr{ (*(_16794_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1a91e3da3:;
						{
							jule::Ptr<_1a5a036a5_BuiltinPanicCallExprModel> _16829_m = (*(_16794_d))._field_Model.unsafe_cast_ptr<_1a5a036a5_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16829_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1a91e504c:;
									{
										jule::Ptr<_1b916c16d_Const> _16856_c = (*(_16829_m))._field_Expr.unsafe_cast_ptr<_1b916c16d_Const>();;
										if ((!(_1b91718e2_IsStr(_16856_c.ptr())))) {
											goto _match_end_1a91e4ed6;
										};
										if ((_167239_callToken == nullptr)) {
											jule::Ptr<_1a5a5420b_scopeChecker> _169011_root = _1a5a5783b_getHardRoot(_self_);;
											if (((*(_169011_root))._field_calledFrom == nullptr)) {
												_167239_callToken=(*(_16829_m))._field_Token;
											} else {
												_167239_callToken=(*(_169011_root))._field_calledFrom;
											};
										};
										_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), _167239_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1b916e2e6_ReadStr(_16856_c), &__jule_any_type4)}));
										_1a5a56a49_stop(_self_);
									}
								}
								_match_end_1a91e4ed6:;
							};
						}
					}
					_match_end_1a91e3d3c:;
				};
			}
		}
		_match_end_1a91e2da2:;
	};
}



inline void _1a5a62d1e_processConstMatch(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a5a50e61_Match>* _170439_tm, jule::Ptr<_1a59db759_MatchCase>* _170456_m) {
	{
		auto expr = &((*((*(_170439_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91e539e:;
		if (it != expr_end) {
			jule::I64 _17058_i = it - expr->begin();
			jule::Ptr<_1a5a51989_Case> _170515_c = *it;
			{
				if (((*(_170515_c))._field_Scope != nullptr)) {
					jule::Ptr<_1c80b653c_Token> _170713_token = nullptr;;
					if (((!((*((*(_170439_tm))))._field_TypeMatch)) && ((*(*_170515_c.alloc)._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_170713_token=(*((*((*((*(_170456_m))))._field_Cases[_17058_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1a5a629ab_checkComptimePanic(_self_, _170713_token, &((*_170515_c.alloc)._field_Scope));
					(*((*(_170439_tm))))._field_Default=_170515_c;
					(*((*(_170439_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1a91e539e:;
			++it;
			_17058_i++;
			goto _iter_begin_1a91e539e;
		}
		_iter_end_1a91e539e:;
	};
	if (((*((*(_170456_m))))._field_Default != nullptr)) {
		(*((*(_170439_tm))))._field_Cases=nullptr;
		(*((*(_170439_tm))))._field_Default=_1a5a62648_checkDefault(_self_, (*(_170439_tm)), (*((*(_170456_m))))._field_Default);
		if (((*((*(_170439_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1c80b653c_Token> _172113_token = nullptr;;
			if ((!((*((*(_170439_tm))))._field_TypeMatch))) {
				_172113_token=(*((*(*((*(_170456_m))))._field_Default.alloc)._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1a5a629ab_checkComptimePanic(_self_, _172113_token, &((*(*((*(_170439_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_170439_tm))))._field_Cases=nullptr;
	};
}



inline void _1a5a630c7_checkTypeMatch(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59db759_MatchCase>* _173336_m) {
	jule::Ptr<_1a5b19aeb_Data> _17347_d = _1a5b3de1c_eval1(_1a5a99262_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)), (*((*(_173336_m))))._field_Expr);;
	if ((_17347_d == nullptr)) {
		return;;
	};
	if ((*((*(_173336_m))))._field_Comptime) {
		jule::Ptr<_1a5a34a27_comptimeTypeInfo> _17408_cti = _1a5b56d69_comptimeTypeInfo((*(_17347_d))._field_Kind.ptr());;
		if ((_17408_cti == nullptr)) {
			if ((!((*(_17347_d))._field_Decl))) {
				_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*((*((*(_173336_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_17347_d))._field_Kind=(*(_17408_cti))._field_base;
		};
	} else if (((*(_17347_d))._field_Decl || (!(((((_1a5b534a3_Prim((*(_17347_d))._field_Kind.ptr()) != nullptr) && _1a5b5c149_IsAny(_1a5b534a3_Prim((*(_17347_d))._field_Kind).ptr())) || (_1a5b54cac_Trait((*(_17347_d))._field_Kind) != nullptr)) || (_1a5b53edc_TypeEnum((*(_17347_d))._field_Kind) != nullptr)))))) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*((*((*(_173336_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a5a50e61_Match> _17547_tm = jule::new_ptr<_1a5a50e61_Match>(_1a5a50e61_Match{._field_Expr=_17347_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_173336_m))))._field_Comptime, });;
	if (((!((*(_17547_tm))._field_Comptime)) && ((*((*(_173336_m))))._field_Default != nullptr))) {
		(*_17547_tm.alloc)._field_Default=_1a5a62648_checkDefault(_self_, _17547_tm, (*((*(_173336_m))))._field_Default);
	};
	_1a5a6224c_checkCases(_self_, _173336_m, _17547_tm, _17347_d);
	if ((*_17547_tm.alloc)._field_Comptime) {
		_1a5a62d1e_processConstMatch(_self_, &(_17547_tm), _173336_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_17547_tm, &__jule_any_type46)}));
}



inline void _1a5a63380_checkCommonMatch(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59db759_MatchCase>* _177538_m) {
	jule::Ptr<_1a5b19aeb_Data> _177611_d = nullptr;;
	if (((*((*(_177538_m))))._field_Expr == nullptr)) {
		_177611_d=jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Constant=static__1b916cb41_NewBool(true)});
		(*(_177611_d))._field_Model=jule::Any((*_177611_d.alloc)._field_Constant, &__jule_any_type19);
	} else {
		_177611_d=_1a5b3e59e_evalExpr1(_1a5a99262_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)), (*((*(_177538_m))))._field_Expr);
		if ((_177611_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_177538_m))))._field_Comptime) {
		if ((!(_1a5a66d45_canComptimeMatch(&(_177611_d))))) {
			_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_177538_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1a5b55560_comptime((*(_177611_d))._field_Kind.ptr())) {
		_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_177538_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a5a50e61_Match> _18027_mc = jule::new_ptr<_1a5a50e61_Match>(_1a5a50e61_Match{._field_Expr=_177611_d, ._field_Comptime=(*((*(_177538_m))))._field_Comptime, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_18027_mc, &__jule_any_type46)}));
	if (((!((*(_18027_mc))._field_Comptime)) && ((*((*(_177538_m))))._field_Default != nullptr))) {
		(*_18027_mc.alloc)._field_Default=_1a5a62648_checkDefault(_self_, _18027_mc, (*((*(_177538_m))))._field_Default);
	};
	_1a5a6224c_checkCases(_self_, _177538_m, _18027_mc, _177611_d);
	if ((*_18027_mc.alloc)._field_Comptime) {
		_1a5a62d1e_processConstMatch(_self_, &(_18027_mc), _177538_m);
	};
}



inline void _1a5a63638_checkMatch(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59db759_MatchCase> _182531_m) {
	if ((*(_182531_m))._field_TypeMatch) {
		_1a5a630c7_checkTypeMatch(_self_, &(_182531_m));
		return;;
	};
	_1a5a63380_checkCommonMatch(_self_, &(_182531_m));
}



inline void _1a5a638e1_checkFall(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d1c27_FallSt> _183326_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) || _1a5a57066_isDeferred(_self_))) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183326_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1a5a51989_Case* _18417_case = ((_1a5a51989_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_18417_case))._field_Owner))._field_Comptime) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_183326_f.alloc)._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_18417_case))._field_Next == nullptr)) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_183326_f.alloc)._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1a5a52182_FallSt>(_1a5a52182_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_18417_case))._field_Next)}), &__jule_any_type47)}));
}



inline jule::Ptr<_1a5a4e2e4_BreakSt> _1a5a63c32_checkBreakWithLabel(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d903c_BreakSt> _185636_b) {
	jule::Ptr<_1a5a4e2e4_BreakSt> _18577_brk = _1a5a64073_checkPlainBreak(_self_, _185636_b);;
	if ((_18577_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18577_brk))._field_It=0LLU;
	(*(_18577_brk))._field_Mtch=0LLU;
	jule::Ptr<_1a5a52b88_scopeLabel> _18677_label = _1a5a49267_findLabelParent(&((*((*(_185636_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18677_label == nullptr)) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*_185636_b.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_185636_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_18677_label))._field_used=true;
	if ((((*(_18677_label))._field_pos + 1LL) >= (*((*((*(_18677_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_185636_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185636_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18803_i = ((*(_18677_label))._field_pos + 1LL);;
	if ((_18803_i >= (*(*(*(_18677_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_185636_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185636_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _18848_st = (*(*(*(_18677_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_18803_i];;
		{
			auto &_match_expr{ _18848_st };
			
			if (_match_expr.type == &__jule_any_type35) {
				_case_begin_1a92244dd:;
				{
					(*(_18577_brk))._field_It=static_cast<jule::Uintptr>(_18848_st.unsafe_cast_ptr<_1a5a4cb83_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1a92246b9:;
				{
					(*(_18577_brk))._field_It=static_cast<jule::Uintptr>(_18848_st.unsafe_cast_ptr<_1a5a4da85_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1a9224730:;
				{
					(*(_18577_brk))._field_It=static_cast<jule::Uintptr>(_18848_st.unsafe_cast_ptr<_1a5a4d139_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1a9224796:;
				{
					(*(_18577_brk))._field_Mtch=static_cast<jule::Uintptr>(_18848_st.unsafe_cast_ptr<_1a5a50e61_Match>());
				}
			}
			else {
				_case_begin_1a9224653:;
				{
					_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_185636_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185636_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1a92245ed:;
		};
	};
	if (((*(_18577_brk))._field_It != 0LLU)) {
		if ((!(_1a5a5da62_checkValidBreakLabel(_self_, (*(_18577_brk))._field_It)))) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_185636_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185636_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_18577_brk))._field_Mtch != 0LLU)) {
		if ((!(_1a5a5da62_checkValidBreakLabel(_self_, (*(_18577_brk))._field_Mtch)))) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_185636_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185636_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	return _18577_brk;;
}



inline jule::Ptr<_1a5a4e2e4_BreakSt> _1a5a64073_checkPlainBreak(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d903c_BreakSt> _191432_b) {
	if (_1a5a57066_isDeferred(_self_)) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*(_191432_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5a5420b_scopeChecker> _19207_scope = _self_;;
	_julec_label_1a922b979:;
	{
		
		if ((((((*_19207_scope.alloc)._field_it == 0LLU) && ((*_19207_scope.alloc)._field_cse == 0LLU)) && ((*_19207_scope.alloc)._field_parent != nullptr)) && ((*_19207_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1a922c98b:;
			{
				_19207_scope=(*_19207_scope.alloc)._field_parent;
				goto _julec_label_1a922b979;
			}
		}
		else if (((*_19207_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1a922ca24:;
			{
				return jule::new_ptr<_1a5a4e2e4_BreakSt>(_1a5a4e2e4_BreakSt{._field_It=(*_19207_scope.alloc)._field_it, });;
			}
		}
		else if (((*_19207_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1a922ca8a:;
			{
				return jule::new_ptr<_1a5a4e2e4_BreakSt>(_1a5a4e2e4_BreakSt{._field_Mtch=static_cast<jule::Uintptr>((*(((_1a5a51989_Case*)((*_19207_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1a922c8ae:;
	};
	_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_191432_b.alloc)._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a5a6432b_checkBreak(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d903c_BreakSt> _193627_b) {
	if (((*(_193627_b))._field_Label != nullptr)) {
		jule::Ptr<_1a5a4e2e4_BreakSt> _19388_brk = _1a5a63c32_checkBreakWithLabel(_self_, _193627_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_19388_brk, &__jule_any_type48)}));
		return;;
	};
	jule::Ptr<_1a5a4e2e4_BreakSt> _19437_brk = _1a5a64073_checkPlainBreak(_self_, _193627_b);;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_19437_brk, &__jule_any_type48)}));
}



inline void _1a5a645d4_checkRet(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d71b1_RetSt> _194729_r) {
	if (_1a5a57066_isDeferred(_self_)) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*(_194729_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5a52528_RetSt> _19527_rt = jule::new_ptr<_1a5a52528_RetSt>(_1a5a52528_RetSt{._field_Func=(*(_1a5a575a5_getRoot(_self_)))._field_owner, });;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_19527_rt, &__jule_any_type49)}));
	jule::Ptr<_1a5b12220_retTypeChecker> _19577_rtc = jule::new_ptr<_1a5b12220_retTypeChecker>(_1a5b12220_retTypeChecker{._field_sc=_self_, ._field_f=(*(_19527_rt))._field_Func, ._field_errorToken=(*_194729_r.alloc)._field_Token, });;
	jule::Bool _19623_ok = _1a5b131cc_check(_19577_rtc.ptr(), &((*_194729_r.alloc)._field_Expr));;
	if ((!(_19623_ok))) {
		return;;
	};
	if (((*_194729_r.alloc)._field_Expr != nullptr)) {
		(*_19527_rt.alloc)._field_Expr=(*_19577_rtc.alloc)._field_model;
	};
}



inline void _1a5a6488c_checkUseExpr(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59c8b75_UseExpr> _197229_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*(_197229_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1a5a57066_isDeferred(_self_)) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_197229_ue.alloc)._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_197229_ue.alloc)._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1a5a64b45_checkNode(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Any* _198831_node) {
	{
		auto &_match_expr{ (*(_198831_node)) };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1a92434c9:;
			{
				_1a5a5a50e_checkAnonScope(_self_, (*(_198831_node)).cast_ptr<_1a59d3e8d_ScopeTree>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a9242d47:;
			{
				_1a5a58d04_checkVarDecl(_self_, (*(_198831_node)).cast_ptr<_1a59d6cd7_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a9243199:;
			{
				_1a5a59365_checkTypeAliasDecl(_self_, (*(_198831_node)).cast_ptr<_1a59da989_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a9243210:;
			{
				_1a5a5ab2a_checkExpr(_self_, (*(_198831_node)).cast_ptr<_1a59c82a1_Expr>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a9243276:;
			{
				_1a5a5b565_checkConditional(_self_, (*(_198831_node)).cast_ptr<_1a59da24c_Conditional>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a92435d9:;
			{
				_1a5a5d3d0_checkIter(_self_, (*(_198831_node)).cast_ptr<_1a59d7931_Iter>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1a9243650:;
			{
				_1a5a5e15b_checkCont(_self_, (*(_198831_node)).cast_ptr<_1a59d9416_ContSt>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1a92436b6:;
			{
				_1a5a5e414_checkLabel(_self_, (*(_198831_node)).cast_ptr<_1a59d1551_LabelSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1a924372c:;
			{
				_1a5a5e6bc_pushGoto(_self_, (*(_198831_node)).cast_ptr<_1a59d192a_GotoSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1a9243793:;
			{
				_1a5a613c2_checkAssignSt(_self_, (*(_198831_node)).cast_ptr<_1a59d291a_AssignSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1a9243809:;
			{
				_1a5a63638_checkMatch(_self_, (*(_198831_node)).cast_ptr<_1a59db759_MatchCase>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1a9243870:;
			{
				_1a5a638e1_checkFall(_self_, (*(_198831_node)).cast_ptr<_1a59d1c27_FallSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1a92438d6:;
			{
				_1a5a6432b_checkBreak(_self_, (*(_198831_node)).cast_ptr<_1a59d903c_BreakSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1a924395d:;
			{
				_1a5a645d4_checkRet(_self_, (*(_198831_node)).cast_ptr<_1a59d71b1_RetSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1a92439d5:;
			{
				_1a5a6488c_checkUseExpr(_self_, (*(_198831_node)).cast_ptr<_1a59c8b75_UseExpr>(&__jule_any_type62));
			}
		}
		else {
			_case_begin_1a9243012:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1a9242eac:;
	};
}



inline void _1a5a64d43_checkResult(jule::Ptr<_1a5a5420b_scopeChecker> _self_) {
	_1a59d382d_Stmt _20267_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _20267_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1a924c79c:;
			{
				jule::Ptr<_1a59c8b75_UseExpr> _20298_ue = _20267_stmt._field_Data.unsafe_cast_ptr<_1a59c8b75_UseExpr>();;
				jule::Ptr<_1a5b19aeb_Data> _20308_d = _1a5b3e8e0_evalExpr(_1a5a99262_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)), (*(_20298_ue))._field_Expr);;
				if ((_20308_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_20308_d, &__jule_any_type23)}));
				jule::Ptr<_1a5b12220_retTypeChecker> _20358_rtc = jule::new_ptr<_1a5b12220_retTypeChecker>(_1a5b12220_retTypeChecker{._field_sc=_self_, ._field_types=_1a5a0dea7_Types((*_self_.alloc)._field_result.ptr()), ._field_errorToken=(*((*_20298_ue.alloc)._field_Expr))._field_Token, });;
				_1a5b131cc_check(_20358_rtc.ptr(), &((*_20298_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a924d36e:;
			{
				jule::Ptr<_1a59c82a1_Expr> _20428_expr = _20267_stmt._field_Data.unsafe_cast_ptr<_1a59c82a1_Expr>();;
				jule::Ptr<_1a5b19aeb_Data> _20438_d = _1a5b3e8e0_evalExpr(_1a5a99262_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)), _20428_expr);;
				if ((_20438_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_20438_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1a925393a:;
						{
							jule::Ptr<_1a5a05762_BuiltinErrorCallExprModel> _20499_m = (*(_20438_d))._field_Model.unsafe_cast_ptr<_1a5a05762_BuiltinErrorCallExprModel>();;
							_1a5a5a872_processErrorCall(_self_, &(_20499_m), (*(_20428_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_20438_d, &__jule_any_type23)}));
						}
					}
					else {
						_case_begin_1a9253e46:;
						{
							return;;
						}
					}
					_match_end_1a9253de1:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type60 || _match_expr.type == &__jule_any_type54 || _match_expr.type == &__jule_any_type61) {
			_case_begin_1a924ca33:;
			{
				_1a5a64b45_checkNode(_self_, &(_20267_stmt._field_Data));
			}
		}
		else {
			_case_begin_1a924c9bc:;
			{
				_1a5a64b45_checkNode(_self_, &(_20267_stmt._field_Data));
				return;;
			}
		}
		_match_end_1a924c967:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1a5a65041_checkTree(jule::Ptr<_1a5a5420b_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _20717_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20717_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20717_n); ((*_self_.alloc)._field_i)++) {
		{
			_1a59d382d_Stmt _20798_stmt = (*(*_self_.alloc)._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1a5a64b45_checkNode(_self_, &(_20798_stmt._field_Data));
			if (_1a5a56cd0_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1a9258038:;
	}
	_iter_end_1a9258038:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1a5a64d43_checkResult(_self_);
	};
}



inline void _1a5a653a4_checkGoto(_1a5a5420b_scopeChecker* _self_, jule::Ptr<_1a5a5321b_scopeGoto>* _209030_gt, jule::Ptr<_1a5a52b88_scopeLabel>* _209051_label) {
	jule::Ptr<_1a5a5420b_scopeChecker> _20917_gtsc = (*((*(_209030_gt))))._field_scope;;
	while ((((*(_20917_gtsc))._field_childIndex - 1LL) > (*((*((*(_209051_label))))._field_scope))._field_childIndex)) {
		{
			_20917_gtsc=(*_20917_gtsc.alloc)._field_parent;
		}
	_iter_next_1a925b734:;
	}
	_iter_end_1a925b734:;;
	jule::I64 _20967_n = 0LL;;
	if (((*_20917_gtsc.alloc)._field_scope == (*(*((*(_209051_label))))._field_scope.alloc)._field_scope)) {
		if (((*((*(_209030_gt))))._field_pos > (*((*(_209051_label))))._field_pos)) {
			return;;
		};
		_20967_n=(*((*(_209030_gt))))._field_pos;
	};
	jule::I64 _21097_i = ((*((*(_209051_label))))._field_pos - 1LL);;
	if ((_20967_n == 0LL)) {
		{
			auto expr = &((*((*(*((*(_209051_label))))._field_scope.alloc)._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a925ed53:;
			if (it != expr_end) {
				jule::I64 _21128_j = it - expr->begin();
				jule::Any _211211_stmt = *it;
				{
					if (_1a5a499a4_stmtIsGotoScope(&(_211211_stmt), &((*_20917_gtsc.alloc)._field_scope))) {
						_20967_n=_21128_j;
						goto _iter_end_1a925ed53;
					};
				}
				_iter_next_1a925ed53:;
				++it;
				_21128_j++;
				goto _iter_begin_1a925ed53;
			}
			_iter_end_1a925ed53:;
		};
	};
	for (; (_21097_i >= _20967_n); (_21097_i)--) {
		{
			jule::Any _21228_stmt = (*(*(*((*(_209051_label))))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_21097_i];;
			if (_1a5a4b764_stmtIsDef(&(_21228_stmt))) {
				_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_209030_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*(*((*(_209030_gt))))._field_gt.alloc)._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1a925e391:;
	}
	_iter_end_1a925e391:;;
}



inline void _1a5a655a2_checkGotos(_1a5a5420b_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92605c3:;
		if (it != expr_end) {
			jule::Ptr<_1a5a5321b_scopeGoto> _213115_gt = *it;
			{
				jule::Ptr<_1a5a52b88_scopeLabel> _21328_label = _1a5a58650_findLabelAll(_self_, &((*((*((*(_213115_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_21328_label == nullptr)) {
					_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*(*_213115_gt.alloc)._field_gt.alloc)._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*(*_213115_gt.alloc)._field_gt.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1a92605c3;
				};
				(*((*_213115_gt.alloc)._field_st))._field_Label=(*(_21328_label))._field_label;
				(*(_21328_label))._field_used=true;
				_1a5a653a4_checkGoto(_self_, &(_213115_gt), &(_21328_label));
			}
			_iter_next_1a92605c3:;
			++it;
			goto _iter_begin_1a92605c3;
		}
		_iter_end_1a92605c3:;
	};
}



inline void _1a5a657a0_checkLabels(_1a5a5420b_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9266761:;
		if (it != expr_end) {
			jule::Ptr<_1a5a52b88_scopeLabel> _214410_l = *it;
			{
				if ((!((*(_214410_l))._field_used))) {
					_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*_214410_l.alloc)._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*_214410_l.alloc)._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1a9266761:;
			++it;
			goto _iter_begin_1a9266761;
		}
		_iter_end_1a9266761:;
	};
}



inline void _1a5a6599d_checkVars(_1a5a5420b_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92683ab:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> _215210_v = *it;
			{
				if (((((!((*(_215210_v))._field_Used)) && (!((*_215210_v.alloc)._field_Constant))) && (!(_1c80b8e24_IsIgnoreIdent((*_215210_v.alloc)._field_Ident)))) && (!(_1c80b91dd_IsAnonIdent((*_215210_v.alloc)._field_Ident))))) {
					_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*_215210_v.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_215210_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1a92683ab:;
			++it;
			goto _iter_begin_1a92683ab;
		}
		_iter_end_1a92683ab:;
	};
}



inline void _1a5a65b9b_checkAliases(_1a5a5420b_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a926aa62:;
		if (it != expr_end) {
			jule::Ptr<_1a5b50060_TypeAlias> _216010_a = *it;
			{
				if ((((!((*(_216010_a))._field_Used)) && (!(_1c80b8e24_IsIgnoreIdent((*_216010_a.alloc)._field_Ident)))) && (!(_1c80b91dd_IsAnonIdent((*_216010_a.alloc)._field_Ident))))) {
					_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*_216010_a.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_216010_a.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1a926aa62:;
			++it;
			goto _iter_begin_1a926aa62;
		}
		_iter_end_1a926aa62:;
	};
}



inline void _1a5a6600e_check(jule::Ptr<_1a5a5420b_scopeChecker> _self_, jule::Ptr<_1a59d3e8d_ScopeTree>* _216827_tree, jule::Ptr<_1a5a4bc4d_Scope>* _216850_s) {
	(*((*(_216850_s))))._field_Deferred=(*((*(_216827_tree))))._field_Deferred;
	(*((*(_216850_s))))._field_Unsafety=(*((*(_216827_tree))))._field_Unsafety;
	jule::I64 _21723_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_216827_tree));
	(*_self_.alloc)._field_scope=(*(_216850_s));
	_1a5a65041_checkTree(_self_);
	if ((_21723_errors == (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
		_1a5a6599d_checkVars(_self_);
		_1a5a65b9b_checkAliases(_self_);
		if (_1a5a5684b_isRoot(_self_)) {
			_1a5a655a2_checkGotos(_self_);
			_1a5a657a0_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1a5a5420b_scopeChecker> _1a5a66295_newChildChecker(jule::Ptr<_1a5a5420b_scopeChecker> _self_) {
	jule::Ptr<_1a5a5420b_scopeChecker> _21927_base = _1a5a48a2a_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21927_base))._field_parent=_self_;
	(*_21927_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21927_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21927_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21927_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a5420b_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "captured:" << _Src._field_captured << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1a5a67c47_checkCdef(_1a5a6783a_directiveChecker* _self_, jule::Ptr<_1a59c3389_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a92737e5:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a5a09cc7_Fn>()))._field_Binded) {
					goto _match_end_1a9273a26;
				};
				goto _case_begin_1a9273a7b;
			}
		}
		else {
			_case_begin_1a9273a7b:;
			{
				_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a9273a26:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a5a68000_checkTypedef(_1a5a6783a_directiveChecker* _self_, jule::Ptr<_1a59c3389_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a927674e:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a59e4d06_Struct>()))._field_Binded) {
					goto _match_end_1a9276980;
				};
				goto _case_begin_1a92769d5;
			}
		}
		else {
			_case_begin_1a92769d5:;
			{
				_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a9276980:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a5a682a8_checkNamespace(_1a5a6783a_directiveChecker* _self_, jule::Ptr<_1a59c3389_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a92796a8:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a59e4d06_Struct>()))._field_Binded))) {
					_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a92799a5:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a5a09cc7_Fn>()))._field_Binded))) {
					_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a9279a1b:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1a5ab1ee4_Var>()))._field_Binded))) {
					_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1a927993e:;
			{
				_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a92798d9:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1c80b653c_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), _733_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a5a91cb5_pushErr((*(_self_))._field_s, _733_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a92854a5:;
			{
				if ((_1a5b48300_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1a59c3389_Directive> _909_typedef = jule::new_ptr<_1a59c3389_Directive>(_1a59c3389_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, });;
					(*((*(_909_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),jule::Slice<jule::Ptr<_1a59c3389_Directive>>::make({_909_typedef}));
				};
			}
		}
		_match_end_1a928543e:;
	};
}



inline void _1a5a68561_checkDeprecated(_1a5a6783a_directiveChecker* _self_, jule::Ptr<_1a59c3389_Directive>* _9936_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a9287650:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a59e4d06_Struct>()))._field_Binded) {
					_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a92878d6:;
			{
				jule::Ptr<_1a5a09cc7_Fn> _1068_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a5a09cc7_Fn>();;
				if ((((*(_1068_f))._field_Binded || _1a5a0a767_IsEntryPoint(_1068_f)) || _1a5a0a9ed_IsInit(_1068_f))) {
					_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a928794c:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1a5ab1ee4_Var>()))._field_Binded) {
					_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1a9287870:;
			{
				_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a928781a:;
	};
	if (((*((*(_9936_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9936_d))))._field_Args.len() > 1LL)) {
		_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1c80b653c_Token> _1253_arg = (*((*(_9936_d))))._field_Args[0LL];;
	if (((*(_1253_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a5a91cb5_pushErr((*(_self_))._field_s, _1253_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1253_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1a5a91cb5_pushErr((*(_self_))._field_s, _1253_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9936_d))))._field_Args[0LL]))._field_Kind=(*_1253_arg.alloc)._field_Kind.slice(1LL, ((*_1253_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1a5a68819_checkTest(_1a5a6783a_directiveChecker* _self_, jule::Ptr<_1a59c3389_Directive>* _13926_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a928dec5:;
			{
				jule::Ptr<_1a5a09cc7_Fn> _1424_f = (*(_self_))._field_o.unsafe_cast_ptr<_1a5a09cc7_Fn>();;
				if ((((!((*(_1424_f))._field_Binded)) && (!(_1a5a0a9ed_IsInit(_1424_f)))) && (!(_1a5a0a767_IsEntryPoint(_1424_f))))) {
					goto _match_end_1a92939ad;
				};
				if (_1a5a0a4d1_IsMethod(_1424_f)) {
					_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*_1424_f.alloc)._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1a92939ad;
				};
				goto _case_begin_1a9293a13;
			}
		}
		else {
			_case_begin_1a9293a13:;
			{
				_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_13926_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13926_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a92939ad:;
	};
	if (((*((*(_13926_d))))._field_Args.len() > 0LL)) {
		_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_13926_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a5a68ac2_checkDirective(_1a5a6783a_directiveChecker* _self_, jule::Ptr<_1a59c3389_Directive>* _16035_d) {
	{
		auto &_match_expr{ (*((*((*(_16035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1a9298683:;
			{
				_1a5a67c47_checkCdef(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1a92986e9:;
			{
				_1a5a68000_checkTypedef(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1a9298760:;
			{
				_1a5a682a8_checkNamespace(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1a92987c6:;
			{
				_1a5a68561_checkDeprecated(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1a929883c:;
			{
				_1a5a68819_checkTest(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1a92988a3:;
			{
				_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_16035_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16035_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1a92980bc:;
			{
				_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*((*(_16035_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16035_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1a92985b7:;
	};
}



inline void _1a5a68cc0_check(_1a5a6783a_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a929c654:;
		if (it != expr_end) {
			jule::Ptr<_1a59c3389_Directive> _18115_d = *it;
			{
				_1a5a68ac2_checkDirective(_self_, &(_18115_d));
			}
			_iter_next_1a929c654:;
			++it;
			goto _iter_begin_1a929c654;
		}
		_iter_end_1a929c654:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a6783a_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a6e2c0_SelectPackage(_1a5a6dcd6_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a5a6e6bb_FindVar(_1a5a6dcd6_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1a5a71327_isLookupable(_self_, &(_18923_ident))))) {
		return nullptr;;
	};
	return _1a5a6b2bc_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1a5b50060_TypeAlias> _1a5a6eab7_FindTypeAlias(_1a5a6dcd6_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1a5a71327_isLookupable(_self_, &(_20129_ident))))) {
		return nullptr;;
	};
	return _1a5a6b740_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1a59e4d06_Struct> _1a5a6eeb3_FindStruct(_1a5a6dcd6_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1a5a71327_isLookupable(_self_, &(_21326_ident))))) {
		return nullptr;;
	};
	return _1a5a6bb6e_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1a5a09cc7_Fn> _1a5a703ae_FindFn(_1a5a6dcd6_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1a5a71327_isLookupable(_self_, &(_22522_ident))))) {
		return nullptr;;
	};
	return _1a5a6c125_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1a5a1d181_Trait> _1a5a70700_FindTrait(_1a5a6dcd6_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1a5a71327_isLookupable(_self_, &(_23625_ident))))) {
		return nullptr;;
	};
	return _1a5a6c466_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1a5a2088c_Enum> _1a5a70a41_FindEnum(_1a5a6dcd6_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1a5a71327_isLookupable(_self_, &(_24724_ident))))) {
		return nullptr;;
	};
	return _1a5a6c7da_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1a5a22097_TypeEnum> _1a5a70d82_FindTypeEnum(_1a5a6dcd6_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1a5a71327_isLookupable(_self_, &(_25828_ident))))) {
		return nullptr;;
	};
	return _1a5a6cb5e_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1a5a71327_isLookupable(_1a5a6dcd6_ImportInfo* _self_, jule::Str* _26725_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1a5a71668_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1a5a71668_existIdent(_self_, (*(_26725_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1a5a71668_existIdent(_1a5a6dcd6_ImportInfo* _self_, jule::Str _28722_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92b2669:;
		if (it != expr_end) {
			jule::Ptr<_1c80b653c_Token> *_28810_sident = it;
			{
				if (((*((*(_28810_sident))))._field_Kind == _28722_ident)) {
					return true;;
				};
			}
			_iter_next_1a92b2669:;
			++it;
			goto _iter_begin_1a92b2669;
		}
		_iter_end_1a92b2669:;
	};
	return false;;
}



inline jule::Bool _1a5a718ee_isAccessibleViaSelection(_1a5a6dcd6_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1a5a71668_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a6dcd6_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a721a2_SelectPackage(_1a5a71c0c_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a5a7259d_FindVar(_1a5a71c0c_Package* _self_, jule::Str _31423_ident, jule::Bool _31435_binded) {
	return _1a5a6b2bc_findVarInPackage(&((*(_self_))._field_Files), &(_31423_ident), _31435_binded);;
}



inline jule::Ptr<_1a5b50060_TypeAlias> _1a5a72999_FindTypeAlias(_1a5a71c0c_Package* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	return _1a5a6b740_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32029_ident), _32041_binded);;
}



inline jule::Ptr<_1a59e4d06_Struct> _1a5a72d95_FindStruct(_1a5a71c0c_Package* _self_, jule::Str _32626_ident, jule::Bool _32638_binded) {
	return _1a5a6bb6e_findStructInPackage(&((*(_self_))._field_Files), &(_32626_ident), _32638_binded);;
}



inline jule::Ptr<_1a5a09cc7_Fn> _1a5a73291_FindFn(_1a5a71c0c_Package* _self_, jule::Str _33222_ident, jule::Bool _33234_binded) {
	return _1a5a6c125_findFnInPackage(&((*(_self_))._field_Files), &(_33222_ident), _33234_binded);;
}



inline jule::Ptr<_1a5a1d181_Trait> _1a5a735d2_FindTrait(_1a5a71c0c_Package* _self_, jule::Str _33825_ident) {
	return _1a5a6c466_findTraitInPackage(&((*(_self_))._field_Files), &(_33825_ident));;
}



inline jule::Ptr<_1a5a2088c_Enum> _1a5a73923_FindEnum(_1a5a71c0c_Package* _self_, jule::Str _34424_ident) {
	return _1a5a6c7da_findEnumInPackage(&((*(_self_))._field_Files), &(_34424_ident));;
}



inline jule::Ptr<_1a5a22097_TypeEnum> _1a5a73c64_FindTypeEnum(_1a5a71c0c_Package* _self_, jule::Str _35028_ident) {
	return _1a5a6cb5e_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35028_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a71c0c_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5a34a27_comptimeTypeInfo> _1a5a8d9b5_pushComptimeTypeInfo(_1a5a8d575_commonSemaMeta* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _21441_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92e40e6:;
		if (it != expr_end) {
			jule::Ptr<_1a5a34a27_comptimeTypeInfo> _21515_t2 = *it;
			{
				if ((((*((*(_21515_t2))._field_base))._field_BindIdent == (*((*(_21441_t))))._field_BindIdent) && _1a5b5155b_Equal((*_21515_t2.alloc)._field_base, (*(_21441_t))))) {
					return _21515_t2;;
				};
			}
			_iter_next_1a92e40e6:;
			++it;
			goto _iter_begin_1a92e40e6;
		}
		_iter_end_1a92e40e6:;
	};
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _2207_t1 = jule::new_ptr<_1a5a34a27_comptimeTypeInfo>(_1a5a34a27_comptimeTypeInfo{._field_base=(*(_21441_t))});;
	{ jule::Slice<jule::Ptr<_1a5a34a27_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2207_t1); };
	return _2207_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a8d575_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a8e620_SelectPackage(_1a5a8e17a_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> _24329_selector) {
	return _1a5b14c6c_SelectPackage((*(_self_))._field_file.ptr(), _24329_selector);;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a5a8ea1b_FindVar(_1a5a8e17a_Sema* _self_, jule::Str _25323_ident, jule::Bool _25335_binded) {
	jule::Ptr<_1a5ab1ee4_Var> _2557_v = _1a5a6b2bc_findVarInPackage(&((*(_self_))._field_files), &(_25323_ident), _25335_binded);;
	if ((_2557_v != nullptr)) {
		return _2557_v;;
	};
	if ((!(_1a5a8b243_IsPub(_25323_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92e8084:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _26615_imp = *it;
			{
				if ((!(_1a5a8c145_impIsLookupable(&(_26615_imp), &(_25323_ident))))) {
					goto _iter_next_1a92e8084;
				};
				_2557_v=_1a5a6e6bb_FindVar(_26615_imp.ptr(), _25323_ident, _25335_binded);
				if (((_2557_v != nullptr) && _1a5a92524_isAccessibleDefine(_self_, (*_2557_v.alloc)._field_Public, (*_2557_v.alloc)._field_Token))) {
					return _2557_v;;
				};
			}
			_iter_next_1a92e8084:;
			++it;
			goto _iter_begin_1a92e8084;
		}
		_iter_end_1a92e8084:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5b50060_TypeAlias> _1a5a8ee17_FindTypeAlias(_1a5a8e17a_Sema* _self_, jule::Str _28529_ident, jule::Bool _28541_binded) {
	jule::Ptr<_1a5b50060_TypeAlias> _2877_ta = _1a5a6b740_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28529_ident), _28541_binded);;
	if ((_2877_ta != nullptr)) {
		return _2877_ta;;
	};
	if ((!(_1a5a8b243_IsPub(_28529_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92eae88:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _29815_imp = *it;
			{
				if ((!(_1a5a8c145_impIsLookupable(&(_29815_imp), &(_28529_ident))))) {
					goto _iter_next_1a92eae88;
				};
				_2877_ta=_1a5a6eab7_FindTypeAlias(_29815_imp.ptr(), _28529_ident, _28541_binded);
				if (((_2877_ta != nullptr) && _1a5a92524_isAccessibleDefine(_self_, (*_2877_ta.alloc)._field_Public, (*_2877_ta.alloc)._field_Token))) {
					return _2877_ta;;
				};
			}
			_iter_next_1a92eae88:;
			++it;
			goto _iter_begin_1a92eae88;
		}
		_iter_end_1a92eae88:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a59e4d06_Struct> _1a5a90313_FindStruct(_1a5a8e17a_Sema* _self_, jule::Str _31726_ident, jule::Bool _31738_binded) {
	jule::Ptr<_1a59e4d06_Struct> _3197_s = _1a5a6bb6e_findStructInPackage(&((*(_self_))._field_files), &(_31726_ident), _31738_binded);;
	if ((_3197_s != nullptr)) {
		return _3197_s;;
	};
	if ((!(_1a5a8b243_IsPub(_31726_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92edd8c:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _33015_imp = *it;
			{
				if ((!(_1a5a8c145_impIsLookupable(&(_33015_imp), &(_31726_ident))))) {
					goto _iter_next_1a92edd8c;
				};
				_3197_s=_1a5a6eeb3_FindStruct(_33015_imp.ptr(), _31726_ident, _31738_binded);
				if (((_3197_s != nullptr) && _1a5a92524_isAccessibleDefine(_self_, (*_3197_s.alloc)._field_Public, (*_3197_s.alloc)._field_Token))) {
					return _3197_s;;
				};
			}
			_iter_next_1a92edd8c:;
			++it;
			goto _iter_begin_1a92edd8c;
		}
		_iter_end_1a92edd8c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a09cc7_Fn> _1a5a9070e_FindFn(_1a5a8e17a_Sema* _self_, jule::Str _34822_ident, jule::Bool _34834_binded) {
	jule::Ptr<_1a5a09cc7_Fn> _3507_f = _1a5a6c125_findFnInPackage(&((*(_self_))._field_files), &(_34822_ident), _34834_binded);;
	if ((_3507_f != nullptr)) {
		return _3507_f;;
	};
	if ((!(_1a5a8b243_IsPub(_34822_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9301c91:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _36115_imp = *it;
			{
				if ((!(_1a5a8c145_impIsLookupable(&(_36115_imp), &(_34822_ident))))) {
					goto _iter_next_1a9301c91;
				};
				_3507_f=_1a5a703ae_FindFn(_36115_imp.ptr(), _34822_ident, _34834_binded);
				if (((_3507_f != nullptr) && _1a5a92524_isAccessibleDefine(_self_, (*_3507_f.alloc)._field_Public, (*_3507_f.alloc)._field_Token))) {
					return _3507_f;;
				};
			}
			_iter_next_1a9301c91:;
			++it;
			goto _iter_begin_1a9301c91;
		}
		_iter_end_1a9301c91:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a1d181_Trait> _1a5a90a50_FindTrait(_1a5a8e17a_Sema* _self_, jule::Str _38025_ident) {
	jule::Ptr<_1a5a1d181_Trait> _3827_t = _1a5a6c466_findTraitInPackage(&((*(_self_))._field_files), &(_38025_ident));;
	if ((_3827_t != nullptr)) {
		return _3827_t;;
	};
	if ((!(_1a5a8b243_IsPub(_38025_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9304953:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _39315_imp = *it;
			{
				if ((!(_1a5a8c145_impIsLookupable(&(_39315_imp), &(_38025_ident))))) {
					goto _iter_next_1a9304953;
				};
				_3827_t=_1a5a70700_FindTrait(_39315_imp.ptr(), _38025_ident);
				if (((_3827_t != nullptr) && _1a5a92524_isAccessibleDefine(_self_, (*_3827_t.alloc)._field_Public, (*_3827_t.alloc)._field_Token))) {
					return _3827_t;;
				};
			}
			_iter_next_1a9304953:;
			++it;
			goto _iter_begin_1a9304953;
		}
		_iter_end_1a9304953:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a2088c_Enum> _1a5a90d91_FindEnum(_1a5a8e17a_Sema* _self_, jule::Str _41224_ident) {
	jule::Ptr<_1a5a2088c_Enum> _4147_e = _1a5a6c7da_findEnumInPackage(&((*(_self_))._field_files), &(_41224_ident));;
	if ((_4147_e != nullptr)) {
		return _4147_e;;
	};
	if ((!(_1a5a8b243_IsPub(_41224_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9307615:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _42515_imp = *it;
			{
				if ((!(_1a5a8c145_impIsLookupable(&(_42515_imp), &(_41224_ident))))) {
					goto _iter_next_1a9307615;
				};
				_4147_e=_1a5a70a41_FindEnum(_42515_imp.ptr(), _41224_ident);
				if (((_4147_e != nullptr) && _1a5a92524_isAccessibleDefine(_self_, (*_4147_e.alloc)._field_Public, (*_4147_e.alloc)._field_Token))) {
					return _4147_e;;
				};
			}
			_iter_next_1a9307615:;
			++it;
			goto _iter_begin_1a9307615;
		}
		_iter_end_1a9307615:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a22097_TypeEnum> _1a5a911d2_FindTypeEnum(_1a5a8e17a_Sema* _self_, jule::Str _44428_ident) {
	jule::Ptr<_1a5a22097_TypeEnum> _4467_e = _1a5a6cb5e_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44428_ident));;
	if ((_4467_e != nullptr)) {
		return _4467_e;;
	};
	if ((!(_1a5a8b243_IsPub(_44428_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a930a2c7:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _45715_imp = *it;
			{
				if ((!(_1a5a8c145_impIsLookupable(&(_45715_imp), &(_44428_ident))))) {
					goto _iter_next_1a930a2c7;
				};
				_4467_e=_1a5a70d82_FindTypeEnum(_45715_imp.ptr(), _44428_ident);
				if (((_4467_e != nullptr) && _1a5a92524_isAccessibleDefine(_self_, (*_4467_e.alloc)._field_Public, (*_4467_e.alloc)._field_Token))) {
					return _4467_e;;
				};
			}
			_iter_next_1a930a2c7:;
			++it;
			goto _iter_begin_1a930a2c7;
		}
		_iter_end_1a930a2c7:;
	};
	return nullptr;;
}



inline jule::Bool _1a5a915de_isFlag(_1a5a8e17a_Sema* _self_, jule::I64 _47318_flags) {
	return (((*(_self_))._field_flags & _47318_flags) == _47318_flags);;
}



inline void _1a5a91897_setCurrentFile(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5b14783_SymbolTable> _47534_f) {
	(*(_self_))._field_file=_47534_f;
}



inline void _1a5a91cb5_pushErr(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token> _47723_token, jule::Str _47738_fmt, jule::Slice<jule::Any> _47751_args) {
	{ jule::Slice<_1d1c6d64c_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a5a8bcc1_compilerErr(&(_47723_token), true, _47738_fmt, _47751_args)); };
}



inline void _1a5a92128_pushSuggestion(_1a5a8e17a_Sema* _self_, jule::Str _48230_fmt, jule::Slice<jule::Any> _48243_args) {
	{
		_1a5a8d377_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48230_fmt, _48243_args);
	};
}



inline jule::Bool _1a5a92524_isAccessibleDefine(_1a5a8e17a_Sema* _self_, jule::Bool _48730_public, jule::Ptr<_1c80b653c_Token> _48744_token) {
	return ((_48730_public || ((*(_48744_token))._field_File == nullptr)) || (_1c80bc477_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1c80bc477_Dir((*_48744_token.alloc)._field_File.ptr())));;
}



inline jule::Bool _1a5a929ca_isDuplicatedIdent(_1a5a8e17a_Sema* _self_, jule::Uintptr _49429_itself, jule::Str* _49447_ident, jule::Bool _49459_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93119c6:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> *_49510_f = it;
			{
				if (_1a5b17ca3_isDuplicatedIdent((*(_49510_f)).ptr(), _49429_itself, _49447_ident, _49459_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_49510_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a93129c7:;
					if (it != expr_end) {
						jule::Ptr<_1a5a6dcd6_ImportInfo> *_50011_imp = it;
						{
							{
								auto expr = &((*((*(_50011_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a93133bd:;
								if (it != expr_end) {
									jule::Ptr<_1c80b653c_Token> *_50112_selected = it;
									{
										if (((*((*(_50112_selected))))._field_Kind == (*(_49447_ident)))) {
											return true;;
										};
									}
									_iter_next_1a93133bd:;
									++it;
									goto _iter_begin_1a93133bd;
								}
								_iter_end_1a93133bd:;
							};
						}
						_iter_next_1a93129c7:;
						++it;
						goto _iter_begin_1a93129c7;
					}
					_iter_end_1a93129c7:;
				};
			}
			_iter_next_1a93119c6:;
			++it;
			goto _iter_begin_1a93119c6;
		}
		_iter_end_1a93119c6:;
	};
	return false;;
}



inline void _1a5a92d3d_checkDirectives(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Slice<jule::Ptr<_1a59c3389_Directive>>* _51137_d, jule::Any _51163_o) {
	_1a5a6783a_directiveChecker _5127_dc = _1a5a6783a_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a59c3389_Directive>>>)(_51137_d)), ._field_o=_51163_o};;
	_1a5a68cc0_check(&_5127_dc);
}



inline jule::Bool _1a5a932e4_checkGenericQuantity(_1a5a8e17a_Sema* _self_, jule::I64 _52036_required, jule::I64 _52051_given, jule::Ptr<_1c80b653c_Token> _52063_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52036_required == 0LL) && (_52051_given > 0LL))) {
			_case_begin_1a93158a9:;
			{
				_1a5a91cb5_pushErr(_self_, _52063_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52036_required > 0LL) && (_52051_given == 0LL))) {
			_case_begin_1a9315931:;
			{
				_1a5a91cb5_pushErr(_self_, _52063_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52036_required < _52051_given)) {
			_case_begin_1a93159a8:;
			{
				_1a5a91cb5_pushErr(_self_, _52063_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52036_required > _52051_given)) {
			_case_begin_1a9315a30:;
			{
				_1a5a91cb5_pushErr(_self_, _52063_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a93157dd:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a9315722:;
	};
}



inline jule::Bool _1a5a936e0_isDuplicatedImportSelection(_1a5a8e17a_Sema* _self_, jule::Uintptr _53939_itself, jule::Str* _53957_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9318725:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> *_54010_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54010_imp))) == _53939_itself)) {
					goto _iter_end_1a9318725;
				};
				if (_1a5a71668_existIdent((*(_54010_imp)).ptr(), (*(_53957_ident)))) {
					return true;;
				};
			}
			_iter_next_1a9318725:;
			++it;
			goto _iter_begin_1a9318725;
		}
		_iter_end_1a9318725:;
	};
	return false;;
}



inline jule::Any _1a5a93adb_getImportDef(_1a5a8e17a_Sema* _self_, jule::Str* _55225_ident, jule::Ptr<_1a5a6dcd6_ImportInfo>* _55242_imp) {
	if ((_1c798c331_findPackageBuiltinDef(&((*((*(_55242_imp))))._field_LinkPath), _55225_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55242_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a931a87b:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _55615_f = *it;
			{
				;
				jule::Any _5598_def = _1a5b177ec_defByIdent(_55615_f.ptr(), _55225_ident, false);;
				if ((_5598_def != nullptr)) {
					return _5598_def;;
				};
			}
			_iter_next_1a931a87b:;
			++it;
			goto _iter_begin_1a931a87b;
		}
		_iter_end_1a931a87b:;
	};
	return nullptr;;
}



inline jule::Bool _1a9321dd2_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a5ab1ee4_Var>* _56756_s) {
	if ((!(_1a5a92524_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a5a6d19d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a93261a0_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a5b50060_TypeAlias>* _56756_s) {
	if ((!(_1a5a92524_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a5a6d19d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a932a429_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a59e4d06_Struct>* _56756_s) {
	if ((!(_1a5a92524_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a5a6d19d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a932e98e_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a5a1d181_Trait>* _56756_s) {
	if ((!(_1a5a92524_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a5a6d19d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a9333c3a_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a5a2088c_Enum>* _56756_s) {
	if ((!(_1a5a92524_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a5a6d19d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a9337ed6_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a5a22097_TypeEnum>* _56756_s) {
	if ((!(_1a5a92524_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a5a6d19d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a933c260_checkImportSelection(_1a5a8e17a_Sema* _self_, jule::Ptr<_1c80b653c_Token>* _56740_ident, jule::Ptr<_1a5a09cc7_Fn>* _56756_s) {
	if ((!(_1a5a92524_isAccessibleDefine(_self_, (*((*(_56756_s))))._field_Public, (*((*(_56756_s))))._field_Token)))) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56740_ident))))._field_Kind, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a5a6d19d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56756_s))))._field_Ident), false) != nullptr)) {
		_1a5a91cb5_pushErr(_self_, (*(_56740_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56756_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1a5a94328_checkImportSelectedSelections(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _58150_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58150_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a931c4b5:;
		if (it != expr_end) {
			jule::Ptr<_1c80b653c_Token> _58310_ident = *it;
			{
				if ((*(_58310_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1a931c4b5;
				};
				if (_1a5a936e0_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_58150_imp))), &((*_58310_ident.alloc)._field_Kind))) {
					_1a5a91cb5_pushErr(_self_, _58310_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_58310_ident.alloc)._field_Kind, &__jule_any_type4)}));
					_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a931c4b5;
				};
				jule::Any _5958_def = _1a5a93adb_getImportDef(_self_, &((*_58310_ident.alloc)._field_Kind), _58150_imp);;
				{
					auto &_match_expr{ _5958_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1a931d582:;
						{
							goto _iter_next_1a931c4b5;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a931ee9b:;
						{
							jule::Ptr<_1a5ab1ee4_Var> _6019_v = _5958_def.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
							__jule_func_result=(_1a9321dd2_checkImportSelection(_self_, &(_58310_ident), &(_6019_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1a9320012:;
						{
							jule::Ptr<_1a5b50060_TypeAlias> _6049_ta = _5958_def.unsafe_cast_ptr<_1a5b50060_TypeAlias>();;
							__jule_func_result=(_1a93261a0_checkImportSelection(_self_, &(_58310_ident), &(_6049_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1a9320078:;
						{
							jule::Ptr<_1a59e4d06_Struct> _6079_s = _5958_def.unsafe_cast_ptr<_1a59e4d06_Struct>();;
							__jule_func_result=(_1a932a429_checkImportSelection(_self_, &(_58310_ident), &(_6079_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1a93200de:;
						{
							jule::Ptr<_1a5a1d181_Trait> _6109_t = _5958_def.unsafe_cast_ptr<_1a5a1d181_Trait>();;
							__jule_func_result=(_1a932e98e_checkImportSelection(_self_, &(_58310_ident), &(_6109_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1a9320155:;
						{
							jule::Ptr<_1a5a2088c_Enum> _6139_e = _5958_def.unsafe_cast_ptr<_1a5a2088c_Enum>();;
							__jule_func_result=(_1a9333c3a_checkImportSelection(_self_, &(_58310_ident), &(_6139_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1a9320c6b:;
						{
							jule::Ptr<_1a5a22097_TypeEnum> _6169_e = _5958_def.unsafe_cast_ptr<_1a5a22097_TypeEnum>();;
							__jule_func_result=(_1a9337ed6_checkImportSelection(_self_, &(_58310_ident), &(_6169_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type63) {
						_case_begin_1a9320cd2:;
						{
							jule::Ptr<_1a5a09cc7_Fn> _6199_f = _5958_def.unsafe_cast_ptr<_1a5a09cc7_Fn>();;
							__jule_func_result=(_1a933c260_checkImportSelection(_self_, &(_58310_ident), &(_6199_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1a931ed8b:;
						{
							_1a5a91cb5_pushErr(_self_, _58310_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*_58310_ident.alloc)._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1a931c4b5;
						}
					}
					_match_end_1a931ea06:;
				};
			}
			_iter_next_1a931c4b5:;
			++it;
			goto _iter_begin_1a931c4b5;
		}
		_iter_end_1a931c4b5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a9341a28_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9343783:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1a9321dd2_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1a9343783:;
			++it;
			goto _iter_begin_1a9343783;
		}
		_iter_end_1a9343783:;
	};
	return _6317_ok;;
}

inline jule::Bool _1a93426b6_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9345e7d:;
		if (it != expr_end) {
			jule::Ptr<_1a5b50060_TypeAlias> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1a93261a0_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1a9345e7d:;
			++it;
			goto _iter_begin_1a9345e7d;
		}
		_iter_end_1a9345e7d:;
	};
	return _6317_ok;;
}

inline jule::Bool _1a93458a6_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a59e4d06_Struct>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9348667:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1a932a429_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1a9348667:;
			++it;
			goto _iter_begin_1a9348667;
		}
		_iter_end_1a9348667:;
	};
	return _6317_ok;;
}

inline jule::Bool _1a9346bb5_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5a09cc7_Fn>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a934ad73:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1a933c260_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1a934ad73:;
			++it;
			goto _iter_begin_1a934ad73;
		}
		_iter_end_1a934ad73:;
	};
	return _6317_ok;;
}

inline jule::Bool _1a934939e_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5a1d181_Trait>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a934d518:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1a932e98e_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1a934d518:;
			++it;
			goto _iter_begin_1a934d518;
		}
		_iter_end_1a934d518:;
	};
	return _6317_ok;;
}

inline jule::Bool _1a934c946_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5a2088c_Enum>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9350bad:;
		if (it != expr_end) {
			jule::Ptr<_1a5a2088c_Enum> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1a9333c3a_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1a9350bad:;
			++it;
			goto _iter_begin_1a9350bad;
		}
		_iter_end_1a9350bad:;
	};
	return _6317_ok;;
}

inline jule::Bool _1a93500db_checkImportsAllSelectionsFromCollection(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5a22097_TypeEnum>>* _63059_s, jule::Ptr<_1c80b653c_Token>* _63068_et) {
	jule::Bool _6317_ok = true;;
	{
		auto expr = _63059_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93533db:;
		if (it != expr_end) {
			jule::Ptr<_1a5a22097_TypeEnum> *_63210_d = it;
			{
				if ((*((*(_63210_d))))._field_Public) {
					_6317_ok=(_1a9337ed6_checkImportSelection(_self_, _63068_et, _63210_d) && _6317_ok);
				};
			}
			_iter_next_1a93533db:;
			++it;
			goto _iter_begin_1a93533db;
		}
		_iter_end_1a93533db:;
	};
	return _6317_ok;;
}



inline jule::Bool _1a5a94a65_checkImportAllSelections(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _64041_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64041_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a931c84a:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> *_64210_file = it;
			{
				__jule_func_result=(_1a9341a28_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64210_file))))._field_Vars), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a93426b6_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64210_file)).alloc)._field_TypeAliases), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a93458a6_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64210_file)).alloc)._field_Structs), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a9346bb5_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64210_file)).alloc)._field_Funcs), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a934939e_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64210_file)).alloc)._field_Traits), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a934c946_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64210_file)).alloc)._field_Enums), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a93500db_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64210_file)).alloc)._field_TypeEnums), &((*((*(_64041_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1a931c84a:;
			++it;
			goto _iter_begin_1a931c84a;
		}
		_iter_end_1a931c84a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a5a94da6_checkImportSelections(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _65442_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65442_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1a5a94328_checkImportSelectedSelections(_self_, _65442_imp);
		return __jule_func_result;;
	} else if ((*((*(_65442_imp))))._field_ImportAll) {
		__jule_func_result = _1a5a94a65_checkImportAllSelections(_self_, _65442_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a5a951e7_isUseAliasDuplication(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _66338_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9355476:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _66415_imp2 = *it;
			{
				if ((_66415_imp2 == (*(_66338_imp)))) {
					goto _iter_end_1a9355476;
				};
				if (((*(_66415_imp2))._field_Alias == (*((*(_66338_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_66415_imp2.alloc)._field_Ident == (*_66415_imp2.alloc)._field_LinkPath) && ((*_66415_imp2.alloc)._field_Ident == (*((*(_66338_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1a9355476:;
			++it;
			goto _iter_begin_1a9355476;
		}
		_iter_end_1a9355476:;
	};
	return false;;
}



inline jule::Bool _1a5a95538_checkImport(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo>* _67932_imp) {
	if (((*((*(_67932_imp))))._field_Binded || ((*((*((*(_67932_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_67932_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_67932_imp))))._field_ImportAll || !((*((*(_67932_imp))))._field_Alias).empty()) || ((*((*(_67932_imp))))._field_Selected.len() > 0LL))) {
			_1a5a91cb5_pushErr(_self_, (*((*(_67932_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_67932_imp))))._field_Alias.len() != 0LL)) {
		if (_1c80b8e24_IsIgnoreIdent((*((*(_67932_imp))))._field_Alias)) {
			_1a5a91cb5_pushErr(_self_, (*((*(_67932_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1a5a951e7_isUseAliasDuplication(_self_, _67932_imp)) {
			_1a5a91cb5_pushErr(_self_, (*((*(_67932_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_67932_imp))))._field_Alias, &__jule_any_type4)}));
			_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_67932_imp))))._field_Duplicate))) {
		jule::Ptr<_1a5a8e17a_Sema> _7028_sema = jule::new_ptr<_1a5a8e17a_Sema>(_1a5a8e17a_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1a5aad919_check(_7028_sema, &((*(*((*(_67932_imp))))._field_Package.alloc)._field_Files));
		if (((*_7028_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_7028_sema.alloc)._field_errors);;
			(*_7028_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1a5a94da6_checkImportSelections(_self_, _67932_imp);;
}



inline void _1a5a95736_checkImports(_1a5a8e17a_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a935e97a:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _71715_file = *it;
			{
				_1a5a91897_setCurrentFile(_self_, _71715_file);
				{
					auto expr = &((*(_71715_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a936063a:;
					if (it != expr_end) {
						jule::Ptr<_1a5a6dcd6_ImportInfo> _71916_imp = *it;
						{
							jule::Bool _7205_ok = _1a5a95538_checkImport(_self_, &(_71916_imp));;
							if ((!(_7205_ok))) {
								return;;
							};
						}
						_iter_next_1a936063a:;
						++it;
						goto _iter_begin_1a936063a;
					}
					_iter_end_1a936063a:;
				};
			}
			_iter_next_1a935e97a:;
			++it;
			goto _iter_begin_1a935e97a;
		}
		_iter_end_1a935e97a:;
	};
}



inline void _1a5a95934_implFileImpls(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9360a9c:;
		if (it != expr_end) {
			jule::Ptr<_1a5a467e7_Impl> _73015_imp = *it;
			{
				_1a5aa4ec6_implImpl(_self_, &(_73015_imp));
			}
			_iter_next_1a9360a9c:;
			++it;
			goto _iter_begin_1a9360a9c;
		}
		_iter_end_1a9360a9c:;
	};
}



inline void _1a5a95b32_implImpls(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9362472:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _73615_file = *it;
			{
				_1a5a91897_setCurrentFile(_self_.ptr(), _73615_file);
				_1a5a95934_implFileImpls(_self_);
			}
			_iter_next_1a9362472:;
			++it;
			goto _iter_begin_1a9362472;
		}
		_iter_end_1a9362472:;
	};
}



inline void _1a5a95d30_checkEnums(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a936351c:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _74315_file = *it;
			{
				_1a5a91897_setCurrentFile(_self_.ptr(), _74315_file);
				{
					
					if ((!(_1a5aa1412_checkEnumDecls(_self_)))) {
						_case_begin_1a9363b5a:;
					}
					else if ((!(_1a5aa1698_checkTypeEnumDecls(_self_)))) {
						_case_begin_1a9364221:;
					}
					_match_end_1a9364155:;
				};
			}
			_iter_next_1a936351c:;
			++it;
			goto _iter_begin_1a936351c;
		}
		_iter_end_1a936351c:;
	};
}



inline void _1a5a9602d_checkFileInherits(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9365079:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> _75315_t = *it;
			{
				jule::Bool _7544_ok = _1a5aa305c__checkTraitDeclInherits(_self_, &(_75315_t));;
				if ((!(_7544_ok))) {
					return;;
				};
			}
			_iter_next_1a9365079:;
			++it;
			goto _iter_begin_1a9365079;
		}
		_iter_end_1a9365079:;
	};
}



inline void _1a5a9622b_checkInherits(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93663bb:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _76215_file = *it;
			{
				_1a5a91897_setCurrentFile(_self_.ptr(), _76215_file);
				_1a5a9602d_checkFileInherits(_self_);
			}
			_iter_next_1a93663bb:;
			++it;
			goto _iter_begin_1a93663bb;
		}
		_iter_end_1a93663bb:;
	};
}



inline _1a5b62c10_typeChecker _1a5a966d2_typeChecker(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Trait _76832_l, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _76847_generics, jule::Ptr<_1a5b61c20_referencer> _7697_referencer) {
	_1a5b62c10_typeChecker _7707_tc = _1a5b62c10_typeChecker{._field_s=_self_, ._field_rootLookup=_76832_l, ._field_lookup=_76832_l, ._field_referencer=_7697_referencer, ._field_useGenerics=_76847_generics, };;
	{
		auto &_match_expr{ _76832_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)) {
			_case_begin_1a9368258:;
			{
				jule::Ptr<_1a5a5420b_scopeChecker> _7798_hard = _1a5a5783b_getHardRoot(_76832_l.cast_ptr<_1a5a5420b_scopeChecker>((jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0));;
				_7707_tc._field_refers=(*((*(_7798_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1a9367bc5:;
	};
	if (((_7697_referencer != nullptr) && ((*_7697_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_7697_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1a9369ac8:;
				{
					_7707_tc._field_ownerAlias=(*(_7697_referencer))._field_owner.unsafe_cast_ptr<_1a5b50060_TypeAlias>();
				}
			}
			_match_end_1a9369a73:;
		};
	};
	return _7707_tc;;
}



inline jule::Ptr<_1a5b50d52_TypeKind> _1a5a96c43_buildTypeWithRefers(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59c3e6c_TypeDecl>* _79541_t, jule::Trait _79564_l, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _7967_generics, jule::Ptr<_1a5b61c20_referencer> _79635_referencer) {
	return ({ auto _wrap_copy = _1a5a966d2_typeChecker(_self_, _79564_l, _7967_generics, _79635_referencer); _1a5b6a3aa_checkDecl(&_wrap_copy, _79541_t); });;
}



inline jule::Bool _1a5a972a4_checkTypeWithRefers(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b58024_TypeSymbol>* _80241_t, jule::Trait _80261_l, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _8037_generics, jule::Ptr<_1a5b61c20_referencer> _80335_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1a5b58398_checked((*(_80241_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80241_t))))._field_Kind=_1a5a96c43_buildTypeWithRefers(_self_, &((*((*(_80241_t))))._field_Decl), _80261_l, _8037_generics, _80335_referencer);
	__jule_func_result = _1a5b58398_checked((*(_80241_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1a5a44493_constraintChecker> _1a5a9753a_constraintChecker(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	return jule::new_ptr<_1a5a44493_constraintChecker>(_1a5a44493_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1a5a97936_checkType(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b58024_TypeSymbol>* _81731_t, jule::Trait _81751_l) {
	return _1a5a972a4_checkTypeWithRefers(_self_, _81731_t, _81751_l, nullptr, nullptr);;
}



inline jule::Ptr<_1a5b50d52_TypeKind> _1a5a97ddc_buildTypeWithGenerics(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59c3e6c_TypeDecl>* _82343_t, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _8247_generics, jule::Ptr<_1a5a10e87_ReferenceStack> _82435_refers) {
	jule::Ptr<_1a5b62c10_typeChecker> _8257_tc = jule::new_ptr<_1a5b62c10_typeChecker>(_1a5b62c10_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3), ._field_refers=_82435_refers, ._field_useGenerics=_8247_generics, });;
	return _1a5b6a3aa_checkDecl(_8257_tc.ptr(), _82343_t);;
}



inline jule::Ptr<_1a5b50d52_TypeKind> _1a5a9856e_selectType(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59c3e6c_TypeDecl>* _84132_t) {
	jule::Ptr<_1a5b62c10_typeChecker> _8427_tc = jule::new_ptr<_1a5b62c10_typeChecker>(_1a5b62c10_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3), ._field_selection=true, });;
	return _1a5b6a3aa_checkDecl(_8427_tc.ptr(), _84132_t);;
}



inline jule::Ptr<_1a5b1b823_Eval> _1a5a98a25_evalpd(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Trait _85327_l, jule::Ptr<_1a5b50d52_TypeKind> _85342_p, jule::Ptr<_1a5ab1ee4_Var> _85360_owner) {
	jule::Ptr<_1a5b1b823_Eval> _8547_e = jule::new_ptr<_1a5b1b823_Eval>(_1a5b1b823_Eval{._field_s=_self_, ._field_lookup=_85327_l, ._field_owner=_85360_owner, });;
	{
		auto &_match_expr{ _85327_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)) {
			_case_begin_1a9373de0:;
			{
				(*(_8547_e))._field_unsafety=_1a5a565b5_isUnsafe(_85327_l.cast_ptr<_1a5a5420b_scopeChecker>((jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0));
			}
		}
		_match_end_1a9373b9d:;
	};
	(*_8547_e.alloc)._field_prefix=_85342_p;
	return _8547_e;;
}



inline jule::Ptr<_1a5b1b823_Eval> _1a5a98e21_evalp(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Trait _86826_l, jule::Ptr<_1a5b50d52_TypeKind> _86841_p) {
	return _1a5a98a25_evalpd(_self_, _86826_l, _86841_p, nullptr);;
}



inline jule::Ptr<_1a5b1b823_Eval> _1a5a99262_eval(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Trait _87325_l) {
	return _1a5a98e21_evalp(_self_, _87325_l, nullptr);;
}



inline jule::Bool _1a5a997c3_checkAssignType(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Bool _87732_destIsRef, jule::Ptr<_1a5b50d52_TypeKind>* _87754_dest, jule::Ptr<_1a5b19aeb_Data>* _8788_d, jule::Ptr<_1c80b653c_Token> _87822_errorToken) {
	if ((*((*(_8788_d))))._field_Decl) {
		_1a5a91cb5_pushErr(_self_.ptr(), _87822_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87732_destIsRef) {
		if ((!(_1a5b5155b_Equal((*(_87754_dest)), (*((*(_8788_d))))._field_Kind)))) {
			_1a5a91cb5_pushErr(_self_, _87822_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_87754_dest)).ptr()), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*((*(_8788_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1a5b03563_assignTypeChecker> _8898_atc = jule::new_ptr<_1a5b03563_assignTypeChecker>(_1a5b03563_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87754_dest)), ._field_d=(*(_8788_d)), ._field_errorToken=_87822_errorToken});;
		jule::Bool _8954_ok = _1a5b04531_check(_8898_atc.ptr());;
		if ((!(_8954_ok))) {
			return false;;
		};
	};
	if (((!(_1a5b1a503_IsConst((*(_8788_d)).ptr()))) || (_1a5b534a3_Prim((*(_87754_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _9057_kind = (*(_1a5b534a3_Prim((*(_87754_dest)).ptr())))._field_Kind;;
	{
		
		if (_1b916ae2a_IsSigInt(_9057_kind)) {
			_case_begin_1a937b744:;
			{
				_1b91700d8_SetI64((*((*(_8788_d))))._field_Constant.ptr(), _1b916e813_AsI64((*((*(_8788_d))))._field_Constant));
			}
		}
		else if (_1b916b238_IsUnsigInt(_9057_kind)) {
			_case_begin_1a937b7dd:;
			{
				_1b9170391_SetU64((*((*(_8788_d))))._field_Constant.ptr(), _1b916ea99_AsU64((*((*(_8788_d))))._field_Constant));
			}
		}
		else if (_1b916b843_IsFloat(_9057_kind)) {
			_case_begin_1a937b854:;
			{
				_1b9170baa_SetF64((*((*(_8788_d))))._field_Constant.ptr(), _1b916ed30_AsF64((*((*(_8788_d))))._field_Constant));
			}
		}
		_match_end_1a937b678:;
	};
	return true;;
}



inline jule::Bool _1a5a99c79__checkTypeCompatibility(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b50d52_TypeKind>* _91945_dest, jule::Ptr<_1a5b50d52_TypeKind>* _91967_src, jule::Ptr<_1c80b653c_Token> _9207_errorToken) {
	if (((*(_91967_src)) == nullptr)) {
		return false;;
	};
	if ((_1a5b552c9_Tup((*(_91967_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1a5b017b4_typeCompatibilityChecker _9287_tcc = _1a5b017b4_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91945_dest)), ._field_src=(*(_91967_src)), ._field_errorToken=_9207_errorToken};;
	return _1a5b02e7a_check(&_9287_tcc);;
}



inline jule::Bool _1a5a9a230_checkTypeCompatibility(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b50d52_TypeKind>* _93744_dest, jule::Ptr<_1a5b50d52_TypeKind>* _9388_src, jule::Ptr<_1c80b653c_Token>* _93829_errorToken) {
	if (_1a5a99c79__checkTypeCompatibility(_self_, _93744_dest, _9388_src, (*(_93829_errorToken)))) {
		return true;;
	};
	_1a5a91cb5_pushErr(_self_, (*(_93829_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_93744_dest)).ptr()), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(_9388_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline void _1a5a9a64d_pushCompatiblityError(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _94642_dest, jule::Ptr<_1a5b19aeb_Data>* _94664_src, jule::Ptr<_1c80b653c_Token>* _9478_errorToken) {
	if ((*((*(_94664_src))))._field_untyped) {
		{
			
			if (_1b917113e_IsI64((*((*(_94664_src))))._field_Constant.ptr())) {
				_case_begin_1a9383c8a:;
				{
					_1a5a91cb5_pushErr(_self_, (*(_9478_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_94642_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1b91713c5_IsU64((*((*(_94664_src))))._field_Constant.ptr())) {
				_case_begin_1a9383d34:;
				{
					_1a5a91cb5_pushErr(_self_, (*(_9478_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_94642_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1b9171b78_IsF64((*((*(_94664_src))))._field_Constant.ptr())) {
				_case_begin_1a9383d9a:;
				{
					_1a5a91cb5_pushErr(_self_, (*(_9478_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_94642_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4)}));
					return;;
				}
			}
			_match_end_1a9383b69:;
		};
	};
	_1a5a91cb5_pushErr(_self_, (*(_9478_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_94642_dest)).ptr()), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*((*(_94664_src))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1a5a9ab04_checkTypeCompatibility1(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b50d52_TypeKind>* _96445_dest, jule::Ptr<_1a5b19aeb_Data>* _96467_src, jule::Ptr<_1c80b653c_Token>* _9658_errorToken) {
	if (_1a5a99c79__checkTypeCompatibility(_self_, _96445_dest, &((*((*(_96467_src))))._field_Kind), (*(_9658_errorToken)))) {
		return true;;
	};
	_1a5a9a64d_pushCompatiblityError(_self_, _96445_dest, _96467_src, _9658_errorToken);
	return false;;
}



inline jule::Ptr<_1a5b50d52_TypeKind> _1a5a9b0aa_buildNonGenericTypeKind(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59c3e6c_TypeDecl>* _97945_ast, jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>>* _9808_generics, jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>* _98044_ignored) {
	jule::Ptr<_1a5b62c10_typeChecker> _9817_tc = jule::new_ptr<_1a5b62c10_typeChecker>(_1a5b62c10_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3), ._field_ignoreGenerics=(*(_9808_generics)), ._field_ignoredGenerics=_98044_ignored, });;
	return _1a5b6a3aa_checkDecl(_9817_tc.ptr(), _97945_ast);;
}



inline jule::Bool _1a5a9b4a6_buildFnNonGenericTypeKinds(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _99148_f, jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>* _99164_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>> _99311_generics = nullptr;;
	if (_1a5a0a4d1_IsMethod((*((*(_99148_f))))._field_Decl.ptr())) {
		_99311_generics=jule::append((*(*((*(_99148_f))))._field_Decl.alloc)._field_Generics,(*((*(*((*(_99148_f))))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_99311_generics=(*((*((*(_99148_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99148_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a938d118:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0bc30_ParamIns> _100015_p = *it;
			{
				if ((!(_1a5a0891e_IsSelf((*(_100015_p))._field_Decl.ptr())))) {
					(*_100015_p.alloc)._field_Kind=_1a5a9b0aa_buildNonGenericTypeKind(_self_, &((*((*(*_100015_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl), &(_99311_generics), _99164_ignored);
					__jule_func_result=(__jule_func_result && ((*_100015_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1a938d118:;
			++it;
			goto _iter_begin_1a938d118;
		}
		_iter_end_1a938d118:;
	};
	if ((!(_1a5a0a24a_IsVoid((*((*(_99148_f))))._field_Decl.ptr())))) {
		(*((*(_99148_f))))._field_Result=_1a5a9b0aa_buildNonGenericTypeKind(_self_, &((*((*((*(*((*(_99148_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(_99311_generics), _99164_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99148_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a5a0cca8_FnIns> _1a5a9b7e7_getTraitCheckFnKind(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _101341_f) {
	if (((*((*(_101341_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101341_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _10177_ins = _1a5a0b2a1_instanceForce((*(_101341_f)));;
	jule::Ptr<_1a5b62c10_typeChecker> _10197_tc = jule::new_ptr<_1a5b62c10_typeChecker>(_1a5b62c10_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3), });;
	{
		auto expr = &((*(_10177_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9394240:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0bc30_ParamIns> _102415_p = *it;
			{
				if ((!(_1a5a0891e_IsSelf((*(_102415_p))._field_Decl.ptr())))) {
					(*_102415_p.alloc)._field_Kind=_1a5b6a3aa_checkDecl(_10197_tc.ptr(), &((*((*(*_102415_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl));
				};
			}
			_iter_next_1a9394240:;
			++it;
			goto _iter_begin_1a9394240;
		}
		_iter_end_1a9394240:;
	};
	if ((!(_1a5a0a24a_IsVoid((*(_101341_f)).ptr())))) {
		(*_10177_ins.alloc)._field_Result=_1a5b6a3aa_checkDecl(_10197_tc, &((*((*((*((*(_101341_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _10177_ins;;
}



inline jule::Bool _1a5a9bc9d_checkConstraintsFn(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _103640_f, jule::Ptr<_1c80b653c_Token>* _103656_et, jule::Ptr<_1a5a0cca8_FnIns> _103672_exist) {
	jule::Ptr<_1a5a44493_constraintChecker> _10377_cc = _1a5a9753a_constraintChecker(_self_);;
	(*(_10377_cc))._field_et=(*(_103656_et));
	(*_10377_cc.alloc)._field_fi=(*(_103640_f));
	if ((_103672_exist != nullptr)) {
		{
			auto expr = &((*_103672_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a939d5ac:;
			if (it != expr_end) {
				jule::I64 _10419_i = it - expr->begin();
				jule::Ptr<_1a5b4e46b_InsGeneric> _104116_g = *it;
				{
					(*((*((*(_103640_f))))._field_Generics[_10419_i]))._field_Constraint=(*(_104116_g))._field_Constraint;
				}
				_iter_next_1a939d5ac:;
				++it;
				_10419_i++;
				goto _iter_begin_1a939d5ac;
			}
			_iter_end_1a939d5ac:;
		};
	} else {
		(*_10377_cc.alloc)._field_uniq=true;
	};
	return _1a5a453c8_check(_10377_cc);;
}



inline jule::Bool _1a5a9c254_checkConstraintsStruct(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _105044_s, jule::Ptr<_1c80b653c_Token>* _105064_et, jule::Ptr<_1a59e7a84_StructIns> _105080_exist) {
	jule::Ptr<_1a5a44493_constraintChecker> _10517_cc = _1a5a9753a_constraintChecker(_self_);;
	(*(_10517_cc))._field_et=(*(_105064_et));
	(*_10517_cc.alloc)._field_si=(*(_105044_s));
	if ((_105080_exist != nullptr)) {
		{
			auto expr = &((*_105080_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a93a1747:;
			if (it != expr_end) {
				jule::I64 _10559_i = it - expr->begin();
				jule::Ptr<_1a5b4e46b_InsGeneric> _105516_g = *it;
				{
					(*((*((*(_105044_s))))._field_Generics[_10559_i]))._field_Constraint=(*(_105516_g))._field_Constraint;
				}
				_iter_next_1a93a1747:;
				++it;
				_10559_i++;
				goto _iter_begin_1a93a1747;
			}
			_iter_end_1a93a1747:;
		};
	} else {
		(*_10517_cc.alloc)._field_uniq=true;
	};
	return _1a5a453c8_check(_10517_cc);;
}



inline jule::Bool _1a5a9c650_fnEnvironment(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _106735_f, jule::Fn<jule::Bool,jule::Ptr<_1a5a8e17a_Sema>*,jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>*> _106746_algo) {
	jule::Ptr<_1a5a8e17a_Sema> _10687_sema = (*((*((*(_106735_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1a5b14783_SymbolTable> _10697_old = (*((*(*((*(_106735_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a5a91897_setCurrentFile((*(*((*(_106735_f))))._field_Decl.alloc)._field_sema, _10697_old);
	});;
	jule::Ptr<_1a5b14783_SymbolTable> _10717_file = _1a5a8cdc1_findFile(&((*(*(*((*(_106735_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_106735_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_10717_file != nullptr)) {
		_1a5a91897_setCurrentFile((*(*((*(_106735_f))))._field_Decl.alloc)._field_sema, _10717_file);
	};
	jule::I64 _10767_size = (*((*(_106735_f))))._field_Generics.len();;
	if ((((*((*(_106735_f))))._field_Decl != nullptr) && ((*(*((*(_106735_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_10767_size+=(*(*(*((*(_106735_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _10817_generics = jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>::alloc(0LL, _10767_size);;
	_1a5a8ca4c_appendGenericTypeAliases(&(_10817_generics), _106735_f);
	jule::Bool _10843_ok = _106746_algo(&(_10687_sema), &(_10817_generics));;
	if ((_10687_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_10687_sema))._field_errors);
		(*_10687_sema.alloc)._field_errors=nullptr;
	};
	return _10843_ok;;
}



inline void _1a5a9c908_checkFnParamKind(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0bc30_ParamIns>* _109438_p) {
	(*((*((*(_109438_p))))._field_Kind))._field_Variadic=(*((*((*(_109438_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_109438_p))))._field_Decl.alloc)._field_Reference && (!(_1a5b6c313_isValidForRef(&((*((*(_109438_p))))._field_Kind)))))) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*(*((*(_109438_p))))._field_Decl.alloc)._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_109438_p))))._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Bool _1a5a9cc49_reloadFnInsTypes(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0cca8_FnIns> _110137_f) {
	if ((_1a5a0e23d_IsBuiltin(_110137_f.ptr()) || _1a5a0e4c4_IsAnon(_110137_f))) {
		return true;;
	};
	return _1a5a9c650_fnEnvironment(_self_, &(_110137_f), jule::__new_closure<jule::Bool,jule::Ptr<_1a5a8e17a_Sema>*,jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>*>((void*)__jule_anon_1a93ade2a, jule::Ptr<__jule_anon_1a93ade2a_ctx>::make(__jule_anon_1a93ade2a_ctx{._110137_f=_110137_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a93ade2a_ctx_handler));;
}



inline jule::Bool _1a5a9d200_checkRefValidityForInitExpr(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Bool _113744_leftMut, jule::Ptr<_1a5b19aeb_Data>* _113764_d, jule::Ptr<_1c80b653c_Token>* _113779_errorToken) {
	if ((!(_1a5a8b81a_isValidModelForRef(&((*((*(_113764_d))))._field_Model))))) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*(_113779_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_113744_leftMut && (!((*((*(_113764_d))))._field_Mutable)))) {
		_1a5a91cb5_pushErr(_self_, (*(_113779_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1a5a9d541_isMutRiskyStruct(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a59e7a84_StructIns>* _115429_s) {
	{
		auto expr = &((*((*(_115429_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93b883b:;
		if (it != expr_end) {
			jule::Ptr<_1a59e6ed4_FieldIns> *_115510_f = it;
			{
				if ((((*((*((*(_115510_f))))._field_Decl))._field_Mutable && _1a5b526d3_Mutable((*(*(_115510_f)).alloc)._field_Kind.ptr())) && _1a5a92524_isAccessibleDefine(_self_, (*(*(*(_115510_f)).alloc)._field_Decl.alloc)._field_Public, (*(*(*(_115510_f)).alloc)._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1a93b883b:;
			++it;
			goto _iter_begin_1a93b883b;
		}
		_iter_end_1a93b883b:;
	};
	return false;;
}



inline jule::Bool _1a5a9db5c_checkValidityForInitExpr(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Bool _118141_leftMut, jule::Bool _118156_leftRef, jule::Ptr<_1a5b50d52_TypeKind>* _11824_leftKind, jule::Ptr<_1a5b19aeb_Data>* _118230_d, jule::Ptr<_1c80b653c_Token>* _118245_errorToken) {
	if ((_118141_leftMut && (!((*((*(_118230_d))))._field_Mutable)))) {
		if (_1a5b526d3_Mutable((*((*(_118230_d))))._field_Kind.ptr())) {
			_1a5a91cb5_pushErr(_self_.ptr(), (*(_118245_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_118230_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1a59e7a84_StructIns> _11904_s = _1a5b54a26_Struct((*((*(_118230_d))))._field_Kind);;
		if (((_11904_s != nullptr) && _1a5a9d541_isMutRiskyStruct(_self_, &(_11904_s)))) {
			_1a5a91cb5_pushErr(_self_, (*(_118245_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_118230_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_118156_leftRef) {
		if ((!(_1a5a9d200_checkRefValidityForInitExpr(_self_, _118141_leftMut, _118230_d, _118245_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1a5b03563_assignTypeChecker> _12017_atc = jule::new_ptr<_1a5b03563_assignTypeChecker>(_1a5b03563_assignTypeChecker{._field_s=_self_, ._field_d=(*(_118230_d)), ._field_errorToken=(*(_118245_errorToken))});;
	return _1a5b03c7d_checkValidity(_12017_atc.ptr());;
}



inline jule::Bool _1a5a9e058_checkTypeAliasDeclKind(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b50060_TypeAlias>* _120944_ta, jule::Trait _120964_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5b14783_SymbolTable> _12107_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a5a91897_setCurrentFile(_self_, _12107_old);
	});;
	if (((*((*(_120944_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1a5b14783_SymbolTable> _12158_file = _1a5a8cdc1_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_120944_ta))))._field_Token.alloc)._field_File));;
		if ((_12158_file != nullptr)) {
			_1a5a91897_setCurrentFile(_self_, _12158_file);
		};
	};
	__jule_func_result=_1a5a972a4_checkTypeWithRefers(_self_, &((*((*(_120944_ta))))._field_Kind), _120964_l, nullptr, jule::new_ptr<_1a5b61c20_referencer>(_1a5b61c20_referencer{._field_ident=(*((*(_120944_ta))))._field_Ident, ._field_owner=jule::Any((*(_120944_ta)), &__jule_any_type65), ._field_refs=(&((*((*(_120944_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1a5b54273_Arr((*((*((*(_120944_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1a5b54273_Arr((*(*((*(_120944_ta))))._field_Kind.alloc)._field_Kind)))._field_Auto)) {
		_1a5a91cb5_pushErr(_self_, (*((*(*((*(_120944_ta))))._field_Kind.alloc)._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1a5a9e3bb_checkTypeAliasDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b50060_TypeAlias>* _123240_ta, jule::Trait _123260_l) {
	if (_1c80b8e24_IsIgnoreIdent((*((*(_123240_ta))))._field_Ident)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_123240_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1a5a9e058_checkTypeAliasDeclKind(_self_, _123240_ta, _123260_l);
}



inline void _1a5a9e674_checkTypeAliasDeclDup(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b50060_TypeAlias>* _124043_ta) {
	if (_1c80b8e24_IsIgnoreIdent((*((*(_124043_ta))))._field_Ident)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_124043_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a5a929ca_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_124043_ta))), &((*((*(_124043_ta))))._field_Ident), (*((*(_124043_ta))))._field_Binded)) {
		_1a5a91cb5_pushErr(_self_, (*((*(_124043_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124043_ta))))._field_Ident, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a5a9e058_checkTypeAliasDeclKind(_self_, _124043_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3));
}



inline jule::Bool _1a5a9e90a_checkTypeAliasDecls(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93cb4ec:;
		if (it != expr_end) {
			jule::Ptr<_1a5b50060_TypeAlias> _125315_ta = *it;
			{
				_1a5a9e674_checkTypeAliasDeclDup(_self_, &(_125315_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a93cb4ec:;
			++it;
			goto _iter_begin_1a93cb4ec;
		}
		_iter_end_1a93cb4ec:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a9408040_checkEnumItemsDup(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5a1ed20_EnumItem>> _126436_items) {
	{
		auto expr = &(_126436_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a940944d:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1ed20_EnumItem> *_126510_item = it;
			{
				if (((*((*(_126510_item))))._field_Ident).empty()) {
					goto _iter_next_1a940944d;
				} else if (_1c80b8e24_IsIgnoreIdent((*((*(_126510_item))))._field_Ident)) {
					_1a5a91cb5_pushErr(_self_, (*(*(_126510_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126436_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a940ae44:;
						if (it != expr_end) {
							jule::Ptr<_1a5a1ed20_EnumItem> *_127112_citem = it;
							{
								if (((*(_126510_item)) == (*(_127112_citem)))) {
									goto _iter_end_1a940ae44;
								} else if (((*((*(_126510_item))))._field_Ident == (*((*(_127112_citem))))._field_Ident)) {
									_1a5a91cb5_pushErr(_self_, (*(*(_126510_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126510_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1a940ae44;
								};
							}
							_iter_next_1a940ae44:;
							++it;
							goto _iter_begin_1a940ae44;
						}
						_iter_end_1a940ae44:;
					};
				};
			}
			_iter_next_1a940944d:;
			++it;
			goto _iter_begin_1a940944d;
		}
		_iter_end_1a940944d:;
	};
}

inline void _1a9415349_checkEnumItemsDup(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a5a219c0_TypeEnumItem>> _126436_items) {
	{
		auto expr = &(_126436_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9416735:;
		if (it != expr_end) {
			jule::Ptr<_1a5a219c0_TypeEnumItem> *_126510_item = it;
			{
				if (((*((*(_126510_item))))._field_Ident).empty()) {
					goto _iter_next_1a9416735;
				} else if (_1c80b8e24_IsIgnoreIdent((*((*(_126510_item))))._field_Ident)) {
					_1a5a91cb5_pushErr(_self_, (*(*(_126510_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126436_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a941822b:;
						if (it != expr_end) {
							jule::Ptr<_1a5a219c0_TypeEnumItem> *_127112_citem = it;
							{
								if (((*(_126510_item)) == (*(_127112_citem)))) {
									goto _iter_end_1a941822b;
								} else if (((*((*(_126510_item))))._field_Ident == (*((*(_127112_citem))))._field_Ident)) {
									_1a5a91cb5_pushErr(_self_, (*(*(_126510_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126510_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1a941822b;
								};
							}
							_iter_next_1a941822b:;
							++it;
							goto _iter_begin_1a941822b;
						}
						_iter_end_1a941822b:;
					};
				};
			}
			_iter_next_1a9416735:;
			++it;
			goto _iter_begin_1a9416735;
		}
		_iter_end_1a9416735:;
	};
}



inline void _1a5a9ee6b_checkEnumItemsStr(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a2088c_Enum>* _128439_e) {
	jule::Ptr<_1a5b1b823_Eval> _12857_eval = _1a5a99262_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3));;
	{
		auto expr = &((*((*(_128439_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93cd268:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1ed20_EnumItem> _128615_item = *it;
			{
				if (_1a5a201c7_AutoExpr(_128615_item.ptr())) {
					(*_128615_item.alloc)._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Constant=static__1b916ce0a_NewStr((*_128615_item.alloc)._field_Ident)})});
					(*((*((*_128615_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*(*_128615_item.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1a5b19aeb_Data> _12959_d = _1a5b3e8e0_evalExpr(_12857_eval, (*((*(_128615_item))._field_Value))._field_Expr);;
					if ((_12959_d == nullptr)) {
						goto _iter_next_1a93cd268;
					};
					if ((!(_1a5b1a503_IsConst(_12959_d.ptr())))) {
						_1a5a91cb5_pushErr(_self_, (*((*(*_128615_item.alloc)._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1a5a997c3_checkAssignType(_self_, false, &((*((*((*(_128439_e))))._field_Kind))._field_Kind), &(_12959_d), (*_128615_item.alloc)._field_Token);
					(*(*_128615_item.alloc)._field_Value.alloc)._field_Data=_12959_d;
				};
			}
			_iter_next_1a93cd268:;
			++it;
			goto _iter_begin_1a93cd268;
		}
		_iter_end_1a93cd268:;
	};
}



inline void _1a93d89d2_checkEnumItemInt(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b1b823_Eval>* _131043_eval, jule::Ptr<_1a5a2088c_Enum>* _131061_e, jule::Ptr<_1a5b5892b_Prim>* _131072_prim, jule::Ptr<_1a5a1ed20_EnumItem>* _131090_item, jule::U64* _1310112_n) {
	if (_1a5a201c7_AutoExpr((*(_131090_item)).ptr())) {
		(*((*(_131090_item))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		{
			
{
				_case_begin_1a93dad8b:;
				{
					(*((*((*((*(_131090_item))))._field_Value))._field_Data))._field_Constant=static__1b916c877_NewU64((*(_1310112_n)));
				}
			}
			_match_end_1a93db1ee:;
		};
		(*((*((*((*(_131090_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131090_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1a5b19aeb_Data> _13258_d = _1a5b3e8e0_evalExpr((*(_131043_eval)), (*((*((*(_131090_item))))._field_Value))._field_Expr);;
		if ((_13258_d == nullptr)) {
			return;;
		};
		if ((!(_1a5b1a503_IsConst(_13258_d.ptr())))) {
			_1a5a91cb5_pushErr(_self_.ptr(), (*((*(*((*(_131090_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1a5a997c3_checkAssignType(_self_, false, &((*((*((*(_131061_e))))._field_Kind))._field_Kind), &(_13258_d), (*((*(_131090_item))))._field_Token);
		(*(*((*(_131090_item))))._field_Value.alloc)._field_Data=_13258_d;
		{
			
{
				_case_begin_1a93de07b:;
				{
					(*(_1310112_n))=_1b916dcc9_ReadU64((*((*(*((*(_131090_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1a93e1556:;
		};
	};
}

inline void _1a93e8a36_checkEnumItemInt(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b1b823_Eval>* _131043_eval, jule::Ptr<_1a5a2088c_Enum>* _131061_e, jule::Ptr<_1a5b5892b_Prim>* _131072_prim, jule::Ptr<_1a5a1ed20_EnumItem>* _131090_item, jule::I64* _1310112_n) {
	if (_1a5a201c7_AutoExpr((*(_131090_item)).ptr())) {
		(*((*(_131090_item))))._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()});
		{
			
{
				_case_begin_1a93eb770:;
				{
					(*((*((*((*(_131090_item))))._field_Value))._field_Data))._field_Constant=static__1b916c5ad_NewI64((*(_1310112_n)));
				}
			}
			_match_end_1a93eb20e:;
		};
		(*((*((*((*(_131090_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131090_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1a5b19aeb_Data> _13258_d = _1a5b3e8e0_evalExpr((*(_131043_eval)), (*((*((*(_131090_item))))._field_Value))._field_Expr);;
		if ((_13258_d == nullptr)) {
			return;;
		};
		if ((!(_1a5b1a503_IsConst(_13258_d.ptr())))) {
			_1a5a91cb5_pushErr(_self_.ptr(), (*((*(*((*(_131090_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1a5a997c3_checkAssignType(_self_, false, &((*((*((*(_131061_e))))._field_Kind))._field_Kind), &(_13258_d), (*((*(_131090_item))))._field_Token);
		(*(*((*(_131090_item))))._field_Value.alloc)._field_Data=_13258_d;
		{
			
{
				_case_begin_1a9401764:;
				{
					(*(_1310112_n))=_1b916da43_ReadI64((*((*(*((*(_131090_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1a94016ed:;
		};
	};
}



inline void _1a93d4b76_checkEnumItemsInt1(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b5892b_Prim>* _134541_prim, jule::Ptr<_1a5a2088c_Enum>* _134559_e) {
	jule::U64 _13467_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1a93d688c:;
			{
				_13467_max=_1b916782d_MaxU(_1a5b58c6c_Str((*(_134541_prim)).ptr()));
			}
		}
		_match_end_1a93d66b1:;
	};
	jule::Ptr<_1a5b1b823_Eval> _13567_eval = _1a5a99262_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3));;
	jule::U64 _13577_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a5a1ed20_EnumItem> _13587_first = (*((*(_134559_e))))._field_Items[0LL];;
	_1a93d89d2_checkEnumItemInt(_self_, &(_13567_eval), _134559_e, _134541_prim, &(_13587_first), &(_13577_n));
	if (((*((*(_13587_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1a93e1c60:;
				{
					_13577_n=_1b916ea99_AsU64((*(*(*_13587_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1a93e2689:;
		};
	};
	{
		auto expr = (*((*(_134559_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a93dd344:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1ed20_EnumItem> _137015_item = *it;
			{
				if (((_1a5a201c7_AutoExpr(_137015_item.ptr()) && (_13577_n > 0LLU)) && ((_13467_max - _13577_n) <= 0LLU))) {
					_1a5a91cb5_pushErr(_self_, (*_137015_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1a93dd344;
				};
				(_13577_n)++;
				_1a93d89d2_checkEnumItemInt(_self_, &(_13567_eval), _134559_e, _134541_prim, &(_137015_item), &(_13577_n));
			}
			_iter_next_1a93dd344:;
			++it;
			goto _iter_begin_1a93dd344;
		}
		_iter_end_1a93dd344:;
	};
}

inline void _1a93e523b_checkEnumItemsInt1(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5b5892b_Prim>* _134541_prim, jule::Ptr<_1a5a2088c_Enum>* _134559_e) {
	jule::I64 _13467_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1a93e68d0:;
			{
				_13467_max=_1b9167564_MaxI(_1a5b58c6c_Str((*(_134541_prim)).ptr()));
			}
		}
		_match_end_1a93e657d:;
	};
	jule::Ptr<_1a5b1b823_Eval> _13567_eval = _1a5a99262_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3));;
	jule::I64 _13577_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1a5a1ed20_EnumItem> _13587_first = (*((*(_134559_e))))._field_Items[0LL];;
	_1a93e8a36_checkEnumItemInt(_self_, &(_13567_eval), _134559_e, _134541_prim, &(_13587_first), &(_13577_n));
	if (((*((*(_13587_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1a93e7925:;
				{
					_13577_n=_1b916e813_AsI64((*(*(*_13587_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1a9401ce7:;
		};
	};
	{
		auto expr = (*((*(_134559_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a9403315:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1ed20_EnumItem> _137015_item = *it;
			{
				if (((_1a5a201c7_AutoExpr(_137015_item.ptr()) && (_13577_n > 0LL)) && ((_13467_max - _13577_n) <= 0LL))) {
					_1a5a91cb5_pushErr(_self_, (*_137015_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1a9403315;
				};
				(_13577_n)++;
				_1a93e8a36_checkEnumItemInt(_self_, &(_13567_eval), _134559_e, _134541_prim, &(_137015_item), &(_13577_n));
			}
			_iter_next_1a9403315:;
			++it;
			goto _iter_begin_1a9403315;
		}
		_iter_end_1a9403315:;
	};
}



inline void _1a5aa0b1a_checkEnumItemsInt(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a2088c_Enum>* _138039_e) {
	jule::Ptr<_1a5b5892b_Prim> _13813_prim = _1a5b534a3_Prim((*((*((*(_138039_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1b916ae2a_IsSigInt((*(_13813_prim))._field_Kind)) {
			_case_begin_1a93e3998:;
			{
				_1a93e523b_checkEnumItemsInt1(_self_, &(_13813_prim), _138039_e);
			}
		}
		else {
			_case_begin_1a93d4406:;
			{
				_1a93d4b76_checkEnumItemsInt1(_self_, &(_13813_prim), _138039_e);
			}
		}
		_match_end_1a93d4390:;
	};
}



inline void _1a5aa0dc3_checkEnumDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a2088c_Enum>* _139035_e) {
	if (_1c80b8e24_IsIgnoreIdent((*((*(_139035_e))))._field_Ident)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_139035_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a5a929ca_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_139035_e))), &((*((*(_139035_e))))._field_Ident), false)) {
		_1a5a91cb5_pushErr(_self_, (*((*(_139035_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139035_e))))._field_Ident, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139035_e))))._field_Items.len() == 0LL)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_139035_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_139035_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1a9408040_checkEnumItemsDup(_self_, (*((*(_139035_e))))._field_Items);
	if (((*((*(_139035_e))))._field_Kind != nullptr)) {
		if ((!(_1a5a97936_checkType(_self_, &((*((*(_139035_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3))))) {
			return;;
		};
	} else {
		(*((*(_139035_e))))._field_Kind=(*(_1c798b077_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1a5b5892b_Prim> _14147_t = _1a5b534a3_Prim((*((*((*(_139035_e))))._field_Kind))._field_Kind.ptr());;
	if ((_14147_t == nullptr)) {
		_1a5a91cb5_pushErr(_self_, (*((*(_139035_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a5b5bdb3_IsStr(_14147_t.ptr())) {
			_case_begin_1a940eba1:;
			{
				_1a5a9ee6b_checkEnumItemsStr(_self_, _139035_e);
			}
		}
		else if (_1b916b502_IsInt(_1a5b58c6c_Str(_14147_t.ptr()))) {
			_case_begin_1a940dee1:;
			{
				_1a5aa0b1a_checkEnumItemsInt(_self_, _139035_e);
			}
		}
		else {
			_case_begin_1a940de7a:;
			{
				_1a5a91cb5_pushErr(_self_, (*((*(_139035_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a940e992:;
	};
}



inline void _1a5aa117b_checkTypeEnumDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a22097_TypeEnum>* _143139_e) {
	if (_1c80b8e24_IsIgnoreIdent((*((*(_143139_e))))._field_Ident)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_143139_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a5a929ca_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_143139_e))), &((*((*(_143139_e))))._field_Ident), false)) {
		_1a5a91cb5_pushErr(_self_, (*((*(_143139_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143139_e))))._field_Ident, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143139_e))))._field_Items.len() == 0LL)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_143139_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_143139_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1a9415349_checkEnumItemsDup(_self_, (*((*(_143139_e))))._field_Items);
	{
		auto expr = &((*((*(_143139_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94162d4:;
		if (it != expr_end) {
			jule::Ptr<_1a5a219c0_TypeEnumItem> _144515_item = *it;
			{
				if (((*(_144515_item))._field_Kind == nullptr)) {
					_1a5a91cb5_pushErr(_self_, (*_144515_item.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1a94162d4;
				};
				jule::Bool _14504_ok = _1a5a97936_checkType(_self_, &((*_144515_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3));;
				if ((!(_14504_ok))) {
					goto _iter_next_1a94162d4;
				};
				jule::Ptr<_1a5b5892b_Prim> _14544_p = _1a5b534a3_Prim((*((*_144515_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_14544_p != nullptr) && _1a5b5c149_IsAny(_14544_p))) {
					_1a5a91cb5_pushErr(_self_, (*_144515_item.alloc)._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a94162d4:;
			++it;
			goto _iter_begin_1a94162d4;
		}
		_iter_end_1a94162d4:;
	};
	if (((*((*(_143139_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1a5a219c0_TypeEnumItem> _14608_item = (*((*(_143139_e))))._field_Items[0LL];;
		_1a5b50d52_TypeKind _14614_tk = _1a5b50d52_TypeKind{._field_Kind=jule::Trait((*(_143139_e)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data4)};;
		if ((((*((*(_14608_item))._field_Kind))._field_Kind != nullptr) && _1a5b5155b_Equal((*((*_14608_item.alloc)._field_Kind))._field_Kind, ((jule::Ptr<_1a5b50d52_TypeKind>)((&(_14614_tk))))))) {
			_1a5a91cb5_pushErr(_self_, (*_14608_item.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1a5a223d8_Str((*(_143139_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1a5aa1412_checkEnumDecls(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94215db:;
		if (it != expr_end) {
			jule::Ptr<_1a5a2088c_Enum> _147215_e = *it;
			{
				_1a5aa0dc3_checkEnumDecl(_self_, &(_147215_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a94215db:;
			++it;
			goto _iter_begin_1a94215db;
		}
		_iter_end_1a94215db:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a5aa1698_checkTypeEnumDecls(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9422c91:;
		if (it != expr_end) {
			jule::Ptr<_1a5a22097_TypeEnum> _148415_e = *it;
			{
				_1a5aa117b_checkTypeEnumDecl(_self_, &(_148415_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9422c91:;
			++it;
			goto _iter_begin_1a9422c91;
		}
		_iter_end_1a9422c91:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a5aa19d9_checkDeclGenerics(_1a5a8e17a_Sema* _self_, jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>>* _149434_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149434_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9424248:;
		if (it != expr_end) {
			jule::I64 _14967_i = it - expr->begin();
			jule::Ptr<_1a59d1177_GenericDecl> *_149610_g = it;
			{
				if (_1c80b8e24_IsIgnoreIdent((*((*(_149610_g))))._field_Ident)) {
					_1a5a91cb5_pushErr(_self_, (*(*(_149610_g)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a9424248;
				};
				_julec_label_1a94255e0:;
				{
					auto expr = _149434_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a942507e:;
					if (it != expr_end) {
						jule::I64 _15058_j = it - expr->begin();
						jule::Ptr<_1a59d1177_GenericDecl> *_150511_ct = it;
						{
							{
								
								if ((_15058_j >= _14967_i)) {
									_case_begin_1a94266bd:;
									{
										goto _iter_end_1a942507e;
									}
								}
								else if (((*(*(_149610_g)).alloc)._field_Ident == (*((*(_150511_ct))))._field_Ident)) {
									_case_begin_1a9426756:;
									{
										_1a5a91cb5_pushErr(_self_, (*(*(_149610_g)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_149610_g)).alloc)._field_Ident, &__jule_any_type4)}));
										_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1a942507e;
									}
								}
								_match_end_1a94265be:;
							};
						}
						_iter_next_1a942507e:;
						++it;
						_15058_j++;
						goto _iter_begin_1a942507e;
					}
					_iter_end_1a942507e:;
				};
			}
			_iter_next_1a9424248:;
			++it;
			_14967_i++;
			goto _iter_begin_1a9424248;
		}
		_iter_end_1a9424248:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a5aa1d2a_checkFnDeclParamsDup(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a09cc7_Fn>* _152137_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1a94289bc:;
	{
		auto expr = &((*((*(_152137_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9428ca8:;
		if (it != expr_end) {
			jule::I64 _15247_i = it - expr->begin();
			jule::Ptr<_1a5a08303_Param> *_152410_p = it;
			{
				{
					auto expr = &((*((*(_152137_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a942998a:;
					if (it != expr_end) {
						jule::Ptr<_1a59d1177_GenericDecl> *_152611_g = it;
						{
							if (((*((*(_152410_p))))._field_Ident == (*((*(_152611_g))))._field_Ident)) {
								__jule_func_result=false;
								_1a5a91cb5_pushErr(_self_, (*(*(_152410_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152410_p)).alloc)._field_Ident, &__jule_any_type4)}));
								_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1a9428ca8;
							};
						}
						_iter_next_1a942998a:;
						++it;
						goto _iter_begin_1a942998a;
					}
					_iter_end_1a942998a:;
				};
				_julec_label_1a942b2c7:;
				{
					auto expr = &((*((*(_152137_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9429e63:;
					if (it != expr_end) {
						jule::I64 _15368_j = it - expr->begin();
						jule::Ptr<_1a5a08303_Param> *_153611_jp = it;
						{
							{
								
								if ((_15368_j >= _15247_i)) {
									_case_begin_1a942c295:;
									{
										goto _iter_end_1a9429e63;
									}
								}
								else if (_1c80b8e24_IsIgnoreIdent((*(*(_152410_p)).alloc)._field_Ident) || _1c80b8e24_IsIgnoreIdent((*((*(_153611_jp))))._field_Ident) || _1c80b91dd_IsAnonIdent((*(*(_152410_p)).alloc)._field_Ident) || _1c80b91dd_IsAnonIdent((*(*(_153611_jp)).alloc)._field_Ident)) {
									_case_begin_1a942c32d:;
									{
										goto _iter_end_1a9429e63;
									}
								}
								else if (((*(*(_152410_p)).alloc)._field_Ident == (*((*(_153611_jp))))._field_Ident)) {
									_case_begin_1a942c394:;
									{
										__jule_func_result=false;
										_1a5a91cb5_pushErr(_self_, (*(*(_152410_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152410_p)).alloc)._field_Ident, &__jule_any_type4)}));
										_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1a9428ca8;
									}
								}
								_match_end_1a942c152:;
							};
						}
						_iter_next_1a9429e63:;
						++it;
						_15368_j++;
						goto _iter_begin_1a9429e63;
					}
					_iter_end_1a9429e63:;
				};
			}
			_iter_next_1a9428ca8:;
			++it;
			_15247_i++;
			goto _iter_begin_1a9428ca8;
		}
		_iter_end_1a9428ca8:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a5aa216b_checkFnDeclResultDup(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a09cc7_Fn>* _155837_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1a5a0a24a_IsVoid((*(_155837_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_155837_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9430d7b:;
		if (it != expr_end) {
			jule::I64 _15657_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> *_156510_v = it;
			{
				if ((_1c80b8e24_IsIgnoreIdent((*((*(_156510_v))))._field_Kind) || _1c80b91dd_IsAnonIdent((*(*(_156510_v)).alloc)._field_Kind))) {
					goto _iter_next_1a9430d7b;
				};
				{
					auto expr = &((*((*(_155837_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9432421:;
					if (it != expr_end) {
						jule::Ptr<_1a59d1177_GenericDecl> *_157011_g = it;
						{
							if (((*(*(_156510_v)).alloc)._field_Kind == (*((*(_157011_g))))._field_Ident)) {
								goto _julec_label_1a943627c;
							};
						}
						_iter_next_1a9432421:;
						++it;
						goto _iter_begin_1a9432421;
					}
					_iter_end_1a9432421:;
				};
				{
					auto expr = &((*((*(_155837_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9433884:;
					if (it != expr_end) {
						jule::Ptr<_1a5a08303_Param> *_157611_p = it;
						{
							if (((*(*(_156510_v)).alloc)._field_Kind == (*((*(_157611_p))))._field_Ident)) {
								goto _julec_label_1a943627c;
							};
						}
						_iter_next_1a9433884:;
						++it;
						goto _iter_begin_1a9433884;
					}
					_iter_end_1a9433884:;
				};
				_julec_label_1a9434621:;
				{
					auto expr = &((*((*((*(_155837_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a94350d3:;
					if (it != expr_end) {
						jule::I64 _15848_j = it - expr->begin();
						jule::Ptr<_1c80b653c_Token> *_158411_jv = it;
						{
							{
								
								if ((_15848_j >= _15657_i)) {
									_case_begin_1a9435b50:;
									{
										goto _iter_end_1a94350d3;
									}
								}
								else if (((*((*(_158411_jv))))._field_Kind == (*(*(_156510_v)).alloc)._field_Kind)) {
									_case_begin_1a9435bd8:;
									{
										goto _julec_label_1a943627c;
									}
								}
								_match_end_1a9435a51:;
							};
						}
						_iter_next_1a94350d3:;
						++it;
						_15848_j++;
						goto _iter_begin_1a94350d3;
					}
					_iter_end_1a94350d3:;
				};
				goto _iter_next_1a9430d7b;
				_julec_label_1a943627c:;
				_1a5a91cb5_pushErr(_self_, (*(_156510_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_156510_v)).alloc)._field_Kind, &__jule_any_type4)}));
				_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1a9430d7b:;
			++it;
			_15657_i++;
			goto _iter_begin_1a9430d7b;
		}
		_iter_end_1a9430d7b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a5aa24ac_checkFnVariadicParam(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _160342_f) {
	if (((*((*(_160342_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1a5a08303_Param> _16077_param = (*((*(_160342_f))))._field_Params[((*((*(_160342_f))))._field_Params.len() - 1LL)];;
	if (((*(_16077_param))._field_Variadic && (*_16077_param.alloc)._field_Reference)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*_16077_param.alloc)._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1a5aa2765_checkFnDeclPrototype(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _161642_f) {
	if (((*((*(_161642_f))))._field_Exceptional && (*((*(_161642_f))))._field_Binded)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_161642_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_161642_f))))._field_Exceptional) {
		if (_1a5a0a767_IsEntryPoint((*(_161642_f)).ptr())) {
			_1a5a91cb5_pushErr(_self_, (*((*(_161642_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1a5a0a9ed_IsInit((*(_161642_f)).ptr())) {
			_1a5a91cb5_pushErr(_self_, (*((*(_161642_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a5aa19d9_checkDeclGenerics(_self_, &((*((*(_161642_f))))._field_Generics))))) {
			_case_begin_1a943d20c:;
		}
		else if ((!(_1a5aa1d2a_checkFnDeclParamsDup(_self_, _161642_f)))) {
			_case_begin_1a943d273:;
		}
		else if ((!(_1a5aa216b_checkFnDeclResultDup(_self_, _161642_f)))) {
			_case_begin_1a943d2d9:;
		}
		else if ((!(_1a5aa24ac_checkFnVariadicParam(_self_, _161642_f)))) {
			_case_begin_1a943d350:;
		}
		_match_end_1a943b7e3:;
	};
}



inline jule::Bool _1a5aa2c1b_catchTraitInheritCycle(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a1d181_Trait> _163839_t1, jule::Ptr<_1a5a1d181_Trait> _163855_t2, _1e9a030bc_StrBuilder* _163872_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_163855_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9440891:;
		if (it != expr_end) {
			jule::Ptr<_1a5b58024_TypeSymbol> _164015_i = *it;
			{
				if (((*(_164015_i))._field_Kind == nullptr)) {
					goto _iter_next_1a9440891;
				};
				jule::Ptr<_1a5a1d181_Trait> _16448_t3 = _1a5b54cac_Trait((*_164015_i.alloc)._field_Kind.ptr());;
				if ((_163839_t1 == _16448_t3)) {
					_1a5aa799b_pushCycleError(_self_.ptr(), &((*(_163855_t2))._field_Ident), &((*(_16448_t3))._field_Ident), _163872_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1a5aa2c1b_catchTraitInheritCycle(_self_, _163839_t1, _16448_t3, _163872_message)))) {
					_1a5aa799b_pushCycleError(_self_, &((*_163855_t2.alloc)._field_Ident), &((*_16448_t3.alloc)._field_Ident), _163872_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9440891:;
			++it;
			goto _iter_begin_1a9440891;
		}
		_iter_end_1a9440891:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a5aa305c__checkTraitDeclInherits(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a1d181_Trait>* _165745_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165745_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9444114:;
		if (it != expr_end) {
			jule::I64 _16598_i = it - expr->begin();
			jule::Ptr<_1a5b58024_TypeSymbol> _165915_it = *it;
			{
				if ((!(_1a5a97936_checkType(_self_, &(_165915_it), jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3))))) {
					__jule_func_result=false;
					goto _iter_next_1a9444114;
				};
				jule::Ptr<_1a5a1d181_Trait> _16648_t2 = _1a5b54cac_Trait((*(_165915_it))._field_Kind.ptr());;
				if ((_16648_t2 == nullptr)) {
					_1a5a91cb5_pushErr(_self_, (*((*_165915_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165745_t))))._field_Ident, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*_165915_it.alloc)._field_Kind), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1a9444114;
				};
				{
					auto expr = &((*((*(_165745_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9447568:;
					if (it != expr_end) {
						jule::I64 _16708_j = it - expr->begin();
						jule::Ptr<_1a5b58024_TypeSymbol> _167011_it2 = *it;
						{
							if ((_16708_j >= _16598_i)) {
								goto _iter_end_1a9447568;
							};
							if ((((*(_167011_it2))._field_Kind != nullptr) && _1a5b5155b_Equal((*_165915_it.alloc)._field_Kind, (*_167011_it2.alloc)._field_Kind))) {
								_1a5a91cb5_pushErr(_self_, (*(*_165915_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_16648_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1a9447568;
							};
						}
						_iter_next_1a9447568:;
						++it;
						_16708_j++;
						goto _iter_begin_1a9447568;
					}
					_iter_end_1a9447568:;
				};
				if (((*(_165745_t)) == _16648_t2)) {
					_1a5a91cb5_pushErr(_self_, (*(*_165915_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165745_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_1e9a030bc_StrBuilder _16849_message = static__1e9a034eb_New(64LL);;
					__jule_func_result=(__jule_func_result && _1a5aa2c1b_catchTraitInheritCycle(_self_, (*(_165745_t)), _16648_t2, &(_16849_message)));
					if ((_1e9a047d8_Len(&_16849_message) > 0LL)) {
						jule::Str _168710_errMsg = _1e9a04354_Str(&_16849_message);;
						_1e9a04552_Clear(&_16849_message);
						_1a5aa799b_pushCycleError(_self_, &((*((*(_165745_t))))._field_Ident), &((*(_16648_t2))._field_Ident), &(_16849_message));
						_168710_errMsg+=_1e9a04354_Str(&_16849_message);
						_1a5a91cb5_pushErr(_self_, (*(*_165915_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_168710_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1a9444114:;
			++it;
			_16598_i++;
			goto _iter_begin_1a9444114;
		}
		_iter_end_1a9444114:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a5aa3315_checkTraitDeclInherits(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a1d181_Trait>* _169844_t) {
	{
		auto expr = &((*((*(_169844_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a944e075:;
		if (it != expr_end) {
			jule::I64 _16998_i = it - expr->begin();
			jule::Ptr<_1a5b58024_TypeSymbol> _169915_it = *it;
			{
				jule::Ptr<_1a5a1d181_Trait> _17008_t1 = _1a5b54cac_Trait((*(_169915_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_169844_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9450582:;
					if (it != expr_end) {
						jule::I64 _17019_j = it - expr->begin();
						jule::Ptr<_1a5b58024_TypeSymbol> _170116_it2 = *it;
						{
							if ((_17019_j == _16998_i)) {
								goto _iter_next_1a9450582;
							};
							jule::Ptr<_1a5a1d181_Trait> _17059_t2 = _1a5b54cac_Trait((*(_170116_it2))._field_Kind);;
							{
								auto expr = &((*(_17008_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a9451d03:;
								if (it != expr_end) {
									jule::Ptr<_1a5a09cc7_Fn> _170617_t1m = *it;
									{
										jule::Ptr<_1a5a09cc7_Fn> _170710_t2m = _1a5a1dd30_FindMethod(_17059_t2.ptr(), (*(_170617_t1m))._field_Ident);;
										if ((_170710_t2m == nullptr)) {
											goto _iter_next_1a9451d03;
										};
										jule::Ptr<_1a5a0cca8_FnIns> _17116_t1f = _1a5a9b7e7_getTraitCheckFnKind(_self_, &(_170617_t1m));;
										jule::Ptr<_1a5a0cca8_FnIns> _17126_t2f = _1a5a9b7e7_getTraitCheckFnKind(_self_, &(_170710_t2m));;
										if ((!(_1a5a0dc21_equalTrait(_17116_t1f, &(_17126_t2f))))) {
											_1a5a91cb5_pushErr(_self_, (*((*_169915_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_169844_t))))._field_Ident, &__jule_any_type4),jule::Any((*_17059_t2.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1a5a0eb56_GetKindStr(_17116_t1f, true), &__jule_any_type4),jule::Any(_1a5a0eb56_GetKindStr(_17126_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1a9451d03:;
									++it;
									goto _iter_begin_1a9451d03;
								}
								_iter_end_1a9451d03:;
							};
						}
						_iter_next_1a9450582:;
						++it;
						_17019_j++;
						goto _iter_begin_1a9450582;
					}
					_iter_end_1a9450582:;
				};
			}
			_iter_next_1a944e075:;
			++it;
			_16998_i++;
			goto _iter_begin_1a944e075;
		}
		_iter_end_1a944e075:;
	};
}



inline void _1a5aa35bd_checkTraitDeclMethod(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _172342_f) {
	if (_1c80b8e24_IsIgnoreIdent((*((*(_172342_f))))._field_Ident)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_172342_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c80b91dd_IsAnonIdent((*((*(_172342_f))))._field_Ident)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_172342_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_172342_f))))._field_sema=_self_;
	_1a5aa2765_checkFnDeclPrototype(_self_, _172342_f);
	jule::Ptr<_1a5a0cca8_FnIns> _17317_ins = _1a5a0b537_instance((*(_172342_f)));;
	_1a5a9cc49_reloadFnInsTypes(_self_, _17317_ins);
	(*(_17317_ins))._field_reloaded=true;
	_1a5a0b845_appendInstance((*(_172342_f)).ptr(), &(_17317_ins));
}



inline void _1a5aa3876_checkTraitDeclMethods(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a1d181_Trait>* _173743_t) {
	{
		auto expr = &((*((*(_173743_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9458e2b:;
		if (it != expr_end) {
			jule::I64 _17388_i = it - expr->begin();
			jule::Ptr<_1a5a09cc7_Fn> _173815_f = *it;
			{
				_1a5aa35bd_checkTraitDeclMethod(_self_, &(_173815_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1a5a1e4b2_findMethodInherit((*(_173743_t)).ptr(), &((*(_173815_f))._field_Ident)) != nullptr)) {
					_1a5a91cb5_pushErr(_self_, (*_173815_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173815_f.alloc)._field_Ident, &__jule_any_type4)}));
					_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1a9458e2b;
				};
				_julec_label_1a945a845:;
				{
					auto expr = &((*((*(_173743_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a945be2e:;
					if (it != expr_end) {
						jule::I64 _17548_j = it - expr->begin();
						jule::Ptr<_1a5a09cc7_Fn> _175411_jf = *it;
						{
							{
								
								if ((_17548_j >= _17388_i)) {
									_case_begin_1a945c99b:;
									{
										goto _iter_end_1a945be2e;
									}
								}
								else if (((*_173815_f.alloc)._field_Ident == (*(_175411_jf))._field_Ident)) {
									_case_begin_1a945ca34:;
									{
										_1a5a91cb5_pushErr(_self_, (*_173815_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173815_f.alloc)._field_Ident, &__jule_any_type4)}));
										_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1a945be2e;
									}
								}
								_match_end_1a945c89c:;
							};
						}
						_iter_next_1a945be2e:;
						++it;
						_17548_j++;
						goto _iter_begin_1a945be2e;
					}
					_iter_end_1a945be2e:;
				};
			}
			_iter_next_1a9458e2b:;
			++it;
			_17388_i++;
			goto _iter_begin_1a9458e2b;
		}
		_iter_end_1a9458e2b:;
	};
}



inline void _1a5aa3b2e_checkTraitDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a1d181_Trait>* _177336_t) {
	if (_1c80b8e24_IsIgnoreIdent((*((*(_177336_t))))._field_Ident)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_177336_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a5a929ca_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_177336_t))), &((*((*(_177336_t))))._field_Ident), false)) {
		_1a5a91cb5_pushErr(_self_, (*((*(_177336_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_177336_t))))._field_Ident, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a5aa3315_checkTraitDeclInherits(_self_, _177336_t);
	_1a5aa3876_checkTraitDeclMethods(_self_, _177336_t);
}



inline jule::Bool _1a5aa3db5_checkTraitDecls(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9462d8b:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> _178715_t = *it;
			{
				_1a5aa3b2e_checkTraitDecl(_self_, &(_178715_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9462d8b:;
			++it;
			goto _iter_begin_1a9462d8b;
		}
		_iter_end_1a9462d8b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a5aa42b1_checkTraitImplMethods(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a1d181_Trait>* _179742_base, jule::Ptr<_1a5a467e7_Impl>* _179757_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_179757_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a946484e:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> *_179910_f = it;
			{
				if ((_1a5a1dd30_FindMethod((*(_179742_base)).ptr(), (*((*(_179910_f))))._field_Ident) == nullptr)) {
					_1a5a91cb5_pushErr(_self_, (*(*(_179910_f)).alloc)._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_179742_base))))._field_Ident, &__jule_any_type4),jule::Any((*(*(_179910_f)).alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1a946484e:;
			++it;
			goto _iter_begin_1a946484e;
		}
		_iter_end_1a946484e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a5aa46ac_implToStruct(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _180834_dest, jule::Ptr<_1a5a467e7_Impl>* _180854_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180854_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a946706b:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _181215_f = *it;
			{
				if (((_1a59e5972_FindMethod((*(_180834_dest)).ptr(), (*(_181215_f))._field_Ident, (*_181215_f.alloc)._field_Statically) != nullptr) || (_1a59e6104_FindField((*(_180834_dest)).ptr(), (*_181215_f.alloc)._field_Ident) != nullptr))) {
					_1a5a91cb5_pushErr(_self_.ptr(), (*_181215_f.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180834_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_181215_f.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1a946706b;
				};
				if ((((*((*(_180834_dest))))._field_Generics.len() > 0LL) && ((*_181215_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_181215_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9469e5e:;
						if (it != expr_end) {
							jule::Ptr<_1a59d1177_GenericDecl> _182012_fg = *it;
							{
								{
									auto expr = &((*((*(_180834_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a946a8aa:;
									if (it != expr_end) {
										jule::Ptr<_1a59d1177_GenericDecl> _182113_dg = *it;
										{
											if (((*(_182012_fg))._field_Ident == (*(_182113_dg))._field_Ident)) {
												_1a5a91cb5_pushErr(_self_, (*_182012_fg.alloc)._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1a946a8aa:;
										++it;
										goto _iter_begin_1a946a8aa;
									}
									_iter_end_1a946a8aa:;
								};
							}
							_iter_next_1a9469e5e:;
							++it;
							goto _iter_begin_1a9469e5e;
						}
						_iter_end_1a9469e5e:;
					};
				};
				_1a5a92d3d_checkDirectives(_self_, &((*_181215_f.alloc)._field_Directives), jule::Any(_181215_f, &__jule_any_type63));
				(*_181215_f.alloc)._field_sema=_self_;
				(*_181215_f.alloc)._field_Owner=(*(_180834_dest));
				{ jule::Slice<jule::Ptr<_1a5a09cc7_Fn>> &__jule_push_dest = (*((*(_180834_dest))))._field_Methods; __jule_push_dest.push(_181215_f); };
			}
			_iter_next_1a946706b:;
			++it;
			goto _iter_begin_1a946706b;
		}
		_iter_end_1a946706b:;
	};
	{
		auto expr = &((*((*(_180854_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9467445:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> _183715_v = *it;
			{
				;
				if (((_1a59e5972_FindMethod((*(_180834_dest)).ptr(), (*(_183715_v))._field_Ident, true) != nullptr) || (_1a59e5cb3_FindStatic((*(_180834_dest)).ptr(), (*_183715_v.alloc)._field_Ident) != nullptr))) {
					_1a5a91cb5_pushErr(_self_, (*_183715_v.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180834_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_183715_v.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1a9467445;
				};
				{ jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> &__jule_push_dest = (*((*(_180834_dest))))._field_Statics; __jule_push_dest.push(_183715_v); };
			}
			_iter_next_1a9467445:;
			++it;
			goto _iter_begin_1a9467445;
		}
		_iter_end_1a9467445:;
	};
	return __jule_func_result;;
}



inline void _1a5aa4965_implTrait(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a467e7_Impl>* _185031_decl) {
	jule::Ptr<_1a5b50d52_TypeKind> _18517_base_t = _1a5a9856e_selectType(_self_, &((*((*(_185031_decl))))._field_Base));;
	if ((_18517_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a5a1d181_Trait> _18557_base = _1a5b54cac_Trait(_18517_base_t.ptr());;
	if ((_18557_base == nullptr)) {
		_1a5a91cb5_pushErr(_self_, (*((*((*(_185031_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str(_18517_base_t.ptr()), &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a5b50d52_TypeKind> _18627_destT = _1a5a9856e_selectType(_self_, &((*((*(_185031_decl))))._field_Dest));;
	if ((_18627_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _18667_destS = _1a5b54a26_Struct(_18627_destT.ptr());;
	if ((_18667_destS == nullptr)) {
		_1a5a91cb5_pushErr(_self_, (*((*((*(_185031_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str(_18627_destT.ptr()), &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a59e4d06_Struct> _18737_dest = (*(_18667_destS))._field_Decl;;
	if ((_1c80bc477_Dir((*((*(_18737_dest))._field_Token))._field_File.ptr()) != _1c80bc477_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a5a91cb5_pushErr(_self_, (*(*((*(_185031_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1a5ab06c9_pushImplemented(_18557_base, &(_18737_dest));
	_1a5ab09b5_pushImplements(&(_18737_dest), _18557_base);
	if (((*((*(_185031_decl))))._field_Statics.len() > 0LL)) {
		_1a5a91cb5_pushErr(_self_, (*((*((*(_185031_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a5aa42b1_checkTraitImplMethods(_self_, &(_18557_base), _185031_decl)))) {
			_case_begin_1a9479a51:;
		}
		else if ((!(_1a5aa46ac_implToStruct(_self_, &(_18737_dest), _185031_decl)))) {
			_case_begin_1a9479ad9:;
		}
		_match_end_1a94787b9:;
	};
}



inline void _1a5aa4c1d_implStruct(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a467e7_Impl>* _189332_decl) {
	jule::Ptr<_1a5b50d52_TypeKind> _18947_destT = _1a5a9856e_selectType(_self_, &((*((*(_189332_decl))))._field_Dest));;
	if ((_18947_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _18987_destS = _1a5b54a26_Struct(_18947_destT.ptr());;
	if ((_18987_destS == nullptr)) {
		_1a5a91cb5_pushErr(_self_, (*((*((*(_189332_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str(_18947_destT.ptr()), &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a59e4d06_Struct> _19057_dest = (*(_18987_destS))._field_Decl;;
	if ((_1c80bc477_Dir((*((*(_19057_dest))._field_Token))._field_File.ptr()) != _1c80bc477_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1a5a91cb5_pushErr(_self_, (*(*((*(_189332_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a5aa46ac_implToStruct(_self_, &(_19057_dest), _189332_decl)))) {
			_case_begin_1a948075a:;
		}
		_match_end_1a948056d:;
	};
}



inline void _1a5aa4ec6_implImpl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a467e7_Impl>* _191730_decl) {
	{
		
		if (_1a5a46bb0_IsTraitImpl((*(_191730_decl)).ptr())) {
			_case_begin_1a94812c7:;
			{
				_1a5aa4965_implTrait(_self_, _191730_decl);
			}
		}
		else if (_1a5a46e46_IsStructImpl((*(_191730_decl)).ptr())) {
			_case_begin_1a9481371:;
			{
				_1a5aa4c1d_implStruct(_self_, _191730_decl);
			}
		}
		_match_end_1a94811b7:;
	};
}



inline void _1a5aa5339_checkVarDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5ab1ee4_Var>* _192834_decl, jule::Trait _192850_l) {
	if (_1c80b8e24_IsIgnoreIdent((*((*(_192834_decl))))._field_Ident)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_192834_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a5ab2654_IsTypeInferred((*(_192834_decl)).ptr())) {
		if ((!(_1a5ab23bd_IsInitialized((*(_192834_decl)).ptr())))) {
			_1a5a91cb5_pushErr(_self_, (*((*(_192834_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1a5a97936_checkType(_self_, &((*((*(_192834_decl))))._field_Kind), _192850_l);
	};
	if ((*((*(_192834_decl))))._field_Reference) {
		if ((*((*(_192834_decl))))._field_Constant) {
			_1a5a91cb5_pushErr(_self_, (*((*(_192834_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_192834_decl))))._field_Statically) {
			_1a5a91cb5_pushErr(_self_, (*((*(_192834_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1a5ab23bd_IsInitialized((*(_192834_decl)).ptr())))) {
		if ((*((*(_192834_decl))))._field_Constant) {
			_1a5a91cb5_pushErr(_self_, (*((*(_192834_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_192834_decl))))._field_Statically) {
			_1a5a91cb5_pushErr(_self_, (*((*(_192834_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_192834_decl))))._field_Reference) {
			_1a5a91cb5_pushErr(_self_, (*((*(_192834_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1a5aa55e2_checkGlobalVarDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5ab1ee4_Var>* _196540_decl) {
	if (_1a5a929ca_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_196540_decl))), &((*((*(_196540_decl))))._field_Ident), (*((*(_196540_decl))))._field_Binded)) {
		_1a5a91cb5_pushErr(_self_, (*((*(_196540_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_196540_decl))))._field_Ident, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_196540_decl))))._field_Binded && (*((*(_196540_decl))))._field_Constant)) {
		_1a5a91cb5_pushErr(_self_, (*((*(_196540_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_196540_decl))))._field_Binded)) && (!((*((*(_196540_decl))))._field_Constant))) && (!((*((*(_196540_decl))))._field_Statically)))) {
		_1a5a91cb5_pushErr(_self_, (*((*(_196540_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1a5a92d3d_checkDirectives(_self_, &((*((*(_196540_decl))))._field_Directives), jule::Any((*(_196540_decl)), &__jule_any_type8));
	_1a5aa5339_checkVarDecl(_self_, _196540_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3));
}



inline jule::Bool _1a5aa5878_checkGlobalDecls(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a948e44a:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> _198315_decl = *it;
			{
				_1a5aa55e2_checkGlobalVarDecl(_self_, &(_198315_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a948e44a:;
			++it;
			goto _iter_begin_1a948e44a;
		}
		_iter_end_1a948e44a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a5aa5c74_checkStructTraitImpl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _199342_strct, jule::Ptr<_1a5a1d181_Trait>* _199363_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_199363_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9490d0e:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _199415_tf = *it;
			{
				jule::Bool _19958_exist = false;;
				jule::Ptr<_1a5a09cc7_Fn> _19968_sf = _1a59e5972_FindMethod((*(_199342_strct)).ptr(), (*(_199415_tf))._field_Ident, (*_199415_tf.alloc)._field_Statically);;
				jule::Ptr<_1a5a0cca8_FnIns> _19974_tfK = _1a5a9b7e7_getTraitCheckFnKind(_self_, &(_199415_tf));;
				if ((_19968_sf != nullptr)) {
					jule::Ptr<_1a5a0cca8_FnIns> _19999_sfK = _1a5a9b7e7_getTraitCheckFnKind(_self_, &(_19968_sf));;
					_19958_exist=_1a5a0dc21_equalTrait(_19974_tfK, &(_19999_sfK));
				};
				if (_19958_exist) {
					jule::Ptr<_1a59c3389_Directive> _20035_d = _1a5b48300_findDirective(&((*_19968_sf.alloc)._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_20035_d != nullptr)) {
						_1a5a91cb5_pushErr(_self_, (*_20035_d.alloc)._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1a5a91cb5_pushErr(_self_, (*((*(_199342_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_199363_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1a5a0eb56_GetKindStr(_19974_tfK, true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1a9490d0e:;
			++it;
			goto _iter_begin_1a9490d0e;
		}
		_iter_end_1a9490d0e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a5aa60b5_checkStructImpls(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _201738_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_201738_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9496a4b:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> _201915_trt = *it;
			{
				__jule_func_result=(_1a5aa5c74_checkStructTraitImpl(_self_, _201738_s, &(_201915_trt)) && __jule_func_result);
			}
			_iter_next_1a9496a4b:;
			++it;
			goto _iter_begin_1a9496a4b;
		}
		_iter_end_1a9496a4b:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a5aa6406_checkStructFields(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _202539_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202539_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9497ed1:;
		if (it != expr_end) {
			jule::Ptr<_1a59e1dd0_Field> _202715_f = *it;
			{
				(*(_202715_f))._field_Owner=(*(_202539_st));
				{
					auto expr = &((*((*(_202539_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9498be6:;
					if (it != expr_end) {
						jule::Ptr<_1a59e1dd0_Field> _202911_cf = *it;
						{
							if ((_202715_f == _202911_cf)) {
								goto _iter_end_1a9498be6;
							} else if (((*_202715_f.alloc)._field_Ident == (*(_202911_cf))._field_Ident)) {
								_1a5a91cb5_pushErr(_self_.ptr(), (*_202715_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_202715_f.alloc)._field_Ident, &__jule_any_type4)}));
								_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1a9498be6:;
						++it;
						goto _iter_begin_1a9498be6;
					}
					_iter_end_1a9498be6:;
				};
			}
			_iter_next_1a9497ed1:;
			++it;
			goto _iter_begin_1a9497ed1;
		}
		_iter_end_1a9497ed1:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a5aa66ae_checkStructDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _204237_s) {
	if (_1c80b8e24_IsIgnoreIdent((*((*(_204237_s))))._field_Ident)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_204237_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a5a929ca_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_204237_s))), &((*((*(_204237_s))))._field_Ident), (*((*(_204237_s))))._field_Binded)) {
		_1a5a91cb5_pushErr(_self_, (*((*(_204237_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204237_s))))._field_Ident, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a5a92d3d_checkDirectives(_self_, &((*((*(_204237_s))))._field_Directives), jule::Any((*(_204237_s)), &__jule_any_type64));
	{
		
		if ((!(_1a5aa19d9_checkDeclGenerics(_self_, &((*((*(_204237_s))))._field_Generics))))) {
			_case_begin_1a949d954:;
		}
		else if ((!(_1a5aa6406_checkStructFields(_self_, _204237_s)))) {
			_case_begin_1a949d9ba:;
		}
		else if ((!(_1a5aa60b5_checkStructImpls(_self_, _204237_s)))) {
			_case_begin_1a949da31:;
		}
		else if ((!(_1a5aa72e7_checkFuncDeclsBy(_self_, &((*((*(_204237_s))))._field_Methods))))) {
			_case_begin_1a949da97:;
		}
		_match_end_1a949d822:;
	};
}



inline jule::Bool _1a5aa6945_checkStructDecls(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94a0c64:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _206215_s = *it;
			{
				_1a5aa66ae_checkStructDecl(_self_, &(_206215_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a94a0c64:;
			++it;
			goto _iter_begin_1a94a0c64;
		}
		_iter_end_1a94a0c64:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a5aa6bed_checkAnonFuncDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _207239_f) {
	(*((*(_207239_f))))._field_sema=_self_;
	_1a5aa2765_checkFnDeclPrototype(_self_, _207239_f);
}



inline void _1a5aa6ea6_checkFuncDecl(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _207735_f) {
	if (_1c80b8e24_IsIgnoreIdent((*((*(_207735_f))))._field_Ident)) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_207735_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a5a0ac84_IsAnon((*(_207735_f)).ptr())) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_207735_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1a5a92d3d_checkDirectives(_self_, &((*((*(_207735_f))))._field_Directives), jule::Any((*(_207735_f)), &__jule_any_type63));
	_1a5aa6bed_checkAnonFuncDecl(_self_, _207735_f);
	if ((((*((*(_207735_f))))._field_Owner == nullptr) && _1a5a929ca_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_207735_f))), &((*((*(_207735_f))))._field_Ident), (*((*(_207735_f))))._field_Binded))) {
		if ((*((*(_207735_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1a5a09cc7_Fn> _20895_init = _1a5a9070e_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_20895_init != nullptr)) {
				return;;
			};
		};
		_1a5a91cb5_pushErr(_self_, (*((*(_207735_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_207735_f))))._field_Ident, &__jule_any_type4)}));
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a5aa72e7_checkFuncDeclsBy(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Slice<jule::Ptr<_1a5a09cc7_Fn>>* _209938_funcs) {
	{
		auto expr = _209938_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94a7ed0:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _210015_f = *it;
			{
				_1a5aa6ea6_checkFuncDecl(_self_, &(_210015_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1a94a7ed0:;
			++it;
			goto _iter_begin_1a94a7ed0;
		}
		_iter_end_1a94a7ed0:;
	};
	return true;;
}



inline jule::Bool _1a5aa757d_checkFuncDecls(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a5aa72e7_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1a5aa799b_pushCycleError(_1a5a8e17a_Sema* _self_, jule::Str* _211527_st1, jule::Str* _211538_st2, _1e9a030bc_StrBuilder* _211553_message) {
	;
	jule::Str _21173_refersTo = _1d1c6daae_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_211527_st1)), &__jule_any_type4),jule::Any((*(_211538_st2)), &__jule_any_type4)}));;
	jule::Str _21183_m = _1e9a04354_Str(_211553_message);;
	_1e9a03a5c_WriteStr(_211553_message, _1d1902a0c_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1e9a03a5c_WriteStr(_211553_message, _21173_refersTo);
	_1e9a03d15_WriteByte(_211553_message, '\n');
	_1e9a03a5c_WriteStr(_211553_message, _21183_m);
}



inline void _1a5aa8150_checkPackageDecls(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94aeb30:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _214215_f = *it;
			{
				_1a5a91897_setCurrentFile(_self_.ptr(), _214215_f);
				if ((!(_1a5a9e90a_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a94aeb30:;
			++it;
			goto _iter_begin_1a94aeb30;
		}
		_iter_end_1a94aeb30:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94b00c5:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _214915_f = *it;
			{
				_1a5a91897_setCurrentFile(_self_, _214915_f);
				if ((!(_1a5aa3db5_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a94b00c5:;
			++it;
			goto _iter_begin_1a94b00c5;
		}
		_iter_end_1a94b00c5:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94b10a4:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _215615_f = *it;
			{
				_1a5a91897_setCurrentFile(_self_, _215615_f);
				if ((!(_1a5aa5878_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a94b10a4:;
			++it;
			goto _iter_begin_1a94b10a4;
		}
		_iter_end_1a94b10a4:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94b20d8:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _216315_f = *it;
			{
				_1a5a91897_setCurrentFile(_self_, _216315_f);
				{
					
					if ((!(_1a5aa757d_checkFuncDecls(_self_)))) {
						_case_begin_1a94b36e4:;
					}
					else if ((!(_1a5aa6945_checkStructDecls(_self_)))) {
						_case_begin_1a94b378d:;
					}
					else {
						_case_begin_1a94b3150:;
						{
							goto _iter_next_1a94b20d8;
						}
					}
					_match_end_1a94b365b:;
				};
				return;;
			}
			_iter_next_1a94b20d8:;
			++it;
			goto _iter_begin_1a94b20d8;
		}
		_iter_end_1a94b20d8:;
	};
}



inline void _1a5aa84b3_checkDataForTypeInference(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5b19aeb_Data>* _217542_d, jule::Ptr<_1c80b653c_Token>* _217553_err_token) {
	{
		
		if (_1a5b19ed6_IsNil((*(_217542_d)).ptr())) {
			_case_begin_1a94b4849:;
			{
				_1a5a91cb5_pushErr(_self_, (*(_217553_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1a5b1a26c_IsVoid((*(_217542_d)).ptr())) {
			_case_begin_1a94b48e3:;
			{
				_1a5a91cb5_pushErr(_self_, (*(_217553_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_217542_d))))._field_Kind))._field_Variadic) {
			_case_begin_1a94b4959:;
			{
				_1a5a91cb5_pushErr(_self_, (*(_217553_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a94b4728:;
	};
}



inline void _1a5aa876b_checkVarValue(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5ab1ee4_Var>* _218735_v) {
	if (_1a5ab2654_IsTypeInferred((*(_218735_v)).ptr())) {
		(*((*(_218735_v))))._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=(*((*((*((*(_218735_v))))._field_Value))._field_Data))._field_Kind});
		_1a5aa84b3_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_218735_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_218735_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1a5a9db5c_checkValidityForInitExpr(_self_, (*((*(_218735_v))))._field_Mutable, (*((*(_218735_v))))._field_Reference, &((*((*((*(_218735_v))))._field_Kind))._field_Kind), &((*(*((*(_218735_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218735_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1a5b6024b_Arr> _22008_arr = _1a5b54273_Arr((*((*((*(_218735_v))))._field_Kind))._field_Kind.ptr());;
		if ((_22008_arr != nullptr)) {
			if ((*_22008_arr.alloc)._field_Auto) {
				jule::Ptr<_1a5b6024b_Arr> _22036_dataArr = _1a5b54273_Arr((*((*((*((*(_218735_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_22036_dataArr != nullptr)) {
					(*_22008_arr.alloc)._field_N=(*_22036_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1a5a997c3_checkAssignType(_self_, (*((*(_218735_v))))._field_Reference, &((*(*((*(_218735_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218735_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_218735_v))))._field_Value.alloc)._field_Expr))._field_Token)) {
			_1a5a9db5c_checkValidityForInitExpr(_self_, (*((*(_218735_v))))._field_Mutable, (*((*(_218735_v))))._field_Reference, &((*(*((*(_218735_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218735_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218735_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_218735_v))))._field_Reference && (!(_1a5b6c313_isValidForRef(&((*((*((*(_218735_v))))._field_Kind))._field_Kind)))))) {
		_1a5a91cb5_pushErr(_self_.ptr(), (*((*(_218735_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(*((*(_218735_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_218735_v))))._field_Constant) {
		if (((!(_1a5b1a503_IsConst((*((*((*(_218735_v))))._field_Value))._field_Data.ptr()))) && (!(_1a5b55560_comptime((*(*(*((*(_218735_v))))._field_Value.alloc)._field_Data.alloc)._field_Kind.ptr()))))) {
			_1a5a91cb5_pushErr(_self_, (*((*(*((*(_218735_v))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_218735_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*(*((*(_218735_v))))._field_Value.alloc)._field_Data.alloc)._field_untyped=false;
	};
	if ((_1a5b552c9_Tup((*(*((*(_218735_v))))._field_Kind.alloc)._field_Kind) != nullptr)) {
		(*(*((*(_218735_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1a5aa8ace_evalVarValue(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5ab1ee4_Var>* _224034_decl, jule::Trait _224050_l) {
	if ((!(_1a5ab23bd_IsInitialized((*(_224034_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1a5b1b823_Eval> _224511_eval = nullptr;;
	if (((*((*(_224034_decl))))._field_Kind != nullptr)) {
		_224511_eval=_1a5a98a25_evalpd(_self_, _224050_l, (*(*((*(_224034_decl))))._field_Kind.alloc)._field_Kind, (*(_224034_decl)));
	} else {
		_224511_eval=_1a5a98a25_evalpd(_self_, _224050_l, nullptr, (*(_224034_decl)));
	};
	(*(_224511_eval))._field_immutable=(!((*((*(_224034_decl))))._field_Mutable));
	(*((*((*(_224034_decl))))._field_Value))._field_Data=_1a5b3e8e0_evalExpr(_224511_eval, (*(*((*(_224034_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1a5aa8e42_checkVar(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5ab1ee4_Var>* _225730_decl, jule::Trait _225746_l) {
	_1a5aa8ace_evalVarValue(_self_, _225730_decl, _225746_l);
	if (((*((*((*(_225730_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1a5aa876b_checkVarValue(_self_, _225730_decl);
}



inline void _1a5aa9140_checkGlobals(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94cb3cc:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> _226715_decl = *it;
			{
				if ((*(_226715_decl))._field_Binded) {
					goto _iter_next_1a94cb3cc;
				};
				if (((_1a5ab23bd_IsInitialized(_226715_decl) && ((*((*_226715_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1a5ab2654_IsTypeInferred(_226715_decl) && ((*((*_226715_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1a5aa8e42_checkVar(_self_, &(_226715_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3));
				};
			}
			_iter_next_1a94cb3cc:;
			++it;
			goto _iter_begin_1a94cb3cc;
		}
		_iter_end_1a94cb3cc:;
	};
}



inline jule::Ptr<_1a5a0cca8_FnIns> _1a5aa953b_readyToCheckFn(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _228136_s, jule::Ptr<_1a5a09cc7_Fn>* _228156_f) {
	jule::Ptr<_1a5a0cca8_FnIns> _22827_ins = _1a5a0b537_instance((*(_228156_f)));;
	if (((*((*(_228156_f))))._field_Instances.len() != 0LL)) {
		return _22827_ins;;
	};
	(*(_22827_ins))._field_Owner=(*(_228136_s));
	_1a5a0b845_appendInstance((*(_228156_f)).ptr(), &(_22827_ins));
	(*_22827_ins.alloc)._field_reloaded=true;
	if (_1a5a9cc49_reloadFnInsTypes(_self_, _22827_ins)) {
		return _22827_ins;;
	};
	return nullptr;;
}



inline void _1a5aa989e_checkTypeMethod(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _229537_s, jule::Ptr<_1a5a09cc7_Fn>* _229557_f) {
	if (((*((*(_229557_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _23007_ins = (*((*(_229557_f))))._field_Instances[0LL];;
	if (((*((*(_23007_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1a5aac352_checkFnIns(_self_, &(_23007_ins));
}



inline jule::Ptr<_1a5a0cca8_FnIns> _1a5aa9d55_checkStructInsOp(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _230838_s, jule::Ptr<_1a5a09cc7_Fn>* _230858_f, jule::Fn<jule::Bool,jule::Ptr<_1a5a09cc7_Fn>> _230866_p) {
	if (((((*(_230858_f)) == nullptr) || ((*((*(_230858_f))))._field_Generics.len() > 0LL)) || (!(_230866_p((*(_230858_f))))))) {
		return nullptr;;
	};
	return (*((*(_230858_f))))._field_Instances[0LL];;
}



inline jule::Bool _1a5aaa251_checkStructEnv(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _231836_s, jule::Ptr<_1c80b653c_Token> _231855_errorToken) {
	jule::Bool __jule_func_result = false;
	_1a5b62c10_typeChecker _23197_tc = _1a5b62c10_typeChecker{._field_s=(*((*((*(_231836_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_231836_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3), ._field_lookup=jule::Trait((*(*((*(_231836_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3), ._field_referencer=jule::new_ptr<_1a5b61c20_referencer>(_1a5b61c20_referencer{._field_ident=(*(*((*(_231836_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_231836_s))))._field_Decl, &__jule_any_type64), }), ._field_refers=(*((*(_231836_s))))._field_Refers, };;
	if (((*((*(_231836_s))))._field_Generics.len() > 0LL)) {
		_23197_tc._field_useGenerics=jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>::alloc(0LL, (*((*(_231836_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_231836_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a94d7949:;
			if (it != expr_end) {
				jule::I64 _23329_i = it - expr->begin();
				jule::Ptr<_1a5b4e46b_InsGeneric> _233216_g = *it;
				{
					jule::Ptr<_1a59d1177_GenericDecl> _23339_decl = (*(*((*(_231836_s))))._field_Decl.alloc)._field_Generics[_23329_i];;
					{ jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> &__jule_push_dest = _23197_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1a5b50060_TypeAlias>(_1a5b50060_TypeAlias{._field_Token=(*_23339_decl.alloc)._field_Token, ._field_Ident=(*(_23339_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=(*(_233216_g))._field_Kind}), })); };
				}
				_iter_next_1a94d7949:;
				++it;
				_23329_i++;
				goto _iter_begin_1a94d7949;
			}
			_iter_end_1a94d7949:;
		};
	};
	jule::Ptr<_1a5b14783_SymbolTable> _23427_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1a5a91897_setCurrentFile(_self_, _23427_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_231836_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1a5b14783_SymbolTable> _23468_file = _1a5a8cdc1_findFile(&((*_self_.alloc)._field_files), &((*(*(*((*(_231836_s))))._field_Decl.alloc)._field_Token.alloc)._field_File));;
		if ((_23468_file != nullptr)) {
			_1a5a91897_setCurrentFile(_self_, _23468_file);
		};
	};
	if (((*((*(_231836_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1a5a44493_constraintChecker> _23538_cc = _1a5a9753a_constraintChecker(_self_);;
		(*(_23538_cc))._field_et=_231855_errorToken;
		(*_23538_cc.alloc)._field_si=(*(_231836_s));
		(*_23538_cc.alloc)._field_genericsA=_23197_tc._field_useGenerics;
		(*_23538_cc.alloc)._field_uniq=true;
		if ((!(_1a5a453c8_check(_23538_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_231836_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _23668_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_23197_tc._field_useGenerics,(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_231836_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a94e125a:;
			if (it != expr_end) {
				jule::Ptr<_1a5ab1ee4_Var> _236816_v = *it;
				{
					_1a5aa5339_checkVarDecl(_self_, &(_236816_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3));
					_1a5aa8e42_checkVar(_self_, &(_236816_v), jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _23668_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1a94e125a:;
				++it;
				goto _iter_begin_1a94e125a;
			}
			_iter_end_1a94e125a:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_23197_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1a5b1b823_Eval> _23797_eval = _1a5a99262_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3));;
	(*((*(_231836_s))))._field_Comparable=(!((*(*((*(_231836_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_231836_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94e4ea6:;
		if (it != expr_end) {
			jule::Ptr<_1a59e6ed4_FieldIns> _238115_f = *it;
			{
				jule::Ptr<_1a5b50d52_TypeKind> _23828_kind = _1a5b6a3aa_checkDecl(&_23197_tc, &((*((*((*(_238115_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_23828_kind != nullptr) && __jule_func_result);
				if ((_23828_kind == nullptr)) {
					if (((_self_ != (*(*((*(_231836_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_231836_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_231836_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
						(*(*(*((*(_231836_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1a94e4ea6;
				};
				(*_238115_f.alloc)._field_Kind=_23828_kind;
				(*((*(_231836_s))))._field_Mutable=((*((*(_231836_s))))._field_Mutable || ((!((*(*_238115_f.alloc)._field_Decl.alloc)._field_Mutable)) && _1a5b526d3_Mutable((*_238115_f.alloc)._field_Kind)));
				(*((*(_231836_s))))._field_Comparable=((*((*(_231836_s))))._field_Comparable && _1a5b5244c_Comparable((*_238115_f.alloc)._field_Kind));
				if (((*(*_238115_f.alloc)._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1a94e4ea6;
				};
				(*(_23797_eval))._field_prefix=(*_238115_f.alloc)._field_Kind;
				(*_23797_eval.alloc)._field_field=_238115_f;
				(*_238115_f.alloc)._field_Default=_1a5b3e8e0_evalExpr(_23797_eval, (*(*_238115_f.alloc)._field_Decl.alloc)._field_Default);
				if (((*_238115_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1a94e4ea6;
				};
				;
				_1a5a997c3_checkAssignType(_self_, false, &((*_238115_f.alloc)._field_Kind), &((*_238115_f.alloc)._field_Default), (*((*(*_238115_f.alloc)._field_Decl.alloc)._field_Default))._field_Token);
			}
			_iter_next_1a94e4ea6:;
			++it;
			goto _iter_begin_1a94e4ea6;
		}
		_iter_end_1a94e4ea6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a5aaa64c_precheckStructIns(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _241539_s, jule::Ptr<_1c80b653c_Token> _241558_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1a5aaa251_checkStructEnv(_self_, _241539_s, _241558_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_241539_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94eeaa4:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _242015_f = *it;
			{
				if (((*(_242015_f))._field_Generics.len() == 0LL)) {
					if ((_1a5aa953b_readyToCheckFn(_self_, _241539_s, &(_242015_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1a94eeaa4:;
			++it;
			goto _iter_begin_1a94eeaa4;
		}
		_iter_end_1a94eeaa4:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a5aaa905_checkStructIns(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns>* _243036_s) {
	{
		auto expr = &((*((*(_243036_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95014bd:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _243115_f = *it;
			{
				_1a5aa989e_checkTypeMethod(_self_, _243036_s, &(_243115_f));
			}
			_iter_next_1a95014bd:;
			++it;
			goto _iter_begin_1a95014bd;
		}
		_iter_end_1a95014bd:;
	};
}



inline void _1a5aaabad_checkTypeStruct(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _243637_s) {
	if ((*((*(_243637_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243637_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_243637_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9507cdd:;
		if (it != expr_end) {
			jule::Ptr<_1a59e7a84_StructIns> _244915_ins = *it;
			{
				_1a5aaa905_checkStructIns(_self_, &(_244915_ins));
			}
			_iter_next_1a9507cdd:;
			++it;
			goto _iter_begin_1a9507cdd;
		}
		_iter_end_1a9507cdd:;
	};
}



inline void _1a5aaadab_checkStructTypes(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9508c89:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _245515_s = *it;
			{
				_1a5aaabad_checkTypeStruct(_self_, &(_245515_s));
			}
			_iter_next_1a9508c89:;
			++it;
			goto _iter_begin_1a9508c89;
		}
		_iter_end_1a9508c89:;
	};
}



inline void _1a5aab164_checkStructInsOperators(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e7a84_StructIns> _246044_s) {
	{
		auto expr = &((*(_246044_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9509c13:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _246115_m = *it;
			{
				{
					auto &_match_expr{ (*(_246115_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1a950a384:;
						{
							(*(_246044_s))._field_Operators._field_Eq=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab3d92_Eq);
							(*_246044_s.alloc)._field_Comparable=((*_246044_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1a950a96c:;
						{
							(*(_246044_s))._field_Operators._field_Gt=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab415b_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1a950a9d3:;
						{
							(*(_246044_s))._field_Operators._field_GtEq=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab4425_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1a950aa49:;
						{
							(*(_246044_s))._field_Operators._field_Lt=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab46de_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1a950aab0:;
						{
							(*(_246044_s))._field_Operators._field_LtEq=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab49a8_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1a950ab37:;
						{
							(*(_246044_s))._field_Operators._field_Shl=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab50e6_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1a950abae:;
						{
							(*(_246044_s))._field_Operators._field_Shr=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab53b0_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1a950ac36:;
						{
							(*(_246044_s))._field_Operators._field_Add=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab5679_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1a950acad:;
						{
							(*(_246044_s))._field_Operators._field_Sub=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab5943_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1a950ad35:;
						{
							(*(_246044_s))._field_Operators._field_Div=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab5c0c_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1a950adac:;
						{
							(*(_246044_s))._field_Operators._field_Mul=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab5ec6_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1a950ae34:;
						{
							(*(_246044_s))._field_Operators._field_Mod=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab6290_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1a950aeab:;
						{
							(*(_246044_s))._field_Operators._field_BitAnd=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab6559_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1a950b033:;
						{
							(*(_246044_s))._field_Operators._field_BitOr=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab6823_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1a950b0aa:;
						{
							(*(_246044_s))._field_Operators._field_BitXor=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab6adc_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1a950b132:;
						{
							(*(_246044_s))._field_Operators._field_Neg=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab722a_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1a950b1a9:;
						{
							(*(_246044_s))._field_Operators._field_Pos=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab74e4_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1a950b231:;
						{
							(*(_246044_s))._field_Operators._field_BitNot=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab77ad_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1a950b2a8:;
						{
							(*(_246044_s))._field_Operators._field_AddAssign=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab7deb_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1a950b330:;
						{
							(*(_246044_s))._field_Operators._field_SubAssign=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab81b5_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1a950b3a7:;
						{
							(*(_246044_s))._field_Operators._field_DivAssign=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab847e_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1a950b42e:;
						{
							(*(_246044_s))._field_Operators._field_MulAssign=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab8748_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1a950b4a6:;
						{
							(*(_246044_s))._field_Operators._field_ModAssign=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab8a12_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1a950b52d:;
						{
							(*(_246044_s))._field_Operators._field_ShlAssign=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab8ccb_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1a950b5a5:;
						{
							(*(_246044_s))._field_Operators._field_ShrAssign=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab9095_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1a950b62c:;
						{
							(*(_246044_s))._field_Operators._field_BitOrAssign=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab935e_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1a950b6a4:;
						{
							(*(_246044_s))._field_Operators._field_BitAndAssign=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab9628_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1a950b72b:;
						{
							(*(_246044_s))._field_Operators._field_BitXorAssign=_1a5aa9d55_checkStructInsOp(_self_, &(_246044_s), &(_246115_m), static__1a5ab98e2_BitXorAssign);
						}
					}
					_match_end_1a950a65e:;
				};
			}
			_iter_next_1a9509c13:;
			++it;
			goto _iter_begin_1a9509c13;
		}
		_iter_end_1a9509c13:;
	};
}



inline void _1a5aab41c_precheckStructType(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a59e4d06_Struct>* _252440_s) {
	if ((*((*(_252440_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_252440_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_252440_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a59e7a84_StructIns> _25358_ins = _1a59e5268_instance((*(_252440_s)));;
		(*(_25358_ins))._field_Checked=true;
		_1a59e5576_appendInstance((*(_252440_s)).ptr(), &(_25358_ins));
		_1a5aaa64c_precheckStructIns(_self_, &(_25358_ins), nullptr);
	};
	_1a5aab164_checkStructInsOperators(_self_, (*((*(_252440_s))))._field_Instances[0LL]);
}



inline void _1a5aab61a_precheckStructTypes(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9522764:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _254515_s = *it;
			{
				_1a5aab41c_precheckStructType(_self_, &(_254515_s));
			}
			_iter_next_1a9522764:;
			++it;
			goto _iter_begin_1a9522764;
		}
		_iter_end_1a9522764:;
	};
}



inline void _1a5aab8c3_checkRets(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _255030_f) {
	if (_1a5a0a24a_IsVoid((*((*(_255030_f))))._field_Decl.ptr())) {
		return;;
	};
	_1a5aadd48_missingRetChecker _25543_mrc = static__1a5aae211_new();;
	jule::Bool _25553_ok = _1a5ab0333_check(&_25543_mrc, (*((*(_255030_f))))._field_Scope);;
	if ((!(_25553_ok))) {
		_1a5a91cb5_pushErr(_self_, (*(*((*(_255030_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1a5aabc36_checkFnInsSc(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _256133_f, jule::Ptr<_1a5a5420b_scopeChecker>* _256149_sc) {
	_1a5a8c475_appendRetVars(&((*((*((*(_256149_sc))))._field_table))._field_Vars), _256133_f);
	_1a5a8c761_appendParamVars(&((*(*((*(_256149_sc))))._field_table.alloc)._field_Vars), _256133_f);
	_1a5a8ca4c_appendGenericTypeAliases(&((*(*((*(_256149_sc))))._field_table.alloc)._field_TypeAliases), _256133_f);
	_1a5a6600e_check((*(_256149_sc)), &((*((*((*(_256133_f))))._field_Decl))._field_Scope), &((*((*(_256133_f))))._field_Scope));
	if ((!(_1a5a56cd0_stopped((*(_256149_sc)).ptr())))) {
		_1a5aab8c3_checkRets(_self_, _256133_f);
	};
}



inline void _1a5aac099_checkFnInsCaller(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _257438_f, jule::Ptr<_1c80b653c_Token> _257453_caller) {
	if ((*((*((*(_257438_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1a5b14783_SymbolTable> _25797_old = (*((*(*((*(_257438_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1a5a91897_setCurrentFile((*(*((*(_257438_f))))._field_Decl.alloc)._field_sema, _25797_old);
	});;
	jule::Ptr<_1a5b14783_SymbolTable> _25817_file = _1a5a8cdc1_findFile(&((*(*(*((*(_257438_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_257438_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_25817_file != nullptr)) {
		_1a5a91897_setCurrentFile((*(*((*(_257438_f))))._field_Decl.alloc)._field_sema, _25817_file);
	};
	jule::Ptr<_1a5a5420b_scopeChecker> _25867_sc = _1a5a48de3_newScopeChecker(&((*(*((*(_257438_f))))._field_Decl.alloc)._field_sema), (*(_257438_f)));;
	(*(_25867_sc))._field_calledFrom=_257453_caller;
	_1a5aabc36_checkFnInsSc(_self_.ptr(), _257438_f, &(_25867_sc));
	if (((*(*((*(_257438_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_257438_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
		(*(*(*((*(_257438_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1a5aac352_checkFnIns(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _259632_f) {
	_1a5aac099_checkFnInsCaller(_self_, _259632_f, nullptr);
}



inline void _1a5aac60a_checkFunc(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _260031_f) {
	if ((*((*(_260031_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_260031_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_260031_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9530ba1:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0cca8_FnIns> _261015_ins = *it;
			{
				_1a5aac352_checkFnIns(_self_, &(_261015_ins));
			}
			_iter_next_1a9530ba1:;
			++it;
			goto _iter_begin_1a9530ba1;
		}
		_iter_end_1a9530ba1:;
	};
}



inline void _1a5aac8b3_checkTestFn(_1a5a8e17a_Sema* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _261532_f) {
	if ((*((*((*(_261532_f))))._field_Decl))._field_Public) {
		_1a5a91cb5_pushErr(_self_, (*(*((*(_261532_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_261532_f))))._field_Decl.alloc)._field_Unsafety || (!(_1a5a0a24a_IsVoid((*((*(_261532_f))))._field_Decl)))) || ((*(*((*(_261532_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_261532_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_261532_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*(*((*(_261532_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Reference)) {
		_1a5a91cb5_pushErr(_self_, (*(*((*(_261532_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a5b5c457_Sptr> _26337_sptr = _1a5b53739_Sptr((*((*((*(_261532_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_26337_sptr == nullptr)) {
		_1a5a91cb5_pushErr(_self_, (*(*((*(_261532_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _26403_s = _1a5b54a26_Struct((*(_26337_sptr))._field_Elem.ptr());;
	if (((_26403_s == nullptr) || (!(_1a5a741d7_isStdPackage(&((*((*((*((*(_26403_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1a5a91cb5_pushErr(_self_, (*(*((*(_261532_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a5a92128_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a5aacb6b_precheckFunc(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Ptr<_1a5a09cc7_Fn>* _264834_f) {
	if ((*((*(_264834_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_264834_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_264834_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a5a0cca8_FnIns> _26598_ins = _1a5a0b2a1_instanceForce((*(_264834_f)));;
		{ jule::Slice<jule::Ptr<_1a5a0cca8_FnIns>> &__jule_push_dest = (*((*(_264834_f))))._field_Instances; __jule_push_dest.push(_26598_ins); };
		jule::Bool _26614_ok = _1a5a9cc49_reloadFnInsTypes(_self_, _26598_ins);;
		(*(_26598_ins))._field_reloaded=true;
		if ((_26614_ok && _1a5b6b972_hasDirective(&((*((*(_264834_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1a5aac8b3_checkTestFn(_self_, &(_26598_ins));
		};
	};
}



inline void _1a5aacd69_precheckFuncs(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a953dc7a:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> _267215_decl = *it;
			{
				{
					auto expr = &((*(_267215_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a953e6c6:;
					if (it != expr_end) {
						jule::Ptr<_1a5a09cc7_Fn> _267316_m = *it;
						{
							_1a5aacb6b_precheckFunc(_self_, &(_267316_m));
						}
						_iter_next_1a953e6c6:;
						++it;
						goto _iter_begin_1a953e6c6;
					}
					_iter_end_1a953e6c6:;
				};
			}
			_iter_next_1a953dc7a:;
			++it;
			goto _iter_begin_1a953dc7a;
		}
		_iter_end_1a953dc7a:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a953ea4a:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _267715_decl = *it;
			{
				_1a5aacb6b_precheckFunc(_self_, &(_267715_decl));
			}
			_iter_next_1a953ea4a:;
			++it;
			goto _iter_begin_1a953ea4a;
		}
		_iter_end_1a953ea4a:;
	};
}



inline void _1a5aad067_checkFuncs(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9540e8b:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _268415_decl = *it;
			{
				_1a5aac60a_checkFunc(_self_, &(_268415_decl));
			}
			_iter_next_1a9540e8b:;
			++it;
			goto _iter_begin_1a9540e8b;
		}
		_iter_end_1a9540e8b:;
	};
}



inline void _1a5aad265_checkPackageTypes(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9541c6c:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _269215_f = *it;
			{
				_1a5a91897_setCurrentFile(_self_.ptr(), _269215_f);
				_1a5aa9140_checkGlobals(_self_);
				_1a5aacd69_precheckFuncs(_self_);
				_1a5aab61a_precheckStructTypes(_self_);
			}
			_iter_next_1a9541c6c:;
			++it;
			goto _iter_begin_1a9541c6c;
		}
		_iter_end_1a9541c6c:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95437b8:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _270315_f = *it;
			{
				_1a5a91897_setCurrentFile(_self_, _270315_f);
				_1a5aad067_checkFuncs(_self_);
				_1a5aaadab_checkStructTypes(_self_);
			}
			_iter_next_1a95437b8:;
			++it;
			goto _iter_begin_1a95437b8;
		}
		_iter_end_1a95437b8:;
	};
}



inline void _1a5aad463_setFileSemaFields(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9544d91:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _271115_f = *it;
			{
				(*(_271115_f))._field_sema=_self_;
			}
			_iter_next_1a9544d91:;
			++it;
			goto _iter_begin_1a9544d91;
		}
		_iter_end_1a9544d91:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95459eb:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _271415_st = *it;
			{
				(*(_271415_st))._field_sema=_self_;
			}
			_iter_next_1a95459eb:;
			++it;
			goto _iter_begin_1a95459eb;
		}
		_iter_end_1a95459eb:;
	};
}



inline void _1a5aad661_setSemaFields(jule::Ptr<_1a5a8e17a_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95466ab:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _272015_file = *it;
			{
				_1a5a91897_setCurrentFile(_self_.ptr(), _272015_file);
				_1a5aad463_setFileSemaFields(_self_);
			}
			_iter_next_1a95466ab:;
			++it;
			goto _iter_begin_1a95466ab;
		}
		_iter_end_1a95466ab:;
	};
}



inline void _1a5aad919_check(jule::Ptr<_1a5a8e17a_Sema> _self_, jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _272627_files) {
	(*(_self_))._field_files=(*(_272627_files));
	_1a5a95736_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a5aad661_setSemaFields(_self_);
	_1a5a9622b_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a5a95b32_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a5a95d30_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a5aa8150_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1a5aad265_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a5a8e17a_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1a5aadd48_missingRetChecker static__1a5aae211_new(void) {
	return _1a5aadd48_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1a5aae51e_checkConditional(_1a5aadd48_missingRetChecker* _self_, jule::Ptr<_1a5a4c886_Conditional> _277432_c) {
	{
		auto expr = &((*(_277432_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a954bcee:;
		if (it != expr_end) {
			jule::Ptr<_1a5a4c16b_If> _277515_elif = *it;
			{
				if ((_277515_elif == nullptr)) {
					return false;;
				};
				if ((!(_1a5aaeee2_checkScope(_self_, (*(_277515_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1a954bcee:;
			++it;
			goto _iter_begin_1a954bcee;
		}
		_iter_end_1a954bcee:;
	};
	return (((*_277432_c.alloc)._field_Default != nullptr) && _1a5aaeee2_checkScope(_self_, (*(*_277432_c.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a5aae860_checkMatch(_1a5aadd48_missingRetChecker* _self_, jule::Ptr<_1a5a50e61_Match> _278626_m) {
	{
		auto expr = &((*(_278626_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a954dd89:;
		if (it != expr_end) {
			jule::Ptr<_1a5a51989_Case> _278715_c = *it;
			{
				if ((_278715_c == nullptr)) {
					return false;;
				};
				jule::I64 _27914_n = (*(_self_))._field_breaked.len();;
				jule::Bool _27924_ok = _1a5aaeee2_checkScope(_self_, (*(_278715_c))._field_Scope);;
				{
					
					if ((_27914_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1a9550819:;
						{
							return false;;
						}
					}
					else if ((!(_27924_ok))) {
						_case_begin_1a95508b3:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1a9550929;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1a9550929:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_278715_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1a954dd89;
						}
					}
					_match_end_1a9550770:;
				};
			}
			_iter_next_1a954dd89:;
			++it;
			goto _iter_begin_1a954dd89;
		}
		_iter_end_1a954dd89:;
	};
	return (((*_278626_m.alloc)._field_Default != nullptr) && _1a5aaeee2_checkScope(_self_, (*(*_278626_m.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1a5aaeba1_checkInfIter(_1a5aadd48_missingRetChecker* _self_, jule::Ptr<_1a5a4cb83_InfIter> _281228_it) {
	jule::I64 _28133_n = (*(_self_))._field_breaked.len();;
	if (_1a5aaeee2_checkScope(_self_, (*(_281228_it))._field_Scope)) {
		((*(_self_))._field_breaked).mut_slice(0LL, _28133_n);;
		return true;;
	};
	if ((_28133_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _28194_itaddr = static_cast<jule::Uintptr>(_281228_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_28133_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a95546ca:;
			if (it != expr_end) {
				jule::Uintptr _282011_addr = *it;
				{
					if ((_28194_itaddr == _282011_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _28133_n);;
						return false;;
					};
				}
				_iter_next_1a95546ca:;
				++it;
				goto _iter_begin_1a95546ca;
			}
			_iter_end_1a95546ca:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _28133_n);;
	};
	return true;;
}



inline jule::Bool _1a5aaeee2_checkScope(_1a5aadd48_missingRetChecker* _self_, jule::Ptr<_1a5a4bc4d_Scope> _283126_s) {
	if ((_283126_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_283126_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9555cc5:;
		if (it != expr_end) {
			jule::Any _283515_st = *it;
			{
				{
					auto &_match_expr{ _283515_st };
					
					if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1a9556996:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1a9556776:;
						{
							jule::Uintptr _28415_addr = (*(_283515_st.unsafe_cast_ptr<_1a5a4e2e4_BreakSt>()))._field_It;;
							if ((_28415_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_28415_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type40) {
						_case_begin_1a9556a1d:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1a9556a95:;
						{
							if (_1a5aaeba1_checkInfIter(_self_, _283515_st.unsafe_cast_ptr<_1a5a4cb83_InfIter>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1a9556b1c:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1a9556b94:;
						{
							if (_1a5aaeee2_checkScope(_self_, _283515_st.unsafe_cast_ptr<_1a5a4bc4d_Scope>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1a9556c1b:;
						{
							{
								auto &_match_expr{ (*(_283515_st.cast_ptr<_1a5b19aeb_Data>(&__jule_any_type23)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type22) {
									_case_begin_1a955a901:;
									{
										return true;;
									}
								}
								_match_end_1a955a88a:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1a9556c93:;
						{
							if (_1a5aae51e_checkConditional(_self_, _283515_st.unsafe_cast_ptr<_1a5a4c886_Conditional>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1a9556d1a:;
						{
							if (_1a5aae860_checkMatch(_self_, _283515_st.unsafe_cast_ptr<_1a5a50e61_Match>())) {
								return true;;
							};
						}
					}
					_match_end_1a9556886:;
				};
			}
			_iter_next_1a9555cc5:;
			++it;
			goto _iter_begin_1a9555cc5;
		}
		_iter_end_1a9555cc5:;
	};
	return false;;
}



inline jule::Bool _1a5ab0333_check(_1a5aadd48_missingRetChecker* _self_, jule::Ptr<_1a5a4bc4d_Scope> _287721_s) {
	return _1a5aaeee2_checkScope(_self_, _287721_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5aadd48_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a5ab23bd_IsInitialized(_1a5ab1ee4_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1a5ab2654_IsTypeInferred(_1a5ab1ee4_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1a5ab28da_untypedConstant(_1a5ab1ee4_Var* _self_) {
	return (_1a5ab2654_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5ab1ee4_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a5ab348a_Dispose(jule::Ptr<_1a5a09cc7_Fn> _1020_f) {
	return ((((((((((_1020_f != nullptr) && ((*_1020_f.alloc)._field_Owner != nullptr)) && (*_1020_f.alloc)._field_Ident.equal("Dispose", 7)) && (!((*_1020_f.alloc)._field_Statically))) && (!((*_1020_f.alloc)._field_Unsafety))) && _1a5a0a24a_IsVoid(_1020_f)) && ((*_1020_f.alloc)._field_Generics.len() == 0LL)) && ((*_1020_f.alloc)._field_Params.len() == 1LL)) && (*((*_1020_f.alloc)._field_Params[0LL]))._field_Mutable) && (!(_1a5a08ba5_IsRef((*_1020_f.alloc)._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1a5ab3754_Str(jule::Ptr<_1a5a09cc7_Fn> _2416_f) {
	if (((((((((((_2416_f == nullptr) || ((*(_2416_f))._field_Owner == nullptr)) || (!(*(_2416_f))._field_Ident.equal("Str", 3))) || (*(_2416_f))._field_Statically) || (*(_2416_f))._field_Unsafety) || _1a5a0a24a_IsVoid(_2416_f.ptr())) || ((*(_2416_f))._field_Generics.len() != 0LL)) || ((*(_2416_f))._field_Params.len() != 1LL)) || (*((*(_2416_f))._field_Params[0LL]))._field_Mutable) || _1a5a08ba5_IsRef((*(_2416_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _387_ins = (*(_2416_f))._field_Instances[0LL];;
	jule::Ptr<_1a5b5892b_Prim> _393_prim = _1a5b534a3_Prim((*(_387_ins))._field_Result.ptr());;
	if ((_393_prim == nullptr)) {
		return false;;
	};
	return _1a5b5bdb3_IsStr(_393_prim.ptr());;
}



inline jule::Bool static__1a5ab3ac8_logical(jule::Ptr<_1a5a09cc7_Fn>* _4621_f, jule::Str _4629_ident) {
	if (((((((((((((((*(_4621_f)) == nullptr) || ((*((*(_4621_f))))._field_Ident != _4629_ident)) || ((*((*(_4621_f))))._field_Owner == nullptr)) || ((*((*(_4621_f))))._field_Instances.len() == 0LL)) || (*((*(_4621_f))))._field_Statically) || (*((*(_4621_f))))._field_Unsafety) || _1a5a0a24a_IsVoid((*(_4621_f)).ptr())) || ((*((*(_4621_f))))._field_Generics.len() != 0LL)) || ((*((*(_4621_f))))._field_Params.len() != 2LL)) || (*((*((*(_4621_f))))._field_Params[0LL]))._field_Mutable) || _1a5a08ba5_IsRef((*((*(_4621_f))))._field_Params[0LL].ptr())) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _637_ins = (*((*(_4621_f))))._field_Instances[0LL];;
	jule::Ptr<_1a5b5892b_Prim> _643_prim = _1a5b534a3_Prim((*(_637_ins))._field_Result.ptr());;
	if (((_643_prim == nullptr) || (!(_1a5b5bb2c_IsBool(_643_prim.ptr()))))) {
		return false;;
	};
	return ((*_637_ins.alloc)._field_Owner == _1a5b54a26_Struct((*((*_637_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1a5ab3d92_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _7215_f) {
	return static__1a5ab3ac8_logical(&(_7215_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1a5ab415b_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _7715_f) {
	return static__1a5ab3ac8_logical(&(_7715_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1a5ab4425_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _8217_f) {
	return static__1a5ab3ac8_logical(&(_8217_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1a5ab46de_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _8715_f) {
	return static__1a5ab3ac8_logical(&(_8715_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1a5ab49a8_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _9217_f) {
	return static__1a5ab3ac8_logical(&(_9217_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1a5ab4d2c_result(jule::Ptr<_1a5a09cc7_Fn>* _9620_f, jule::Str _9628_ident) {
	if (((((((((((((((*(_9620_f)) == nullptr) || ((*((*(_9620_f))))._field_Ident != _9628_ident)) || ((*((*(_9620_f))))._field_Owner == nullptr)) || ((*((*(_9620_f))))._field_Instances.len() == 0LL)) || (*((*(_9620_f))))._field_Statically) || (*((*(_9620_f))))._field_Unsafety) || _1a5a0a24a_IsVoid((*(_9620_f)).ptr())) || ((*((*(_9620_f))))._field_Generics.len() != 0LL)) || ((*((*(_9620_f))))._field_Params.len() != 2LL)) || (*((*((*(_9620_f))))._field_Params[0LL]))._field_Mutable) || _1a5a08ba5_IsRef((*((*(_9620_f))))._field_Params[0LL].ptr())) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _1137_ins = (*((*(_9620_f))))._field_Instances[0LL];;
	return (_1a5b54a26_Struct((*(_1137_ins))._field_Result.ptr()) == (*_1137_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a5ab50e6_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _11816_f) {
	return static__1a5ab4d2c_result(&(_11816_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1a5ab53b0_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _12316_f) {
	return static__1a5ab4d2c_result(&(_12316_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1a5ab5679_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _12816_f) {
	return static__1a5ab4d2c_result(&(_12816_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1a5ab5943_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _13316_f) {
	return static__1a5ab4d2c_result(&(_13316_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1a5ab5c0c_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _13816_f) {
	return static__1a5ab4d2c_result(&(_13816_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1a5ab5ec6_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _14316_f) {
	return static__1a5ab4d2c_result(&(_14316_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1a5ab6290_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _14816_f) {
	return static__1a5ab4d2c_result(&(_14816_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1a5ab6559_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _15319_f) {
	return static__1a5ab4d2c_result(&(_15319_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1a5ab6823_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _15818_f) {
	return static__1a5ab4d2c_result(&(_15818_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1a5ab6adc_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _16319_f) {
	return static__1a5ab4d2c_result(&(_16319_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1a5ab6e61_unary(jule::Ptr<_1a5a09cc7_Fn>* _16719_f, jule::Str _16727_ident) {
	if (((((((((((((*(_16719_f)) == nullptr) || ((*((*(_16719_f))))._field_Ident != _16727_ident)) || ((*((*(_16719_f))))._field_Owner == nullptr)) || ((*((*(_16719_f))))._field_Instances.len() == 0LL)) || (*((*(_16719_f))))._field_Statically) || (*((*(_16719_f))))._field_Unsafety) || _1a5a0a24a_IsVoid((*(_16719_f)).ptr())) || ((*((*(_16719_f))))._field_Generics.len() != 0LL)) || ((*((*(_16719_f))))._field_Params.len() != 1LL)) || (*((*((*(_16719_f))))._field_Params[0LL]))._field_Mutable) || _1a5a08ba5_IsRef((*((*(_16719_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _1827_ins = (*((*(_16719_f))))._field_Instances[0LL];;
	return (_1a5b54a26_Struct((*(_1827_ins))._field_Result.ptr()) == (*_1827_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1a5ab722a_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _18716_f) {
	return static__1a5ab6e61_unary(&(_18716_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1a5ab74e4_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _19216_f) {
	return static__1a5ab6e61_unary(&(_19216_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1a5ab77ad_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _19719_f) {
	return static__1a5ab6e61_unary(&(_19719_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1a5ab7b32_assign(jule::Ptr<_1a5a09cc7_Fn>* _20120_f, jule::Str _20128_ident) {
	if (((((((((((((((*(_20120_f)) == nullptr) || ((*((*(_20120_f))))._field_Ident != _20128_ident)) || ((*((*(_20120_f))))._field_Owner == nullptr)) || ((*((*(_20120_f))))._field_Instances.len() == 0LL)) || (*((*(_20120_f))))._field_Statically) || (*((*(_20120_f))))._field_Unsafety) || (!(_1a5a0a24a_IsVoid((*(_20120_f)).ptr())))) || ((*((*(_20120_f))))._field_Generics.len() != 0LL)) || ((*((*(_20120_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20120_f))))._field_Params[0LL]))._field_Mutable))) || _1a5a08ba5_IsRef((*((*(_20120_f))))._field_Params[0LL].ptr())) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1a5ab7deb_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _22122_f) {
	return static__1a5ab7b32_assign(&(_22122_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1a5ab81b5_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _22622_f) {
	return static__1a5ab7b32_assign(&(_22622_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1a5ab847e_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _23122_f) {
	return static__1a5ab7b32_assign(&(_23122_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1a5ab8748_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _23622_f) {
	return static__1a5ab7b32_assign(&(_23622_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1a5ab8a12_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _24122_f) {
	return static__1a5ab7b32_assign(&(_24122_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1a5ab8ccb_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _24622_f) {
	return static__1a5ab7b32_assign(&(_24622_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1a5ab9095_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _25122_f) {
	return static__1a5ab7b32_assign(&(_25122_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1a5ab935e_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _25624_f) {
	return static__1a5ab7b32_assign(&(_25624_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1a5ab9628_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _26125_f) {
	return static__1a5ab7b32_assign(&(_26125_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1a5ab98e2_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn> _26625_f) {
	return static__1a5ab7b32_assign(&(_26625_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5ab2d6e_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1a5b01cae_pushErr(_1a5b017b4_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args) {
	_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11923_fmt, _11936_args);
}



inline jule::Bool _1a5b02045_checkTrait(_1a5b017b4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a5b51e30_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5a1d181_Trait> _1277_trt = _1a5b54cac_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1287_ref = false;;
	{
		
		if ((_1a5b53739_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a959c316:;
			{
				_1287_ref=true;
				(*(_self_))._field_src=(*(_1a5b53739_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1a5b54a26_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1a959c3b0;
			}
		}
		else if ((_1a5b54a26_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a959c3b0:;
			{
				jule::Ptr<_1a59e7a84_StructIns> _1384_s = _1a5b54a26_Struct((*(_self_))._field_src);;
				if ((!(_1a59e6445_IsImplements((*(_1384_s))._field_Decl.ptr(), _1277_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1287_ref)) && _1a5b00362_traitHasReferenceReceiver(&(_1277_trt)))) {
					_1a5b01cae_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a5b54cac_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1a959c437:;
			{
				jule::Ptr<_1a5a1d181_Trait> _1488_base = _1a5b54cac_Trait((*(_self_))._field_src);;
				if ((_1277_trt == _1488_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1a95a2508:;
				{
					auto expr = &((*(_1488_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a95a25d5:;
					if (it != expr_end) {
						jule::Ptr<_1a59e4d06_Struct> _15311_s1 = *it;
						{
							{
								auto expr = &((*(_1277_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a95a2e98:;
								if (it != expr_end) {
									jule::Ptr<_1a59e4d06_Struct> _15412_s2 = *it;
									{
										if ((_15311_s1 == _15412_s2)) {
											goto _iter_next_1a95a25d5;
										};
									}
									_iter_next_1a95a2e98:;
									++it;
									goto _iter_begin_1a95a2e98;
								}
								_iter_end_1a95a2e98:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1a95a25d5:;
						++it;
						goto _iter_begin_1a95a25d5;
					}
					_iter_end_1a95a25d5:;
				};
				{
					auto expr = &((*_1277_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a95a33b6:;
					if (it != expr_end) {
						jule::Ptr<_1a5a09cc7_Fn> _16116_m1 = *it;
						{
							jule::Ptr<_1a5a09cc7_Fn> _1629_m2 = _1a5a1dd30_FindMethod(_1488_base, (*(_16116_m1))._field_Ident);;
							if ((_1629_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1a5a0cca8_FnIns> _1665_m1k = _1a5a9b7e7_getTraitCheckFnKind((*(_self_))._field_s, &(_16116_m1));;
							jule::Ptr<_1a5a0cca8_FnIns> _1675_m2k = _1a5a9b7e7_getTraitCheckFnKind((*(_self_))._field_s, &(_1629_m2));;
							if ((!(_1a5a0dc21_equalTrait(_1665_m1k, &(_1675_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1a95a33b6:;
						++it;
						goto _iter_begin_1a95a33b6;
					}
					_iter_end_1a95a33b6:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a959c28e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a959c206:;
	};
}



inline jule::Bool _1a5b022cb_checkPtr(_1a5b017b4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a5b51e30_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5b60c1e_Ptr> _1827_dest = _1a5b539c0_Ptr((*(_self_))._field_dest.ptr());;
	if (_1a5b61758_IsUnsafe(_1827_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1a5b5155b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a5b02562_checkPrim(_1a5b017b4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1a5b5892b_Prim> _1914_prim = _1a5b534a3_Prim((*(_self_))._field_dest);;
		if (((_1914_prim != nullptr) && _1a5b5c149_IsAny(_1914_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1a5b5155b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a5b0295d_typeEnum(_1a5b017b4_typeCompatibilityChecker* _self_, jule::Ptr<_1a5a22097_TypeEnum>* _19925_e, jule::Ptr<_1a5b50d52_TypeKind>* _19944_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19925_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95aa258:;
		if (it != expr_end) {
			jule::Ptr<_1a5a219c0_TypeEnumItem> _20015_item = *it;
			{
				if (_1a5b5155b_Equal((*((*(_20015_item))._field_Kind))._field_Kind, (*(_19944_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1a5a22097_TypeEnum> _2048_ke = _1a5b53edc_TypeEnum((*(*_20015_item.alloc)._field_Kind.alloc)._field_Kind);;
				if ((_2048_ke == nullptr)) {
					goto _iter_next_1a95aa258;
				};
				if (_1a5b0295d_typeEnum(_self_, &(_2048_ke), _19944_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a95aa258:;
			++it;
			goto _iter_begin_1a95aa258;
		}
		_iter_end_1a95aa258:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a5b02be4_checkTypeEnum(_1a5b017b4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a5b5155b_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5a22097_TypeEnum> _2197_e = _1a5b53edc_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1a5b0295d_typeEnum(_self_, &(_2197_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1a5b02e7a_check(_1a5b017b4_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1a5b539c0_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1a5b022cb_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1a5b52c00_NilCompatible((*(_self_))._field_dest)) {
		if (_1a5b51e30_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1a5b534a3_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a95b09ab:;
			{
				__jule_func_result = _1a5b02562_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a5b53edc_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a95b0a44:;
			{
				__jule_func_result = _1a5b02be4_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a5b54cac_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1a95b046c:;
			{
				__jule_func_result = _1a5b02045_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a95b0082:;
			{
				__jule_func_result = _1a5b5155b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1a95aee72:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b017b4_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1a5b039e7_pushErr(_1a5b03563_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25536_args) {
	_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25523_fmt, _25536_args);
}



inline jule::Bool _1a5b03c7d_checkValidity(_1a5b03563_assignTypeChecker* _self_) {
	jule::Bool _2607_valid = true;;
	{
		
		if ((_1a5b54790_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a95b376c:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _2634_f = _1a5b54790_Fn((*(*(_self_))._field_d.alloc)._field_Kind);;
				{
					
					if (_1a5a0e23d_IsBuiltin(_2634_f.ptr())) {
						_case_begin_1a95b50ba:;
						{
							_1a5b039e7_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((*((*(_2634_f))._field_Decl))._field_Binded) {
						_case_begin_1a95b5164:;
						{
							_1a5b039e7_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if (((!((*((*(_2634_f))._field_Decl))._field_Statically)) && _1a5a0a4d1_IsMethod((*_2634_f.alloc)._field_Decl))) {
						_case_begin_1a95b51ca:;
						{
							_1a5b039e7_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((((*((*(_2634_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2634_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1a95b5241:;
						{
							_1a5b039e7_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1a5a92128_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					_match_end_1a95b4edd:;
				};
			}
		}
		else if ((_1a5b552c9_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a95b3816:;
			{
				_1a5b039e7_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_2607_valid=false;
			}
		}
		_match_end_1a95b36e5:;
	};
	return _2607_valid;;
}



inline jule::Bool _1a5b04014_checkConst(_1a5b03563_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1a5b534a3_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2923_kind = (*(_1a5b534a3_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1b916b843_IsFloat(_2923_kind)) {
			_case_begin_1a95bb1c0:;
			{
				if ((!(_1a5b00719_floatAssignable(&(_2923_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2923_kind;
			}
		}
		else if (_1b916b502_IsInt(_2923_kind)) {
			_case_begin_1a95bb258:;
			{
				if ((!(_1a5b012ca_intAssignable(_2923_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2923_kind;
			}
		}
		else {
			_case_begin_1a95bb159:;
			{
				return false;;
			}
		}
		_match_end_1a95bb027:;
	};
	return true;;
}



inline jule::Bool _1a5b0429a_checkCompatibility(_1a5b03563_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a95bd48b:;
			{
				return false;;
			}
		}
		else if ((!(_1a5b03c7d_checkValidity(_self_)))) {
			_case_begin_1a95bd502:;
			{
				return false;;
			}
		}
		else if (_1a5b04014_checkConst(_self_)) {
			_case_begin_1a95bd568:;
			{
				return true;;
			}
		}
		else if ((_1a5b53c56_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a95bd5ce:;
			{
				jule::Ptr<_1a5b50d52_TypeKind> _3218_dkind = (*(_self_))._field_dest;;
				if ((_1a5b53c56_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3218_dkind=(*((*(_1a5b53c56_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1a5b5892b_Prim> _3254_prim = _1a5b534a3_Prim((*(_self_))._field_dest);;
				if (((_3254_prim == nullptr) || _1a5b5c149_IsAny(_3254_prim.ptr()))) {
					goto _match_end_1a95bc7a9;
				};
				jule::Ptr<_1a5b50d52_TypeKind> _3308_dest = (*(*(_1a5b53c56_Enum((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind;;
				return _1a5a9a230_checkTypeCompatibility((*(_self_))._field_s, &(_3308_dest), &(_3218_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1a95bc7a9:;
	};
	return _1a5a9ab04_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1a5b04531_check(_1a5b03563_assignTypeChecker* _self_) {
	jule::Bool _3373_ok = _1a5b0429a_checkCompatibility(_self_);;
	if ((_3373_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1a5b6d358_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));
	};
	return _3373_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b03563_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a9669944_annotateConstraintElem(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1a966b160:;
			{
				jule::Ptr<_1a5b50d52_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1a966be74:;
						{
							_36012_elem=(*(_1a5b54273_Arr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a966bdb9:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a59c6238_ArrTypeDecl>()))._field_Elem;
				return _1a5b06643_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1a966b0e9:;
	};
	return false;;
}

inline jule::Bool _1a966b55b_annotateConstraintElem(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1a966eb47:;
			{
				jule::Ptr<_1a5b50d52_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1a96707c4:;
						{
							_36012_elem=(*(_1a5b54509_Slc((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a96708a1:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a59c539c_SlcTypeDecl>()))._field_Elem;
				return _1a5b06643_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1a966ead1:;
	};
	return false;;
}

inline jule::Bool _1a966a637_annotateConstraintElem(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a96736ea:;
			{
				jule::Ptr<_1a5b50d52_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1a9674597:;
						{
							_36012_elem=(*(_1a5b539c0_Ptr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a9674454:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a59c5996_PtrTypeDecl>()))._field_Elem;
				return _1a5b06643_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1a9673684:;
	};
	return false;;
}

inline jule::Bool _1a9673ae6_annotateConstraintElem(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a9676d4c:;
			{
				jule::Ptr<_1a5b50d52_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1a9677c71:;
						{
							_36012_elem=(*(_1a5b53739_Sptr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1a9677aa6:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a59c5017_SptrTypeDecl>()))._field_Elem;
				return _1a5b06643_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1a9676cd6:;
	};
	return false;;
}



inline jule::Bool _1a5b0582e_annotateConstraintMap(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _37742_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1a95c587d:;
			{
				jule::Ptr<_1a5b5e5be_Map> _3808_m = _1a5b55043_Map((*(_37742_k)).ptr());;
				jule::Ptr<_1a59c6986_MapTypeDecl> _3818_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a59c6986_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3818_m2))._field_Key;
				if ((!(_1a5b06643_annotateConstraint(_self_, &((*(_3808_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3818_m2.alloc)._field_Val;
				__jule_func_result = _1a5b06643_annotateConstraint(_self_, &((*_3808_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1a95c5817:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a5b05b70_annotateConstraintTup(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _39242_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a95c8793:;
			{
				jule::Ptr<_1a59c5699_TupleTypeDecl> _3958_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a59c5699_TupleTypeDecl>();;
				jule::Ptr<_1a5b5da1e_Tuple> _3968_tup2 = _1a5b552c9_Tup((*(_39242_k)).ptr());;
				{
					auto expr = &((*(_3968_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a95ca0ad:;
					if (it != expr_end) {
						jule::Ptr<_1a5b50d52_TypeKind> _39716_t2 = *it;
						{
							{
								auto expr = &((*(_3958_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a95caa1a:;
								if (it != expr_end) {
									jule::Ptr<_1a59c3e6c_TypeDecl> _39817_t = *it;
									{
										(*(_self_))._field_c=_39817_t;
										if (_1a5b06643_annotateConstraint(_self_, &(_39716_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1a95caa1a:;
									++it;
									goto _iter_begin_1a95caa1a;
								}
								_iter_end_1a95caa1a:;
							};
						}
						_iter_next_1a95ca0ad:;
						++it;
						goto _iter_begin_1a95ca0ad;
					}
					_iter_end_1a95ca0ad:;
				};
			}
		}
		_match_end_1a95c872c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a5b05eb1_annotateConstraintFn(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _40941_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a95cb015:;
			{
				jule::Ptr<_1a59d5b2c_FnDecl> _4128_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1a59d5b2c_FnDecl>();;
				jule::Ptr<_1a5a0cca8_FnIns> _4138_f = _1a5b54790_Fn((*(_40941_k)).ptr());;
				{
					auto expr = &((*(_4138_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a95cced4:;
					if (it != expr_end) {
						jule::I64 _4149_i = it - expr->begin();
						jule::Ptr<_1a5a0bc30_ParamIns> _41416_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4128_pf))._field_Params[_4149_i]))._field_Kind;
							if (_1a5b06643_annotateConstraint(_self_, &((*(_41416_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1a95cced4:;
						++it;
						_4149_i++;
						goto _iter_begin_1a95cced4;
					}
					_iter_end_1a95cced4:;
				};
				if (((*_4128_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*_4128_pf.alloc)._field_Result.alloc)._field_Kind;
					if (_1a5b06643_annotateConstraint(_self_, &((*_4138_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1a95cae9e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a5b06302_annotateConstraintIdent(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _43044_k) {
	jule::Ptr<_1a59c4577_IdentTypeDecl> _4317_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1a59c4577_IdentTypeDecl>(&__jule_any_type74);;
	jule::Ptr<_1a59e7a84_StructIns> _4327_s = _1a5b54a26_Struct((*(_43044_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96639a4:;
		if (it != expr_end) {
			jule::I64 _4337_i = it - expr->begin();
			jule::Ptr<_1a59d1177_GenericDecl> _43310_g = *it;
			{
				if (((*(_43310_g))._field_Ident == (*(_4317_ident))._field_Ident)) {
					jule::Ptr<_1a5b4e46b_InsGeneric> _4359_fg = (*((*(_self_))._field_f))._field_Generics[_4337_i];;
					if ((_4359_fg != nullptr)) {
						return false;;
					};
					_1a5b069a6_pushGeneric(_self_, _43044_k, _4337_i);
					return true;;
				};
				if ((_4327_s == nullptr)) {
					goto _iter_next_1a96639a4;
				};
				jule::Ptr<_1a59c3e6c_TypeDecl> _4458_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4317_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9666534:;
					if (it != expr_end) {
						jule::Ptr<_1a59c3e6c_TypeDecl> _44616_ig = *it;
						{
							(*(_self_))._field_c=_44616_ig;
							{
								auto expr = &((*(_4327_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a9667106:;
								if (it != expr_end) {
									jule::Ptr<_1a5b4e46b_InsGeneric> _44817_sg = *it;
									{
										if (_1a5b06643_annotateConstraint(_self_, &((*(_44817_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1a9667106:;
									++it;
									goto _iter_begin_1a9667106;
								}
								_iter_end_1a9667106:;
							};
						}
						_iter_next_1a9666534:;
						++it;
						goto _iter_begin_1a9666534;
					}
					_iter_end_1a9666534:;
				};
				(*(_self_))._field_c=_4458_c;
			}
			_iter_next_1a96639a4:;
			++it;
			_4337_i++;
			goto _iter_begin_1a96639a4;
		}
		_iter_end_1a96639a4:;
	};
	return false;;
}



inline jule::Bool _1a5b06643_annotateConstraint(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _45939_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a96675ac:;
			{
				return _1a5b06302_annotateConstraintIdent(_self_, _45939_k);;
			}
		}
		_match_end_1a9667546:;
	};
	{
		
		if ((_1a5b54273_Arr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a966824a:;
			{
				return _1a9669944_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a5b54509_Slc((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a96682b1:;
			{
				return _1a966b55b_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a5b539c0_Ptr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a9668327:;
			{
				return _1a966a637_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a5b53739_Sptr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a966838d:;
			{
				return _1a9673ae6_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1a5b55043_Map((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a9668404:;
			{
				return _1a5b0582e_annotateConstraintMap(_self_, _45939_k);;
			}
		}
		else if ((_1a5b54790_Fn((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a96689dc:;
			{
				return _1a5b05eb1_annotateConstraintFn(_self_, _45939_k);;
			}
		}
		else if ((_1a5b552c9_Tup((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1a9668a53:;
			{
				return _1a5b05b70_annotateConstraintTup(_self_, _45939_k);;
			}
		}
		else {
			_case_begin_1a966858b:;
			{
				return false;;
			}
		}
		_match_end_1a9668536:;
	};
}



inline void _1a5b069a6_pushGeneric(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _48432_k, jule::I64 _48446_i) {
	(*((*(_self_))._field_f))._field_Generics[_48446_i]=jule::new_ptr<_1a5b4e46b_InsGeneric>(_1a5b4e46b_InsGeneric{._field_Kind=(*(_48432_k)), });
	jule::Ptr<_1a59d1177_GenericDecl> _4867_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48446_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a967ada6:;
		if (it != expr_end) {
			jule::Ptr<_1a5b50d52_TypeKind> _48715_ignored = *it;
			{
				if (((*(_4867_gd))._field_Ident == _1a5b5121a_Str(_48715_ignored.ptr()))) {
					(*_48715_ignored.alloc)._field_Kind=(*((*(_48432_k))))._field_Kind;
				};
			}
			_iter_next_1a967ada6:;
			++it;
			goto _iter_begin_1a967ada6;
		}
		_iter_end_1a967ada6:;
	};
	if ((((*_4867_gd.alloc)._field_Constraint == nullptr) || ((*((*_4867_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4867_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1a5b06643_annotateConstraint(_self_, _48432_k);
}



inline jule::Bool _1a5b06ce7_annotatePrim(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _49940_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a5b08d1b_annotateAny(_self_, _49940_k);
	return __jule_func_result;;
}



inline jule::Bool _1a5b07138_annotateArr(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _50339_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5b6024b_Arr> _5047_parr = _1a5b54273_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_5047_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5b6024b_Arr> _5087_arr = _1a5b54273_Arr((*(_50339_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5047_parr))._field_Elem));
	__jule_func_result = _1a5b0915c_annotateKind(_self_, &((*(_5087_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a5b07479_annotateSlc(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _51339_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5b5ce2a_Slc> _5147_pslc = _1a5b54509_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5147_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5b5ce2a_Slc> _5187_slc = _1a5b54509_Slc((*(_51339_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5147_pslc))._field_Elem));
	__jule_func_result = _1a5b0915c_annotateKind(_self_, &((*(_5187_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a5b07875_checkMapKey(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _52338_k, jule::Ptr<_1a5b50d52_TypeKind>* _52358_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5b50d52_TypeKind>* _5247_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52338_k;
	__jule_func_result=_1a5b0915c_annotateKind(_self_, _52358_ck);
	(*(_self_))._field_k=_5247_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a5b07bb6_annotateMap(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _53139_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5b5e5be_Map> _5327_pmap = _1a5b55043_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5327_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5b5e5be_Map> _5367_m = _1a5b55043_Map((*(_53139_k)).ptr());;
	__jule_func_result = (_1a5b07875_checkMapKey(_self_, (&((*(_5327_pmap))._field_Key)), &((*(_5367_m))._field_Key)) && _1a5b07875_checkMapKey(_self_, (&((*(_5327_pmap))._field_Val)), &((*_5367_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1a5b08007_annotateFn(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _54138_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5a0cca8_FnIns> _5427_pf = _1a5b54790_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5427_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _5467_f = _1a5b54790_Fn((*(_54138_k)).ptr());;
	{
		
		if (((*(_5427_pf))._field_Params.len() != (*(_5467_f))._field_Params.len())) {
			_case_begin_1a9688556:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1a5a0a24a_IsVoid((*(_5427_pf))._field_Decl.ptr()) != _1a5a0a24a_IsVoid((*(_5467_f))._field_Decl))) {
			_case_begin_1a96885de:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a96884bd:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a5b50d52_TypeKind>* _5557_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5467_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a968a459:;
		if (it != expr_end) {
			jule::I64 _5568_i = it - expr->begin();
			jule::Ptr<_1a5a0bc30_ParamIns> _55615_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5427_pf))._field_Params[_5568_i]))._field_Kind));
				__jule_func_result=(_1a5b0915c_annotateKind(_self_, &((*(_55615_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1a968a459:;
			++it;
			_5568_i++;
			goto _iter_begin_1a968a459;
		}
		_iter_end_1a968a459:;
	};
	if ((!(_1a5a0a24a_IsVoid((*(_5427_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5427_pf))._field_Result));
		__jule_func_result=(_1a5b0915c_annotateKind(_self_, &((*_5467_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5557_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a5b08348_annotatePtr(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _57039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5b60c1e_Ptr> _5717_pptr = _1a5b539c0_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5717_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5b60c1e_Ptr> _5757_ptr = _1a5b539c0_Ptr((*(_57039_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5717_pptr))._field_Elem));
	__jule_func_result = _1a5b0915c_annotateKind(_self_, &((*(_5757_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a5b08689_annotateSptr(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _58040_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5b5c457_Sptr> _5817_ssptr = _1a5b53739_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5817_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5b5c457_Sptr> _5857_sptr = _1a5b53739_Sptr((*(_58040_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5817_ssptr))._field_Elem));
	__jule_func_result = _1a5b0915c_annotateKind(_self_, &((*(_5857_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a5b089ca_annotateStruct(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _59042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a59e7a84_StructIns> _5917_s = _1a5b54a26_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _5957_s2 = _1a5b54a26_Struct((*(_59042_k)).ptr());;
	if (((*(_5917_s))._field_Generics.len() != (*(_5957_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5917_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96943a8:;
		if (it != expr_end) {
			jule::I64 _5998_i = it - expr->begin();
			jule::Ptr<_1a5b4e46b_InsGeneric> _59915_g = *it;
			{
				jule::Ptr<_1a5b4e46b_InsGeneric> _6008_g2 = (*_5957_s2.alloc)._field_Generics[_5998_i];;
				if (_1a5b5155b_Equal((*(_59915_g))._field_Kind, (*(_6008_g2))._field_Kind)) {
					goto _iter_next_1a96943a8;
				};
				(*(_self_))._field_k=(&((*_59915_g.alloc)._field_Kind));
				if ((!(_1a5b0915c_annotateKind(_self_, &((*_6008_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a96943a8:;
			++it;
			_5998_i++;
			goto _iter_begin_1a96943a8;
		}
		_iter_end_1a96943a8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a5b08d1b_annotateAny(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _61239_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6133_kind = _1a5b5121a_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9697950:;
		if (it != expr_end) {
			jule::I64 _6147_i = it - expr->begin();
			jule::Ptr<_1a59d1177_GenericDecl> _61410_g = *it;
			{
				if ((_6133_kind != (*(_61410_g))._field_Ident)) {
					goto _iter_next_1a9697950;
				};
				jule::Ptr<_1a5b4e46b_InsGeneric> _6184_t = (*((*(_self_))._field_f))._field_Generics[_6147_i];;
				{
					
					if ((_6184_t == nullptr) || ((*(_6184_t))._field_Kind == nullptr)) {
						_case_begin_1a969927b:;
						{
							_1a5b069a6_pushGeneric(_self_, _61239_k, _6147_i);
						}
					}
					else if ((!(_1a5b5155b_Equal((*(_6184_t))._field_Kind, (*(_61239_k)))))) {
						_case_begin_1a9699314:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1a969916b:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61239_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1a9697950:;
			++it;
			_6147_i++;
			goto _iter_begin_1a9697950;
		}
		_iter_end_1a9697950:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a5b0915c_annotateKind(_1a5b04e38_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _63340_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1a5b08d1b_annotateAny(_self_, _63340_k)) {
			_case_begin_1a969b844:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a5b534a3_Prim((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a969b8aa:;
			{
				__jule_func_result = _1a5b06ce7_annotatePrim(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5b54273_Arr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a969b921:;
			{
				__jule_func_result = _1a5b07138_annotateArr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5b54509_Slc((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a969b998:;
			{
				__jule_func_result = _1a5b07479_annotateSlc(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5b55043_Map((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a969bb63:;
			{
				__jule_func_result = _1a5b07bb6_annotateMap(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5b54790_Fn((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a969bbc9:;
			{
				__jule_func_result = _1a5b08007_annotateFn(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5b539c0_Ptr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a969bc40:;
			{
				__jule_func_result = _1a5b08348_annotatePtr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5b53739_Sptr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a969bca6:;
			{
				__jule_func_result = _1a5b08689_annotateSptr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5b54a26_Struct((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1a969bd2d:;
			{
				__jule_func_result = _1a5b089ca_annotateStruct(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a969b723:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a969b2b1:;
	};
}



inline jule::Bool _1a5b093e3_annotate(_1a5b04e38_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1a5b0915c_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b04e38_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a5b0a306_pushErrToken(_1a5b09c95_fnCallArgChecker* _self_, jule::Ptr<_1c80b653c_Token> _67828_token, jule::Str _67843_fmt, jule::Slice<jule::Any> _67856_args) {
	_1a5a91cb5_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67828_token, _67843_fmt, _67856_args);
}



inline void _1a5b0a669_pushErr(_1a5b09c95_fnCallArgChecker* _self_, jule::Str _68223_fmt, jule::Slice<jule::Any> _68236_args) {
	_1a5b0a306_pushErrToken(_self_, (*(_self_))._field_errorToken, _68223_fmt, _68236_args);
}



inline jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>> _1a5b0a900_getParams(_1a5b09c95_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl != nullptr)) && _1a5a0891e_IsSelf((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1a5b0ac41_checkCounts(_1a5b09c95_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>>* _69528_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _6967_n = (*(_69528_params)).len();;
	if (((_6967_n > 0LL) && _1a5a0891e_IsSelf((*((*(_69528_params))[0LL]))._field_Decl.ptr()))) {
		(_6967_n)--;
	};
	jule::I64 _7017_diff = (_6967_n - (*(_self_))._field_args.len());;
	jule::Str _7027_log = jule::Str();;
	{
		
		if ((_7017_diff == 0LL)) {
			_case_begin_1a96a87eb:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6967_n > 0LL) && (*(*((*(_69528_params))[(_6967_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1a96a871e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7017_diff < 0LL) || (_7017_diff > (*(_69528_params)).len()))) {
			_case_begin_1a96a83cd:;
			{
				_7027_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1a96a8367:;
			{
				_7027_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1a96a8301:;
	};
	_1e9a030bc_StrBuilder _7137_err = static__1e9a034eb_New(32LL);;
	_1e9a03a5c_WriteStr(&_7137_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_1e9a03a5c_WriteStr(&_7137_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69528_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96ab0d4:;
		if (it != expr_end) {
			jule::I64 _7167_i = it - expr->begin();
			jule::Ptr<_1a5a0bc30_ParamIns> *_71610_p = it;
			{
				_1e9a03a5c_WriteStr(&_7137_err, _1a5b5121a_Str((*((*(_71610_p))))._field_Kind.ptr()));
				if ((((*(_69528_params)).len() - _7167_i) > 1LL)) {
					_1e9a03a5c_WriteStr(&_7137_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1a96ab0d4:;
			++it;
			_7167_i++;
			goto _iter_begin_1a96ab0d4;
		}
		_iter_end_1a96ab0d4:;
	};
	_1e9a03d15_WriteByte(&_7137_err, ')');
	_1a5b0a669_pushErr(_self_, _7027_log, jule::Slice<jule::Any>::make({jule::Any(_1e9a04354_Str(&_7137_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a5b0b1e7_checkArg(_1a5b09c95_fnCallArgChecker* _self_, jule::Ptr<_1a5a0bc30_ParamIns>* _72729_p, jule::Ptr<_1a5b19aeb_Data>* _72748_arg, jule::Ptr<_1c80b653c_Token>* _72765_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1a5a10085_parameterUsesGenerics(_72729_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72729_p))))._field_Decl))._field_Variadic)) && _1a5b13881_isGoodValueToInfer(_72748_arg));
		if (__jule_func_result) {
			_1a5b04e38_dynamicTypeAnnotation _7329_dta = _1a5b04e38_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72729_p)), ._field_a=(*(_72748_arg)), ._field_errorToken=(*(_72765_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1a5b093e3_annotate(&_7329_dta);
		};
		if ((!(__jule_func_result))) {
			_1a5b0a306_pushErrToken(_self_, (*(_72765_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1a5a9db5c_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72729_p))))._field_Kind), _72748_arg, _72765_errorToken)) {
		__jule_func_result = _1a5a997c3_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72729_p))))._field_Kind), _72748_arg, (*(_72765_errorToken)));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a5b0b5e3_push(_1a5b09c95_fnCallArgChecker* _self_, jule::Ptr<_1a5a0bc30_ParamIns>* _75625_p, jule::Ptr<_1a59c82a1_Expr> _75643_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5b50d52_TypeKind> _7577_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7583_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75625_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75625_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75625_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1a5b19aeb_Data> _7667_d = _1a5b3e8e0_evalExpr((*(_self_))._field_e, _75643_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7577_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7583_oldImmut;
	if ((_7667_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a5b0b1e7_checkArg(_self_, _75625_p, &(_7667_d), &((*(_75643_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7667_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1a5b0b9de_pushVariadic(_1a5b09c95_fnCallArgChecker* _self_, jule::Ptr<_1a5a0bc30_ParamIns>* _78033_p, jule::I64 _78051_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7827_variadiced = false;;
	jule::Bool _7833_more = ((_78051_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1a59ee33d_SliceExprModel> _7847_model = jule::new_ptr<_1a59ee33d_SliceExprModel>(_1a59ee33d_SliceExprModel{._field_ElemKind=(*((*(_78033_p))))._field_Kind, });;
	jule::Ptr<_1a5b50d52_TypeKind> _7887_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1a5b50d52_TypeKind> _7957_oldKind = (*((*(_78033_p))))._field_Kind;;
	(*((*(_78033_p))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>((*(*((*(_78033_p))))._field_Kind.alloc));
	(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78033_p))))._field_Kind=_7957_oldKind;
	});;
	for (; (_78051_i < (*(_self_))._field_args.len()); (_78051_i)++) {
		{
			jule::Ptr<_1a59c82a1_Expr> _8048_arg = (*(_self_))._field_args[_78051_i];;
			{
				auto &_match_expr{ (*(_8048_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1a96bd1d4:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5b5ce2a_Slc>(_1a5b5ce2a_Slc{._field_Elem=(*((*(_78033_p))))._field_Kind}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data22)});
					}
				}
				else {
					_case_begin_1a96bd4d1:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78033_p))))._field_Kind;
					}
				}
				_match_end_1a96bd47b:;
			};
			jule::Ptr<_1a5b19aeb_Data> _8178_d = _1a5b3e25d_eval((*(_self_))._field_e, _8048_arg);;
			if ((_8178_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1a96bc689;
			};
			if ((*((*(_8178_d))._field_Kind))._field_Variadic) {
				_7827_variadiced=true;
				(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1a5b0b1e7_checkArg(_self_, _78033_p, &(_8178_d), &((*(_8048_arg))._field_Token)));
				(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8178_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1a96c0b65:;
						{
							_7847_model=(*(_8178_d))._field_Model.unsafe_cast_ptr<_1a59ee33d_SliceExprModel>();
							(*(_7847_model))._field_ElemKind=(*((*(_78033_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1a96c2282:;
						{
							_7847_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8178_d))._field_Model); };
						}
					}
					_match_end_1a96c222c:;
				};
				(_78051_i)++;
				goto _iter_end_1a96bc689;
			};
			__jule_func_result=(__jule_func_result && _1a5b0b1e7_checkArg(_self_, _78033_p, &(_8178_d), &((*_8048_arg.alloc)._field_Token)));
			(*(_7847_model))._field_Elems=jule::append((*_7847_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_8178_d))._field_Model}));
		}
	_iter_next_1a96bc689:;
	}
	_iter_end_1a96bc689:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7887_old;
	if ((_7827_variadiced && _7833_more)) {
		_1a5b0a306_pushErrToken(_self_, (*((*(_self_))._field_args[_78051_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_7847_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7847_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a5b0bd30_checkArgs(_1a5b09c95_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>>* _86130_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8623_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _8667_i = 0LL;;
	if ((((*(_86130_params)).len() > 0LL) && _1a5a0891e_IsSelf((*((*(_86130_params))[0LL]))._field_Decl.ptr()))) {
		(_8667_i)++;
	};
	_julec_label_1a96c75d9:;
	while ((_8667_i < (*(_86130_params)).len())) {
		{
			jule::Ptr<_1a5a0bc30_ParamIns> _8738_p = (*(_86130_params))[_8667_i];;
			{
				
				if ((*(*(_8738_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1a96c9245:;
					{
						__jule_func_result=(_1a5b0b9de_pushVariadic(_self_, &(_8738_p), _8667_i) && __jule_func_result);
						goto _iter_end_1a96c796e;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8667_i)) {
					_case_begin_1a96c9333:;
					{
						__jule_func_result=false;
						goto _iter_end_1a96c796e;
					}
				}
				else {
					_case_begin_1a96c8d8d:;
					{
						__jule_func_result=(_1a5b0b5e3_push(_self_, &(_8738_p), (*(_self_))._field_args[_8667_i]) && __jule_func_result);
					}
				}
				_match_end_1a96c8d27:;
			};
			(_8667_i)++;
		}
	_iter_next_1a96c796e:;
	}
	_iter_end_1a96c796e:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8623_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a5b0c0b6_checkDynamicTypeAnnotation(_1a5b09c95_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96cb500:;
		if (it != expr_end) {
			jule::Ptr<_1a5b4e46b_InsGeneric> _89310_g = *it;
			{
				if ((_89310_g == nullptr)) {
					_1a5b0a669_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a96cb500:;
			++it;
			goto _iter_begin_1a96cb500;
		}
		_iter_end_1a96cb500:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a5b0c34c_check(_1a5b09c95_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>> _9037_params = _1a5b0a900_getParams(_self_);;
	__jule_func_result=_1a5b0ac41_checkCounts(_self_, &(_9037_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a5b0bd30_checkArgs(_self_, &(_9037_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1a5b0c0b6_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b09c95_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a5b0d22c_pushErr(_1a5b0cbcc_structLitChecker* _self_, jule::Ptr<_1c80b653c_Token> _94123_token, jule::Str _94138_fmt, jule::Slice<jule::Any> _94151_args) {
	_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), _94123_token, _94138_fmt, _94151_args);
}



inline void _1a5b0d590_pushSuggestion(_1a5b0cbcc_structLitChecker* _self_, jule::Str _94630_fmt, jule::Slice<jule::Any> _94643_args) {
	_1a5b1c1d6_pushSuggestion((*(_self_))._field_e.ptr(), _94630_fmt, _94643_args);
}



inline void _1a5b0d9ad_pushMatch(_1a5b0cbcc_structLitChecker* _self_, jule::Ptr<_1a59e6ed4_FieldIns>* _95030_f, jule::Ptr<_1a5b19aeb_Data>* _95049_d, jule::Ptr<_1c80b653c_Token>* _95064_errorToken) {
	;
	jule::Bool _9563_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95030_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1a5a9db5c_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9563_mutable, false, &((*((*(_95030_f))))._field_Kind), _95049_d, _95064_errorToken)) {
		_1a5a997c3_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, false, &((*((*(_95030_f))))._field_Kind), _95049_d, (*(_95064_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1a59ec88b_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1a59ec88b_StructArgExprModel>(_1a59ec88b_StructArgExprModel{._field_Token=(*(_95064_errorToken)), ._field_Field=(*(_95030_f)), ._field_Expr=(*(_95049_d))})); };
}



inline void _1a5b0dd21_checkPair(_1a5b0cbcc_structLitChecker* _self_, jule::Ptr<_1a59cc9c0_FieldExprPair>* _96930_pair, jule::Slice<jule::Ptr<_1a59c82a1_Expr>>* _96957_exprs) {
	jule::Ptr<_1a59e6ed4_FieldIns> _9717_f = _1a59e8e3c_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96930_pair))))._field_Field))._field_Kind);;
	if ((_9717_f == nullptr)) {
		_1a5b0d22c_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1a5a92524_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9717_f))._field_Decl))._field_Public, (*(*(_9717_f))._field_Decl.alloc)._field_Token)))) {
		_1a5b0d22c_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		_1a5b0d590_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1a96d76b5:;
	{
		auto expr = _96957_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96d54b5:;
		if (it != expr_end) {
			jule::Ptr<_1a59c82a1_Expr> _98315_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98315_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1a96d8a90:;
						{
							jule::Ptr<_1a59cc9c0_FieldExprPair> _9869_dpair = (*(_98315_expr))._field_Kind.unsafe_cast_ptr<_1a59cc9c0_FieldExprPair>();;
							{
								
								if (((*(_96930_pair)) == _9869_dpair)) {
									_case_begin_1a96d9a80:;
									{
										goto _iter_end_1a96d54b5;
									}
								}
								else if (((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind == (*(*(_9869_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1a96d9b29:;
									{
										_1a5b0d22c_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1a96d54b5;
									}
								}
								_match_end_1a96d9a08:;
							};
						}
					}
					_match_end_1a96d8a29:;
				};
			}
			_iter_next_1a96d54b5:;
			++it;
			goto _iter_begin_1a96d54b5;
		}
		_iter_end_1a96d54b5:;
	};
	jule::Ptr<_1a5b50d52_TypeKind> _9977_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9977_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9717_f))._field_Kind;
	jule::Ptr<_1a5b19aeb_Data> _10017_d = _1a5b3e8e0_evalExpr((*(_self_))._field_e, (*((*(_96930_pair))))._field_Expr);;
	if ((_10017_d == nullptr)) {
		return;;
	};
	_1a5b0d9ad_pushMatch(_self_, &(_9717_f), &(_10017_d), &((*((*(_96930_pair))))._field_Field));
}



inline jule::Bool _1a5b0e162_readyExprs(_1a5b0cbcc_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a59c82a1_Expr>>* _100831_exprs) {
	jule::Bool _10097_ok = true;;
	{
		auto expr = _100831_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96ddee6:;
		if (it != expr_end) {
			jule::I64 _10108_i = it - expr->begin();
			jule::Ptr<_1a59c82a1_Expr> _101015_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101015_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1a96debc8:;
						{
							jule::Ptr<_1a59ce0cb_KeyValPair> _10139_pair = (*(_101015_expr))._field_Kind.unsafe_cast_ptr<_1a59ce0cb_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10139_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1a96e0a53:;
									{
										goto _match_end_1a96e101a;
									}
								}
								else {
									_case_begin_1a96e1070:;
									{
										_1a5b0d22c_pushErr(_self_, (*(_10139_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_10097_ok=false;
										goto _iter_next_1a96ddee6;
									}
								}
								_match_end_1a96e101a:;
							};
							(*((*(_100831_exprs))[_10108_i]))._field_Kind=jule::Any(jule::new_ptr<_1a59cc9c0_FieldExprPair>(_1a59cc9c0_FieldExprPair{._field_Field=(*((*(_10139_pair))._field_Key))._field_Token, ._field_Expr=(*_10139_pair.alloc)._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1a96deb62:;
				};
			}
			_iter_next_1a96ddee6:;
			++it;
			_10108_i++;
			goto _iter_begin_1a96ddee6;
		}
		_iter_end_1a96ddee6:;
	};
	return _10097_ok;;
}



inline void _1a5b0e41a_check(_1a5b0cbcc_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a59c82a1_Expr>>* _103226_exprs) {
	if (((*(_103226_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1a5b0e162_readyExprs(_self_, _103226_exprs)))) {
		return;;
	};
	jule::Bool _10397_paired = false;;
	{
		auto expr = _103226_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96e35b1:;
		if (it != expr_end) {
			jule::I64 _10408_i = it - expr->begin();
			jule::Ptr<_1a59c82a1_Expr> _104015_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104015_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1a96e9c5a:;
						{
							jule::Ptr<_1a59cc9c0_FieldExprPair> _10439_pair = (*(_104015_expr))._field_Kind.unsafe_cast_ptr<_1a59cc9c0_FieldExprPair>();;
							if (((_10408_i > 0LL) && (!(_10397_paired)))) {
								_1a5b0d22c_pushErr(_self_, (*(_10439_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_10397_paired=true;
							_1a5b0dd21_checkPair(_self_, &(_10439_pair), _103226_exprs);
						}
					}
					else {
						_case_begin_1a96e44b3:;
						{
							if (_10397_paired) {
								_1a5b0d22c_pushErr(_self_, (*(_104015_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_10408_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1a5b0d22c_pushErr(_self_, (*_104015_expr.alloc)._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1a96e35b1;
							};
							jule::Ptr<_1a59e6ed4_FieldIns> _10589_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10408_i];;
							if ((!(_1a5a92524_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10589_field))._field_Decl))._field_Public, (*(*_10589_field.alloc)._field_Decl.alloc)._field_Token)))) {
								_1a5b0d22c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1a5b0d590_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a5b50d52_TypeKind> _10669_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10669_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10589_field.alloc)._field_Kind;
							jule::Ptr<_1a5b19aeb_Data> _10709_d = _1a5b3e8e0_evalExpr((*(_self_))._field_e, _104015_expr);;
							if ((_10709_d == nullptr)) {
								goto _iter_next_1a96e35b1;
							};
							_1a5b0d9ad_pushMatch(_self_, &(_10589_field), &(_10709_d), &((*_104015_expr.alloc)._field_Token));
						}
					}
					_match_end_1a96e445d:;
				};
			}
			_iter_next_1a96e35b1:;
			++it;
			_10408_i++;
			goto _iter_begin_1a96e35b1;
		}
		_iter_end_1a96e35b1:;
	};
	if ((!(_10397_paired))) {
		jule::I64 _10814_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _10828_diff = (_10814_n - (*(_103226_exprs)).len());;
		{
			
			if ((_10828_diff <= 0LL)) {
				_case_begin_1a96ec5dc:;
				{
					return;;
				}
			}
			_match_end_1a96ec4cc:;
		};
		_1e9a030bc_StrBuilder _10888_idents = static__1e9a034eb_New(32LL);;
		for (; (_10828_diff > 0LL); (_10828_diff)--) {
			{
				_1e9a03a5c_WriteStr(&_10888_idents, jule::Str::lit(", ", 2));
				_1e9a03a5c_WriteStr(&_10888_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10814_n - _10828_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1a96ece39:;
		}
		_iter_end_1a96ece39:;;
		_1a5b0d22c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_1e9a04d05_Buf(&_10888_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b0cbcc_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a5b0ee98_buildVar(_1a5b0e9ae_rangeChecker* _self_, jule::Ptr<_1a59d6cd7_VarDecl>* _110825_decl) {
	jule::Ptr<_1a5ab1ee4_Var> _11097_v = _1a5a16300_buildVar((*(_110825_decl)));;
	return _11097_v;;
}



inline void _1a5b10196_setSizeKey(_1a5b0e9ae_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1c80b8e24_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1a5b0ee98_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1c798b077_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
}



inline void _1a5b105b4_checkRangeExprValidity(_1a5b0e9ae_rangeChecker* _self_, jule::Ptr<_1a5b19aeb_Data>* _112743_d, jule::Ptr<_1a5ab1ee4_Var>* _112754_key, jule::Ptr<_1a5b50d52_TypeKind>* _112770_k) {
	jule::Bool _11287__mut = (*((*(_112754_key))))._field_Mutable;;
	if ((_11287__mut && (!(_1a5b526d3_Mutable((*(_112770_k)).ptr()))))) {
		_11287__mut=false;
	};
	_1a5a9db5c_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11287__mut, (*((*(_112754_key))))._field_Reference, &((*((*((*(_112754_key))))._field_Kind))._field_Kind), _112743_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1a5b107b2_checkSlice(_1a5b0e9ae_rangeChecker* _self_) {
	_1a5b10196_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c80b8e24_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a5b5ce2a_Slc> _11467_slc = _1a5b54509_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a5b0ee98_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=(*(_11467_slc))._field_Elem});
	_1a5b105b4_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11467_slc.alloc)._field_Elem));
}



inline void _1a5b109b0_checkArray(_1a5b0e9ae_rangeChecker* _self_) {
	_1a5b10196_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c80b8e24_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a5b6024b_Arr> _11597_arr = _1a5b54273_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a5b0ee98_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=(*(_11597_arr))._field_Elem});
	_1a5b105b4_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11597_arr.alloc)._field_Elem));
}



inline void _1a5b10bad_checkMapKeyA(_1a5b0e9ae_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1c80b8e24_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a5b5e5be_Map> _11717_m = _1a5b55043_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1a5b0ee98_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=(*(_11717_m))._field_Key});
	jule::Ptr<_1a5b19aeb_Data> _11757_d = jule::new_ptr<_1a5b19aeb_Data>((*(*(_self_))._field_d.alloc));;
	(*_11757_d.alloc)._field_Kind=(*_11717_m.alloc)._field_Key;
	_1a5b105b4_checkRangeExprValidity(_self_, &(_11757_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11717_m.alloc)._field_Key));
}



inline void _1a5b10dab_checkMapKeyB(_1a5b0e9ae_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c80b8e24_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a5b5e5be_Map> _11867_m = _1a5b55043_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1a5b0ee98_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=(*(_11867_m))._field_Val});
	jule::Ptr<_1a5b19aeb_Data> _11907_d = jule::new_ptr<_1a5b19aeb_Data>((*(*(_self_))._field_d.alloc));;
	(*_11907_d.alloc)._field_Kind=(*_11867_m.alloc)._field_Val;
	_1a5b105b4_checkRangeExprValidity(_self_, &(_11907_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11867_m.alloc)._field_Val));
}



inline void _1a5b110a9_checkMap(_1a5b0e9ae_rangeChecker* _self_) {
	_1a5b10bad_checkMapKeyA(_self_);
	_1a5b10dab_checkMapKeyB(_self_);
}



inline void _1a5b112a7_checkStr(_1a5b0e9ae_rangeChecker* _self_) {
	_1a5b10196_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c80b8e24_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a5b0ee98_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1c798b077_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1a5b114a5_checkComptime(_1a5b0e9ae_rangeChecker* _self_) {
	_1a5b10196_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Mutable)) {
		_1a5a91cb5_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Mutable)) {
		_1a5a91cb5_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1c80b8e24_IsIgnoreIdent((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1a5b0ee98_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1a5b1173b_checkComptimeRange(_1a5b0e9ae_rangeChecker* _self_) {
	jule::Ptr<_1a5a251ee_comptimeRange> _12257_range = _1a5b5684c_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_12257_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5a24ece_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a5a24ece_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a5a24ece_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a5a24ece_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a5a24ece_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1a5a24ece_comptimeRangeKind_mptr_data5)) {
			_case_begin_1a972038a:;
			{
				_1a5b114a5_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1a971e3cd:;
			{
				_1a5a91cb5_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a971e378:;
	};
}



inline jule::Bool _1a5b119c2_check(_1a5b0e9ae_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1a97224e1:;
		}
		else if ((_1a5b54509_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9720db3:;
			{
				_1a5b107b2_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1a5b54273_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9720e29:;
			{
				_1a5b109b0_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1a5b55043_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a97214ac:;
			{
				_1a5b110a9_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1a5b5684c_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9721523:;
			{
				return _1a5b1173b_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1a9720d2a:;
			{
				jule::Ptr<_1a5b5892b_Prim> _12574_prim = _1a5b534a3_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_12574_prim != nullptr) && _1a5b5bdb3_IsStr(_12574_prim))) {
					_1a5b112a7_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1a9720c2b:;
	};
	_1a5a91cb5_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b0e9ae_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1a5b1264e_prepareTypes(_1a5b12220_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1a5a0dea7_Types((*(_self_))._field_f);
	};
}



inline void _1a5b12907_prepareExprs(_1a5b12220_retTypeChecker* _self_, jule::Ptr<_1a59c82a1_Expr>* _128533_e) {
	if (((*(_128533_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128533_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a9728041:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128533_e))))._field_Kind.unsafe_cast_ptr<_1a59c8d95_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1a972820b:;
			{
				{ jule::Slice<jule::Ptr<_1a59c82a1_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128533_e))); };
			}
		}
		_match_end_1a97281a6:;
	};
}



inline void _1a5b12b05_checkExprs(_1a5b12220_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a5b19aeb_Data>> _13017_datas = jule::Slice<jule::Ptr<_1a5b19aeb_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1a5b1b823_Eval> _13027_eval = _1a5a99262_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9728b79:;
		if (it != expr_end) {
			jule::I64 _13038_i = it - expr->begin();
			jule::Ptr<_1a59c82a1_Expr> _130315_expr = *it;
			{
				if ((_13038_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1a9728b79;
				};
				jule::Ptr<_1a5b50d52_TypeKind> _13088_t = (*(_self_))._field_types[_13038_i];;
				(*(_13027_eval))._field_prefix=_13088_t;
				jule::Ptr<_1a5b19aeb_Data> _13118_d = _1a5b3e8e0_evalExpr(_13027_eval, _130315_expr);;
				if ((_13118_d == nullptr)) {
					goto _iter_next_1a9728b79;
				};
				{ jule::Slice<jule::Ptr<_1a5b19aeb_Data>> &__jule_push_dest = _13017_datas; __jule_push_dest.push(_13118_d); };
				if (((!((*(_13118_d))._field_Mutable)) && _1a5b526d3_Mutable((*(_13118_d))._field_Kind.ptr()))) {
					_1a5a91cb5_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1a5b03563_assignTypeChecker _13238_ac = _1a5b03563_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13088_t, ._field_d=_13118_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1a5b04531_check(&_13238_ac);
			}
			_iter_next_1a9728b79:;
			++it;
			_13038_i++;
			goto _iter_begin_1a9728b79;
		}
		_iter_end_1a9728b79:;
	};
	if ((_13017_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1a5a0264e_TupleExprModel>(_1a5a0264e_TupleExprModel{._field_Datas=_13017_datas}), &__jule_any_type81);
	} else if ((_13017_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_13017_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1a5b12d8b_tryFuncMultiRetForward(_1a5b12220_retTypeChecker* _self_) {
	jule::Ptr<_1a5b1b823_Eval> _13447_eval = _1a5a99262_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0));;
	jule::Ptr<_1a5b19aeb_Data> _13457_d = _1a5b3e8e0_evalExpr(_13447_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13457_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1a5b5da1e_Tuple> _13517_tup = _1a5b552c9_Tup((*(_13457_d))._field_Kind.ptr());;
	if ((_13517_tup == nullptr)) {
		return false;;
	};
	if (((*(_13517_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1a9735955;
	};
	(*(_self_))._field_model=(*(_13457_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9732bc7:;
		if (it != expr_end) {
			jule::I64 _13597_i = it - expr->begin();
			{
				if ((!(_1a5a99c79__checkTypeCompatibility((*(*(_self_))._field_sc.alloc)._field_s, &((*(_self_))._field_types[_13597_i]), &((*(_13517_tup))._field_Types[_13597_i]), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1a9735955;
				};
			}
			_iter_next_1a9732bc7:;
			++it;
			_13597_i++;
			goto _iter_begin_1a9732bc7;
		}
		_iter_end_1a9732bc7:;
	};
	return true;;
	_julec_label_1a9735955:;
	_1e9a030bc_StrBuilder _13667_wanted = static__1e9a034eb_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9736eea:;
		if (it != expr_end) {
			jule::I64 _13677_i = it - expr->begin();
			jule::Ptr<_1a5b50d52_TypeKind> _136710_t = *it;
			{
				_1e9a03a5c_WriteStr(&_13667_wanted, _1a5b5121a_Str(_136710_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13677_i) > 1LL)) {
					_1e9a03a5c_WriteStr(&_13667_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1a9736eea:;
			++it;
			_13677_i++;
			goto _iter_begin_1a9736eea;
		}
		_iter_end_1a9736eea:;
	};
	_1e9a030bc_StrBuilder _13737_given = static__1e9a034eb_New(32LL);;
	{
		auto expr = &((*(_13517_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9738c11:;
		if (it != expr_end) {
			jule::I64 _13747_i = it - expr->begin();
			jule::Ptr<_1a5b50d52_TypeKind> _137410_t = *it;
			{
				_1e9a03a5c_WriteStr(&_13737_given, _1a5b5121a_Str(_137410_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13747_i) > 1LL)) {
					_1e9a03a5c_WriteStr(&_13737_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1a9738c11:;
			++it;
			_13747_i++;
			goto _iter_begin_1a9738c11;
		}
		_iter_end_1a9738c11:;
	};
	_1a5a91cb5_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66), jule::Slice<jule::Any>::make({jule::Any(_1e9a04354_Str(&_13667_wanted), &__jule_any_type4),jule::Any(_1e9a04354_Str(&_13737_given), &__jule_any_type4)}));
	return false;;
}



inline jule::Bool _1a5b131cc_check(_1a5b12220_retTypeChecker* _self_, jule::Ptr<_1a59c82a1_Expr>* _138426_e) {
	_1a5b1264e_prepareTypes(_self_);
	_1a5b12907_prepareExprs(_self_, _138426_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1a973c1dc:;
			{
				if ((!(_1a5a0b01a_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1a5a91cb5_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1a5a0a24a_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1a973c253:;
			{
				_1a5a91cb5_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1a973c2b9:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1a9741972:;
						{
							if (_1a5b12d8b_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1a97418c8:;
				};
				_1a5a91cb5_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1a973c330:;
			{
				_1a5a91cb5_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1a973c396:;
			{
				_1a5a91cb5_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a973c088:;
	};
	_1a5b12b05_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b12220_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5b14c6c_SelectPackage(_1a5b14783_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97450e6:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1a97450e6:;
			++it;
			goto _iter_begin_1a97450e6;
		}
		_iter_end_1a97450e6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a5b15168_FindVar(_1a5b14783_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1a5b16e4a_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1a5b50060_TypeAlias> _1a5b15564_FindTypeAlias(_1a5b14783_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1a5b17401_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1a59e4d06_Struct> _1a5b15960_FindStruct(_1a5b14783_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a974748e:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1a974748e:;
			++it;
			goto _iter_begin_1a974748e;
		}
		_iter_end_1a974748e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a09cc7_Fn> _1a5b15d5b_FindFn(_1a5b14783_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97489ce:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1a97489ce:;
			++it;
			goto _iter_begin_1a97489ce;
		}
		_iter_end_1a97489ce:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a1d181_Trait> _1a5b1619c_FindTrait(_1a5b14783_SymbolTable* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9749cee:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1a9749cee:;
			++it;
			goto _iter_begin_1a9749cee;
		}
		_iter_end_1a9749cee:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a2088c_Enum> _1a5b164dd_FindEnum(_1a5b14783_SymbolTable* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a974ac9a:;
		if (it != expr_end) {
			jule::Ptr<_1a5a2088c_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1a974ac9a:;
			++it;
			goto _iter_begin_1a974ac9a;
		}
		_iter_end_1a974ac9a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a22097_TypeEnum> _1a5b1682e_FindTypeEnum(_1a5b14783_SymbolTable* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a974bc68:;
		if (it != expr_end) {
			jule::Ptr<_1a5a22097_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1a974bc68:;
			++it;
			goto _iter_begin_1a974bc68;
		}
		_iter_end_1a974bc68:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a5b16e4a_findVar(_1a5b14783_SymbolTable* _self_, jule::Str* _10824_ident, jule::Bool _10836_binded, jule::Bool _10850_reverse) {
	if (_10850_reverse) {
		jule::I64 _1108_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1108_i >= 0LL); (_1108_i)--) {
			{
				jule::Ptr<_1a5ab1ee4_Var> _1129_v = (*(_self_))._field_Vars[_1108_i];;
				if ((((*(_1129_v))._field_Ident == (*(_10824_ident))) && ((*_1129_v.alloc)._field_Binded == _10836_binded))) {
					return _1129_v;;
				};
			}
		_iter_next_1a974dae4:;
		}
		_iter_end_1a974dae4:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a974ea5c:;
			if (it != expr_end) {
				jule::Ptr<_1a5ab1ee4_Var> _11816_v = *it;
				{
					if ((((*(_11816_v))._field_Ident == (*(_10824_ident))) && ((*_11816_v.alloc)._field_Binded == _10836_binded))) {
						return _11816_v;;
					};
				}
				_iter_next_1a974ea5c:;
				++it;
				goto _iter_begin_1a974ea5c;
			}
			_iter_end_1a974ea5c:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1a5b50060_TypeAlias> _1a5b17401_findTypeAlias(_1a5b14783_SymbolTable* _self_, jule::Str* _12730_ident, jule::Bool _12742_binded, jule::Bool _12756_reverse) {
	if (_12756_reverse) {
		jule::I64 _1298_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1298_i >= 0LL); (_1298_i)--) {
			{
				jule::Ptr<_1a5b50060_TypeAlias> _1319_ta = (*(_self_))._field_TypeAliases[_1298_i];;
				if ((((*(_1319_ta))._field_Ident == (*(_12730_ident))) && ((*_1319_ta.alloc)._field_Binded == _12742_binded))) {
					return _1319_ta;;
				};
			}
		_iter_next_1a9751e38:;
		}
		_iter_end_1a9751e38:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9752da1:;
			if (it != expr_end) {
				jule::Ptr<_1a5b50060_TypeAlias> _13716_ta = *it;
				{
					if ((((*(_13716_ta))._field_Ident == (*(_12730_ident))) && ((*_13716_ta.alloc)._field_Binded == _12742_binded))) {
						return _13716_ta;;
					};
				}
				_iter_next_1a9752da1:;
				++it;
				goto _iter_begin_1a9752da1;
			}
			_iter_end_1a9752da1:;
		};
	};
	return nullptr;;
}



inline jule::Any _1a5b177ec_defByIdent(_1a5b14783_SymbolTable* _self_, jule::Str* _14827_ident, jule::Bool _14839_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9754611:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> _14915_v = *it;
			{
				if ((((*(_14915_v))._field_Ident == (*(_14827_ident))) && ((*_14915_v.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_14915_v, &__jule_any_type8);;
				};
			}
			_iter_next_1a9754611:;
			++it;
			goto _iter_begin_1a9754611;
		}
		_iter_end_1a9754611:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9754963:;
		if (it != expr_end) {
			jule::Ptr<_1a5b50060_TypeAlias> _15515_ta = *it;
			{
				if ((((*(_15515_ta))._field_Ident == (*(_14827_ident))) && ((*_15515_ta.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_15515_ta, &__jule_any_type65);;
				};
			}
			_iter_next_1a9754963:;
			++it;
			goto _iter_begin_1a9754963;
		}
		_iter_end_1a9754963:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97558cb:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _16115_s = *it;
			{
				if ((((*(_16115_s))._field_Ident == (*(_14827_ident))) && ((*_16115_s.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_16115_s, &__jule_any_type64);;
				};
			}
			_iter_next_1a97558cb:;
			++it;
			goto _iter_begin_1a97558cb;
		}
		_iter_end_1a97558cb:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9756899:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _16715_f = *it;
			{
				if ((((*(_16715_f))._field_Ident == (*(_14827_ident))) && ((*_16715_f.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_16715_f, &__jule_any_type63);;
				};
			}
			_iter_next_1a9756899:;
			++it;
			goto _iter_begin_1a9756899;
		}
		_iter_end_1a9756899:;
	};
	if (_14839_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9757713:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> _17715_t = *it;
			{
				if (((*(_17715_t))._field_Ident == (*(_14827_ident)))) {
					return jule::Any(_17715_t, &__jule_any_type10);;
				};
			}
			_iter_next_1a9757713:;
			++it;
			goto _iter_begin_1a9757713;
		}
		_iter_end_1a9757713:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9758e51:;
		if (it != expr_end) {
			jule::Ptr<_1a5a2088c_Enum> _18315_e = *it;
			{
				if (((*(_18315_e))._field_Ident == (*(_14827_ident)))) {
					return jule::Any(_18315_e, &__jule_any_type66);;
				};
			}
			_iter_next_1a9758e51:;
			++it;
			goto _iter_begin_1a9758e51;
		}
		_iter_end_1a9758e51:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9759acd:;
		if (it != expr_end) {
			jule::Ptr<_1a5a22097_TypeEnum> _18915_te = *it;
			{
				if (((*(_18915_te))._field_Ident == (*(_14827_ident)))) {
					return jule::Any(_18915_te, &__jule_any_type67);;
				};
			}
			_iter_next_1a9759acd:;
			++it;
			goto _iter_begin_1a9759acd;
		}
		_iter_end_1a9759acd:;
	};
	return nullptr;;
}



inline jule::Bool _1a5b17ca3_isDuplicatedIdent(_1a5b14783_SymbolTable* _self_, jule::Uintptr _20129_itself, jule::Str* _20147_ident, jule::Bool _20159_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a975b10c:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> *_20210_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20210_v))) != _20129_itself) && ((*((*(_20210_v))))._field_Ident == (*(_20147_ident)))) && ((*(*(_20210_v)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1a975b10c:;
			++it;
			goto _iter_begin_1a975b10c;
		}
		_iter_end_1a975b10c:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a975b45e:;
		if (it != expr_end) {
			jule::Ptr<_1a5b50060_TypeAlias> *_20810_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20810_ta))) != _20129_itself) && ((*((*(_20810_ta))))._field_Ident == (*(_20147_ident)))) && ((*(*(_20810_ta)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1a975b45e:;
			++it;
			goto _iter_begin_1a975b45e;
		}
		_iter_end_1a975b45e:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a975c64c:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> *_21410_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21410_s))) != _20129_itself) && ((*((*(_21410_s))))._field_Ident == (*(_20147_ident)))) && ((*(*(_21410_s)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1a975c64c:;
			++it;
			goto _iter_begin_1a975c64c;
		}
		_iter_end_1a975c64c:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a975d890:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> *_22010_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22010_f))) != _20129_itself) && ((*((*(_22010_f))))._field_Ident == (*(_20147_ident)))) && ((*(*(_22010_f)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1a975d890:;
			++it;
			goto _iter_begin_1a975d890;
		}
		_iter_end_1a975d890:;
	};
	if (_20159_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a975e97e:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> *_23010_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23010_t))) != _20129_itself) && ((*((*(_23010_t))))._field_Ident == (*(_20147_ident))))) {
					return true;;
				};
			}
			_iter_next_1a975e97e:;
			++it;
			goto _iter_begin_1a975e97e;
		}
		_iter_end_1a975e97e:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9760dd1:;
		if (it != expr_end) {
			jule::Ptr<_1a5a2088c_Enum> *_23610_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23610_e))) != _20129_itself) && ((*((*(_23610_e))))._field_Ident == (*(_20147_ident))))) {
					return true;;
				};
			}
			_iter_next_1a9760dd1:;
			++it;
			goto _iter_begin_1a9760dd1;
		}
		_iter_end_1a9760dd1:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9761d27:;
		if (it != expr_end) {
			jule::Ptr<_1a5a22097_TypeEnum> *_24210_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24210_te))) != _20129_itself) && ((*((*(_24210_te))))._field_Ident == (*(_20147_ident))))) {
					return true;;
				};
			}
			_iter_next_1a9761d27:;
			++it;
			goto _iter_begin_1a9761d27;
		}
		_iter_end_1a9761d27:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b14783_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a5b19ed6_IsNil(_1a5b19aeb_Data* _self_) {
	return _1a5b51e30_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a5b1a26c_IsVoid(_1a5b19aeb_Data* _self_) {
	return _1a5b521b6_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a5b1a503_IsConst(_1a5b19aeb_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1a5b1a844_GoodOperand(_1a5b19aeb_Data* _self_, jule::Ptr<_1a5b19aeb_Data>* _10528_other) {
	if ((_1a5b53edc_TypeEnum((*((*(_10528_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1a5b534a3_Prim((*((*(_10528_other))))._field_Kind) == nullptr) || (!(_1a5b5c149_IsAny(_1a5b534a3_Prim((*((*(_10528_other))))._field_Kind).ptr())))) && (_1a5b54cac_Trait((*((*(_10528_other))))._field_Kind) == nullptr)) && (!(_1a5b51e30_IsNil((*(_self_))._field_Kind))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b19aeb_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b1ac73_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1a5b1bd73_pushErr(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _13623_token, jule::Str _13638_fmt, jule::Slice<jule::Any> _13651_args) {
	_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), _13623_token, _13638_fmt, _13651_args);
}



inline void _1a5b1c1d6_pushSuggestion(_1a5b1b823_Eval* _self_, jule::Str _14130_fmt, jule::Slice<jule::Any> _14143_args) {
	_1a5a92128_pushSuggestion((*(_self_))._field_s.ptr(), _14130_fmt, _14143_args);
}



inline void _1a5b1c3d4_allowBuiltin(_1a5b1b823_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a5b1c5d2_disallowBuiltin(_1a5b1b823_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1a5b1c868_isUnsafe(_1a5b1b823_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1a5b1caee_isGlobal(_1a5b1b823_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3)) {
			_case_begin_1a97ab833:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a97abc2e:;
			{
				return false;;
			}
		}
		_match_end_1a97abbc9:;
	};
}



inline jule::Bool _1a5b1ce0c_applyNumericPrefix(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _16839_d) {
	if ((((((*(_16839_d)) == nullptr) || (!(_1a5b1a503_IsConst((*(_16839_d)).ptr())))) || (_1a5b534a3_Prim((*((*(_16839_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a5b5892b_Prim> _1753_prim = _1a5b534a3_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1753_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1b916b843_IsFloat(_1a5b58c6c_Str(_1753_prim.ptr()))) {
			_case_begin_1a97ae36e:;
			{
				(*((*(_16839_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>((*((*(_self_))._field_prefix)));
				_1b9170baa_SetF64((*((*(_16839_d))))._field_Constant.ptr(), _1b916ed30_AsF64((*((*(_16839_d))))._field_Constant));
				(*(*((*(_16839_d))))._field_Constant.alloc)._field_Kind=(*(_1753_prim))._field_Kind;
			}
		}
		else if (_1b916ae2a_IsSigInt(_1a5b58c6c_Str(_1753_prim.ptr()))) {
			_case_begin_1a97ae407:;
			{
				if ((!(_1a5b00a8d_sigAssignable(_1a5b58c6c_Str(_1753_prim.ptr()), _16839_d)))) {
					return false;;
				};
				(*((*(_16839_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>((*((*(_self_))._field_prefix)));
				_1b91700d8_SetI64((*((*(_16839_d))))._field_Constant.ptr(), _1b916e813_AsI64((*((*(_16839_d))))._field_Constant));
				(*(*((*(_16839_d))))._field_Constant.alloc)._field_Kind=(*(_1753_prim))._field_Kind;
			}
		}
		else if (_1b916b238_IsUnsigInt(_1a5b58c6c_Str(_1753_prim.ptr()))) {
			_case_begin_1a97ae46d:;
			{
				if ((!(_1a5b00e56_unsigAssignable(_1a5b58c6c_Str(_1753_prim.ptr()), _16839_d)))) {
					return false;;
				};
				(*((*(_16839_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>((*((*(_self_))._field_prefix)));
				_1b9170391_SetU64((*((*(_16839_d))))._field_Constant.ptr(), _1b916ea99_AsU64((*((*(_16839_d))))._field_Constant));
				(*(*((*(_16839_d))))._field_Constant.alloc)._field_Kind=(*(_1753_prim))._field_Kind;
			}
		}
		_match_end_1a97ae292:;
	};
	return true;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b1d24d_litStr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c923b_LitExpr>* _20319_l) {
	jule::Str _2047_s = jule::Str();;
	if (_1c80b7928_IsRawStr((*((*(_20319_l))))._field_Value)) {
		_2047_s=_1a5aedcde_ToRawStr((*((*(_20319_l))))._field_Value);
	} else {
		_2047_s=_1a5aee130_ToStr((*((*(_20319_l))))._field_Value);
	};
	jule::Ptr<_1b916c16d_Const> _2107_constant = static__1b916ce0a_NewStr(_2047_s);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_2107_constant, &__jule_any_type19), ._field_Constant=_2107_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b1d58e_litRune(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c923b_LitExpr>* _22020_l) {
	jule::I32 _2213_r = _1a5aedad0_ToRune((*((*(_22020_l))))._field_Value);;
	jule::Ptr<_1a5b19aeb_Data> _2227_data = jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Constant=static__1b916c5ad_NewI64(static_cast<jule::I64>(_2213_r))});;
	if ((_2213_r <= 255LL)) {
		(*(_2227_data))._field_Kind=_1c7989a26_primU8;
	} else {
		(*(_2227_data))._field_Kind=_1c79894b5_primI32;
	};
	(*(_2227_data))._field_Model=jule::Any(jule::new_ptr<_1a5a0639a_RuneExprModel>(_1a5a0639a_RuneExprModel{._field_Code=_2213_r}), &__jule_any_type83);
	(*_2227_data.alloc)._field_Mutable=true;
	(*_2227_data.alloc)._field_IsRune=true;
	(*_2227_data.alloc)._field_untyped=true;
	return _2227_data;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b1d8d0_litFloat(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c923b_LitExpr>* _23921_l) {
	jule::F64 _2403_f = ({
		auto except = _1b9154056_ParseFloat((*((*(_23921_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1b916c16d_Const> _2417_constant = static__1b916d1c4_NewF64(_2403_f);;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798a9c2_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_2417_constant, &__jule_any_type19), ._field_Constant=_2417_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b1dc21_litInt(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c923b_LitExpr>* _25123_l) {
	;
	jule::Str _2547_lit = (*((*(_25123_l))))._field_Value;;
	jule::I64 _2557_base = 0LL;;
	{
		
		if (_1d1902dc5_HasPrefix(_2547_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1a97c3c46:;
			{
				(_2547_lit).mut_slice(2LL);;
				_2557_base=16LLU;
			}
		}
		else if (_1d1902dc5_HasPrefix(_2547_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1a97c3d34:;
			{
				(_2547_lit).mut_slice(2LL);;
				_2557_base=2LLU;
			}
		}
		else if (_1d1902dc5_HasPrefix(_2547_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1a97c3916:;
			{
				(_2547_lit).mut_slice(2LL);;
				_2557_base=8LLU;
			}
		}
		else if (((_2547_lit[0LL] == '0') && (_2547_lit.len() > 1LL))) {
			_case_begin_1a97c397c:;
			{
				(_2547_lit).mut_slice(1LL);;
				_2557_base=8LLU;
			}
		}
		else {
			_case_begin_1a97c38a0:;
			{
				_2557_base=10LLU;
			}
		}
		_match_end_1a97c3817:;
	};
	jule::Ptr<_1a5b19aeb_Data> _2757_d = jule::new_ptr<_1a5b19aeb_Data>();;
	jule::Bool _2777_ok = true;;
	jule::I64 _2783_sig = ({
		auto except = _1b914c736_ParseInt(_2547_lit, _2557_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2777_ok=false;

			0LL;
		});
	});;
	if (_2777_ok) {
		(*_2757_d.alloc)._field_Constant=static__1b916c5ad_NewI64(_2783_sig);
		(*_2757_d.alloc)._field_Kind=_1c7988c23_primInt;
	} else {
		jule::U64 _2864_unsig = ({
			auto except = _1b914c280_ParseUint(_2547_lit, _2557_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1a5b1bd73_pushErr(_self_, (*((*(_25123_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2757_d.alloc)._field_Constant=static__1b916c877_NewU64(_2864_unsig);
		(*_2757_d.alloc)._field_Kind=_1c798885a_primUint;
	};
	(*_2757_d.alloc)._field_Model=jule::Any((*_2757_d.alloc)._field_Constant, &__jule_any_type19);
	(*_2757_d.alloc)._field_untyped=true;
	if ((!(_1a5b1ce0c_applyNumericPrefix(_self_, &(_2757_d))))) {
		_1a5b488e9_fitBitsize(&(_2757_d));
	};
	return _2757_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b1e062_litNum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c923b_LitExpr>* _30623_l) {
	{
		
		if (_1c80b85c7_IsFloat((*((*(_30623_l))))._field_Value)) {
			_case_begin_1a97cabc6:;
			{
				return _1a5b1d8d0_litFloat(_self_, _30623_l);;
			}
		}
		else {
			_case_begin_1a97cab60:;
			{
				return _1a5b1dc21_litInt(_self_, _30623_l);;
			}
		}
		_match_end_1a97caa61:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b1e3a3_evalLit(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c923b_LitExpr> _31523_lit) {
	{
		
		if (_1c80b7692_IsStr((*(_31523_lit))._field_Value)) {
			_case_begin_1a97cbd3c:;
			{
				return _1a5b1d24d_litStr(_self_, &(_31523_lit));;
			}
		}
		else if (_1c80b7be2_IsRune((*(_31523_lit))._field_Value)) {
			_case_begin_1a97cbdd6:;
			{
				return _1a5b1d58e_litRune(_self_, &(_31523_lit));;
			}
		}
		else if (_1c80b8891_IsNum((*(_31523_lit))._field_Value)) {
			_case_begin_1a97cbe5d:;
			{
				return _1a5b1e062_litNum(_self_, &(_31523_lit));;
			}
		}
		else {
			_case_begin_1a97cb7ed:;
			{
				return nullptr;;
			}
		}
		_match_end_1a97cb710:;
	};
}



inline jule::Any _1a5b1e6e4_findBuiltins(_1a5b1b823_Eval* _self_, jule::Str* _32829_ident) {
	if (_1a5a8b243_IsPub((*(_32829_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data1)) {
				_case_begin_1a97ce180:;
				{
					jule::Any _3329_def = _1a5b486b8_findBuiltinsImport(_32829_ident, (*(_self_))._field_lookup.cast_ptr<_1a5a6dcd6_ImportInfo>((jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data1));;
					if ((_3329_def != nullptr)) {
						return _3329_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3)) {
				_case_begin_1a97cde0a:;
				{
					jule::Any _3379_def = _1a5b49422_findBuiltinsSema(_32829_ident, (*(_self_))._field_lookup.cast_ptr<_1a5a8e17a_Sema>((jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3));;
					if ((_3379_def != nullptr)) {
						return _3379_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)) {
				_case_begin_1a97ce1e6:;
				{
					jule::Any _3429_def = _1a5b49422_findBuiltinsSema(_32829_ident, (*((*(_self_))._field_lookup.cast_ptr<_1a5a5420b_scopeChecker>((jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)))._field_s);;
					if ((_3429_def != nullptr)) {
						return _3429_def;;
					};
				}
			}
			_match_end_1a97ce0d6:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1c798b30d_findBuiltinDef(_32829_ident);;
}



inline jule::Any _1a5b1eae0_getDef(_1a5b1b823_Eval* _self_, jule::Str* _35523_ident, jule::Bool _35535_binded) {
	jule::Ptr<_1a5ab1ee4_Var> _3607_v = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b6e128_FindVar((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3607_v != nullptr)) {
		return jule::Any(_3607_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a5b50060_TypeAlias> _3657_ta = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b6e524_FindTypeAlias((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3657_ta != nullptr)) {
		return jule::Any(_3657_ta, &__jule_any_type65);;
	};
	if ((!(_35535_binded))) {
		jule::Ptr<_1a5a2088c_Enum> _3718_enm = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b7049d_FindEnum((*(_self_))._field_lookup.data, (*(_35523_ident)));;
		if ((_3718_enm != nullptr)) {
			return jule::Any(_3718_enm, &__jule_any_type66);;
		};
		jule::Ptr<_1a5a22097_TypeEnum> _3768_tenm = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b707de_FindTypeEnum((*(_self_))._field_lookup.data, (*(_35523_ident)));;
		if ((_3768_tenm != nullptr)) {
			return jule::Any(_3768_tenm, &__jule_any_type67);;
		};
	};
	jule::Ptr<_1a5a09cc7_Fn> _3827_f = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b6ed1b_FindFn((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3827_f != nullptr)) {
		return jule::Any(_3827_f, &__jule_any_type63);;
	};
	jule::Ptr<_1a59e4d06_Struct> _3877_s = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b6e920_FindStruct((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3877_s != nullptr)) {
		return jule::Any(_3877_s, &__jule_any_type64);;
	};
	return _1a5b1e6e4_findBuiltins(_self_, _35523_ident);;
}



inline jule::Ptr<_1a5a10e87_ReferenceStack> _1a5b1ed76_getOwnerRefers(_1a5b1b823_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)) {
			_case_begin_1a97d792a:;
			{
				jule::Ptr<_1a5a5420b_scopeChecker> _3988_sc = _1a5a5783b_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a5a5420b_scopeChecker>((jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0));;
				return (*((*(_3988_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1a97d6e68:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
			}
		}
		_match_end_1a97d6e13:;
	};
	return nullptr;;
}



inline void _1a97ea058_pushReference(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _41037_ref) {
	jule::Ptr<_1a5a10e87_ReferenceStack> _4117_refers = _1a5b1ed76_getOwnerRefers(_self_);;
	if (((_4117_refers != nullptr) && (!(_1a97ec39b_Exist(_4117_refers, (*(_41037_ref))))))) {
		_1a5a11c68_Push(_4117_refers, jule::Any((*(_41037_ref)), &__jule_any_type7));
	};
}

inline void _1a9810eb4_pushReference(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5ab1ee4_Var>* _41037_ref) {
	jule::Ptr<_1a5a10e87_ReferenceStack> _4117_refers = _1a5b1ed76_getOwnerRefers(_self_);;
	if (((_4117_refers != nullptr) && (!(_1a9813280_Exist(_4117_refers, (*(_41037_ref))))))) {
		_1a5a11c68_Push(_4117_refers, jule::Any((*(_41037_ref)), &__jule_any_type8));
	};
}

inline void _1a8c38dc1_pushReference(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59e7a84_StructIns>* _41037_ref) {
	jule::Ptr<_1a5a10e87_ReferenceStack> _4117_refers = _1a5b1ed76_getOwnerRefers(_self_);;
	if (((_4117_refers != nullptr) && (!(_1a8c3b269_Exist(_4117_refers, (*(_41037_ref))))))) {
		_1a5a11c68_Push(_4117_refers, jule::Any((*(_41037_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b20470__evalEnum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a2088c_Enum> _41725_enm) {
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_41725_enm, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b2086b_evalEnum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a2088c_Enum> _42628_enm, jule::Ptr<_1c80b653c_Token> _42640_errorToken) {
	if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42628_enm))._field_Public, (*_42628_enm.alloc)._field_Token)))) {
		_1a5b1bd73_pushErr(_self_, _42640_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_42628_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a5b20470__evalEnum(_self_, _42628_enm);;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b20bac__evalTypeEnum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a22097_TypeEnum> _43529_enm) {
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_43529_enm, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b210a8_evalTypeEnum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a22097_TypeEnum> _44432_enm, jule::Ptr<_1c80b653c_Token> _44448_errorToken) {
	if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44432_enm))._field_Public, (*_44432_enm.alloc)._field_Token)))) {
		_1a5b1bd73_pushErr(_self_, _44448_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_44432_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a5b20bac__evalTypeEnum(_self_, _44432_enm);;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b213e9__evalStruct(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59e7a84_StructIns> _45327_s) {
	jule::Ptr<_1a5b19aeb_Data> _4547_d = jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_45327_s, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0)}), ._field_Model=jule::Any(_45327_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45327_s))._field_Decl != nullptr) && (*(*_45327_s.alloc)._field_Decl.alloc)._field_Binded)) {
		(*((*(_4547_d))._field_Kind))._field_BindIdent=(*(*_45327_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _4547_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b217e5_evalStruct(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59e7a84_StructIns> _46730_s, jule::Ptr<_1c80b653c_Token> _46745_errorToken) {
	if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46730_s))._field_Decl))._field_Public, (*(*_46730_s.alloc)._field_Decl.alloc)._field_Token)))) {
		_1a5b1bd73_pushErr(_self_, _46745_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_46730_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
		_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a5b21e99_checkDeprecated(_self_, &((*(*_46730_s.alloc)._field_Decl.alloc)._field_Directives), _46745_errorToken);
	return _1a5b213e9__evalStruct(_self_, _46730_s);;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b21b36_evalFnIns(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a0cca8_FnIns> _47725_f) {
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_47725_f, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data1)}), ._field_Model=jule::Any(_47725_f, &__jule_any_type7), });;
}



inline void _1a5b21e99_checkDeprecated(_1a5b1b823_Eval* _self_, jule::Slice<jule::Ptr<_1a59c3389_Directive>>* _48636_directives, jule::Ptr<_1c80b653c_Token> _48667_tok) {
	if (_1a5b1c868_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1a59c3389_Directive> _4913_d = _1a5b48300_findDirective(_48636_directives, jule::Str::lit("deprecated", 10));;
	if ((_4913_d != nullptr)) {
		if (((*_4913_d.alloc)._field_Args.len() == 0LL)) {
			_1a5b1bd73_pushErr(_self_, _48667_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1a5b1bd73_pushErr(_self_, _48667_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*_4913_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b22395_evalFn(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a09cc7_Fn> _50226_f, jule::Ptr<_1c80b653c_Token> _50234_errorToken) {
	if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50226_f))._field_Public, (*_50226_f.alloc)._field_Token)))) {
		_1a5b1bd73_pushErr(_self_, _50234_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_50226_f.alloc)._field_Ident, &__jule_any_type4)}));
		_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a5b21e99_checkDeprecated(_self_, &((*_50226_f.alloc)._field_Directives), _50234_errorToken);
	jule::Ptr<_1a5a0cca8_FnIns> _5117_ins = _1a5a0b537_instance(_50226_f);;
	_1a97ea058_pushReference(_self_, &(_5117_ins));
	return _1a5b21b36_evalFnIns(_self_, _5117_ins);;
}



inline void _1a5b227b3_pushIllegalCycleError(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5ab1ee4_Var>* _51638_v1, jule::Ptr<_1a5ab1ee4_Var>* _51649_v2, _1e9a030bc_StrBuilder* _51664_message) {
	;
	jule::Str _5183_refers_to = _1d1c6daae_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51638_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51649_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5193_buf = _1e9a04d05_Buf(_51664_message);;
	_1e9a03a5c_WriteStr(_51664_message, _1d1902a0c_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1e9a03a5c_WriteStr(_51664_message, _5183_refers_to);
	_1e9a03d15_WriteByte(_51664_message, '\n');
	_1e9a037a4_Write(_51664_message, _5193_buf);
}



inline jule::Bool _1a5b22bae_checkCrossCycle(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5ab1ee4_Var>* _52632_v, _1e9a030bc_StrBuilder* _52646_message) {
	{
		auto expr = &((*((*(_52632_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9801812:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> *_52710_d = it;
			{
				if (((*(_52710_d)) == (*(_self_))._field_owner)) {
					_1a5b227b3_pushIllegalCycleError(_self_, _52632_v, _52710_d, _52646_message);
					return false;;
				};
				if ((!(_1a5b22bae_checkCrossCycle(_self_, _52710_d, _52646_message)))) {
					_1a5b227b3_pushIllegalCycleError(_self_, _52632_v, _52710_d, _52646_message);
					return false;;
				};
			}
			_iter_next_1a9801812:;
			++it;
			goto _iter_begin_1a9801812;
		}
		_iter_end_1a9801812:;
	};
	return true;;
}



inline jule::Bool _1a5b230aa_checkIllegalCycles(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5ab1ee4_Var>* _54339_v, jule::Ptr<_1c80b653c_Token> _54348_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54339_v)))) {
		_1a5b1bd73_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1e9a030bc_StrBuilder _5567_message = static__1e9a034eb_New(32LL);;
	if ((!(_1a5b22bae_checkCrossCycle(_self_, _54339_v, &(_5567_message))))) {
		jule::Str _5598_errMsg = _1e9a04354_Str(&_5567_message);;
		_1e9a04552_Clear(&_5567_message);
		_1a5b227b3_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54339_v, &(_5567_message));
		_5598_errMsg+=_1e9a04354_Str(&_5567_message);
		_1a5b1bd73_pushErr(_self_, _54348_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_5598_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54339_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b234a6_evalVar(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5ab1ee4_Var> _57127_v, jule::Ptr<_1c80b653c_Token> _57136_errorToken) {
	if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57127_v))._field_Public, (*_57127_v.alloc)._field_Token)))) {
		_1a5b1bd73_pushErr(_self_, _57136_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_57127_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a5b21e99_checkDeprecated(_self_, &((*_57127_v.alloc)._field_Directives), _57136_errorToken);
	if (((*_57127_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1a9818252;
	};
	(*_57127_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3)) {
			_case_begin_1a980a332:;
			{
				jule::Bool _5904_ok = _1a5b230aa_checkIllegalCycles(_self_, &(_57127_v), _57136_errorToken);;
				if ((!(_5904_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)) {
			_case_begin_1a980994c:;
			{
				jule::Ptr<_1a5a5420b_scopeChecker> _5958_s = (*(_self_))._field_lookup.cast_ptr<_1a5a5420b_scopeChecker>((jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0);;
				jule::Ptr<_1a5a5420b_scopeChecker> _5968_root = _1a5a575a5_getRoot(_5958_s);;
				if ((((*(_5968_root))._field_captured != nullptr) && _1a5b4d404_isVarCaptured(_5968_root, _5958_s, _57127_v))) {
					_1a5a5731e_pushCaptured(_5968_root, &(_57127_v));
				};
				if (((!((*_57127_v.alloc)._field_Reference)) || _1a5b1c868_isUnsafe(_self_))) {
					goto _match_end_1a980a2aa;
				};
				while ((((*_5958_s.alloc)._field_owner == nullptr) && ((*_5958_s.alloc)._field_parent != nullptr))) {
					{
						_5958_s=(*_5958_s.alloc)._field_parent;
					}
				_iter_next_1a980d6dc:;
				}
				_iter_end_1a980d6dc:;;
				if (((((*_5958_s.alloc)._field_owner != nullptr) && (*((*_5958_s.alloc)._field_owner))._field_Anon) && ((*_57127_v.alloc)._field_Scope != (*((*_5958_s.alloc)._field_owner))._field_Scope))) {
					_1a5b1bd73_pushErr(_self_, _57136_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*_57127_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1a980a2aa:;
	};
	if (((*_57127_v.alloc)._field_Scope == nullptr)) {
		_1a9810eb4_pushReference(_self_, &(_57127_v));
	};
	if (((!((*_57127_v.alloc)._field_Binded)) && (((*_57127_v.alloc)._field_Value == nullptr) || ((*((*_57127_v.alloc)._field_Value))._field_Data == nullptr)))) {
		if ((*_57127_v.alloc)._field_Constant) {
			_1a5aa8e42_checkVar((*(_self_))._field_s, &(_57127_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3));
			if ((((*_57127_v.alloc)._field_Value == nullptr) || ((*((*_57127_v.alloc)._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*_57127_v.alloc)._field_Kind == nullptr) || ((*((*_57127_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_57127_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1a5aa8e42_checkVar((*(_self_))._field_s, &(_57127_v), (*(_self_))._field_lookup);
		if ((((*_57127_v.alloc)._field_Kind == nullptr) || ((*((*_57127_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1a9818252:;
	jule::Ptr<_1a5b19aeb_Data> _6467_d = jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=(*((*_57127_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_57127_v.alloc)._field_Mutable, ._field_Reference=(*_57127_v.alloc)._field_Reference, ._field_Lvalue=(!((*_57127_v.alloc)._field_Constant)), ._field_Model=jule::Any(_57127_v, &__jule_any_type8), });;
	if ((((!((*_57127_v.alloc)._field_Binded)) && _1a5ab23bd_IsInitialized(_57127_v)) && ((*((*_57127_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_6467_d))._field_IsRune=(*((*((*_57127_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_57127_v.alloc)._field_Constant && ((*((*((*_57127_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_6467_d.alloc)._field_Constant=jule::new_ptr<_1b916c16d_Const>((*(*((*((*_57127_v.alloc)._field_Value))._field_Data))._field_Constant.alloc));
		(*_6467_d.alloc)._field_Model=jule::Any((*_6467_d.alloc)._field_Constant, &__jule_any_type19);
		if (_1a5ab28da_untypedConstant(_57127_v)) {
			_1a5b1ce0c_applyNumericPrefix(_self_, &(_6467_d));
			(*_6467_d.alloc)._field_untyped=true;
		};
	};
	return _6467_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b238a2_evalTypeAlias(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50060_TypeAlias> _67033_ta, jule::Ptr<_1c80b653c_Token> _67049_errorToken) {
	if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_67033_ta))._field_Public, (*_67033_ta.alloc)._field_Token)))) {
		_1a5b1bd73_pushErr(_self_, _67049_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_67033_ta.alloc)._field_Ident, &__jule_any_type4)}));
		_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_67033_ta.alloc)._field_Used=true;
	jule::Trait _6797_kind = (*((*((*_67033_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1a5b19aeb_Data> _68011_d = nullptr;;
	{
		auto &_match_expr{ _6797_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0)) {
			_case_begin_1a9823922:;
			{
				_68011_d=_1a5b213e9__evalStruct(_self_, _6797_kind.cast_ptr<_1a59e7a84_StructIns>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data3)) {
			_case_begin_1a9822415:;
			{
				_68011_d=_1a5b20470__evalEnum(_self_, _6797_kind.cast_ptr<_1a5a2088c_Enum>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data4)) {
			_case_begin_1a982247b:;
			{
				_68011_d=_1a5b20bac__evalTypeEnum(_self_, _6797_kind.cast_ptr<_1a5a22097_TypeEnum>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1a982239e:;
			{
				_68011_d=jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=(*(*(*_67033_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind}), ._field_Decl=true, });
				if ((*_67033_ta.alloc)._field_Binded) {
					(*((*(_68011_d))._field_Kind))._field_BindIdent=(*_67033_ta.alloc)._field_Ident;
				} else {
					(*((*(_68011_d))._field_Kind))._field_BindIdent=(*(*(*_67033_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
				};
				(*(_68011_d))._field_Model=jule::Any((*_68011_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		_match_end_1a982227d:;
	};
	(*((*(_68011_d))._field_Kind))._field_Generic=(*_67033_ta.alloc)._field_Generic;
	return _68011_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b23c9d_evalDef(_1a5b1b823_Eval* _self_, jule::Any* _70628_def, jule::Ptr<_1c80b653c_Token> _70638_ident) {
	{
		auto &_match_expr{ (*(_70628_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a9827a9c:;
			{
				return _1a5b234a6_evalVar(_self_, (*(_70628_def)).cast_ptr<_1a5ab1ee4_Var>(&__jule_any_type8), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a982787c:;
			{
				return _1a5b2086b_evalEnum(_self_, (*(_70628_def)).cast_ptr<_1a5a2088c_Enum>(&__jule_any_type66), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a9827b13:;
			{
				return _1a5b210a8_evalTypeEnum(_self_, (*(_70628_def)).cast_ptr<_1a5a22097_TypeEnum>(&__jule_any_type67), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a9827b79:;
			{
				return _1a5b217e5_evalStruct(_self_, _1a59e5268_instance((*(_70628_def)).cast_ptr<_1a59e4d06_Struct>(&__jule_any_type64)), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a9827be0:;
			{
				jule::Ptr<_1a5a09cc7_Fn> _7178_f = (*(_70628_def)).cast_ptr<_1a5a09cc7_Fn>(&__jule_any_type63);;
				if ((!(*(_7178_f))._field_Ident.equal("init", 4))) {
					return _1a5b22395_evalFn(_self_, _7178_f, _70638_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9827c67:;
			{
				return _1a5b21b36_evalFnIns(_self_, (*(_70628_def)).cast_ptr<_1a5a0cca8_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a9827cde:;
			{
				return _1a5b238a2_evalTypeAlias(_self_, (*(_70628_def)).cast_ptr<_1a5b50060_TypeAlias>(&__jule_any_type65), _70638_ident);;
			}
		}
		_match_end_1a98279ae:;
	};
	_1a5b1bd73_pushErr(_self_, _70638_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70638_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b240de_evalIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c9abb_IdentExpr> _73025_ident) {
	jule::Any _7317_def = _1a5b1eae0_getDef(_self_, &((*(_73025_ident))._field_Ident), (*_73025_ident.alloc)._field_Binded);;
	return _1a5b23c9d_evalDef(_self_, &(_7317_def), (*_73025_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b24430_evalUnary(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59ca35d_UnaryExpr> _73530_u) {
	_1a5b3eda7_unaryEval _7367_unary = static__1a5b402e7_new(_self_);;
	return _1a5b41727_eval(&_7367_unary, _73530_u);;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b24771_evalVariadic(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59ca737_VariadicExpr> _74033_v) {
	if (((*(_74033_v))._field_Expr == nullptr)) {
		_1a5b1bd73_pushErr(_self_.ptr(), (*_74033_v.alloc)._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5b50d52_TypeKind> _7467_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7467_prefix;
	});;
	jule::Ptr<_1a5b19aeb_Data> _7507_d = _1a5b3e8e0_evalExpr(_self_, (*_74033_v.alloc)._field_Expr);;
	if ((_7507_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a5b5321c_Variadicable((*(_7507_d))._field_Kind.ptr())))) {
		_1a5b1bd73_pushErr(_self_, (*_74033_v.alloc)._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_7507_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	_1a5b4cec5_makeVariadic(&(_7507_d), (*(_1a5b54509_Slc((*(_7507_d))._field_Kind)))._field_Elem);
	return _7507_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b24ab2_evalUnsafe(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59c9615_UnsafeExpr> _76231_u) {
	jule::Bool _7633_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1a5b19aeb_Data> _7657_d = _1a5b3e8e0_evalExpr(_self_, (*(_76231_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7633_unsafety;
	return _7657_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b24e03_evalArr(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59ce807_SliceExpr> _77028_s) {
	jule::Ptr<_1a5b6024b_Arr> _7727_pt = _1a5b54273_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1a5b6024b_Arr> _7747_arr = jule::new_ptr<_1a5b6024b_Arr>(_1a5b6024b_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7727_pt))._field_Elem});;
	jule::Bool _7807_filled = false;;
	if (((*(_77028_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77028_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1a9838195:;
				{
					if (((*((*((*(_77028_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1a59ca737_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1a98380eb;
					};
					if ((*_7727_pt.alloc)._field_Auto) {
						_1a5b1bd73_pushErr(_self_, (*_77028_s.alloc)._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7807_filled=true;
					((*(_77028_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1a98380eb:;
		};
	};
	(*(_7747_arr))._field_N=(*_77028_s.alloc)._field_Exprs.len();
	if ((!((*_7727_pt.alloc)._field_Auto))) {
		if (((*_7747_arr.alloc)._field_N > (*_7727_pt.alloc)._field_N)) {
			_1a5b1bd73_pushErr(_self_, (*_77028_s.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*_7747_arr.alloc)._field_N < (*_7727_pt.alloc)._field_N)) {
			(*_7747_arr.alloc)._field_N=(*_7727_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1a5a02352_ArrayExprModel> _8097_model = jule::new_ptr<_1a5a02352_ArrayExprModel>(_1a5a02352_ArrayExprModel{._field_Kind=_7747_arr, });;
	if (_7807_filled) {
		(*(_8097_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_8097_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*_77028_s.alloc)._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1a5b50d52_TypeKind> _8187_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7747_arr.alloc)._field_Elem;
	{
		auto expr = &((*_77028_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a983ede4:;
		if (it != expr_end) {
			jule::Ptr<_1a59c82a1_Expr> _82015_elem = *it;
			{
				jule::Ptr<_1a5b19aeb_Data> _8218_d = _1a5b3e8e0_evalExpr(_self_, _82015_elem);;
				if ((_8218_d == nullptr)) {
					goto _iter_next_1a983ede4;
				};
				;
				if (_1a5a9db5c_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_7747_arr.alloc)._field_Elem), &(_8218_d), &((*(_82015_elem))._field_Token))) {
					_1a5a997c3_checkAssignType((*_self_.alloc)._field_s, false, &((*_7747_arr.alloc)._field_Elem), &(_8218_d), (*_82015_elem.alloc)._field_Token);
				};
				(*(_8097_model))._field_Elems=jule::append((*_8097_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_8218_d))._field_Model}));
			}
			_iter_next_1a983ede4:;
			++it;
			goto _iter_begin_1a983ede4;
		}
		_iter_end_1a983ede4:;
	};
	(*_self_.alloc)._field_prefix=_8187_prefix;
	if (_7807_filled) {
		(*_8097_model.alloc)._field_Elems=jule::append((*_8097_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({nullptr}));
	};
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_7747_arr, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data25)}), ._field_Mutable=true, ._field_Model=jule::Any(_8097_model, &__jule_any_type85), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b253a9_evalExpSlc(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59ce807_SliceExpr> _84731_s, jule::Ptr<_1a5b50d52_TypeKind> _84750_t, jule::Any _84768_first) {
	jule::Ptr<_1a5b5ce2a_Slc> _8487_slc = jule::new_ptr<_1a5b5ce2a_Slc>(_1a5b5ce2a_Slc{._field_Elem=_84750_t});;
	jule::I64 _8527_i = 0LL;;
	jule::Ptr<_1a59ee33d_SliceExprModel> _8537_model = jule::new_ptr<_1a59ee33d_SliceExprModel>(_1a59ee33d_SliceExprModel{._field_ElemKind=_84750_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84731_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84768_first != nullptr)) {
		(*(_8537_model))._field_Elems=jule::append((*_8537_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({_84768_first}));
		_8527_i=1LL;
	};
	jule::Ptr<_1a5b50d52_TypeKind> _8627_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8487_slc))._field_Elem;
	{
		auto expr = (*_84731_s.alloc)._field_Exprs.slice(_8527_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a984800c:;
		if (it != expr_end) {
			jule::Ptr<_1a59c82a1_Expr> _86415_elem = *it;
			{
				jule::Ptr<_1a5b19aeb_Data> _8658_d = _1a5b3e8e0_evalExpr(_self_, _86415_elem);;
				if ((_8658_d != nullptr)) {
					;
					if (_1a5a9db5c_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8487_slc.alloc)._field_Elem), &(_8658_d), &((*(_86415_elem))._field_Token))) {
						_1a5a997c3_checkAssignType((*_self_.alloc)._field_s, false, &((*_8487_slc.alloc)._field_Elem), &(_8658_d), (*_86415_elem.alloc)._field_Token);
					};
					(*_8537_model.alloc)._field_Elems=jule::append((*_8537_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*_8658_d.alloc)._field_Model}));
				};
			}
			_iter_next_1a984800c:;
			++it;
			goto _iter_begin_1a984800c;
		}
		_iter_end_1a984800c:;
	};
	(*_self_.alloc)._field_prefix=_8627_prefix;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_8487_slc, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data22)}), ._field_Mutable=true, ._field_Model=jule::Any(_8537_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b2a568_evalSliceExpr(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59ce807_SliceExpr> _88534_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1a5b54273_Arr((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1a984c929:;
				{
					return _1a5b24e03_evalArr(_self_, _88534_s);;
				}
			}
			else if ((_1a5b54509_Slc((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1a984c9c3:;
				{
					jule::Ptr<_1a5b5ce2a_Slc> _8919_pt = _1a5b54509_Slc((*_self_.alloc)._field_prefix);;
					return _1a5b253a9_evalExpSlc(_self_, _88534_s, (*(_8919_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1a984c84c:;
		};
	};
	jule::Ptr<_1a5b50d52_TypeKind> _8967_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88534_s))._field_Exprs.len() == 0LL)) {
		_1a5b1bd73_pushErr(_self_, (*_88534_s.alloc)._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5b19aeb_Data> _9047_firstElem = _1a5b3e8e0_evalExpr(_self_, (*_88534_s.alloc)._field_Exprs[0LL]);;
	if ((_9047_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1a5a9db5c_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_9047_firstElem))._field_Kind), &(_9047_firstElem), &((*((*_88534_s.alloc)._field_Exprs[0LL]))._field_Token));
	jule::Ptr<_1a5b19aeb_Data> _9147_d = _1a5b253a9_evalExpSlc(_self_, _88534_s, (*(_9047_firstElem))._field_Kind, (*(_9047_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_8967_prefix;
	return _9147_d;;
}



inline void _1a5b2a8ba_checkIntegerIndexingByData(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _92047_d, jule::Ptr<_1c80b653c_Token> _92061_token) {
	jule::Str _9213_errKey = _1a5b4ab82_checkDataForIntegerIndexing(_92047_d, &(_92061_token));;
	{
		auto &_match_expr{ _9213_errKey };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a9855668:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1a9855338:;
			{
				_1a5b1bd73_pushErr(_self_, _92061_token, _9213_errKey, jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_92047_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1a9854ea3:;
			{
				_1a5b1bd73_pushErr(_self_, _92061_token, _9213_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1a985524a:;
	};
}



inline void _1a5b2acd8_indexingPtr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _93232_d, jule::Ptr<_1a5b19aeb_Data>* _93247_index, jule::Ptr<_1a59d0264_IndexingExpr>* _93266_i) {
	_1a5b2a8ba_checkIntegerIndexingByData(_self_, _93247_index, (*((*(_93266_i))))._field_Token);
	(*((*(_93232_d))))._field_Lvalue=true;
	jule::Ptr<_1a5b60c1e_Ptr> _9367_ptr = _1a5b539c0_Ptr((*((*(_93232_d))))._field_Kind.ptr());;
	{
		
		if (_1a5b61758_IsUnsafe(_9367_ptr.ptr())) {
			_case_begin_1a985822b:;
			{
				_1a5b1bd73_pushErr(_self_, (*((*(_93266_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a5b1c868_isUnsafe(_self_)))) {
			_case_begin_1a98582b4:;
			{
				_1a5b1bd73_pushErr(_self_, (*((*(_93266_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9858193:;
	};
	(*((*(_93232_d))))._field_Kind=(*(_9367_ptr))._field_Elem;
}



inline void _1a5b2b206_indexingArr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _94832_d, jule::Ptr<_1a5b19aeb_Data>* _94847_index, jule::Ptr<_1a59d0264_IndexingExpr>* _94866_i) {
	jule::Ptr<_1a5b6024b_Arr> _9497_arr = _1a5b54273_Arr((*((*(_94832_d))))._field_Kind.ptr());;
	(*((*(_94832_d))))._field_Kind=(*(_9497_arr))._field_Elem;
	_1a5b2a8ba_checkIntegerIndexingByData(_self_, _94847_index, (*((*(_94866_i))))._field_Token);
	(*((*(_94832_d))))._field_Lvalue=true;
	if ((_1a5b1a503_IsConst((*(_94847_index)).ptr()) && (_1b916ed30_AsF64((*((*(_94847_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9497_arr.alloc)._field_N)))) {
		_1a5b1bd73_pushErr(_self_, (*((*(_94866_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1a5b2b624_indexingSlc(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _95832_d, jule::Ptr<_1a5b19aeb_Data>* _95847_index, jule::Ptr<_1a59d0264_IndexingExpr>* _95866_i) {
	jule::Ptr<_1a5b5ce2a_Slc> _9597_slc = _1a5b54509_Slc((*((*(_95832_d))))._field_Kind.ptr());;
	(*((*(_95832_d))))._field_Kind=(*(_9597_slc))._field_Elem;
	_1a5b2a8ba_checkIntegerIndexingByData(_self_, _95847_index, (*((*(_95866_i))))._field_Token);
	(*((*(_95832_d))))._field_Lvalue=true;
	if ((!(_1a5b1a503_IsConst((*(_95847_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95832_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a9860552:;
			{
				jule::Ptr<_1a59ee33d_SliceExprModel> _9708_m = (*((*(_95832_d))))._field_Model.unsafe_cast_ptr<_1a59ee33d_SliceExprModel>();;
				jule::F64 _9714_indx = _1b916ed30_AsF64((*((*(_95847_index))))._field_Constant.ptr());;
				if ((_9714_indx >= static_cast<jule::F64>((*(_9708_m))._field_Elems.len()))) {
					_1a5b1bd73_pushErr(_self_, (*((*(_95866_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95832_d))))._field_Model=(*(_9708_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_9714_indx))];
					(*((*(_95832_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1a98604db:;
	};
}



inline void _1a5b2ba42_indexingMap(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _98132_d, jule::Ptr<_1a5b19aeb_Data>* _98147_index, jule::Ptr<_1a59d0264_IndexingExpr>* _98166_i) {
	(*((*(_98132_d))))._field_Lvalue=true;
	if (((*(_98147_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1a5b5e5be_Map> _9867_m = _1a5b55043_Map((*((*(_98132_d))))._field_Kind.ptr());;
	_1a5b03563_assignTypeChecker _9877_atc = _1a5b03563_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_9867_m))._field_Key, ._field_d=(*(_98147_index)), ._field_errorToken=(*((*(_98166_i))))._field_Token};;
	_1a5b04531_check(&_9877_atc);
	(*((*(_98132_d))))._field_Kind=(*_9867_m.alloc)._field_Val;
}



inline void _1a5b2be60_indexingStr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _99732_d, jule::Ptr<_1a5b19aeb_Data>* _99747_index, jule::Ptr<_1a59d0264_IndexingExpr>* _99766_i) {
	(*((*(_99732_d))))._field_Kind=_1c7989a26_primU8;
	(*((*(_99732_d))))._field_Mutable=false;
	(*((*(_99732_d))))._field_Lvalue=true;
	if (((*(_99747_index)) == nullptr)) {
		return;;
	};
	_1a5b2a8ba_checkIntegerIndexingByData(_self_, _99747_index, (*((*(_99766_i))))._field_Token);
	if ((!(_1a5b1a503_IsConst((*(_99747_index)).ptr())))) {
		(*((*(_99732_d))))._field_Constant=nullptr;
		(*((*(_99732_d))))._field_untyped=false;
		return;;
	};
	if (_1a5b1a503_IsConst((*(_99732_d)).ptr())) {
		jule::Ptr<_1c80b653c_Token> _10154_errorToken = (*((*(_99766_i))))._field_Token;;
		jule::I64 _10164_j = _1b916e813_AsI64((*((*(_99747_index))))._field_Constant.ptr());;
		jule::Str _10174_s = _1b916e2e6_ReadStr((*((*(_99732_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10164_j) >= _10174_s.len())) {
			_1a5b1bd73_pushErr(_self_, _10154_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1b9170391_SetU64((*((*(_99732_d))))._field_Constant, static_cast<jule::U64>(_10174_s[_10164_j]));
		};
	};
}



inline void _1a5b2c37d_toIndexing(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _102631_d, jule::Ptr<_1a5b19aeb_Data>* _102646_index, jule::Ptr<_1a59d0264_IndexingExpr>* _102665_i) {
	{
		
		if ((_1a5b539c0_Ptr((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a986bbe0:;
			{
				_1a5b2acd8_indexingPtr(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1a5b54273_Arr((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a986bc89:;
			{
				_1a5b2b206_indexingArr(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1a5b54509_Slc((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a986bd00:;
			{
				_1a5b2b624_indexingSlc(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1a5b55043_Map((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a986bd66:;
			{
				_1a5b2ba42_indexingMap(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1a5b534a3_Prim((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a986bdcc:;
			{
				jule::Ptr<_1a5b5892b_Prim> _10414_prim = _1a5b534a3_Prim((*((*(_102631_d))))._field_Kind);;
				{
					
					if (_1a5b5bdb3_IsStr(_10414_prim.ptr())) {
						_case_begin_1a9871233:;
						{
							_1a5b2be60_indexingStr(_self_, _102631_d, _102646_index, _102665_i);
							return;;
						}
					}
					_match_end_1a9871189:;
				};
			}
		}
		_match_end_1a986ba9c:;
	};
	_1a5b1bd73_pushErr(_self_, (*((*(_102665_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_102631_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1a5b2c834_pushGenericsFromExprSubIdent(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _105150_sexpr, jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>* _10528_generics, jule::Ptr<_1a59c82a1_Expr>* _105236_expr) {
	jule::Ptr<_1a59c4841_SubIdentTypeDecl> _10537_t = jule::new_ptr<_1a59c4841_SubIdentTypeDecl>();;
	if ((!(_1a5b4ba95_pushSubIdentFromExpr(jule::Any((*(_105150_sexpr)), &__jule_any_type86), &(_10537_t))))) {
		_1a5b1bd73_pushErr(_self_.ptr(), (*((*(_105236_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> &__jule_push_dest = (*(_10528_generics)); __jule_push_dest.push(jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Kind=jule::Any(_10537_t, &__jule_any_type87)})); };
	return true;;
}



inline jule::Bool _1a5b2cc30_pushGenericsFromData(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>* _106242_generics, jule::Ptr<_1a59c82a1_Expr>* _106270_expr) {
	{
		auto &_match_expr{ (*((*(_106270_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a9875864:;
			{
				jule::Ptr<_1a59ca35d_UnaryExpr> _10658_u = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a59ca35d_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_10658_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1a98777ab:;
						{
							jule::Ptr<_1a59c5996_PtrTypeDecl> _10689_kind = jule::new_ptr<_1a59c5996_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> _10699__generics = jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>::alloc(0LL, 1LL);;
							_1a5b2cc30_pushGenericsFromData(_self_, &(_10699__generics), &((*(_10658_u))._field_Expr));
							(*_10689_kind.alloc)._field_Elem=_10699__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=(*((*(_106270_expr))))._field_Token, ._field_Kind=jule::Any(_10689_kind, &__jule_any_type70)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1a9877822:;
						{
							jule::Ptr<_1a59c5017_SptrTypeDecl> _10779_kind = jule::new_ptr<_1a59c5017_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> _10789__generics = jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>::alloc(0LL, 1LL);;
							_1a5b2cc30_pushGenericsFromData(_self_, &(_10789__generics), &((*(_10658_u))._field_Expr));
							(*_10779_kind.alloc)._field_Elem=_10789__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=(*((*(_106270_expr))))._field_Token, ._field_Kind=jule::Any(_10779_kind, &__jule_any_type71)})); };
						}
					}
					else {
						_case_begin_1a9876667:;
						{
							_1a5b1bd73_pushErr(_self_.ptr(), (*(_10658_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1a9876b0c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1a98758ca:;
			{
				{ jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push((*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a59c3e6c_TypeDecl>()); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a9874c09:;
			{
				jule::Ptr<_1a59cb3b4_SubIdentExpr> _10928_sexpr = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a59cb3b4_SubIdentExpr>();;
				return _1a5b2c834_pushGenericsFromExprSubIdent(_self_, &(_10928_sexpr), _106242_generics, _106270_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a9874c70:;
			{
				jule::Ptr<_1a59c9abb_IdentExpr> _10958_ident = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a59c9abb_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a59c4577_IdentTypeDecl>(_1a59c4577_IdentTypeDecl{._field_Token=(*_10958_ident.alloc)._field_Token, ._field_Ident=(*_10958_ident.alloc)._field_Ident, ._field_Binded=(*(_10958_ident))._field_Binded, }), &__jule_any_type74)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a9874cd6:;
			{
				{
					auto expr = &((*((*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a59c8d95_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8be2011:;
					if (it != expr_end) {
						jule::Ptr<_1a59c82a1_Expr> _110416_texpr = *it;
						{
							if ((!(_1a5b2cc30_pushGenericsFromData(_self_, _106242_generics, &(_110416_texpr))))) {
								return false;;
							};
						}
						_iter_next_1a8be2011:;
						++it;
						goto _iter_begin_1a8be2011;
					}
					_iter_end_1a8be2011:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a9874d4c:;
			{
				jule::Ptr<_1a59caeda_NsSelectionExpr> _11108_ns = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1a59caeda_NsSelectionExpr>();;
				jule::Ptr<_1a59c4577_IdentTypeDecl> _11118_decl = jule::new_ptr<_1a59c4577_IdentTypeDecl>(_1a59c4577_IdentTypeDecl{._field_Token=(*(_11108_ns))._field_Ident, ._field_Ident=(*((*_11108_ns.alloc)._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=(*(_11118_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a59c4c1a_NamespaceTypeDecl>(_1a59c4c1a_NamespaceTypeDecl{._field_Idents=(*_11108_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=(*_11118_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11118_decl, &__jule_any_type74)})}), &__jule_any_type91)})); };
			}
		}
		else {
			_case_begin_1a9874b93:;
			{
				_1a5b1bd73_pushErr(_self_.ptr(), (*((*(_106270_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a9874b3d:;
	};
	return true;;
}



inline void _1a5b2d093_evalIdentDeclFromIndexing(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a5b19aeb_Data>* _113247_d, jule::Ptr<_1a59d0264_IndexingExpr>* _113262_i) {
	jule::Ptr<_1a59e7a84_StructIns> _11337_s = _1a5b54a26_Struct((*((*(_113247_d))))._field_Kind.ptr());;
	if ((_11337_s == nullptr)) {
		_1a5b1bd73_pushErr(_self_.ptr(), (*((*((*(_113262_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_113247_d))))._field_Kind), &__jule_any_type4)}));
		(*(_113247_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a59c4577_IdentTypeDecl> _114011_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_113262_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a8be916c:;
			{
				jule::Ptr<_1a59c9abb_IdentExpr> _11438_expr = (*((*((*(_113262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a59c9abb_IdentExpr>();;
				_114011_decl=jule::new_ptr<_1a59c4577_IdentTypeDecl>(_1a59c4577_IdentTypeDecl{._field_Token=(*_11438_expr.alloc)._field_Token, ._field_Ident=(*_11438_expr.alloc)._field_Ident, ._field_Binded=(*(_11438_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a8bea59c:;
			{
				jule::Ptr<_1a59caeda_NsSelectionExpr> _11508_expr = (*((*((*(_113262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1a59caeda_NsSelectionExpr>();;
				_114011_decl=jule::new_ptr<_1a59c4577_IdentTypeDecl>(_1a59c4577_IdentTypeDecl{._field_Token=(*(_11508_expr))._field_Ident, ._field_Ident=(*((*_11508_expr.alloc)._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1a8be9733:;
			{
				_1a5b1bd73_pushErr(_self_, (*((*(_113262_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_113247_d))=nullptr;
				return;;
			}
		}
		_match_end_1a8be96cd:;
	};
	if ((!(_1a5b2cc30_pushGenericsFromData(_self_, &((*(_114011_decl))._field_Generics), &((*((*(_113262_i))))._field_Index))))) {
		(*(_113247_d))=nullptr;
		return;;
	};
	_11337_s=({ auto _wrap_copy = _1a5b34a8e_typeChecker(_self_); _1a5b66b59_fromStruct(&_wrap_copy, &(_114011_decl), &((*(_11337_s))._field_Decl)); });
	if ((_11337_s == nullptr)) {
		(*(_113247_d))=nullptr;
		return;;
	};
	(*(*((*(_113247_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_11337_s, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0);
}



inline jule::Bool _1a5b2d549_checkGenericFn(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _117536_f, jule::Ptr<_1c80b653c_Token>* _117552_et, jule::Any* _117569_model) {
	jule::Bool _11763_ok = _1a5a9cc49_reloadFnInsTypes((*(_self_))._field_s, (*(_117536_f)));;
	(*((*(_117536_f))))._field_reloaded=true;
	if ((!(_11763_ok))) {
		return false;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _11817_existInstance = _1a5a0b845_appendInstance((*((*(_117536_f))))._field_Decl.ptr(), _117536_f);;
	if ((!(_1a5a9bc9d_checkConstraintsFn((*_self_.alloc)._field_s, _117536_f, _117552_et, _11817_existInstance)))) {
		return false;;
	};
	if ((_11817_existInstance != nullptr)) {
		_1a5b4b831_updateModelToGenericIns(_117569_model, &(_11817_existInstance));
		_1a8c03330_updateRefer(_1a5b1ed76_getOwnerRefers(_self_), _117536_f, &(_11817_existInstance));
		(*(_117536_f))=_11817_existInstance;
	} else {
		_1a5aac099_checkFnInsCaller((*_self_.alloc)._field_s, _117536_f, (*(_117552_et)));
	};
	return true;;
}



inline void _1a5b2d8ac_evalFnGenericFromIndexing(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a5b19aeb_Data>* _120447_d, jule::Ptr<_1a59d0264_IndexingExpr>* _120462_i) {
	jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> _12057_generics = jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1a5b2cc30_pushGenericsFromData(_self_, &(_12057_generics), &((*((*(_120462_i))))._field_Index))))) {
		(*(_120447_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _12117_f = _1a5b54790_Fn((*((*(_120447_d))))._field_Kind.ptr());;
	jule::I64 _12127_genericsLen = 0LL;;
	if (((*(_12117_f))._field_Decl != nullptr)) {
		_12127_genericsLen=(*(*_12117_f.alloc)._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1a5a932e4_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12127_genericsLen, _12057_generics.len(), (*((*((*(_120462_i))))._field_Expr))._field_Token)))) {
		(*(_120447_d))=nullptr;
		return;;
	};
	(*_12117_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1a5b4e46b_InsGeneric>>::alloc(0LL, (*(*_12117_f.alloc)._field_Decl.alloc)._field_Generics.len());
	{
		auto expr = &(_12057_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c09e2a:;
		if (it != expr_end) {
			jule::Ptr<_1a59c3e6c_TypeDecl> _122315_g = *it;
			{
				jule::Ptr<_1a5b19aeb_Data> _12248_k = _1a5b34dd0_evalType(_self_, _122315_g);;
				if ((_12248_k == nullptr)) {
					(*(_120447_d))=nullptr;
					return;;
				};
				(*_12117_f.alloc)._field_Generics=jule::append((*_12117_f.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a5b4e46b_InsGeneric>>::make({jule::new_ptr<_1a5b4e46b_InsGeneric>(_1a5b4e46b_InsGeneric{._field_Kind=(*(_12248_k))._field_Kind, })}));
			}
			_iter_next_1a8c09e2a:;
			++it;
			goto _iter_begin_1a8c09e2a;
		}
		_iter_end_1a8c09e2a:;
	};
	if (_1a5a0e23d_IsBuiltin(_12117_f)) {
		return;;
	};
	if (_1a5b2d549_checkGenericFn(_self_, &(_12117_f), &((*(*((*(_120462_i))))._field_Expr.alloc)._field_Token), &((*((*(_120447_d))))._field_Model))) {
		(*(*((*(_120447_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12117_f, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data1);
	} else {
		(*(_120447_d))=nullptr;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b2dbed_evalIndexing(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59d0264_IndexingExpr> _124333_i) {
	jule::Ptr<_1a5b50d52_TypeKind> _12447_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12447_prefix;
	});;
	jule::Ptr<_1a5b19aeb_Data> _12487_d = _1a5b3dacb_evalExprKind(_self_, (*((*(_124333_i))._field_Expr))._field_Kind);;
	if ((_12487_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12487_d))._field_Decl) {
		_1a5b2d093_evalIdentDeclFromIndexing(_self_, &(_12487_d), &(_124333_i));
		return _12487_d;;
	};
	if ((_1a5b54790_Fn((*(_12487_d))._field_Kind.ptr()) != nullptr)) {
		_1a5b2d8ac_evalFnGenericFromIndexing(_self_, &(_12487_d), &(_124333_i));
		return _12487_d;;
	};
	_1a5b19aeb_Data _12647_oldData = (*(_12487_d));;
	jule::Ptr<_1a5b19aeb_Data> _12667_index = _1a5b3e8e0_evalExpr(_self_, (*_124333_i.alloc)._field_Index);;
	if ((_12667_index == nullptr)) {
		return nullptr;;
	};
	(*(_12487_d))._field_Decl=false;
	_1a5b2c37d_toIndexing(_self_, &(_12487_d), &(_12667_index), &(_124333_i));
	if (_1a5b1a503_IsConst(_12487_d.ptr())) {
		(*(_12487_d))._field_Decl=false;
		(*(_12487_d))._field_Model=jule::Any((*(_12487_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_12487_d))._field_Decl) {
		(*(_12487_d))._field_Decl=false;
	} else {
		(*(_12487_d))._field_Model=jule::Any(jule::new_ptr<_1a59ee7e4_IndexingExprModel>(_1a59ee7e4_IndexingExprModel{._field_Token=(*_124333_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1a5b19aeb_Data>(_12647_oldData), ._field_Index=_12667_index}), &__jule_any_type44);
	};
	return _12487_d;;
}



inline __jule_tuple_x_1a5b19aeb_Data__jule_tuple_x_1a5b19aeb_Data _1a5b2e03e_evalSlicingExprs(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59d08c4_SlicingExpr>* _129738_s) {
	__jule_tuple_x_1a5b19aeb_Data__jule_tuple_x_1a5b19aeb_Data __jule_func_result;
	jule::Ptr<_1a5b50d52_TypeKind> _12987_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12987_prefix;
	});;
	jule::Ptr<_1a5b19aeb_Data> _130211_l = nullptr;;
	jule::Ptr<_1a5b19aeb_Data> _130311_r = nullptr;;
	if (((*((*(_129738_s))))._field_Start != nullptr)) {
		_130211_l=_1a5b3e8e0_evalExpr(_self_, (*((*(_129738_s))))._field_Start);
		if ((_130211_l != nullptr)) {
			_1a5b2a8ba_checkIntegerIndexingByData(_self_, &(_130211_l), (*((*(_129738_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_130211_l=jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988c23_primInt, ._field_Constant=static__1b916c5ad_NewI64(0LL)});
		(*((*(_130211_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*_130211_l.alloc)._field_Model=jule::Any((*_130211_l.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129738_s))))._field_To != nullptr)) {
		_130311_r=_1a5b3e8e0_evalExpr(_self_, (*((*(_129738_s))))._field_To);
		if ((_130311_r != nullptr)) {
			_1a5b2a8ba_checkIntegerIndexingByData(_self_, &(_130311_r), (*((*(_129738_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _130211_l;
	__jule_func_result.__jule_result_arg1 = _130311_r;
	return __jule_func_result;;
}



inline void _1a5b2e2e7_slicingArr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _133327_d) {
	jule::Ptr<_1a5b50d52_TypeKind> _13347_elemType = (*(_1a5b54273_Arr((*((*(_133327_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_133327_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5b5ce2a_Slc>(_1a5b5ce2a_Slc{._field_Elem=_13347_elemType}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data22)});
	(*((*(_133327_d))))._field_Lvalue=false;
	(*((*(_133327_d))))._field_Mutable=((*((*(_133327_d))))._field_Mutable || (!(_1a5b526d3_Mutable(_13347_elemType.ptr()))));
}



inline void _1a5b2e715_slicingStr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _134827_d, jule::Ptr<_1a5b19aeb_Data>* _134838_l, jule::Ptr<_1a5b19aeb_Data>* _134849_r) {
	(*((*(_134827_d))))._field_Lvalue=false;
	(*((*(_134827_d))))._field_Mutable=true;
	if ((!(_1a5b1a503_IsConst((*(_134827_d)).ptr())))) {
		return;;
	};
	if ((((*(_134838_l)) == nullptr) || ((*(_134849_r)) == nullptr))) {
		(*((*(_134827_d))))._field_Constant=nullptr;
		(*((*(_134827_d))))._field_untyped=false;
		return;;
	};
	if ((_1a5b1a503_IsConst((*(_134838_l)).ptr()) && _1a5b1a503_IsConst((*(_134849_r)).ptr()))) {
		jule::I64 _13624_left = _1b916e813_AsI64((*((*(_134838_l))))._field_Constant.ptr());;
		if ((_13624_left < 0LL)) {
			return;;
		};
		jule::Str _13674_s = _1b916e2e6_ReadStr((*((*(_134827_d))))._field_Constant);;
		jule::I64 _13688_right = static_cast<jule::I64>(0LL);;
		if (((*(_134849_r)) == nullptr)) {
			_13688_right=static_cast<jule::I64>(_13674_s.len());
		} else {
			_13688_right=_1b916e813_AsI64((*((*(_134849_r))))._field_Constant);
		};
		if ((_13624_left > _13688_right)) {
			return;;
		};
		_1b9170902_SetStr((*((*(_134827_d))))._field_Constant, _13674_s.slice(_13624_left, _13688_right));
		(*((*(_134827_d))))._field_Decl=true;
	} else {
		(*((*(_134827_d))))._field_Constant=nullptr;
		(*((*(_134827_d))))._field_untyped=false;
	};
}



inline void _1a5b2ebdd_checkSlicing(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _138633_d, jule::Ptr<_1a5b19aeb_Data>* _138644_l, jule::Ptr<_1a5b19aeb_Data>* _138655_r, jule::Ptr<_1a59d08c4_SlicingExpr>* _138666_s) {
	{
		
		if ((_1a5b54273_Arr((*((*(_138633_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8c2571a:;
			{
				_1a5b2e2e7_slicingArr(_self_, _138633_d);
				return;;
			}
		}
		else if ((_1a5b54509_Slc((*((*(_138633_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8c257b4:;
			{
				return;;
			}
		}
		else if ((_1a5b534a3_Prim((*((*(_138633_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8c2582a:;
			{
				jule::Ptr<_1a5b5892b_Prim> _13944_prim = _1a5b534a3_Prim((*((*(_138633_d))))._field_Kind);;
				{
					
					if (_1a5b5bdb3_IsStr(_13944_prim.ptr())) {
						_case_begin_1a8c280ad:;
						{
							_1a5b2e715_slicingStr(_self_, _138633_d, _138644_l, _138655_r);
							return;;
						}
					}
					_match_end_1a8c28014:;
				};
			}
		}
		_match_end_1a8c255e9:;
	};
	_1a5b1bd73_pushErr(_self_, (*((*(_138666_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_138633_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3002e_evalSlicing(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59d08c4_SlicingExpr> _140532_s) {
	jule::Ptr<_1a5b19aeb_Data> _14067_d = _1a5b3e8e0_evalExpr(_self_, (*(_140532_s))._field_Expr);;
	if ((_14067_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a5b19aeb_Data> _14117_l;
	jule::Ptr<_1a5b19aeb_Data> _141114_r;
	({
		__jule_tuple_x_1a5b19aeb_Data__jule_tuple_x_1a5b19aeb_Data __jule_assign_result = _1a5b2e03e_evalSlicingExprs(_self_, &(_140532_s));
		_14117_l = __jule_assign_result.__jule_result_arg0;
		_141114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14117_l == nullptr)) {
		return _14067_d;;
	};
	(*(_14067_d))._field_Decl=false;
	_1a5b2ebdd_checkSlicing(_self_, &(_14067_d), &(_14117_l), &(_141114_r), &(_140532_s));
	if (_1a5b1a503_IsConst(_14067_d.ptr())) {
		(*(_14067_d))._field_Decl=false;
		(*(_14067_d))._field_Model=jule::Any((*(_14067_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_14067_d))._field_Decl) {
		(*(_14067_d))._field_Decl=false;
	} else {
		jule::Ptr<_1a5a00bad_SlicingExprModel> _14298_model = jule::new_ptr<_1a5a00bad_SlicingExprModel>(_1a5a00bad_SlicingExprModel{._field_Token=(*_140532_s.alloc)._field_Token, ._field_Expr=(*(_14067_d))._field_Model, ._field_Left=(*(_14117_l))._field_Model, });;
		if ((_141114_r != nullptr)) {
			(*(_14298_model))._field_Right=(*_141114_r.alloc)._field_Model;
		};
		(*(_14067_d))._field_Model=jule::Any(_14298_model, &__jule_any_type92);
	};
	return _14067_d;;
}



inline void _1a5b3044c_castPtr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _144227_t, jule::Ptr<_1a5b19aeb_Data> _144245_d, jule::Ptr<_1c80b653c_Token> _144255_errorToken) {
	(*(_144245_d))._field_Constant=nullptr;
	(*_144245_d.alloc)._field_untyped=false;
	jule::Ptr<_1a5b5c457_Sptr> _14453_sptr = _1a5b53739_Sptr((*_144245_d.alloc)._field_Kind.ptr());;
	if ((_14453_sptr != nullptr)) {
		if ((!(_1a5b5155b_Equal((*(_1a5b539c0_Ptr(_144227_t.ptr())))._field_Elem, (*_14453_sptr.alloc)._field_Elem)))) {
			_1a5b1bd73_pushErr(_self_, _144255_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_144245_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a5b5121a_Str(_144227_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1a5b1c868_isUnsafe(_self_)))) {
		_1a5b1bd73_pushErr(_self_, _144255_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a5b5892b_Prim> _14583_prim = _1a5b534a3_Prim((*_144245_d.alloc)._field_Kind);;
	if (((_1a5b539c0_Ptr((*_144245_d.alloc)._field_Kind) == nullptr) && ((_14583_prim == nullptr) || (!(_1b916b502_IsInt(_1a5b58c6c_Str(_14583_prim.ptr()))))))) {
		_1a5b1bd73_pushErr(_self_, _144255_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_144245_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a5b5121a_Str(_144227_t), &__jule_any_type4)}));
	};
}



inline void _1a5b3086a_castStruct(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _146430_t, jule::Ptr<_1a5b19aeb_Data> _146448_d, jule::Ptr<_1c80b653c_Token> _146458_errorToken) {
	(*(_146448_d))._field_Constant=nullptr;
	(*_146448_d.alloc)._field_untyped=false;
	jule::Ptr<_1a5a1d181_Trait> _14677_tr = _1a5b54cac_Trait((*_146448_d.alloc)._field_Kind.ptr());;
	if ((_14677_tr == nullptr)) {
		_1a5b1bd73_pushErr(_self_, _146458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_146448_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a5b5121a_Str(_146430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _14737_s = _1a5b54a26_Struct(_146430_t);;
	_1a8c38dc1_pushReference(_self_, &(_14737_s));
	if ((!(_1a59e6445_IsImplements((*(_14737_s))._field_Decl.ptr(), _14677_tr)))) {
		_1a5b1bd73_pushErr(_self_, _146458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_146448_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a5b5121a_Str(_146430_t), &__jule_any_type4)}));
	};
}



inline void _1a5b30c88_castRef(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _148127_t, jule::Ptr<_1a5b19aeb_Data> _148145_d, jule::Ptr<_1c80b653c_Token> _148155_errorToken) {
	(*(_148145_d))._field_Constant=nullptr;
	(*_148145_d.alloc)._field_untyped=false;
	jule::Ptr<_1a5b5c457_Sptr> _14847_sptr = _1a5b53739_Sptr(_148127_t.ptr());;
	jule::Ptr<_1a5b60c1e_Ptr> _14867_ptr = _1a5b539c0_Ptr((*_148145_d.alloc)._field_Kind.ptr());;
	if (((_14867_ptr != nullptr) && _1a5b5155b_Equal((*(_14847_sptr))._field_Elem, (*_14867_ptr.alloc)._field_Elem))) {
		if ((!(_1a5b1c868_isUnsafe(_self_)))) {
			_1a5b1bd73_pushErr(_self_, _148155_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a5b54a26_Struct((*_14847_sptr.alloc)._field_Elem) != nullptr)) {
		_1a5b3086a_castStruct(_self_, (*_14847_sptr.alloc)._field_Elem, _148145_d, _148155_errorToken);
		return;;
	};
	_1a5b1bd73_pushErr(_self_, _148155_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_148145_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a5b5121a_Str(_148127_t), &__jule_any_type4)}));
}



inline void _1a5b311a6_castSlc(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _150427_t, jule::Ptr<_1a5b19aeb_Data> _150445_d, jule::Ptr<_1c80b653c_Token> _150455_errorToken) {
	jule::Ptr<_1b916c16d_Const> _15053_c = (*(_150445_d))._field_Constant;;
	(*_150445_d.alloc)._field_Constant=nullptr;
	(*_150445_d.alloc)._field_untyped=false;
	if ((_1a5b53c56_Enum((*_150445_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1a5b534a3_Prim((*((*(_1a5b53c56_Enum((*_150445_d.alloc)._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1a5b5bdb3_IsStr(_1a5b534a3_Prim((*(*(_1a5b53c56_Enum((*_150445_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind).ptr()))))) {
			_1a5b1bd73_pushErr(_self_, _150455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_150445_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a5b5121a_Str(_150427_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1a5b534a3_Prim((*_150445_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1a5b5bdb3_IsStr(_1a5b534a3_Prim((*_150445_d.alloc)._field_Kind).ptr()))))) {
		_1a5b1bd73_pushErr(_self_, _150455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_150445_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a5b5121a_Str(_150427_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_150427_t=(*(_1a5b54509_Slc(_150427_t.ptr())))._field_Elem;
	jule::Ptr<_1a5b5892b_Prim> _15203_prim = _1a5b534a3_Prim(_150427_t);;
	if (((_15203_prim == nullptr) || ((!(_1a5b5a323_IsU8(_15203_prim.ptr()))) && (!(_1a5b59d06_IsI32(_15203_prim.ptr())))))) {
		_1a5b1bd73_pushErr(_self_, _150455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_150445_d.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a5b5121a_Str(_150427_t), &__jule_any_type4)}));
		return;;
	};
	if ((_15053_c != nullptr)) {
		{
			
			if (_1a5b5a323_IsU8(_15203_prim.ptr())) {
				_case_begin_1a8c4c9c8:;
				{
					jule::Str _15305_s = _1b916e2e6_ReadStr(_15053_c);;
					jule::Ptr<_1a59ee33d_SliceExprModel> _15319_model = jule::new_ptr<_1a59ee33d_SliceExprModel>(_1a59ee33d_SliceExprModel{._field_ElemKind=_150427_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _15305_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_15305_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a8c4e4d0:;
						if (it != expr_end) {
							jule::U8 *_153512_b = it;
							{
								jule::Ptr<_1b916c16d_Const> _153610_bc = static__1b916c877_NewU64(static_cast<jule::U64>((*(_153512_b))));;
								(*(_153610_bc))._field_Kind=(*(_15203_prim))._field_Kind;
								(*(_15319_model))._field_Elems=jule::append((*_15319_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_153610_bc, &__jule_any_type19)}));
							}
							_iter_next_1a8c4e4d0:;
							++it;
							goto _iter_begin_1a8c4e4d0;
						}
						_iter_end_1a8c4e4d0:;
					};
					(*_150445_d.alloc)._field_Model=jule::Any(_15319_model, &__jule_any_type76);
					(*_150445_d.alloc)._field_Decl=true;
				}
			}
			else if (_1a5b59d06_IsI32(_15203_prim.ptr())) {
				_case_begin_1a8c4ca72:;
				{
					jule::Slice<jule::I32> _15435_runes = static_cast<jule::Slice<jule::I32>>(_1b916e2e6_ReadStr(_15053_c));;
					jule::Ptr<_1a59ee33d_SliceExprModel> _15449_model = jule::new_ptr<_1a59ee33d_SliceExprModel>(_1a59ee33d_SliceExprModel{._field_ElemKind=_150427_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _15435_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_15435_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a8c528e0:;
						if (it != expr_end) {
							jule::I32 *_154812_r = it;
							{
								jule::Ptr<_1b916c16d_Const> _154910_rc = static__1b916c5ad_NewI64(static_cast<jule::I64>((*(_154812_r))));;
								(*(_154910_rc))._field_Kind=(*(_15203_prim))._field_Kind;
								(*(_15449_model))._field_Elems=jule::append((*_15449_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_154910_rc, &__jule_any_type19)}));
							}
							_iter_next_1a8c528e0:;
							++it;
							goto _iter_begin_1a8c528e0;
						}
						_iter_end_1a8c528e0:;
					};
					(*_150445_d.alloc)._field_Model=jule::Any(_15449_model, &__jule_any_type76);
					(*_150445_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1a8c4c8eb:;
		};
	};
}



inline void _1a5b31519_castStr(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data> _155927_d, jule::Ptr<_1c80b653c_Token> _155937_errorToken) {
	if ((_1a5b53c56_Enum((*(_155927_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a5a2088c_Enum> _15618_e = _1a5b53c56_Enum((*_155927_d.alloc)._field_Kind);;
		if (((_1a5b534a3_Prim((*((*(_15618_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1a5b5bdb3_IsStr(_1a5b534a3_Prim((*(*_15618_e.alloc)._field_Kind.alloc)._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1b916c16d_Const> _15673_c = (*_155927_d.alloc)._field_Constant;;
	(*_155927_d.alloc)._field_Constant=nullptr;
	(*_155927_d.alloc)._field_untyped=false;
	if ((_1a5b534a3_Prim((*_155927_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1a5b5892b_Prim> _15714_prim = _1a5b534a3_Prim((*_155927_d.alloc)._field_Kind);;
		if (((!(_1a5b5a323_IsU8(_15714_prim.ptr()))) && (!(_1a5b59d06_IsI32(_15714_prim))))) {
			_1a5b1bd73_pushErr(_self_, _155937_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*_155927_d.alloc)._field_Kind), &__jule_any_type4)}));
			return;;
		};
		if ((_15673_c != nullptr)) {
			{
				
				if (_1a5b5a323_IsU8(_15714_prim)) {
					_case_begin_1a8c5a266:;
					{
						(*_155927_d.alloc)._field_Constant=static__1b916ce0a_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1b916ea99_AsU64(_15673_c))));
						(*_155927_d.alloc)._field_Model=jule::Any((*_155927_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155927_d.alloc)._field_Decl=true;
					}
				}
				else if (_1a5b59d06_IsI32(_15714_prim)) {
					_case_begin_1a8c5a310:;
					{
						(*_155927_d.alloc)._field_Constant=static__1b916ce0a_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1b916e813_AsI64(_15673_c))));
						(*_155927_d.alloc)._field_Model=jule::Any((*_155927_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155927_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1a8c5a156:;
			};
		};
		return;;
	};
	jule::Ptr<_1a5b5ce2a_Slc> _15927_s = _1a5b54509_Slc((*_155927_d.alloc)._field_Kind);;
	if ((_15927_s == nullptr)) {
		_1a5b1bd73_pushErr(_self_, _155937_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*_155927_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1a5b50d52_TypeKind> _15987_t = (*(_15927_s))._field_Elem;;
	jule::Ptr<_1a5b5892b_Prim> _15993_prim = _1a5b534a3_Prim(_15987_t.ptr());;
	if (((_15993_prim == nullptr) || ((!(_1a5b5a323_IsU8(_15993_prim.ptr()))) && (!(_1a5b59d06_IsI32(_15993_prim.ptr())))))) {
		_1a5b1bd73_pushErr(_self_, _155937_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*_155927_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
}



inline void _1a5b31937_castInt(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _160627_t, jule::Ptr<_1a5b19aeb_Data> _160645_d, jule::Ptr<_1c80b653c_Token> _160655_errorToken) {
	if (_1a5b1a503_IsConst(_160645_d.ptr())) {
		jule::Ptr<_1a5b5892b_Prim> _16084_prim = _1a5b534a3_Prim(_160627_t.ptr());;
		{
			
			if (_1b916ae2a_IsSigInt((*(_16084_prim))._field_Kind)) {
				_case_begin_1a8c636ae:;
				{
					_1b91700d8_SetI64((*_160645_d.alloc)._field_Constant.ptr(), _1b916e813_AsI64((*_160645_d.alloc)._field_Constant));
				}
			}
			else if (_1b916b238_IsUnsigInt((*(_16084_prim))._field_Kind)) {
				_case_begin_1a8c63758:;
				{
					_1b9170391_SetU64((*_160645_d.alloc)._field_Constant.ptr(), _1b916ea99_AsU64((*_160645_d.alloc)._field_Constant));
				}
			}
			_match_end_1a8c63637:;
		};
	} else {
		(*(_160645_d))._field_Constant=nullptr;
		(*_160645_d.alloc)._field_untyped=false;
	};
	if ((_1a5b53c56_Enum((*(_160645_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a5a2088c_Enum> _16214_e = _1a5b53c56_Enum((*_160645_d.alloc)._field_Kind);;
		if (_1b916bac9_IsNum(_1a5b5121a_Str((*((*(_16214_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1a5b53739_Sptr((*_160645_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1a5b5892b_Prim> _16284_prim = _1a5b534a3_Prim(_160627_t.ptr());;
		if ((!(_1a5b5b896_IsUintptr(_16284_prim.ptr())))) {
			_1a5b1bd73_pushErr(_self_, _160655_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_160645_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a5b5121a_Str(_160627_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1a5b539c0_Ptr((*_160645_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1a5b5892b_Prim> _16354_prim = _1a5b534a3_Prim(_160627_t);;
		if (_1a5b5b896_IsUintptr(_16354_prim.ptr())) {
		} else if ((!(_1a5b1c868_isUnsafe(_self_)))) {
			_1a5b1bd73_pushErr(_self_, _160655_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a5b5892b_Prim> _16443_prim = _1a5b534a3_Prim((*_160645_d.alloc)._field_Kind);;
	if (((_16443_prim != nullptr) && _1b916bac9_IsNum(_1a5b58c6c_Str(_16443_prim)))) {
		return;;
	};
	_1a5b1bd73_pushErr(_self_, _160655_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_160645_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a5b5121a_Str(_160627_t), &__jule_any_type4)}));
}



inline void _1a5b31d55_castNum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _165227_t, jule::Ptr<_1a5b19aeb_Data> _165245_d, jule::Ptr<_1c80b653c_Token> _165255_errorToken) {
	if (_1a5b1a503_IsConst(_165245_d.ptr())) {
		jule::Ptr<_1a5b5892b_Prim> _16544_prim = _1a5b534a3_Prim(_165227_t.ptr());;
		{
			
			if (_1b916b843_IsFloat((*(_16544_prim))._field_Kind)) {
				_case_begin_1a8c6e896:;
				{
					_1b9170baa_SetF64((*_165245_d.alloc)._field_Constant.ptr(), _1b916ed30_AsF64((*_165245_d.alloc)._field_Constant));
				}
			}
			else if (_1b916ae2a_IsSigInt((*(_16544_prim))._field_Kind)) {
				_case_begin_1a8c6e940:;
				{
					_1b91700d8_SetI64((*_165245_d.alloc)._field_Constant.ptr(), _1b916e813_AsI64((*_165245_d.alloc)._field_Constant));
				}
			}
			else if (_1b916b238_IsUnsigInt((*(_16544_prim))._field_Kind)) {
				_case_begin_1a8c6e9a6:;
				{
					_1b9170391_SetU64((*_165245_d.alloc)._field_Constant.ptr(), _1b916ea99_AsU64((*_165245_d.alloc)._field_Constant));
				}
			}
			_match_end_1a8c6e7ca:;
		};
	} else {
		(*(_165245_d))._field_Constant=nullptr;
		(*_165245_d.alloc)._field_untyped=false;
	};
	if ((_1a5b53c56_Enum((*(_165245_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a5a2088c_Enum> _16694_e = _1a5b53c56_Enum((*_165245_d.alloc)._field_Kind);;
		if (_1b916bac9_IsNum(_1a5b5121a_Str((*((*(_16694_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a5b5892b_Prim> _16753_prim = _1a5b534a3_Prim((*_165245_d.alloc)._field_Kind);;
	if (((_16753_prim != nullptr) && _1b916bac9_IsNum(_1a5b58c6c_Str(_16753_prim)))) {
		return;;
	};
	_1a5b1bd73_pushErr(_self_, _165255_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_165245_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1a5b5121a_Str(_165227_t.ptr()), &__jule_any_type4)}));
}



inline void _1a5b32273_castPrim(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _168328_t, jule::Ptr<_1a5b19aeb_Data> _168346_d, jule::Ptr<_1c80b653c_Token> _168356_errorToken) {
	jule::Ptr<_1a5b5892b_Prim> _16843_prim = _1a5b534a3_Prim(_168328_t.ptr());;
	{
		
		if (_1a5b5c149_IsAny(_16843_prim.ptr())) {
			_case_begin_1a8c77c23:;
			{
				(*(_168346_d))._field_Constant=nullptr;
				(*_168346_d.alloc)._field_untyped=false;
			}
		}
		else if (_1a5b5bdb3_IsStr(_16843_prim.ptr())) {
			_case_begin_1a8c778d2:;
			{
				_1a5b31519_castStr(_self_, _168346_d, _168356_errorToken);
			}
		}
		else if (_1b916b502_IsInt(_1a5b58c6c_Str(_16843_prim.ptr()))) {
			_case_begin_1a8c77948:;
			{
				_1a5b31937_castInt(_self_, _168328_t, _168346_d, _168356_errorToken);
			}
		}
		else if (_1b916bac9_IsNum(_1a5b58c6c_Str(_16843_prim.ptr()))) {
			_case_begin_1a8c779ae:;
			{
				_1a5b31d55_castNum(_self_, _168328_t, _168346_d, _168356_errorToken);
			}
		}
		else {
			_case_begin_1a8c7786b:;
			{
				_1a5b1bd73_pushErr(_self_, _168356_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str(_168328_t), &__jule_any_type4)}));
			}
		}
		_match_end_1a8c77805:;
	};
}



inline void _1a5b325d6_castConstant(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _170133_t, jule::Ptr<_1a5b19aeb_Data>* _170152_d) {
	if ((((*(_170152_d)) == nullptr) || (!(_1a5b1a503_IsConst((*(_170152_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a5b5892b_Prim> _17053_prim = _1a5b534a3_Prim((*(_170133_t)).ptr());;
	_1a5b4b314_castConstByType(&((*(_17053_prim))._field_Kind), _170152_d);
	(*((*(_170152_d))))._field_Model=jule::Any((*((*(_170152_d))))._field_Constant, &__jule_any_type19);
}



inline void _1a5b32a04_castTypeEnum(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _171033_t, jule::Ptr<_1a5b19aeb_Data>* _171052_d, jule::Ptr<_1c80b653c_Token>* _171067_errorToken) {
	jule::I64 _17113_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a5a9a230_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_171052_d))))._field_Kind), _171033_t, _171067_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17113_n);;
		_1a5b1bd73_pushErr(_self_, (*(_171067_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_171052_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(_171033_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_171052_d))))._field_Constant=nullptr;
	(*((*(_171052_d))))._field_untyped=false;
}



inline void _1a5b32e22_castTypeEnumT(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _172034_t, jule::Ptr<_1a5b19aeb_Data>* _172053_d, jule::Ptr<_1c80b653c_Token>* _172068_errorToken) {
	jule::I64 _17213_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1a5a9a230_checkTypeCompatibility((*(_self_))._field_s, _172034_t, &((*((*(_172053_d))))._field_Kind), _172068_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17213_n);;
		_1a5b1bd73_pushErr(_self_, (*(_172068_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_172053_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(_172034_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_172053_d))))._field_Constant=nullptr;
	(*((*(_172053_d))))._field_untyped=false;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b333c8_evalCastByTypeNData(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b50d52_TypeKind> _173039_t, jule::Ptr<_1a5b19aeb_Data> _173057_d, jule::Ptr<_1c80b653c_Token> _173071_errorToken) {
	if (((_173057_d != nullptr) && (*_173057_d.alloc)._field_Decl)) {
		_1a5b1bd73_pushErr(_self_, _173071_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1a5b19ed6_IsNil(_173057_d)) {
			_case_begin_1a8c856ae:;
			{
				if ((!(_1a5b52c00_NilCompatible(_173039_t.ptr())))) {
					_1a5b1bd73_pushErr(_self_, _173071_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1a5b5121a_Str(_173039_t), &__jule_any_type4)}));
				};
				(*_173057_d.alloc)._field_Constant=nullptr;
				(*_173057_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1a5b534a3_Prim((*_173057_d.alloc)._field_Kind.ptr()) != nullptr) && _1a5b5c149_IsAny(_1a5b534a3_Prim((*_173057_d.alloc)._field_Kind).ptr()))) {
			_case_begin_1a8c8544a:;
			{
				if ((_1a5b53c56_Enum(_173039_t.ptr()) != nullptr)) {
					_1a5b1bd73_pushErr(_self_, _173071_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1a5b53edc_TypeEnum(_173039_t.ptr()) != nullptr)) {
					_1a5b1bd73_pushErr(_self_, _173071_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*_173057_d.alloc)._field_Constant=nullptr;
				(*_173057_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1a5b53edc_TypeEnum((*_173057_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8c854b1:;
			{
				_1a5b32a04_castTypeEnum(_self_, &(_173039_t), &(_173057_d), &(_173071_errorToken));
			}
		}
		else if ((_1a5b53edc_TypeEnum(_173039_t.ptr()) != nullptr)) {
			_case_begin_1a8c85527:;
			{
				_1a5b32e22_castTypeEnumT(_self_, &(_173039_t), &(_173057_d), &(_173071_errorToken));
			}
		}
		else if ((_1a5b539c0_Ptr(_173039_t.ptr()) != nullptr)) {
			_case_begin_1a8c8558d:;
			{
				_1a5b3044c_castPtr(_self_, _173039_t, _173057_d, _173071_errorToken);
			}
		}
		else if ((_1a5b53739_Sptr(_173039_t.ptr()) != nullptr)) {
			_case_begin_1a8c8624d:;
			{
				_1a5b30c88_castRef(_self_, _173039_t, _173057_d, _173071_errorToken);
			}
		}
		else if ((_1a5b54509_Slc(_173039_t.ptr()) != nullptr)) {
			_case_begin_1a8c862b4:;
			{
				_1a5b311a6_castSlc(_self_, _173039_t, _173057_d, _173071_errorToken);
			}
		}
		else if ((_1a5b54a26_Struct(_173039_t.ptr()) != nullptr)) {
			_case_begin_1a8c8632a:;
			{
				_1a5b3086a_castStruct(_self_, _173039_t, _173057_d, _173071_errorToken);
			}
		}
		else if ((_1a5b534a3_Prim(_173039_t.ptr()) != nullptr)) {
			_case_begin_1a8c86391:;
			{
				_1a5b32273_castPrim(_self_, _173039_t, _173057_d, _173071_errorToken);
				_1a5b325d6_castConstant(_self_, &(_173039_t), &(_173057_d));
			}
		}
		else {
			_case_begin_1a8c85329:;
			{
				_1a5b1bd73_pushErr(_self_, _173071_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str(_173039_t.ptr()), &__jule_any_type4)}));
				_173057_d=nullptr;
			}
		}
		_match_end_1a8c85280:;
	};
	if ((_173057_d == nullptr)) {
		return nullptr;;
	};
	(*_173057_d.alloc)._field_Mutable=((*_173057_d.alloc)._field_Mutable || (!(_1a5b526d3_Mutable((*_173057_d.alloc)._field_Kind.ptr()))));
	if (((!((*_173057_d.alloc)._field_Decl)) && ((_1a5b53c56_Enum((*_173057_d.alloc)._field_Kind) == nullptr) || (!(_1a5b5155b_Equal((*((*(_1a5b53c56_Enum((*_173057_d.alloc)._field_Kind)))._field_Kind))._field_Kind, _173039_t)))))) {
		_1a5b4a5ee_applyCastKind(&(_173057_d), &(_173039_t), &(_173071_errorToken));
		(*((*_173057_d.alloc)._field_Model.cast_ptr<_1a59ed5b2_CastingExprModel>(&__jule_any_type93)))._field_Token=_173071_errorToken;
	} else {
		(*_173057_d.alloc)._field_Kind=_173039_t;
	};
	(*_173057_d.alloc)._field_Decl=false;
	(*_173057_d.alloc)._field_Lvalue=false;
	(*_173057_d.alloc)._field_untyped=false;
	if (_1a5b1a503_IsConst(_173057_d)) {
		(*((*_173057_d.alloc)._field_Constant))._field_Kind=(*(_1a5b534a3_Prim(_173039_t.ptr())))._field_Kind;
	};
	return _173057_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3387e_evalCastT(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a5b50d52_TypeKind>* _180331_t, jule::Ptr<_1a59c82a1_Expr>* _180350_e, jule::Ptr<_1c80b653c_Token>* _180365_et) {
	jule::Ptr<_1a5b50d52_TypeKind> _18047_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18047_prefix;
	});;
	if ((_1a5b54509_Slc((*(_180331_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_180350_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type94) {
				_case_begin_1a8c963d4:;
				{
					(*_self_.alloc)._field_prefix=(*(_180331_t));
				}
			}
			_match_end_1a8c9636d:;
		};
	};
	jule::Ptr<_1a5b19aeb_Data> _18137_d = _1a5b3e8e0_evalExpr(_self_, (*(_180350_e)));;
	if (((_18137_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18137_d;;
	};
	return _1a5b333c8_evalCastByTypeNData(_self_, (*(_180331_t)), _18137_d, (*(_180365_et)));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b33bc0_evalCast(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cab11_CastExpr> _182029_c) {
	jule::Ptr<_1a5b58024_TypeSymbol> _18217_t = _1a5a12807_buildType((*(_182029_c))._field_Kind);;
	jule::Bool _18223_ok = _1a5a97936_checkType((*(_self_))._field_s, &(_18217_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18223_ok))) {
		return nullptr;;
	};
	return _1a5b3387e_evalCastT(_self_, &((*(_18217_t))._field_Kind), &((*_182029_c.alloc)._field_Expr), &((*((*_182029_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b34011_evalNsSelection(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59caeda_NsSelectionExpr> _182931_s) {
	jule::Str _18303_path = _1a5b6c896_buildLinkPathByTokens(&((*(_182931_s))._field_Ns));;
	jule::Ptr<_1a5a6dcd6_ImportInfo> _18317_imp = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b6dc2c_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>>((void*)__jule_anon_1a8c9ba05, jule::Ptr<__jule_anon_1a8c9ba05_ctx>::make(__jule_anon_1a8c9ba05_ctx{._182931_s=_182931_s,._18303_path=_18303_path}).as<jule::Uintptr>(), __jule_anon_1a8c9ba05_ctx_handler));;
	if ((_18317_imp == nullptr)) {
		_1a5b1bd73_pushErr(_self_, (*_182931_s.alloc)._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18303_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait _18437_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18317_imp, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data1);
	;
	_1a5b1c5d2_disallowBuiltin(_self_);
	jule::Any _18487_def = _1a5b1eae0_getDef(_self_, &((*((*_182931_s.alloc)._field_Ident))._field_Kind), false);;
	_1a5b1c3d4_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18437_lookup;
	jule::Ptr<_1a5b19aeb_Data> _18517_d = _1a5b23c9d_evalDef(_self_, &(_18487_def), (*_182931_s.alloc)._field_Ident);;
	return _18517_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b344b7_evalStructLitExplicit(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59e7a84_StructIns> _185542_s, jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _18567_exprs, jule::Ptr<_1c80b653c_Token> _185627_errorToken) {
	jule::Bool _18573_ok = _1a5a932e4_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_185542_s))._field_Decl))._field_Generics.len(), (*_185542_s.alloc)._field_Generics.len(), _185627_errorToken);;
	if ((!(_18573_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*_self_.alloc)._field_field.alloc)._field_Decl))._field_Owner == (*_185542_s.alloc)._field_Decl))) {
		_1a5b1bd73_pushErr(_self_, _185627_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(*_185542_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
	};
	_1a8c38dc1_pushReference(_self_, &(_185542_s));
	_1a5b21e99_checkDeprecated(_self_, &((*(*_185542_s.alloc)._field_Decl.alloc)._field_Directives), _185627_errorToken);
	_1a5b0cbcc_structLitChecker _18707_slc = _1a5b0cbcc_structLitChecker{._field_e=_self_, ._field_errorToken=_185627_errorToken, ._field_s=_185542_s, };;
	_1a5b0e41a_check(&_18707_slc, &(_18567_exprs));
	jule::Ptr<_1a5b19aeb_Data> _18777_d = jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_185542_s, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1a59ecc32_StructLitExprModel>(_1a59ecc32_StructLitExprModel{._field_Strct=_185542_s, ._field_Args=_18707_slc._field_args}), &__jule_any_type95), });;
	if ((*(*_185542_s.alloc)._field_Decl.alloc)._field_Binded) {
		(*((*(_18777_d))._field_Kind))._field_BindIdent=(*(*_185542_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _18777_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b34808_evalStructLit(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cd2ea_StructLit> _189334_lit) {
	jule::Ptr<_1a5b58024_TypeSymbol> _18947_t = _1a5a12807_buildType((*(_189334_lit))._field_Kind);;
	jule::Bool _18953_ok = _1a5a97936_checkType((*(_self_))._field_s, &(_18947_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18953_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _19007_s = _1a5b54a26_Struct((*(_18947_t))._field_Kind.ptr());;
	if ((_19007_s == nullptr)) {
		if ((_1a5b53739_Sptr((*_18947_t.alloc)._field_Kind) != nullptr)) {
			_19007_s=_1a5b54a26_Struct((*(_1a5b53739_Sptr((*_18947_t.alloc)._field_Kind)))._field_Elem.ptr());
			if ((_19007_s != nullptr)) {
				goto _julec_label_1a8cac719;
			};
		};
		_1a5b1bd73_pushErr(_self_, (*((*_189334_lit.alloc)._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1a8cac719:;
	jule::Ptr<_1a5b19aeb_Data> _19137_d = _1a5b344b7_evalStructLitExplicit(_self_, _19007_s, (*_189334_lit.alloc)._field_Exprs, (*(*_189334_lit.alloc)._field_Kind.alloc)._field_Token);;
	if ((_1a5b53739_Sptr((*_18947_t.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1a59ecc32_StructLitExprModel> _19158_model = (*(_19137_d))._field_Model.cast_ptr<_1a59ecc32_StructLitExprModel>(&__jule_any_type95);;
		_1a5b48c29_makeStructLitAlloc(&(_19137_d), &(_19158_model));
	};
	return _19137_d;;
}



inline _1a5b62c10_typeChecker _1a5b34a8e_typeChecker(_1a5b1b823_Eval* _self_) {
	return _1a5a966d2_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b34dd0_evalType(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59c3e6c_TypeDecl> _192528_t) {
	jule::Ptr<_1a5b58024_TypeSymbol> _19267_tk = _1a5a12807_buildType(_192528_t);;
	jule::Bool _19273_ok = _1a5a97936_checkType((*(_self_))._field_s, &(_19267_tk), (*(_self_))._field_lookup);;
	if ((!(_19273_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=(*(_19267_tk))._field_Kind, ._field_Model=jule::Any((*_19267_tk.alloc)._field_Kind, &__jule_any_type84), ._field_Decl=true, });;
}



inline void _1a5b35243_callTypeFn(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cbeca_FnCallExpr>* _193832_fc, jule::Ptr<_1a5b19aeb_Data>* _193854_d) {
	if (((*((*(_193832_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr(_self_.ptr(), (*((*(_193832_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_193832_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr(_self_.ptr(), (*((*((*(_193832_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_193854_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_193832_fc))))._field_IsCo) {
		_1a5b1bd73_pushErr(_self_.ptr(), (*((*(_193832_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_193854_d))=nullptr;
		return;;
	} else if (((*((*(_193832_fc))))._field_Exception != nullptr)) {
		_1a5b1bd73_pushErr(_self_.ptr(), (*((*(_193832_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_193854_d))=nullptr;
		return;;
	};
	if (((*((*(_193832_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1a59c82a1_Expr> _19548_arg = (*((*(_193832_fc))))._field_Args[0LL];;
		(*(_193854_d))=_1a5b3387e_evalCastT(_self_, &((*((*(_193854_d))))._field_Kind), &(_19548_arg), &((*(_19548_arg))._field_Token));
		return;;
	};
	if (((*(_193854_d)) != nullptr)) {
		(*((*(_193854_d))))._field_Decl=false;
	};
}



inline void _1a5b355a6_callBuiltinFn(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cbeca_FnCallExpr>* _196435_fc, jule::Ptr<_1a5b19aeb_Data>* _196457_d) {
	if ((!(_1a59cc34e_Unhandled((*(_196435_fc)).ptr())))) {
		_1a5b1bd73_pushErr(_self_.ptr(), (*((*(_196435_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_196457_d))=(*(_1a5b54790_Fn((*((*(_196457_d))))._field_Kind.ptr())))._field_caller(&(_self_), _196435_fc, _196457_d);
	if (((*(_196457_d)) == nullptr)) {
		return;;
	};
	(*((*(_196457_d))))._field_Mutable=true;
}



inline void _1a5b35919_checkFnOfConcurrentCall(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _197640_f, jule::Ptr<_1c80b653c_Token> _197651_errorToken) {
	if (_1a5b1c868_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_197640_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cbc5a3:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0bc30_ParamIns> *_198010_p = it;
			{
				if (_1a5a0891e_IsSelf((*((*(_198010_p))))._field_Decl.ptr())) {
					if ((!(_1a5a08ba5_IsRef((*(*(_198010_p)).alloc)._field_Decl)))) {
						_1a5b1bd73_pushErr(_self_, _197651_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(*(*(_198010_p)).alloc)._field_Decl.alloc)._field_Reference) {
					_1a5b1bd73_pushErr(_self_, _197651_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1a8cbc5a3:;
			++it;
			goto _iter_begin_1a8cbc5a3;
		}
		_iter_end_1a8cbc5a3:;
	};
}



inline void _1a5b35d37_processExceptionalHandler(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _199546_f, jule::Ptr<_1a59cbeca_FnCallExpr>* _199562_fc, jule::Ptr<_1a5b19aeb_Data>* _199584_d) {
	jule::Bool _19963_resultNeeded = ((!(_1a5a0a24a_IsVoid((*((*(_199546_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1a5a5420b_scopeChecker> _199711_csc = nullptr;;
	jule::Ptr<_1a5a4bc4d_Scope> _199811_ch = nullptr;;
	jule::Ptr<_1a59ede64_FnCallExprModel> _20007_model = (*((*(_199584_d))))._field_Model.cast_ptr<_1a59ede64_FnCallExprModel>(&__jule_any_type33);;
	jule::Ptr<_1a5a5420b_scopeChecker> _20047_sc = (*(_self_))._field_lookup.cast_ptr<_1a5a5420b_scopeChecker>((jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0);;
	_199711_csc=_1a5a66295_newChildChecker(_20047_sc);
	if (_19963_resultNeeded) {
		(*(_199711_csc))._field_result=(*(_199546_f));
	};
	_199811_ch=_1a5a595eb_getChild(_20047_sc);
	(*((*((*(_199562_fc))))._field_Exception))._field_Parent=(*_20047_sc.alloc)._field_tree;
	(*((*_199711_csc.alloc)._field_table))._field_Vars=jule::append((*(*_199711_csc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::make({_1a5b4909d_buildErrorVar(&(_199811_ch), _199562_fc)}));
	_1a5a59a19_checkChildSsc(_20047_sc, &((*((*(_199562_fc))))._field_Exception), &(_199811_ch), &(_199711_csc));
	(*(_20007_model))._field_Assigned=_19963_resultNeeded;
	(*_20007_model.alloc)._field_Except=_199811_ch;
	if ((_19963_resultNeeded && ((*_199711_csc.alloc)._field_result != nullptr))) {
		_1a5b1bd73_pushErr(_self_, (*((*(_199562_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1a5b3619a_callFn(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cbeca_FnCallExpr>* _202228_fc, jule::Ptr<_1a5b19aeb_Data>* _202250_d) {
	jule::Ptr<_1a5a0cca8_FnIns> _20237_f = _1a5b54790_Fn((*((*(_202250_d))))._field_Kind.ptr());;
	if (_1a5a0e23d_IsBuiltin(_20237_f.ptr())) {
		_1a5b355a6_callBuiltinFn(_self_, _202228_fc, _202250_d);
		return;;
	};
	if ((_1a5b1caee_isGlobal(_self_) && (*((*_20237_f.alloc)._field_Decl))._field_Exceptional)) {
		_1a5b1bd73_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_202250_d))=nullptr;
		return;;
	};
	if (((!(_1a5a0a4d1_IsMethod((*_20237_f.alloc)._field_Decl))) && _1a5b6b972_hasDirective(&((*(*_20237_f.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("test", 4)))) {
		_1a5b1bd73_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_202250_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_202250_d))))._field_Mutable)) && _1a5a0a4d1_IsMethod((*_20237_f.alloc)._field_Decl)) && (!((*(*_20237_f.alloc)._field_Decl.alloc)._field_Statically))) && (*((*(*_20237_f.alloc)._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1a5b1bd73_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1a59ecc32_StructLitExprModel> _20495_lit = _1a5b4c557_isLitBased(&((*((*(_202250_d))))._field_Model));;
			if ((_20495_lit == nullptr)) {
				_1a5b1bd73_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1a5b0c6e3_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_20495_lit));
			};
		};
	} else if (((!(_1a5b1c868_isUnsafe(_self_))) && (*(*_20237_f.alloc)._field_Decl.alloc)._field_Unsafety)) {
		_1a5b1bd73_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _20617_dynamicAnnotation = ((((*(*_20237_f.alloc)._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_20237_f.alloc)._field_Generics.len() == 0LL)) && ((*_20237_f.alloc)._field_Params.len() > 0LL));;
	if (_20617_dynamicAnnotation) {
		(*_20237_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1a5b4e46b_InsGeneric>>::alloc((*(*_20237_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*(*_20237_f.alloc)._field_Decl.alloc)._field_Generics.len());
	} else if (((*_20237_f.alloc)._field_Generics.len() != (*(*_20237_f.alloc)._field_Decl.alloc)._field_Generics.len())) {
		_1a5a932e4_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*_20237_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*_20237_f.alloc)._field_Generics.len(), (*((*(_202228_fc))))._field_Token);
		(*(_202250_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a5a8e17a_Sema> _20707_old = (*_self_.alloc)._field_s;;
	if (((*(*_20237_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*(*_20237_f.alloc)._field_Decl.alloc)._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_20707_old != (*_self_.alloc)._field_s)) {
			(*(_20707_old))._field_errors=jule::append((*_20707_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*_self_.alloc)._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_20707_old;
	});;
	_1a5b09c95_fnCallArgChecker _20837_fcac = _1a5b09c95_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_202228_fc))))._field_Args, ._field_errorToken=(*((*(_202228_fc))))._field_Token, ._field_dynamicAnnotation=_20617_dynamicAnnotation, };;
	if ((!(_20617_dynamicAnnotation))) {
		if ((!((*_20237_f.alloc)._field_reloaded))) {
			jule::Bool _20925_ok = _1a5a9cc49_reloadFnInsTypes((*_self_.alloc)._field_s, _20237_f);;
			(*_20237_f.alloc)._field_reloaded=true;
			if ((!(_20925_ok))) {
				(*(_202250_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a5a0cca8_FnIns> _20998_existInstance = _1a5a0b845_appendInstance((*_20237_f.alloc)._field_Decl, &(_20237_f));;
		if ((_20998_existInstance != nullptr)) {
			_20237_f=_20998_existInstance;
		};
	} else if ((!(_1a5a9b4a6_buildFnNonGenericTypeKinds((*_self_.alloc)._field_s, &(_20237_f), &(_20837_fcac._field_ignored))))) {
		(*(_202250_d))=nullptr;
		return;;
	};
	_20837_fcac._field_f=_20237_f;
	jule::Bool _21107_ok = false;;
	if (((*(*_20237_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_20707_old, (*_self_.alloc)._field_s);
		_21107_ok=_1a5b0c34c_check(&_20837_fcac);
		std::swap(_20707_old, (*_self_.alloc)._field_s);
	} else {
		_21107_ok=_1a5b0c34c_check(&_20837_fcac);
	};
	if (_20617_dynamicAnnotation) {
		if ((!(_21107_ok))) {
			(*(_202250_d))=nullptr;
			return;;
		};
		if ((!(_1a5b2d549_checkGenericFn(_self_, &(_20237_f), &((*((*(_202228_fc))))._field_Token), &((*((*(_202250_d))))._field_Model))))) {
			(*(_202250_d))=nullptr;
			return;;
		};
	};
	jule::Any _21307_callModel = (*((*(_202250_d))))._field_Model;;
	if (_1a5a0a24a_IsVoid((*_20237_f.alloc)._field_Decl)) {
		(*(_202250_d))=_1a5b4a80d_buildVoidData();
	} else {
		(*((*(_202250_d))))._field_Kind=(*_20237_f.alloc)._field_Result;
		(*((*(_202250_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1a59ede64_FnCallExprModel> _21397_model = jule::new_ptr<_1a59ede64_FnCallExprModel>(_1a59ede64_FnCallExprModel{._field_Token=(*((*(_202228_fc))))._field_Token, ._field_Func=_20237_f, ._field_IsCo=(*((*(_202228_fc))))._field_IsCo, ._field_Expr=_21307_callModel, ._field_Args=_20837_fcac._field_argModels, });;
	(*((*(_202250_d))))._field_Model=jule::Any(_21397_model, &__jule_any_type33);
	(*((*(_202250_d))))._field_Mutable=true;
	if ((*(*_20237_f.alloc)._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_202228_fc))))._field_IsCo) {
			_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*((*(_202228_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1a5a92128_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1a59cc34e_Unhandled((*(_202228_fc)).ptr())) {
				_case_begin_1a8ce351e:;
				{
					_1a5b1bd73_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1a59cc5d5_Ignored((*(_202228_fc)).ptr())) {
				_case_begin_1a8ce3211:;
				{
					goto _match_end_1a8ce1eac;
				}
			}
			else {
				_case_begin_1a8ce2045:;
				{
					_1a5b35d37_processExceptionalHandler(_self_, &(_20237_f), _202228_fc, _202250_d);
				}
			}
			_match_end_1a8ce1eac:;
		};
	} else if ((!(_1a59cc34e_Unhandled((*(_202228_fc)).ptr())))) {
		_1a5b1bd73_pushErr(_self_, (*((*(_202228_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_202228_fc))))._field_IsCo) {
		_1a5b35919_checkFnOfConcurrentCall(_self_, &((*(_21397_model))._field_Func), (*((*(_202228_fc))))._field_Token);
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b364db_evalFnCall(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cbeca_FnCallExpr> _217431_fc) {
	jule::Ptr<_1a5b50d52_TypeKind> _21757_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_21757_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_217431_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a8ce7a84:;
			{
				if ((*((*((*(_217431_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1c798c6a5_builtinCallerError(&(_self_), &(_217431_fc));;
				};
			}
		}
		_match_end_1a8ce7a1d:;
	};
	jule::Ptr<_1a5b19aeb_Data> _21887_d = _1a5b3dacb_evalExprKind(_self_, (*(*_217431_fc.alloc)._field_Expr.alloc)._field_Kind);;
	if ((_21887_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_21887_d))._field_Decl) {
		_1a5b35243_callTypeFn(_self_, &(_217431_fc), &(_21887_d));
		return _21887_d;;
	};
	if ((_1a5b54790_Fn((*(_21887_d))._field_Kind.ptr()) == nullptr)) {
		_1a5b1bd73_pushErr(_self_, (*_217431_fc.alloc)._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a5b3619a_callFn(_self_, &(_217431_fc), &(_21887_d));
	return _21887_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b368d7_evalEnumStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a2088c_Enum> _220734_enm, jule::Ptr<_1c80b653c_Token> _220750_ident) {
	jule::Ptr<_1a5a1ed20_EnumItem> _22087_item = _1a5a21481_FindItem(_220734_enm.ptr(), (*(_220750_ident))._field_Kind);;
	if ((_22087_item == nullptr)) {
		_1a5b1bd73_pushErr(_self_, _220750_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_220734_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_220750_ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _1a5b4c28d_evalEnumStatic(&(_220734_enm), &(_22087_item), &(_220750_ident));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b36cd3_evalTypeEnumStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a22097_TypeEnum> _221538_enm, jule::Ptr<_1c80b653c_Token> _221554_ident) {
	jule::Ptr<_1a5a219c0_TypeEnumItem> _22167_item = _1a5a22b58_FindItem(_221538_enm.ptr(), (*(_221554_ident))._field_Kind);;
	if ((_22167_item == nullptr)) {
		_1a5b1bd73_pushErr(_self_, _221554_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_221538_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_221554_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1a5b53c56_Enum((*((*(_22167_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8d01131:;
			{
				return _1a5b20470__evalEnum(_self_, _1a5b53c56_Enum((*(*(_22167_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1a5b53edc_TypeEnum((*((*(_22167_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8cee3b5:;
			{
				return _1a5b20bac__evalTypeEnum(_self_, _1a5b53edc_TypeEnum((*(*(_22167_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1a5b54a26_Struct((*((*(_22167_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8cee42b:;
			{
				return _1a5b213e9__evalStruct(_self_, _1a5b54a26_Struct((*(*(_22167_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else {
			_case_begin_1a8cee34e:;
			{
				jule::Ptr<_1a5b19aeb_Data> _22298_d = jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=(*((*(_22167_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_22298_d))._field_Model=jule::Any((*_22298_d.alloc)._field_Kind, &__jule_any_type84);
				return _22298_d;;
			}
		}
		_match_end_1a8cee519:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b371ce_evalStructStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1a59e7a84_StructIns> _223836_s, jule::Ptr<_1c80b653c_Token> _223851_ident) {
	jule::Ptr<_1a5b19aeb_Data> _22397_d = jule::new_ptr<_1a5b19aeb_Data>();;
	;
	jule::Ptr<_1a5a09cc7_Fn> _22437_method = _1a59e8aeb_FindMethod(_223836_s.ptr(), (*(_223851_ident))._field_Kind, true);;
	if ((_22437_method != nullptr)) {
		if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22437_method.alloc)._field_Public, (*_22437_method.alloc)._field_Token)))) {
			_1a5b1bd73_pushErr(_self_, _223851_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_223851_ident.alloc)._field_Kind, &__jule_any_type4)}));
			_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a5a0cca8_FnIns> _22508_ins = _1a5a0b537_instance(_22437_method);;
		(*(_22508_ins))._field_Owner=_223836_s;
		_1a97ea058_pushReference(_self_, &(_22508_ins));
		(*_22397_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a5a01e78_StructStaticIdentExprModel>(_1a5a01e78_StructStaticIdentExprModel{._field_Structure=_223836_s, ._field_Expr=(*_22397_d.alloc)._field_Model, ._field_Method=_22508_ins}), &__jule_any_type96);
		(*_22397_d.alloc)._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_22508_ins, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data1)});
		return _22397_d;;
	};
	jule::Ptr<_1a5ab1ee4_Var> _22647_sttc = _1a59e927d_FindStatic(_223836_s, (*_223851_ident.alloc)._field_Kind);;
	if ((_22647_sttc != nullptr)) {
		return _1a5b234a6_evalVar(_self_, _22647_sttc, _223851_ident);;
	};
	_1a5b1bd73_pushErr(_self_, _223851_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_223836_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*_223851_ident.alloc)._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b37685_evalTraitSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data> _227337_d, jule::Ptr<_1a5a1d181_Trait> _227351_trt, jule::Ptr<_1c80b653c_Token> _227368_ident) {
	jule::Ptr<_1a5a09cc7_Fn> _22747_f = _1a5a1dd30_FindMethod(_227351_trt.ptr(), (*(_227368_ident))._field_Kind);;
	if ((_22747_f == nullptr)) {
		_1a5b1bd73_pushErr(_self_, _227368_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_227351_trt.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_227368_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5a0b537_instance(_22747_f), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data1)}), ._field_Model=jule::Any(jule::new_ptr<_1a5a01241_TraitSubIdentExprModel>(_1a5a01241_TraitSubIdentExprModel{._field_Token=_227368_ident, ._field_Expr=(*(_227337_d))._field_Model, ._field_Method=_22747_f, ._field_Trt=_227351_trt}), &__jule_any_type97), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b37be6_evalStructSubIdentField(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _229344_d, jule::Ptr<_1a59e7a84_StructIns>* _229359_s, jule::Ptr<_1c80b653c_Token>* _229379_tok, jule::Ptr<_1a59e6ed4_FieldIns>* _229397_f) {
	jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _22947_model = jule::new_ptr<_1a5a01ad2_StructSubIdentExprModel>(_1a5a01ad2_StructSubIdentExprModel{._field_Token=(*(_229379_tok)), ._field_Expr=jule::new_ptr<_1a5b19aeb_Data>((*((*(_229344_d))))), ._field_Field=(*(_229397_f)), ._field_Owner=(*(_229359_s))});;
	(*((*(_229344_d))))._field_Model=jule::Any(_22947_model, &__jule_any_type98);
	(*((*(_229344_d))))._field_Kind=(*((*(_229397_f))))._field_Kind;
	(*((*(_229344_d))))._field_Lvalue=true;
	if (((*((*((*(_229397_f))))._field_Decl))._field_Mutable && (!((*((*(_229344_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)) {
				_case_begin_1a8d1285c:;
				{
					jule::Ptr<_1a5a5420b_scopeChecker> _23095_scope = _1a5a5783b_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a5a5420b_scopeChecker>((jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0));;
					(*((*(_229344_d))))._field_Mutable=(((*(_23095_scope))._field_owner != nullptr) && ((*(*_23095_scope.alloc)._field_owner.alloc)._field_Owner == (*(_229359_s))));
				}
			}
			_match_end_1a8d12807:;
		};
	};
	return (*(_229344_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b38257_evalStructSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data> _231638_d, jule::Ptr<_1a59e7a84_StructIns> _231652_s, jule::Ptr<_1a59cb3b4_SubIdentExpr> _231671_si, jule::Bool _231690_ref) {
	jule::Ptr<_1a59e6ed4_FieldIns> _23177_f = _1a59e8e3c_FindField(_231652_s.ptr(), (*((*(_231671_si))._field_Ident))._field_Kind);;
	if ((_23177_f != nullptr)) {
		if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23177_f.alloc)._field_Decl))._field_Public, (*(*_23177_f.alloc)._field_Decl.alloc)._field_Token)))) {
			_1a5b1bd73_pushErr(_self_, (*_231671_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_23177_f.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
			_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1a5b37be6_evalStructSubIdentField(_self_, &(_231638_d), &(_231652_s), &((*_231671_si.alloc)._field_Ident), &(_23177_f));;
	};
	;
	jule::Ptr<_1a5a09cc7_Fn> _23277_m = _1a59e8aeb_FindMethod(_231652_s, (*(*_231671_si.alloc)._field_Ident.alloc)._field_Kind, false);;
	if ((_23277_m == nullptr)) {
		_1a5b1bd73_pushErr(_self_, (*_231671_si.alloc)._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_231652_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(*_231671_si.alloc)._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s, (*(_23277_m))._field_Public, (*(_23277_m))._field_Token)))) {
		_1a5b1bd73_pushErr(_self_, (*_231671_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_23277_m))._field_Ident, &__jule_any_type4)}));
		_1a5b1c1d6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1a5a08ba5_IsRef((*(_23277_m))._field_Params[0LL].ptr()) && (!(_231690_ref)))) {
		_1a5b1bd73_pushErr(_self_, (*_231671_si.alloc)._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1a5b21e99_checkDeprecated(_self_, &((*(_23277_m))._field_Directives), (*_231671_si.alloc)._field_Ident);
	jule::Ptr<_1a5a0cca8_FnIns> _23437_ins = _1a5a0b537_instance(_23277_m);;
	(*(_23437_ins))._field_Owner=_231652_s;
	_1a97ea058_pushReference(_self_, &(_23437_ins));
	jule::Ptr<_1a5b19aeb_Data> _23467_model = jule::new_ptr<_1a5b19aeb_Data>((*(_231638_d)));;
	(*_231638_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a5a01ad2_StructSubIdentExprModel>(_1a5a01ad2_StructSubIdentExprModel{._field_Token=(*_231671_si.alloc)._field_Ident, ._field_Expr=_23467_model, ._field_Method=_23437_ins, ._field_Owner=_231652_s}), &__jule_any_type98);
	(*_231638_d.alloc)._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_23437_ins, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data1)});
	return _231638_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b38598_evalIntTypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _235733_ident) {
	;
	{
		auto &_match_expr{ (*(_235733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a9932107:;
			{
				jule::Ptr<_1b916c16d_Const> _23618_c = static__1b916c5ad_NewI64(_1b9167564_MaxI(jule::Str::lit("int", 3)));;
				(*(_23618_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c7988c23_primInt, ._field_Model=jule::Any(_23618_c, &__jule_any_type19), ._field_Constant=_23618_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a9932b0d:;
			{
				jule::Ptr<_1b916c16d_Const> _23708_c = static__1b916c5ad_NewI64(static_cast<jule::I64>(_1b9167b6e_Min(jule::Str::lit("int", 3))));;
				(*(_23708_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c7988c23_primInt, ._field_Model=jule::Any(_23708_c, &__jule_any_type19), ._field_Constant=_23708_c});;
			}
		}
		else {
			_case_begin_1a99317aa:;
			{
				_1a5b1bd73_pushErr(_self_, _235733_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_235733_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9931c50:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b388d9_evalUintTypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _238434_ident) {
	;
	{
		auto &_match_expr{ (*(_238434_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a9935ddb:;
			{
				jule::Ptr<_1b916c16d_Const> _23888_c = static__1b916c877_NewU64(_1b916782d_MaxU(jule::Str::lit("uint", 4)));;
				(*(_23888_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798885a_primUint, ._field_Model=jule::Any(_23888_c, &__jule_any_type19), ._field_Constant=_23888_c});;
			}
		}
		else {
			_case_begin_1a99357d1:;
			{
				_1a5b1bd73_pushErr(_self_, _238434_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_238434_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9935a34:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b38c2a_evalI8TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _240232_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_240232_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a99390ed:;
			{
				jule::Ptr<_1b916c16d_Const> _24088_c = static__1b916c5ad_NewI64(127LL);;
				(*(_24088_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c7988e65_primI8, ._field_Model=jule::Any(_24088_c, &__jule_any_type19), ._field_Constant=_24088_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a9939b04:;
			{
				jule::Ptr<_1b916c16d_Const> _24178_c = static__1b916c5ad_NewI64(-128LL);;
				(*(_24178_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c7988e65_primI8, ._field_Model=jule::Any(_24178_c, &__jule_any_type19), ._field_Constant=_24178_c});;
			}
		}
		else {
			_case_begin_1a993884a:;
			{
				_1a5b1bd73_pushErr(_self_, _240232_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_240232_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9938c68:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3906b_evalI16TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _243133_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a993d3bb:;
			{
				jule::Ptr<_1b916c16d_Const> _24378_c = static__1b916c5ad_NewI64(32767LL);;
				(*(_24378_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798920c_primI16, ._field_Model=jule::Any(_24378_c, &__jule_any_type19), ._field_Constant=_24378_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a993ddc2:;
			{
				jule::Ptr<_1b916c16d_Const> _24468_c = static__1b916c5ad_NewI64(-32768LL);;
				(*(_24468_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798920c_primI16, ._field_Model=jule::Any(_24468_c, &__jule_any_type19), ._field_Constant=_24468_c});;
			}
		}
		else {
			_case_begin_1a993cb18:;
			{
				_1a5b1bd73_pushErr(_self_, _243133_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_243133_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a993d036:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b393ac_evalI32TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _246033_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_246033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a9942689:;
			{
				jule::Ptr<_1b916c16d_Const> _24668_c = static__1b916c5ad_NewI64(2147483647LL);;
				(*(_24668_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c79894b5_primI32, ._field_Model=jule::Any(_24668_c, &__jule_any_type19), ._field_Constant=_24668_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a9943190:;
			{
				jule::Ptr<_1b916c16d_Const> _24758_c = static__1b916c5ad_NewI64(-2147483648LL);;
				(*(_24758_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c79894b5_primI32, ._field_Model=jule::Any(_24758_c, &__jule_any_type19), ._field_Constant=_24758_c});;
			}
		}
		else {
			_case_begin_1a9941dd6:;
			{
				_1a5b1bd73_pushErr(_self_, _246033_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_246033_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9942304:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b396ed_evalI64TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _248933_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_248933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a9946957:;
			{
				jule::Ptr<_1b916c16d_Const> _24958_c = static__1b916c5ad_NewI64(jule::MAX_I64);;
				(*(_24958_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798976d_primI64, ._field_Model=jule::Any(_24958_c, &__jule_any_type19), ._field_Constant=_24958_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a994745d:;
			{
				jule::Ptr<_1b916c16d_Const> _25048_c = static__1b916c5ad_NewI64(jule::MIN_I64);;
				(*(_25048_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798976d_primI64, ._field_Model=jule::Any(_25048_c, &__jule_any_type19), ._field_Constant=_25048_c});;
			}
		}
		else {
			_case_begin_1a99461a4:;
			{
				_1a5b1bd73_pushErr(_self_, _248933_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_248933_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99465c2:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b39a3e_evalU8TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _251832_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251832_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a994a84b:;
			{
				jule::Ptr<_1b916c16d_Const> _25238_c = static__1b916c877_NewU64(255LLU);;
				(*(_25238_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c7989a26_primU8, ._field_Model=jule::Any(_25238_c, &__jule_any_type19), ._field_Constant=_25238_c});;
			}
		}
		else {
			_case_begin_1a994a054:;
			{
				_1a5b1bd73_pushErr(_self_, _251832_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_251832_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a994a450:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b39d80_evalU16TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _253733_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a994d5c9:;
			{
				jule::Ptr<_1b916c16d_Const> _25428_c = static__1b916c877_NewU64(65535LLU);;
				(*(_25428_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c7989cce_primU16, ._field_Model=jule::Any(_25428_c, &__jule_any_type19), ._field_Constant=_25428_c});;
			}
		}
		else {
			_case_begin_1a994ccd2:;
			{
				_1a5b1bd73_pushErr(_self_, _253733_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_253733_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a994d1cd:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3a1c1_evalU32TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _255633_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a9951357:;
			{
				jule::Ptr<_1b916c16d_Const> _25618_c = static__1b916c877_NewU64(4294967295LLU);;
				(*(_25618_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798a087_primU32, ._field_Model=jule::Any(_25618_c, &__jule_any_type19), ._field_Constant=_25618_c});;
			}
		}
		else {
			_case_begin_1a9950a60:;
			{
				_1a5b1bd73_pushErr(_self_, _255633_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_255633_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9950e5b:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3a512_evalU64TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _257533_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a99540d5:;
			{
				jule::Ptr<_1b916c16d_Const> _25808_c = static__1b916c877_NewU64(jule::MAX_U64);;
				(*(_25808_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798a571_primU64, ._field_Model=jule::Any(_25808_c, &__jule_any_type19), ._field_Constant=_25808_c});;
			}
		}
		else {
			_case_begin_1a99537dd:;
			{
				_1a5b1bd73_pushErr(_self_, _257533_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_257533_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9953bd9:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3a853_evalF32TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _259433_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_259433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a995757d:;
			{
				jule::Ptr<_1b916c16d_Const> _26018_c = static__1b916d1c4_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26018_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798a7b3_primF32, ._field_Model=jule::Any(_26018_c, &__jule_any_type19), ._field_Constant=_26018_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a9958084:;
			{
				jule::Ptr<_1b916c16d_Const> _26108_c = static__1b916d1c4_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_26108_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798a7b3_primF32, ._field_Model=jule::Any(_26108_c, &__jule_any_type19), ._field_Constant=_26108_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1a99580ea:;
			{
				jule::Ptr<_1b916c16d_Const> _26198_c = static__1b916d1c4_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26198_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798a7b3_primF32, ._field_Model=jule::Any(_26198_c, &__jule_any_type19), ._field_Constant=_26198_c});;
			}
		}
		else {
			_case_begin_1a9956d52:;
			{
				_1a5b1bd73_pushErr(_self_, _259433_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_259433_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a99571c6:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3ab94_evalF64TypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1c80b653c_Token> _263333_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_263333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1a995cd25:;
			{
				jule::Ptr<_1b916c16d_Const> _26408_c = static__1b916d1c4_NewF64(jule::MAX_F64);;
				(*(_26408_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798a9c2_primF64, ._field_Model=jule::Any(_26408_c, &__jule_any_type19), ._field_Constant=_26408_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1a995d82b:;
			{
				jule::Ptr<_1b916c16d_Const> _26498_c = static__1b916d1c4_NewF64(jule::MIN_F64);;
				(*(_26498_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798a9c2_primF64, ._field_Model=jule::Any(_26498_c, &__jule_any_type19), ._field_Constant=_26498_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1a995d892:;
			{
				jule::Ptr<_1b916c16d_Const> _26588_c = static__1b916d1c4_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_26588_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_untyped=true, ._field_Kind=_1c798a9c2_primF64, ._field_Model=jule::Any(_26588_c, &__jule_any_type19), ._field_Constant=_26588_c});;
			}
		}
		else {
			_case_begin_1a995c5e9:;
			{
				_1a5b1bd73_pushErr(_self_, _263333_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_263333_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a995c96d:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3b090_evalPrimStatic(_1a5b1b823_Eval* _self_, jule::Str _267230_kind, jule::Ptr<_1c80b653c_Token> _267241_ident) {
	{
		auto &_match_expr{ _267230_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a9962511:;
			{
				return _1a5b38598_evalIntTypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1a9962eb2:;
			{
				return _1a5b388d9_evalUintTypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a9963028:;
			{
				return _1a5b38c2a_evalI8TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a99621e2:;
			{
				return _1a5b3906b_evalI16TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a9962258:;
			{
				return _1a5b393ac_evalI32TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a99622be:;
			{
				return _1a5b396ed_evalI64TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a9962335:;
			{
				return _1a5b39a3e_evalU8TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a9963116:;
			{
				return _1a5b39d80_evalU16TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a996317c:;
			{
				return _1a5b3a1c1_evalU32TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a99631e3:;
			{
				return _1a5b3a512_evalU64TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a9963259:;
			{
				return _1a5b3a853_evalF32TypeStatic(_self_, _267241_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a99632c0:;
			{
				return _1a5b3ab94_evalF64TypeStatic(_self_, _267241_ident);;
			}
		}
		else {
			_case_begin_1a995da6d:;
			{
				_1a5b1bd73_pushErr(_self_, _267241_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_267230_kind, &__jule_any_type4),jule::Any((*(_267241_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a995dae5:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3b48b_evalTypeStatic(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data> _270434_d, jule::Ptr<_1a59cb3b4_SubIdentExpr> _270448_si) {
	{
		
		if ((_1a5b534a3_Prim((*(_270434_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a99677e1:;
			{
				return _1a5b3b090_evalPrimStatic(_self_, _1a5b58c6c_Str(_1a5b534a3_Prim((*_270434_d.alloc)._field_Kind).ptr()), (*(_270448_si))._field_Ident);;
			}
		}
		else if ((_1a5b53c56_Enum((*(_270434_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a99685e4:;
			{
				return _1a5b368d7_evalEnumStatic(_self_, _1a5b53c56_Enum((*_270434_d.alloc)._field_Kind), (*(_270448_si))._field_Ident);;
			}
		}
		else if ((_1a5b53edc_TypeEnum((*(_270434_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a996865a:;
			{
				return _1a5b36cd3_evalTypeEnumStatic(_self_, _1a5b53edc_TypeEnum((*_270434_d.alloc)._field_Kind), (*(_270448_si))._field_Ident);;
			}
		}
		else if ((_1a5b54a26_Struct((*(_270434_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a996748e:;
			{
				return _1a5b371ce_evalStructStatic(_self_, _1a5b54a26_Struct((*_270434_d.alloc)._field_Kind), (*(_270448_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1a9967428:;
			{
				_1a5b1bd73_pushErr(_self_, (*(_270448_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_270434_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a996736d:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a9970530_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a34a27_comptimeTypeInfo>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a5b19aeb_Data> _27217_cd = _1a5a3ac2b_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a5b1bd73_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}

inline jule::Ptr<_1a5b19aeb_Data> _1a9974b83_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a25bc2_comptimeStructField>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a5b19aeb_Data> _27217_cd = _1a5a27575_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a5b1bd73_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}

inline jule::Ptr<_1a5b19aeb_Data> _1a9979292_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a2c239_comptimeEnumField>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a5b19aeb_Data> _27217_cd = _1a5a2d2c3_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a5b1bd73_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}

inline jule::Ptr<_1a5b19aeb_Data> _1a997d8e5_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a2ebcb_comptimeParam>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a5b19aeb_Data> _27217_cd = _1a5a31b34_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a5b1bd73_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}

inline jule::Ptr<_1a5b19aeb_Data> _1a9983279_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a28e7d_comptimeStatic>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a5b19aeb_Data> _27217_cd = _1a5a2a8a8_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a5b1bd73_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}

inline jule::Ptr<_1a5b19aeb_Data> _1a9987888_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a3b039_comptimeValue>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a5b19aeb_Data> _27217_cd = _1a5a3d57a_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a5b1bd73_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}

inline jule::Ptr<_1a5b19aeb_Data> _1a998be97_comptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5a3ee83_comptimeFile>* _272054_ct, jule::Ptr<_1a5b19aeb_Data>* _272074_d, jule::Ptr<_1a59cb3b4_SubIdentExpr>* _272085_si) {
	jule::Ptr<_1a5b19aeb_Data> _27217_cd = _1a5a418be_subIdent((*(_272054_ct)), &((*((*((*(_272085_si))))._field_Ident))._field_Kind));;
	if ((_27217_cd == nullptr)) {
		_1a5b1bd73_pushErr(_self_, (*((*(_272085_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_272074_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _27217_cd;;
}



inline __jule_tuple_x_1a5b19aeb_Data__jule_tuple_bool _1a5b3bd3d_tryComptimeObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data>* _272843_d, jule::Ptr<_1a59cb3b4_SubIdentExpr> _272857_si) {
	__jule_tuple_x_1a5b19aeb_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1a5b56d69_comptimeTypeInfo((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a996d94b:;
			{
				jule::Ptr<_1a5a34a27_comptimeTypeInfo> _27318_ct = _1a5b56d69_comptimeTypeInfo((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a9970530_comptimeObjSubIdent(_self_, &(_27318_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a5b55a7c_comptimeStructField((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a996d53e:;
			{
				jule::Ptr<_1a5a25bc2_comptimeStructField> _27348_ct = _1a5b55a7c_comptimeStructField((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a9974b83_comptimeObjSubIdent(_self_, &(_27348_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a5b56099_comptimeEnumField((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a996d5b6:;
			{
				jule::Ptr<_1a5a2c239_comptimeEnumField> _27378_ct = _1a5b56099_comptimeEnumField((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a9979292_comptimeObjSubIdent(_self_, &(_27378_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a5b565b6_comptimeParam((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a996d63d:;
			{
				jule::Ptr<_1a5a2ebcb_comptimeParam> _27408_ct = _1a5b565b6_comptimeParam((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a997d8e5_comptimeObjSubIdent(_self_, &(_27408_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a5b57386_comptimeStatic((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a996d6b5:;
			{
				jule::Ptr<_1a5a28e7d_comptimeStatic> _27438_ct = _1a5b57386_comptimeStatic((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a9983279_comptimeObjSubIdent(_self_, &(_27438_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a5b5761c_comptimeValue((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a996d73c:;
			{
				jule::Ptr<_1a5a3b039_comptimeValue> _27468_ct = _1a5b5761c_comptimeValue((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a9987888_comptimeObjSubIdent(_self_, &(_27468_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a5b578a3_comptimeFile((*((*(_272843_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a996d7b4:;
			{
				jule::Ptr<_1a5a3ee83_comptimeFile> _27498_ct = _1a5b578a3_comptimeFile((*((*(_272843_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1a998be97_comptimeObjSubIdent(_self_, &(_27498_ct), _272843_d, &(_272857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a996d4c8:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a996d42e:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3c239_evalObjSubIdent(_1a5b1b823_Eval* _self_, jule::Ptr<_1a5b19aeb_Data> _275635_d, jule::Ptr<_1a59cb3b4_SubIdentExpr> _275649_si) {
	if (_1c80b8e24_IsIgnoreIdent((*((*(_275649_si))._field_Ident))._field_Kind)) {
		_1a5b1bd73_pushErr(_self_, (*_275649_si.alloc)._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1a5b19aeb_Data> _27638_compData;
		jule::Bool _276318_ok;
		({
			__jule_tuple_x_1a5b19aeb_Data__jule_tuple_bool __jule_assign_result = _1a5b3bd3d_tryComptimeObjSubIdent(_self_, &(_275635_d), _275649_si);
			_27638_compData = __jule_assign_result.__jule_result_arg0;
			_276318_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_276318_ok) {
			return _27638_compData;;
		};
	};
	jule::Ptr<_1a5b50d52_TypeKind> _27697_kind = (*(_275635_d))._field_Kind;;
	{
		
		if ((_1a5b539c0_Ptr((*_275635_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9992101:;
			{
				jule::Ptr<_1a5b60c1e_Ptr> _27724_ptr = _1a5b539c0_Ptr((*_275635_d.alloc)._field_Kind);;
				if (_1a5b61758_IsUnsafe(_27724_ptr.ptr())) {
					goto _match_end_1a9992057;
				};
				if ((!(_1a5b1c868_isUnsafe(_self_)))) {
					_1a5b1bd73_pushErr(_self_, (*_275649_si.alloc)._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_27697_kind=(*(_1a5b539c0_Ptr((*_275635_d.alloc)._field_Kind)))._field_Elem;
				_1a5b4c843_makeImplicitDeref(&(_275635_d), (*_275649_si.alloc)._field_Ident);
			}
		}
		else if ((_1a5b53739_Sptr((*_275635_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a999219a:;
			{
				_27697_kind=(*(_1a5b53739_Sptr((*_275635_d.alloc)._field_Kind)))._field_Elem;
				_1a5b4c843_makeImplicitDeref(&(_275635_d), (*_275649_si.alloc)._field_Ident);
			}
		}
		_match_end_1a9992057:;
	};
	{
		
		if ((_1a5b54cac_Trait((*_275635_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a999260c:;
			{
				return _1a5b37685_evalTraitSubIdent(_self_, _275635_d, _1a5b54cac_Trait((*_275635_d.alloc)._field_Kind), (*_275649_si.alloc)._field_Ident);;
			}
		}
		else if ((_1a5b54a26_Struct(_27697_kind.ptr()) != nullptr)) {
			_case_begin_1a9995797:;
			{
				jule::Ptr<_1a59e7a84_StructIns> _27904_s = _1a5b54a26_Struct(_27697_kind);;
				if (_1a5b49ab5_isInstancedStruct(_27904_s)) {
					jule::Bool _27929_usedReferenceElem = (_1a5b53739_Sptr((*_275635_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1a5b38257_evalStructSubIdent(_self_, _275635_d, _1a5b54a26_Struct(_27697_kind), _275649_si, _27929_usedReferenceElem);;
				};
			}
		}
		_match_end_1a9995b71:;
	};
	_1a5b1bd73_pushErr(_self_, (*_275649_si.alloc)._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_275635_d.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3c57a_evalSubIdent(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cb3b4_SubIdentExpr> _280033_si) {
	jule::Ptr<_1a5b50d52_TypeKind> _28017_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28017_prefix;
	});;
	jule::Ptr<_1a5b19aeb_Data> _28047_d = _1a5b3dacb_evalExprKind(_self_, (*((*(_280033_si))._field_Expr))._field_Kind);;
	if ((_28047_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28047_d))._field_Decl) {
		return _1a5b3b48b_evalTypeStatic(_self_, _28047_d, _280033_si);;
	};
	return _1a5b3c239_evalObjSubIdent(_self_, _28047_d, _280033_si);;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3c8bb_evalTuple(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59c8d95_TupleExpr> _281430_tup) {
	jule::Ptr<_1a5b5da1e_Tuple> _28157_tupT = jule::new_ptr<_1a5b5da1e_Tuple>();;
	(*_28157_tupT.alloc)._field_Types=jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>::alloc(0LL, (*(_281430_tup))._field_Expr.len());
	jule::Ptr<_1a5a0264e_TupleExprModel> _28187_model = jule::new_ptr<_1a5a0264e_TupleExprModel>(_1a5a0264e_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1a5b19aeb_Data>>::alloc(0LL, (*_281430_tup.alloc)._field_Expr.len())});;
	jule::Bool _28227_ok = true;;
	{
		auto expr = &((*_281430_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99a061a:;
		if (it != expr_end) {
			jule::Ptr<_1a59c82a1_Expr> _282315_expr = *it;
			{
				jule::Ptr<_1a5b19aeb_Data> _28248_d = _1a5b3e8e0_evalExpr(_self_, _282315_expr);;
				if ((_28248_d == nullptr)) {
					_28227_ok=false;
					goto _iter_next_1a99a061a;
				};
				(*_28157_tupT.alloc)._field_Types=jule::append((*_28157_tupT.alloc)._field_Types,jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>::make({(*(_28248_d))._field_Kind}));
				(*(_28187_model))._field_Datas=jule::append((*_28187_model.alloc)._field_Datas,jule::Slice<jule::Ptr<_1a5b19aeb_Data>>::make({_28248_d}));
			}
			_iter_next_1a99a061a:;
			++it;
			goto _iter_begin_1a99a061a;
		}
		_iter_end_1a99a061a:;
	};
	if ((!(_28227_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_28157_tupT, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data23)}), ._field_Model=jule::Any(_28187_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3ccb7_evalMap(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a5b5e5be_Map> _284328_m, jule::Ptr<_1a59cd7a1_BraceLit> _284341_lit) {
	jule::Ptr<_1a5a0062a_MapExprModel> _28447_model = jule::new_ptr<_1a5a0062a_MapExprModel>(_1a5a0062a_MapExprModel{._field_KeyKind=(*(_284328_m))._field_Key, ._field_ValKind=(*_284328_m.alloc)._field_Val, });;
	{
		auto expr = &((*(_284341_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a99a43cc:;
		if (it != expr_end) {
			jule::Ptr<_1a59c82a1_Expr> _284915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_284915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1a99a5972:;
						{
							goto _match_end_1a99a4cc3;
						}
					}
					else {
						_case_begin_1a99a4d28:;
						{
							_1a5b1bd73_pushErr(_self_.ptr(), (*(_284341_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1a99a4cc3:;
				};
				jule::Ptr<_1a59ce0cb_KeyValPair> _28598_pair = (*(_284915_expr))._field_Kind.cast_ptr<_1a59ce0cb_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1a5b19aeb_Data> _28618_key = _1a5b3e8e0_evalExpr(_self_, (*(_28598_pair))._field_Key);;
				if ((_28618_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1a5b19aeb_Data> _28668_val = _1a5b3e8e0_evalExpr(_self_, (*_28598_pair.alloc)._field_Val);;
				if ((_28668_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1a5a9db5c_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284328_m.alloc)._field_Key), &(_28618_key), &((*((*_28598_pair.alloc)._field_Key))._field_Token))) {
					_1a5a997c3_checkAssignType((*_self_.alloc)._field_s, false, &((*_284328_m.alloc)._field_Key), &(_28618_key), (*(*_28598_pair.alloc)._field_Key.alloc)._field_Token);
				};
				if (_1a5a9db5c_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284328_m.alloc)._field_Val), &(_28668_val), &((*((*_28598_pair.alloc)._field_Val))._field_Token))) {
					_1a5a997c3_checkAssignType((*_self_.alloc)._field_s, false, &((*_284328_m.alloc)._field_Val), &(_28668_val), (*(*_28598_pair.alloc)._field_Val.alloc)._field_Token);
				};
				(*(_28447_model))._field_Entries=jule::append((*_28447_model.alloc)._field_Entries,jule::Slice<jule::Ptr<_1a5a00174_KeyValPairExprModel>>::make({jule::new_ptr<_1a5a00174_KeyValPairExprModel>(_1a5a00174_KeyValPairExprModel{._field_Key=(*(_28618_key))._field_Model, ._field_Val=(*(_28668_val))._field_Model})}));
			}
			_iter_next_1a99a43cc:;
			++it;
			goto _iter_begin_1a99a43cc;
		}
		_iter_end_1a99a43cc:;
	};
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_284328_m, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Model=jule::Any(_28447_model, &__jule_any_type99), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3d108_evalBraceLit(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cd7a1_BraceLit> _289233_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1a99ae1b7:;
			{
				_1a5b1bd73_pushErr(_self_, (*(_289233_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a5b55043_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a99ae22d:;
			{
				return _1a5b3ccb7_evalMap(_self_, _1a5b55043_Map((*_self_.alloc)._field_prefix), _289233_lit);;
			}
		}
		else if ((_1a5b54a26_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a99ae294:;
			{
				return _1a5b344b7_evalStructLitExplicit(_self_, _1a5b54a26_Struct((*_self_.alloc)._field_prefix), (*(_289233_lit))._field_Exprs, (*_289233_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1a99ad507:;
			{
				_1a5b1bd73_pushErr(_self_.ptr(), (*(_289233_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a99ad408:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3d449_evalAnonFunc(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59d5b2c_FnDecl> _290733_decl) {
	_1a5b62c10_typeChecker _29087_tc = _1a5b62c10_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, };;
	jule::Ptr<_1a5a0cca8_FnIns> _29137_ins = _1a5b698d7_buildFunc(&_29087_tc, _290733_decl);;
	if ((_29137_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29137_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _29187_captured = jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::alloc(0LL, 0LL);;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)) {
			_case_begin_1a99b3a07:;
			{
				jule::Ptr<_1a5a5420b_scopeChecker> _29218_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1a5a5420b_scopeChecker>((jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0);;
				jule::Ptr<_1a5a5420b_scopeChecker> _29228_scc = _1a5a66295_newChildChecker(_29218_sc);;
				(*(_29228_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a5a52b88_scopeLabel>>>(nullptr);
				(*_29228_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a5a5321b_scopeGoto>>>(nullptr);
				(*_29228_scc.alloc)._field_owner=_29137_ins;
				(*_29228_scc.alloc)._field_childIndex=0LL;
				(*_29228_scc.alloc)._field_it=0LLU;
				(*_29228_scc.alloc)._field_cse=0LLU;
				(*_29228_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>>)((&(_29187_captured))));
				_1a5aabc36_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29137_ins), &(_29228_scc));
			}
		}
		else {
			_case_begin_1a99b49d6:;
			{
				_1a5aac352_checkFnIns((*_self_.alloc)._field_s, &(_29137_ins));
			}
		}
		_match_end_1a99b4981:;
	};
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_29137_ins, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data1)}), ._field_Model=jule::Any(jule::new_ptr<_1a59eec9a_AnonFnExprModel>(_1a59eec9a_AnonFnExprModel{._field_Captured=_29187_captured, ._field_Func=_29137_ins, ._field_Global=_1a5b1caee_isGlobal(_self_)}), &__jule_any_type100), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3d78a_evalBinary(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59cb86a_BinaryExpr> _294531_op) {
	_1a5b41d43_binaryEval _29467_bs = static__1a5b423e8_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1a5b5892b_Prim> _29494_prim = _1a5b534a3_Prim((*_self_.alloc)._field_prefix);;
		if (((_29494_prim == nullptr) || (!(_1b916bac9_IsNum(_1a5b58c6c_Str(_29494_prim.ptr())))))) {
			jule::Ptr<_1a5b50d52_TypeKind> _29519_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_29519_prefix;
			});;
			return _1a5b47dc1_eval(&_29467_bs, &(_294531_op));;
		};
	};
	return _1a5b47dc1_eval(&_29467_bs, &(_294531_op));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3dacb_evalExprKind(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Any _296033_kind) {
	{
		auto &_match_expr{ _296033_kind };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a99bd36e:;
			{
				jule::Ptr<_1a59c856a_RangeExpr> _29638_e = _296033_kind.unsafe_cast_ptr<_1a59c856a_RangeExpr>();;
				return _1a5b3dacb_evalExprKind(_self_, (*((*(_29638_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a99bd5a0:;
			{
				return _1a5b1e3a3_evalLit(_self_.ptr(), _296033_kind.unsafe_cast_ptr<_1a59c923b_LitExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a99bd616:;
			{
				return _1a5b240de_evalIdent(_self_.ptr(), _296033_kind.unsafe_cast_ptr<_1a59c9abb_IdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a99bd67c:;
			{
				return _1a5b24430_evalUnary(_self_, _296033_kind.unsafe_cast_ptr<_1a59ca35d_UnaryExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1a99bd6e3:;
			{
				return _1a5b24771_evalVariadic(_self_, _296033_kind.unsafe_cast_ptr<_1a59ca737_VariadicExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1a99bd759:;
			{
				return _1a5b24ab2_evalUnsafe(_self_, _296033_kind.unsafe_cast_ptr<_1a59c9615_UnsafeExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a99bd7c0:;
			{
				return _1a5b2a568_evalSliceExpr(_self_, _296033_kind.unsafe_cast_ptr<_1a59ce807_SliceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1a99bdb77:;
			{
				return _1a5b2dbed_evalIndexing(_self_, _296033_kind.unsafe_cast_ptr<_1a59d0264_IndexingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1a99bdbdd:;
			{
				return _1a5b3002e_evalSlicing(_self_, _296033_kind.unsafe_cast_ptr<_1a59d08c4_SlicingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1a99bdc54:;
			{
				return _1a5b33bc0_evalCast(_self_, _296033_kind.unsafe_cast_ptr<_1a59cab11_CastExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a99bdcba:;
			{
				return _1a5b34011_evalNsSelection(_self_.ptr(), _296033_kind.unsafe_cast_ptr<_1a59caeda_NsSelectionExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1a99bdd42:;
			{
				return _1a5b34808_evalStructLit(_self_, _296033_kind.unsafe_cast_ptr<_1a59cd2ea_StructLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1a99bddb9:;
			{
				return _1a5b34dd0_evalType(_self_.ptr(), _296033_kind.unsafe_cast_ptr<_1a59c3e6c_TypeDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a99bde41:;
			{
				return _1a5b364db_evalFnCall(_self_, _296033_kind.unsafe_cast_ptr<_1a59cbeca_FnCallExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a99bdeb8:;
			{
				return _1a5b3c57a_evalSubIdent(_self_, _296033_kind.unsafe_cast_ptr<_1a59cb3b4_SubIdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a99be040:;
			{
				return _1a5b3c8bb_evalTuple(_self_, _296033_kind.unsafe_cast_ptr<_1a59c8d95_TupleExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1a99be0b7:;
			{
				return _1a5b3d108_evalBraceLit(_self_, _296033_kind.unsafe_cast_ptr<_1a59cd7a1_BraceLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a99be13e:;
			{
				return _1a5b3d449_evalAnonFunc(_self_, _296033_kind.unsafe_cast_ptr<_1a59d5b2c_FnDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1a99be1b6:;
			{
				return _1a5b3d78a_evalBinary(_self_, _296033_kind.unsafe_cast_ptr<_1a59cb86a_BinaryExpr>());;
			}
		}
		else {
			_case_begin_1a99bd539:;
			{
				return nullptr;;
			}
		}
		_match_end_1a99bd4d4:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3de1c_eval1(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59c82a1_Expr> _300826_expr) {
	jule::Ptr<_1a5b19aeb_Data> _30097_d = _1a5b3dacb_evalExprKind(_self_, (*(_300826_expr))._field_Kind);;
	if (((_30097_d == nullptr) || ((*(_30097_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1a5b54790_Fn((*(_30097_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a99ca843:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _30168_f = _1a5b54790_Fn((*(_30097_d))._field_Kind.ptr());;
				if (_1a5a0e23d_IsBuiltin(_30168_f.ptr())) {
					_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*_300826_expr.alloc)._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1a99c9e3b;
				};
				if (((*_30168_f.alloc)._field_Generics.len() != (*((*_30168_f.alloc)._field_Decl))._field_Generics.len())) {
					_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_300826_expr.alloc)._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				} else if (((!((*((*_30168_f.alloc)._field_Decl))._field_Statically)) && _1a5a0a4d1_IsMethod((*_30168_f.alloc)._field_Decl))) {
					_1a5a91cb5_pushErr((*_self_.alloc)._field_s, (*_300826_expr.alloc)._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				} else {
					(*_30168_f.alloc)._field_AsAnon=true;
				};
			}
		}
		_match_end_1a99c9e3b:;
	};
	return _30097_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3e25d_eval(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59c82a1_Expr> _303625_expr) {
	jule::Ptr<_1a5b19aeb_Data> _30377_d = _1a5b3de1c_eval1(_self_, _303625_expr);;
	if ((_30377_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1a5b55560_comptime((*(_30377_d))._field_Kind.ptr()))) {
		_1a5a91cb5_pushErr((*_self_.alloc)._field_s.ptr(), (*(_303625_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _30377_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3e59e_evalExpr1(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59c82a1_Expr> _305130_expr) {
	jule::Ptr<_1a5b19aeb_Data> _30527_d = _1a5b3de1c_eval1(_self_, _305130_expr);;
	{
		
		if ((_30527_d == nullptr)) {
			_case_begin_1a99d3a5a:;
			{
				return nullptr;;
			}
		}
		else if ((*(_30527_d))._field_Decl) {
			_case_begin_1a99d3b04:;
			{
				_1a5b1bd73_pushErr(_self_, (*(_305130_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a99d39d3:;
			{
				return _30527_d;;
			}
		}
		_match_end_1a99d396c:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b3e8e0_evalExpr(jule::Ptr<_1a5b1b823_Eval> _self_, jule::Ptr<_1a59c82a1_Expr> _306729_expr) {
	jule::Ptr<_1a5b19aeb_Data> _30687_d = _1a5b3e25d_eval(_self_, _306729_expr);;
	{
		
		if ((_30687_d == nullptr)) {
			_case_begin_1a99d594c:;
			{
				return nullptr;;
			}
		}
		else if ((*(_30687_d))._field_Decl) {
			_case_begin_1a99d59e6:;
			{
				_1a5b1bd73_pushErr(_self_, (*(_306729_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a99d58c5:;
			{
				return _30687_d;;
			}
		}
		_match_end_1a99d585e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b1b823_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a5b3eda7_unaryEval static__1a5b402e7_new(jule::Ptr<_1a5b1b823_Eval> _308820_e) {
	return _1a5b3eda7_unaryEval{._field_e=_308820_e, };;
}



inline void _1a5b404e5_minus(_1a5b3eda7_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1a99d7674:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a5b534a3_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a99d7a5e:;
			{
				if ((!(_1b916bac9_IsNum(_1a5b5121a_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a5b54a26_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a99d7333:;
			{
				if (((*(_1a5b54a26_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a99d72bc:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a99d7212:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a5b1a503_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b9171b78_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a99dbd71:;
				{
					_1b9170baa_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_1b916e57c_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b917113e_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a99dbe5e:;
				{
					_1b91700d8_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_1b916da43_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b91713c5_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a99dba30:;
				{
					_1b91700d8_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_1b916e813_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1a99db9a8:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3126:5"));;
				}
			}
			_match_end_1a99db90e:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a59ec35d_UnaryExprModel>(_1a59ec35d_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5b19aeb_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a5b406e3_plus(_1a5b3eda7_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1a99e24d6:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a5b534a3_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a99e28c1:;
			{
				if ((!(_1b916bac9_IsNum(_1a5b5121a_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a5b54a26_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a99e2195:;
			{
				if (((*(_1a5b54a26_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a99e212e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a99e2030:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a5b1a503_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b9171b78_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a99e6bd3:;
				{
					_1b9170baa_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_1b916e57c_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b917113e_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a99e6cc1:;
				{
					_1b91700d8_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_1b916da43_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b91713c5_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a99e6892:;
				{
					_1b91700d8_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_1b916e813_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1a99e681a:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3171:5"));;
				}
			}
			_match_end_1a99e6771:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a59ec35d_UnaryExprModel>(_1a59ec35d_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5b19aeb_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a5b408e1_caret(_1a5b3eda7_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1a99ec326:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a5b534a3_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a99ec711:;
			{
				if ((!(_1b916b502_IsInt(_1a5b5121a_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a5b54a26_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a99ebed5:;
			{
				if (((*(_1a5b54a26_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a99ebe6e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a99ebd70:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a5b1a503_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b917113e_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a9a01a12:;
				{
					_1b91700d8_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_1b916da43_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b91713c5_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a9a01b00:;
				{
					_1b9170391_SetU64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_1b916dcc9_ReadU64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1a9a0165a:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3214:5"));;
				}
			}
			_match_end_1a9a015b1:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a59ec35d_UnaryExprModel>(_1a59ec35d_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5b19aeb_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a5b40ade_excl(_1a5b3eda7_unaryEval* _self_) {
	jule::Ptr<_1a5b5892b_Prim> _32283_t = _1a5b534a3_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32283_t == nullptr) || (!(_1a5b5bb2c_IsBool(_32283_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1a5b1a503_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b917165b_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1a9a07c7c:;
				{
					_1b9170649_SetBool((*(*(_self_))._field_d.alloc)._field_Constant, (!(_1b916e060_ReadBool((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1a9a078c5:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3242:5"));;
				}
			}
			_match_end_1a9a0781a:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a59ec35d_UnaryExprModel>(_1a59ec35d_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5b19aeb_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1a5b40cdc_star(_1a5b3eda7_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1a59ec35d_UnaryExprModel>(_1a59ec35d_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5b19aeb_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1a5b539c0_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a0b5cc:;
			{
				if ((!(_1a5b1c868_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1a5b1bd73_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a5b60c1e_Ptr> _32678_t = _1a5b539c0_Ptr((*(*(_self_))._field_d.alloc)._field_Kind);;
				if (_1a5b61758_IsUnsafe(_32678_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_32678_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1a5b53739_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9a0b9b7:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1a5b53739_Sptr((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1a9a0b225:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a9a0a246:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1a5b40eda_amper(_1a5b3eda7_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a9a14b79:;
			{
				jule::Ptr<_1a59ecc32_StructLitExprModel> _32898_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1a59ecc32_StructLitExprModel>();;
				_1a5b48c29_makeStructLitAlloc(&((*(_self_))._field_d), &(_32898_lit));
			}
		}
		else {
			_case_begin_1a9a1212c:;
			{
				{
					
					if (_1a5b6bc3b_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1a9a129e0:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5b60c1e_Ptr>(_1a5b60c1e_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data26)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1a59ec35d_UnaryExprModel>(_1a59ec35d_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5b19aeb_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1a9a11c31:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1a9a125b1:;
				};
			}
		}
		_match_end_1a9a120c7:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1a5b411d8_typeDecl(_1a5b3eda7_unaryEval* _self_) {
	_1a5b62c10_typeChecker _33147_tc = _1a5b62c10_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a9a18683:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b68100_buildPtrFromType(&_33147_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data26)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a9a1a19b:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6796d_buildSptrFromType(&_33147_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data21)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else {
			_case_begin_1a9a17c9d:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a9a182dc:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1a5b413d6_evalData(_1a5b3eda7_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a9a1dd1a:;
			{
				jule::Ptr<_1a5b50d52_TypeKind> _33398_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1a5b3e25d_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_33398_prefix;
			}
		}
		else {
			_case_begin_1a9a18353:;
			{
				(*(_self_))._field_d=_1a5b3e25d_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1a9a1d91e:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b41727_eval(_1a5b3eda7_unaryEval* _self_, jule::Ptr<_1a59ca35d_UnaryExpr> _334824_u) {
	(*(_self_))._field_u=_334824_u;
	_1a5b413d6_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1a5b411d8_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1a5b50d52_TypeKind> _33593_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a9a23490:;
			{
				_1a5b404e5_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a9a23506:;
			{
				_1a5b406e3_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a9a2356c:;
			{
				_1a5b408e1_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1a9a235d3:;
			{
				_1a5b40ade_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a9a23649:;
			{
				_1a5b40cdc_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a9a236b0:;
			{
				_1a5b40eda_amper(_self_);
			}
		}
		else {
			_case_begin_1a9a22e51:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1a9a23429:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a9a23baa:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str(_33593_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1a5b1a503_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1a9a21b53:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1a9a256c3:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b3eda7_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1a5b41d43_binaryEval static__1a5b423e8_newPlain(jule::Ptr<_1a5b1b823_Eval> _339625_e) {
	return _1a5b41d43_binaryEval{._field_e=_339625_e, };;
}



inline _1a5b41d43_binaryEval static__1a5b4276c_new(jule::Ptr<_1a5b1b823_Eval> _340220_e, jule::Ptr<_1c80b653c_Token> _340234_op) {
	return _1a5b41d43_binaryEval{._field_e=_340220_e, ._field_op=_340234_op};;
}



inline jule::Bool _1a5b42a03_checkTypeCompatibility(_1a5b41d43_binaryEval* _self_) {
	return _1a5a9ab04_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1a5b42c89_checkStructCommonOperatorCompatibility(_1a5b41d43_binaryEval* _self_) {
	jule::Ptr<_1a5a0cca8_FnIns> _341611_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1a9a2ae15:;
			{
				_341611_overload=(*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a9a2aac4:;
			{
				_341611_overload=(*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a9a2ab3a:;
			{
				_341611_overload=(*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a9a2aba1:;
			{
				_341611_overload=(*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a9a2ac17:;
			{
				_341611_overload=(*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a9a2ac7d:;
			{
				_341611_overload=(*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a9a2ace4:;
			{
				_341611_overload=(*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a9a2c400:;
			{
				_341611_overload=(*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1a9a2c466:;
			{
				_341611_overload=(*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a9a2c4cc:;
			{
				_341611_overload=(*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1a9a2a552:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1a9a2aa5d:;
	};
	if ((_341611_overload == nullptr)) {
		_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1a5a0bc30_ParamIns> _34487_p = (*(_341611_overload))._field_Params[1LL];;
	return _1a5a997c3_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_34487_p))._field_Decl))._field_Reference, &((*_34487_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b43020_evalComptimeTypeInfo(_1a5b41d43_binaryEval* _self_) {
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _34537_r = _1a5b56d69_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_34537_r == nullptr)) {
		_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5a34a27_comptimeTypeInfo> _34587_l = _1a5b56d69_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1a9a3b08a:;
			{
				jule::Ptr<_1b916c16d_Const> _34618_constant = static__1b916cb41_NewBool(_1a5b5155b_Equal((*(_34587_l))._field_base, (*(_34537_r))._field_base));;
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_34618_constant, &__jule_any_type19), ._field_Constant=_34618_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9a3c421:;
			{
				jule::Ptr<_1b916c16d_Const> _34688_constant = static__1b916cb41_NewBool((!(_1a5b5155b_Equal((*(_34587_l))._field_base, (*(_34537_r))._field_base))));;
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, ._field_Model=jule::Any(_34688_constant, &__jule_any_type19), ._field_Constant=_34688_constant});;
			}
		}
		else {
			_case_begin_1a9a3a8e7:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a3abd3:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b432a6_evalNil(_1a5b41d43_binaryEval* _self_) {
	if ((!(_1a5b52c00_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9a41bc8:;
			{
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else {
			_case_begin_1a9a3ea3e:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a41821:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b4353c_evalEnum(_1a5b41d43_binaryEval* _self_) {
	jule::Ptr<_1a5a2088c_Enum> _34997_enm = _1a5b53c56_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9a43ea5:;
			{
				jule::Ptr<_1a5b50d52_TypeKind> _35038_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1a5b53c56_Enum((*(*(_self_))._field_r.alloc)._field_Kind) != nullptr)) {
					_35038_rkind=(*((*(_1a5b53c56_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1a5a9a230_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_34997_enm))._field_Kind.alloc)._field_Kind), &(_35038_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		_match_end_1a9a43e3e:;
	};
	if (((_1a5b53c56_Enum((*(*(_self_))._field_r.alloc)._field_Kind) == nullptr) || (_34997_enm != _1a5b53c56_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))) {
		_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*_34997_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a9a4995b:;
			{
				if ((!(_1b916bac9_IsNum(_1a5b5121a_Str((*(*_34997_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_34997_enm.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a9a4a990:;
			{
				jule::Ptr<_1a5a1ed20_EnumItem> _35334_first = (*_34997_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1b917113e_IsI64((*((*((*(_35334_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1a9a4e07b:;
						{
							if ((_1b916da43_ReadI64((*(*(*_35334_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LL)) {
								goto _julec_label_1a9a54092;
							};
							goto _julec_label_1a9a5028b;
						}
					}
					else if (_1b91713c5_IsU64((*((*((*(_35334_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1a9a4e169:;
						{
							if ((_1b916dcc9_ReadU64((*(*(*_35334_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LLU)) {
								goto _julec_label_1a9a54092;
							};
							goto _julec_label_1a9a5028b;
						}
					}
					else {
						_case_begin_1a9a4dbc4:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3546:5"));;
						}
					}
					_match_end_1a9a4db5d:;
				};
				_julec_label_1a9a5028b:;
				_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*_34997_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1a5b1c1d6_pushSuggestion((*(_self_))._field_e, jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1a9a54092:;
				goto _case_begin_1a9a4aa06;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a9a4aa06:;
			{
				if (((_1a5b534a3_Prim((*(*_34997_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1b916b502_IsInt(_1a5b58c6c_Str(_1a5b534a3_Prim((*(*_34997_enm.alloc)._field_Kind.alloc)._field_Kind).ptr())))))) {
					_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_34997_enm.alloc)._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a9a464d5:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_34997_enm.alloc)._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a495a4:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b437c3_evalTypeEnum(_1a5b41d43_binaryEval* _self_) {
	jule::Ptr<_1a5a22097_TypeEnum> _35667_enm = _1a5b53edc_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1a5b42a03_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9a58d00:;
			{
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else {
			_case_begin_1a9a58184:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5a223d8_Str(_35667_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a58904:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b43a59_evalSptr(_1a5b41d43_binaryEval* _self_) {
	if ((!(_1a5b42a03_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9a5b1dc:;
			{
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else {
			_case_begin_1a9a5a153:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a5ad35:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b43ce0_evalPtr(_1a5b41d43_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a9a5d420:;
			{
				if ((!(_1a5b42a03_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a9a5e7a6:;
			{
				if ((_1a5b539c0_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1a5b61758_IsUnsafe(_1a5b539c0_Ptr((*(*(_self_))._field_l.alloc)._field_Kind).ptr())) {
					_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				};
				if ((!(_1a5b49db2_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a9a5cb39:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a5c991:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b44076_evalArr(_1a5b41d43_binaryEval* _self_) {
	if ((!(_1a5b42a03_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9a65eb6:;
			{
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else {
			_case_begin_1a9a611ae:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a65b0e:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b4430c_evalSlc(_1a5b41d43_binaryEval* _self_) {
	if ((!(_1a5b42a03_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9a6864a:;
			{
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else {
			_case_begin_1a9a675b1:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a68293:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b44593_evalStruct(_1a5b41d43_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1a9a69eba:;
			{
				if (((*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a9a6a5d6:;
			{
				if (((*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1a9a6a64c:;
			{
				if (((*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a9a6a6b3:;
			{
				if (((*(_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9a6a729:;
			{
				if ((!(_1a5b42a03_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		_match_end_1a9a69dee:;
	};
	if ((!(_1a5b42c89_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b44829_evalTrait(_1a5b41d43_binaryEval* _self_) {
	if ((!(_1a5b42a03_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9a7657b:;
			{
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else {
			_case_begin_1a9a75943:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a761c4:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b44ab0_evalAny(_1a5b41d43_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9a787ae:;
			{
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else {
			_case_begin_1a9a77ec8:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a77d30:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b44d46_evalBool(_1a5b41d43_binaryEval* _self_) {
	if ((!(_1a5b42a03_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a9a7a9ae:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a9a79925:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a7a607:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b450cc_evalStr(_1a5b41d43_binaryEval* _self_) {
	jule::Str _37657_rk = _1a5b5121a_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_37657_rk.equal("str", 3))) {
		_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_37657_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a9a7e782:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a9a8547a:;
			{
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		else {
			_case_begin_1a9a7d583:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9a7e386:;
	};
}



inline void _1a5b452ca_setTypeToGreater(_1a5b41d43_binaryEval* _self_) {
	jule::Ptr<_1a5b5892b_Prim> _37903_lp = _1a5b534a3_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1a5b5892b_Prim> _37913_rp = _1a5b534a3_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (_1a5b1a503_IsConst((*(_self_))._field_l)) {
		if ((!(_1a5b1a503_IsConst((*(_self_))._field_r)))) {
			(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_37913_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1a9a89e0d;
	};
	if (_1a5b1a503_IsConst((*(_self_))._field_r)) {
		(*(*(*(_self_))._field_r.alloc)._field_Constant.alloc)._field_Kind=(*(_37903_lp))._field_Kind;
		return;;
	};
	_julec_label_1a9a89e0d:;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*(*(_self_))._field_r.alloc)._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1a5b1a503_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37913_rp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
		return;;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return;;
	};
	if (_1b9169cb4_IsGreater((*_37913_rp.alloc)._field_Kind, (*_37903_lp.alloc)._field_Kind)) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1a5b1a503_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37913_rp.alloc)._field_Kind;
		};
	};
}



inline void _1a5b45583_checkModData(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a5b19aeb_Data>* _382333_d) {
	if ((!(_1a5b1a503_IsConst((*(_382333_d)).ptr())))) {
		if (((_1a5b534a3_Prim((*((*(_382333_d))))._field_Kind.ptr()) == nullptr) || (!(_1b916b502_IsInt((*(_1a5b534a3_Prim((*((*(_382333_d))))._field_Kind)))._field_Kind))))) {
			_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a5b00a8d_sigAssignable(jule::Str::lit("i64", 3), _382333_d)) {
			_case_begin_1a9a92c29:;
			{
				_1b91700d8_SetI64((*((*(_382333_d))))._field_Constant.ptr(), _1b916e813_AsI64((*((*(_382333_d))))._field_Constant));
			}
		}
		else if (_1a5b00e56_unsigAssignable(jule::Str::lit("u64", 3), _382333_d)) {
			_case_begin_1a9a9290a:;
			{
				_1b9170391_SetU64((*((*(_382333_d))))._field_Constant.ptr(), _1b916ea99_AsU64((*((*(_382333_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1a9a92894:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9a9282d:;
	};
}



inline void _1a5b45781_mod(_1a5b41d43_binaryEval* _self_) {
	_1a5b45583_checkModData(_self_, &((*(_self_))._field_l));
	_1a5b45583_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1a5b45b7c_numbersAreCompatibile(_1a5b41d43_binaryEval* _self_, jule::Str* _384534_lk, jule::Str* _384544_rk) {
	if ((!(_1b916bac9_IsNum((*(_384544_rk)))))) {
		return false;;
	};
	if ((_1a5b1a503_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((*(_384534_lk)).equal("f32", 3)) {
		if ((_1a5b1a503_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a5b00719_floatAssignable(_384534_lk, &((*(_self_))._field_r));;
		};
		return (*(_384544_rk)).equal("f32", 3);;
	};
	if ((*(_384534_lk)).equal("f64", 3)) {
		if ((_1a5b1a503_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1a5b00719_floatAssignable(_384534_lk, &((*(_self_))._field_r));;
		};
		return (*(_384544_rk)).equal("f64", 3);;
	};
	if ((_1a5b1a503_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1a5b012ca_intAssignable((*(_384534_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_384534_lk)) == (*(_384544_rk)));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b45e13_evalFloat(_1a5b41d43_binaryEval* _self_) {
	jule::Str _38713_lk = (*(_1a5b534a3_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38723_rk = (*(_1a5b534a3_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1a5b45b7c_numbersAreCompatibile(_self_, &(_38713_lk), &(_38723_rk))))) {
		_1a5a9a64d_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a9a9cb35:;
			{
				if (((!(_1a5b1a503_IsConst((*(_self_))._field_l))) || (!(_1a5b012ca_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38713_lk, &__jule_any_type4),jule::Any(_38723_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1a5b1a503_IsConst((*(_self_))._field_r))) || (!(_1a5b012ca_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38713_lk, &__jule_any_type4),jule::Any(_38723_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1b91700d8_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1b916e813_AsI64((*(*(_self_))._field_l.alloc)._field_Constant));
				_1b9170391_SetU64((*(*(_self_))._field_r.alloc)._field_Constant, _1b916ea99_AsU64((*(*(_self_))._field_r.alloc)._field_Constant));
				if ((!(_1a5b496db_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1a9a9cabe:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a9a9cbac:;
			{
				_1a5b452ca_setTypeToGreater(_self_);
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		_match_end_1a9a9ec58:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a9aa5005:;
			{
				_1a5b452ca_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a9aa5c09:;
			{
				if ((!(_1b916b502_IsInt(_38723_rk)))) {
					_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38713_lk, &__jule_any_type4),jule::Any(_38723_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1a5b45781_mod(_self_);
				_1a5b452ca_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1a9a9d383:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9aa4455:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b46199_evalInt(_1a5b41d43_binaryEval* _self_) {
	jule::Str _39353_lk = (*(_1a5b534a3_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39363_rk = (*(_1a5b534a3_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a9aa9735:;
			{
				if (((!(_1b916b502_IsInt(_39353_lk))) || (!(_1b916b502_IsInt(_39363_rk))))) {
					_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_39353_lk, &__jule_any_type4),jule::Any(_39363_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1a5b496db_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1a9aa9a21:;
	};
	if ((!(_1a5b45b7c_numbersAreCompatibile(_self_, &(_39353_lk), &(_39363_rk))))) {
		_1a5a9a64d_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a9aad34e:;
			{
				return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c79882e9_primBool, });;
			}
		}
		_match_end_1a9aad2d8:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a9aaeb14:;
			{
				_1a5b452ca_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a9ab0818:;
			{
				_1a5b45781_mod(_self_);
				_1a5b452ca_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a9aad43c:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9aae718:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b46430_evalPrim(_1a5b41d43_binaryEval* _self_) {
	jule::Ptr<_1a5b5892b_Prim> _39923_prim = _1a5b534a3_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1a5b5bb2c_IsBool(_39923_prim.ptr())) {
			_case_begin_1a9ab2ee1:;
			{
				return _1a5b44d46_evalBool(_self_);;
			}
		}
		else if (_1a5b5bdb3_IsStr(_39923_prim.ptr())) {
			_case_begin_1a9ab308a:;
			{
				return _1a5b450cc_evalStr(_self_);;
			}
		}
		_match_end_1a9ab2e69:;
	};
	if ((_1a5b534a3_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5b58c6c_Str(_39923_prim.ptr()), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_1b916b843_IsFloat((*_39923_prim.alloc)._field_Kind)) {
			_case_begin_1a9ab5a0a:;
			{
				return _1a5b45e13_evalFloat(_self_);;
			}
		}
		else if (_1b916b502_IsInt((*_39923_prim.alloc)._field_Kind)) {
			_case_begin_1a9ab5a93:;
			{
				return _1a5b46199_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1a9ab5994:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9ab41bd:;
	};
}



inline void _1a5b4662d_checkSpecialCases(_1a5b41d43_binaryEval* _self_) {
	if (((!(_1a5b5244c_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1a5b51e30_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
	} else if (((!(_1a5b5244c_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1a5b51e30_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b468b4_evalOp(_1a5b41d43_binaryEval* _self_) {
	_1a5b4662d_checkSpecialCases(_self_);
	{
		
		if (_1a5b521b6_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1a9abb3d4:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1a5b56d69_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abc76a:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9abc7d1;
			}
		}
		else if ((_1a5b56d69_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abc7d1:;
			{
				return _1a5b43020_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1a5b534a3_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1a5b5c149_IsAny(_1a5b534a3_Prim((*(*(_self_))._field_r.alloc)._field_Kind).ptr()))) {
			_case_begin_1a9abb23b:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9abb2a2;
			}
		}
		else if (_1a5b51e30_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1a9abb2a2:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9abc8be;
			}
		}
		else if (_1a5b51e30_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1a9abc8be:;
			{
				return _1a5b432a6_evalNil(_self_);;
			}
		}
		else if (((_1a5b534a3_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1a5b5c149_IsAny(_1a5b534a3_Prim((*(*(_self_))._field_l.alloc)._field_Kind).ptr()))) {
			_case_begin_1a9abc935:;
			{
				return _1a5b44ab0_evalAny(_self_);;
			}
		}
		else if ((_1a5b53edc_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abc99b:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9abca12;
			}
		}
		else if ((_1a5b53edc_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abca12:;
			{
				return _1a5b437c3_evalTypeEnum(_self_);;
			}
		}
		else if ((_1a5b53c56_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abca78:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9abcade;
			}
		}
		else if ((_1a5b53c56_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abcade:;
			{
				return _1a5b4353c_evalEnum(_self_);;
			}
		}
		else if ((_1a5b53739_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abcb55:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9abcbbb;
			}
		}
		else if ((_1a5b53739_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abcbbb:;
			{
				return _1a5b43a59_evalSptr(_self_);;
			}
		}
		else if ((_1a5b539c0_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abcc32:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9abcc98;
			}
		}
		else if ((_1a5b539c0_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abcc98:;
			{
				return _1a5b43ce0_evalPtr(_self_);;
			}
		}
		else if ((_1a5b54273_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abcd0e:;
			{
				return _1a5b44076_evalArr(_self_);;
			}
		}
		else if ((_1a5b54509_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abcd75:;
			{
				return _1a5b4430c_evalSlc(_self_);;
			}
		}
		else if ((_1a5b54cac_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abcddb:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1a9abce52;
			}
		}
		else if ((_1a5b54cac_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abce52:;
			{
				return _1a5b44829_evalTrait(_self_);;
			}
		}
		else if ((_1a5b54a26_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abceb8:;
			{
				return _1a5b44593_evalStruct(_self_);;
			}
		}
		else if ((_1a5b534a3_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9abd02e:;
			{
				return _1a5b46430_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1a9abab42:;
			{
				_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1a5b5121a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9abb01b:;
	};
}



inline void _1a5b46b6c_evalConst(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a5b19aeb_Data>* _408330_d) {
	{
		
		if (((*(_408330_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1a9ad0d99:;
			{
				return;;
			}
		}
		else if ((!(_1a5b1a503_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a5b1a503_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1a9ad143d:;
			{
				(*((*(_408330_d))))._field_Constant=nullptr;
				(*((*(_408330_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1a9ad0c9a:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1a9ad151a:;
			{
				(*((*(_408330_d))))._field_Constant=static__1b916cb41_NewBool(_1b9172c23_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1a9ad394b:;
			{
				(*((*(_408330_d))))._field_Constant=static__1b916cb41_NewBool((!(_1b9172c23_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1a9ad39b2:;
			{
				(*((*(_408330_d))))._field_Constant=static__1b916cb41_NewBool(_1b91728d2_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1a9ad3a28:;
			{
				(*((*(_408330_d))))._field_Constant=static__1b916cb41_NewBool(_1b9172591_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1a9ad3a8e:;
			{
				(*((*(_408330_d))))._field_Constant=static__1b916cb41_NewBool(_1b91736e6_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1a9ad3b05:;
			{
				(*((*(_408330_d))))._field_Constant=static__1b916cb41_NewBool(_1b9173064_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1a9ad3b7c:;
			{
				(*((*(_408330_d))))._field_Constant=static__1b916cb41_NewBool(_1b9173a37_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1a9ad3c04:;
			{
				(*((*(_408330_d))))._field_Constant=static__1b916cb41_NewBool(_1b91733a5_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1a9ad3c7b:;
			{
				_1b9173d78_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1a9ad3d03:;
			{
				_1b91741b9_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1a9ad3d7a:;
			{
				_1b917450a_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1a9ad3e02:;
			{
				jule::Bool _41234_ok = _1b917484b_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_41234_ok)) && (_1b916ed30_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1a5b5892b_Prim> _41288_prim = _1a5b534a3_Prim((*((*(_408330_d))))._field_Kind.ptr());;
				{
					
					if (_1b916ae2a_IsSigInt((*(_41288_prim))._field_Kind)) {
						_case_begin_1a9ae4e79:;
						{
							_1b91700d8_SetI64((*((*(_408330_d))))._field_Constant, _1b916e813_AsI64((*((*(_408330_d))))._field_Constant));
						}
					}
					else if (_1b916b238_IsUnsigInt((*(_41288_prim))._field_Kind)) {
						_case_begin_1a9ae5023:;
						{
							_1b9170391_SetU64((*((*(_408330_d))))._field_Constant, _1b916ea99_AsU64((*((*(_408330_d))))._field_Constant));
						}
					}
					_match_end_1a9ae4e13:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1a9ad3e79:;
			{
				jule::Bool _41364_ok = _1b9174b8c_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_41364_ok)) && (_1b916ed30_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1a9ad4001:;
			{
				_1b917531e_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1a9ad4078:;
			{
				_1b9174ecd_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1a9ad4100:;
			{
				_1b9175660_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1a9ad4177:;
			{
				_1b91759a1_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1a9ad41ee:;
			{
				_1b9175ce2_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1a9ad2c47:;
	};
	(*((*(_408330_d))))._field_Model=jule::Any((*((*(_408330_d))))._field_Constant, &__jule_any_type19);
	_1a5b4b028_applyCastModelByEnum(_408330_d, _1a5b53c56_Enum((*((*(_408330_d))))._field_Kind.ptr()), &((*(_self_))._field_op));
}



inline void _1a5b46e25_checkData(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a5b19aeb_Data>* _416130_d) {
	jule::Ptr<_1a5a0cca8_FnIns> _41623_f = _1a5b54790_Fn((*((*(_416130_d))))._field_Kind.ptr());;
	if ((((_41623_f != nullptr) && ((*_41623_f.alloc)._field_Decl != nullptr)) && _1a5a0a4d1_IsMethod((*_41623_f.alloc)._field_Decl))) {
		_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1a5b47123_checkDatas(_1a5b41d43_binaryEval* _self_) {
	_1a5b46e25_checkData(_self_, &((*(_self_))._field_l));
	_1a5b46e25_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1a5b473cb_setModel(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a5b19aeb_Data>* _417329_d) {
	if (_1a5b1a503_IsConst((*(_417329_d)).ptr())) {
		if (((_1a5b1a503_IsConst((*(_self_))._field_l.ptr()) && _1a5b1a503_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1a5b19aeb_Data> _41827_l;
	jule::Ptr<_1a5b19aeb_Data> _418214_r;
	({
		jule::Ptr<_1a5b19aeb_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1a5b19aeb_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_41827_l = ___jule_assign_arg;
		_418214_r = _1___jule_assign_arg;
	});
	if ((!(_1a5b1a844_GoodOperand(_41827_l, &(_418214_r))))) {
		std::swap(_41827_l, _418214_r);
	};
	(*((*(_417329_d))))._field_Model=jule::Any(jule::new_ptr<_1a59ebe84_BinaryExprModel>(_1a59ebe84_BinaryExprModel{._field_Left=jule::new_ptr<_1a59eb989_OperandExprModel>(_1a59eb989_OperandExprModel{._field_Kind=(*_41827_l.alloc)._field_Kind, ._field_Model=(*_41827_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1a59eb989_OperandExprModel>(_1a59eb989_OperandExprModel{._field_Kind=(*_418214_r.alloc)._field_Kind, ._field_Model=(*_418214_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1a5b47684_postEval(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a5b19aeb_Data>* _420029_d) {
	(*((*(_420029_d))))._field_Lvalue=false;
	_1a5b473cb_setModel(_self_, _420029_d);
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b47a80_solveExplicit(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a5b19aeb_Data>* _420534_l, jule::Ptr<_1a5b19aeb_Data>* _420549_r) {
	({
		jule::Ptr<_1a5b19aeb_Data> ___jule_assign_arg = (*(_420534_l));
		jule::Ptr<_1a5b19aeb_Data> _1___jule_assign_arg = (*(_420549_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a5b47123_checkDatas(_self_);
	jule::Ptr<_1a5b19aeb_Data> _42107_d = _1a5b468b4_evalOp(_self_);;
	({
		jule::Ptr<_1a5b19aeb_Data> ___jule_assign_arg = (*(_420534_l));
		jule::Ptr<_1a5b19aeb_Data> _1___jule_assign_arg = (*(_420549_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a5b46b6c_evalConst(_self_, &(_42107_d));
	if ((_42107_d != nullptr)) {
		(*_42107_d.alloc)._field_Mutable=true;
		_1a5b47684_postEval(_self_, &(_42107_d));
	};
	return _42107_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b47dc1_eval(_1a5b41d43_binaryEval* _self_, jule::Ptr<_1a59cb86a_BinaryExpr>* _422525_op) {
	if (((*((*((*(_422525_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a5b1bd73_pushErr((*(_self_))._field_e.ptr(), (*((*(_422525_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1a5b1c1d6_pushSuggestion((*(_self_))._field_e, jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5b19aeb_Data> _42327_l = _1a5b3e59e_evalExpr1((*(_self_))._field_e, (*((*(_422525_op))))._field_Left);;
	if (((_42327_l == nullptr) || ((*(_42327_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1a5b50d52_TypeKind> _42377_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_42327_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_42377_prefix;
	});;
	jule::Ptr<_1a5b19aeb_Data> _42407_r = _1a5b3e59e_evalExpr1((*(_self_))._field_e, (*((*(_422525_op))))._field_Right);;
	if (((_42407_r == nullptr) || ((*(_42407_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_422525_op))))._field_Op;
	jule::Ptr<_1a5b19aeb_Data> _42477_d = _1a5b47a80_solveExplicit(_self_, &(_42327_l), &(_42407_r));;
	if ((((_42477_d != nullptr) && (*(_42327_l))._field_IsRune) && (*(_42407_r))._field_IsRune)) {
		(*_42477_d.alloc)._field_IsRune=true;
	};
	return _42477_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b41d43_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b4e46b_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b50060_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5b5121a_Str(_1a5b50d52_TypeKind* _self_) {
	if (_1a5b51e30_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1e9a030bc_StrBuilder _747_kind = static__1e9a034eb_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1e9a03a5c_WriteStr(&_747_kind, jule::Str::lit("...", 3));
	};
	if (_1a5b51b99_Binded(_self_)) {
		_1e9a03a5c_WriteStr(&_747_kind, jule::Str::lit("cpp.", 4));
		_1e9a03a5c_WriteStr(&_747_kind, (*(_self_))._field_BindIdent);
	} else {
		_1e9a03a5c_WriteStr(&_747_kind, ((_1a5b5089b_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1a5b50406_Str((*(_self_))._field_Kind.data));
	};
	return _1e9a04354_Str(&_747_kind);;
}



inline jule::Bool _1a5b5155b_Equal(jule::Ptr<_1a5b50d52_TypeKind> _self_, jule::Ptr<_1a5b50d52_TypeKind> _9018_other) {
	if (_1a5b51e30_IsNil(_self_.ptr())) {
		return _1a5b51e30_IsNil(_9018_other.ptr());;
	};
	if (_1a5b51b99_Binded(_self_)) {
		return (_1a5b51b99_Binded(_9018_other) && ((*_self_.alloc)._field_BindIdent == (*_9018_other.alloc)._field_BindIdent));;
	};
	return ((_1a5b5089b_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1a5b50747_Equal((*_self_.alloc)._field_Kind.data, _9018_other);;
}



inline jule::Bool _1a5b51b99_Binded(_1a5b50d52_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1a5b51e30_IsNil(_1a5b50d52_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1a5b521b6_Void(_1a5b50d52_TypeKind* _self_) {
	jule::Ptr<_1a5b5892b_Prim> _1103_prim = _1a5b534a3_Prim(&(*(_self_)));;
	return ((_1103_prim != nullptr) && (*_1103_prim.alloc)._field_Kind.equal("void", 4));;
}



inline jule::Bool _1a5b5244c_Comparable(_1a5b50d52_TypeKind* _self_) {
	{
		_1a5b50d52_TypeKind* _1178__self = _self_;;
		if ((_1a5b54a26_Struct(_1178__self) != nullptr)) {
			return (*(_1a5b54a26_Struct(_1178__self)))._field_Comparable;;
		};
		return (((_1a5b55043_Map(_1178__self) == nullptr) && (_1a5b54509_Slc(_1178__self) == nullptr)) && (_1a5b54790_Fn(_1178__self) == nullptr));;
	};
}



inline jule::Bool _1a5b526d3_Mutable(_1a5b50d52_TypeKind* _self_) {
	{
		_1a5b50d52_TypeKind* _1288__self = _self_;;
		if ((_1a5b54a26_Struct(_1288__self) != nullptr)) {
			return (*(_1a5b54a26_Struct(_1288__self)))._field_Mutable;;
		};
		if ((_1a5b54cac_Trait(_1288__self) != nullptr)) {
			return true;;
		};
		if ((_1a5b534a3_Prim(_1288__self) != nullptr)) {
			jule::Ptr<_1a5b5892b_Prim> _1365_p = _1a5b534a3_Prim(_1288__self);;
			return _1a5b5c149_IsAny(_1365_p.ptr());;
		};
		if ((_1a5b54273_Arr(_1288__self) != nullptr)) {
			return _1a5b526d3_Mutable((*(_1a5b54273_Arr(_1288__self)))._field_Elem.ptr());;
		};
		return (((_1a5b54509_Slc(_1288__self) != nullptr) || (_1a5b539c0_Ptr(_1288__self) != nullptr)) || (_1a5b53739_Sptr(_1288__self) != nullptr));;
	};
}



inline jule::Bool _1a5b52969_Ordered(_1a5b50d52_TypeKind* _self_) {
	{
		_1a5b50d52_TypeKind* _1518__self = _self_;;
		jule::Ptr<_1a5b5892b_Prim> _1524_prim = _1a5b534a3_Prim(_1518__self);;
		if ((_1524_prim != nullptr)) {
			return (_1b916bac9_IsNum((*_1524_prim.alloc)._field_Kind) || _1a5b5bdb3_IsStr(_1524_prim));;
		};
		if ((_1a5b539c0_Ptr(_1518__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1a59e7a84_StructIns> _1594_s = _1a5b54a26_Struct(_1518__self);;
		if ((_1594_s != nullptr)) {
			return (((((*_1594_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1594_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1594_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1594_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1a5a2088c_Enum> _1664_enm = _1a5b53c56_Enum(_1518__self);;
		if ((_1664_enm != nullptr)) {
			return _1b916bac9_IsNum(_1a5b5121a_Str((*((*_1664_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1a5b52c00_NilCompatible(_1a5b50d52_TypeKind* _self_) {
	{
		_1a5b50d52_TypeKind* _1778__self = _self_;;
		jule::Ptr<_1a5b5892b_Prim> _1794_prim = _1a5b534a3_Prim(_1778__self);;
		if (((_1794_prim != nullptr) && _1a5b5c149_IsAny(_1794_prim))) {
			return true;;
		};
		return (((((((_1a5b51e30_IsNil(_1778__self) || (_1a5b54790_Fn(_1778__self) != nullptr)) || (_1a5b53739_Sptr(_1778__self) != nullptr)) || (_1a5b539c0_Ptr(_1778__self) != nullptr)) || (_1a5b54cac_Trait(_1778__self) != nullptr)) || (_1a5b54509_Slc(_1778__self) != nullptr)) || (_1a5b55043_Map(_1778__self) != nullptr)) || (_1a5b53edc_TypeEnum(_1778__self) != nullptr));;
	};
}



inline jule::Bool _1a5b52e86_PerformsRC(_1a5b50d52_TypeKind* _self_) {
	{
		_1a5b50d52_TypeKind* _1988__self = _self_;;
		jule::Ptr<_1a5b5892b_Prim> _1994_prim = _1a5b534a3_Prim(_1988__self);;
		if ((_1994_prim != nullptr)) {
			return (_1a5b5c149_IsAny(_1994_prim) || _1a5b5bdb3_IsStr(_1994_prim));;
		};
		return (((_1a5b53739_Sptr(_1988__self) != nullptr) || (_1a5b54509_Slc(_1988__self) != nullptr)) || (_1a5b54cac_Trait(_1988__self) != nullptr));;
	};
}



inline jule::Bool _1a5b5321c_Variadicable(_1a5b50d52_TypeKind* _self_) {
	{
		_1a5b50d52_TypeKind* _2108__self = _self_;;
		return (_1a5b54509_Slc(_2108__self) != nullptr);;
	};
}



inline jule::Ptr<_1a5b5892b_Prim> _1a5b534a3_Prim(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)) {
			_case_begin_1a9b2e414:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5b5892b_Prim>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1a9b4258c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b42537:;
	};
}



inline jule::Ptr<_1a5b5c457_Sptr> _1a5b53739_Sptr(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data21)) {
			_case_begin_1a9b431c5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5b5c457_Sptr>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1a9b43406:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b433a1:;
	};
}



inline jule::Ptr<_1a5b60c1e_Ptr> _1a5b539c0_Ptr(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data26)) {
			_case_begin_1a9b43deb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5b60c1e_Ptr>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1a9b4414e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b440e9:;
	};
}



inline jule::Ptr<_1a5a2088c_Enum> _1a5b53c56_Enum(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data3)) {
			_case_begin_1a9b44b44:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a2088c_Enum>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1a9b44d75:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b44d20:;
	};
}



inline jule::Ptr<_1a5a22097_TypeEnum> _1a5b53edc_TypeEnum(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data4)) {
			_case_begin_1a9b4586a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a22097_TypeEnum>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1a9b45abd:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b45a68:;
	};
}



inline jule::Ptr<_1a5b6024b_Arr> _1a5b54273_Arr(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data25)) {
			_case_begin_1a9b465b3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5b6024b_Arr>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1a9b46816:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b467b1:;
	};
}



inline jule::Ptr<_1a5b5ce2a_Slc> _1a5b54509_Slc(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data22)) {
			_case_begin_1a9b4730b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5b5ce2a_Slc>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1a9b4755e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b47509:;
	};
}



inline jule::Ptr<_1a5a0cca8_FnIns> _1a5b54790_Fn(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data1)) {
			_case_begin_1a9b48054:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a0cca8_FnIns>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1a9b48285:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b48230:;
	};
}



inline jule::Ptr<_1a59e7a84_StructIns> _1a5b54a26_Struct(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0)) {
			_case_begin_1a9b48c7a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a59e7a84_StructIns>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1a9b48eab:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b48e56:;
	};
}



inline jule::Ptr<_1a5a1d181_Trait> _1a5b54cac_Trait(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data2)) {
			_case_begin_1a9b499a1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a1d181_Trait>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1a9b49bd2:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b49b7c:;
	};
}



inline jule::Ptr<_1a5b5e5be_Map> _1a5b55043_Map(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data24)) {
			_case_begin_1a9b4a6c7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5b5e5be_Map>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1a9b4a92a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b4a8c5:;
	};
}



inline jule::Ptr<_1a5b5da1e_Tuple> _1a5b552c9_Tup(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data23)) {
			_case_begin_1a9b4b420:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5b5da1e_Tuple>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1a9b4b673:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b4b61d:;
	};
}



inline jule::Bool _1a5b55560_comptime(_1a5b50d52_TypeKind* _self_) {
	return (((((((((((((_1a5b56ad3_comptimeTypeInfos(_self_) != nullptr) || (_1a5b56d69_comptimeTypeInfo(_self_) != nullptr)) || (_1a5b557e6_comptimeStructFields(_self_) != nullptr)) || (_1a5b55a7c_comptimeStructField(_self_) != nullptr)) || (_1a5b55d13_comptimeEnumFields(_self_) != nullptr)) || (_1a5b56099_comptimeEnumField(_self_) != nullptr)) || (_1a5b57100_comptimeStatics(_self_) != nullptr)) || (_1a5b57386_comptimeStatic(_self_) != nullptr)) || (_1a5b56330_comptimeParams(_self_) != nullptr)) || (_1a5b565b6_comptimeParam(_self_) != nullptr)) || (_1a5b5761c_comptimeValue(_self_) != nullptr)) || (_1a5b57b39_comptimeFiles(_self_) != nullptr)) || (_1a5b578a3_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1a5a27883_comptimeStructFields> _1a5b557e6_comptimeStructFields(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data7)) {
			_case_begin_1a9b4c333:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a27883_comptimeStructFields>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1a9b50d3c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b50cd7:;
	};
}



inline jule::Ptr<_1a5a25bc2_comptimeStructField> _1a5b55a7c_comptimeStructField(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data6)) {
			_case_begin_1a9b5147a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a25bc2_comptimeStructField>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1a9b516cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b51678:;
	};
}



inline jule::Ptr<_1a5a2d5d1_comptimeEnumFields> _1a5b55d13_comptimeEnumFields(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data11)) {
			_case_begin_1a9b521c3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a2d5d1_comptimeEnumFields>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1a9b52426:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b523c1:;
	};
}



inline jule::Ptr<_1a5a2c239_comptimeEnumField> _1a5b56099_comptimeEnumField(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data10)) {
			_case_begin_1a9b52e1b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a2c239_comptimeEnumField>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1a9b5316e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b53119:;
	};
}



inline jule::Ptr<_1a5a31d65_comptimeParams> _1a5b56330_comptimeParams(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data13)) {
			_case_begin_1a9b53b64:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a31d65_comptimeParams>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1a9b53db7:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b53d62:;
	};
}



inline jule::Ptr<_1a5a2ebcb_comptimeParam> _1a5b565b6_comptimeParam(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data12)) {
			_case_begin_1a9b54912:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a2ebcb_comptimeParam>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1a9b54b10:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b54aaa:;
	};
}



inline jule::Ptr<_1a5a251ee_comptimeRange> _1a5b5684c_comptimeRange(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data5)) {
			_case_begin_1a9b5565a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a251ee_comptimeRange>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1a9b55858:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b55803:;
	};
}



inline jule::Ptr<_1a5a3342c_comptimeTypeInfos> _1a5b56ad3_comptimeTypeInfos(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data14)) {
			_case_begin_1a9b563a3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a3342c_comptimeTypeInfos>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1a9b565a1:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b5654b:;
	};
}



inline jule::Ptr<_1a5a34a27_comptimeTypeInfo> _1a5b56d69_comptimeTypeInfo(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data15)) {
			_case_begin_1a9b57096:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a34a27_comptimeTypeInfo>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1a9b572e9:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b57294:;
	};
}



inline jule::Ptr<_1a5a2ab3e_comptimeStatics> _1a5b57100_comptimeStatics(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data9)) {
			_case_begin_1a9b57cde:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a2ab3e_comptimeStatics>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1a9b58042:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b57edc:;
	};
}



inline jule::Ptr<_1a5a28e7d_comptimeStatic> _1a5b57386_comptimeStatic(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data8)) {
			_case_begin_1a9b58a8c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a28e7d_comptimeStatic>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1a9b58c8a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b58c35:;
	};
}



inline jule::Ptr<_1a5a3b039_comptimeValue> _1a5b5761c_comptimeValue(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data16)) {
			_case_begin_1a9b597d5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a3b039_comptimeValue>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1a9b599d3:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b5997d:;
	};
}



inline jule::Ptr<_1a5a3ee83_comptimeFile> _1a5b578a3_comptimeFile(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data18)) {
			_case_begin_1a9b5a52d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a3ee83_comptimeFile>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1a9b5a72b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b5a6c6:;
	};
}



inline jule::Ptr<_1a5a3d888_comptimeFiles> _1a5b57b39_comptimeFiles(_1a5b50d52_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data17)) {
			_case_begin_1a9b5b276:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5a3d888_comptimeFiles>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1a9b5b474:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9b5b41e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b50d52_TypeKind _Src) {
	_Stream << _1a5b5121a_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a5b58398_checked(_1a5b58024_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b58024_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5b58c6c_Str(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a5b590ad_Equal(jule::Ptr<_1a5b5892b_Prim> _self_, jule::Ptr<_1a5b50d52_TypeKind> _50818_other) {
	jule::Ptr<_1a5b5892b_Prim> _5093_prim = _1a5b534a3_Prim(_50818_other.ptr());;
	if ((_5093_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5093_prim))._field_Kind);;
}



inline jule::Bool _1a5b59553_IsConstraint(_1a5b5892b_Prim* _self_) {
	return ((((!(_1a5b5bdb3_IsStr(_self_))) && (!(_1a5b5c149_IsAny(_self_)))) && (!(_1a5b5bb2c_IsBool(_self_)))) && (!(_1b916bac9_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1a5b597d9_IsI8(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1a5b59a70_IsI16(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1a5b59d06_IsI32(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1a5b5a08c_IsI64(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1a5b5a323_IsU8(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1a5b5a5a9_IsU16(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1a5b5a840_IsU32(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1a5b5aac6_IsU64(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1a5b5ad5c_IsF32(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1a5b5b0e3_IsF64(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1a5b5b379_IsInt(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1a5b5b610_IsUint(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1a5b5b896_IsUintptr(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1a5b5bb2c_IsBool(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1a5b5bdb3_IsStr(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1a5b5c149_IsAny(_1a5b5892b_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b5892b_Prim _Src) {
	_Stream << _1a5b58c6c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5b5c7cb_Str(_1a5b5c457_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1a5b5121a_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a5b5cb1c_Equal(jule::Ptr<_1a5b5c457_Sptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _58518_other) {
	jule::Ptr<_1a5b5c457_Sptr> _5863_sptr = _1a5b53739_Sptr(_58518_other.ptr());;
	if ((_5863_sptr == nullptr)) {
		return false;;
	};
	return _1a5b5155b_Equal((*(_self_))._field_Elem, (*(_5863_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b5c457_Sptr _Src) {
	_Stream << _1a5b5c7cb_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5b5d3ae_Str(_1a5b5ce2a_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1a5b5121a_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a5b5d700_Equal(jule::Ptr<_1a5b5ce2a_Slc> _self_, jule::Ptr<_1a5b50d52_TypeKind> _60418_other) {
	jule::Ptr<_1a5b5ce2a_Slc> _6053_slc = _1a5b54509_Slc(_60418_other.ptr());;
	if ((_6053_slc == nullptr)) {
		return false;;
	};
	return _1a5b5155b_Equal((*(_self_))._field_Elem, (*(_6053_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b5ce2a_Slc _Src) {
	_Stream << _1a5b5d3ae_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5b5dd93_Str(_1a5b5da1e_Tuple* _self_) {
	_1e9a030bc_StrBuilder _6217_s = static__1e9a034eb_New(16LL);;
	_1e9a03d15_WriteByte(&_6217_s, '(');
	_1e9a03a5c_WriteStr(&_6217_s, _1a5b5121a_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a9b6b990:;
		if (it != expr_end) {
			jule::Ptr<_1a5b50d52_TypeKind> *_62410_t = it;
			{
				_1e9a03d15_WriteByte(&_6217_s, ',');
				_1e9a03a5c_WriteStr(&_6217_s, _1a5b5121a_Str((*(_62410_t)).ptr()));
			}
			_iter_next_1a9b6b990:;
			++it;
			goto _iter_begin_1a9b6b990;
		}
		_iter_end_1a9b6b990:;
	};
	_1e9a03d15_WriteByte(&_6217_s, ')');
	return _1e9a04354_Str(&_6217_s);;
}



inline jule::Bool _1a5b5e1d4_Equal(jule::Ptr<_1a5b5da1e_Tuple> _self_, jule::Ptr<_1a5b50d52_TypeKind> _63318_other) {
	jule::Ptr<_1a5b5da1e_Tuple> _6343_tup = _1a5b552c9_Tup(_63318_other.ptr());;
	if ((_6343_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6343_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _6417_i = 0LL;;
	for (; (_6417_i < (*_self_.alloc)._field_Types.len()); (_6417_i)++) {
		{
			if ((!(_1a5b5155b_Equal((*_self_.alloc)._field_Types[_6417_i], (*(_6343_tup))._field_Types[_6417_i])))) {
				return false;;
			};
		}
	_iter_next_1a9b6dcd3:;
	}
	_iter_end_1a9b6dcd3:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b5da1e_Tuple _Src) {
	_Stream << _1a5b5dd93_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5b5e943_Str(_1a5b5e5be_Map* _self_) {
	_1e9a030bc_StrBuilder _6617_s = static__1e9a034eb_New(16LL);;
	_1e9a03a5c_WriteStr(&_6617_s, jule::Str::lit("map[", 4));
	_1e9a03a5c_WriteStr(&_6617_s, _1a5b5121a_Str((*(_self_))._field_Key.ptr()));
	_1e9a03d15_WriteByte(&_6617_s, ']');
	_1e9a03a5c_WriteStr(&_6617_s, _1a5b5121a_Str((*(_self_))._field_Val.ptr()));
	return _1e9a04354_Str(&_6617_s);;
}



inline jule::Bool _1a5b5ec84_Equal(jule::Ptr<_1a5b5e5be_Map> _self_, jule::Ptr<_1a5b50d52_TypeKind> _67018_other) {
	jule::Ptr<_1a5b5e5be_Map> _6713_m = _1a5b55043_Map(_67018_other.ptr());;
	if ((_6713_m == nullptr)) {
		return false;;
	};
	return (_1a5b5155b_Equal((*(_self_))._field_Key, (*(_6713_m))._field_Key) && _1a5b5155b_Equal((*_self_.alloc)._field_Val, (*(_6713_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b5e5be_Map _Src) {
	_Stream << _1a5b5e943_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5b605c0_Str(_1a5b6024b_Arr* _self_) {
	_1e9a030bc_StrBuilder _6897_s = static__1e9a034eb_New(16LL);;
	_1e9a03d15_WriteByte(&_6897_s, '[');
	_1e9a03a5c_WriteStr(&_6897_s, _1b915e0a5_Itoa((*(_self_))._field_N));
	_1e9a03d15_WriteByte(&_6897_s, ']');
	_1e9a03a5c_WriteStr(&_6897_s, _1a5b5121a_Str((*(_self_))._field_Elem.ptr()));
	return _1e9a04354_Str(&_6897_s);;
}



inline jule::Bool _1a5b60911_Equal(jule::Ptr<_1a5b6024b_Arr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _69818_other) {
	jule::Ptr<_1a5b6024b_Arr> _6993_arr = _1a5b54273_Arr(_69818_other.ptr());;
	if ((_6993_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6993_arr))._field_N) && _1a5b5155b_Equal((*_self_.alloc)._field_Elem, (*(_6993_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b6024b_Arr _Src) {
	_Stream << _1a5b605c0_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a5b61093_Str(_1a5b60c1e_Ptr* _self_) {
	if (_1a5b61758_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1a5b5121a_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a5b613d4_Equal(jule::Ptr<_1a5b60c1e_Ptr> _self_, jule::Ptr<_1a5b50d52_TypeKind> _72218_other) {
	jule::Ptr<_1a5b60c1e_Ptr> _7233_ptr = _1a5b539c0_Ptr(_72218_other.ptr());;
	{
		
		if ((_7233_ptr == nullptr)) {
			_case_begin_1a9b7a97c:;
			{
				return false;;
			}
		}
		else if (_1a5b61758_IsUnsafe(_7233_ptr.ptr())) {
			_case_begin_1a9b7a32d:;
			{
				return _1a5b61758_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1a9b79dbb:;
			{
				return _1a5b5155b_Equal((*(_self_))._field_Elem, (*(_7233_ptr))._field_Elem);;
			}
		}
		_match_end_1a9b79d55:;
	};
}



inline jule::Bool _1a5b61758_IsUnsafe(_1a5b60c1e_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b60c1e_Ptr _Src) {
	_Stream << _1a5b61093_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b61c20_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a5b6344c_pushErr(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1c80b653c_Token> _81223_token, jule::Str _81238_fmt, jule::Slice<jule::Any> _81251_args) {
	_1a5a91cb5_pushErr((*(_self_))._field_s.ptr(), _81223_token, _81238_fmt, _81251_args);
}



inline void _1a5b6364a_allowBuiltin(_1a5b62c10_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a5b63848_disallowBuiltin(_1a5b62c10_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1a9b7eac4_pushReference(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59e7a84_StructIns>* _82437_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a8c3b269_Exist((*(_self_))._field_refers.ptr(), (*(_82437_t)))) {
		return;;
	};
	_1a5a11c68_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82437_t)), &__jule_any_type9));
}

inline void _1a9b824bc_pushReference(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a5a1d181_Trait>* _82437_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a9b84205_Exist((*(_self_))._field_refers.ptr(), (*(_82437_t)))) {
		return;;
	};
	_1a5a11c68_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82437_t)), &__jule_any_type10));
}



inline void _1a5b63da9_pushReferenceByKind(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _83440_k) {
	{
		
		if ((_1a5b54a26_Struct((*(_83440_k)).ptr()) != nullptr)) {
			_case_begin_1a9b7d70a:;
			{
				jule::Ptr<_1a59e7a84_StructIns> _8378_t = _1a5b54a26_Struct((*(_83440_k)).ptr());;
				_1a9b7eac4_pushReference(_self_, &(_8378_t));
			}
		}
		else if ((_1a5b54cac_Trait((*(_83440_k)).ptr()) != nullptr)) {
			_case_begin_1a9b7d7a4:;
			{
				jule::Ptr<_1a5a1d181_Trait> _8408_t = _1a5b54cac_Trait((*(_83440_k)).ptr());;
				_1a9b824bc_pushReference(_self_, &(_8408_t));
			}
		}
		_match_end_1a9b7d5ea:;
	};
}



inline void _1a5b642c7_pushCycleError(_1a5b62c10_typeChecker* _self_, jule::Any _84526_def1, jule::Any _84537_def2, _1e9a030bc_StrBuilder* _84553_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8473_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1a9b86504, nullptr, nullptr);;
	jule::Str _8573_m = _1e9a04354_Str(_84553_message);;
	jule::Str _8583_def1Ident = _8473_getIdent(&(_84526_def1));;
	jule::Str _8593_def2Ident = _8473_getIdent(&(_84537_def2));;
	jule::Str _8603_refersTo = _1d1c6daae_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8583_def1Ident, &__jule_any_type4),jule::Any(_8593_def2Ident, &__jule_any_type4)}));;
	_1e9a03a5c_WriteStr(_84553_message, _1d1902a0c_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1e9a03a5c_WriteStr(_84553_message, _8603_refersTo);
	_1e9a03d15_WriteByte(_84553_message, '\n');
	_1e9a03a5c_WriteStr(_84553_message, _8573_m);
}



inline jule::Bool _1a5b646c3_checkCrossCycle(_1a5b62c10_typeChecker* _self_, jule::Any _86727_decl, _1e9a030bc_StrBuilder* _86743_message) {
	{
		auto &_match_expr{ _86727_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a9b8a6c3:;
			{
				jule::Ptr<_1a5b50060_TypeAlias> _8704_ta = _86727_decl.unsafe_cast_ptr<_1a5b50060_TypeAlias>();;
				{
					auto expr = &((*(_8704_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9b8b66e:;
					if (it != expr_end) {
						jule::Any *_87111_d = it;
						{
							{
								
								if (((*(_87111_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1a9b8be66:;
									{
										_1a5b642c7_pushCycleError(_self_, jule::Any(_8704_ta, &__jule_any_type65), (*(_87111_d)), _86743_message);
										return false;;
									}
								}
								else if ((!(_1a5b646c3_checkCrossCycle(_self_, (*(_87111_d)), _86743_message)))) {
									_case_begin_1a9b8beee:;
									{
										_1a5b642c7_pushCycleError(_self_, jule::Any(_8704_ta, &__jule_any_type65), (*(_87111_d)), _86743_message);
										return false;;
									}
								}
								_match_end_1a9b8bd67:;
							};
						}
						_iter_next_1a9b8b66e:;
						++it;
						goto _iter_begin_1a9b8b66e;
					}
					_iter_end_1a9b8b66e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a9b8a53b:;
			{
				jule::Ptr<_1a59e4d06_Struct> _8824_s = _86727_decl.unsafe_cast_ptr<_1a59e4d06_Struct>();;
				{
					auto expr = &((*(_8824_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9b8d9b2:;
					if (it != expr_end) {
						jule::Ptr<_1a59e4d06_Struct> *_88311_d = it;
						{
							{
								
								if ((__jule_any_type64_compare((*((*(_self_))._field_referencer))._field_owner, (*(_88311_d))))) {
									_case_begin_1a9b8e2a9:;
									{
										_1a5b642c7_pushCycleError(_self_, jule::Any(_8824_s, &__jule_any_type64), jule::Any((*(_88311_d)), &__jule_any_type64), _86743_message);
										return false;;
									}
								}
								else if ((!(_1a5b646c3_checkCrossCycle(_self_, jule::Any((*(_88311_d)), &__jule_any_type64), _86743_message)))) {
									_case_begin_1a9b8e342:;
									{
										_1a5b642c7_pushCycleError(_self_, jule::Any(_8824_s, &__jule_any_type64), jule::Any((*(_88311_d)), &__jule_any_type64), _86743_message);
										return false;;
									}
								}
								_match_end_1a9b8e1aa:;
							};
						}
						_iter_next_1a9b8d9b2:;
						++it;
						goto _iter_begin_1a9b8d9b2;
					}
					_iter_end_1a9b8d9b2:;
				};
			}
		}
		_match_end_1a9b8a66d:;
	};
	return true;;
}



inline jule::Bool _1a5b64abe_checkIllegalCycles(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _90135_ident, jule::Any _90162_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90162_decl };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a9b91377:;
			{
				if ((*(_90162_decl.unsafe_cast_ptr<_1a59e4d06_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a9b8dcd1:;
			{
				if ((*(_90162_decl.unsafe_cast_ptr<_1a5b50060_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a9b8dd58:;
	};
	if ((_90162_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1a5b6344c_pushErr(_self_, (*((*(_90135_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1e9a030bc_StrBuilder _9247_message = static__1e9a034eb_New(32LL);;
	if ((!(_1a5b646c3_checkCrossCycle(_self_, _90162_decl, &(_9247_message))))) {
		jule::Str _9278_errMsg = _1e9a04354_Str(&_9247_message);;
		_1e9a04552_Clear(&_9247_message);
		_1a5b642c7_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90162_decl, &(_9247_message));
		_9278_errMsg+=_1e9a04354_Str(&_9247_message);
		_1a5b6344c_pushErr(_self_, (*((*(_90135_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_9278_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a9b95ca5:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90162_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a9b95304:;
			{
				{
					auto &_match_expr{ _90162_decl };
					
					if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1a9b96657:;
						{
							jule::Ptr<_1a59e4d06_Struct> _9439_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a59e4d06_Struct>();;
							(*(_9439_s))._field_Depends=jule::append((*_9439_s.alloc)._field_Depends,jule::Slice<jule::Ptr<_1a59e4d06_Struct>>::make({_90162_decl.unsafe_cast_ptr<_1a59e4d06_Struct>()}));
						}
					}
					_match_end_1a9b965e1:;
				};
			}
		}
		_match_end_1a9b95c50:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1a5b64eba_fromTypeAlias(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _95130_decl, jule::Ptr<_1a5b50060_TypeAlias>* _95157_ta) {
	if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95157_ta))))._field_Public, (*((*(_95157_ta))))._field_Token)))) {
		_1a5b6344c_pushErr(_self_, (*((*(_95130_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_95130_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_95157_ta))))._field_Used=true;
	if (((*((*(_95130_decl))))._field_Generics.len() > 0LL)) {
		_1a5b6344c_pushErr(_self_, (*((*(_95130_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_95130_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9b9b89e:;
			if (it != expr_end) {
				jule::Ptr<_1a5b50060_TypeAlias> _96811_bg = *it;
				{
					if (((_96811_bg == (*(_95157_ta))) || (((*((*((*(_95157_ta))))._field_Kind))._field_Kind != nullptr) && _1a5b5155b_Equal((*(*((*(_95157_ta))))._field_Kind.alloc)._field_Kind, (*(*(_96811_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1a9b9b89e;
					};
				}
				_iter_next_1a9b9b89e:;
				++it;
				goto _iter_begin_1a9b9b89e;
			}
			_iter_end_1a9b9b89e:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9b9db7b:;
			if (it != expr_end) {
				jule::Ptr<_1a5b50060_TypeAlias> _97911_bg = *it;
				{
					if ((_97911_bg == (*(_95157_ta)))) {
						_1a5b6344c_pushErr(_self_, (*((*(_95130_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95130_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95157_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9b9e561:;
						if (it != expr_end) {
							jule::Ptr<_1a5b50060_TypeAlias> _98412_dg = *it;
							{
								if ((_97911_bg == _98412_dg)) {
									_1a5b6344c_pushErr(_self_, (*((*(_95130_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95130_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1a9b9e561:;
							++it;
							goto _iter_begin_1a9b9e561;
						}
						_iter_end_1a9b9e561:;
					};
				}
				_iter_next_1a9b9db7b:;
				++it;
				goto _iter_begin_1a9b9db7b;
			}
			_iter_end_1a9b9db7b:;
		};
	};
	jule::Bool _9937_ok = _1a5b64abe_checkIllegalCycles(_self_, _95130_decl, jule::Any((*(_95157_ta)), &__jule_any_type65));;
	if ((!(_9937_ok))) {
		return nullptr;;
	};
	if (((*(*((*(_95157_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		_9937_ok=_1a5a9e058_checkTypeAliasDeclKind((*(_self_))._field_s, _95157_ta, (*(_self_))._field_lookup);
		if ((!(_9937_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_95157_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>::make({(*(_95157_ta))}));
	};
	jule::Ptr<_1a5b50d52_TypeKind> _10127_tk = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Generic=(*((*(_95157_ta))))._field_Generic, ._field_Kind=(*(*(*((*(_95157_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_Kind});;
	_1a5b63da9_pushReferenceByKind(_self_, &(_10127_tk));
	if ((*((*(_95157_ta))))._field_Binded) {
		(*(_10127_tk))._field_BindIdent=(*((*(_95157_ta))))._field_Ident;
	} else {
		(*(_10127_tk))._field_BindIdent=(*(*(*((*(_95157_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_10127_tk, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data19);;
}



inline jule::Ptr<_1a5a2088c_Enum> _1a5b653b6_fromEnum(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _102525_decl, jule::Ptr<_1a5a2088c_Enum>* _102552_e) {
	if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102552_e))))._field_Public, (*((*(_102552_e))))._field_Token)))) {
		_1a5b6344c_pushErr(_self_, (*((*(_102525_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102525_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102525_decl))))._field_Generics.len() > 0LL)) {
		_1a5b6344c_pushErr(_self_, (*((*(_102525_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102525_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102552_e));;
}



inline jule::Ptr<_1a5a22097_TypeEnum> _1a5b657b2_fromTypeEnum(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _103729_decl, jule::Ptr<_1a5a22097_TypeEnum>* _103756_e) {
	if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103756_e))))._field_Public, (*((*(_103756_e))))._field_Token)))) {
		_1a5b6344c_pushErr(_self_, (*((*(_103729_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103729_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103729_decl))))._field_Generics.len() > 0LL)) {
		_1a5b6344c_pushErr(_self_, (*((*(_103729_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103729_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103756_e));;
}



inline jule::Ptr<_1a5a1d181_Trait> _1a5b65bad_fromTrait(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _104926_decl, jule::Ptr<_1a5a1d181_Trait>* _104953_t) {
	if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104953_t))))._field_Public, (*((*(_104953_t))))._field_Token)))) {
		_1a5b6344c_pushErr(_self_, (*((*(_104926_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104926_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104926_decl))))._field_Generics.len() > 0LL)) {
		_1a5b6344c_pushErr(_self_, (*((*(_104926_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104926_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1a9b824bc_pushReference(_self_, _104953_t);
	return (*(_104953_t));;
}



inline jule::Bool _1a5b660a9_checkStructIns(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59e7a84_StructIns>* _106235_ins, jule::Ptr<_1c80b653c_Token>* _106257_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_106235_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_106235_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type64_compare((*(*(_self_))._field_referencer.alloc)._field_owner, (*((*(_106235_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a5aaa64c_precheckStructIns((*(_self_))._field_s, _106235_ins, (*(_106257_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_106235_ins))))._field_Generics.len() > 0LL)) {
		_1a5aab164_checkStructInsOperators((*(_self_))._field_s, (*(_106235_ins)));
		_1a5aaa905_checkStructIns((*(_self_))._field_s, _106235_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a5b66362_appendUsedStructReference(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59e4d06_Struct>* _108346_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a9bb3212:;
			{
				jule::Ptr<_1a59e4d06_Struct> _10898_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1a59e4d06_Struct>();;
				if ((!(_1a59e6786_IsUses(_10898_refS.ptr(), (*(_108346_s)))))) {
					(*_10898_refS.alloc)._field_Uses=jule::append((*_10898_refS.alloc)._field_Uses,jule::Slice<jule::Ptr<_1a59e4d06_Struct>>::make({(*(_108346_s))}));
				};
			}
		}
		_match_end_1a9bb31ac:;
	};
}



inline jule::Ptr<_1a59e7a84_StructIns> _1a5b6675d_buildStructInstance(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _109640_decl, jule::Ptr<_1a59e4d06_Struct>* _109667_s) {
	jule::Ptr<_1a5b61c20_referencer> _10987_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> _11007_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)) {
				_case_begin_1a9bb61c1:;
				{
					jule::Ptr<_1a5a5420b_scopeChecker> _11079_sc = (*(_self_))._field_lookup.cast_ptr<_1a5a5420b_scopeChecker>((jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0);;
					jule::Ptr<_1a5a5420b_scopeChecker> _11089_hard = _1a5a5783b_getHardRoot(_11079_sc);;
					if ((((*((*(_11089_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*_11089_hard.alloc)._field_owner.alloc)._field_Owner))._field_Decl != (*(_109667_s))))) {
						goto _match_end_1a9bb616b;
					};
					jule::I64 _11125_n = ((*(*_11089_hard.alloc)._field_owner.alloc)._field_Generics.len() + (*((*(*_11089_hard.alloc)._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11089_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11125_n);
				}
			}
			_match_end_1a9bb616b:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11227_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1a59e7a84_StructIns> _11267_ins = _1a59e5268_instance((*(_109667_s)));;
	(*(_11267_ins))._field_Generics=jule::Slice<jule::Ptr<_1a5b4e46b_InsGeneric>>::alloc(0LL, (*((*(_109640_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109640_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9bbb4a1:;
		if (it != expr_end) {
			jule::Ptr<_1a59c3e6c_TypeDecl> _112815_g = *it;
			{
				jule::Ptr<_1a5b50d52_TypeKind> _11298_kind = _1a5b6a069_build(_self_, &((*(_112815_g))._field_Kind));;
				if ((_11298_kind == nullptr)) {
					return nullptr;;
				};
				(*_11267_ins.alloc)._field_Generics=jule::append((*_11267_ins.alloc)._field_Generics,jule::Slice<jule::Ptr<_1a5b4e46b_InsGeneric>>::make({jule::new_ptr<_1a5b4e46b_InsGeneric>(_1a5b4e46b_InsGeneric{._field_Kind=_11298_kind, })}));
			}
			_iter_next_1a9bbb4a1:;
			++it;
			goto _iter_begin_1a9bbb4a1;
		}
		_iter_end_1a9bbb4a1:;
	};
	(*(_self_))._field_lookup=_11227_lookup;
	(*(_self_))._field_bannedGenerics=_11007_bannedGenerics;
	(*(_self_))._field_referencer=_10987_referencer;
	return _11267_ins;;
}



inline jule::Ptr<_1a59e7a84_StructIns> _1a5b66b59_fromStruct(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _114431_decl, jule::Ptr<_1a59e4d06_Struct>* _114458_s) {
	if ((!(_1a5a92524_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114458_s))))._field_Public, (*((*(_114458_s))))._field_Token)))) {
		_1a5b6344c_pushErr(_self_, (*((*(_114431_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114431_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114431_decl))))._field_Generics.len() > 0LL)) {
			_1a5b6344c_pushErr(_self_, (*((*(_114431_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1a59e7a84_StructIns>(_1a59e7a84_StructIns{._field_Decl=(*(_114458_s)), });;
	};
	jule::Bool _11627_ok = _1a5b64abe_checkIllegalCycles(_self_, _114431_decl, jule::Any((*(_114458_s)), &__jule_any_type64));;
	if ((!(_11627_ok))) {
		return nullptr;;
	};
	_1a5b66362_appendUsedStructReference(_self_, _114458_s);
	jule::Ptr<_1a59e7a84_StructIns> _11687_ins = _1a5b6675d_buildStructInstance(_self_, _114431_decl, _114458_s);;
	if ((_11687_ins == nullptr)) {
		return nullptr;;
	};
	_11627_ok=_1a5a932e4_checkGenericQuantity((*(_self_))._field_s, (*((*(_11687_ins))._field_Decl))._field_Generics.len(), (*(_11687_ins))._field_Generics.len(), (*((*(_114431_decl))))._field_Token);
	if ((!(_11627_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _11787_existInstance = _1a59e5576_appendInstance((*(_114458_s)).ptr(), &(_11687_ins));;
	if ((_11787_existInstance != nullptr)) {
		if ((!(_1a5a9c254_checkConstraintsStruct((*(_self_))._field_s, &(_11687_ins), &((*((*(_114431_decl))))._field_Token), _11787_existInstance)))) {
			return nullptr;;
		};
		_1a9b7eac4_pushReference(_self_, &(_11787_existInstance));
		return _11787_existInstance;;
	};
	if ((!(_1a5b660a9_checkStructIns(_self_, &(_11687_ins), &((*((*(_114431_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1a9b7eac4_pushReference(_self_, &(_11687_ins));
	return _11687_ins;;
}



inline jule::Trait _1a5b66e9a_getDef(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl>* _120227_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9bc5c3b:;
		if (it != expr_end) {
			jule::Ptr<_1a59d1177_GenericDecl> _120310_g = *it;
			{
				if (((*(_120310_g))._field_Ident == (*((*(_120227_decl))))._field_Ident)) {
					return jule::Trait(_1a5b6cc70_buildPrimType((*_120310_g.alloc)._field_Ident), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20);;
				};
			}
			_iter_next_1a9bc5c3b:;
			++it;
			goto _iter_begin_1a9bc5c3b;
		}
		_iter_end_1a9bc5c3b:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9bc607c:;
		if (it != expr_end) {
			jule::Ptr<_1a5b50060_TypeAlias> _120915_g = *it;
			{
				if (((*(_120915_g))._field_Ident == (*((*(_120227_decl))))._field_Ident)) {
					if (((*((*(_120227_decl))))._field_Generics.len() > 0LL)) {
						_1a5b6344c_pushErr(_self_, (*((*(_120227_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_120227_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1a59e7a84_StructIns> _12159_st = _1a5b54a26_Struct((*((*_120915_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_12159_st != nullptr)) {
						jule::Bool _12176_ok = _1a5b64abe_checkIllegalCycles(_self_, _120227_decl, jule::Any((*_12159_st.alloc)._field_Decl, &__jule_any_type64));;
						if ((!(_12176_ok))) {
							return nullptr;;
						};
					};
					return (*(*(*_120915_g.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1a9bc607c:;
			++it;
			goto _iter_begin_1a9bc607c;
		}
		_iter_end_1a9bc607c:;
	};
	if ((!((*((*(_120227_decl))))._field_Binded))) {
		jule::Ptr<_1a5a2088c_Enum> _12278_e = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b7049d_FindEnum((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident);;
		if ((_12278_e != nullptr)) {
			return jule::Trait(_1a5b653b6_fromEnum(_self_, _120227_decl, &(_12278_e)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data3);;
		};
		jule::Ptr<_1a5a22097_TypeEnum> _12328_te = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b707de_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident);;
		if ((_12328_te != nullptr)) {
			return jule::Trait(_1a5b657b2_fromTypeEnum(_self_, _120227_decl, &(_12328_te)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data4);;
		};
		jule::Ptr<_1a5a1d181_Trait> _12378_t = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b7015c_FindTrait((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident);;
		if ((_12378_t != nullptr)) {
			return jule::Trait(_1a5b65bad_fromTrait(_self_, _120227_decl, &(_12378_t)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1a5b6344c_pushErr(_self_, (*((*(_120227_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a59e4d06_Struct> _12467_s = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b6e920_FindStruct((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident, (*((*(_120227_decl))))._field_Binded);;
	if ((_12467_s != nullptr)) {
		return jule::Trait(_1a5b66b59_fromStruct(_self_, _120227_decl, &(_12467_s)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0);;
	};
	jule::Ptr<_1a5b50060_TypeAlias> _12517_ta = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b6e524_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_120227_decl))))._field_Ident, (*((*(_120227_decl))))._field_Binded);;
	if (((_12517_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12517_ta=_1c798b077_findBuiltinTypeAlias((*((*(_120227_decl))))._field_Ident);
	};
	if ((_12517_ta != nullptr)) {
		return _1a5b64eba_fromTypeAlias(_self_, _120227_decl, &(_12517_ta));;
	};
	_1a5b6344c_pushErr(_self_, (*((*(_120227_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_120227_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait _1a5b672db_buildIdent(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4577_IdentTypeDecl> _126330_decl) {
	return _1a5b66e9a_getDef(_self_, &(_126330_decl));;
}



inline jule::Trait _1a5b6762c_buildSubIdent(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4841_SubIdentTypeDecl> _126733_decl) {
	jule::Trait _12687_ident = _1a5b672db_buildIdent(_self_, (*(_126733_decl))._field_Idents[0LL]);;
	if ((_12687_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12687_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data4)) {
			_case_begin_1a9bd3a5c:;
			{
				goto _match_end_1a9bd3b17;
			}
		}
		else {
			_case_begin_1a9bd3b6c:;
			{
				_1a5b6344c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9bd3b17:;
	};
	jule::Ptr<_1a5a22097_TypeEnum> _12797_t = _12687_ident.cast_ptr<_1a5a22097_TypeEnum>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1a59c4577_IdentTypeDecl>> _12807_idents = (*_126733_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_12807_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9bd5685:;
		if (it != expr_end) {
			jule::I64 _12817_i = it - expr->begin();
			jule::Ptr<_1a59c4577_IdentTypeDecl> _128110_id = *it;
			{
				jule::Ptr<_1a5a219c0_TypeEnumItem> _12828_item = _1a5a22b58_FindItem(_12797_t.ptr(), (*(_128110_id))._field_Ident);;
				if ((_12828_item == nullptr)) {
					_1a5b6344c_pushErr(_self_, (*_128110_id.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_12797_t.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_128110_id.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_12807_idents.len() - _12817_i) == 1LL)) {
					_1a5b63da9_pushReferenceByKind(_self_, &((*((*(_12828_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_12828_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data19);;
				};
				_12797_t=_1a5b53edc_TypeEnum((*(*(_12828_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_12797_t == nullptr)) {
					_1a5b6344c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1a9bd5685:;
			++it;
			_12817_i++;
			goto _iter_begin_1a9bd5685;
		}
		_iter_end_1a9bd5685:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5b5c457_Sptr> _1a5b6796d_buildSptrFromType(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _130138_elem) {
	{
		
		if (((*(_130138_elem)) == nullptr)) {
			_case_begin_1a9bd9d93:;
			{
				return nullptr;;
			}
		}
		else if ((_1a5b54a26_Struct((*(_130138_elem)).ptr()) != nullptr)) {
			_case_begin_1a9bd9e3c:;
			{
				jule::Ptr<_1a59e7a84_StructIns> _13074_s = _1a5b54a26_Struct((*(_130138_elem)).ptr());;
				if ((((*(_13074_s))._field_Decl != nullptr) && (*(*_13074_s.alloc)._field_Decl.alloc)._field_Binded)) {
					_1a5b6344c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1a5b54273_Arr((*(_130138_elem)).ptr()) != nullptr) && (*(_1a5b54273_Arr((*(_130138_elem)).ptr())))._field_Auto)) {
			_case_begin_1a9bd9ea3:;
			{
				_1a5b6344c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9bd9579:;
	};
	return jule::new_ptr<_1a5b5c457_Sptr>(_1a5b5c457_Sptr{._field_Elem=(*(_130138_elem))});;
}



inline jule::Ptr<_1a5b5c457_Sptr> _1a5b67cae_buildSptr(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c5017_SptrTypeDecl> _132129_decl) {
	jule::Bool _13223_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13223_cycleRisk;
	});;
	jule::Ptr<_1a5b50d52_TypeKind> _13267_elem = _1a5b6a3aa_checkDecl(_self_, &((*(_132129_decl))._field_Elem));;
	return _1a5b6796d_buildSptrFromType(_self_, &(_13267_elem));;
}



inline jule::Ptr<_1a5b60c1e_Ptr> _1a5b68100_buildPtrFromType(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _133037_elem) {
	{
		
		if (((*(_133037_elem)) == nullptr)) {
			_case_begin_1a9be4cd2:;
			{
				return nullptr;;
			}
		}
		else if (((_1a5b54273_Arr((*(_133037_elem)).ptr()) != nullptr) && (*(_1a5b54273_Arr((*(_133037_elem)).ptr())))._field_Auto)) {
			_case_begin_1a9be4d7b:;
			{
				_1a5b6344c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1a5b60c1e_Ptr>();;
			}
		}
		_match_end_1a9be4bc2:;
	};
	return jule::new_ptr<_1a5b60c1e_Ptr>(_1a5b60c1e_Ptr{._field_Elem=(*(_133037_elem))});;
}



inline jule::Ptr<_1a5b60c1e_Ptr> _1a5b68441_buildPtr(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c5996_PtrTypeDecl> _134528_decl) {
	jule::Bool _13463_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13463_cycleRisk;
	});;
	jule::Ptr<_1a5b50d52_TypeKind> _135011_elem = nullptr;;
	if ((!(_1a59c5d09_IsUnsafe(_134528_decl.ptr())))) {
		_135011_elem=_1a5b6a3aa_checkDecl(_self_, &((*_134528_decl.alloc)._field_Elem));
		return _1a5b68100_buildPtrFromType(_self_, &(_135011_elem));;
	};
	return jule::new_ptr<_1a5b60c1e_Ptr>(_1a5b60c1e_Ptr{._field_Elem=_135011_elem});;
}



inline jule::Ptr<_1a5b5ce2a_Slc> _1a5b68782_buildSlc(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c539c_SlcTypeDecl> _136228_decl) {
	jule::Bool _13633_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13633_cycleRisk;
	});;
	jule::Ptr<_1a5b50d52_TypeKind> _13677_elem = _1a5b6a3aa_checkDecl(_self_, &((*(_136228_decl))._field_Elem));;
	{
		
		if ((_13677_elem == nullptr)) {
			_case_begin_1a9be9db4:;
			{
				return nullptr;;
			}
		}
		else if (((_1a5b54273_Arr(_13677_elem.ptr()) != nullptr) && (*(_1a5b54273_Arr(_13677_elem)))._field_Auto)) {
			_case_begin_1a9be9e5d:;
			{
				_1a5b6344c_pushErr(_self_, (*((*_136228_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9be9d5e:;
	};
	return jule::new_ptr<_1a5b5ce2a_Slc>(_1a5b5ce2a_Slc{._field_Elem=_13677_elem});;
}



inline jule::Ptr<_1a5b6024b_Arr> _1a5b68ac3_buildArr(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c6238_ArrTypeDecl> _138328_decl) {
	jule::I64 _13847_n = 0LL;;
	if ((!(_1a59c659b_AutoSized(_138328_decl.ptr())))) {
		jule::Ptr<_1a5b19aeb_Data> _13878_size = _1a5b3e8e0_evalExpr(_1a5a99262_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_138328_decl.alloc)._field_Size);;
		if ((_13878_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1a5b1a503_IsConst(_13878_size.ptr())))) {
			_1a5b6344c_pushErr(_self_, (*((*_138328_decl.alloc)._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a5b534a3_Prim((*(_13878_size))._field_Kind.ptr()) == nullptr) || (!(_1b916b502_IsInt((*(_1a5b534a3_Prim((*(_13878_size))._field_Kind)))._field_Kind))))) {
			_1a5b6344c_pushErr(_self_, (*((*_138328_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_13847_n=static_cast<jule::I64>(_1b916e813_AsI64((*(_13878_size))._field_Constant.ptr()));
		if ((_13847_n < 0LL)) {
			_1a5b6344c_pushErr(_self_, (*((*_138328_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14055_max = _1b9167564_MaxI(jule::Str::lit("int", 3));;
			if (((_1b916043b_BitSize != 64LL) && (static_cast<jule::I64>(_13847_n) > _14055_max))) {
				_1a5b6344c_pushErr(_self_, (*((*_138328_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1a5b4bd5e_constoa(&((*(_13878_size))._field_Constant)), &__jule_any_type4),jule::Any(_1b915dcdb_FmtInt(_14055_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1a5b50d52_TypeKind> _14147_elem = _1a5b6a3aa_checkDecl(_self_, &((*_138328_decl.alloc)._field_Elem));;
	{
		
		if ((_14147_elem == nullptr)) {
			_case_begin_1a9c048c4:;
			{
				return nullptr;;
			}
		}
		else if (((_1a5b54273_Arr(_14147_elem.ptr()) != nullptr) && (*(_1a5b54273_Arr(_14147_elem)))._field_Auto)) {
			_case_begin_1a9c0494b:;
			{
				_1a5b6344c_pushErr(_self_, (*((*_138328_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9c02e22:;
	};
	return jule::new_ptr<_1a5b6024b_Arr>(_1a5b6024b_Arr{._field_Auto=_1a59c659b_AutoSized(_138328_decl), ._field_N=_13847_n, ._field_Elem=_14147_elem});;
}



inline jule::Ptr<_1a5b5e5be_Map> _1a5b68e14_buildMap(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c6986_MapTypeDecl> _143228_decl) {
	jule::Bool _14333_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14333_cycleRisk;
	});;
	jule::Ptr<_1a5b50d52_TypeKind> _14377_key = _1a5b6a3aa_checkDecl(_self_, &((*(_143228_decl))._field_Key));;
	if ((_14377_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a5b50d52_TypeKind> _14427_val = _1a5b6a3aa_checkDecl(_self_, &((*_143228_decl.alloc)._field_Val));;
	if ((_14427_val == nullptr)) {
		return nullptr;;
	};
	if ((_1a5b53c56_Enum(_14427_val.ptr()) != nullptr)) {
		_1a5b6344c_pushErr(_self_, (*((*_143228_decl.alloc)._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1a5b5e5be_Map>(_1a5b5e5be_Map{._field_Key=_14377_key, ._field_Val=_14427_val});;
}



inline jule::Ptr<_1a5b5da1e_Tuple> _1a5b69255_buildTuple(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c5699_TupleTypeDecl> _145630_decl) {
	jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> _14577_types = jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>::alloc(0LL, (*(_145630_decl))._field_Types.len());;
	{
		auto expr = &((*_145630_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c0ad92:;
		if (it != expr_end) {
			jule::Ptr<_1a59c3e6c_TypeDecl> _145815_t = *it;
			{
				jule::Ptr<_1a5b50d52_TypeKind> _14598_kind = _1a5b6a3aa_checkDecl(_self_, &(_145815_t));;
				if ((_14598_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> &__jule_push_dest = _14577_types; __jule_push_dest.push(_14598_kind); };
			}
			_iter_next_1a9c0ad92:;
			++it;
			goto _iter_begin_1a9c0ad92;
		}
		_iter_end_1a9c0ad92:;
	};
	return jule::new_ptr<_1a5b5da1e_Tuple>(_1a5b5da1e_Tuple{._field_Types=_14577_types});;
}



inline jule::Bool _1a5b69596_checkFuncTypes(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a5a0cca8_FnIns>* _146935_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146935_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c0c8aa:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0bc30_ParamIns> _147015_p = *it;
			{
				(*(_147015_p))._field_Kind=_1a5b6a069_build(_self_, &((*((*((*((*_147015_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_147015_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1a5a9c908_checkFnParamKind((*(_self_))._field_s, &(_147015_p));
			}
			_iter_next_1a9c0c8aa:;
			++it;
			goto _iter_begin_1a9c0c8aa;
		}
		_iter_end_1a9c0c8aa:;
	};
	if ((!(_1a5a0a24a_IsVoid((*((*(_146935_f))))._field_Decl.ptr())))) {
		(*((*(_146935_f))))._field_Result=_1a5b6a069_build(_self_, &((*(*((*((*(*((*(_146935_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_146935_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a5a0cca8_FnIns> _1a5b698d7_buildFunc(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59d5b2c_FnDecl> _148729_decl) {
	jule::Bool _14883_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14883_cycleRisk;
	});;
	if (((*(_148729_decl))._field_Generics.len() > 0LL)) {
		_1a5b6344c_pushErr(_self_, (*_148729_decl.alloc)._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5a09cc7_Fn> _14977_f = _1a5a1441e_buildFunc(_148729_decl);;
	jule::I64 _14993_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1a5aa6bed_checkAnonFuncDecl((*(_self_))._field_s, &(_14977_f));
	if ((_14993_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _15057_ins = _1a5a0b2a1_instanceForce(_14977_f);;
	(*(_15057_ins))._field_Anon=true;
	(*_15057_ins.alloc)._field_AsAnon=true;
	jule::Bool _15093_ok = _1a5b69596_checkFuncTypes(_self_, &(_15057_ins));;
	if ((!(_15093_ok))) {
		return nullptr;;
	};
	return _15057_ins;;
}



inline jule::Trait _1a5b69c28_buildByNamespace(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c4c1a_NamespaceTypeDecl> _151736_decl) {
	jule::Str _15183_path = _1a5b6c896_buildLinkPathByTokens(&((*(_151736_decl))._field_Idents));;
	jule::Ptr<_1a5a6dcd6_ImportInfo> _15197_imp = ((_1a5b70943_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1a5b6dc2c_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>>((void*)__jule_anon_1a9c17057, jule::Ptr<__jule_anon_1a9c17057_ctx>::make(__jule_anon_1a9c17057_ctx{._151736_decl=_151736_decl,._15183_path=_15183_path}).as<jule::Uintptr>(), __jule_anon_1a9c17057_ctx_handler));;
	jule::Str _15263_selfIdent = jule::Str::lit("self", 4);;
	if (((_15197_imp == nullptr) || (!(_1a5a71327_isLookupable(_15197_imp.ptr(), &(_15263_selfIdent)))))) {
		_1a5b6344c_pushErr(_self_, (*_151736_decl.alloc)._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15183_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1a5b63848_disallowBuiltin(_self_);
	jule::Trait _15337_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15197_imp, (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data1);
	jule::Ptr<_1a5b50d52_TypeKind> _15357_kind = _1a5b6a3aa_checkDecl(_self_, &((*_151736_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15337_lookup;
	_1a5b6364a_allowBuiltin(_self_);
	return jule::Trait(_15357_kind, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data19);;
}



inline jule::Ptr<_1a5b50d52_TypeKind> _1a5b6a069_build(_1a5b62c10_typeChecker* _self_, jule::Any* _154126_declKind) {
	jule::Trait _154211_kind = nullptr;;
	{
		auto &_match_expr{ (*(_154126_declKind)) };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a9c1ca1e:;
			{
				jule::Trait _15458_t = _1a5b672db_buildIdent(_self_, (*(_154126_declKind)).cast_ptr<_1a59c4577_IdentTypeDecl>(&__jule_any_type74));;
				if ((_15458_t != nullptr)) {
					_154211_kind=_15458_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a9c1be3b:;
			{
				jule::Trait _15508_t = _1a5b6762c_buildSubIdent(_self_, (*(_154126_declKind)).cast_ptr<_1a59c4841_SubIdentTypeDecl>(&__jule_any_type87));;
				if ((_15508_t != nullptr)) {
					_154211_kind=_15508_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a9c1c0d4:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a5b5c457_Sptr> _15568_t = _1a5b67cae_buildSptr(_self_, (*(_154126_declKind)).cast_ptr<_1a59c5017_SptrTypeDecl>(&__jule_any_type71));;
				if ((_15568_t != nullptr)) {
					_154211_kind=jule::Trait(_15568_t, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a9c1c14a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a5b60c1e_Ptr> _15628_t = _1a5b68441_buildPtr(_self_, (*(_154126_declKind)).cast_ptr<_1a59c5996_PtrTypeDecl>(&__jule_any_type70));;
				if ((_15628_t != nullptr)) {
					_154211_kind=jule::Trait(_15628_t, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1a9c1c1b1:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a5b5ce2a_Slc> _15688_t = _1a5b68782_buildSlc(_self_, (*(_154126_declKind)).cast_ptr<_1a59c539c_SlcTypeDecl>(&__jule_any_type69));;
				if ((_15688_t != nullptr)) {
					_154211_kind=jule::Trait(_15688_t, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1a9c1c227:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a5b6024b_Arr> _15748_t = _1a5b68ac3_buildArr(_self_, (*(_154126_declKind)).cast_ptr<_1a59c6238_ArrTypeDecl>(&__jule_any_type68));;
				if ((_15748_t != nullptr)) {
					_154211_kind=jule::Trait(_15748_t, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1a9c1c28d:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a5b5e5be_Map> _15808_t = _1a5b68e14_buildMap(_self_, (*(_154126_declKind)).cast_ptr<_1a59c6986_MapTypeDecl>(&__jule_any_type72));;
				if ((_15808_t != nullptr)) {
					_154211_kind=jule::Trait(_15808_t, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a9c1c304:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a5b5da1e_Tuple> _15868_t = _1a5b69255_buildTuple(_self_, (*(_154126_declKind)).cast_ptr<_1a59c5699_TupleTypeDecl>(&__jule_any_type73));;
				if ((_15868_t != nullptr)) {
					_154211_kind=jule::Trait(_15868_t, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a9c1cada:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a5a0cca8_FnIns> _15928_t = _1a5b698d7_buildFunc(_self_, (*(_154126_declKind)).cast_ptr<_1a59d5b2c_FnDecl>(&__jule_any_type14));;
				if ((_15928_t != nullptr)) {
					_154211_kind=jule::Trait(_15928_t, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a9c1cb51:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _15988_t = _1a5b69c28_buildByNamespace(_self_, (*(_154126_declKind)).cast_ptr<_1a59c4c1a_NamespaceTypeDecl>(&__jule_any_type91));;
				if ((_15988_t != nullptr)) {
					_154211_kind=_15988_t;
				};
			}
		}
		else {
			_case_begin_1a9c1c06d:;
			{
				_1a5b6344c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9c1c018:;
	};
	if ((_154211_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _154211_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data19)) {
			_case_begin_1a9c2adb2:;
			{
				return _154211_kind.cast_ptr<_1a5b50d52_TypeKind>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1a9c1d02a:;
			{
				jule::Ptr<_1a5b50d52_TypeKind> _16138_tk = jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=_154211_kind});;
				{
					auto &_match_expr{ _154211_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)) {
						_case_begin_1a9c292de:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16138_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0)) {
						_case_begin_1a9c29179:;
						{
							jule::Ptr<_1a59e7a84_StructIns> _16205_s = _154211_kind.cast_ptr<_1a59e7a84_StructIns>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0);;
							if ((((*(_16205_s))._field_Decl != nullptr) && (*(*_16205_s.alloc)._field_Decl.alloc)._field_Binded)) {
								(*(_16138_tk))._field_BindIdent=(*(*_16205_s.alloc)._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1a9c29289:;
				};
				return _16138_tk;;
			}
		}
		_match_end_1a9c1ce92:;
	};
}



inline jule::Ptr<_1a5b50d52_TypeKind> _1a5b6a3aa_checkDecl(_1a5b62c10_typeChecker* _self_, jule::Ptr<_1a59c3e6c_TypeDecl>* _162930_decl) {
	jule::Ptr<_1c80b653c_Token> _16317_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162930_decl))))._field_Token;
	jule::Ptr<_1a5b50d52_TypeKind> _16347_kind = _1a5b6a069_build(_self_, &((*((*(_162930_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16317_errorToken;
	return _16347_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b62c10_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a5b6ad06_prim(jule::Str* _165618_ident, jule::Ptr<_1a5b5892b_Prim> _165630_t) {
	return ((*(_165630_t))._field_Kind == (*(_165618_ident)));;
}



inline jule::Bool static__1a5b6b17a_exist(jule::Str* _166019_ident, jule::Ptr<_1a5b50d52_TypeKind>* _166036_k) {
	{
		
		if ((_1a5b534a3_Prim((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9c30bdb:;
			{
				return static__1a5b6ad06_prim(_166019_ident, _1a5b534a3_Prim((*(_166036_k)).ptr()));;
			}
		}
		else if ((_1a5b53739_Sptr((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9c30c63:;
			{
				jule::Ptr<_1a5b5c457_Sptr> _16658_sptr = _1a5b53739_Sptr((*(_166036_k)).ptr());;
				return static__1a5b6b17a_exist(_166019_ident, &((*(_16658_sptr))._field_Elem));;
			}
		}
		else if ((_1a5b539c0_Ptr((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9c30cda:;
			{
				jule::Ptr<_1a5b60c1e_Ptr> _16688_ptr = _1a5b539c0_Ptr((*(_166036_k)).ptr());;
				return static__1a5b6b17a_exist(_166019_ident, &((*(_16688_ptr))._field_Elem));;
			}
		}
		else if ((_1a5b54509_Slc((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9c30d62:;
			{
				jule::Ptr<_1a5b5ce2a_Slc> _16718_slc = _1a5b54509_Slc((*(_166036_k)).ptr());;
				return static__1a5b6b17a_exist(_166019_ident, &((*(_16718_slc))._field_Elem));;
			}
		}
		else if ((_1a5b54273_Arr((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9c3102c:;
			{
				jule::Ptr<_1a5b6024b_Arr> _16748_arr = _1a5b54273_Arr((*(_166036_k)).ptr());;
				return static__1a5b6b17a_exist(_166019_ident, &((*(_16748_arr))._field_Elem));;
			}
		}
		else if ((_1a5b55043_Map((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9c31093:;
			{
				jule::Ptr<_1a5b5e5be_Map> _16778_m = _1a5b55043_Map((*(_166036_k)).ptr());;
				return (static__1a5b6b17a_exist(_166019_ident, &((*(_16778_m))._field_Key)) || static__1a5b6b17a_exist(_166019_ident, &((*_16778_m.alloc)._field_Val)));;
			}
		}
		else if ((_1a5b54a26_Struct((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9c31109:;
			{
				jule::Ptr<_1a59e7a84_StructIns> _16818_s = _1a5b54a26_Struct((*(_166036_k)).ptr());;
				{
					auto expr = &((*(_16818_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9c381cc:;
					if (it != expr_end) {
						jule::Ptr<_1a5b4e46b_InsGeneric> _168216_g = *it;
						{
							if (static__1a5b6b17a_exist(_166019_ident, &((*(_168216_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1a9c381cc:;
						++it;
						goto _iter_begin_1a9c381cc;
					}
					_iter_end_1a9c381cc:;
				};
				return false;;
			}
		}
		else if ((_1a5b54790_Fn((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9c31170:;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _16898_f = _1a5b54790_Fn((*(_166036_k)).ptr());;
				{
					auto expr = &((*(_16898_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9c39d05:;
					if (it != expr_end) {
						jule::Ptr<_1a5a0bc30_ParamIns> _169016_p = *it;
						{
							if (_1a5a0891e_IsSelf((*(_169016_p))._field_Decl.ptr())) {
								goto _iter_next_1a9c39d05;
							};
							if (static__1a5b6b17a_exist(_166019_ident, &((*_169016_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1a9c39d05:;
						++it;
						goto _iter_begin_1a9c39d05;
					}
					_iter_end_1a9c39d05:;
				};
				if (((*_16898_f.alloc)._field_Result != nullptr)) {
					return static__1a5b6b17a_exist(_166019_ident, &((*_16898_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1a5b552c9_Tup((*(_166036_k)).ptr()) != nullptr)) {
			_case_begin_1a9c311e7:;
			{
				jule::Ptr<_1a5b5da1e_Tuple> _17038_tup = _1a5b552c9_Tup((*(_166036_k)).ptr());;
				{
					auto expr = &((*(_17038_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9c3c621:;
					if (it != expr_end) {
						jule::Ptr<_1a5b50d52_TypeKind> _170416_t = *it;
						{
							if (static__1a5b6b17a_exist(_166019_ident, &(_170416_t))) {
								return true;;
							};
						}
						_iter_next_1a9c3c621:;
						++it;
						goto _iter_begin_1a9c3c621;
					}
					_iter_end_1a9c3c621:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1a9c30aba:;
			{
				return false;;
			}
		}
		_match_end_1a9c309bb:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a5b6a8b6_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a682b884_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68725de_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a6873601_stop(_1a6872e80_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a6873887_stopped(_1a6872e80_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a6873b1d_finished(_1a6872e80_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a6873da4_isLastSt(_1a6872e80_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a6874217_pushErr(_1a6872e80_scopeParser* _self_, jule::Ptr<_1c80b653c_Token> _18823_token, jule::Str _18838_fmt) {
	_1a6896d1c_pushErr((*(_self_))._field_p.ptr(), _18823_token, _18838_fmt, jule::Slice<jule::Any>());
}



inline void _1a687457a_pushSuggestion(_1a6872e80_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args) {
	_1a6897180_pushSuggestion((*(_self_))._field_p.ptr(), _19330_fmt, _19343_args);
}



inline void _1a6874833_insertAsNext(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _19733_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a68725de_stmt>(_1a68725de_stmt{._field_tokens=(*(_19733_tokens)), });
}



inline jule::Ptr<_1a68725de_stmt> _1a6874ab9_next(_1a6872e80_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1a59d3e8d_ScopeTree> _1a6874eb5_buildScope(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _20731_tokens, jule::Ptr<_1c80b653c_Token> _20753_end) {
	jule::Ptr<_1a59d3e8d_ScopeTree> _2087_s = _1a6871368_newScope();;
	(*(_2087_s))._field_Parent=(*(_self_))._field_s;
	(*_2087_s.alloc)._field_End=_20753_end;
	_1a6872e80_scopeParser _2117_ssp = _1a6872e80_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1a687ed38_build(&_2117_ssp, _20731_tokens, &(_2087_s));
	return _2087_s;;
}



inline jule::Ptr<_1a59d6cd7_VarDecl> _1a6875306_buildVarSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _21831_tokens) {
	jule::Ptr<_1a59d6cd7_VarDecl> _2197_v = _1a6899ade_buildVar((*(_self_))._field_p, (*(_21831_tokens)));;
	(*(_2197_v))._field_Scope=(*(_self_))._field_s;
	return _2197_v;;
}



inline jule::Ptr<_1a59d71b1_RetSt> _1a6875647_buildRetSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _22430_tokens) {
	jule::Ptr<_1a59d71b1_RetSt> _2257_st = jule::new_ptr<_1a59d71b1_RetSt>(_1a59d71b1_RetSt{._field_Token=_22430_tokens[0LL], });;
	if ((_22430_tokens.len() > 1LL)) {
		(_22430_tokens).mut_slice(1LL);;
		(*(_2257_st))._field_Expr=_1a68974c1_buildExpr((*(_self_))._field_p, &(_22430_tokens));
	};
	return _2257_st;;
}



inline jule::Ptr<_1a59d7931_Iter> _1a6875988_buildWhileNextIter(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a68725de_stmt>* _23539_s) {
	jule::Ptr<_1a59d7931_Iter> _2367_it = jule::new_ptr<_1a59d7931_Iter>(_1a59d7931_Iter{._field_Token=(*((*(_23539_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _2397_tokens = (*((*(_23539_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1a59d825b_WhileKind> _2407_kind = jule::new_ptr<_1a59d825b_WhileKind>();;
	if ((_2397_tokens.len() > 0LL)) {
		(*_2407_kind.alloc)._field_Expr=_1a68974c1_buildExpr((*(_self_))._field_p, &(_2397_tokens));
	};
	if (_1a6873da4_isLastSt(_self_)) {
		_1a6874217_pushErr(_self_, (*(_2367_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_2397_tokens=(*(_1a6874ab9_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _2527_stTokens = _1a688b6c4_getBlockExpr(&(_2397_tokens));;
	if ((_2527_stTokens.len() > 0LL)) {
		jule::Ptr<_1a68725de_stmt> _2548_stmt = jule::new_ptr<_1a68725de_stmt>(_1a68725de_stmt{._field_tokens=_2527_stTokens, ._field_terminated=(*((*(_23539_s))))._field_terminated});;
		(*_2407_kind.alloc)._field_NextToken=_2527_stTokens[0LL];
		(*_2407_kind.alloc)._field_Next=_1a687e9c5_buildSt(_self_, &(_2548_stmt));
	};
	jule::I64 _2627_i = _2527_stTokens.len();;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _2637_blockTokens = _1a6894a1d_range(&(_2627_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2397_tokens));;
	if ((_2637_blockTokens == nullptr)) {
		_1a6873601_stop(_self_);
		_1a6874217_pushErr(_self_, (*_2367_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a687457a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2627_i < _2397_tokens.len())) {
		_1a6874217_pushErr(_self_, _2397_tokens[_2627_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_2367_it.alloc)._field_Scope=_1a6874eb5_buildScope(_self_, &(_2637_blockTokens), _2397_tokens[(_2627_i - 1LL)]);
	(*_2367_it.alloc)._field_Kind=jule::Any(_2407_kind, &__jule_any_type36);
	return _2367_it;;
}



inline jule::Ptr<_1a59d825b_WhileKind> _1a6875cc9_buildWhileIterKind(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _28039_tokens) {
	return jule::new_ptr<_1a59d825b_WhileKind>(_1a59d825b_WhileKind{._field_Expr=_1a68974c1_buildExpr((*(_self_))._field_p, _28039_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1a687611a_getRangeKindKeysTokens(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _28643_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _2877_vars;
	jule::Slice<_1d1c6d64c_Log> _28713_errs;
	({
		__jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a689528d_parts(_28643_toks, static_cast<jule::U64>(5LLU), true);
		_2877_vars = __jule_assign_result.__jule_result_arg0;
		_28713_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28713_errs);
	return _2877_vars;;
}



inline jule::Ptr<_1a59d6cd7_VarDecl> _1a687645b_buildRangeKindKey(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _29238_tokens) {
	if (((*(_29238_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a59d6cd7_VarDecl> _2967_key = jule::new_ptr<_1a59d6cd7_VarDecl>(_1a59d6cd7_VarDecl{._field_Token=(*(_29238_tokens))[0LL], ._field_Setter=(*(_29238_tokens))[0LL], });;
	if (((*((*(_2967_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2967_key.alloc)._field_Mutable=true;
		if (((*(_29238_tokens)).len() == 1LL)) {
			_1a6874217_pushErr(_self_, (*_2967_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*_2967_key.alloc)._field_Token=(*(_29238_tokens))[1LL];
	} else if (((*(_29238_tokens)).len() > 1LL)) {
		_1a6874217_pushErr(_self_, (*(_29238_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_2967_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6874217_pushErr(_self_, (*_2967_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		_1a687457a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2967_key.alloc)._field_Ident=(*(*_2967_key.alloc)._field_Token.alloc)._field_Kind;
	return _2967_key;;
}



inline jule::Slice<jule::Ptr<_1a59d6cd7_VarDecl>> _1a687679c_buildRangeKindKeys(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>>* _31839_parts) {
	jule::Slice<jule::Ptr<_1a59d6cd7_VarDecl>> _31911_keys = nullptr;;
	{
		auto expr = _31839_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e7ac49:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _32015_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1a59d6cd7_VarDecl>> &__jule_push_dest = _31911_keys; __jule_push_dest.push(_1a687645b_buildRangeKindKey(_self_, &(_32015_tokens))); };
			}
			_iter_next_1a9e7ac49:;
			++it;
			goto _iter_begin_1a9e7ac49;
		}
		_iter_end_1a9e7ac49:;
	};
	return _31911_keys;;
}



inline void _1a6876b10_setupRangeKindKeysPlain(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a59d8b63_RangeKind>* _32644_rng, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _32666_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _3277_keyTokens = _1a687611a_getRangeKindKeysTokens(_self_, _32666_tokens);;
	if ((_3277_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_3277_keyTokens.len() > 2LL)) {
		_1a6874217_pushErr(_self_, (*((*(_32644_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1a59d6cd7_VarDecl>> _3347_keys = _1a687679c_buildRangeKindKeys(_self_, &(_3277_keyTokens));;
	(*((*(_32644_rng))))._field_KeyA=_3347_keys[0LL];
	if ((_3347_keys.len() > 1LL)) {
		(*((*(_32644_rng))))._field_KeyB=_3347_keys[1LL];
	};
}



inline void _1a6876e73_setupRangeKindKeysExplicit(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a59d8b63_RangeKind>* _34147_rng, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _34169_tokens) {
	jule::I64 _3427_i = 0LL;;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _3437_rang = _1a6894a1d_range(&(_3427_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34169_tokens);;
	if ((_3427_i < (*(_34169_tokens)).len())) {
		_1a6874217_pushErr(_self_, (*((*(_34147_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1a6876b10_setupRangeKindKeysPlain(_self_, _34147_rng, &(_3437_rang));
}



inline void _1a68772d6_setupRangeKindKeys(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a59d8b63_RangeKind>* _35039_rng, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _35061_tokens) {
	if (((*((*(_35061_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1a6876e73_setupRangeKindKeysExplicit(_self_, _35039_rng, _35061_tokens);
		return;;
	};
	_1a6876b10_setupRangeKindKeysPlain(_self_, _35039_rng, _35061_tokens);
}



inline jule::Ptr<_1a59d8b63_RangeKind> _1a687778c_buildRangeIterKind(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _35839_var_tokens, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _3598_exprTokens, jule::Ptr<_1c80b653c_Token>* _35935_inToken) {
	jule::Ptr<_1a59d8b63_RangeKind> _3607_rng = jule::new_ptr<_1a59d8b63_RangeKind>(_1a59d8b63_RangeKind{._field_InToken=(*(_35935_inToken)), });;
	if (((*(_3598_exprTokens)).len() == 0LL)) {
		_1a6874217_pushErr(_self_, (*(_3607_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _3607_rng;;
	};
	(*_3607_rng.alloc)._field_Expr=_1a68974c1_buildExpr((*(_self_))._field_p, _3598_exprTokens);
	if (((*(_35839_var_tokens)).len() > 0LL)) {
		_1a68772d6_setupRangeKindKeys(_self_, &(_3607_rng), _35839_var_tokens);
	};
	return _3607_rng;;
}



inline jule::Any _1a6877b88_buildCommonIterKind(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _37440_tokens, jule::Ptr<_1c80b653c_Token>* _37459_err_tok) {
	jule::I64 _3757_braceN = 0LL;;
	{
		auto expr = _37440_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e85616:;
		if (it != expr_end) {
			jule::I64 _3768_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> _37615_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37615_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a9e860b7:;
						{
							(_3757_braceN)++;
							goto _iter_next_1a9e85616;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a9e86491:;
						{
							(_3757_braceN)--;
						}
					}
					_match_end_1a9e863a3:;
				};
				if ((_3757_braceN != 0LL)) {
					goto _iter_next_1a9e85616;
				};
				{
					auto &_match_expr{ (*(_37615_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1a9e87690:;
						{
							jule::Slice<jule::Ptr<_1c80b653c_Token>> _3939_declTokens = (*(_37440_tokens)).slice(0LL, _3768_i);;
							jule::Slice<jule::Ptr<_1c80b653c_Token>> _3949_exprTokens = (*(_37440_tokens)).slice((_3768_i + 1LL));;
							return jule::Any(_1a687778c_buildRangeIterKind(_self_, &(_3939_declTokens), &(_3949_exprTokens), &(_37615_tok)), &__jule_any_type38);;
						}
					}
					_match_end_1a9e87b79:;
				};
			}
			_iter_next_1a9e85616:;
			++it;
			_3768_i++;
			goto _iter_begin_1a9e85616;
		}
		_iter_end_1a9e85616:;
	};
	return jule::Any(_1a6875cc9_buildWhileIterKind(_self_, _37440_tokens), &__jule_any_type36);;
}



inline jule::Ptr<_1a59d7931_Iter> _1a6877ec9_buildCommonIter(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _40135_tokens) {
	jule::Ptr<_1a59d7931_Iter> _4027_it = jule::new_ptr<_1a59d7931_Iter>(_1a59d7931_Iter{._field_Token=_40135_tokens[0LL], });;
	(_40135_tokens).mut_slice(1LL);;
	if ((_40135_tokens.len() == 0LL)) {
		_1a6873601_stop(_self_);
		_1a6874217_pushErr(_self_, (*(_4027_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1a687457a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _4127_exprTokens = _1a688b6c4_getBlockExpr(&(_40135_tokens));;
	if ((_4127_exprTokens.len() > 0LL)) {
		(*_4027_it.alloc)._field_Kind=_1a6877b88_buildCommonIterKind(_self_, &(_4127_exprTokens), &((*_4027_it.alloc)._field_Token));
	};
	jule::I64 _4167_i = _4127_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _4177_scopeTokens = _1a6894a1d_range(&(_4167_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40135_tokens));;
	if ((_4177_scopeTokens == nullptr)) {
		_1a6873601_stop(_self_);
		_1a6874217_pushErr(_self_, (*_4027_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a687457a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_4167_i < _40135_tokens.len())) {
		_1a6874217_pushErr(_self_, _40135_tokens[_4167_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_4027_it.alloc)._field_Scope=_1a6874eb5_buildScope(_self_, &(_4177_scopeTokens), _40135_tokens[(_4167_i - 1LL)]);
	return _4027_it;;
}



inline jule::Ptr<_1a59d7931_Iter> _1a687831a_buildIterSt(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a68725de_stmt>* _43132_st) {
	if ((*((*(_43132_st))))._field_terminated) {
		return _1a6875988_buildWhileNextIter(_self_, _43132_st);;
	};
	return _1a6877ec9_buildCommonIter(_self_, (*((*(_43132_st))))._field_tokens);;
}



inline jule::Ptr<_1a59d903c_BreakSt> _1a687865b_buildBreakSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _43833_tokens) {
	jule::Ptr<_1a59d903c_BreakSt> _4397_brk = jule::new_ptr<_1a59d903c_BreakSt>(_1a59d903c_BreakSt{._field_Token=(*(_43833_tokens))[0LL], });;
	if (((*(_43833_tokens)).len() > 1LL)) {
		if (((*((*(_43833_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a6874217_pushErr(_self_, (*(_43833_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1a687457a_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_4397_brk))._field_Label=(*(_43833_tokens))[1LL];
			if (((*(_43833_tokens)).len() > 2LL)) {
				_1a6874217_pushErr(_self_, (*(_43833_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _4397_brk;;
}



inline jule::Ptr<_1a59d9416_ContSt> _1a687899c_buildContSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _45632_tokens) {
	jule::Ptr<_1a59d9416_ContSt> _4577_cont = jule::new_ptr<_1a59d9416_ContSt>(_1a59d9416_ContSt{._field_Token=(*(_45632_tokens))[0LL], });;
	if (((*(_45632_tokens)).len() > 1LL)) {
		if (((*((*(_45632_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a6874217_pushErr(_self_, (*(_45632_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1a687457a_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_4577_cont))._field_Label=(*(_45632_tokens))[1LL];
			if (((*(_45632_tokens)).len() > 2LL)) {
				_1a6874217_pushErr(_self_, (*(_45632_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _4577_cont;;
}



inline jule::Ptr<_1a59d98bc_If> _1a6878cdd_buildIf(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _47428_tokens) {
	jule::Ptr<_1a59d98bc_If> _4757_model = jule::new_ptr<_1a59d98bc_If>(_1a59d98bc_If{._field_Token=(*(_47428_tokens))[0LL], });;
	((*(_47428_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _4797_exprTokens = _1a688b6c4_getBlockExpr(_47428_tokens);;
	jule::I64 _4807_i = 0LL;;
	if ((_4797_exprTokens.len() == 0LL)) {
		_1a6874217_pushErr(_self_, (*(_4757_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_4807_i=_4797_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _4867_scopeTokens = _1a6894a1d_range(&(_4807_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47428_tokens);;
	if ((_4867_scopeTokens == nullptr)) {
		_1a6873601_stop(_self_);
		_1a6874217_pushErr(_self_, (*(_4757_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1a687457a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c80b653c_Token> _4937_end = (*(_47428_tokens))[(_4807_i - 1LL)];;
	if ((_4807_i < (*(_47428_tokens)).len())) {
		if (((*((*(_47428_tokens))[_4807_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47428_tokens))).mut_slice(_4807_i);;
		} else {
			_1a6874217_pushErr(_self_, (*(_47428_tokens))[_4807_i], jule::Str::lit("invalid syntax", 14));
			(*(_47428_tokens))=nullptr;
		};
	};
	(*_4757_model.alloc)._field_Expr=_1a68974c1_buildExpr((*(_self_))._field_p, &(_4797_exprTokens));
	(*_4757_model.alloc)._field_Scope=_1a6874eb5_buildScope(_self_, &(_4867_scopeTokens), _4937_end);
	return _4757_model;;
}



inline jule::Ptr<_1a59d9c96_Else> _1a687912e_buildElse(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _50730_tokens) {
	jule::Ptr<_1a59d9c96_Else> _5087_els = jule::new_ptr<_1a59d9c96_Else>(_1a59d9c96_Else{._field_Token=(*(_50730_tokens))[0LL], });;
	((*(_50730_tokens))).mut_slice(1LL);;
	jule::I64 _5127_i = 0LL;;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _5137_scopeTokens = _1a6894a1d_range(&(_5127_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50730_tokens);;
	if ((_5137_scopeTokens == nullptr)) {
		if ((_5127_i < (*(_50730_tokens)).len())) {
			_1a6874217_pushErr(_self_, (*(_5087_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1a6873601_stop(_self_);
			_1a6874217_pushErr(_self_, (*(_5087_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1a687457a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_5127_i < (*(_50730_tokens)).len())) {
		_1a6874217_pushErr(_self_, (*(_50730_tokens))[_5127_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_5087_els))._field_Scope=_1a6874eb5_buildScope(_self_, &(_5137_scopeTokens), (*(_50730_tokens))[(_5127_i - 1LL)]);
	return _5087_els;;
}



inline jule::Ptr<_1a59da24c_Conditional> _1a6879470_buildIfElseChain(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _53136_tokens) {
	jule::Ptr<_1a59da24c_Conditional> _5327_chain = jule::new_ptr<_1a59da24c_Conditional>(_1a59da24c_Conditional{._field_Head=_1a6878cdd_buildIf(_self_, &(_53136_tokens)), });;
	if (((*(_5327_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53136_tokens.len() != 0LL)) {
		{
			if (((*(_53136_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1a9ea78d0;
			};
			if (((_53136_tokens.len() > 1LL) && ((*(_53136_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53136_tokens).mut_slice(1LL);;
				jule::Ptr<_1a59d98bc_If> _5449_elif = _1a6878cdd_buildIf(_self_, &(_53136_tokens));;
				(*_5327_chain.alloc)._field_Tail=jule::append((*_5327_chain.alloc)._field_Tail,jule::Slice<jule::Ptr<_1a59d98bc_If>>::make({_5449_elif}));
				goto _iter_next_1a9ea78d0;
			};
			(*_5327_chain.alloc)._field_Default=_1a687912e_buildElse(_self_, &(_53136_tokens));
			goto _iter_end_1a9ea78d0;
		}
	_iter_next_1a9ea78d0:;
	}
	_iter_end_1a9ea78d0:;;
	return _5327_chain;;
}



inline jule::Ptr<_1a59c82a1_Expr> _1a68797b1_buildCoCallSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _55433_tokens) {
	jule::Ptr<_1c80b653c_Token> _5553_token = _55433_tokens[0LL];;
	(_55433_tokens).mut_slice(1LL);;
	jule::Ptr<_1a59c82a1_Expr> _5577_e = _1a68974c1_buildExpr((*(_self_))._field_p, &(_55433_tokens));;
	if ((_5577_e == nullptr)) {
		return _5577_e;;
	};
	{
		auto &_match_expr{ (*(_5577_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a9eaba27:;
			{
				(*((*(_5577_e))._field_Kind.unsafe_cast_ptr<_1a59cbeca_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1a9eac055:;
			{
				_1a6874217_pushErr(_self_, _5553_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1a9eac000:;
	};
	return _5577_e;;
}



inline jule::Ptr<_1a59d192a_GotoSt> _1a6879b02_buildGotoSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _57032_tokens) {
	jule::Ptr<_1a59d192a_GotoSt> _5717_gt = jule::new_ptr<_1a59d192a_GotoSt>(_1a59d192a_GotoSt{._field_Token=(*(_57032_tokens))[0LL], });;
	if (((*(_57032_tokens)).len() == 1LL)) {
		_1a6874217_pushErr(_self_, (*(_5717_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57032_tokens)).len() > 2LL)) {
		_1a6874217_pushErr(_self_, (*(_57032_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1c80b653c_Token> _5807_identToken = (*(_57032_tokens))[1LL];;
	if (((*(_5807_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6874217_pushErr(_self_, _5807_identToken, jule::Str::lit("invalid syntax", 14));
		_1a687457a_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _5717_gt;;
	};
	(*(_5717_gt))._field_Label=_5807_identToken;
	return _5717_gt;;
}



inline jule::Ptr<_1a59d1c27_FallSt> _1a6879e43_buildFallSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _59032_tokens) {
	jule::Ptr<_1a59d1c27_FallSt> _5917_fll = jule::new_ptr<_1a59d1c27_FallSt>(_1a59d1c27_FallSt{._field_Token=(*(_59032_tokens))[0LL]});;
	if (((*(_59032_tokens)).len() > 1LL)) {
		_1a6874217_pushErr(_self_, (*(_59032_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _5917_fll;;
}



inline jule::Ptr<_1a59da989_TypeAliasDecl> _1a687a284_buildTypeAliasSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _60037_tokens) {
	jule::Ptr<_1a59da989_TypeAliasDecl> _6017_tad = _1a6898c64_buildTypeAliasDecl((*(_self_))._field_p, _60037_tokens);;
	(*(_6017_tad))._field_Scope=(*(_self_))._field_s;
	return _6017_tad;;
}



inline void _1a687a75c_pushCaseExpr(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _60632_tokens, jule::Ptr<_1c80b653c_Token> _60654_token, jule::Bool _6073_typeMatch, jule::Slice<jule::Ptr<_1a59c82a1_Expr>>* _60725_exprs) {
	if ((_60632_tokens.len() == 0LL)) {
		return;;
	};
	if (_6073_typeMatch) {
		jule::I64 _6128_i = 0LL;;
		jule::Ptr<_1a59c3e6c_TypeDecl> _6138_t;
		jule::Bool _61311_ok;
		({
			__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType((*(_self_))._field_p, &(_60632_tokens), (&(_6128_i)), true);
			_6138_t = __jule_assign_result.__jule_result_arg0;
			_61311_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61311_ok) {
			{ jule::Slice<jule::Ptr<_1a59c82a1_Expr>> &__jule_push_dest = (*(_60725_exprs)); __jule_push_dest.push(jule::new_ptr<_1a59c82a1_Expr>(_1a59c82a1_Expr{._field_Token=_60632_tokens[0LL], ._field_End=_60632_tokens[(_60632_tokens.len() - 1LL)], ._field_Kind=jule::Any(_6138_t, &__jule_any_type89)})); };
			if ((_6128_i < _60632_tokens.len())) {
				_1a6874217_pushErr(_self_, _60632_tokens[_6128_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a59c82a1_Expr>> &__jule_push_dest = (*(_60725_exprs)); __jule_push_dest.push(_1a68974c1_buildExpr((*(_self_))._field_p, &(_60632_tokens))); };
}



inline __jule_tuple_sx_1a59c82a1_Expr__jule_tuple_bool _1a687ac13_buildCaseExprs(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _62935_tokens, jule::Ptr<_1c80b653c_Token>* _62958_colon, jule::Bool _62973_typeMatch) {
	__jule_tuple_sx_1a59c82a1_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _6307_exprs = jule::Slice<jule::Ptr<_1a59c82a1_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _6317_braceN = 0LL;;
	jule::I64 _6327_j = 0LL;;
	{
		auto expr = _62935_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9eb846d:;
		if (it != expr_end) {
			jule::I64 _6338_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> _63315_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63315_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1a9eb97c1:;
						{
							(_6317_braceN)++;
							goto _iter_next_1a9eb846d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1a9eb9b9a:;
						{
							(_6317_braceN)--;
							goto _iter_next_1a9eb846d;
						}
					}
					_match_end_1a9eb9aac:;
				};
				if ((_6317_braceN != 0LL)) {
					goto _iter_next_1a9eb846d;
				};
				{
					
					if (((*(_63315_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1a9ebb31c:;
						{
							jule::Slice<jule::Ptr<_1c80b653c_Token>> _6525_exprTokens = (*(_62935_tokens)).slice(_6327_j, _6338_i);;
							if ((_6525_exprTokens.len() == 0LL)) {
								_1a6874217_pushErr(_self_, _63315_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1a687a75c_pushCaseExpr(_self_, (*(_62935_tokens)).slice(_6327_j, _6338_i), _63315_tok, _62973_typeMatch, &(_6307_exprs));
							};
							_6327_j=(_6338_i + 1LL);
						}
					}
					else if (((*(_63315_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1a9ebb383:;
						{
							(*(_62958_colon))=_63315_tok;
							_1a687a75c_pushCaseExpr(_self_, (*(_62935_tokens)).slice(_6327_j, _6338_i), _63315_tok, _62973_typeMatch, &(_6307_exprs));
							((*(_62935_tokens))).mut_slice((_6338_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _6307_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6338_i - _6327_j) == 0LL) || (_6307_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1a9ebb20c:;
				};
			}
			_iter_next_1a9eb846d:;
			++it;
			_6338_i++;
			goto _iter_begin_1a9eb846d;
		}
		_iter_end_1a9eb846d:;
	};
	_1a6874217_pushErr(_self_, (*(_62935_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_62935_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1a59d3e8d_ScopeTree> _1a687b054_buildCaseScope(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _67135_tokens) {
	jule::I64 _6727_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6748_i = 0LL;;
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _6758_next;
			({
				__jule_tuple_sx_1c80b653c_Token__jule_tuple_bool __jule_assign_result = _1a68722ae_skipSt(&(_6748_i), (*(_67135_tokens)).slice(_6727_n));
				_6758_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6758_next.len() == 0LL)) {
				goto _iter_end_1a9ebee36;
			};
			jule::Ptr<_1c80b653c_Token> _6794_tok = _6758_next[0LL];;
			if (((*(_6794_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6727_n+=_6748_i;
				goto _iter_next_1a9ebee36;
			};
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _6848_scopeTokens = (*(_67135_tokens)).slice(0LL, _6727_n);;
			jule::Ptr<_1a59d3e8d_ScopeTree> _6858_scope = _1a6874eb5_buildScope(_self_, &(_6848_scopeTokens), (*(_67135_tokens))[_6727_n]);;
			((*(_67135_tokens))).mut_slice(_6727_n);;
			return _6858_scope;;
		}
	_iter_next_1a9ebee36:;
	}
	_iter_end_1a9ebee36:;;
	jule::Ptr<_1c80b653c_Token> _68911_end;;
	if (((*(_67135_tokens)).len() > 0LL)) {
		_68911_end=(*(_67135_tokens))[((*(_67135_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1a59d3e8d_ScopeTree> _6937_scope = _1a6874eb5_buildScope(_self_, _67135_tokens, _68911_end);;
	(*(_67135_tokens))=nullptr;
	return _6937_scope;;
}



inline __jule_tuple_x_1a59dae40_Case__jule_tuple_bool _1a687b450_buildCase(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _69830_tokens, jule::Bool _69848_typeMatch) {
	__jule_tuple_x_1a59dae40_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a59dae40_Case> _6997_c = jule::new_ptr<_1a59dae40_Case>(_1a59dae40_Case{._field_Token=(*(_69830_tokens))[0LL], });;
	((*(_69830_tokens))).mut_slice(1LL);;
	jule::Ptr<_1c80b653c_Token> _70311_colon = nullptr;;
	jule::Bool _70412_ok;
	({
		__jule_tuple_sx_1a59c82a1_Expr__jule_tuple_bool __jule_assign_result = _1a687ac13_buildCaseExprs(_self_, _69830_tokens, &(_70311_colon), _69848_typeMatch);
		(*(_6997_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70412_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_6997_c.alloc)._field_Scope=_1a687b054_buildCaseScope(_self_, _69830_tokens);
	if (((*((*_6997_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*_6997_c.alloc)._field_Scope.alloc)._field_End=_70311_colon;
	};
	jule::Bool _7093_isDefault = (_70412_ok && ((*_6997_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6997_c;
	__jule_func_result.__jule_result_arg1 = _7093_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a59dae40_Case__jule_tuple_x_1a59d9c96_Else _1a687b84b_buildCases(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _71330_tokens, jule::Bool _71348_typeMatch) {
	__jule_tuple_sx_1a59dae40_Case__jule_tuple_x_1a59d9c96_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1a59dae40_Case>> _71411_cases = nullptr;;
	jule::Ptr<_1a59d9c96_Else> _71511_def = nullptr;;
	jule::Bool _7167_defNotLast = false;;
	while ((_71330_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1c80b653c_Token> _7188_tok = _71330_tokens[0LL];;
			if (((*(_7188_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1a6874217_pushErr(_self_, _7188_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1a9ec84a0;
			};
			jule::Ptr<_1a59dae40_Case> _7238_c;
			jule::Bool _72311_isDefault;
			({
				__jule_tuple_x_1a59dae40_Case__jule_tuple_bool __jule_assign_result = _1a687b450_buildCase(_self_, &(_71330_tokens), _71348_typeMatch);
				_7238_c = __jule_assign_result.__jule_result_arg0;
				_72311_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72311_isDefault) {
				(*(_7238_c))._field_Token=_7188_tok;
				if ((_71511_def == nullptr)) {
					_71511_def=jule::new_ptr<_1a59d9c96_Else>(_1a59d9c96_Else{._field_Token=(*_7238_c.alloc)._field_Token, ._field_Scope=(*_7238_c.alloc)._field_Scope});
				} else {
					_1a6874217_pushErr(_self_, _7188_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_7167_defNotLast=(_7167_defNotLast || (_71511_def != nullptr));
				{ jule::Slice<jule::Ptr<_1a59dae40_Case>> &__jule_push_dest = _71411_cases; __jule_push_dest.push(_7238_c); };
			};
		}
	_iter_next_1a9ec84a0:;
	}
	_iter_end_1a9ec84a0:;;
	if (_7167_defNotLast) {
		_1a6874217_pushErr(_self_, (*(_71511_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71411_cases;
	__jule_func_result.__jule_result_arg1 = _71511_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1a59db759_MatchCase> _1a687bb8c_buildMatchCase(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _74734_tokens) {
	jule::Ptr<_1a59db759_MatchCase> _7487_m = jule::new_ptr<_1a59db759_MatchCase>(_1a59db759_MatchCase{._field_Token=_74734_tokens[0LL], });;
	(_74734_tokens).mut_slice(1LL);;
	if (((_74734_tokens.len() > 0LL) && ((*(_74734_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7487_m))._field_TypeMatch=true;
		(_74734_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _7587_exprTokens = _1a688b6c4_getBlockExpr(&(_74734_tokens));;
	if ((_7587_exprTokens.len() > 0LL)) {
		(*_7487_m.alloc)._field_Expr=_1a68974c1_buildExpr((*(_self_))._field_p, &(_7587_exprTokens));
	} else if ((*_7487_m.alloc)._field_TypeMatch) {
		_1a6874217_pushErr(_self_, (*_7487_m.alloc)._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _7657_i = _7587_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _7667_blockToks = _1a6894a1d_range(&(_7657_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74734_tokens));;
	if ((_7667_blockToks == nullptr)) {
		_1a6873601_stop(_self_);
		_1a6874217_pushErr(_self_, (*_7487_m.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1a687457a_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7657_i < _74734_tokens.len())) {
		_1a6874217_pushErr(_self_, _74734_tokens[_7657_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_7487_m.alloc)._field_End=_74734_tokens[(_7657_i - 1LL)];
	({
		__jule_tuple_sx_1a59dae40_Case__jule_tuple_x_1a59d9c96_Else __jule_assign_result = _1a687b84b_buildCases(_self_, _7667_blockToks, (*_7487_m.alloc)._field_TypeMatch);
		(*_7487_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7487_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7487_m;;
}



inline jule::Ptr<_1a59d3e8d_ScopeTree> _1a687becd_buildScopeSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _78032_tokens) {
	jule::Bool _7817_isUnsafe = false;;
	jule::Bool _7827_isDeferred = false;;
	jule::Ptr<_1c80b653c_Token> _7837_token = _78032_tokens[0LL];;
	if (((*(_7837_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7817_isUnsafe=true;
		(_78032_tokens).mut_slice(1LL);;
		if ((_78032_tokens.len() == 0LL)) {
			_1a6874217_pushErr(_self_, _7837_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_7837_token=_78032_tokens[0LL];
		if (((*_7837_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_7827_isDeferred=true;
			(_78032_tokens).mut_slice(1LL);;
			if ((_78032_tokens.len() == 0LL)) {
				_1a6874217_pushErr(_self_, _7837_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_7837_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7827_isDeferred=true;
		(_78032_tokens).mut_slice(1LL);;
		if ((_78032_tokens.len() == 0LL)) {
			_1a6874217_pushErr(_self_, _7837_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _8097_i = 0LL;;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _8107_scopeTokens = _1a6894a1d_range(&(_8097_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78032_tokens));;
	if ((_8107_scopeTokens == nullptr)) {
		_1a6874217_pushErr(_self_, _7837_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_8097_i < _78032_tokens.len())) {
		_1a6874217_pushErr(_self_, _78032_tokens[_8097_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1a59d3e8d_ScopeTree> _8177_scope = _1a6874eb5_buildScope(_self_, &(_8107_scopeTokens), _78032_tokens[(_8097_i - 1LL)]);;
	(*(_8177_scope))._field_Unsafety=_7817_isUnsafe;
	(*_8177_scope.alloc)._field_Deferred=_7827_isDeferred;
	return _8177_scope;;
}



inline jule::Ptr<_1a59d1551_LabelSt> _1a687c31e_buildLabelSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _82333_tokens) {
	jule::Ptr<_1a59d1551_LabelSt> _8247_lbl = jule::new_ptr<_1a59d1551_LabelSt>(_1a59d1551_LabelSt{._field_Token=(*(_82333_tokens))[0LL], ._field_Ident=(*((*(_82333_tokens))[0LL]))._field_Kind});;
	if (((*(_82333_tokens)).len() > 2LL)) {
		((*(_82333_tokens))).mut_slice(2LL);;
		_1a6874833_insertAsNext(_self_, _82333_tokens);
	};
	return _8247_lbl;;
}



inline __jule_tuple__1a59d35ca_StmtData__jule_tuple_bool _1a687c660_buildIdSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _83830_tokens) {
	__jule_tuple__1a59d35ca_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83830_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c80b653c_Token> _8437_token = (*(_83830_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8437_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1a9eddcbd:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a687c31e_buildLabelSt(_self_, _83830_tokens), &__jule_any_type55);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a9ede928:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a6892e6c_assignInfo> _1a687c9a1_buildAssignInfo(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _85236_tokens) {
	jule::Ptr<_1a6892e6c_assignInfo> _8537_info = jule::new_ptr<_1a6892e6c_assignInfo>(_1a6892e6c_assignInfo{._field_ok=true});;
	jule::I64 _8567_braceN = 0LL;;
	{
		auto expr = _85236_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9ee1144:;
		if (it != expr_end) {
			jule::I64 _8578_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> _85715_token = *it;
			{
				{
					auto &_match_expr{ (*(_85715_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1a9ee1ac3:;
						{
							(_8567_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1a9ee1e7a:;
						{
							(_8567_braceN)--;
						}
					}
					_match_end_1a9ee1d8c:;
				};
				{
					
					if ((_8567_braceN > 0LL)) {
						_case_begin_1a9ee3113:;
						{
							goto _iter_next_1a9ee1144;
						}
					}
					else if (((!(_1c80bb388_IsAssignOp((*(_85715_token))._field_Id))) && ((*_85715_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1a9ee3179:;
						{
							goto _iter_next_1a9ee1144;
						}
					}
					_match_end_1a9ee30ad:;
				};
				(*(_8537_info))._field_l=(*(_85236_tokens)).slice(0LL, _8578_i);
				if (((*_8537_info.alloc)._field_l.len() == 0LL)) {
					(*_8537_info.alloc)._field_ok=false;
				};
				(*_8537_info.alloc)._field_setter=_85715_token;
				if (((_8578_i + 1LL) >= (*(_85236_tokens)).len())) {
					(*_8537_info.alloc)._field_r=nullptr;
					(*_8537_info.alloc)._field_ok=_1c80bb0be_IsPostfixOp((*((*_8537_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1a9ee1144;
				};
				(*_8537_info.alloc)._field_r=(*(_85236_tokens)).slice((_8578_i + 1LL));
				if (_1c80bb0be_IsPostfixOp((*(*_8537_info.alloc)._field_setter.alloc)._field_Id)) {
					if (((*_8537_info.alloc)._field_r.len() > 0LL)) {
						_1a6874217_pushErr(_self_, (*_8537_info.alloc)._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*_8537_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1a9ee1144;
			}
			_iter_next_1a9ee1144:;
			++it;
			_8578_i++;
			goto _iter_begin_1a9ee1144;
		}
		_iter_end_1a9ee1144:;
	};
	return _8537_info;;
}



inline jule::Ptr<_1a59d2387_AssignLeft> _1a687cce2_buildAssignL(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _89733_tokens) {
	jule::Ptr<_1a59d2387_AssignLeft> _8987_l = jule::new_ptr<_1a59d2387_AssignLeft>(_1a59d2387_AssignLeft{._field_Token=(*(_89733_tokens))[0LL], });;
	if (((*((*(_89733_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_8987_l))._field_Ident=(*((*_8987_l.alloc)._field_Token))._field_Kind;
	};
	(*_8987_l.alloc)._field_Expr=_1a68974c1_buildExpr((*(_self_))._field_p, _89733_tokens);
	return _8987_l;;
}



inline jule::Slice<jule::Ptr<_1a59d2387_AssignLeft>> _1a687d133_buildAssignLs(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>>* _90834_parts) {
	jule::Slice<jule::Ptr<_1a59d2387_AssignLeft>> _90911_lefts = nullptr;;
	{
		auto expr = _90834_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9eeab43:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _91015_part = *it;
			{
				jule::Ptr<_1a59d2387_AssignLeft> _9118_l = _1a687cce2_buildAssignL(_self_, &(_91015_part));;
				{ jule::Slice<jule::Ptr<_1a59d2387_AssignLeft>> &__jule_push_dest = _90911_lefts; __jule_push_dest.push(_9118_l); };
			}
			_iter_next_1a9eeab43:;
			++it;
			goto _iter_begin_1a9eeab43;
		}
		_iter_end_1a9eeab43:;
	};
	return _90911_lefts;;
}



inline __jule_tuple__1a59d35ca_StmtData__jule_tuple_bool _1a687d474_buildPlainAssign(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _91737_tokens) {
	__jule_tuple__1a59d35ca_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a6892e6c_assignInfo> _9187_info = _1a687c9a1_buildAssignInfo(_self_, _91737_tokens);;
	if ((!((*(_9187_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a59d291a_AssignSt> _9237_assign = jule::new_ptr<_1a59d291a_AssignSt>(_1a59d291a_AssignSt{._field_Setter=(*_9187_info.alloc)._field_setter, });;
	if (((*((*_9187_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_9237_assign))._field_Declarative=true;
		(*_9237_assign.alloc)._field_Right=_1a68974c1_buildExpr((*(_self_))._field_p, &((*_9187_info.alloc)._field_r));
		jule::Bool _9314_ok = _1a687d870_buildDeclAssign1(_self_, &((*_9187_info.alloc)._field_l), &(_9237_assign));;
		if ((!(_9314_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_9237_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_9237_assign, &__jule_any_type57);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1a59d2387_AssignLeft> _9408_left = (*_9237_assign.alloc)._field_Left[0LL];;
		jule::Ptr<_1a59d6cd7_VarDecl> _9418_decl = jule::new_ptr<_1a59d6cd7_VarDecl>(_1a59d6cd7_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9408_left))._field_Token, ._field_Setter=(*_9237_assign.alloc)._field_Setter, ._field_Ident=(*_9408_left.alloc)._field_Ident, ._field_Mutable=(*_9408_left.alloc)._field_Mutable, ._field_Reference=(*_9408_left.alloc)._field_Reference, ._field_Expr=(*_9237_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_9418_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _9537_parts;
	jule::Slice<_1d1c6d64c_Log> _95314_errs;
	({
		__jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a689528d_parts(&((*_9187_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9537_parts = __jule_assign_result.__jule_result_arg0;
		_95314_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95314_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95314_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_9237_assign.alloc)._field_Left=_1a687d133_buildAssignLs(_self_, &(_9537_parts));
	if (((*_9187_info.alloc)._field_r != nullptr)) {
		(*_9237_assign.alloc)._field_Right=_1a68974c1_buildExpr((*(_self_))._field_p, &((*_9187_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_9237_assign, &__jule_any_type57);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1a687d870_buildDeclAssign1(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _96737_lefts, jule::Ptr<_1a59d291a_AssignSt>* _96759_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _9697_parts;
	jule::Slice<_1d1c6d64c_Log> _96914_errs;
	({
		__jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a689528d_parts(_96737_lefts, static_cast<jule::U64>(5LLU), true);
		_9697_parts = __jule_assign_result.__jule_result_arg0;
		_96914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96914_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_96914_errs);
		return false;;
	};
	{
		auto expr = &(_9697_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa007347:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _97515_part = *it;
			{
				jule::Bool _9768_isMut = false;;
				jule::Bool _9778_isRef = false;;
				jule::Ptr<_1c80b653c_Token> _9794_token = _97515_part[0LL];;
				if (((*(_9794_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9768_isMut=true;
					(_97515_part).mut_slice(1LL);;
					if ((_97515_part.len() == 0LL)) {
						_1a6874217_pushErr(_self_, _9794_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if (((*(_97515_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9778_isRef=true;
					(_97515_part).mut_slice(1LL);;
					if ((_97515_part.len() == 0LL)) {
						_1a6874217_pushErr(_self_, _9794_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if ((((*(_97515_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_97515_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1a6874217_pushErr(_self_, _9794_token, jule::Str::lit("invalid syntax", 14));
					return false;;
				};
				jule::Ptr<_1a59d2387_AssignLeft> _10038_l = _1a687cce2_buildAssignL(_self_, &(_97515_part));;
				(*(_10038_l))._field_Mutable=_9768_isMut;
				(*_10038_l.alloc)._field_Reference=_9778_isRef;
				{ jule::Slice<jule::Ptr<_1a59d2387_AssignLeft>> &__jule_push_dest = (*((*(_96759_assign))))._field_Left; __jule_push_dest.push(_10038_l); };
			}
			_iter_next_1aa007347:;
			++it;
			goto _iter_begin_1aa007347;
		}
		_iter_end_1aa007347:;
	};
	return true;;
}



inline __jule_tuple_x_1a59d291a_AssignSt__jule_tuple_bool _1a687dbb1_buildDeclAssign(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _101235_tokens) {
	__jule_tuple_x_1a59d291a_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101235_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101235_tokens).mut_slice(1LL);;
	jule::Ptr<_1c80b653c_Token> _10187_token = _101235_tokens[0LL];;
	if (((*(_10187_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a59d291a_AssignSt> _10237_assign = jule::new_ptr<_1a59d291a_AssignSt>(_1a59d291a_AssignSt{._field_Declarative=true, });;
	jule::I64 _10277_i = 0LL;;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _10287_rang = _1a6894a1d_range(&(_10277_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101235_tokens));;
	if ((_10287_rang == nullptr)) {
		_1a6874217_pushErr(_self_, _10187_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10277_i + 1LL) < _101235_tokens.len())) {
		(*(_10237_assign))._field_Setter=_101235_tokens[_10277_i];
		if (((*((*_10237_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a6874217_pushErr(_self_, (*_10237_assign.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_10277_i)++;
		jule::Slice<jule::Ptr<_1c80b653c_Token>> _10388_exprTokens = _101235_tokens.slice(_10277_i);;
		(*_10237_assign.alloc)._field_Right=_1a68974c1_buildExpr((*(_self_))._field_p, &(_10388_exprTokens));
	};
	jule::Bool _10423_ok = _1a687d870_buildDeclAssign1(_self_, &(_10287_rang), &(_10237_assign));;
	__jule_func_result.__jule_result_arg0 = _10237_assign;
	__jule_func_result.__jule_result_arg1 = _10423_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1a59d35ca_StmtData__jule_tuple_bool _1a687e002_buildAssignSt(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _104634_tokens) {
	__jule_tuple__1a59d35ca_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a6893324_checkAssignTokens(_104634_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104634_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1aa016972:;
			{
				({
					__jule_tuple_x_1a59d291a_AssignSt__jule_tuple_bool __jule_assign_result = _1a687dbb1_buildDeclAssign(_self_, (*(_104634_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type57);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aa015ae7:;
			{
				({
					__jule_tuple__1a59d35ca_StmtData__jule_tuple_bool __jule_assign_result = _1a687d474_buildPlainAssign(_self_, _104634_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aa01608c:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a59c8b75_UseExpr> _1a687e343_buildUseExpr(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _105933_tokens) {
	if (((*(_105933_tokens)).len() == 1LL)) {
		_1a6874217_pushErr(_self_, (*(_105933_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1a59c8b75_UseExpr> _10647_ue = jule::new_ptr<_1a59c8b75_UseExpr>(_1a59c8b75_UseExpr{._field_Token=(*(_105933_tokens))[0LL], });;
	((*(_105933_tokens))).mut_slice(1LL);;
	(*(_10647_ue))._field_Expr=_1a68974c1_buildExpr((*(_self_))._field_p, _105933_tokens);
	return _10647_ue;;
}



inline jule::Any _1a687e684_buildConstSt(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a68725de_stmt>* _107233_st) {
	if (((*((*(_107233_st))))._field_tokens.len() == 1LL)) {
		_1a6874217_pushErr(_self_, (*((*(_107233_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107233_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1aa01acd9:;
			{
				((*((*(_107233_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a59d7931_Iter> _10808_iter = _1a687831a_buildIterSt(_self_, _107233_st);;
				if ((_10808_iter != nullptr)) {
					(*_10808_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10808_iter, &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1aa01ab0d:;
			{
				((*((*(_107233_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1a59db759_MatchCase> _10878_mt = _1a687bb8c_buildMatchCase(_self_, (*((*(_107233_st))))._field_tokens);;
				if ((_10878_mt != nullptr)) {
					(*_10878_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10878_mt, &__jule_any_type58);;
			}
		}
		else {
			_case_begin_1aa019645:;
			{
				return jule::Any(_1a6875306_buildVarSt(_self_, &((*((*(_107233_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1aa01a646:;
	};
}



inline jule::Any _1a687e9c5_buildSt(_1a6872e80_scopeParser* _self_, jule::Ptr<_1a68725de_stmt>* _109728_st) {
	jule::Ptr<_1c80b653c_Token> _10987_token = (*((*(_109728_st))))._field_tokens[0LL];;
	if (((*(_10987_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _11008_s;
		jule::Bool _110011_ok;
		({
			__jule_tuple__1a59d35ca_StmtData__jule_tuple_bool __jule_assign_result = _1a687c660_buildIdSt(_self_, &((*((*(_109728_st))))._field_tokens));
			_11008_s = __jule_assign_result.__jule_result_arg0;
			_110011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110011_ok) {
			return _11008_s;;
		};
	};
	jule::Any _11067_s;
	jule::Bool _110610_ok;
	({
		__jule_tuple__1a59d35ca_StmtData__jule_tuple_bool __jule_assign_result = _1a687e002_buildAssignSt(_self_, &((*((*(_109728_st))))._field_tokens));
		_11067_s = __jule_assign_result.__jule_result_arg0;
		_110610_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110610_ok) {
		return _11067_s;;
	};
	{
		auto &_match_expr{ (*(_10987_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1aa0218b1:;
			{
				return jule::Any(_1a687e343_buildUseExpr(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1aa021d56:;
			{
				return _1a687e684_buildConstSt(_self_, _109728_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1aa021dbc:;
			{
				return jule::Any(_1a6875306_buildVarSt(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1aa021e33:;
			{
				return jule::Any(_1a6875647_buildRetSt(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1aa021e99:;
			{
				return jule::Any(_1a687831a_buildIterSt(_self_, _109728_st), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1aa022021:;
			{
				return jule::Any(_1a687865b_buildBreakSt(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1aa022098:;
			{
				return jule::Any(_1a687899c_buildContSt(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1aa022120:;
			{
				return jule::Any(_1a6879470_buildIfElseChain(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1aa022197:;
			{
				return jule::Any(_1a68797b1_buildCoCallSt(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1aa02221e:;
			{
				return jule::Any(_1a6879b02_buildGotoSt(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1aa022296:;
			{
				return jule::Any(_1a6879e43_buildFallSt(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aa02231d:;
			{
				return jule::Any(_1a687a284_buildTypeAliasSt(_self_, &((*((*(_109728_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1aa022395:;
			{
				return jule::Any(_1a687bb8c_buildMatchCase(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aa02241c:;
			{
				if (((*((*(_109728_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1aa021b9c;
				};
				if ((((*((*((*(_109728_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_109728_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1a687becd_buildScopeSt(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type50);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1aa022494:;
			{
				return jule::Any(_1a687becd_buildScopeSt(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1aa02251b:;
			{
				return jule::Any(_1a687becd_buildScopeSt(_self_, (*((*(_109728_st))))._field_tokens), &__jule_any_type50);;
			}
		}
		_match_end_1aa021b9c:;
	};
	jule::Ptr<_1a59c82a1_Expr> _11537_expr = _1a68974c1_buildExpr((*(_self_))._field_p, &((*((*(_109728_st))))._field_tokens));;
	if ((_11537_expr != nullptr)) {
		return jule::Any(_11537_expr, &__jule_any_type51);;
	};
	_1a6874217_pushErr(_self_, _10987_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1a687ed38_build(_1a6872e80_scopeParser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _116126_tokens, jule::Ptr<_1a59d3e8d_ScopeTree>* _116149_s) {
	if (((*(_116149_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a6872996_splitStmts(_116126_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116149_s));
	while (((!(_1a6873da4_isLastSt(_self_))) && (!(_1a6873b1d_finished(_self_))))) {
		{
			jule::Ptr<_1a68725de_stmt> _11698_st = _1a6874ab9_next(_self_);;
			jule::Any _11708_data = _1a687e9c5_buildSt(_self_, &(_11698_st));;
			if ((_11708_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,jule::Slice<_1a59d382d_Stmt>::make({_1a59d382d_Stmt{._field_Token=(*(_11698_st))._field_tokens[0LL], ._field_Data=_11708_data}}));
			};
			if (_1a6873887_stopped(_self_)) {
				goto _iter_end_1aa02e77b;
			};
		}
	_iter_next_1aa02e77b:;
	}
	_iter_end_1aa02e77b:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6872e80_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1a688118b_pushErr(_1a68808a5_exprBuilder* _self_, jule::Ptr<_1c80b653c_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args) {
	_1a6896d1c_pushErr((*(_self_))._field_p.ptr(), _4523_token, _4538_fmt, _4551_args);
}



inline void _1a68814ee_pushSuggestion(_1a68808a5_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args) {
	_1a6897180_pushSuggestion((*(_self_))._field_p.ptr(), _5030_fmt, _5043_args);
}



inline jule::Ptr<_1a59c8d95_TupleExpr> _1a6881840_buildTuple(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>>* _5431_parts) {
	jule::Ptr<_1a59c8d95_TupleExpr> _557_tuple = jule::new_ptr<_1a59c8d95_TupleExpr>(_1a59c8d95_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1a59c82a1_Expr>>::alloc(0LL, (*(_5431_parts)).len())});;
	{
		auto expr = _5431_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0544b5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _5815_part = *it;
			{
				(*(_557_tuple))._field_Expr=jule::append((*_557_tuple.alloc)._field_Expr,jule::Slice<jule::Ptr<_1a59c82a1_Expr>>::make({_1a688ac34_buildFromTokens(_self_, _5815_part)}));
			}
			_iter_next_1aa0544b5:;
			++it;
			goto _iter_begin_1aa0544b5;
		}
		_iter_end_1aa0544b5:;
	};
	return _557_tuple;;
}



inline jule::Ptr<_1a59c923b_LitExpr> _1a6881b81_buildLit(_1a68808a5_exprBuilder* _self_, jule::Ptr<_1c80b653c_Token> _6424_token) {
	return jule::new_ptr<_1a59c923b_LitExpr>(_1a59c923b_LitExpr{._field_Token=_6424_token, ._field_Value=(*(_6424_token))._field_Kind});;
}



inline jule::Any _1a6882313_buildSingle(_1a68808a5_exprBuilder* _self_, jule::Ptr<_1c80b653c_Token> _7531_token) {
	{
		auto &_match_expr{ (*(_7531_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1aa05642e:;
			{
				return jule::Any(_1a6881b81_buildLit(_self_, _7531_token), &__jule_any_type102);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1aa0564a6:;
			{
				return jule::Any(jule::new_ptr<_1a59ca737_VariadicExpr>(_1a59ca737_VariadicExpr{._field_Token=_7531_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1aa05651c:;
			{
				return jule::Any(_1a6891e7c_buildIdentExpr(&(_7531_token)), &__jule_any_type79);;
			}
		}
		_match_end_1aa056374:;
	};
	_1a688118b_pushErr(_self_, _7531_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a59c9abb_IdentExpr> _1a6882654_buildBindIdent(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _9235_tokens) {
	if (((*((*(_9235_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9235_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1a688118b_pushErr(_self_, (*(_9235_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a68814ee_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c80b653c_Token> _1007_token = (*(_9235_tokens))[2LL];;
	if (((*(_1007_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a688118b_pushErr(_self_, (*(_9235_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a68814ee_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a59c9abb_IdentExpr> _1067_expr = _1a6891e7c_buildIdentExpr(&(_1007_token));;
	(*(_1067_expr))._field_Binded=true;
	return _1067_expr;;
}



inline jule::Ptr<_1a59ca35d_UnaryExpr> _1a6882995_buildUnary(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _11130_tokens) {
	jule::Ptr<_1c80b653c_Token> _1127_op = _11130_tokens[0LL];;
	if ((_11130_tokens.len() == 1LL)) {
		_1a688118b_pushErr(_self_, _1127_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1c80b6c79_IsUnaryOp((*(_1127_op))._field_Id)))) {
		_1a688118b_pushErr(_self_, _1127_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*_1127_op.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11130_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1a59ca35d_UnaryExpr>(_1a59ca35d_UnaryExpr{._field_Op=_1127_op, ._field_Expr=_1a688ac34_buildFromTokens(_self_, _11130_tokens)});;
}



inline jule::Ptr<_1a59cb3b4_SubIdentExpr> _1a6882cd6_buildObjSubIdent(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _13236_tokens) {
	jule::I64 _1337_i = (_13236_tokens.len() - 1LL);;
	jule::Ptr<_1c80b653c_Token> _1347_identToken = _13236_tokens[_1337_i];;
	(_1337_i)--;
	(_13236_tokens).mut_slice(0LL, _1337_i);;
	if ((_13236_tokens.len() == 0LL)) {
		_1a688118b_pushErr(_self_, _1347_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a59cb3b4_SubIdentExpr>(_1a59cb3b4_SubIdentExpr{._field_Expr=_1a688ac34_buildFromTokens(_self_, _13236_tokens), ._field_Ident=_1347_identToken});;
}



inline jule::Ptr<_1a59caeda_NsSelectionExpr> _1a6883127_buildNsSubIdent(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _14736_tokens) {
	jule::Ptr<_1a59caeda_NsSelectionExpr> _1487_ns = jule::new_ptr<_1a59caeda_NsSelectionExpr>();;
	if ((((*(_14736_tokens)).len() == 3LL) && ((*((*(_14736_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*_1487_ns.alloc)._field_Ns=(*(_14736_tokens)).slice(0LL, 1LL);
		(*_1487_ns.alloc)._field_Ident=(*(_14736_tokens))[2LL];
	} else {
		{
			auto expr = _14736_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa0629e0:;
			if (it != expr_end) {
				jule::I64 _1549_i = it - expr->begin();
				jule::Ptr<_1c80b653c_Token> _15416_token = *it;
				{
					if (((_1549_i & 1LL) == 0LL)) {
						if (((*(_15416_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1a688118b_pushErr(_self_, _15416_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1a68814ee_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						(*_1487_ns.alloc)._field_Ns=jule::append((*_1487_ns.alloc)._field_Ns,jule::Slice<jule::Ptr<_1c80b653c_Token>>::make({_15416_token}));
					} else if (((*(_15416_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1a688118b_pushErr(_self_, _15416_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a68814ee_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1aa0629e0:;
				++it;
				_1549_i++;
				goto _iter_begin_1aa0629e0;
			}
			_iter_end_1aa0629e0:;
		};
		(*_1487_ns.alloc)._field_Ident=(*_1487_ns.alloc)._field_Ns[((*_1487_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_1487_ns))._field_Ns).mut_slice(0LL, ((*(_1487_ns))._field_Ns.len() - 1LL));;
	};
	return _1487_ns;;
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a6883468_buildType(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _17230_tokens) {
	jule::I64 _1737_i = 0LL;;
	jule::Ptr<_1a59c3e6c_TypeDecl> _1747_t;
	jule::Bool _17410_ok;
	({
		__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType((*(_self_))._field_p, _17230_tokens, (&(_1737_i)), false);
		_1747_t = __jule_assign_result.__jule_result_arg0;
		_17410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17410_ok))) {
		_1a688118b_pushErr(_self_, (*(_17230_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1737_i < (*(_17230_tokens)).len())) {
		_1a688118b_pushErr(_self_, (*(_17230_tokens))[_1737_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _1747_t;;
}



inline jule::Any _1a68837a9_buildSubIdent(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _18634_tokens) {
	jule::I64 _1873_i = ((*(_18634_tokens)).len() - 2LL);;
	jule::Ptr<_1c80b653c_Token> _1883_token = (*(_18634_tokens))[_1873_i];;
	{
		auto &_match_expr{ (*(_1883_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1aa06aa1a:;
			{
				return jule::Any(_1a6882cd6_buildObjSubIdent(_self_, (*(_18634_tokens))), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1aa06b125:;
			{
				return jule::Any(_1a6883127_buildNsSubIdent(_self_, _18634_tokens), &__jule_any_type90);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1aa06b18b:;
			{
				return jule::Any(_1a6883468_buildType(_self_, _18634_tokens), &__jule_any_type89);;
			}
		}
		_match_end_1aa06aca1:;
	};
	if (_1a6892620_isAnonFnHead(_18634_tokens)) {
		return jule::Any(_1a6883468_buildType(_self_, _18634_tokens), &__jule_any_type89);;
	};
	_1a688118b_pushErr(_self_, _1883_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a59ca737_VariadicExpr> _1a6883aea_buildVariadic(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _20833_tokens) {
	jule::Ptr<_1c80b653c_Token> _2097_token = _20833_tokens[(_20833_tokens.len() - 1LL)];;
	(_20833_tokens).mut_slice(0LL, (_20833_tokens.len() - 1LL));;
	return jule::new_ptr<_1a59ca737_VariadicExpr>(_1a59ca737_VariadicExpr{._field_Token=_2097_token, ._field_Expr=_1a688ac34_buildFromTokens(_self_, _20833_tokens)});;
}



inline jule::Ptr<_1a59c856a_RangeExpr> _1a6883e3b_buildBetweenParentheses(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _21743_tokens) {
	if ((_21743_tokens.len() == 2LL)) {
		_1a688118b_pushErr(_self_, _21743_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1a68814ee_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21743_tokens).mut_slice(1LL, (_21743_tokens.len() - 1LL));;
	return jule::new_ptr<_1a59c856a_RangeExpr>(_1a59c856a_RangeExpr{._field_Expr=_1a688ac34_buildFromTokens(_self_, _21743_tokens)});;
}



inline jule::Ptr<_1a59cab11_CastExpr> _1a688427c_tryBuildCast(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _22933_tokens) {
	jule::I64 _2307_rangeN = 0LL;;
	{
		auto expr = _22933_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa071812:;
		if (it != expr_end) {
			jule::I64 _2317_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> _23110_token = *it;
			{
				{
					auto &_match_expr{ (*(_23110_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa072307:;
						{
							(_2307_rangeN)++;
							goto _iter_next_1aa071812;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aa0726d1:;
						{
							(_2307_rangeN)--;
						}
					}
					_match_end_1aa0725e3:;
				};
				if ((_2307_rangeN > 0LL)) {
					goto _iter_next_1aa071812;
				} else if (((_2317_i + 1LL) == (*(_22933_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1c80b653c_Token>> _2508_typeTokens = (*(_22933_tokens)).slice(0LL, (_2317_i + 1LL));;
				jule::Slice<jule::Ptr<_1c80b653c_Token>> _2518_exprTokens = (*(_22933_tokens)).slice((_2317_i + 1LL));;
				if ((_2518_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1c80b653c_Token> _2584_tok = _2518_exprTokens[0LL];;
				if (((*(_2584_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1a59cab11_CastExpr> _2638_cast = jule::new_ptr<_1a59cab11_CastExpr>(_1a59cab11_CastExpr{});;
				if ((_2518_exprTokens.len() == 2LL)) {
					_1a688118b_pushErr(_self_, _2518_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1a68814ee_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_2508_typeTokens.len() == 2LL)) {
					_1a688118b_pushErr(_self_, _2508_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1a68814ee_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_2508_typeTokens).mut_slice(1LL, (_2508_typeTokens.len() - 1LL));;
					jule::I64 _2779_typeIndex = 0LL;;
					jule::Ptr<_1a59c3e6c_TypeDecl> _2789_t;
					jule::Bool _27812_ok;
					({
						__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType((*(_self_))._field_p, &(_2508_typeTokens), (&(_2779_typeIndex)), true);
						_2789_t = __jule_assign_result.__jule_result_arg0;
						_27812_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27812_ok && (_2779_typeIndex < _2508_typeTokens.len()))) {
						_1a688118b_pushErr(_self_, _2508_typeTokens[_2779_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27812_ok))) {
						return _2638_cast;;
					};
					(*(_2638_cast))._field_Kind=_2789_t;
					if ((_2518_exprTokens.len() > 2LL)) {
						jule::I64 _28810_j = 0LL;;
						_1a6894a1d_range(&(_28810_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2518_exprTokens));
						if ((_28810_j < _2518_exprTokens.len())) {
							return nullptr;;
						};
						(_2518_exprTokens).mut_slice(0LL, _28810_j);;
						(*_2638_cast.alloc)._field_Expr=_1a688ac34_buildFromTokens(_self_, _2518_exprTokens);
					};
				};
				return _2638_cast;;
			}
			_iter_next_1aa071812:;
			++it;
			_2317_i++;
			goto _iter_begin_1aa071812;
		}
		_iter_end_1aa071812:;
	};
	return nullptr;;
}



inline void _1a688469a_pushArg(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a59c82a1_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1c80b653c_Token>> _30347_tokens, jule::Ptr<_1c80b653c_Token> _30365_err_token) {
	if ((_30347_tokens.len() == 0LL)) {
		_1a688118b_pushErr(_self_, _30365_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a68814ee_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a59c82a1_Expr>> &__jule_push_dest = (*(_30328_args)); __jule_push_dest.push(_1a688ac34_buildFromTokens(_self_, _30347_tokens)); };
}



inline jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _1a68849db_buildArgs(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _31229_tokens) {
	if ((_31229_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _31811_args = nullptr;;
	jule::I64 _3197_last = 0LL;;
	jule::I64 _3207_rangeN = 0LL;;
	(_31229_tokens).mut_slice(1LL, (_31229_tokens.len() - 1LL));;
	{
		auto expr = &(_31229_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa07eec4:;
		if (it != expr_end) {
			jule::I64 _3227_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> _32210_token = *it;
			{
				{
					auto &_match_expr{ (*(_32210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa0807cc:;
						{
							(_3207_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aa080ba6:;
						{
							(_3207_rangeN)--;
						}
					}
					_match_end_1aa080ab8:;
				};
				if (((_3207_rangeN > 0LL) || ((*(_32210_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1aa07eec4;
				};
				_1a688469a_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last, _3227_i), _32210_token);
				_3197_last=(_3227_i + 1LL);
			}
			_iter_next_1aa07eec4:;
			++it;
			_3227_i++;
			goto _iter_begin_1aa07eec4;
		}
		_iter_end_1aa07eec4:;
	};
	if ((_3197_last < _31229_tokens.len())) {
		if ((_3197_last == 0LL)) {
			if ((_31229_tokens.len() > 0LL)) {
				_1a688469a_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[_3197_last]);
			};
		} else {
			_1a688469a_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[(_3197_last - 1LL)]);
		};
	};
	return _31811_args;;
}



inline jule::Ptr<_1a59cbeca_FnCallExpr> _1a68852d3_buildFnCall(_1a68808a5_exprBuilder* _self_, jule::Ptr<_1c80b653c_Token>* _37832_token, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _37873_args) {
	return jule::new_ptr<_1a59cbeca_FnCallExpr>(_1a59cbeca_FnCallExpr{._field_Token=(*(_37832_token)), ._field_Expr=_1a688ac34_buildFromTokens(_self_, (*(_37852_expr))), ._field_Args=_1a68849db_buildArgs(_self_, (*(_37873_args))), });;
}



inline jule::Any _1a6885624_buildParenthesesRange(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _38642_tokens) {
	jule::Ptr<_1c80b653c_Token> _3877_token = (*(_38642_tokens))[0LL];;
	if (((*(_3877_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1a59cab11_CastExpr> _3898_expr = _1a688427c_tryBuildCast(_self_, _38642_tokens);;
		if ((_3898_expr != nullptr)) {
			return jule::Any(_3898_expr, &__jule_any_type106);;
		};
	};
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _3947_exprTokens;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _39423_argsTokens;
	({
		__jule_tuple_sx_1c80b653c_Token__jule_tuple_sx_1c80b653c_Token __jule_assign_result = _1a6894cd7_rangeLast(_38642_tokens);
		_3947_exprTokens = __jule_assign_result.__jule_result_arg0;
		_39423_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3947_exprTokens.len() == 0LL)) {
		return jule::Any(_1a6883e3b_buildBetweenParentheses(_self_, _39423_argsTokens), &__jule_any_type101);;
	};
	if (_1a6892620_isAnonFnHead(&(_3947_exprTokens))) {
		return jule::Any(_1a6883468_buildType(_self_, _38642_tokens), &__jule_any_type89);;
	};
	return jule::Any(_1a68852d3_buildFnCall(_self_, &(_3877_token), &(_3947_exprTokens), &(_39423_argsTokens)), &__jule_any_type82);;
}



inline jule::Ptr<_1a59c9615_UnsafeExpr> _1a6885965_buildUnsafeExpr(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _40835_tokens) {
	jule::Ptr<_1c80b653c_Token> _4097_token = _40835_tokens[0LL];;
	(_40835_tokens).mut_slice(1LL);;
	jule::I64 _4117_i = 0LL;;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _4127_rangeTokens = _1a6894a1d_range(&(_4117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40835_tokens));;
	if ((_4127_rangeTokens.len() == 0LL)) {
		_1a688118b_pushErr(_self_, _40835_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a59c9615_UnsafeExpr>(_1a59c9615_UnsafeExpr{._field_Token=_4097_token, ._field_Expr=_1a688ac34_buildFromTokens(_self_, _4127_rangeTokens)});;
}



inline jule::Ptr<_1a59d5b2c_FnDecl> _1a6885ca6_buildAnonFn(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _42332_tokens) {
	jule::Ptr<_1a59d5b2c_FnDecl> _4247_f = _1a689ceaa_buildFn((*(_self_))._field_p, _42332_tokens, false, false);;
	if ((!(_1a59d5e90_IsAnon(_4247_f.ptr())))) {
		_1a688118b_pushErr(_self_, (*_4247_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a68814ee_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _4247_f;;
}



inline jule::Any _1a68860e7_buildUnsafe(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _43232_tokens) {
	{
		auto &_match_expr{ (*((*(_43232_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aa0930c5:;
			{
				return jule::Any(_1a6885ca6_buildAnonFn(_self_, _43232_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1aa09248c:;
			{
				return jule::Any(_1a6885965_buildUnsafeExpr(_self_, (*(_43232_tokens))), &__jule_any_type103);;
			}
		}
		_match_end_1aa0928cc:;
	};
}



inline void _1a6886515_pushRangeLitPart(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _44236_part, jule::Ptr<_1c80b653c_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>>* _44328_parts) {
	if ((_44236_part.len() == 0LL)) {
		_1a688118b_pushErr(_self_, _4433_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a68814ee_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> &__jule_push_dest = (*(_44328_parts)); __jule_push_dest.push(_44236_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1a6886856_getBraceRangeLitExprParts(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _45345_tokens) {
	if ((_45345_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _45911_parts = nullptr;;
	jule::I64 _4617_last = 0LL;;
	jule::I64 _4627_rangeN = 0LL;;
	(_45345_tokens).mut_slice(1LL, (_45345_tokens.len() - 1LL));;
	{
		auto expr = &(_45345_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0969e1:;
		if (it != expr_end) {
			jule::I64 _4647_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> _46410_token = *it;
			{
				{
					auto &_match_expr{ (*(_46410_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa0972e9:;
						{
							(_4627_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aa0976c3:;
						{
							(_4627_rangeN)--;
						}
					}
					_match_end_1aa0975d5:;
				};
				if (((_4627_rangeN > 0LL) || ((*(_46410_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1aa0969e1;
				};
				_1a6886515_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last, _4647_i), _46410_token, &(_45911_parts));
				_4617_last=(_4647_i + 1LL);
			}
			_iter_next_1aa0969e1:;
			++it;
			_4647_i++;
			goto _iter_begin_1aa0969e1;
		}
		_iter_end_1aa0969e1:;
	};
	if ((_4617_last < _45345_tokens.len())) {
		if ((_4617_last == 0LL)) {
			if ((_45345_tokens.len() > 0LL)) {
				_1a6886515_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[_4617_last], &(_45911_parts));
			};
		} else {
			_1a6886515_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[(_4617_last - 1LL)], &(_45911_parts));
		};
	};
	return _45911_parts;;
}



inline jule::Ptr<_1a59cc9c0_FieldExprPair> _1a6886b97_buildFieldExprPair(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _49538_tokens) {
	if (((_49538_tokens.len() - 2LL) == 0LL)) {
		_1a688118b_pushErr(_self_, _49538_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a59cc9c0_FieldExprPair> _5007_pair = jule::new_ptr<_1a59cc9c0_FieldExprPair>(_1a59cc9c0_FieldExprPair{._field_Field=_49538_tokens[0LL], });;
	(_49538_tokens).mut_slice(2LL);;
	(*(_5007_pair))._field_Expr=_1a688ac34_buildFromTokens(_self_, _49538_tokens);
	return _5007_pair;;
}



inline jule::Ptr<_1a59c82a1_Expr> _1a6886ed8_buildStructLitExpr(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _50839_tokens) {
	jule::Ptr<_1c80b653c_Token> _5097_token = (*(_50839_tokens))[0LL];;
	if ((((*(_5097_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_50839_tokens)).len() > 1LL))) {
		_5097_token=(*(_50839_tokens))[1LL];
		if (((*_5097_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1a59c82a1_Expr>(_1a59c82a1_Expr{._field_Token=_5097_token, ._field_End=(*(_50839_tokens))[((*(_50839_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a6886b97_buildFieldExprPair(_self_, (*(_50839_tokens))), &__jule_any_type77)});;
		};
	};
	return _1a688ac34_buildFromTokens(_self_, (*(_50839_tokens)));;
}



inline jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _1a6887329_buildStructLitExprs(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _52340_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _5247_parts = _1a6886856_getBraceRangeLitExprParts(_self_, (*(_52340_tokens)));;
	if ((_5247_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a59c82a1_Expr>> _5297_pairs = jule::Slice<jule::Ptr<_1a59c82a1_Expr>>::alloc(0LL, _5247_parts.len());;
	{
		auto expr = &(_5247_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0a0ec3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _53015_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a59c82a1_Expr>> &__jule_push_dest = _5297_pairs; __jule_push_dest.push(_1a6886ed8_buildStructLitExpr(_self_, &(_53015_part))); };
			}
			_iter_next_1aa0a0ec3:;
			++it;
			goto _iter_begin_1aa0a0ec3;
		}
		_iter_end_1aa0a0ec3:;
	};
	return _5297_pairs;;
}



inline jule::Ptr<_1a59cd2ea_StructLit> _1a688766a_buildTypedStructLiteral(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _53643_tokens) {
	jule::I64 _5377_i = 0LL;;
	jule::Ptr<_1a59c3e6c_TypeDecl> _5387_t;
	jule::Bool _53810_ok;
	({
		__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType((*(_self_))._field_p, &(_53643_tokens), (&(_5377_i)), true);
		_5387_t = __jule_assign_result.__jule_result_arg0;
		_53810_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_53810_ok))) {
		return nullptr;;
	} else if ((_5377_i >= _53643_tokens.len())) {
		_1a688118b_pushErr(_self_, _53643_tokens[_5377_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_53643_tokens).mut_slice(_5377_i);;
	jule::Ptr<_1c80b653c_Token> _5473_token = _53643_tokens[0LL];;
	if (((*(_5473_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1a688118b_pushErr(_self_, _5473_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a59cd2ea_StructLit>(_1a59cd2ea_StructLit{._field_End=_53643_tokens[(_53643_tokens.len() - 1LL)], ._field_Kind=_5387_t, ._field_Exprs=_1a6887329_buildStructLitExprs(_self_, &(_53643_tokens))});;
}



inline jule::Ptr<_1a59c82a1_Expr> _1a68879ab_buildBraceLitPart(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _56038_tokens) {
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _5617_l;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _56114_r;
	({
		__jule_tuple_sx_1c80b653c_Token__jule_tuple_sx_1c80b653c_Token __jule_assign_result = _1a68918e9_splitDelim(_56038_tokens, static_cast<jule::U64>(8LLU));
		_5617_l = __jule_assign_result.__jule_result_arg0;
		_56114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5617_l != nullptr)) {
		return jule::new_ptr<_1a59c82a1_Expr>(_1a59c82a1_Expr{._field_Token=(*(_56038_tokens))[0LL], ._field_End=(*(_56038_tokens))[((*(_56038_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1a59ce0cb_KeyValPair>(_1a59ce0cb_KeyValPair{._field_Key=_1a688ac34_buildFromTokens(_self_, _5617_l), ._field_Val=_1a688ac34_buildFromTokens(_self_, _56114_r), ._field_Colon=(*(_56038_tokens))[_5617_l.len()]}), &__jule_any_type78)});;
	};
	return _1a688ac34_buildFromTokens(_self_, (*(_56038_tokens)));;
}



inline jule::Ptr<_1a59cd7a1_BraceLit> _1a6887cec_buildBraceLit(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _57734_tokens) {
	jule::Ptr<_1a59cd7a1_BraceLit> _5787_lit = jule::new_ptr<_1a59cd7a1_BraceLit>(_1a59cd7a1_BraceLit{._field_Token=(*(_57734_tokens))[0LL], ._field_End=(*(_57734_tokens))[((*(_57734_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _5837_parts = _1a6886856_getBraceRangeLitExprParts(_self_, (*(_57734_tokens)));;
	if ((_5837_parts == nullptr)) {
		return _5787_lit;;
	};
	(*(_5787_lit))._field_Exprs=jule::Slice<jule::Ptr<_1a59c82a1_Expr>>::alloc(0LL, _5837_parts.len());
	{
		auto expr = &(_5837_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0aa818:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _58915_part = *it;
			{
				(*_5787_lit.alloc)._field_Exprs=jule::append((*_5787_lit.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a59c82a1_Expr>>::make({_1a68879ab_buildBraceLitPart(_self_, &(_58915_part))}));
			}
			_iter_next_1aa0aa818:;
			++it;
			goto _iter_begin_1aa0aa818;
		}
		_iter_end_1aa0aa818:;
	};
	return _5787_lit;;
}



inline jule::Any _1a688813d_buildBraceRange(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _59636_tokens) {
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _5977_exprTokens;
	jule::I64 _59719_rangeN;
	({
		__jule_tuple_sx_1c80b653c_Token__jule_tuple_int __jule_assign_result = _1a6892246_getRangeExprTokens(_59636_tokens);
		_5977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_59719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5977_exprTokens.len() == 0LL)) {
			_case_begin_1aa0ac441:;
			{
				return jule::Any(_1a6887cec_buildBraceLit(_self_, _59636_tokens), &__jule_any_type108);;
			}
		}
		else if ((_59719_rangeN > 0LL)) {
			_case_begin_1aa0ac4da:;
			{
				_1a688118b_pushErr(_self_, (*(_59636_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa0ac3a8:;
	};
	jule::Ptr<_1c80b653c_Token> _6083_elseToken = _5977_exprTokens[(_5977_exprTokens.len() - 1LL)];;
	if (((*(_5977_exprTokens[(_5977_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5977_exprTokens).mut_slice(0LL, (_5977_exprTokens.len() - 1LL));;
		jule::Any _6118_d = _1a688a5a2_build(_self_, &(_5977_exprTokens));;
		if ((_6118_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _6118_d };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1aa0b0c19:;
				{
					((*(_59636_tokens))).mut_slice((_5977_exprTokens.len() + 1LL));;
					jule::I64 _6189_i = 0LL;;
					jule::Slice<jule::Ptr<_1c80b653c_Token>> _6199_rangeTokens = _1a6894a1d_range(&(_6189_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _59636_tokens);;
					jule::Ptr<_1a59cbeca_FnCallExpr> _6209_model = _6118_d.unsafe_cast_ptr<_1a59cbeca_FnCallExpr>();;
					if (_1a59cc5d5_Ignored(_6209_model.ptr())) {
						_1a688118b_pushErr(_self_, _6083_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a68814ee_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*_6209_model.alloc)._field_Exception=_1a6897eb6_buildScope((*(_self_))._field_p, &(_6199_rangeTokens), (*(_59636_tokens))[(_6189_i - 1LL)]);
					return _6118_d;;
				}
			}
			else {
				_case_begin_1aa0b0246:;
				{
					_1a688118b_pushErr(_self_, _5977_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1aa0b01e1:;
		};
	};
	{
		auto &_match_expr{ (*(_5977_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aa0b4d72:;
			{
				return _1a68860e7_buildUnsafe(_self_, _59636_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aa0b4dd8:;
			{
				return jule::Any(_1a6885ca6_buildAnonFn(_self_, _59636_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aa0b4e4e:;
			{
				return jule::Any(_1a688766a_buildTypedStructLiteral(_self_, (*(_59636_tokens))), &__jule_any_type107);;
			}
		}
		else {
			_case_begin_1aa0b02ac:;
			{
				_1a688118b_pushErr(_self_, _5977_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa0b42e4:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1a688847e_getEnumerableParts(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _64838_tokens) {
	(_64838_tokens).mut_slice(1LL, (_64838_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _6507_parts;
	jule::Slice<_1d1c6d64c_Log> _65014_errors;
	({
		__jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a689528d_parts(&(_64838_tokens), static_cast<jule::U64>(5LLU), true);
		_6507_parts = __jule_assign_result.__jule_result_arg0;
		_65014_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_65014_errors);
	return _6507_parts;;
}



inline jule::Ptr<_1a59ce807_SliceExpr> _1a68887c0_buildSlice(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _65530_tokens) {
	jule::Ptr<_1a59ce807_SliceExpr> _6567_slc = jule::new_ptr<_1a59ce807_SliceExpr>(_1a59ce807_SliceExpr{._field_Token=_65530_tokens[0LL], ._field_End=_65530_tokens[(_65530_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _6617_parts = _1a688847e_getEnumerableParts(_self_, _65530_tokens);;
	if ((_6617_parts.len() == 0LL)) {
		return _6567_slc;;
	};
	(*(_6567_slc))._field_Exprs=jule::Slice<jule::Ptr<_1a59c82a1_Expr>>::alloc(0LL, _6617_parts.len());
	{
		auto expr = &(_6617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0b9c01:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _66715_p = *it;
			{
				if ((_66715_p.len() == 0LL)) {
					goto _iter_next_1aa0b9c01;
				};
				(*_6567_slc.alloc)._field_Exprs=jule::append((*_6567_slc.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1a59c82a1_Expr>>::make({_1a688ac34_buildFromTokens(_self_, _66715_p)}));
			}
			_iter_next_1aa0b9c01:;
			++it;
			goto _iter_begin_1aa0b9c01;
		}
		_iter_end_1aa0b9c01:;
	};
	return _6567_slc;;
}



inline jule::Ptr<_1a59d0264_IndexingExpr> _1a6888c76_buildIndexing(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1c80b653c_Token>> _6787_tokens, jule::Ptr<_1c80b653c_Token> _67829_errorToken) {
	jule::Ptr<_1c80b653c_Token> _6797_end = _6787_tokens[(_6787_tokens.len() - 1LL)];;
	(_6787_tokens).mut_slice(1LL, (_6787_tokens.len() - 1LL));;
	if ((_6787_tokens.len() == 0LL)) {
		_1a688118b_pushErr(_self_, _67829_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a59c82a1_Expr> _6857_expr = _1a688ac34_buildFromTokens(_self_, _67733_exprTokens);;
	if ((_6857_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a59c82a1_Expr> _6897_index = _1a688ac34_buildFromTokens(_self_, _6787_tokens);;
	if ((_6897_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a59d0264_IndexingExpr>(_1a59d0264_IndexingExpr{._field_Token=_67829_errorToken, ._field_End=_6797_end, ._field_Expr=_6857_expr, ._field_Index=_6897_index});;
}



inline jule::Ptr<_1a59d08c4_SlicingExpr> _1a6889392_buildSlicing(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _70160_start, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _7028_to, jule::Ptr<_1c80b653c_Token>* _70227_errorToken, jule::Ptr<_1c80b653c_Token> _70251_end) {
	jule::Ptr<_1a59d08c4_SlicingExpr> _7037_slc = jule::new_ptr<_1a59d08c4_SlicingExpr>(_1a59d08c4_SlicingExpr{._field_Token=(*(_70227_errorToken)), ._field_End=_70251_end, ._field_Expr=_1a688ac34_buildFromTokens(_self_, (*(_70133_exprTokens))), });;
	if (((*(_70160_start)).len() > 0LL)) {
		(*(_7037_slc))._field_Start=_1a688ac34_buildFromTokens(_self_, (*(_70160_start)));
	};
	if (((*(_7028_to)).len() > 0LL)) {
		(*_7037_slc.alloc)._field_To=_1a688ac34_buildFromTokens(_self_, (*(_7028_to)));
	};
	return _7037_slc;;
}



inline jule::Any _1a68896d3_buildBracketRange(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _71737_tokens) {
	jule::Ptr<_1c80b653c_Token> _7187_errorToken = _71737_tokens[0LL];;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _7197_exprTokens;
	jule::I64 _71919_rangeN;
	({
		__jule_tuple_sx_1c80b653c_Token__jule_tuple_int __jule_assign_result = _1a6892246_getRangeExprTokens(&(_71737_tokens));
		_7197_exprTokens = __jule_assign_result.__jule_result_arg0;
		_71919_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_7197_exprTokens.len() == 0LL)) {
		return jule::Any(_1a68887c0_buildSlice(_self_, _71737_tokens), &__jule_any_type94);;
	} else if ((_71919_rangeN > 0LL)) {
		_1a688118b_pushErr(_self_, _7187_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_71737_tokens).mut_slice(_7197_exprTokens.len());;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _7347_splitTokens = _71737_tokens.slice(1LL, (_71737_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _7357_start;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _73518_to;
	({
		__jule_tuple_sx_1c80b653c_Token__jule_tuple_sx_1c80b653c_Token __jule_assign_result = _1a68918e9_splitDelim(&(_7347_splitTokens), static_cast<jule::U64>(8LLU));
		_7357_start = __jule_assign_result.__jule_result_arg0;
		_73518_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7357_start != nullptr) || (_73518_to != nullptr))) {
		return jule::Any(_1a6889392_buildSlicing(_self_, &(_7197_exprTokens), &(_7357_start), &(_73518_to), &(_7187_errorToken), _71737_tokens[(_71737_tokens.len() - 1LL)]), &__jule_any_type105);;
	};
	return jule::Any(_1a6888c76_buildIndexing(_self_, _7197_exprTokens, _71737_tokens, _7187_errorToken), &__jule_any_type104);;
}



inline jule::Any _1a6889a24_buildExclRight(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _74235_tokens) {
	jule::Ptr<_1c80b653c_Token> _7433_token = (*(_74235_tokens))[((*(_74235_tokens)).len() - 1LL)];;
	((*(_74235_tokens))).mut_slice(0LL, ((*(_74235_tokens)).len() - 1LL));;
	jule::Any _7457_d = _1a688a5a2_build(_self_, _74235_tokens);;
	if ((_7457_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7457_d };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1aa0c7c86:;
			{
				(*(_7457_d.unsafe_cast_ptr<_1a59cbeca_FnCallExpr>()))._field_Exception=jule::new_ptr<_1a59d3e8d_ScopeTree>(_1a59d3e8d_ScopeTree{._field_Deferred=true, });
				return _7457_d;;
			}
		}
		_match_end_1aa0c7c31:;
	};
	_1a688118b_pushErr(_self_, _7433_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a6889d65_buildData(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _76030_tokens) {
	{
		auto _match_expr{ (*(_76030_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1aa0c93b4:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1aa0c943b:;
			{
				return _1a6882313_buildSingle(_self_, (*(_76030_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aa0c94a2:;
			{
				if (((*((*(_76030_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1a6882654_buildBindIdent(_self_, _76030_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1aa0c921b:;
	};
	jule::Ptr<_1c80b653c_Token> _7727_token = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
	if (((*(_7727_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1a6883aea_buildVariadic(_self_, (*(_76030_tokens))), &__jule_any_type75);;
	};
	_7727_token=(*(_76030_tokens))[0LL];
	if (_1c80b6c79_IsUnaryOp((*_7727_token.alloc)._field_Id)) {
		if (((*(_76030_tokens)).len() > 1LL)) {
			_7727_token=(*(_76030_tokens))[1LL];
			if (((*_7727_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1a6883468_buildType(_self_, _76030_tokens), &__jule_any_type89);;
			};
		};
		return jule::Any(_1a6882995_buildUnary(_self_, (*(_76030_tokens))), &__jule_any_type88);;
	};
	if (((*(_76030_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7727_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1aa0cde68:;
				{
					if (((*(_76030_tokens)).len() > 3LL)) {
						jule::Ptr<_1c80b653c_Token> _7986_t = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
						if (((*(_7986_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1aa0cddbe;
						};
					};
					jule::Ptr<_1c80b653c_Token> _8045_next = (*(_76030_tokens))[1LL];;
					if (((*(_8045_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1aa0cddbe;
					};
					return jule::Any(_1a6883468_buildType(_self_, _76030_tokens), &__jule_any_type89);;
				}
			}
			_match_end_1aa0cddbe:;
		};
	};
	_7727_token=(*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7727_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aa0d2125:;
			{
				return _1a68837a9_buildSubIdent(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1aa0d219c:;
			{
				return _1a6889a24_buildExclRight(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1aa0d2213:;
			{
				return _1a6885624_buildParenthesesRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1aa0d2279:;
			{
				return _1a688813d_buildBraceRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1aa0d22e0:;
			{
				return _1a68896d3_buildBracketRange(_self_, (*(_76030_tokens)));;
			}
		}
		_match_end_1aa0d20c0:;
	};
	_1a688118b_pushErr(_self_, _7727_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a688a261_buildBinary(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _82932_tokens, jule::I64 _82950_i) {
	jule::Ptr<_1c80b653c_Token> _8307_op = (*(_82932_tokens))[_82950_i];;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _8317_leftTokens = (*(_82932_tokens)).slice(0LL, _82950_i);;
	if ((_1a688b0ec_isTypeOp(&((*(_8307_op))._field_Id)) && _1a688b40a_isTypeRange(&(_8317_leftTokens)))) {
		return jule::Any(_1a6883468_buildType(_self_, _82932_tokens), &__jule_any_type89);;
	};
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _8367_rightTokens = (*(_82932_tokens)).slice((_82950_i + 1LL));;
	if ((_8317_leftTokens.len() == 0LL)) {
		_1a688118b_pushErr(_self_, (*(_82932_tokens))[_82950_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a68814ee_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8367_rightTokens.len() == 0LL)) {
		_1a688118b_pushErr(_self_, (*(_82932_tokens))[_82950_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a68814ee_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1a59cb86a_BinaryExpr>(_1a59cb86a_BinaryExpr{._field_Left=_1a688ac34_buildFromTokens(_self_, _8317_leftTokens), ._field_Right=_1a688ac34_buildFromTokens(_self_, _8367_rightTokens), ._field_Op=_8307_op}), &__jule_any_type109);;
}



inline jule::Any _1a688a5a2_build(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _85426_tokens) {
	if (((*((*(_85426_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1a6883468_buildType(_self_, _85426_tokens), &__jule_any_type89);;
	};
	jule::I64 _8583_i = _1a6891bb3_findLowestPrecOp(_85426_tokens);;
	if ((_8583_i == -1LL)) {
		return _1a6889d65_buildData(_self_, _85426_tokens);;
	};
	return _1a688a261_buildBinary(_self_, _85426_tokens, _8583_i);;
}



inline jule::Any _1a688a8e3_buildKind(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _86530_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _8667_parts;
	jule::Slice<_1d1c6d64c_Log> _86614_errors;
	({
		__jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a689528d_parts(_86530_tokens, static_cast<jule::U64>(5LLU), true);
		_8667_parts = __jule_assign_result.__jule_result_arg0;
		_86614_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86614_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_86614_errors);
		return nullptr;;
	} else if ((_8667_parts.len() > 1LL)) {
		return jule::Any(_1a6881840_buildTuple(_self_, &(_8667_parts)), &__jule_any_type80);;
	};
	return _1a688a5a2_build(_self_, _86530_tokens);;
}



inline jule::Ptr<_1a59c82a1_Expr> _1a688ac34_buildFromTokens(_1a68808a5_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _87635_tokens) {
	if ((_87635_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8807_kind = _1a688a8e3_buildKind(_self_, &(_87635_tokens));;
	if ((_8807_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a59c82a1_Expr>(_1a59c82a1_Expr{._field_Token=_87635_tokens[0LL], ._field_End=_87635_tokens[(_87635_tokens.len() - 1LL)], ._field_Kind=_8807_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68808a5_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a6892e6c_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1a6896668_stop(_1a689636b_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a68968ee_stopped(_1a689636b_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a6896d1c_pushErr(_1a689636b_parser* _self_, jule::Ptr<_1c80b653c_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args) {
	{ jule::Slice<_1d1c6d64c_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a6895953_compilerErr(&(_20823_token), &(_20838_fmt), _20851_args)); };
}



inline void _1a6897180_pushSuggestion(_1a689636b_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args) {
	{
		_1a6895ce9_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21330_fmt, _21343_args);
	};
}



inline jule::Ptr<_1a59c82a1_Expr> _1a68974c1_buildExpr(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _21731_tokens) {
	return _1a688ac34_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21731_tokens)));;
}



inline jule::Ptr<_1a59c3389_Directive> _1a6897812_buildDirective(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _22134_tokens) {
	if ((_22134_tokens.len() == 1LL)) {
		_1a6896d1c_pushErr(_self_, _22134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22134_tokens[1LL]))._field_Column != ((*(_22134_tokens[0LL]))._field_Column + 1LL))) {
		_1a6896d1c_pushErr(_self_, _22134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a59c3389_Directive>(_1a59c3389_Directive{._field_Tag=_22134_tokens[1LL], ._field_Args=_22134_tokens.slice(2LL)});;
}



inline void _1a6897aba_pushDirective(_1a689636b_parser* _self_, jule::Ptr<_1a59c3389_Directive> _23633_d) {
	if ((_23633_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa113c39:;
		if (it != expr_end) {
			jule::Ptr<_1a59c3389_Directive> _24110_pd = *it;
			{
				if (((*((*(_23633_d))._field_Tag))._field_Kind == (*(*(_24110_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1aa113c39:;
			++it;
			goto _iter_begin_1aa113c39;
		}
		_iter_end_1aa113c39:;
	};
	{ jule::Slice<jule::Ptr<_1a59c3389_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23633_d); };
}



inline jule::Ptr<_1a59d3e8d_ScopeTree> _1a6897eb6_buildScope(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _24932_tokens, jule::Ptr<_1c80b653c_Token> _24954_end) {
	jule::Ptr<_1a59d3e8d_ScopeTree> _2507_s = _1a6871368_newScope();;
	(*(_2507_s))._field_End=_24954_end;
	_1a6872e80_scopeParser _2527_sp = _1a6872e80_scopeParser{._field_p=_self_, };;
	_1a687ed38_build(&_2527_sp, _24932_tokens, &(_2507_s));
	return _2507_s;;
}



inline __jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool _1a689846c__buildType(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err) {
	__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a68a848d_typeBuilder _2617_tb = _1a68a848d_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25939_tokens)), ._field_i=_2607_i, ._field_err=_26016_err};;
	__jule_func_result = std::move(_1a68ab46e_build(&_2617_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool _1a6898923_buildType(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err) {
	__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c80b653c_Token> _2733_token = (*(_27138_tokens))[(*(_2727_i))];;
	jule::Ptr<_1a59c3e6c_TypeDecl> _2747_t;
	jule::Bool _27410_ok;
	({
		__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a689846c__buildType(_self_, _27138_tokens, _2727_i, _27216_err);
		_2747_t = __jule_assign_result.__jule_result_arg0;
		_27410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27216_err && (!(_27410_ok)))) {
		_1a6896d1c_pushErr(_self_, _2733_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2747_t;
	__jule_func_result.__jule_result_arg1 = _27410_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1a59da989_TypeAliasDecl> _1a6898c64_buildTypeAliasDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _28140_tokens) {
	jule::I64 _2827_i = 1LL;;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1a6896d1c_pushErr(_self_.ptr(), (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a59da989_TypeAliasDecl> _2877_tad = jule::new_ptr<_1a59da989_TypeAliasDecl>(_1a59da989_TypeAliasDecl{._field_Token=(*(_28140_tokens))[1LL], ._field_Ident=(*((*(_28140_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1c80b653c_Token> _2917_token = (*(_28140_tokens))[_2827_i];;
	if (((*(_2917_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6896d1c_pushErr(_self_, _2917_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1a6896d1c_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	_2917_token=(*(_28140_tokens))[_2827_i];
	if (((*_2917_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1a6896d1c_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1a6896d1c_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	jule::Ptr<_1a59c3e6c_TypeDecl> _3127_t;
	jule::Bool _31210_ok;
	({
		__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, _28140_tokens, (&(_2827_i)), true);
		_3127_t = __jule_assign_result.__jule_result_arg0;
		_31210_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2877_tad))._field_Kind=_3127_t;
	if ((_31210_ok && (_2827_i < (*(_28140_tokens)).len()))) {
		_1a6896d1c_pushErr(_self_, (*(_28140_tokens))[_2827_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_2877_tad.alloc)._field_Public=_1a5a8b243_IsPub((*_2877_tad.alloc)._field_Ident);
	return _2877_tad;;
}



inline void _1a68990c7_buildVarTypeAndExpr(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59d6cd7_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _32159_tokens) {
	jule::I64 _3227_i = 0LL;;
	jule::Ptr<_1c80b653c_Token> _3237_tok = (*(_32159_tokens))[_3227_i];;
	if (((*(_3237_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_3227_i)++;
		if (((_3227_i >= (*(_32159_tokens)).len()) || ((*((*(_32159_tokens))[_3227_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1a6896d1c_pushErr(_self_.ptr(), _3237_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a59c3e6c_TypeDecl> _3308_t;
		jule::Bool _33011_ok;
		({
			__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, _32159_tokens, (&(_3227_i)), true);
			_3308_t = __jule_assign_result.__jule_result_arg0;
			_33011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33011_ok) {
			(*((*(_32141_v))))._field_Kind=_3308_t;
			if ((_3227_i >= (*(_32159_tokens)).len())) {
				return;;
			};
			_3237_tok=(*(_32159_tokens))[_3227_i];
		};
	};
	if (((*_3237_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1a6896d1c_pushErr(_self_, _3237_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Setter=_3237_tok;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _3467_exprTokens = (*(_32159_tokens)).slice((_3227_i + 1LL));;
	if ((_3467_exprTokens.len() == 0LL)) {
		_1a6896d1c_pushErr(_self_, _3237_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Expr=_1a68974c1_buildExpr(_self_, &(_3467_exprTokens));
}



inline void _1a689943a_buildVarCommon(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59d6cd7_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1c80b653c_Token>> _35453_tokens) {
	(*((*(_35436_v))))._field_Token=_35453_tokens[0LL];
	if (((*((*((*(_35436_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6896d1c_pushErr(_self_.ptr(), (*((*(_35436_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35436_v))))._field_Ident=(*(*((*(_35436_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35436_v))))._field_Public=_1a5a8b243_IsPub((*((*(_35436_v))))._field_Ident);
	(*((*(_35436_v))))._field_Kind=nullptr;
	if ((_35453_tokens.len() > 1LL)) {
		(_35453_tokens).mut_slice(1LL);;
		_1a68990c7_buildVarTypeAndExpr(_self_, _35436_v, &(_35453_tokens));
	};
}



inline void _1a689979d_buildVarBegin(_1a689636b_parser* _self_, jule::Ptr<_1a59d6cd7_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _37052_tokens) {
	jule::Ptr<_1c80b653c_Token> _3713_tok = (*(_37052_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3713_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1aa12e8ae:;
			{
				(*((*(_37034_v))))._field_Statically=true;
				goto _case_begin_1aa12e53a;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1aa12e53a:;
			{
				if (((*(_37052_tokens)).len() == 1LL)) {
					(*(_37052_tokens))=nullptr;
					_1a6896d1c_pushErr(_self_, _3713_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37052_tokens))).mut_slice(1LL);;
				if (((*((*(_37052_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_37034_v))))._field_Mutable=true;
					((*(_37052_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1aa12e22c:;
			{
				(*((*(_37034_v))))._field_Constant=true;
				((*(_37052_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1aa12ddec:;
			{
				(*(_37052_tokens))=nullptr;
				_1a6896d1c_pushErr(_self_, _3713_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa12e1c7:;
	};
}



inline jule::Ptr<_1a59d6cd7_VarDecl> _1a6899ade_buildVar(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _39829_tokens) {
	jule::Ptr<_1a59d6cd7_VarDecl> _3997_v = jule::new_ptr<_1a59d6cd7_VarDecl>(_1a59d6cd7_VarDecl{._field_Token=_39829_tokens[0LL], });;
	_1a689979d_buildVarBegin(_self_.ptr(), &(_3997_v), &(_39829_tokens));
	if ((_39829_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39829_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3997_v))._field_Reference=true;
		if ((_39829_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39829_tokens).mut_slice(1LL);;
	};
	_1a689943a_buildVarCommon(_self_, &(_3997_v), _39829_tokens);
	return _3997_v;;
}



inline jule::Ptr<_1a59d1177_GenericDecl> _1a6899e30_buildGeneric(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _41734_tokens) {
	jule::Ptr<_1a59d1177_GenericDecl> _4187_g = jule::new_ptr<_1a59d1177_GenericDecl>(_1a59d1177_GenericDecl{._field_Token=(*(_41734_tokens))[0LL], });;
	if (((*((*(_4187_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6896d1c_pushErr(_self_.ptr(), (*_4187_g.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_4187_g.alloc)._field_Ident=(*(*_4187_g.alloc)._field_Token.alloc)._field_Kind;
	if (((*(_41734_tokens)).len() > 1LL)) {
		if (((*((*(_41734_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1a6896d1c_pushErr(_self_, (*(_41734_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41734_tokens)).len() == 2LL)) {
			_1a6896d1c_pushErr(_self_, (*(_41734_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1c80b653c_Token>> _4358_constraintTokens = (*(_41734_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _4368_parts;
		jule::Slice<_1d1c6d64c_Log> _43615_errors;
		({
			__jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a689528d_parts(&(_4358_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_4368_parts = __jule_assign_result.__jule_result_arg0;
			_43615_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43615_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43615_errors);
			return nullptr;;
		};
		(*_4187_g.alloc)._field_Constraint=jule::new_ptr<_1a59d0bc1_Constraint>(_1a59d0bc1_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>::alloc(0LL, _4368_parts.len())});
		{
			auto expr = &(_4368_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa13bcea:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1c80b653c_Token>> _44216_part = *it;
				{
					jule::I64 _4439_i = 0LL;;
					jule::Ptr<_1a59c3e6c_TypeDecl> _4449_kind;
					({
						__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, &(_44216_part), (&(_4439_i)), true);
						_4449_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_4187_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*_4187_g.alloc)._field_Constraint.alloc)._field_Mask,jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>::make({_4449_kind}));
					if ((_4439_i < _44216_part.len())) {
						_1a6896d1c_pushErr(_self_, _44216_part[_4439_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1aa13bcea:;
				++it;
				goto _iter_begin_1aa13bcea;
			}
			_iter_end_1aa13bcea:;
		};
	};
	return _4187_g;;
}



inline jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>> _1a689a32b_buildGenerics(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _45435_tokens, jule::Ptr<_1c80b653c_Token>* _45454_errorToken) {
	if (((*(_45435_tokens)).len() == 0LL)) {
		_1a6896d1c_pushErr(_self_.ptr(), (*(_45454_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _4607_parts;
	jule::Slice<_1d1c6d64c_Log> _46014_errors;
	({
		__jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a689528d_parts(_45435_tokens, static_cast<jule::U64>(5LLU), true);
		_4607_parts = __jule_assign_result.__jule_result_arg0;
		_46014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46014_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46014_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>> _4667_generics = jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>>::alloc(0LL, _4607_parts.len());;
	{
		auto expr = &(_4607_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa141dcc:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _46715_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>> &__jule_push_dest = _4667_generics; __jule_push_dest.push(_1a6899e30_buildGeneric(_self_, &(_46715_part))); };
			}
			_iter_next_1aa141dcc:;
			++it;
			goto _iter_begin_1aa141dcc;
		}
		_iter_end_1aa141dcc:;
	};
	return _4667_generics;;
}



inline jule::Ptr<_1a59d46ca_ParamDecl> _1a689a66c_buildSelfParam(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _47434_tokens) {
	if ((_47434_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a59d46ca_ParamDecl> _4797_param = jule::new_ptr<_1a59d46ca_ParamDecl>();;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4797_param.alloc)._field_Mutable=true;
		if ((_47434_tokens.len() == 1LL)) {
			_1a6896d1c_pushErr(_self_, _47434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	_1e9a030bc_StrBuilder _4917_ident = static__1e9a034eb_New(5LL);;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_1e9a03a5c_WriteStr(&_4917_ident, jule::Str::lit("&", 1));
		if ((_47434_tokens.len() == 1LL)) {
			_1a6896d1c_pushErr(_self_, _47434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_1e9a03a5c_WriteStr(&_4917_ident, jule::Str::lit("self", 4));
		(*_4797_param.alloc)._field_Token=_47434_tokens[0LL];
		if ((_47434_tokens.len() != 1LL)) {
			_1a6896d1c_pushErr(_self_, _47434_tokens[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*_4797_param.alloc)._field_Ident=_1e9a04354_Str(&_4917_ident);
	return _4797_param;;
}



inline void _1a689aa8a_paramTypeBegin(_1a689636b_parser* _self_, jule::Ptr<_1a59d46ca_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _51468_tokens) {
	for (; ((*(_51459_i)) < (*(_51468_tokens)).len()); ((*(_51459_i)))++) {
		{
			jule::Ptr<_1c80b653c_Token> _5164_token = (*(_51468_tokens))[(*(_51459_i))];;
			if (((*(_5164_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_51435_param))))._field_Variadic) {
				_1a6896d1c_pushErr(_self_, _5164_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1aa149313;
			};
			(*((*(_51435_param))))._field_Variadic=true;
		}
	_iter_next_1aa149313:;
	}
	_iter_end_1aa149313:;;
}



inline void _1a689aded_buildParamType(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59d46ca_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _52960_tokens) {
	jule::I64 _5307_i = 0LL;;
	_1a689aa8a_paramTypeBegin(_self_.ptr(), _52936_param, &(_5307_i), _52960_tokens);
	if ((_5307_i >= (*(_52960_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, _52960_tokens, (&(_5307_i)), true);
		(*((*(_52936_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_5307_i < (*(_52960_tokens)).len())) {
		_1a6896d1c_pushErr(_self_, (*(_52960_tokens))[_5307_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a689b261_buildParamBody(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59d46ca_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1c80b653c_Token>> _54259_tokens) {
	jule::Ptr<_1c80b653c_Token> _5437_tok = _54259_tokens[0LL];;
	if ((_54259_tokens.len() == 1LL)) {
		(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
		return;;
	} else if ((_54259_tokens.len() < 3LL)) {
		_1a6896d1c_pushErr(_self_.ptr(), _5437_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54259_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_54236_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1a689aded_buildParamType(_self_, _54236_param, &(_54259_tokens));
		return;;
	};
	(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
	(_54259_tokens).mut_slice(2LL);;
	_1a689aded_buildParamType(_self_, _54236_param, &(_54259_tokens));
}



inline jule::Ptr<_1a59d46ca_ParamDecl> _1a689b5a2_buildParam(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _56231_tokens) {
	jule::Ptr<_1a59d46ca_ParamDecl> _5637_param = jule::new_ptr<_1a59d46ca_ParamDecl>(_1a59d46ca_ParamDecl{._field_Token=_56231_tokens[0LL], });;
	if (((*((*(_5637_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5637_param.alloc)._field_Mutable=true;
		if ((_56231_tokens.len() == 1LL)) {
			_1a6896d1c_pushErr(_self_.ptr(), _56231_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56231_tokens).mut_slice(1LL);;
		(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
	};
	if ((_56231_tokens.len() >= 3LL)) {
		if (((*(*_5637_param.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_56231_tokens.len() == 1LL)) {
				_1a6896d1c_pushErr(_self_, _56231_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56231_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_56231_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5637_param.alloc)._field_Reference=true;
				(_56231_tokens).mut_slice(1LL);;
				(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
			};
		};
	};
	if (((*(*_5637_param.alloc)._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5637_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1a689aded_buildParamType(_self_, &(_5637_param), &(_56231_tokens));
	} else {
		_1a689b261_buildParamBody(_self_, &(_5637_param), _56231_tokens);
	};
	return _5637_param;;
}



inline void _1a689b85a_checkParams(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1a59d46ca_ParamDecl>>* _60532_params) {
	{
		auto expr = _60532_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa159301:;
		if (it != expr_end) {
			jule::Ptr<_1a59d46ca_ParamDecl> _60615_param = *it;
			{
				if ((_1a59d4a4e_IsSelf(_60615_param.ptr()) || ((*_60615_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1aa159301;
				};
				if (((*_60615_param.alloc)._field_Token == nullptr)) {
					_1a6896d1c_pushErr(_self_, (*_60615_param.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*_60615_param.alloc)._field_Kind=jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a59c4577_IdentTypeDecl>(_1a59c4577_IdentTypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Ident=(*((*_60615_param.alloc)._field_Token))._field_Kind, }), &__jule_any_type74)});
					(*_60615_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1aa159301:;
			++it;
			goto _iter_begin_1aa159301;
		}
		_iter_end_1aa159301:;
	};
}



inline jule::Slice<jule::Ptr<_1a59d46ca_ParamDecl>> _1a689bc56_buildParams(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _62533_tokens, jule::Bool _62551_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _6267_parts;
	jule::Slice<_1d1c6d64c_Log> _62614_errs;
	({
		__jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a689528d_parts(_62533_tokens, static_cast<jule::U64>(5LLU), true);
		_6267_parts = __jule_assign_result.__jule_result_arg0;
		_62614_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62614_errs);
	if ((_6267_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a59d46ca_ParamDecl>> _63211_params = nullptr;;
	if ((_62551_method && (_6267_parts.len() > 0LL))) {
		jule::Ptr<_1a59d46ca_ParamDecl> _6348_param = _1a689a66c_buildSelfParam(_self_, _6267_parts[0LL]);;
		if (((_6348_param != nullptr) && _1a59d4a4e_IsSelf(_6348_param))) {
			{ jule::Slice<jule::Ptr<_1a59d46ca_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6348_param); };
			(_6267_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_6267_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa160b21:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _64115_part = *it;
			{
				if ((_64115_part.len() == 0LL)) {
					goto _iter_next_1aa160b21;
				};
				jule::Ptr<_1a59d46ca_ParamDecl> _6458_param = _1a689b5a2_buildParam(_self_, _64115_part);;
				if ((_6458_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1a59d46ca_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6458_param); };
				};
			}
			_iter_next_1aa160b21:;
			++it;
			goto _iter_begin_1aa160b21;
		}
		_iter_end_1aa160b21:;
	};
	_1a689b85a_checkParams(_self_, &(_63211_params));
	return _63211_params;;
}



inline __jule_tuple_x_1a59c6d60_RetTypeDecl__jule_tuple_bool _1a689c152_buildMultiRetType(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _65539_tokens, jule::I64* _65562_i) {
	__jule_tuple_x_1a59c6d60_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a59c6d60_RetTypeDecl>();
	((*(_65562_i)))++;
	if (((*(_65562_i)) >= (*(_65539_tokens)).len())) {
		((*(_65562_i)))--;
		({
			__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, _65539_tokens, _65562_i, false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65562_i)))--;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _6657_rangeTokens = _1a6894a1d_range(_65562_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _65539_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _6677_parts;
	jule::Slice<_1d1c6d64c_Log> _66714_errs;
	({
		__jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a689528d_parts(&(_6657_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6677_parts = __jule_assign_result.__jule_result_arg0;
		_66714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66714_errs);
	if ((_6677_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> _6737_types = jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>::alloc(0LL, _6677_parts.len());;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::Slice<jule::Ptr<_1c80b653c_Token>>::alloc(0LL, _6677_parts.len());
	{
		auto expr = &(_6677_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa166a06:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _67515_part = *it;
			{
				if ((_67515_part.len() == 0LL)) {
					goto _iter_next_1aa166a06;
				};
				jule::Ptr<_1c80b653c_Token> _6798_token = _67515_part[0LL];;
				jule::I64 _6808_offset = 0LL;;
				if ((_67515_part.len() > 1LL)) {
					_6798_token=_67515_part[1LL];
					if (((*(_6798_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6808_offset=2LL;
						if ((_67515_part.len() < 3LL)) {
							_1a6896d1c_pushErr(_self_, _6798_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1aa166a06;
						};
					};
				};
				_6798_token=_67515_part[0LL];
				if ((_6808_offset != 2LL)) {
					jule::Ptr<_1c80b653c_Token> _6969_newToken = jule::new_ptr<_1c80b653c_Token>((*_6798_token.alloc));;
					(*_6969_newToken.alloc)._field_Kind=jule::Str::lit("<anonymous>", 11);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1c80b653c_Token>>::make({_6969_newToken}));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1c80b653c_Token>>::make({_6798_token}));
				};
				jule::Ptr<_1a59c3e6c_TypeDecl> _7038_tk;
				({
					__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, &(_67515_part), (&(_6808_offset)), true);
					_7038_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6808_offset < _67515_part.len())) {
					_1a6896d1c_pushErr(_self_, _67515_part[_6808_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> &__jule_push_dest = _6737_types; __jule_push_dest.push(_7038_tk); };
			}
			_iter_next_1aa166a06:;
			++it;
			goto _iter_begin_1aa166a06;
		}
		_iter_end_1aa166a06:;
	};
	if ((_6737_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=(*(_65539_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1a59c5699_TupleTypeDecl>(_1a59c5699_TupleTypeDecl{._field_Types=_6737_types}), &__jule_any_type73)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6737_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a59c6d60_RetTypeDecl__jule_tuple_bool _1a689c54d_buildRetType(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _72634_tokens, jule::I64* _72657_i) {
	__jule_tuple_x_1a59c6d60_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a59c6d60_RetTypeDecl>();
	if (((*(_72657_i)) >= (*(_72634_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c80b653c_Token> _7327_token = (*(_72634_tokens))[(*(_72657_i))];;
	{
		auto &_match_expr{ (*(_7327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1aa1708bc:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1aa170944:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1aa1709aa:;
			{
				if ((((*(_72657_i)) + 1LL) >= (*(_72634_tokens)).len())) {
					_1a6896d1c_pushErr(_self_.ptr(), _7327_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72657_i)))++;
				_7327_token=(*(_72634_tokens))[(*(_72657_i))];
				{
					auto &_match_expr{ (*(_7327_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa171bcb:;
						{
							({
								__jule_tuple_x_1a59c6d60_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a689c152_buildMultiRetType(_self_, _72634_tokens, _72657_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1aa1728ad:;
						{
							_1a6896d1c_pushErr(_self_, _7327_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1aa172825:;
				};
				({
					__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, _72634_tokens, _72657_i, true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1aa170867:;
	};
	((*(_72657_i)))++;
	_1a6896d1c_pushErr(_self_.ptr(), _7327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1a59d5b2c_FnDecl> _1a689ca04_buildFnPrototype(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method) {
	jule::Ptr<_1a59d5b2c_FnDecl> _7667_f = jule::new_ptr<_1a59d5b2c_FnDecl>(_1a59d5b2c_FnDecl{._field_Token=(*(_76538_tokens))[(*(_76561_i))], });;
	if (((*((*(_7667_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7667_f.alloc)._field_Statically=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1a6896d1c_pushErr(_self_.ptr(), (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	if (((*(*_7667_f.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7667_f.alloc)._field_Unsafety=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1a6896d1c_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	((*(_76561_i)))++;
	if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
		_1a6896d1c_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c80b653c_Token> _7993_tok = (*(_76538_tokens))[(*(_76561_i))];;
	if (((*(_7993_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1a6896d1c_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Ident=(*_7993_tok.alloc)._field_Kind;
	} else {
		(*_7667_f.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1c80b653c_Token> _8113_errorToken = (*(_76538_tokens))[(*(_76561_i))];;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _8127_genericsTokens = _1a6894a1d_range(_76561_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _76538_tokens);;
	if ((_8127_genericsTokens != nullptr)) {
		(*_7667_f.alloc)._field_Generics=_1a689a32b_buildGenerics(_self_, &(_8127_genericsTokens), &(_8113_errorToken));
	};
	if (((*((*(_76538_tokens))[(*(_76561_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1a6896d1c_pushErr(_self_, (*(_76538_tokens))[(*(_76561_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _8227_paramsToks = _1a6894a1d_range(_76561_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _76538_tokens);;
	if ((_8227_paramsToks.len() > 0LL)) {
		(*_7667_f.alloc)._field_Params=_1a689bc56_buildParams(_self_, &(_8227_paramsToks), _76569_method);
	};
	if (((*(_76561_i)) < (*(_76538_tokens)).len())) {
		jule::Ptr<_1c80b653c_Token> _8284_token = (*(_76538_tokens))[(*(_76561_i))];;
		if (((*(_8284_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_7667_f.alloc)._field_Exceptional=true;
			((*(_76561_i)))++;
		};
	};
	(*_7667_f.alloc)._field_Public=_1a5a8b243_IsPub((*_7667_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1a59c6d60_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a689c54d_buildRetType(_self_, _76538_tokens, _76561_i);
		(*_7667_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7667_f;;
}



inline jule::Ptr<_1a59d5b2c_FnDecl> _1a689ceaa_buildFn(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype) {
	jule::I64 _8437_i = 0LL;;
	jule::Ptr<_1a59d5b2c_FnDecl> _8447_f = _1a689ca04_buildFnPrototype(_self_, _84229_tokens, &(_8437_i), _84247_method);;
	if (_84261_prototype) {
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1a6896d1c_pushErr(_self_, (*(_84229_tokens))[(_8437_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _8447_f;;
	} else if ((_8447_f == nullptr)) {
		return _8447_f;;
	};
	if ((_8437_i >= (*(_84229_tokens)).len())) {
		_1a6896668_stop(_self_);
		_1a6896d1c_pushErr(_self_, (*(_8447_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _8607_blockTokens = _1a6894a1d_range(&(_8437_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _84229_tokens);;
	if ((_8607_blockTokens != nullptr)) {
		(*_8447_f.alloc)._field_Scope=_1a6897eb6_buildScope(_self_, &(_8607_blockTokens), (*(_84229_tokens))[(_8437_i - 1LL)]);
		(*((*_8447_f.alloc)._field_Scope))._field_Unsafety=(*_8447_f.alloc)._field_Unsafety;
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1a6896d1c_pushErr(_self_, (*(_84229_tokens))[_8437_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1a6896668_stop(_self_);
		_1a6896d1c_pushErr(_self_, (*_8447_f.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8447_f;;
}



inline jule::Slice<jule::Ptr<_1c80b653c_Token>> _1a689d2eb_getUseDeclSelectors(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _87639_tokens) {
	jule::I64 _8777_i = 0LL;;
	_87639_tokens=_1a6894a1d_range(&(_8777_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_87639_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _8797_parts;
	jule::Slice<_1d1c6d64c_Log> _87914_errs;
	({
		__jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a689528d_parts(&(_87639_tokens), static_cast<jule::U64>(5LLU), true);
		_8797_parts = __jule_assign_result.__jule_result_arg0;
		_87914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87914_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87914_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _8857_selectors = jule::Slice<jule::Ptr<_1c80b653c_Token>>::alloc(0LL, _8797_parts.len());;
	{
		auto expr = &(_8797_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa18ae04:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _88615_part = *it;
			{
				if ((_88615_part.len() > 1LL)) {
					_1a6896d1c_pushErr(_self_, _88615_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c80b653c_Token> _8908_tok = _88615_part[0LL];;
				if ((((*(_8908_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8908_tok.alloc)._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1a6896d1c_pushErr(_self_, _8908_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a6897180_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1aa18ae04;
				};
				{ jule::Slice<jule::Ptr<_1c80b653c_Token>> &__jule_push_dest = _8857_selectors; __jule_push_dest.push(_8908_tok); };
			}
			_iter_next_1aa18ae04:;
			++it;
			goto _iter_begin_1aa18ae04;
		}
		_iter_end_1aa18ae04:;
	};
	return _8857_selectors;;
}



inline void _1a689d65e_buildBindUseDecl(_1a689636b_parser* _self_, jule::Ptr<_1a59dc073_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _90154_tokens) {
	if (((*(_90154_tokens)).len() > 1LL)) {
		_1a6896d1c_pushErr(_self_, (*(_90154_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c80b653c_Token> _9053_token = (*(_90154_tokens))[0LL];;
	if ((((*(_9053_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*_9053_token.alloc)._field_Kind[0LL] != '`') && ((*_9053_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1a6896d1c_pushErr(_self_, _9053_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90137_decl))))._field_Binded=true;
	(*((*(_90137_decl))))._field_LinkPath=(*_9053_token.alloc)._field_Kind.slice(1LL, ((*_9053_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1a689d9a0_useDeclTokstoa(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _91431_tokens) {
	jule::I64 _9157_n = 0LL;;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa19344a:;
		if (it != expr_end) {
			jule::Ptr<_1c80b653c_Token> *_91610_token = it;
			{
				if ((((*((*(_91610_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_91610_token)).alloc)._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1a6896d1c_pushErr(_self_, (*(_91610_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_9157_n+=(*(*(_91610_token)).alloc)._field_Kind.len();
			}
			_iter_next_1aa19344a:;
			++it;
			goto _iter_begin_1aa19344a;
		}
		_iter_end_1aa19344a:;
	};
	_1e9a030bc_StrBuilder _9227_s = static__1e9a034eb_New(_9157_n);;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1932e6:;
		if (it != expr_end) {
			jule::Ptr<_1c80b653c_Token> *_92310_token = it;
			{
				_1e9a03a5c_WriteStr(&_9227_s, (*((*(_92310_token))))._field_Kind);
			}
			_iter_next_1aa1932e6:;
			++it;
			goto _iter_begin_1aa1932e6;
		}
		_iter_end_1aa1932e6:;
	};
	return _1e9a04354_Str(&_9227_s);;
}



inline void _1a689dd13_buildStdUseDecl(_1a689636b_parser* _self_, jule::Ptr<_1a59dc073_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1c80b653c_Token>> _92956_tokens) {
	(*((*(_92936_decl))))._field_Std=true;
	jule::Ptr<_1c80b653c_Token> _9327_token = _92956_tokens[0LL];;
	if ((_92956_tokens.len() < 3LL)) {
		_1a6896d1c_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_92956_tokens).mut_slice(2LL);;
	_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_9327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1aa197e00:;
			{
				_1a6896d1c_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1aa197e77:;
			{
				jule::Slice<jule::Ptr<_1c80b653c_Token>> _94512_selectors = nullptr;;
				({
					__jule_tuple_sx_1c80b653c_Token__jule_tuple_sx_1c80b653c_Token __jule_assign_result = _1a6894cd7_rangeLast(&(_92956_tokens));
					_92956_tokens = __jule_assign_result.__jule_result_arg0;
					_94512_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92936_decl))))._field_Selected=_1a689d2eb_getUseDeclSelectors(_self_, _94512_selectors);
				if ((_92956_tokens.len() == 0LL)) {
					_1a6896d1c_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a6896d1c_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1a6896d1c_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa197edd:;
			{
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1a6896d1c_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a6896d1c_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1a6896d1c_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92936_decl))))._field_Full=true;
			}
		}
		_match_end_1aa197d9a:;
	};
	if (((_92956_tokens.len() == 1LL) && ((*(_92956_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_92936_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92936_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1a689d9a0_useDeclTokstoa(_self_, &(_92956_tokens)));
	};
}



inline void _1a689e176_buildIdentUseDecl(_1a689636b_parser* _self_, jule::Ptr<_1a59dc073_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1c80b653c_Token>> _98758_tokens) {
	(*((*(_98738_decl))))._field_Std=false;
	jule::Ptr<_1c80b653c_Token> _9907_token = _98758_tokens[(_98758_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_9907_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1aa1a19b9:;
			{
				_1a6896d1c_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1aa1a2921:;
			{
				jule::Slice<jule::Ptr<_1c80b653c_Token>> _99612_selectors = nullptr;;
				({
					__jule_tuple_sx_1c80b653c_Token__jule_tuple_sx_1c80b653c_Token __jule_assign_result = _1a6894cd7_rangeLast(&(_98758_tokens));
					_98758_tokens = __jule_assign_result.__jule_result_arg0;
					_99612_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98738_decl))))._field_Selected=_1a689d2eb_getUseDeclSelectors(_self_, _99612_selectors);
				if ((_98758_tokens.len() == 0LL)) {
					_1a6896d1c_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a6896d1c_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1a6896d1c_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa1a2987:;
			{
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1a6896d1c_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a6896d1c_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1a6896d1c_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98738_decl))))._field_Full=true;
			}
		}
		_match_end_1aa1a2800:;
	};
	(*((*(_98738_decl))))._field_LinkPath=_1a689d9a0_useDeclTokstoa(_self_, &(_98758_tokens));
}



inline void _1a689e4d9_parseUseDecl(_1a689636b_parser* _self_, jule::Ptr<_1a59dc073_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1c80b653c_Token>> _103553_tokens) {
	if ((*((*(_103533_decl))))._field_Binded) {
		_1a689d65e_buildBindUseDecl(_self_, _103533_decl, &(_103553_tokens));
		return;;
	};
	jule::Ptr<_1c80b653c_Token> _10417_token = _103553_tokens[0LL];;
	if (((*(_10417_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6896d1c_pushErr(_self_, _10417_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103553_tokens.len() > 2LL) && ((*(_103553_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_103533_decl))))._field_Alias=(*_10417_token.alloc)._field_Kind;
		if (((*(_103553_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a6896d1c_pushErr(_self_, _10417_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a6897180_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_103553_tokens).mut_slice(2LL);;
		_10417_token=_103553_tokens[0LL];
	};
	;
	{
		
		if ((*_10417_token.alloc)._field_Kind.equal("std", 3)) {
			_case_begin_1aa1aeae8:;
			{
				_1a689dd13_buildStdUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		else {
			_case_begin_1aa1ae741:;
			{
				_1a689e176_buildIdentUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		_match_end_1aa1ae6ca:;
	};
}



inline jule::Ptr<_1a59dc073_UseDecl> _1a689e8d5_buildUseDecl(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _106932_tokens, jule::Bool _106950_binded) {
	jule::Ptr<_1a59dc073_UseDecl> _10707_decl = jule::new_ptr<_1a59dc073_UseDecl>(_1a59dc073_UseDecl{._field_Token=_106932_tokens[0LL], ._field_Binded=_106950_binded, });;
	if ((_106932_tokens.len() < 2LL)) {
		_1a6896d1c_pushErr(_self_, (*(_10707_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106932_tokens).mut_slice(1LL);;
	_1a689e4d9_parseUseDecl(_self_, &(_10707_decl), _106932_tokens);
	return _10707_decl;;
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a689ecd1_buildTypeEnumItemKind(jule::Ptr<_1a689636b_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _108356_tokens) {
	jule::I64 _10847_braceN = 0LL;;
	jule::I64 _10853_exprStart = (*(_108343_i));;
	for (; ((*(_108343_i)) < (*(_108356_tokens)).len()); ((*(_108343_i)))++) {
		{
			jule::Ptr<_1c80b653c_Token> _10874_t = (*(_108356_tokens))[(*(_108343_i))];;
			{
				auto &_match_expr{ (*(_10874_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aa1b3b1e:;
					{
						(_10847_braceN)++;
						goto _iter_next_1aa1b30a2;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aa1b3e2c:;
					{
						(_10847_braceN)--;
					}
				}
				_match_end_1aa1b3dc7:;
			};
			if ((_10847_braceN > 0LL)) {
				goto _iter_next_1aa1b30a2;
			};
			if ((((*(_10874_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_108343_i)) + 1LL) >= (*(_108356_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c80b653c_Token>> _110313_kindTokens = nullptr;;
				if (((*_10874_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart, (*(_108343_i)));
				} else {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart);
				};
				jule::I64 _11099_j = 0LL;;
				jule::Ptr<_1a59c3e6c_TypeDecl> _11109_kind;
				({
					__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, &(_110313_kindTokens), (&(_11099_j)), true);
					_11109_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_11099_j < _110313_kindTokens.len())) {
					_1a6896d1c_pushErr(_self_, _110313_kindTokens[_11099_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _11109_kind;;
			};
		}
	_iter_next_1aa1b30a2:;
	}
	_iter_end_1aa1b30a2:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a59dd915_TypeEnumItemDecl>> _1a68a0122_buildTypeEnumItems(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _112040_tokens) {
	jule::Slice<jule::Ptr<_1a59dd915_TypeEnumItemDecl>> _11217_items = jule::Slice<jule::Ptr<_1a59dd915_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _11227_i = 0LL;;
	for (; (_11227_i < (*(_112040_tokens)).len()); (_11227_i)++) {
		{
			jule::Ptr<_1c80b653c_Token> _11248_t = (*(_112040_tokens))[_11227_i];;
			jule::Ptr<_1a59dd915_TypeEnumItemDecl> _11258_item = jule::new_ptr<_1a59dd915_TypeEnumItemDecl>();;
			(*_11258_item.alloc)._field_Token=_11248_t;
			if ((((*((*_11258_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_112040_tokens)).len() - _11227_i) > 2LL))) {
				_11248_t=(*(_112040_tokens))[(_11227_i + 1LL)];
				if (((*(_11248_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_11258_item.alloc)._field_Ident=(*(*_11258_item.alloc)._field_Token.alloc)._field_Kind;
					_11227_i+=2LL;
					if (((_11227_i >= (*(_112040_tokens)).len()) || ((*((*(_112040_tokens))[_11227_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1a6896d1c_pushErr(_self_.ptr(), _11248_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1aa1b8c89;
					};
				};
			};
			(*_11258_item.alloc)._field_Kind=_1a689ecd1_buildTypeEnumItemKind(_self_, &(_11227_i), _112040_tokens);
			{ jule::Slice<jule::Ptr<_1a59dd915_TypeEnumItemDecl>> &__jule_push_dest = _11217_items; __jule_push_dest.push(_11258_item); };
		}
	_iter_next_1aa1b8c89:;
	}
	_iter_end_1aa1b8c89:;;
	return _11217_items;;
}



inline jule::Ptr<_1a59de075_TypeEnumDecl> _1a68a0463_buildTypeEnumDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _114439_tokens) {
	jule::I64 _11457_i = 1LL;;
	jule::Ptr<_1a59de075_TypeEnumDecl> _11467_e = jule::new_ptr<_1a59de075_TypeEnumDecl>(_1a59de075_TypeEnumDecl{._field_Token=(*(_114439_tokens))[_11457_i], });;
	if (((*((*(_11467_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6896d1c_pushErr(_self_.ptr(), (*_11467_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Ident=(*(*_11467_e.alloc)._field_Token.alloc)._field_Kind;
	_11457_i+=3LL;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _11567_itemTokens = _1a6894a1d_range(&(_11457_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _114439_tokens);;
	if ((_11567_itemTokens == nullptr)) {
		_1a6896668_stop(_self_);
		_1a6896d1c_pushErr(_self_, (*_11467_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _11467_e;;
	} else if ((_11457_i < (*(_114439_tokens)).len())) {
		_1a6896d1c_pushErr(_self_, (*(_114439_tokens))[_11457_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Public=_1a5a8b243_IsPub((*_11467_e.alloc)._field_Ident);
	(*_11467_e.alloc)._field_End=(*(_114439_tokens))[(_11457_i - 1LL)];
	(*_11467_e.alloc)._field_Items=_1a68a0122_buildTypeEnumItems(_self_, &(_11567_itemTokens));
	return _11467_e;;
}



inline jule::Ptr<_1a59c82a1_Expr> _1a68a085e_buildEnumItemExpr(jule::Ptr<_1a689636b_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _117152_tokens) {
	jule::I64 _11727_braceN = 0LL;;
	jule::I64 _11733_exprStart = (*(_117139_i));;
	for (; ((*(_117139_i)) < (*(_117152_tokens)).len()); ((*(_117139_i)))++) {
		{
			jule::Ptr<_1c80b653c_Token> _11754_t = (*(_117152_tokens))[(*(_117139_i))];;
			{
				auto &_match_expr{ (*(_11754_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aa1c6978:;
					{
						(_11727_braceN)++;
						goto _iter_next_1aa1c5e0b;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aa1c6c86:;
					{
						(_11727_braceN)--;
					}
				}
				_match_end_1aa1c6c31:;
			};
			if ((_11727_braceN > 0LL)) {
				goto _iter_next_1aa1c5e0b;
			};
			if ((((*(_11754_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_117139_i)) + 1LL) >= (*(_117152_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c80b653c_Token>> _119113_exprTokens = nullptr;;
				if (((*_11754_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart, (*(_117139_i)));
				} else {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart);
				};
				return _1a68974c1_buildExpr(_self_, &(_119113_exprTokens));;
			};
		}
	_iter_next_1aa1c5e0b:;
	}
	_iter_end_1aa1c5e0b:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a59dc529_EnumItemDecl>> _1a68a0ba0_buildEnumItems(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _120336_tokens) {
	jule::Slice<jule::Ptr<_1a59dc529_EnumItemDecl>> _12047_items = jule::Slice<jule::Ptr<_1a59dc529_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _12057_i = 0LL;;
	for (; (_12057_i < (*(_120336_tokens)).len()); (_12057_i)++) {
		{
			jule::Ptr<_1c80b653c_Token> _12078_t = (*(_120336_tokens))[_12057_i];;
			jule::Ptr<_1a59dc529_EnumItemDecl> _12088_item = jule::new_ptr<_1a59dc529_EnumItemDecl>();;
			(*_12088_item.alloc)._field_Token=_12078_t;
			if (((*((*_12088_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1a6896d1c_pushErr(_self_.ptr(), (*_12088_item.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a6897180_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*_12088_item.alloc)._field_Ident=(*(*_12088_item.alloc)._field_Token.alloc)._field_Kind;
			if ((((_12057_i + 1LL) >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[(_12057_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_12057_i + 1LL) < (*(_120336_tokens)).len())) {
					(_12057_i)++;
				};
				{ jule::Slice<jule::Ptr<_1a59dc529_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
				goto _iter_next_1aa1ca817;
			};
			(_12057_i)++;
			_12078_t=(*(_120336_tokens))[_12057_i];
			(_12057_i)++;
			if (((*(_12078_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1a6896d1c_pushErr(_self_, _12078_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1aa1ca817;
			};
			if (((_12057_i >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[_12057_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1a6896d1c_pushErr(_self_, _12078_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1aa1ca817;
			};
			(*_12088_item.alloc)._field_Expr=_1a68a085e_buildEnumItemExpr(_self_, &(_12057_i), _120336_tokens);
			{ jule::Slice<jule::Ptr<_1a59dc529_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
		}
	_iter_next_1aa1ca817:;
	}
	_iter_end_1aa1ca817:;;
	return _12047_items;;
}



inline jule::Ptr<_1a59dd0da_EnumDecl> _1a68a0ee1_buildEnumDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _124035_tokens) {
	if (((*(_124035_tokens)).len() < 3LL)) {
		_1a6896d1c_pushErr(_self_.ptr(), (*(_124035_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a59dd0da_EnumDecl> _12457_e = jule::new_ptr<_1a59dd0da_EnumDecl>(_1a59dd0da_EnumDecl{._field_Token=(*(_124035_tokens))[1LL], });;
	if (((*((*(_12457_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6896d1c_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Ident=(*(*_12457_e.alloc)._field_Token.alloc)._field_Kind;
	jule::I64 _12537_i = 2LL;;
	if (((*((*(_124035_tokens))[_12537_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_12537_i)++;
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1a6896d1c_pushErr(_self_, (*(_124035_tokens))[(_12537_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _12457_e;;
		};
		({
			__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, _124035_tokens, (&(_12537_i)), true);
			(*_12457_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1a6896668_stop(_self_);
			_1a6896d1c_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _12457_e;;
		};
	} else {
		(*_12457_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _12707_itemTokens = _1a6894a1d_range(&(_12537_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _124035_tokens);;
	if ((_12707_itemTokens == nullptr)) {
		_1a6896668_stop(_self_);
		_1a6896d1c_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _12457_e;;
	} else if ((_12537_i < (*(_124035_tokens)).len())) {
		_1a6896d1c_pushErr(_self_, (*(_124035_tokens))[_12537_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Public=_1a5a8b243_IsPub((*_12457_e.alloc)._field_Ident);
	(*_12457_e.alloc)._field_End=(*(_124035_tokens))[(_12537_i - 1LL)];
	(*_12457_e.alloc)._field_Items=_1a68a0ba0_buildEnumItems(_self_, &(_12707_itemTokens));
	return _12457_e;;
}



inline jule::Any _1a68a1332_buildNodeEnumDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _128539_tokens) {
	if ((((*(_128539_tokens)).len() > 3LL) && ((*((*(_128539_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_128539_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1a68a0463_buildTypeEnumDecl(_self_, _128539_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1a68a0ee1_buildEnumDecl(_self_, _128539_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1a59de33e_FieldDecl> _1a68a1673_buildField(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _129431_tokens) {
	jule::Ptr<_1a59de33e_FieldDecl> _12957_f = jule::new_ptr<_1a59de33e_FieldDecl>();;
	(*_12957_f.alloc)._field_Mutable=((*(_129431_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_12957_f.alloc)._field_Mutable) {
		if ((_129431_tokens.len() == 1LL)) {
			_1a6896d1c_pushErr(_self_.ptr(), _129431_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(1LL);;
	};
	(*_12957_f.alloc)._field_Token=_129431_tokens[0LL];
	if (((*((*_12957_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6896d1c_pushErr(_self_, (*_12957_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_12957_f.alloc)._field_Ident=(*(*_12957_f.alloc)._field_Token.alloc)._field_Kind;
	if ((_129431_tokens.len() == 1LL)) {
		_1a6896d1c_pushErr(_self_, _129431_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129431_tokens.len() < 3LL) || ((*(_129431_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1a6896d1c_pushErr(_self_, _129431_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129431_tokens).mut_slice(2LL);;
	jule::I64 _13237_i = 0LL;;
	({
		__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, &(_129431_tokens), (&(_13237_i)), true);
		(*_12957_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_13237_i < _129431_tokens.len())) {
		jule::Ptr<_1c80b653c_Token> _13264_token = _129431_tokens[_13237_i];;
		if (((*(_13264_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a6896d1c_pushErr(_self_, _129431_tokens[_13237_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13237_i)++;
		if ((_13237_i >= _129431_tokens.len())) {
			_1a6896d1c_pushErr(_self_, _13264_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(_13237_i);;
		(*_12957_f.alloc)._field_Default=_1a68974c1_buildExpr(_self_, &(_129431_tokens));
	};
	(*_12957_f.alloc)._field_Public=_1a5a8b243_IsPub((*_12957_f.alloc)._field_Ident);
	return _12957_f;;
}



inline jule::Slice<jule::Ptr<_1a59de33e_FieldDecl>> _1a68a19b4_buildStructDeclFields(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _134342_tokens) {
	jule::Slice<jule::Ptr<_1a59de33e_FieldDecl>> _134411_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a68725de_stmt>> _13457_stmts = _1a6872996_splitStmts(&(_134342_tokens));;
	{
		auto expr = &(_13457_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa1eab9a:;
		if (it != expr_end) {
			jule::Ptr<_1a68725de_stmt> _134615_stmt = *it;
			{
				_134342_tokens=(*(_134615_stmt))._field_tokens;
				jule::Ptr<_1a59de33e_FieldDecl> _13488_f = _1a68a1673_buildField(_self_, _134342_tokens);;
				{ jule::Slice<jule::Ptr<_1a59de33e_FieldDecl>> &__jule_push_dest = _134411_fields; __jule_push_dest.push(_13488_f); };
			}
			_iter_next_1aa1eab9a:;
			++it;
			goto _iter_begin_1aa1eab9a;
		}
		_iter_end_1aa1eab9a:;
	};
	return _134411_fields;;
}



inline jule::Ptr<_1a59dec35_StructDecl> _1a68a1d05_buildStructDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _135437_tokens) {
	if (((*(_135437_tokens)).len() < 3LL)) {
		_1a6896d1c_pushErr(_self_.ptr(), (*(_135437_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _13607_i = 1LL;;
	jule::Ptr<_1a59dec35_StructDecl> _13617_s = jule::new_ptr<_1a59dec35_StructDecl>(_1a59dec35_StructDecl{._field_Token=(*(_135437_tokens))[_13607_i], });;
	if (((*((*(_13617_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6896d1c_pushErr(_self_, (*_13617_s.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_13607_i)++;
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1a6896d1c_pushErr(_self_, (*(_135437_tokens))[_13607_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	(*_13617_s.alloc)._field_Ident=(*(*_13617_s.alloc)._field_Token.alloc)._field_Kind;
	jule::Ptr<_1c80b653c_Token> _13753_errorToken = (*(_135437_tokens))[_13607_i];;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _13767_genericsTokens = _1a6894a1d_range(&(_13607_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _135437_tokens);;
	if ((_13767_genericsTokens != nullptr)) {
		(*_13617_s.alloc)._field_Generics=_1a689a32b_buildGenerics(_self_, &(_13767_genericsTokens), &(_13753_errorToken));
	};
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1a6896d1c_pushErr(_self_, (*(_135437_tokens))[(_13607_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _13867_bodyTokens = _1a6894a1d_range(&(_13607_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _135437_tokens);;
	if ((_13867_bodyTokens == nullptr)) {
		_1a6896668_stop(_self_);
		_1a6896d1c_pushErr(_self_, (*_13617_s.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	if ((_13607_i < (*(_135437_tokens)).len())) {
		_1a6896d1c_pushErr(_self_, (*(_135437_tokens))[_13607_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_13617_s.alloc)._field_Public=_1a5a8b243_IsPub((*_13617_s.alloc)._field_Ident);
	(*_13617_s.alloc)._field_Fields=_1a68a19b4_buildStructDeclFields(_self_, _13867_bodyTokens);
	(*_13617_s.alloc)._field_End=(*(_135437_tokens))[(_13607_i - 1LL)];
	return _13617_s;;
}



inline void _1a68a20ad_checkMethodReceiver(_1a689636b_parser* _self_, jule::Ptr<_1a59d5b2c_FnDecl>* _140236_f) {
	if ((*((*(_140236_f))))._field_Statically) {
		if ((((*((*(_140236_f))))._field_Params.len() > 0LL) && _1a59d4a4e_IsSelf((*((*(_140236_f))))._field_Params[0LL].ptr()))) {
			_1a6896d1c_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140236_f))))._field_Params.len() == 0LL)) {
		_1a6896d1c_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a59d46ca_ParamDecl> _14143_param = (*((*(_140236_f))))._field_Params[0LL];;
	if ((!(_1a59d4a4e_IsSelf(_14143_param.ptr())))) {
		_1a6896d1c_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a68a2421_buildTraitBody(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59e0472_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1c80b653c_Token>> _142155_tokens) {
	jule::Slice<jule::Ptr<_1a68725de_stmt>> _14227_stmts = _1a6872996_splitStmts(&(_142155_tokens));;
	{
		auto expr = &(_14227_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa20b628:;
		if (it != expr_end) {
			jule::Ptr<_1a68725de_stmt> _142315_stmt = *it;
			{
				_142155_tokens=(*(_142315_stmt))._field_tokens;
				if ((_142155_tokens.len() == 0LL)) {
					goto _iter_next_1aa20b628;
				};
				{
					auto &_match_expr{ (*(_142155_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1aa2100cc:;
						{
							jule::Ptr<_1a59d5b2c_FnDecl> _14309_f = _1a689ceaa_buildFn(_self_, &(_142155_tokens), true, true);;
							if ((_14309_f == nullptr)) {
								goto _match_end_1aa20c89e;
							};
							_1a68a20ad_checkMethodReceiver(_self_, &(_14309_f));
							if (((*(_14309_f))._field_Generics.len() > 0LL)) {
								_1a6896d1c_pushErr(_self_, (*(_14309_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a59d5b2c_FnDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Methods; __jule_push_dest.push(_14309_f); };
						}
					}
					else {
						_case_begin_1aa20c1a6:;
						{
							jule::I64 _14409_i = 0LL;;
							jule::Ptr<_1a59c3e6c_TypeDecl> _14419_ti;
							jule::Bool _144113_ok;
							({
								__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, &(_142155_tokens), (&(_14409_i)), true);
								_14419_ti = __jule_assign_result.__jule_result_arg0;
								_144113_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144113_ok))) {
								goto _match_end_1aa20c89e;
							};
							if ((_14409_i < _142155_tokens.len())) {
								_1a6896d1c_pushErr(_self_, _142155_tokens[_14409_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Inherits; __jule_push_dest.push(_14419_ti); };
						}
					}
					_match_end_1aa20c89e:;
				};
			}
			_iter_next_1aa20b628:;
			++it;
			goto _iter_begin_1aa20b628;
		}
		_iter_end_1aa20b628:;
	};
}



inline jule::Ptr<_1a59e0472_TraitDecl> _1a68a2762_buildTraitDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _145336_tokens) {
	if (((*(_145336_tokens)).len() < 3LL)) {
		_1a6896d1c_pushErr(_self_.ptr(), (*(_145336_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a59e0472_TraitDecl> _14587_t = jule::new_ptr<_1a59e0472_TraitDecl>(_1a59e0472_TraitDecl{._field_Token=(*(_145336_tokens))[1LL], });;
	if (((*((*(_14587_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a6896d1c_pushErr(_self_, (*_14587_t.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Ident=(*(*_14587_t.alloc)._field_Token.alloc)._field_Kind;
	jule::I64 _14667_i = 2LL;;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _14677_bodyTokens = _1a6894a1d_range(&(_14667_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _145336_tokens);;
	if ((_14677_bodyTokens == nullptr)) {
		_1a6896668_stop(_self_);
		_1a6896d1c_pushErr(_self_, (*_14587_t.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14667_i < (*(_145336_tokens)).len())) {
		_1a6896d1c_pushErr(_self_, (*(_145336_tokens))[_14667_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Public=_1a5a8b243_IsPub((*_14587_t.alloc)._field_Ident);
	_1a68a2421_buildTraitBody(_self_, &(_14587_t), _14677_bodyTokens);
	(*_14587_t.alloc)._field_End=(*(_145336_tokens))[(_14667_i - 1LL)];
	return _14587_t;;
}



inline jule::Ptr<_1a59d5b2c_FnDecl> _1a68a2aa3_buildBindFn(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _148332_tokens) {
	(_148332_tokens).mut_slice(1LL);;
	jule::Ptr<_1a59d5b2c_FnDecl> _14857_f = _1a689ceaa_buildFn(_self_, &(_148332_tokens), false, true);;
	if ((_14857_f != nullptr)) {
		(*_14857_f.alloc)._field_Public=false;
		(*_14857_f.alloc)._field_Binded=true;
	};
	return _14857_f;;
}



inline jule::Ptr<_1a59d6cd7_VarDecl> _1a68a2de4_buildBindVar(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _149333_tokens) {
	(_149333_tokens).mut_slice(1LL);;
	jule::Ptr<_1a59d6cd7_VarDecl> _14957_v = _1a6899ade_buildVar(_self_, _149333_tokens);;
	if ((_14957_v != nullptr)) {
		(*_14957_v.alloc)._field_Public=false;
		(*_14957_v.alloc)._field_Binded=true;
		if (((*_14957_v.alloc)._field_Expr != nullptr)) {
			_1a6896d1c_pushErr(_self_, (*_14957_v.alloc)._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _14957_v;;
}



inline jule::Ptr<_1a59dec35_StructDecl> _1a68a3235_buildBindStruct(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _150636_tokens) {
	(_150636_tokens).mut_slice(1LL);;
	jule::Ptr<_1a59dec35_StructDecl> _15087_s = _1a68a1d05_buildStructDecl(_self_, &(_150636_tokens));;
	if ((_15087_s != nullptr)) {
		(*_15087_s.alloc)._field_Public=false;
		{
			auto expr = &((*_15087_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa21e152:;
			if (it != expr_end) {
				jule::Ptr<_1a59de33e_FieldDecl> _151116_f = *it;
				{
					(*(_151116_f))._field_Public=true;
				}
				_iter_next_1aa21e152:;
				++it;
				goto _iter_begin_1aa21e152;
			}
			_iter_end_1aa21e152:;
		};
		(*_15087_s.alloc)._field_Binded=true;
	};
	return _15087_s;;
}



inline jule::Ptr<_1a59da989_TypeAliasDecl> _1a68a3576_buildBindTypeAlias(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _152039_tokens) {
	(_152039_tokens).mut_slice(1LL);;
	jule::Ptr<_1a59da989_TypeAliasDecl> _15227_t = _1a6898c64_buildTypeAliasDecl(_self_, &(_152039_tokens));;
	if ((_15227_t != nullptr)) {
		(*_15227_t.alloc)._field_Public=false;
		(*_15227_t.alloc)._field_Binded=true;
	};
	return _15227_t;;
}



inline jule::Ptr<_1a59dc073_UseDecl> _1a68a38b7_buildBindUse(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _153033_tokens) {
	if ((_153033_tokens.len() == 1LL)) {
		_1a6896d1c_pushErr(_self_.ptr(), _153033_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153033_tokens).mut_slice(1LL);;
	;
	return _1a689e8d5_buildUseDecl(_self_, _153033_tokens, true);;
}



inline jule::Any _1a68a3c08_buildBind(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _154131_tokens) {
	jule::Ptr<_1c80b653c_Token> _15427_token = (*(_154131_tokens))[0LL];;
	if (((*(_154131_tokens)).len() == 1LL)) {
		_1a6896d1c_pushErr(_self_.ptr(), _15427_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_15427_token=(*(_154131_tokens))[1LL];
	{
		auto &_match_expr{ (*(_15427_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aa224e27:;
			{
				return jule::Any(_1a68a2aa3_buildBindFn(_self_, (*(_154131_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1aa224e8d:;
			{
				return jule::Any(_1a68a2de4_buildBindVar(_self_, (*(_154131_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1aa224aa3:;
			{
				return jule::Any(_1a68a3235_buildBindStruct(_self_, (*(_154131_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aa224b2a:;
			{
				return jule::Any(_1a68a3576_buildBindTypeAlias(_self_, (*(_154131_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1aa224542:;
			{
				_1a6896d1c_pushErr(_self_, _15427_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa224a3c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a59d5b2c_FnDecl> _1a68a4049_getMethod(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _156531_tokens) {
	jule::I64 _15667_i = 0LL;;
	jule::Ptr<_1c80b653c_Token> _15677_token = (*(_156531_tokens))[_15667_i];;
	if (((*(_15677_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1a6896d1c_pushErr(_self_.ptr(), _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1a6896d1c_pushErr(_self_, _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1a6896d1c_pushErr(_self_, _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a689ceaa_buildFn(_self_, _156531_tokens, true, false);;
}



inline void _1a68a43ac_parseImplBody(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59e0ad2_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _159452_tokens) {
	jule::Slice<jule::Ptr<_1a68725de_stmt>> _15957_stmts = _1a6872996_splitStmts(_159452_tokens);;
	{
		auto expr = &(_15957_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa22c913:;
		if (it != expr_end) {
			jule::Ptr<_1a68725de_stmt> _159615_stmt = *it;
			{
				(*(_159452_tokens))=(*(_159615_stmt))._field_tokens;
				jule::Ptr<_1c80b653c_Token> _15988_token = (*(_159452_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1aa22ceda:;
						{
							_1a6897aba_pushDirective(_self_.ptr(), _1a6897812_buildDirective(_self_, (*(_159452_tokens))));
							goto _iter_next_1aa22c913;
						}
					}
					_match_end_1aa22db23:;
				};
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1aa22ed44:;
						{
							jule::Ptr<_1a59d6cd7_VarDecl> _16079_v = _1a6899ade_buildVar(_self_, (*(_159452_tokens)));;
							if ((_16079_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1a59d6cd7_VarDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Statics; __jule_push_dest.push(_16079_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1aa22edaa:;
						{
							jule::Ptr<_1a59d5b2c_FnDecl> _16149_f = _1a68a4049_getMethod(_self_, _159452_tokens);;
							if ((_16149_f != nullptr)) {
								_1a68a20ad_checkMethodReceiver(_self_, &(_16149_f));
								_1a68a4ce7_applyFnMeta(_self_, &(_16149_f));
								{ jule::Slice<jule::Ptr<_1a59d5b2c_FnDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Methods; __jule_push_dest.push(_16149_f); };
							};
						}
					}
					else {
						_case_begin_1aa22dc66:;
						{
							_1a6896d1c_pushErr(_self_, _15988_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1aa22c913;
						}
					}
					_match_end_1aa22e22d:;
				};
			}
			_iter_next_1aa22c913:;
			++it;
			goto _iter_begin_1aa22c913;
		}
		_iter_end_1aa22c913:;
	};
}



inline jule::Ptr<_1a59e0ad2_Impl> _1a68a46ed_buildImpl(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _162730_tokens) {
	jule::Ptr<_1c80b653c_Token> _16287_token = _162730_tokens[0LL];;
	if ((_162730_tokens.len() < 2LL)) {
		_1a6896d1c_pushErr(_self_.ptr(), _16287_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _16347_i = 1LL;;
	jule::Ptr<_1a59c3e6c_TypeDecl> _16367_base;
	jule::Bool _163617_ok;
	({
		__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		_16367_base = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1a6896d1c_pushErr(_self_, _16287_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a59e0ad2_Impl> _16457_ipl = jule::new_ptr<_1a59e0ad2_Impl>(_1a59e0ad2_Impl{._field_Base=_16367_base, });;
	_16287_token=_162730_tokens[_16347_i];
	if (((*(_16287_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_16287_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_16457_ipl))._field_Base, (*_16457_ipl.alloc)._field_Dest);
			goto _julec_label_1aa23b9cc;
		};
		_1a6896668_stop(_self_);
		_1a6896d1c_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_16347_i)++;
	if ((_16347_i >= _162730_tokens.len())) {
		_1a6896668_stop(_self_);
		_1a6896d1c_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		(*_16457_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1a6896668_stop(_self_);
		_1a6896d1c_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1aa23b9cc:;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _16837_bodyTokens = _1a6894a1d_range(&(_16347_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_162730_tokens));;
	if ((_16837_bodyTokens == nullptr)) {
		_1a6896668_stop(_self_);
		_1a6896d1c_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16347_i < _162730_tokens.len())) {
		_1a6896d1c_pushErr(_self_, _162730_tokens[_16347_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_16457_ipl.alloc)._field_End=_162730_tokens[(_16347_i - 1LL)];
	_1a68a43ac_parseImplBody(_self_, &(_16457_ipl), &(_16837_bodyTokens));
	return _16457_ipl;;
}



inline jule::Any _1a68a4a3e_buildNodeData(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _169835_tokens) {
	jule::Ptr<_1c80b653c_Token> _16997_token = (*(_169835_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_16997_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aa24187d:;
			{
				jule::Ptr<_1a59d5b2c_FnDecl> _17038_f = _1a689ceaa_buildFn(_self_, _169835_tokens, false, false);;
				if ((_17038_f != nullptr)) {
					(*_17038_f.alloc)._field_Global=true;
				};
				return jule::Any(_17038_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1aa241e77:;
			{
				return jule::Any(_1a6899ade_buildVar(_self_, (*(_169835_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aa241edd:;
			{
				return jule::Any(_1a6898c64_buildTypeAliasDecl(_self_, _169835_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1aa241493:;
			{
				return _1a68a1332_buildNodeEnumDecl(_self_, _169835_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1aa241509:;
			{
				return jule::Any(_1a68a1d05_buildStructDecl(_self_, _169835_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1aa241570:;
			{
				return jule::Any(_1a68a2762_buildTraitDecl(_self_, _169835_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1aa2415d6:;
			{
				return jule::Any(_1a68a46ed_buildImpl(_self_, (*(_169835_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aa24164c:;
			{
				return _1a68a3c08_buildBind(_self_, _169835_tokens);;
			}
		}
		else {
			_case_begin_1aa2411a7:;
			{
				_1a6896d1c_pushErr(_self_.ptr(), _16997_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aa24143d:;
	};
}



inline void _1a68a4ce7_applyFnMeta(_1a689636b_parser* _self_, jule::Ptr<_1a59d5b2c_FnDecl>* _173132_f) {
	(*((*(_173132_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a68a50a0_applyMeta(_1a689636b_parser* _self_, _1a59c2e6b_Node* _173630_node) {
	{
		auto &_match_expr{ (*(_173630_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1aa247e17:;
			{
				jule::Ptr<_1a59d6cd7_VarDecl> _17398_v = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1a59d6cd7_VarDecl>();;
				if ((_17398_v == nullptr)) {
					return;;
				};
				(*(_17398_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1aa247b81:;
			{
				jule::Ptr<_1a59d5b2c_FnDecl> _17468_f = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1a59d5b2c_FnDecl>();;
				if ((_17468_f == nullptr)) {
					return;;
				};
				_1a68a4ce7_applyFnMeta(_self_, &(_17468_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1aa247eb1:;
			{
				jule::Ptr<_1a59dec35_StructDecl> _17528_sd = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1a59dec35_StructDecl>();;
				if ((_17528_sd == nullptr)) {
					return;;
				};
				(*(_17528_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1aa247d90:;
	};
}



inline void _1a68a5358_pushUseDecl(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1a59dc073_UseDecl>* _176133_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_UseDecls,jule::Slice<jule::Ptr<_1a59dc073_UseDecl>>::make({(*(_176133_decl))}));
	if (((*(*_self_.alloc)._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1a6896d1c_pushErr(_self_, (*((*(_176133_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1a6897180_pushSuggestion(_self_, jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a68a5699_pushMetaNodes(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _176935_tokens) {
	{
		auto &_match_expr{ (*((*(_176935_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1aa24e25e:;
			{
				;
				jule::Ptr<_1a59dc073_UseDecl> _17738_decl = _1a689e8d5_buildUseDecl(_self_.ptr(), (*(_176935_tokens)), false);;
				_1a68a5358_pushUseDecl(_self_, &(_17738_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aa24e2d6:;
			{
				if ((((*(_176935_tokens)).len() > 1LL) && ((*((*(_176935_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1a59dc073_UseDecl> _17789_decl = _1a68a38b7_buildBindUse(_self_, (*(_176935_tokens)));;
					_1a68a5358_pushUseDecl(_self_, &(_17789_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1aa24e34c:;
			{
				_1a6897aba_pushDirective(_self_.ptr(), _1a6897812_buildDirective(_self_, (*(_176935_tokens))));
				return true;;
			}
		}
		_match_end_1aa24e160:;
	};
	return false;;
}



inline _1a59c2e6b_Node _1a68a59da_parseNode(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _178931_st) {
	_1a59c2e6b_Node _17907_node = _1a59c2e6b_Node{._field_Token=(*(_178931_st))[0LL], };;
	if (_1a68a5699_pushMetaNodes(_self_, _178931_st)) {
		return _17907_node;;
	};
	jule::Any _17987_data = _1a68a4a3e_buildNodeData(_self_, _178931_st);;
	if ((_17987_data == nullptr)) {
		return _17907_node;;
	};
	_17907_node._field_Data=_17987_data;
	_1a68a50a0_applyMeta(_self_, &(_17907_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a6896d1c_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _17907_node;;
}



inline void _1a68a5c93_appendNode(jule::Ptr<_1a689636b_parser> _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _181332_st) {
	if (((*(_181332_st)).len() == 0LL)) {
		return;;
	};
	_1a59c2e6b_Node _18177_node = _1a68a59da_parseNode(_self_, _181332_st);;
	if (((_18177_node._field_Data != nullptr) && (!(_1a68968ee_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_Nodes,jule::Slice<_1a59c2e6b_Node>::make({_18177_node}));
	};
}



inline void _1a68a626b_removeRange(_1a689636b_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges) {
	jule::U64 _18243_close = _1a6895524_getCloseOfBrace(_182335_id);;
	for (; (_182327_i >= 0LL); (_182327_i)--) {
		{
			jule::Ptr<_1c80b653c_Token> _18264_tok = (*(_182349_tokens))[(*(_182372_ranges))[_182327_i]];;
			if (((*(_18264_tok))._field_Id != _18243_close)) {
				goto _iter_next_1aa2594ab;
			};
			(*(_182372_ranges))=jule::append((*(_182372_ranges)).slice(0LL, _182327_i),(*(_182372_ranges)).slice((_182327_i + 1LL)));
			goto _iter_end_1aa2594ab;
		}
	_iter_next_1aa2594ab:;
	}
	_iter_end_1aa2594ab:;;
}



inline void _1a68a6689_pushWrongOrderCloseErr(_1a689636b_parser* _self_, jule::Ptr<_1c80b653c_Token>* _183539_t, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges) {
	{
		auto &_match_expr{ (*((*(_183551_tokens))[(*(_183570_ranges))[((*(_183570_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1aa25b7bb:;
			{
				_1a6896d1c_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1aa25b843:;
			{
				_1a6896d1c_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1aa25b8a9:;
			{
				_1a6896d1c_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa25b6bc:;
	};
}



inline void _1a68a6b62_pushRangeClose(_1a689636b_parser* _self_, jule::Ptr<_1c80b653c_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges) {
	jule::I64 _18473_n = (*(_184680_ranges)).len();;
	if ((_18473_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184630_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1aa25e48e:;
				{
					_1a6896d1c_pushErr(_self_, _184630_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1aa25e516:;
				{
					_1a6896d1c_pushErr(_self_, _184630_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1aa25e57c:;
				{
					_1a6896d1c_pushErr(_self_, _184630_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1aa25e3d4:;
		};
		return;;
	} else if (((*((*(_184657_tokens))[(*(_184680_ranges))[(_18473_n - 1LL)]]))._field_Id != _184641_left)) {
		_1a68a6689_pushWrongOrderCloseErr(_self_, &(_184630_t), _184657_tokens, _184680_ranges);
	};
	_1a68a626b_removeRange(_self_, (_18473_n - 1LL), (*(_184630_t))._field_Id, _184657_tokens, _184680_ranges);
}



inline void _1a68a6e1a_checkRanges(_1a689636b_parser* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _186428_tokens) {
	jule::Slice<jule::I64> _186511_ranges = nullptr;;
	{
		auto expr = _186428_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2616c2:;
		if (it != expr_end) {
			jule::I64 _18677_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> *_186710_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186710_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1aa26340a:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _186511_ranges; __jule_push_dest.push(_18677_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aa263493:;
						{
							_1a68a6b62_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(74LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1aa263509:;
						{
							_1a68a6b62_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(72LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1aa263570:;
						{
							_1a68a6b62_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(76LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					_match_end_1aa263350:;
				};
			}
			_iter_next_1aa2616c2:;
			++it;
			_18677_i++;
			goto _iter_begin_1aa2616c2;
		}
		_iter_end_1aa2616c2:;
	};
	{
		auto expr = &(_186511_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa26264b:;
		if (it != expr_end) {
			jule::I64 _188210_i = *it;
			{
				jule::Ptr<_1c80b653c_Token> _18834_token = (*(_186428_tokens))[_188210_i];;
				{
					auto &_match_expr{ (*(_18834_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa2663db:;
						{
							_1a6896d1c_pushErr(_self_, _18834_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1aa266452:;
						{
							_1a6896d1c_pushErr(_self_, _18834_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1aa2664b8:;
						{
							_1a6896d1c_pushErr(_self_, _18834_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1aa266386:;
				};
			}
			_iter_next_1aa26264b:;
			++it;
			goto _iter_begin_1aa26264b;
		}
		_iter_end_1aa26264b:;
	};
}



inline void _1a68a71c3_parse(jule::Ptr<_1a689636b_parser> _self_, jule::Ptr<_1c80bbcc3_File>* _189527_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1a59c2058_Ast>(_1a59c2058_Ast{._field_File=(*(_189527_f)), });
	(*_self_.alloc)._field_ep=jule::new_ptr<_1a68808a5_exprBuilder>(_1a68808a5_exprBuilder{._field_p=_self_});
	_1a68a6e1a_checkRanges(_self_, &((*((*(_189527_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a68725de_stmt>> _19087_stmts = _1a6872996_splitStmts(&((*((*(_189527_f))))._field_Tokens));;
	jule::I64 _19117_i = 0LL;;
	for (; (_19117_i < _19087_stmts.len()); (_19117_i)++) {
		{
			jule::Ptr<_1a68725de_stmt> _19138_stmt = _19087_stmts[_19117_i];;
			if (((*(_19138_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_19138_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1aa26ea76;
			};
			if ((!(_1d1c703a7_IsTopDirective((*((*_19138_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1aa26ea76;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_TopDirectives,jule::Slice<jule::Ptr<_1a59c3389_Directive>>::make({_1a6897812_buildDirective(_self_, (*_19138_stmt.alloc)._field_tokens)}));
		}
	_iter_next_1aa26ea76:;
	}
	_iter_end_1aa26ea76:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_19117_i < _19087_stmts.len()) && (!(_1a68968ee_stopped(_self_)))); (_19117_i)++) {
		{
			_1a68a5c93_appendNode(_self_, &((*(_19087_stmts[_19117_i]))._field_tokens));
		}
	_iter_next_1aa272ddc:;
	}
	_iter_end_1aa272ddc:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1a6896d1c_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a689636b_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1a68a8a32_pushErr(_1a68a848d_typeBuilder* _self_, jule::Ptr<_1c80b653c_Token> _4123_token, jule::Str _4138_fmt) {
	if ((*(_self_))._field_err) {
		_1a6896d1c_pushErr((*(_self_))._field_p.ptr(), _4123_token, _4138_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a68a8d95_pushSuggestion(_1a68a848d_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args) {
	if ((*(_self_))._field_err) {
		_1a6897180_pushSuggestion((*(_self_))._field_p.ptr(), _4830_fmt, _4843_args);
	};
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68a912b_buildNamespace(_1a68a848d_typeBuilder* _self_) {
	jule::Ptr<_1a59c3e6c_TypeDecl> _557_t = jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1a59c4c1a_NamespaceTypeDecl> _597_nst = jule::new_ptr<_1a59c4c1a_NamespaceTypeDecl>();;
	jule::I64 _607_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c80b653c_Token> _628_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_607_n & 1LL) == 0LL)) {
				if (((*(_628_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1a68a8a32_pushErr(_self_, _628_token, jule::Str::lit("invalid syntax", 14));
					_1a68a8d95_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				(*_597_nst.alloc)._field_Idents=jule::append((*_597_nst.alloc)._field_Idents,jule::Slice<jule::Ptr<_1c80b653c_Token>>::make({_628_token}));
			} else if (((*(_628_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1aa278651;
			};
			(_607_n)++;
		}
	_iter_next_1aa278651:;
	}
	_iter_end_1aa278651:;;
	((*(_597_nst))._field_Idents).mut_slice(0LL, ((*(_597_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_597_nst.alloc)._field_Kind=_1a68a98ce_buildIdent(_self_);
	(*(_557_t))._field_Kind=jule::Any(_597_nst, &__jule_any_type91);
	return _557_t;;
}



inline jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> _1a68a93b2_buildGenerics(_1a68a848d_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c80b653c_Token> _883_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_883_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _937_parts = _1a68a9648_identGenerics(_self_);;
	if ((_937_parts.len() == 0LL)) {
		_1a68a8a32_pushErr(_self_, _883_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> _997_types = jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>::alloc(0LL, _937_parts.len());;
	{
		auto expr = &(_937_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa28079b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _10015_part = *it;
			{
				jule::I64 _1018_j = 0LL;;
				jule::Ptr<_1a59c3e6c_TypeDecl> _1028_t;
				({
					__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType((*(_self_))._field_p, &(_10015_part), (&(_1018_j)), true);
					_1028_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_1018_j < _10015_part.len())) {
					_1a68a8a32_pushErr(_self_, _10015_part[_1018_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>> &__jule_push_dest = _997_types; __jule_push_dest.push(_1028_t); };
			}
			_iter_next_1aa28079b:;
			++it;
			goto _iter_begin_1aa28079b;
		}
		_iter_end_1aa28079b:;
	};
	return _997_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1a68a9648_identGenerics(_1a68a848d_typeBuilder* _self_) {
	jule::I64 _1123_first = (*((*(_self_))._field_i));;
	jule::I64 _1137_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c80b653c_Token> _1154_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1154_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1aa2845e6:;
					{
						(_1137_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1aa284904:;
					{
						(_1137_rangeN)--;
					}
				}
				_match_end_1aa28489e:;
			};
			if ((_1137_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1aa28378d;
			};
		}
	_iter_next_1aa28378d:;
	}
	_iter_end_1aa28378d:;;
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _1277_tokens = (*(_self_))._field_tokens.slice((_1123_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1287_parts;
	jule::Slice<_1d1c6d64c_Log> _12814_errors;
	({
		__jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a689528d_parts(&(_1277_tokens), static_cast<jule::U64>(5LLU), true);
		_1287_parts = __jule_assign_result.__jule_result_arg0;
		_12814_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12814_errors);
	};
	return _1287_parts;;
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68a98ce_buildIdent(_1a68a848d_typeBuilder* _self_) {
	jule::Bool _1367_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1367_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1a68a912b_buildNamespace(_self_);;
	};
	jule::Ptr<_1c80b653c_Token> _1407_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a59c4577_IdentTypeDecl> _1417_it = jule::new_ptr<_1a59c4577_IdentTypeDecl>(_1a59c4577_IdentTypeDecl{._field_Token=_1407_token, ._field_Ident=(*(_1407_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a59c3e6c_TypeDecl> _1477_itd = jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1417_it, &__jule_any_type74)});;
	if (((!(_1367_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1417_it))._field_Generics=_1a68a93b2_buildGenerics(_self_);
		return _1477_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a68a8a32_pushErr(_self_, _1407_token, jule::Str::lit("invalid syntax", 14));
		return _1477_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a68a8a32_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _1477_itd;;
	};
	jule::Ptr<_1a59c4841_SubIdentTypeDecl> _1647_sit = jule::new_ptr<_1a59c4841_SubIdentTypeDecl>();;
	(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a59c4577_IdentTypeDecl>>::make({_1417_it}));
	jule::Ptr<_1a59c3e6c_TypeDecl> _1667_ident = _1a68a98ce_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1667_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1aa2904ae:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1a59c4577_IdentTypeDecl>>::make({(*(_1667_ident))._field_Kind.unsafe_cast_ptr<_1a59c4577_IdentTypeDecl>()}));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1aa289ac4:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,(*((*(_1667_ident))._field_Kind.unsafe_cast_ptr<_1a59c4841_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1aa28d1d2:;
	};
	return jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1647_sit, &__jule_any_type87)});;
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68a9b65_buildCppLink(_1a68a848d_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1a68a8a32_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1a59c3e6c_TypeDecl> _1857_t = _1a68a98ce_buildIdent(_self_);;
	(*((*(_1857_t))._field_Kind.cast_ptr<_1a59c4577_IdentTypeDecl>(&__jule_any_type74)))._field_Binded=true;
	return _1857_t;;
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68a9deb_buildFn(_1a68a848d_typeBuilder* _self_) {
	jule::Ptr<_1c80b653c_Token> _1917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a59d5b2c_FnDecl> _1927_f = _1a689ca04_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1927_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a59d5e90_IsAnon(_1927_f.ptr())))) {
		_1a68a8a32_pushErr(_self_, (*(_1927_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=_1917_token, ._field_Kind=jule::Any(_1927_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68aa182_buildPtr(_1a68a848d_typeBuilder* _self_) {
	jule::Ptr<_1c80b653c_Token> _2067_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a68a8a32_pushErr(_self_, _2067_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1a59c5996_PtrTypeDecl>(_1a59c5996_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type70)});;
	};
	jule::Ptr<_1a59c3e6c_TypeDecl> _2237_elem = _1a68ab1d8_step(_self_);;
	if ((_2237_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1a59c5996_PtrTypeDecl>(_1a59c5996_PtrTypeDecl{._field_Elem=_2237_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68aa418_buildSptr(_1a68a848d_typeBuilder* _self_) {
	jule::Ptr<_1c80b653c_Token> _2377_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a68a8a32_pushErr(_self_, _2377_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a59c3e6c_TypeDecl> _2447_elem = _1a68ab1d8_step(_self_);;
	if ((_2447_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=_2377_token, ._field_Kind=jule::Any(jule::new_ptr<_1a59c5017_SptrTypeDecl>(_1a59c5017_SptrTypeDecl{._field_Elem=_2447_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68aa69e_buildSlc(_1a68a848d_typeBuilder* _self_) {
	jule::Ptr<_1c80b653c_Token> _2587_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a59c3e6c_TypeDecl> _2607_elem = _1a68ab1d8_step(_self_);;
	if ((_2607_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=_2587_token, ._field_Kind=jule::Any(jule::new_ptr<_1a59c539c_SlcTypeDecl>(_1a59c539c_SlcTypeDecl{._field_Elem=_2607_elem}), &__jule_any_type69)});;
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68aa935_buildArr(_1a68a848d_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _2737_exprTokens = _1a6894a1d_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a68a8a32_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a59c3e6c_TypeDecl> _2797_elem = _1a68ab1d8_step(_self_);;
	if ((_2797_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a59c6238_ArrTypeDecl> _2847_arrt = jule::new_ptr<_1a59c6238_ArrTypeDecl>(_1a59c6238_ArrTypeDecl{._field_Elem=_2797_elem, });;
	jule::Ptr<_1c80b653c_Token> _2887_token = _2737_exprTokens[0LL];;
	if (((_2737_exprTokens.len() == 1LL) && ((*(_2887_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2847_arrt))._field_Size=_1a68974c1_buildExpr((*(_self_))._field_p, &(_2737_exprTokens));
	};
	return jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=_2887_token, ._field_Kind=jule::Any(_2847_arrt, &__jule_any_type68)});;
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68aabbb_buildMap(_1a68a848d_typeBuilder* _self_) {
	jule::Ptr<_1c80b653c_Token> _3027_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a68a8a32_pushErr(_self_, _3027_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _3107_keyTokens = _1a6894a1d_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a68a8a32_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_3107_keyTokens.len() == 0LL)) {
		_1a68a8a32_pushErr(_self_, _3027_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a59c6986_MapTypeDecl> _3197_mapt = jule::new_ptr<_1a59c6986_MapTypeDecl>();;
	jule::I64 _3207_j = 0LL;;
	jule::Ptr<_1a59c3e6c_TypeDecl> _3217_keyt;
	jule::Bool _32117_ok;
	({
		__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType((*(_self_))._field_p, &(_3107_keyTokens), (&(_3207_j)), (*(_self_))._field_err);
		_3217_keyt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	} else if ((_3207_j < _3107_keyTokens.len())) {
		_1a68a8a32_pushErr(_self_, _3107_keyTokens[_3207_j], jule::Str::lit("invalid syntax", 14));
	};
	(*_3197_mapt.alloc)._field_Key=_3217_keyt;
	jule::Ptr<_1a59c3e6c_TypeDecl> _3297_valt;
	({
		__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_assign_result = _1a6898923_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3297_valt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	};
	(*_3197_mapt.alloc)._field_Val=_3297_valt;
	return jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Token=_3027_mapToken, ._field_Kind=jule::Any(_3197_mapt, &__jule_any_type72)});;
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68aae52_buildEnumerable(_1a68a848d_typeBuilder* _self_) {
	jule::Ptr<_1c80b653c_Token> _3417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1a68a8a32_pushErr(_self_, _3417_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3417_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3417_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1a68aa69e_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a68aa935_buildArr(_self_);;
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68ab1d8_step(_1a68a848d_typeBuilder* _self_) {
	jule::Ptr<_1c80b653c_Token> _3563_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3563_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aa2b0479:;
			{
				return _1a68a98ce_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aa2b08ca:;
			{
				return _1a68a9b65_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aa2b09eb:;
			{
				return _1a68a9deb_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa2b016b:;
			{
				return _1a68aa182_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa2b01d2:;
			{
				return _1a68aa418_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1aa2b0248:;
			{
				return jule::new_ptr<_1a59c3e6c_TypeDecl>(_1a59c3e6c_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a59c5017_SptrTypeDecl>(_1a59c5017_SptrTypeDecl{._field_Elem=_1a68aa418_buildSptr(_self_)}), &__jule_any_type71)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1aa2b02ae:;
			{
				return _1a68aae52_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1aa2b0336:;
			{
				return _1a68aabbb_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1aa2aed4c:;
			{
				((*((*(_self_))._field_i)))++;
				_1a68a8a32_pushErr(_self_, _3563_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1aa2b0116:;
	};
}



inline __jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool _1a68ab46e_build(_1a68a848d_typeBuilder* _self_) {
	__jule_tuple_x_1a59c3e6c_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a59c3e6c_TypeDecl> _3887_root = _1a68ab1d8_step(_self_);;
	if ((_3887_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a68a7bc9_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3887_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68a848d_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5d6146e_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1a5d62e98_pushErr(_1a5d62948_directiveEval* _self_, jule::Ptr<_1c80b653c_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args) {
	{ jule::Slice<_1d1c6d64c_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1d1c6d64c_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1d1c6daae_Logf(_2134_fmt, _2147_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1a5d63394_splitOperans(_1a5d62948_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _3346_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _347_parts = jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3346_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1c80b653c_Token> _394_b = (*(_3346_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aa2d5438:;
					{
						(_367_rangeN)++;
						goto _iter_next_1aa2d49a9;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aa2d5746:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1aa2d56e1:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1aa2d49a9;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1aa2d49a9:;
	}
	_iter_end_1aa2d49a9:;;
	if ((_377_last < (*(_3346_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last)); };
	} else {
		_1a5d62e98_pushErr(_self_, (*(_3346_tokens))[(_377_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1a5d636d5_evalDirectiveIdent(_1a5d62948_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2d85e5:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1aa2d85e5:;
			++it;
			goto _iter_begin_1aa2d85e5;
		}
		_iter_end_1aa2d85e5:;
	};
	return false;;
}



inline jule::Bool _1a5d63a26_evalDirectivePart(_1a5d62948_directiveEval* _self_, jule::Slice<jule::Ptr<_1c80b653c_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1a5d62e98_pushErr(_self_, _7837_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1a5d636d5_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1a5d63cac_eval(_1a5d62948_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1a5d62e98_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1047_logicalOrParts = _1a5d63394_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2dda29:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> _1118_logicalAndParts = _1a5d63394_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa2e0201:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1c80b653c_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1c80b653c_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1c80b653c_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1a5d62e98_pushErr(_self_, _1175_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1a5d63a26_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1aa2e0201:;
						++it;
						goto _iter_begin_1aa2e0201;
					}
					_iter_end_1aa2e0201:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1aa2dda29:;
			++it;
			goto _iter_begin_1aa2dda29;
		}
		_iter_end_1aa2dda29:;
	};
	return _1027_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a5d62948_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a68ac5c4_JuleImporter> static__1a68ac9c0_New(_1a5d6146e_CompileInfo _5816_info) {
	jule::Ptr<_1a68ac5c4_JuleImporter> _597_imp = jule::new_ptr<_1a68ac5c4_JuleImporter>(_1a68ac5c4_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1d1d32dd7_PathStdlib}), });;
	_1a5d61cee_initVars(&((*(_597_imp))._field_vars), &(_5816_info));
	return _597_imp;;
}



inline jule::Slice<jule::Ptr<_1a5a6dcd6_ImportInfo>> _1a68acc56_AllPackages(_1a68ac5c4_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a68ad196_SetModPath(_1a68ac5c4_JuleImporter* _self_, jule::Str _7526_path) {
	(*(_self_))._field_mod=_7526_path;
}



inline jule::Str _1a68ad42c_GetModPath(_1a68ac5c4_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a68ad76d_ModById(_1a68ac5c4_JuleImporter* _self_, jule::I64 _8319_id) {
	return (*(_self_))._field_mods[_8319_id];;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a68adaae_GetImport(_1a68ac5c4_JuleImporter* _self_, jule::Str _8725_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2e6856:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _8815_p = *it;
			{
				if (((*(_8815_p))._field_Path == _8725_path)) {
					return _8815_p;;
				};
			}
			_iter_next_1aa2e6856:;
			++it;
			goto _iter_begin_1aa2e6856;
		}
		_iter_end_1aa2e6856:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log _1a68adeaa_ImportPackage(_1a68ac5c4_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_update_mod) {
	__jule_tuple_sx_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log __jule_func_result;
	jule::Slice<jule::Ptr<_21467189c_DirEntry>> _977_dirents = ({
		auto except = static__1d190e750_Read(_9629_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1d1c6d64c_Log>::make({_1a68ac0da_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9629_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_21467189c_DirEntry>>(nullptr);});
	});;
	if (_9640_update_mod) {
		jule::Str _1024_newMod = _1a5a8a62c_FindModuleFileDeep(_9629_path);;
		if ((_1024_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_1024_newMod;
			jule::Slice<_1d1c6d64c_Log> _1059_errs = _1a5a8a8e6_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_1059_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _1059_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1a59c2058_Ast>> _1127_asts = jule::Slice<jule::Ptr<_1a59c2058_Ast>>::alloc(0LL, _977_dirents.len());;
	{
		auto expr = &(_977_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2e7ea6:;
		if (it != expr_end) {
			jule::Ptr<_21467189c_DirEntry> _11310_dirent = *it;
			{
				if ((_214675340_IsDir((*(_11310_dirent))._field_Stat.ptr()) || (!(_1d1903249_HasSuffix((*_11310_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1aa2e7ea6;
				};
				jule::Str _1194__path = _1d190d166_Join(jule::Slice<jule::Str>::make({_9629_path,(*_11310_dirent.alloc)._field_Name}));;
				jule::Ptr<_1c80bbcc3_File> _1208_file = _1c80bd19d_NewFileSet(_1194__path);;
				_1c80bc1e1_Fill(_1208_file.ptr(), _1a68abccc_readBuff((*_1208_file.alloc)._field_Path));
				jule::Slice<_1d1c6d64c_Log> _1228_errors = _1a59c1b07_Lex(_1208_file, static_cast<jule::I64>(0LL));;
				if ((_1228_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1228_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a682b884_FileInfo> _1278_finfo = _1a6870334_ParseFile(_1208_file);;
				if (((*(_1278_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1278_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1a5d45e04_isPassFileAnnotation((*_11310_dirent.alloc)._field_Name)))) {
					goto _iter_next_1aa2e7ea6;
				};
				jule::Bool _1374_r;
				jule::Slice<_1d1c6d64c_Log> _13711_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a68ae692_isPassBuildDirectives(_self_, &((*_1278_finfo.alloc)._field_Ast));
					_1374_r = __jule_assign_result.__jule_result_arg0;
					_13711_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13711_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13711_logs;
					return __jule_func_result;;
				};
				if ((!(_1374_r))) {
					goto _iter_next_1aa2e7ea6;
				};
				{ jule::Slice<jule::Ptr<_1a59c2058_Ast>> &__jule_push_dest = _1127_asts; __jule_push_dest.push((*_1278_finfo.alloc)._field_Ast); };
			}
			_iter_next_1aa2e7ea6:;
			++it;
			goto _iter_begin_1aa2e7ea6;
		}
		_iter_end_1aa2e7ea6:;
	};
	__jule_func_result.__jule_result_arg0 = _1127_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a68ae263_Imported(_1a68ac5c4_JuleImporter* _self_, jule::Ptr<_1a5a6dcd6_ImportInfo> _15328_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa2eab35:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _15510_p = *it;
			{
				if ((((*(_15510_p))._field_Binded == (*(_15328_imp))._field_Binded) && ((*_15510_p.alloc)._field_LinkPath == (*_15328_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1aa2eab35:;
			++it;
			goto _iter_begin_1aa2eab35;
		}
		_iter_end_1aa2eab35:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa30318c:;
			if (it != expr_end) {
				jule::I64 _1628_i = it - expr->begin();
				jule::Str _16211_mod = *it;
				{
					if (((*(_self_))._field_mod == _16211_mod)) {
						(*_15328_imp.alloc)._field_ModId=_1628_i;
						goto _julec_label_1aa30380d;
					};
				}
				_iter_next_1aa30318c:;
				++it;
				_1628_i++;
				goto _iter_begin_1aa30318c;
			}
			_iter_end_1aa30318c:;
		};
		(*_15328_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1aa30380d:;
	};
	{ jule::Slice<jule::Ptr<_1a5a6dcd6_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15328_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1d1c6d64c_Log _1a68ae692_isPassBuildDirectives(_1a68ac5c4_JuleImporter* _self_, jule::Ptr<_1a59c2058_Ast>* _17942_file) {
	__jule_tuple_bool__jule_tuple_s_1d1c6d64c_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17942_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa30624a:;
		if (it != expr_end) {
			jule::Ptr<_1a59c3389_Directive> _18015_td = *it;
			{
				if ((!(*((*(_18015_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1aa30624a;
				};
				_1a5d62948_directiveEval _1848_de = _1a5d62948_directiveEval{._field_d=_18015_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1884_result = _1a5d63cac_eval(&_1848_de);;
				if ((_1848_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1848_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1884_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1aa30624a:;
			++it;
			goto _iter_begin_1aa30624a;
		}
		_iter_end_1aa30624a:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68ac5c4_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a68b3d17_ExprInspector> static__1a68b417a_New(void) {
	return jule::new_ptr<_1a68b3d17_ExprInspector>();;
}



inline void _1a68b4433_args(_1a68b3d17_ExprInspector* _self_, jule::Slice<jule::Any> _5724_args) {
	{
		auto expr = &(_5724_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa345300:;
		if (it != expr_end) {
			jule::Any _5815_arg = *it;
			{
				_1a68b46db_inspect(_self_, _5815_arg);
			}
			_iter_next_1aa345300:;
			++it;
			goto _iter_begin_1aa345300;
		}
		_iter_end_1aa345300:;
	};
}



inline void _1a68b46db_inspect(_1a68b3d17_ExprInspector* _self_, jule::Any _6327_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(&(_6327_m));
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ _6327_m };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1aa3466db:;
			{
				jule::Ptr<_1a59ebe84_BinaryExprModel> _718_b = _6327_m.unsafe_cast_ptr<_1a59ebe84_BinaryExprModel>();;
				_1a68b46db_inspect(_self_, (*((*(_718_b))._field_Left))._field_Model);
				_1a68b46db_inspect(_self_, (*((*_718_b.alloc)._field_Right))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa346840:;
			{
				_1a68b46db_inspect(_self_, (*((*(_6327_m.unsafe_cast_ptr<_1a59ec35d_UnaryExprModel>()))._field_Expr))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1aa346752:;
			{
				{
					auto expr = &((*(_6327_m.unsafe_cast_ptr<_1a59ecc32_StructLitExprModel>()))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa34a569:;
					if (it != expr_end) {
						jule::Ptr<_1a59ec88b_StructArgExprModel> _7716_arg = *it;
						{
							_1a68b46db_inspect(_self_, (*((*(_7716_arg))._field_Expr))._field_Model);
						}
						_iter_next_1aa34a569:;
						++it;
						goto _iter_begin_1aa34a569;
					}
					_iter_end_1aa34a569:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1aa346b2b:;
			{
				_1a68b46db_inspect(_self_, jule::Any((*(_6327_m.unsafe_cast_ptr<_1a59ed02e_AllocStructLitExprModel>()))._field_Lit, &__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1aa346b92:;
			{
				_1a68b46db_inspect(_self_, (*((*(_6327_m.unsafe_cast_ptr<_1a59ed5b2_CastingExprModel>()))._field_Expr))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa346c08:;
			{
				jule::Ptr<_1a59ede64_FnCallExprModel> _858_fc = _6327_m.unsafe_cast_ptr<_1a59ede64_FnCallExprModel>();;
				_1a68b46db_inspect(_self_, (*(_858_fc))._field_Expr);
				_1a68b4433_args(_self_, (*_858_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1aa346c80:;
			{
				_1a68b4433_args(_self_, (*(_6327_m.unsafe_cast_ptr<_1a59ee33d_SliceExprModel>()))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1aa346d07:;
			{
				_1a68b4433_args(_self_, (*(_6327_m.unsafe_cast_ptr<_1a5a02352_ArrayExprModel>()))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1aa346d7e:;
			{
				jule::Ptr<_1a59ee7e4_IndexingExprModel> _938_i = _6327_m.unsafe_cast_ptr<_1a59ee7e4_IndexingExprModel>();;
				_1a68b46db_inspect(_self_, (*((*(_938_i))._field_Expr))._field_Model);
				_1a68b46db_inspect(_self_, (*((*_938_i.alloc)._field_Index))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1aa346e06:;
			{
				{
					auto expr = &((*(_6327_m.unsafe_cast_ptr<_1a5a0062a_MapExprModel>()))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa35164c:;
					if (it != expr_end) {
						jule::Ptr<_1a5a00174_KeyValPairExprModel> _9716_pair = *it;
						{
							_1a68b46db_inspect(_self_, (*(_9716_pair))._field_Key);
							_1a68b46db_inspect(_self_, (*_9716_pair.alloc)._field_Val);
						}
						_iter_next_1aa35164c:;
						++it;
						goto _iter_begin_1aa35164c;
					}
					_iter_end_1aa35164c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1aa346e7d:;
			{
				jule::Ptr<_1a5a00bad_SlicingExprModel> _1028_s = _6327_m.unsafe_cast_ptr<_1a5a00bad_SlicingExprModel>();;
				_1a68b46db_inspect(_self_, (*(_1028_s))._field_Expr);
				_1a68b46db_inspect(_self_, (*_1028_s.alloc)._field_Left);
				if (((*_1028_s.alloc)._field_Right != nullptr)) {
					_1a68b46db_inspect(_self_, (*_1028_s.alloc)._field_Right);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aa347005:;
			{
				_1a68b46db_inspect(_self_, (*(_6327_m.unsafe_cast_ptr<_1a5a01241_TraitSubIdentExprModel>()))._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa34707c:;
			{
				_1a68b46db_inspect(_self_, (*((*(_6327_m.unsafe_cast_ptr<_1a5a01ad2_StructSubIdentExprModel>()))._field_Expr))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa347104:;
			{
				{
					auto expr = &((*(_6327_m.unsafe_cast_ptr<_1a5a0264e_TupleExprModel>()))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa35593c:;
					if (it != expr_end) {
						jule::Ptr<_1a5b19aeb_Data> _11316_d = *it;
						{
							_1a68b46db_inspect(_self_, (*(_11316_d))._field_Model);
						}
						_iter_next_1aa35593c:;
						++it;
						goto _iter_begin_1aa35593c;
					}
					_iter_end_1aa35593c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1aa34717b:;
			{
				jule::Ptr<_1a5a032cb_BuiltinNewCallExprModel> _1178_b = _6327_m.unsafe_cast_ptr<_1a5a032cb_BuiltinNewCallExprModel>();;
				if (((*(_1178_b))._field_Init != nullptr)) {
					_1a68b46db_inspect(_self_, (*_1178_b.alloc)._field_Init);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1aa347203:;
			{
				_1a68b46db_inspect(_self_, (*(_6327_m.unsafe_cast_ptr<_1a5a02a28_BuiltinOutCallExprModel>()))._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1aa34727a:;
			{
				_1a68b46db_inspect(_self_, (*(_6327_m.unsafe_cast_ptr<_1a5a02e02_BuiltinOutlnCallExprModel>()))._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1aa347302:;
			{
				_1a68b46db_inspect(_self_, (*(_6327_m.unsafe_cast_ptr<_1a5a036a5_BuiltinPanicCallExprModel>()))._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1aa347379:;
			{
				_1a68b46db_inspect(_self_, (*(_6327_m.unsafe_cast_ptr<_1a5a03b5b_BuiltinAssertCallExprModel>()))._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1aa347401:;
			{
				_1a68b46db_inspect(_self_, (*((*(_6327_m.unsafe_cast_ptr<_1a5a05762_BuiltinErrorCallExprModel>()))._field_Err))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1aa347478:;
			{
				jule::Ptr<_1a5a04112_BuiltinMakeCallExprModel> _1328_b = _6327_m.unsafe_cast_ptr<_1a5a04112_BuiltinMakeCallExprModel>();;
				if (((*(_1328_b))._field_Len != nullptr)) {
					_1a68b46db_inspect(_self_, (*_1328_b.alloc)._field_Len);
				};
				if (((*_1328_b.alloc)._field_Cap != nullptr)) {
					_1a68b46db_inspect(_self_, (*_1328_b.alloc)._field_Cap);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1aa347500:;
			{
				jule::Ptr<_1a5a044db_BuiltinAppendCallExprModel> _1408_b = _6327_m.unsafe_cast_ptr<_1a5a044db_BuiltinAppendCallExprModel>();;
				_1a68b46db_inspect(_self_, (*(_1408_b))._field_Dest);
				_1a68b46db_inspect(_self_, (*_1408_b.alloc)._field_Elements);
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1aa347577:;
			{
				_1a68b46db_inspect(_self_, (*((*(_6327_m.unsafe_cast_ptr<_1a5a047d8_BuiltinLenCallExprModel>()))._field_Expr))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1aa3475ee:;
			{
				_1a68b46db_inspect(_self_, (*((*(_6327_m.unsafe_cast_ptr<_1a5a04ad5_BuiltinCapCallExprModel>()))._field_Expr))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1aa347676:;
			{
				jule::Ptr<_1a5a04eae_BuiltinDeleteCallExprModel> _1488_b = _6327_m.unsafe_cast_ptr<_1a5a04eae_BuiltinDeleteCallExprModel>();;
				_1a68b46db_inspect(_self_, (*((*(_1488_b))._field_Dest))._field_Model);
				if (((*_1488_b.alloc)._field_Key != nullptr)) {
					_1a68b46db_inspect(_self_, (*(*_1488_b.alloc)._field_Key.alloc)._field_Model);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1aa3476ed:;
			{
				_1a68b46db_inspect(_self_, (*(_6327_m.unsafe_cast_ptr<_1a5a05e16_SizeofExprModel>()))._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1aa347775:;
			{
				_1a68b46db_inspect(_self_, (*(_6327_m.unsafe_cast_ptr<_1a5a06103_AlignofExprModel>()))._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1aa3477ec:;
			{
				_1a68b46db_inspect(_self_, (*(_6327_m.unsafe_cast_ptr<_1a5a06697_IntegratedToStrExprModel>()))._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1aa347874:;
			{
				_1a68b46db_inspect(_self_, (*(_6327_m.unsafe_cast_ptr<_1a5a06d6d_FreeExprModel>()))._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aa3478eb:;
			{
				_1a68b4433_args(_self_, (*(_6327_m.unsafe_cast_ptr<_1a5a06a71_BackendEmitExprModel>()))._field_Exprs);
			}
		}
		_match_end_1aa346686:;
	};
}



inline void _1a68b4a4e_Inspect(_1a68b3d17_ExprInspector* _self_, jule::Any _16827_m, jule::Fn<void,jule::Any*> _16841_f) {
	(*(_self_))._field_handler=_16841_f;
	_1a68b46db_inspect(_self_, _16827_m);
}





std::ostream &operator<<(std::ostream &_Stream, _1a68b3d17_ExprInspector _Src) {
	_Stream << "ExprInspector{";
	_Stream << "SkipChild:" << _Src._field_SkipChild << ", ";
	_Stream << "handler:" << _Src._field_handler;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68be196_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a69c95c0_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a69c9999_ObjectDeadCode> static__1a69c9e3e_new(jule::Ptr<_1a68b0055_IR>* _3521_ir) {
	return jule::new_ptr<_1a69c9999_ObjectDeadCode>(_1a69c9999_ObjectDeadCode{._field_ir=(*(_3521_ir))});;
}



inline jule::Bool _1aa395ad1_isLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a1d181_Trait>* _4127_t) {
	jule::Slice<jule::Ptr<_1a5a1d181_Trait>> _4211_live = nullptr;;
	{
		
{
			_case_begin_1aa3977e7:;
			{
				_4211_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1aa397660:;
	};
	{
		auto expr = &(_4211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa398892:;
		if (it != expr_end) {
			jule::I64 _537_i = it - expr->begin();
			{
				if ((_4211_live[_537_i] == (*(_4127_t)))) {
					return true;;
				};
			}
			_iter_next_1aa398892:;
			++it;
			_537_i++;
			goto _iter_begin_1aa398892;
		}
		_iter_end_1aa398892:;
	};
	return false;;
}

inline jule::Bool _1aa39b532_isLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _4127_t) {
	jule::Slice<jule::Ptr<_1a5a0cca8_FnIns>> _4211_live = nullptr;;
	{
		
{
			_case_begin_1aa39d127:;
			{
				_4211_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1aa39d06c:;
	};
	{
		auto expr = &(_4211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa39d0c2:;
		if (it != expr_end) {
			jule::I64 _537_i = it - expr->begin();
			{
				if ((_4211_live[_537_i] == (*(_4127_t)))) {
					return true;;
				};
			}
			_iter_next_1aa39d0c2:;
			++it;
			_537_i++;
			goto _iter_begin_1aa39d0c2;
		}
		_iter_end_1aa39d0c2:;
	};
	return false;;
}

inline jule::Bool _1aa3a237e_isLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a59e7a84_StructIns>* _4127_t) {
	jule::Slice<jule::Ptr<_1a59e7a84_StructIns>> _4211_live = nullptr;;
	{
		
{
			_case_begin_1aa3a6c46:;
			{
				_4211_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1aa3a6b25:;
	};
	{
		auto expr = &(_4211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3a7bae:;
		if (it != expr_end) {
			jule::I64 _537_i = it - expr->begin();
			{
				if ((_4211_live[_537_i] == (*(_4127_t)))) {
					return true;;
				};
			}
			_iter_next_1aa3a7bae:;
			++it;
			_537_i++;
			goto _iter_begin_1aa3a7bae;
		}
		_iter_end_1aa3a7bae:;
	};
	return false;;
}

inline jule::Bool _1aa3a95c8_isLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5ab1ee4_Var>* _4127_t) {
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _4211_live = nullptr;;
	{
		
{
			_case_begin_1aa3aae8c:;
			{
				_4211_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1aa3ab113:;
	};
	{
		auto expr = &(_4211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3ab9e8:;
		if (it != expr_end) {
			jule::I64 _537_i = it - expr->begin();
			{
				if ((_4211_live[_537_i] == (*(_4127_t)))) {
					return true;;
				};
			}
			_iter_next_1aa3ab9e8:;
			++it;
			_537_i++;
			goto _iter_begin_1aa3ab9e8;
		}
		_iter_end_1aa3ab9e8:;
	};
	return false;;
}



inline void _1aa395e77_pushLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a1d181_Trait> _6132_t) {
	{
		
{
			_case_begin_1aa399909:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,jule::Slice<jule::Ptr<_1a5a1d181_Trait>>::make({_6132_t}));
			}
		}
		_match_end_1aa398c5a:;
	};
}

inline void _1aa39b8c8_pushLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a0cca8_FnIns> _6132_t) {
	{
		
{
			_case_begin_1aa3a06ac:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a5a0cca8_FnIns>>::make({_6132_t}));
			}
		}
		_match_end_1aa39ecb6:;
	};
}

inline void _1aa3a2934_pushLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a59e7a84_StructIns> _6132_t) {
	{
		
{
			_case_begin_1aa3a40b7:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,jule::Slice<jule::Ptr<_1a59e7a84_StructIns>>::make({_6132_t}));
			}
		}
		_match_end_1aa3a343a:;
	};
}

inline void _1aa3a996e_pushLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5ab1ee4_Var> _6132_t) {
	{
		
{
			_case_begin_1aa3ad6ba:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::make({_6132_t}));
			}
		}
		_match_end_1aa3acb3c:;
	};
}



inline void _1a69ca7e1_setReferencesAsLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a10e87_ReferenceStack>* _7441_rs) {
	if (((*(_7441_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _787_i = 0LL;;
	for (; (_787_i < _1a5a1166e_Len((*(_7441_rs)).ptr())); (_787_i)++) {
		{
			jule::Any _808_ref = _1a5a119b0_At((*(_7441_rs)).ptr(), _787_i);;
			{
				auto &_match_expr{ _808_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1aa3947d3:;
					{
						jule::Ptr<_1a5a1d181_Trait> _839_t = _808_ref.unsafe_cast_ptr<_1a5a1d181_Trait>();;
						if (_1aa395ad1_isLive(_self_, &(_839_t))) {
							goto _iter_next_1aa393a02;
						};
						_1aa395e77_pushLive(_self_, _839_t);
						{
							auto expr = &((*(_839_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1aa39555e:;
							if (it != expr_end) {
								jule::Ptr<_1a5a09cc7_Fn> _8817_ins = *it;
								{
									{
										auto expr = &((*(_8817_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1aa3999e7:;
										if (it != expr_end) {
											jule::Ptr<_1a5a0cca8_FnIns> _8918_mins = *it;
											{
												if (_1aa39b532_isLive(_self_, &(_8918_mins))) {
													goto _iter_next_1aa3999e7;
												};
												_1aa39b8c8_pushLive(_self_, _8918_mins);
												_1a69ca7e1_setReferencesAsLive(_self_, &((*(_8918_mins))._field_Refers));
											}
											_iter_next_1aa3999e7:;
											++it;
											goto _iter_begin_1aa3999e7;
										}
										_iter_end_1aa3999e7:;
									};
								}
								_iter_next_1aa39555e:;
								++it;
								goto _iter_begin_1aa39555e;
							}
							_iter_end_1aa39555e:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1aa394618:;
					{
						jule::Ptr<_1a5a0cca8_FnIns> _989_f = _808_ref.unsafe_cast_ptr<_1a5a0cca8_FnIns>();;
						if (_1aa39b532_isLive(_self_, &(_989_f))) {
							goto _match_end_1aa394690;
						};
						if ((((*(_989_f))._field_Owner != nullptr) && (!((*((*_989_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1aa3a237e_isLive(_self_, &((*_989_f.alloc)._field_Owner))))) {
								_1aa3a2934_pushLive(_self_, (*_989_f.alloc)._field_Owner);
								_1a69ca7e1_setReferencesAsLive(_self_, &((*(*_989_f.alloc)._field_Owner.alloc)._field_Refers));
							};
						};
						_1aa39b8c8_pushLive(_self_, _989_f);
						_1a69ca7e1_setReferencesAsLive(_self_, &((*_989_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1aa394849:;
					{
						jule::Ptr<_1a5ab1ee4_Var> _1119_v = _808_ref.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
						if (_1aa3a95c8_isLive(_self_, &(_1119_v))) {
							goto _match_end_1aa394690;
						};
						_1aa3a996e_pushLive(_self_, _1119_v);
						_1a69ca7e1_setReferencesAsLive(_self_, &((*(_1119_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1aa3948b0:;
					{
						jule::Ptr<_1a59e7a84_StructIns> _1189_s = _808_ref.unsafe_cast_ptr<_1a59e7a84_StructIns>();;
						if (_1aa3a237e_isLive(_self_, &(_1189_s))) {
							goto _match_end_1aa394690;
						};
						_1aa3a2934_pushLive(_self_, _1189_s);
						_1a69ca7e1_setReferencesAsLive(_self_, &((*(_1189_s))._field_Refers));
						{
							auto expr = &((*_1189_s.alloc)._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1aa3b0a30:;
							if (it != expr_end) {
								jule::Ptr<_1a5a09cc7_Fn> _12417_m = *it;
								{
									{
										auto expr = &((*(_12417_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1aa3b1712:;
										if (it != expr_end) {
											jule::Ptr<_1a5a0cca8_FnIns> _12518_ins = *it;
											{
												if (_1aa39b532_isLive(_self_, &(_12518_ins))) {
													goto _iter_next_1aa3b1712;
												};
												if (_1a68bb9ac_IsTraitMethod(&(_1189_s), &(_12518_ins))) {
													_1aa39b8c8_pushLive(_self_, _12518_ins);
													_1a69ca7e1_setReferencesAsLive(_self_, &((*(_12518_ins))._field_Refers));
												};
												;
												;
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Eq)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Gt)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_GtEq)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Lt)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_LtEq)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Shl)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Shr)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Add)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Sub)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Div)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Mul)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Mod)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitAnd)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitOr)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitXor)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Neg)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_Pos)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitNot)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_AddAssign)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_SubAssign)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_DivAssign)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_MulAssign)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_ModAssign)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_ShlAssign)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_ShrAssign)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitOrAssign)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitAndAssign)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12518_ins == (*_1189_s.alloc)._field_Operators._field_BitXorAssign)) {
														_1aa39b8c8_pushLive(_self_, _12518_ins);
														_1a69ca7e1_setReferencesAsLive(_self_, &((*_12518_ins.alloc)._field_Refers));
													};
												};
											}
											_iter_next_1aa3b1712:;
											++it;
											goto _iter_begin_1aa3b1712;
										}
										_iter_end_1aa3b1712:;
									};
								}
								_iter_next_1aa3b0a30:;
								++it;
								goto _iter_begin_1aa3b0a30;
							}
							_iter_end_1aa3b0a30:;
						};
					}
				}
				_match_end_1aa394690:;
			};
		}
	_iter_next_1aa393a02:;
	}
	_iter_end_1aa393a02:;;
}



inline void _1a69caa99_inits(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a71c0c_Package>* _15627_pkg) {
	{
		auto expr = &((*((*(_15627_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3b3846:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _15715_file = *it;
			{
				{
					auto expr = &((*(_15715_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa3b1569:;
					if (it != expr_end) {
						jule::Ptr<_1a5a09cc7_Fn> _15816_f = *it;
						{
							if ((*(_15816_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1a5a0cca8_FnIns> _16010_ins = (*_15816_f.alloc)._field_Instances[0LL];;
								(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a5a0cca8_FnIns>>::make({_16010_ins}));
								_1a69ca7e1_setReferencesAsLive(_self_, &((*(_16010_ins))._field_Refers));
							};
						}
						_iter_next_1aa3b1569:;
						++it;
						goto _iter_begin_1aa3b1569;
					}
					_iter_end_1aa3b1569:;
				};
			}
			_iter_next_1aa3b3846:;
			++it;
			goto _iter_begin_1aa3b3846;
		}
		_iter_end_1aa3b3846:;
	};
}



inline void _1a69cad52_collectLivePackage(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a71c0c_Package>* _16840_pkg) {
	_1a69caa99_inits(_self_, _16840_pkg);
	if (_2133d8d63_Test) {
		{
			auto expr = &((*((*(_16840_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa3d4ee9:;
			if (it != expr_end) {
				jule::Ptr<_1a5b14783_SymbolTable> _17416_file = *it;
				{
					{
						auto expr = &((*(_17416_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa3d5934:;
						if (it != expr_end) {
							jule::Ptr<_1a5a09cc7_Fn> _17517_f = *it;
							{
								if (_1a68bcb12_HasDirective(&((*(_17517_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1a5a0cca8_FnIns> _17711_ins = (*_17517_f.alloc)._field_Instances[0LL];;
									(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a5a0cca8_FnIns>>::make({_17711_ins}));
									_1a69ca7e1_setReferencesAsLive(_self_, &((*(_17711_ins))._field_Refers));
								};
							}
							_iter_next_1aa3d5934:;
							++it;
							goto _iter_begin_1aa3d5934;
						}
						_iter_end_1aa3d5934:;
					};
				}
				_iter_next_1aa3d4ee9:;
				++it;
				goto _iter_begin_1aa3d4ee9;
			}
			_iter_end_1aa3d4ee9:;
		};
	};
}



inline void _1a69cb050_collectLive(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3d589b:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _18715_used = *it;
			{
				if ((!((*(_18715_used))._field_Binded))) {
					_1a69cad52_collectLivePackage(_self_, &((*_18715_used.alloc)._field_Package));
				};
			}
			_iter_next_1aa3d589b:;
			++it;
			goto _iter_begin_1aa3d589b;
		}
		_iter_end_1aa3d589b:;
	};
	_1a69cad52_collectLivePackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
	jule::Ptr<_1a5a09cc7_Fn> _1957_main = _1a5a73291_FindFn((*(*_self_.alloc)._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1a5a0cca8_FnIns> _1967_ins = (*(_1957_main))._field_Instances[0LL];;
	(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1a5a0cca8_FnIns>>::make({_1967_ins}));
	_1a69ca7e1_setReferencesAsLive(_self_, &((*(_1967_ins))._field_Refers));
}



inline void _1a69cb308_removeDeadGlobals(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>* _20139_vars) {
	jule::I64 _2027_i = 0LL;;
	while ((_2027_i < (*(_20139_vars)).len())) {
		{
			jule::Ptr<_1a5ab1ee4_Var> _2044_v = (*(_20139_vars))[_2027_i];;
			if (_1aa3a95c8_isLive(_self_, &(_2044_v))) {
				(_2027_i)++;
				goto _iter_next_1aa3dbb6b;
			};
			(*(_20139_vars))=jule::append((*(_20139_vars)).slice(0LL, _2027_i),(*(_20139_vars)).slice((_2027_i + 1LL)));
		}
	_iter_next_1aa3dbb6b:;
	}
	_iter_end_1aa3dbb6b:;;
}



inline void _1a69cb5b1_removeDeadFns(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a5a09cc7_Fn>>* _21335_funcs) {
	jule::I64 _2147_i = 0LL;;
	while ((_2147_i < (*(_21335_funcs)).len())) {
		{
			jule::Ptr<_1a5a09cc7_Fn> _2168_f = (*(_21335_funcs))[_2147_i];;
			jule::I64 _2178_j = 0LL;;
			while ((_2178_j < (*(_2168_f))._field_Instances.len())) {
				{
					jule::Ptr<_1a5a0cca8_FnIns> _2195_ins = (*_2168_f.alloc)._field_Instances[_2178_j];;
					if (_1aa39b532_isLive(_self_, &(_2195_ins))) {
						(_2178_j)++;
						goto _iter_next_1aa3de3bb;
					};
					(*_2168_f.alloc)._field_Instances=jule::append((*_2168_f.alloc)._field_Instances.slice(0LL, _2178_j),(*_2168_f.alloc)._field_Instances.slice((_2178_j + 1LL)));
				}
			_iter_next_1aa3de3bb:;
			}
			_iter_end_1aa3de3bb:;;
			if (((*_2168_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_21335_funcs))=jule::append((*(_21335_funcs)).slice(0LL, _2147_i),(*(_21335_funcs)).slice((_2147_i + 1LL)));
				goto _iter_next_1aa3dd71c;
			};
			(_2147_i)++;
		}
	_iter_next_1aa3dd71c:;
	}
	_iter_end_1aa3dd71c:;;
}



inline void _1a69cb869_removeDeadStructs(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a59e4d06_Struct>>* _23439_structs) {
	jule::I64 _2357_i = 0LL;;
	while ((_2357_i < (*(_23439_structs)).len())) {
		{
			jule::Ptr<_1a59e4d06_Struct> _2378_s = (*(_23439_structs))[_2357_i];;
			jule::I64 _2388_j = 0LL;;
			while ((_2388_j < (*(_2378_s))._field_Instances.len())) {
				{
					jule::Ptr<_1a59e7a84_StructIns> _2409_ins = (*_2378_s.alloc)._field_Instances[_2388_j];;
					_1a69cb5b1_removeDeadFns(_self_, &((*(_2409_ins))._field_Methods));
					if ((((*_2409_ins.alloc)._field_Methods.len() != 0LL) || _1aa3a237e_isLive(_self_, &(_2409_ins)))) {
						(_2388_j)++;
						goto _iter_next_1aa3e3106;
					};
					(*_2378_s.alloc)._field_Instances=jule::append((*_2378_s.alloc)._field_Instances.slice(0LL, _2388_j),(*_2378_s.alloc)._field_Instances.slice((_2388_j + 1LL)));
				}
			_iter_next_1aa3e3106:;
			}
			_iter_end_1aa3e3106:;;
			if (((*_2378_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_23439_structs))=jule::append((*(_23439_structs)).slice(0LL, _2357_i),(*(_23439_structs)).slice((_2357_i + 1LL)));
				goto _iter_next_1aa3e2457;
			};
			(_2357_i)++;
		}
	_iter_next_1aa3e2457:;
	}
	_iter_end_1aa3e2457:;;
}



inline void _1a69cbb22_removeDeadTraits(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a5a1d181_Trait>>* _25638_traits) {
	jule::I64 _2577_i = 0LL;;
	while ((_2577_i < (*(_25638_traits)).len())) {
		{
			jule::Ptr<_1a5a1d181_Trait> _2598_t = (*(_25638_traits))[_2577_i];;
			if ((!(_1aa395ad1_isLive(_self_, &(_2598_t))))) {
				(*(_25638_traits))=jule::append((*(_25638_traits)).slice(0LL, _2577_i),(*(_25638_traits)).slice((_2577_i + 1LL)));
				goto _iter_next_1aa3e6bed;
			};
			jule::I64 _2648_j = 0LL;;
			while ((_2648_j < (*(_2598_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1a59e4d06_Struct> _2665_s = (*_2598_t.alloc)._field_Implemented[_2648_j];;
					if (((*(_2665_s))._field_Instances.len() > 0LL)) {
						(_2648_j)++;
						goto _iter_next_1aa3e7627;
					};
					(*_2598_t.alloc)._field_Implemented=jule::append((*_2598_t.alloc)._field_Implemented.slice(0LL, _2648_j),(*_2598_t.alloc)._field_Implemented.slice((_2648_j + 1LL)));
				}
			_iter_next_1aa3e7627:;
			}
			_iter_end_1aa3e7627:;;
			(_2577_i)++;
		}
	_iter_next_1aa3e6bed:;
	}
	_iter_end_1aa3e6bed:;;
}



inline void _1a69cbdca_removeDeadsFile(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5b14783_SymbolTable>* _27737_file) {
	_1a69cb5b1_removeDeadFns(_self_, &((*((*(_27737_file))))._field_Funcs));
	_1a69cb869_removeDeadStructs(_self_, &((*((*(_27737_file))))._field_Structs));
	_1a69cbb22_removeDeadTraits(_self_, &((*((*(_27737_file))))._field_Traits));
	_1a69cb308_removeDeadGlobals(_self_, &((*((*(_27737_file))))._field_Vars));
}



inline void _1a69cc183_removeDeadsPackage(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_, jule::Ptr<_1a5a71c0c_Package>* _28440_pkg) {
	{
		auto expr = &((*((*(_28440_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3ec297:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _28515_file = *it;
			{
				_1a69cbdca_removeDeadsFile(_self_, &(_28515_file));
			}
			_iter_next_1aa3ec297:;
			++it;
			goto _iter_begin_1aa3ec297;
		}
		_iter_end_1aa3ec297:;
	};
}



inline void _1a69cc381_removeDeads(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3eca17:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _29115_used = *it;
			{
				if ((!((*(_29115_used))._field_Binded))) {
					_1a69cc183_removeDeadsPackage(_self_, &((*_29115_used.alloc)._field_Package));
				};
			}
			_iter_next_1aa3eca17:;
			++it;
			goto _iter_begin_1aa3eca17;
		}
		_iter_end_1aa3eca17:;
	};
	_1a69cc183_removeDeadsPackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
}



inline void _1a69cc57e_elimanate(jule::Ptr<_1a69c9999_ObjectDeadCode> _self_) {
	_1a69cb050_collectLive(_self_);
	_1a69cc381_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a69c9999_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void _1a69cdad0_optimizeChild(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4bc4d_Scope>* _3835_s) {
	jule::Ptr<_1a69cd5e6_scopeDeadCode> _397_sdc = jule::new_ptr<_1a69cd5e6_scopeDeadCode>(_1a69cd5e6_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3835_s)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1a69d14ea_optimizeStmts(_397_sdc);
	};
}



inline void _1a69cdd88_optimizeBodyChildExceptional(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4bc4d_Scope>* _4850_s) {
	jule::Ptr<_1a69cd5e6_scopeDeadCode> _497_sdc = jule::new_ptr<_1a69cd5e6_scopeDeadCode>(_1a69cd5e6_scopeDeadCode{._field_s=(*(_4850_s)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1a69d14ea_optimizeStmts(_497_sdc);
	};
}



inline void _1a69ce141_optimizeBodyChild(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4bc4d_Scope>* _5839_s) {
	jule::Ptr<_1a69cd5e6_scopeDeadCode> _597_sdc = jule::new_ptr<_1a69cd5e6_scopeDeadCode>(_1a69cd5e6_scopeDeadCode{._field_s=(*(_5839_s)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1a69d14ea_optimizeStmts(_597_sdc);
	};
}



inline void _1a69ce3e9_optimizeExprModel(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Any* _6739_model) {
	_1a69d2ce3_exprDeadCode _683_edc = static__1a69d31de_new(&(_self_));;
	_1a69d3497_optimize(&_683_edc, _6739_model);
}



inline void _1a69ce5e7_eliminateFollowed(_1a69cd5e6_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1a69cd5e6_scopeDeadCode> _797_parent = (*(_self_))._field_parent;;
	while ((_797_parent != nullptr)) {
		{
			{
				((*((*(_797_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_797_parent))._field_i + 1LL));;
			};
			_797_parent=(*_797_parent.alloc)._field_parent;
		}
	_iter_next_1aa40bc57:;
	}
	_iter_end_1aa40bc57:;;
}



inline void _1a69ce8a0_pushGoto(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4e9ba_GotoSt> _8829_gt) {
	jule::I64 _897_i = 0LL;;
	for (; (_897_i < (*((*(_self_))._field_labels)).len()); (_897_i)++) {
		{
			if (((*(_8829_gt))._field_Ident == (*((*(*_self_.alloc)._field_labels.alloc)[_897_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1aa410123:;
	}
	_iter_end_1aa410123:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1a5a4e9ba_GotoSt>>::make({_8829_gt}));
}



inline void _1a69ceb58_pushLabel(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4e5e1_Label> _9830_l) {
	jule::I64 _997_i = 0LL;;
	while ((_997_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_9830_l))._field_Ident == (*((*(*_self_.alloc)._field_gotos.alloc)[_997_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_997_i), (*((*(_self_))._field_gotos)).slice((_997_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1aa412301;
			};
			(_997_i)++;
		}
	_iter_next_1aa412301:;
	}
	_iter_end_1aa412301:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1a5a4e5e1_Label>>::make({_9830_l}));
}



inline void _1a69cee11_optimizeRangeIter(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4da85_RangeIter> _11138_it) {
	_1a69ce3e9_optimizeExprModel(_self_, &((*((*(_11138_it))._field_Expr))._field_Model));
	_1a69ce141_optimizeBodyChild(_self_, &((*_11138_it.alloc)._field_Scope));
}



inline void _1a69d01b9_optimizeWhileIter(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4d139_WhileIter> _11638_it) {
	_1a69ce3e9_optimizeExprModel(_self_, &((*(_11638_it))._field_Expr));
	if (((*_11638_it.alloc)._field_Next != nullptr)) {
		_1a69d12ec_optimizeStmt(_self_, (*_11638_it.alloc)._field_Next);
	};
	_1a69ce141_optimizeBodyChild(_self_, &((*_11638_it.alloc)._field_Scope));
}



inline void _1a69d0472_optimizeInfIter(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4cb83_InfIter> _12436_it) {
	_1a69ce141_optimizeBodyChild(_self_, &((*(_12436_it))._field_Scope));
}



inline void _1a69d072a_optimizeConditional(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a4c886_Conditional> _12840_c) {
	{
		auto expr = &((*(_12840_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa419160:;
		if (it != expr_end) {
			jule::Ptr<_1a5a4c16b_If> _12915_case = *it;
			{
				if ((_12915_case != nullptr)) {
					_1a69ce3e9_optimizeExprModel(_self_, &((*_12915_case.alloc)._field_Expr));
					_1a69ce141_optimizeBodyChild(_self_, &((*_12915_case.alloc)._field_Scope));
				};
			}
			_iter_next_1aa419160:;
			++it;
			goto _iter_begin_1aa419160;
		}
		_iter_end_1aa419160:;
	};
	if (((*_12840_c.alloc)._field_Default != nullptr)) {
		if (((*_12840_c.alloc)._field_Elifs.len() == 0LL)) {
			_1a69cdad0_optimizeChild(_self_, &((*(*_12840_c.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1a69ce141_optimizeBodyChild(_self_, &((*(*_12840_c.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a69d09d3_optimizeMatch(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a50e61_Match> _14634_m) {
	{
		auto expr = &((*(_14634_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa41c691:;
		if (it != expr_end) {
			jule::Ptr<_1a5a51989_Case> _14715_case = *it;
			{
				{
					auto expr = &((*(_14715_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa41d10e:;
					if (it != expr_end) {
						jule::Ptr<_1a5b19aeb_Data> _14816_expr = *it;
						{
							_1a69ce3e9_optimizeExprModel(_self_, &((*(_14816_expr))._field_Model));
						}
						_iter_next_1aa41d10e:;
						++it;
						goto _iter_begin_1aa41d10e;
					}
					_iter_end_1aa41d10e:;
				};
				_1a69ce141_optimizeBodyChild(_self_, &((*_14715_case.alloc)._field_Scope));
			}
			_iter_next_1aa41c691:;
			++it;
			goto _iter_begin_1aa41c691;
		}
		_iter_end_1aa41c691:;
	};
	if (((*_14634_m.alloc)._field_Default != nullptr)) {
		if (((*_14634_m.alloc)._field_Cases.len() == 0LL)) {
			_1a69cdad0_optimizeChild(_self_, &((*(*_14634_m.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1a69ce141_optimizeBodyChild(_self_, &((*(*_14634_m.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1a69d0c8b_optimizeAssign(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a5034a_Assign> _16435_assign) {
	_1a69ce3e9_optimizeExprModel(_self_, &((*((*(_16435_assign))._field_Left))._field_Model));
	_1a69ce3e9_optimizeExprModel(_self_, &((*((*_16435_assign.alloc)._field_Right))._field_Model));
}



inline void _1a69d1044_optimizeMultiAssign(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Ptr<_1a5a50801_MultiAssign> _16940_assign) {
	{
		auto expr = &((*(_16940_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa422487:;
		if (it != expr_end) {
			jule::Ptr<_1a5b19aeb_Data> _17015_l = *it;
			{
				if ((_17015_l != nullptr)) {
					_1a69ce3e9_optimizeExprModel(_self_, &((*_17015_l.alloc)._field_Model));
				};
			}
			_iter_next_1aa422487:;
			++it;
			goto _iter_begin_1aa422487;
		}
		_iter_end_1aa422487:;
	};
	_1a69ce3e9_optimizeExprModel(_self_, &((*_16940_assign.alloc)._field_Right));
}



inline void _1a69d12ec_optimizeStmt(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_, jule::Any _17833_st) {
	{
		auto &_match_expr{ _17833_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aa424104:;
			{
				jule::Ptr<_1a5a4bc4d_Scope> _1818_scope = _17833_st.unsafe_cast_ptr<_1a5a4bc4d_Scope>();;
				if ((*(_1818_scope))._field_Deferred) {
					_1a69d182a_eliminateDeadCodeOfScope(_1818_scope);
				} else {
					_1a69cdad0_optimizeChild(_self_, &(_1818_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1aa423d7e:;
			{
				_1a69cee11_optimizeRangeIter(_self_, _17833_st.unsafe_cast_ptr<_1a5a4da85_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aa42417b:;
			{
				_1a69d01b9_optimizeWhileIter(_self_, _17833_st.unsafe_cast_ptr<_1a5a4d139_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aa424203:;
			{
				_1a69d0472_optimizeInfIter(_self_, _17833_st.unsafe_cast_ptr<_1a5a4cb83_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aa42427a:;
			{
				_1a69d072a_optimizeConditional(_self_, _17833_st.unsafe_cast_ptr<_1a5a4c886_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aa424302:;
			{
				_1a69d09d3_optimizeMatch(_self_, _17833_st.unsafe_cast_ptr<_1a5a50e61_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1aa424379:;
			{
				_1a69d0c8b_optimizeAssign(_self_, _17833_st.unsafe_cast_ptr<_1a5a5034a_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aa424401:;
			{
				_1a69d1044_optimizeMultiAssign(_self_, _17833_st.unsafe_cast_ptr<_1a5a50801_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aa424478:;
			{
				jule::Ptr<_1a5b19aeb_Data> _2028_d = _17833_st.unsafe_cast_ptr<_1a5b19aeb_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1aa423eb1;
				};
				{
					auto &_match_expr{ (*(_2028_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type28) {
						_case_begin_1aa42a23c:;
						{
							_1a69ce5e7_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1aa42a4c3:;
						{
							_1a69ce3e9_optimizeExprModel(_self_, &((*(_2028_d))._field_Model));
						}
					}
					_match_end_1aa42a46d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1aa424500:;
			{
				_1a69ce5e7_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1aa424577:;
			{
				_1a69ce8a0_pushGoto(_self_, _17833_st.unsafe_cast_ptr<_1a5a4e9ba_GotoSt>());
				_1a69ce5e7_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aa4245ee:;
			{
				_1a69ceb58_pushLabel(_self_, _17833_st.unsafe_cast_ptr<_1a5a4e5e1_Label>());
			}
		}
		_match_end_1aa423eb1:;
	};
}



inline void _1a69d14ea_optimizeStmts(jule::Ptr<_1a69cd5e6_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a69d12ec_optimizeStmt(_self_, (*(*_self_.alloc)._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1aa42cdcc:;
	}
	_iter_end_1aa42cdcc:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a69cd5e6_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1a69d2ce3_exprDeadCode static__1a69d31de_new(jule::Ptr<_1a69cd5e6_scopeDeadCode>* _2121_s) {
	return _1a69d2ce3_exprDeadCode{._field_s=(*(_2121_s))};;
}



inline void _1a69d3497_optimize(_1a69d2ce3_exprDeadCode* _self_, jule::Any* _2725_model) {
	_1a68b4a4e_Inspect(_1a69d2ae5_exprInspector.ptr(), (*(_2725_model)), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1aa4304b7, jule::Ptr<__jule_anon_1aa4304b7_ctx>::make(__jule_anon_1aa4304b7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa4304b7_ctx_handler));
}





std::ostream &operator<<(std::ostream &_Stream, _1a69d2ce3_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c7998c88_ExceptionalForwardingExprModel _Src) {
	_Stream << "ExceptionalForwardingExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c799910c_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c79994d6_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c799985a_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c7999ccd_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c799a361_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c799a65d_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c799a9e3_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c799adbc_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c799b296_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c799b670_StrRuneIter _Src) {
	_Stream << "StrRuneIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c799b96c_UnsafeDerefExprModel _Src) {
	_Stream << "UnsafeDerefExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c799bc69_UnsafeCastingExprModel _Src) {
	_Stream << "UnsafeCastingExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c799c94b_nilVar _Src) {
	_Stream << "nilVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "safe:" << _Src._field_safe;
	_Stream << "}";
	return _Stream;
}



inline void _1c799d1ee_pushVar(_1c799cc8c_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe) {
	if (((!(_1a68d5c18_Access)) || (_2923_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa48198b:;
		if (it != expr_end) {
			_1c799c94b_nilVar _3415_v = *it;
			{
				if ((_3415_v._field_var == _2923_var)) {
					_3415_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1aa48198b:;
			++it;
			goto _iter_begin_1aa48198b;
		}
		_iter_end_1aa48198b:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa481749:;
		if (it != expr_end) {
			_1c799c94b_nilVar _4115_v = *it;
			{
				if ((_4115_v._field_var == 0LLU)) {
					_4115_v._field_var=_2923_var;
					_4115_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1aa481749:;
			++it;
			goto _iter_begin_1aa481749;
		}
		_iter_end_1aa481749:;
	};
	{ jule::Slice<_1c799c94b_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1c799c94b_nilVar{._field_var=_2923_var, ._field_safe=_2937_safe}); };
}



inline jule::Bool _1c799d540_removeVar(_1c799cc8c_nils* _self_, jule::Uintptr _5225_var) {
	if ((_5225_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa484175:;
			if (it != expr_end) {
				_1c799c94b_nilVar _5416_v = *it;
				{
					if ((_5416_v._field_var == _5225_var)) {
						_5416_v._field_var=0LLU;
						_5416_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1aa484175:;
				++it;
				goto _iter_begin_1aa484175;
			}
			_iter_end_1aa484175:;
		};
	};
	return false;;
}



inline jule::Bool _1c799d881_isSafe(_1c799cc8c_nils* _self_, jule::Uintptr _6622_var) {
	if ((_6622_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa4857d6:;
			if (it != expr_end) {
				_1c799c94b_nilVar _6811_v = *it;
				{
					if ((_6811_v._field_var == _6622_var)) {
						return _6811_v._field_safe;;
					};
				}
				_iter_next_1aa4857d6:;
				++it;
				goto _iter_begin_1aa4857d6;
			}
			_iter_end_1aa4857d6:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c799cc8c_nils _Src) {
	_Stream << "nils{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a68c08b2_scopeOptimizer> static__1a68c0e34_new(jule::Ptr<_1a5a4bc4d_Scope> _5120_scope) {
	jule::Ptr<_1a68c08b2_scopeOptimizer> _527_sc = jule::new_ptr<_1a68c08b2_scopeOptimizer>(_1a68c08b2_scopeOptimizer{._field_scope=_5120_scope, ._field_data=jule::new_ptr<_1a68d098d_data>(_1a68d098d_data{._field_boundary=jule::new_ptr<_1a68d241d_boundary>(), ._field_nils=jule::new_ptr<_1c799cc8c_nils>(), ._field_dynamic=jule::new_ptr<_1a68ccd0e_dynamic>()})});;
	return _527_sc;;
}



inline void _1a68c11dc_setCurrentStmt(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Any _6335_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6335_stmt))))));
}



inline void _1a68c13da_removeCurrent(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1a68c1671_isLastStmt(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_) {
	jule::Ptr<_1a68c08b2_scopeOptimizer> _737_r = _self_;;
	for (; (_737_r != nullptr); _737_r=(*_737_r.alloc)._field_parent) {
		{
			if ((((*((*_737_r.alloc)._field_scope))._field_Stmts.len() - (*_737_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1aa492a13:;
	}
	_iter_end_1aa492a13:;;
	return true;;
}



inline jule::Bool _1a68c1907_isIter(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_) {
	jule::Ptr<_1a68c08b2_scopeOptimizer> _837_r = (*(_self_))._field_parent;;
	for (; (_837_r != nullptr); _837_r=(*_837_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_837_r))._field_scope))._field_Stmts[(*(_837_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type35) {
					_case_begin_1aa495274:;
					{
						return true;;
					}
				}
				_match_end_1aa4951db:;
			};
		}
	_iter_next_1aa494608:;
	}
	_iter_end_1aa494608:;;
	return false;;
}



inline void _1a68c1bb0_optimizeData(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5b19aeb_Data> _9533_d) {
	{
		auto &_match_expr{ (*(_9533_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa49641d:;
			{
				jule::Ptr<_1a59ede64_FnCallExprModel> _988_m = (*(_9533_d))._field_Model.unsafe_cast_ptr<_1a59ede64_FnCallExprModel>();;
				if (_2133d9726_Production) {
					if (((!(_1a5a0e23d_IsBuiltin((*(_988_m))._field_Func.ptr()))) && _1a68bbd31_IsStdPackage(&((*((*((*((*(*_988_m.alloc)._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1a68c11dc_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1a68c7d5e_optimizeData(&((*(_9533_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1a68d718c_Exceptional && (*(*(*_988_m.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) && ((*_988_m.alloc)._field_Except != nullptr)) && ((*(*_988_m.alloc)._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1a68ba989_IsForwarded(&((*_988_m.alloc)._field_Except))) && _1a68c1671_isLastStmt(_self_)) && (!(_1a68c1907_isIter(_self_))))) {
					_1a68c11dc_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c7998c88_ExceptionalForwardingExprModel>(_1c7998c88_ExceptionalForwardingExprModel{._field_Expr=_988_m}), &__jule_any_type120));
				};
				return;;
			}
		}
		_match_end_1aa4963a7:;
	};
	static__1a68c7d5e_optimizeData(&((*_9533_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a68c1e68_optimizeVar(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5ab1ee4_Var> _12132_v) {
	if (((*(_12132_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1c799e3ed_isNilValidType((*((*_12132_v.alloc)._field_Kind))._field_Kind)) && _1c799e134_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*(*_12132_v.alloc)._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1c799d1ee_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1c799e73e_getNilVar(jule::Any(_12132_v, &__jule_any_type8)), true);
		};
		if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1a5b50d52_TypeKind> _1309_kind = _1a68ce5d5_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_12132_v.alloc)._field_Kind.alloc)._field_Kind, (*(*(*_12132_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);;
			if ((_1309_kind != nullptr)) {
				if (_1a68ce1a6_isDynamicValidType((*(*_12132_v.alloc)._field_Kind.alloc)._field_Kind)) {
					_1a68cd271_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1a68ce926_getDynamicVar(jule::Any(_12132_v, &__jule_any_type8)), _1309_kind);
				};
			};
		};
		static__1a68c7d5e_optimizeData(&((*(*(*_12132_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1a68c2221_optimizeConditional(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a4c886_Conditional> _14240_c) {
	_1a68d0493_dataCheckpoint _1437_checkpoint = _1a68d0d12_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4a4915:;
		if (it != expr_end) {
			jule::Ptr<_1a5a4c16b_If> _14415_elif = *it;
			{
				static__1a68c7d5e_optimizeData(&((*(_14415_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1a68c4da0_optimizeChild(_self_, (*_14415_elif.alloc)._field_Scope);
				if ((((*(_14240_c))._field_Elifs.len() > 1LL) || ((*_14240_c.alloc)._field_Default != nullptr))) {
					_1a68d10ba_loadCheckpoint((*_self_.alloc)._field_data, &(_1437_checkpoint));
				};
			}
			_iter_next_1aa4a4915:;
			++it;
			goto _iter_begin_1aa4a4915;
		}
		_iter_end_1aa4a4915:;
	};
	if (((*_14240_c.alloc)._field_Default != nullptr)) {
		_1a68c4da0_optimizeChild(_self_, (*(*_14240_c.alloc)._field_Default.alloc)._field_Scope);
		_1a68d10ba_loadCheckpoint((*_self_.alloc)._field_data, &(_1437_checkpoint));
	};
	if ((!(_1a68d6642_Cond))) {
		return;;
	};
	jule::Bool _1607_constCase = false;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4a8551:;
		if (it != expr_end) {
			jule::I64 _1638_i = it - expr->begin();
			jule::Ptr<_1a5a4c16b_If> _16315_elif = *it;
			{
				if ((!(_1a68c5466_isConstantValidConditionalCase(&(_16315_elif))))) {
					goto _iter_next_1aa4a8551;
				};
				_1607_constCase=true;
				((*(_14240_c))._field_Elifs).mut_slice(0LL, _1638_i);;
				(*_14240_c.alloc)._field_Default=jule::new_ptr<_1a5a4c468_Else>(_1a5a4c468_Else{._field_Scope=(*(_16315_elif))._field_Scope});
				goto _iter_end_1aa4a8551;
			}
			_iter_next_1aa4a8551:;
			++it;
			_1638_i++;
			goto _iter_begin_1aa4a8551;
		}
		_iter_end_1aa4a8551:;
	};
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a5a4c16b_If>* _1807_i = (&((*_14240_c.alloc)._field_Elifs[0LL]));;
	jule::Ptr<_1a5a4c16b_If>* _1813_end = (&((*_14240_c.alloc)._field_Elifs[((*_14240_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1807_i <= _1813_end); (_1807_i)++) {
		{
			{
				if (_1a68c5d7e_isUnreachableConditionalCase(&((*(_1807_i))))) {
					(*(_1807_i))=nullptr;
				};
			};
		}
	_iter_next_1aa4ab1be:;
	}
	_iter_end_1aa4ab1be:;;
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1607_constCase))) {
		return;;
	};
	jule::I64 _1997_only = -1LL;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4ad4e0:;
		if (it != expr_end) {
			jule::I64 _2007_j = it - expr->begin();
			jule::Ptr<_1a5a4c16b_If> _20010_elif = *it;
			{
				if ((_20010_elif != nullptr)) {
					if ((_1997_only != -1LL)) {
						return;;
					};
					_1997_only=_2007_j;
				};
			}
			_iter_next_1aa4ad4e0:;
			++it;
			_2007_j++;
			goto _iter_begin_1aa4ad4e0;
		}
		_iter_end_1aa4ad4e0:;
	};
	if ((_1997_only != -1LL)) {
		_1a68c11dc_setCurrentStmt(_self_, jule::Any((*((*_14240_c.alloc)._field_Elifs[_1997_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1a68c263e_buildDefaultConstantTrueCase(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a51989_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1a5a50e61_Match>* _21680_m) {
	(*(_21649_case))._field_Exprs=nullptr;
	jule::I64 _2183_start = (*(_21667_i));;
	_julec_label_1aa4b09cb:;
	for (;;) {
		{
			if (((*((*_21649_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1aa4b0a64;
			};
			jule::Any *_2249_stmt = &((*(*_21649_case.alloc)._field_Scope.alloc)._field_Stmts[((*(*_21649_case.alloc)._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2249_stmt)) };
				
				if (_match_expr.type == &__jule_any_type47) {
					_case_begin_1aa4b3193:;
					{
						((*(_21667_i)))++;
						if (((*(_21667_i)) >= (*((*(_21680_m))))._field_Cases.len())) {
							(*(_2249_stmt))=jule::Any((*((*((*(_21680_m))))._field_Default))._field_Scope, &__jule_any_type21);
							goto _iter_end_1aa4b0a64;
						};
						_21649_case=(*((*(_21680_m))))._field_Cases[(*(_21667_i))];
						(*(_2249_stmt))=jule::Any((*_21649_case.alloc)._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_1aa4b32a3:;
					{
						goto _iter_end_1aa4b0a64;
					}
				}
				_match_end_1aa4b313d:;
			};
		}
	_iter_next_1aa4b0a64:;
	}
	_iter_end_1aa4b0a64:;;
	(*((*(_21680_m))))._field_Default=(*((*(_21680_m))))._field_Cases[_2183_start];
	((*((*(_21680_m))))._field_Cases).mut_slice(0LL, _2183_start);;
}



inline void _1a68c28e7_optimizeMatch(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a50e61_Match> _24234_m) {
	jule::Uintptr _2437_var = 0LLU;;
	if ((_1a68d76ed_Dynamic && (*(_24234_m))._field_TypeMatch)) {
		_2437_var=_1a68ce926_getDynamicVar((*((*_24234_m.alloc)._field_Expr))._field_Model);
	};
	_1a68d0493_dataCheckpoint _2477_checkpoint = _1a68d0d12_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4b7818:;
		if (it != expr_end) {
			jule::Ptr<_1a5a51989_Case> _24815_case = *it;
			{
				{
					auto expr = &((*(_24815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa4b81ed:;
					if (it != expr_end) {
						jule::Ptr<_1a5b19aeb_Data> _24916_expr = *it;
						{
							static__1a68c7d5e_optimizeData(&((*(_24916_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1aa4b81ed:;
						++it;
						goto _iter_begin_1aa4b81ed;
					}
					_iter_end_1aa4b81ed:;
				};
				if ((((*_24815_case.alloc)._field_Exprs.len() == 1LL) && ((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1a5b50d52_TypeKind> _2549_kind = _1a68ce5d5_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_24815_case.alloc)._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_2549_kind != nullptr)) {
						_1a68cd271_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _2437_var, _2549_kind);
					} else {
						_1a68cd5b2_removeVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _2437_var);
					};
				};
				_1a68c4da0_optimizeChild(_self_, (*_24815_case.alloc)._field_Scope);
				if ((((*_24234_m.alloc)._field_Cases.len() > 1LL) || ((*_24234_m.alloc)._field_Default != nullptr))) {
					_1a68d10ba_loadCheckpoint((*_self_.alloc)._field_data, &(_2477_checkpoint));
				};
			}
			_iter_next_1aa4b7818:;
			++it;
			goto _iter_begin_1aa4b7818;
		}
		_iter_end_1aa4b7818:;
	};
	if (((*_24234_m.alloc)._field_Default != nullptr)) {
		_1a68c4da0_optimizeChild(_self_, (*(*_24234_m.alloc)._field_Default.alloc)._field_Scope);
		_1a68d10ba_loadCheckpoint((*_self_.alloc)._field_data, &(_2477_checkpoint));
	};
	if ((!(_1a68d6642_Cond))) {
		return;;
	};
	jule::Bool _2757_constCase = false;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4beb3e:;
		if (it != expr_end) {
			jule::I64 _27812_i = it - expr->begin();
			jule::Ptr<_1a5a51989_Case> _27819_case = *it;
			{
				if ((!(_1a68c5a3d_isConstantValidMatchCase(&(_27819_case))))) {
					goto _iter_next_1aa4beb3e;
				};
				_2757_constCase=true;
				_1a68c263e_buildDefaultConstantTrueCase(_self_, _27819_case, &(_27812_i), &(_24234_m));
				goto _iter_end_1aa4beb3e;
			}
			_iter_next_1aa4beb3e:;
			++it;
			_27812_i++;
			goto _iter_begin_1aa4beb3e;
		}
		_iter_end_1aa4beb3e:;
	};
	if (((*_24234_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a5a51989_Case>* _2927_i = (&((*_24234_m.alloc)._field_Cases[0LL]));;
	jule::Ptr<_1a5a51989_Case>* _2933_end = (&((*_24234_m.alloc)._field_Cases[((*_24234_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2927_i <= _2933_end); (_2927_i)++) {
		{
			{
				if (_1a68c6115_isUnreachableMatchCase(&((*(_2927_i))))) {
					(*(_2927_i))=nullptr;
				};
			};
		}
	_iter_next_1aa4c2735:;
	}
	_iter_end_1aa4c2735:;;
	if ((!(_2757_constCase))) {
		return;;
	};
	jule::I64 _3077_only = -1LL;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4c39bc:;
		if (it != expr_end) {
			jule::I64 _3087_j = it - expr->begin();
			jule::Ptr<_1a5a51989_Case> _30810_case = *it;
			{
				if ((_30810_case != nullptr)) {
					if ((_3077_only != -1LL)) {
						return;;
					};
					_3077_only=_3087_j;
				};
			}
			_iter_next_1aa4c39bc:;
			++it;
			_3087_j++;
			goto _iter_begin_1aa4c39bc;
		}
		_iter_end_1aa4c39bc:;
	};
	if ((_3077_only != -1LL)) {
		_1a68c11dc_setCurrentStmt(_self_, jule::Any((*((*_24234_m.alloc)._field_Cases[_3077_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1a68c2ba0_optimizeRangeIter(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a4da85_RangeIter> _32438_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32438_it))._field_KeyA != nullptr))) {
		_1a68d2880_pushVar((*(*_self_.alloc)._field_data.alloc)._field_boundary, _1a68d484e_getBoundaryVar((*((*_32438_it.alloc)._field_Expr))._field_Model), jule::Any((*_32438_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1a68c4da0_optimizeChild(_self_, (*_32438_it.alloc)._field_Scope);
	if (_1a68d7445_Iter) {
		{
			auto &_match_expr{ (*((*(_32438_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1aa4c862b:;
				{
					jule::Ptr<_1a59ed5b2_CastingExprModel> _3369_cem = (*((*(_32438_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a59ed5b2_CastingExprModel>();;
					jule::Ptr<_1a5b5892b_Prim> _3375_eprim = _1a5b534a3_Prim((*(_3369_cem))._field_ExprKind.ptr());;
					if (((_3375_eprim == nullptr) || (!(_1a5b5bdb3_IsStr(_3375_eprim.ptr()))))) {
						goto _match_end_1aa4c85b5;
					};
					jule::Ptr<_1a5b5ce2a_Slc> _3419_s = _1a5b54509_Slc((*_3369_cem.alloc)._field_Kind.ptr());;
					if ((_3419_s == nullptr)) {
						goto _match_end_1aa4c85b5;
					};
					jule::Ptr<_1a5b5892b_Prim> _3455_prim = _1a5b534a3_Prim((*(_3419_s))._field_Elem.ptr());;
					if ((_3455_prim == nullptr)) {
						goto _match_end_1aa4c85b5;
					};
					{
						
						if (_1a5b5a323_IsU8(_3455_prim.ptr())) {
							_case_begin_1aa4cbed1:;
							{
								(*_32438_it.alloc)._field_Expr=(*_3369_cem.alloc)._field_Expr;
							}
						}
						else if (_1a5b59d06_IsI32(_3455_prim.ptr())) {
							_case_begin_1aa4cc168:;
							{
								static__1a68c7d5e_optimizeData(&((*((*_3369_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1a68c11dc_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c799b670_StrRuneIter>(_1c799b670_StrRuneIter{._field_Expr=(*_3369_cem.alloc)._field_Expr, ._field_Base=_32438_it}), &__jule_any_type121));
								return;;
							}
						}
						_match_end_1aa4cbd05:;
					};
				}
			}
			_match_end_1aa4c85b5:;
		};
	};
	static__1a68c7d5e_optimizeData(&((*(*_32438_it.alloc)._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1a68c2e58_optimizeWhileIter(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a4d139_WhileIter> _36938_it) {
	static__1a68c7d5e_optimizeData(&((*(_36938_it))._field_Expr), &((*(_self_))._field_data));
	_1a68c4ae7_optimizeStmt(_self_, (*_36938_it.alloc)._field_Next);
	_1a68c4da0_optimizeChild(_self_, (*_36938_it.alloc)._field_Scope);
}



inline jule::Bool _1a68c3299_substr(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a5034a_Assign> _37527_a) {
	if (((*((*(_37527_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37527_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1aa4d1ed6:;
			{
				jule::Ptr<_1a5a00bad_SlicingExprModel> _3818_sem = (*((*(_37527_a))._field_Right))._field_Model.unsafe_cast_ptr<_1a5a00bad_SlicingExprModel>();;
				if (_1c7998150_equalModels((*((*_37527_a.alloc)._field_Left))._field_Model, (*(_3818_sem))._field_Expr)) {
					_1a68c11dc_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c799a361_MutSlicingExprModel>(_1c799a361_MutSlicingExprModel{._field_Token=(*_3818_sem.alloc)._field_Token, ._field_Expr=(*_3818_sem.alloc)._field_Expr, ._field_Left=(*_3818_sem.alloc)._field_Left, ._field_Right=(*_3818_sem.alloc)._field_Right}), &__jule_any_type122));
					return true;;
				};
			}
		}
		_match_end_1aa4d1e70:;
	};
	return false;;
}



inline jule::Bool _1a68c35da_strAssign(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a5034a_Assign> _39530_a) {
	if ((!(_1a68d6884_Str))) {
		return false;;
	};
	jule::Ptr<_1a5b5892b_Prim> _3993_lp = _1a5b534a3_Prim((*((*(_39530_a))._field_Left))._field_Kind.ptr());;
	if (((_3993_lp == nullptr) || (!(_1a5b5bdb3_IsStr(_3993_lp.ptr()))))) {
		return false;;
	};
	return _1a68c3299_substr(_self_, _39530_a);;
}



inline jule::Bool _1a68c392b_sliceAssign(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a5034a_Assign> _40632_a) {
	if (((!(_1a68d6b2b_Slice)) || (_1a5b54509_Slc((*((*(_40632_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1a68c3299_substr(_self_, _40632_a);;
}



inline void _1a68c3bd4_optimizePostfix(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a4ed94_Postfix> _41436_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1a68d4002_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(_41436_postfix))._field_Expr);
	};
	static__1a68c7d5e_optimizeData(&((*_41436_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1a68c3e8c_optimizeAssign(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a5034a_Assign> _42135_assign) {
	if ((((*((*(_42135_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1c7998150_equalModels((*((*_42135_assign.alloc)._field_Left))._field_Model, (*((*_42135_assign.alloc)._field_Right))._field_Model))) {
		_1a68c13da_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1a68d42bb_isBoundaryRiskyType((*(*_42135_assign.alloc)._field_Left.alloc)._field_Kind)) {
			_1a68d4002_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(*_42135_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
		if (_1c799e134_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42135_assign.alloc)._field_Right.alloc)._field_Model)) {
			if (_1c799e3ed_isNilValidType((*(*_42135_assign.alloc)._field_Left.alloc)._field_Kind)) {
				;
				_1c799d1ee_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1c799e73e_getNilVar((*(*_42135_assign.alloc)._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1c799dc6b_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42135_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1a5b50d52_TypeKind> _4458_kind = _1a68ce5d5_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42135_assign.alloc)._field_Right.alloc)._field_Kind, (*(*_42135_assign.alloc)._field_Right.alloc)._field_Model);;
		if ((_4458_kind != nullptr)) {
			if (_1a68ce1a6_isDynamicValidType((*(*_42135_assign.alloc)._field_Left.alloc)._field_Kind)) {
				_1a68cd271_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1a68ce926_getDynamicVar((*(*_42135_assign.alloc)._field_Left.alloc)._field_Model), _4458_kind);
			};
		} else {
			_1a68cdd98_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42135_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1a68c35da_strAssign(_self_, _42135_assign) || _1a68c392b_sliceAssign(_self_, _42135_assign)) {
			_case_begin_1aa4e4d73:;
			{
				return;;
			}
		}
		_match_end_1aa4e314b:;
	};
	static__1a68c7d5e_optimizeData(&((*(*_42135_assign.alloc)._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1a68c7d5e_optimizeData(&((*(*_42135_assign.alloc)._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1aa4e6ca9:;
			{
				if (((!(_1a68d5960_Math)) || (_1a5b54a26_Struct((*(*_42135_assign.alloc)._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1aa4e6c43;
				};
				jule::U64 _4714_oldId;
				jule::Str _47111_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*_42135_assign.alloc)._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*_42135_assign.alloc)._field_Op.alloc)._field_Kind;
					_4714_oldId = ___jule_assign_arg;
					_47111_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1aa4e9a59:;
						{
							(*(*_42135_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*_42135_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1aa4e9ac0:;
						{
							(*(*_42135_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*_42135_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1aa4e930b:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:480:5"));;
						}
					}
					_match_end_1aa4e962a:;
				};
				jule::Any _4828_model = jule::Any(jule::new_ptr<_1a59ebe84_BinaryExprModel>(_1a59ebe84_BinaryExprModel{._field_Left=(*_42135_assign.alloc)._field_Left, ._field_Right=(*_42135_assign.alloc)._field_Right, ._field_Op=(*_42135_assign.alloc)._field_Op}), &__jule_any_type111);;
				static__1a68c7d5e_optimizeData(&(_4828_model), &((*_self_.alloc)._field_data));
				{
					auto &_match_expr{ _4828_model };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1aa4eced0:;
						{
							(*_42135_assign.alloc)._field_Right=jule::new_ptr<_1a59eb989_OperandExprModel>((*(*_42135_assign.alloc)._field_Right.alloc));
							(*(*_42135_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
							(*(*_42135_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("=", 1);
							(*(*_42135_assign.alloc)._field_Right.alloc)._field_Model=_4828_model;
							return;;
						}
					}
					_match_end_1aa4ecbc2:;
				};
				(*(*_42135_assign.alloc)._field_Op.alloc)._field_Id=_4714_oldId;
				(*(*_42135_assign.alloc)._field_Op.alloc)._field_Kind=_47111_oldKind;
				return;;
			}
		}
		_match_end_1aa4e6c43:;
	};
	if (_1a68d5663_Append) {
		{
			auto &_match_expr{ (*((*(_42135_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_1aa500b3c:;
				{
					jule::Ptr<_1a5a044db_BuiltinAppendCallExprModel> _5049_m = (*(*_42135_assign.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1a5a044db_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					if ((!(_1a68cbbcb_areSameLvalueExprModel(&((*(*_42135_assign.alloc)._field_Left.alloc)._field_Model), &((*(_5049_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5049_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1aa502105:;
							{
								_1a68c11dc_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c799adbc_PushToSliceExprModel>(_1c799adbc_PushToSliceExprModel{._field_Dest=(*_5049_m.alloc)._field_Dest, ._field_Elems=(*(_5049_m))._field_Elements.unsafe_cast_ptr<_1a59ee33d_SliceExprModel>()}), &__jule_any_type123));
							}
						}
						else {
							_case_begin_1aa502688:;
							{
								_1a68c11dc_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c799b296_AppendToSliceExprModel>(_1c799b296_AppendToSliceExprModel{._field_Dest=(*(*_42135_assign.alloc)._field_Left.alloc)._field_Model, ._field_Slice=(*_5049_m.alloc)._field_Elements}), &__jule_any_type124));
							}
						}
						_match_end_1aa502633:;
					};
				}
			}
			_match_end_1aa500ac6:;
		};
	};
}



inline jule::Bool _1a68c42cd_tryOptimizeSwap(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a50801_MultiAssign>* _52637_assign) {
	if (((((!(_1a68d6dd4_Assign)) || ((*((*(_52637_assign))))._field_Left.len() != 2LL)) || ((*((*(_52637_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_52637_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a5a0264e_TupleExprModel> _53111_tup;;
	{
		auto &_match_expr{ (*((*(_52637_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa506291:;
			{
				_53111_tup=(*((*(_52637_assign))))._field_Right.unsafe_cast_ptr<_1a5a0264e_TupleExprModel>();
			}
		}
		_match_end_1aa50622a:;
	};
	if (((_53111_tup == nullptr) || ((*(_53111_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1c7998150_equalModels((*((*((*(_52637_assign))))._field_Left[0LL]))._field_Model, (*((*(_53111_tup))._field_Datas[0LL]))._field_Model) && _1c7998150_equalModels((*((*((*(_52637_assign))))._field_Left[1LL]))._field_Model, (*((*(_53111_tup))._field_Datas[1LL]))._field_Model))) {
		_1a68c13da_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1c7998150_equalModels((*((*((*(_52637_assign))))._field_Left[0LL]))._field_Model, (*((*(_53111_tup))._field_Datas[1LL]))._field_Model))) || (!(_1c7998150_equalModels((*((*((*(_52637_assign))))._field_Left[1LL]))._field_Model, (*((*(_53111_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1c799910c_SwapExprModel> _5537_model = jule::new_ptr<_1c799910c_SwapExprModel>(_1c799910c_SwapExprModel{._field_Left=(*((*(_52637_assign))))._field_Left[0LL], ._field_Right=(*((*(_52637_assign))))._field_Left[1LL]});;
	static__1a68c7d5e_optimizeData(&((*((*(_5537_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1a68c7d5e_optimizeData(&((*((*_5537_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1a68c11dc_setCurrentStmt(_self_, jule::Any(_5537_model, &__jule_any_type125));
	return true;;
}



inline void _1a68c4586_optimizeMultiAssign(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a50801_MultiAssign> _56340_assign) {
	if (_1a68c42cd_tryOptimizeSwap(_self_, &(_56340_assign))) {
		return;;
	};
	jule::Ptr<_1a5a0264e_TupleExprModel> _5707_tup = static_cast<jule::Ptr<_1a5a0264e_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_56340_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa50ec8e:;
			{
				_5707_tup=(*(_56340_assign))._field_Right.unsafe_cast_ptr<_1a5a0264e_TupleExprModel>();
			}
		}
		_match_end_1aa50ec28:;
	};
	{
		auto expr = &((*(_56340_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa50ddc0:;
		if (it != expr_end) {
			jule::I64 _5758_i = it - expr->begin();
			jule::Ptr<_1a5b19aeb_Data> _57515_l = *it;
			{
				if ((_57515_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1a68d42bb_isBoundaryRiskyType((*_57515_l.alloc)._field_Kind)) {
							_1a68d4002_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*_57515_l.alloc)._field_Model);
						};
					};
					if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
						if (((_5707_tup != nullptr) && _1c799e134_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*_5707_tup.alloc)._field_Datas[_5758_i]))._field_Model))) {
							if (_1c799e3ed_isNilValidType((*_57515_l.alloc)._field_Kind)) {
								;
								_1c799d1ee_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1c799e73e_getNilVar((*_57515_l.alloc)._field_Model), true);
							};
						} else {
							_1c799dc6b_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*_57515_l.alloc)._field_Model);
						};
					};
					if ((((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr) && (_5707_tup != nullptr))) {
						jule::Ptr<_1a5b50d52_TypeKind> _59310_kind = _1a68ce5d5_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_5707_tup.alloc)._field_Datas[_5758_i]))._field_Kind, (*((*_5707_tup.alloc)._field_Datas[_5758_i]))._field_Model);;
						if ((_59310_kind != nullptr)) {
							if (_1a68ce1a6_isDynamicValidType((*_57515_l.alloc)._field_Kind)) {
								_1a68cd271_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1a68ce926_getDynamicVar((*_57515_l.alloc)._field_Model), _59310_kind);
							};
						} else {
							_1a68cdd98_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*_57515_l.alloc)._field_Model);
						};
					};
					static__1a68c7d5e_optimizeData(&((*_57515_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1aa50ddc0:;
			++it;
			_5758_i++;
			goto _iter_begin_1aa50ddc0;
		}
		_iter_end_1aa50ddc0:;
	};
	static__1a68c7d5e_optimizeData(&((*_56340_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1a68c483e_optimizeRet(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a52528_RetSt> _60932_r) {
	static__1a68c7d5e_optimizeData(&((*(_60932_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1a68d718c_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_60932_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa51a98c:;
			{
				goto _match_end_1aa51ad00;
			}
		}
		else {
			_case_begin_1aa51ad55:;
			{
				return;;
			}
		}
		_match_end_1aa51ad00:;
	};
	jule::Ptr<_1a59ede64_FnCallExprModel> _6237_fc = (*_60932_r.alloc)._field_Expr.cast_ptr<_1a59ede64_FnCallExprModel>(&__jule_any_type33);;
	if (((((!((*((*((*(_6237_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6237_fc.alloc)._field_Except == nullptr)) || ((*((*_6237_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1a68ba989_IsForwarded(&((*_6237_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1a68c11dc_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c7998c88_ExceptionalForwardingExprModel>(_1c7998c88_ExceptionalForwardingExprModel{._field_Expr=_6237_fc}), &__jule_any_type120));
}



inline void _1a68c4ae7_optimizeStmt(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Any _63333_stmt) {
	{
		auto &_match_expr{ _63333_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aa51e254:;
			{
				_1a68c4da0_optimizeChild(_self_, _63333_stmt.unsafe_cast_ptr<_1a5a4bc4d_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aa51de9b:;
			{
				_1a68c1bb0_optimizeData(_self_, _63333_stmt.unsafe_cast_ptr<_1a5b19aeb_Data>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa51e2ba:;
			{
				_1a68c1e68_optimizeVar(_self_, _63333_stmt.unsafe_cast_ptr<_1a5ab1ee4_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aa51e331:;
			{
				_1a68c2221_optimizeConditional(_self_, _63333_stmt.unsafe_cast_ptr<_1a5a4c886_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1aa51e397:;
			{
				_1a68c2ba0_optimizeRangeIter(_self_, _63333_stmt.unsafe_cast_ptr<_1a5a4da85_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aa51e41e:;
			{
				_1a68c2e58_optimizeWhileIter(_self_, _63333_stmt.unsafe_cast_ptr<_1a5a4d139_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aa51e496:;
			{
				_1a68c4da0_optimizeChild(_self_, (*(_63333_stmt.unsafe_cast_ptr<_1a5a4cb83_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1aa51e51d:;
			{
				_1a68c3e8c_optimizeAssign(_self_, _63333_stmt.unsafe_cast_ptr<_1a5a5034a_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aa51e595:;
			{
				_1a68c4586_optimizeMultiAssign(_self_, _63333_stmt.unsafe_cast_ptr<_1a5a50801_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aa51e61c:;
			{
				_1a68c28e7_optimizeMatch(_self_, _63333_stmt.unsafe_cast_ptr<_1a5a50e61_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1aa51e694:;
			{
				_1a68c483e_optimizeRet(_self_, _63333_stmt.unsafe_cast_ptr<_1a5a52528_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa51e71b:;
			{
				_1a68c3bd4_optimizePostfix(_self_, _63333_stmt.unsafe_cast_ptr<_1a5a4ed94_Postfix>());
			}
		}
		_match_end_1aa51e111:;
	};
}



inline void _1a68c4da0_optimizeChild(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_, jule::Ptr<_1a5a4bc4d_Scope> _66234_child) {
	jule::Ptr<_1a68c08b2_scopeOptimizer> _6637_so = static__1a68c0e34_new(_66234_child);;
	(*(_6637_so))._field_parent=_self_;
	(*_6637_so.alloc)._field_data=(*(_self_))._field_data;
	_1a68c509d_optimize(_6637_so);
}



inline void _1a68c509d_optimize(jule::Ptr<_1a68c08b2_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1a68c4ae7_optimizeStmt(_self_, (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1aa5276ad:;
	}
	_iter_end_1aa5276ad:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68c08b2_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void static__1a68c7a73_optimize(jule::Any* _3926_model) {
	static__1a68c7d5e_optimizeData(_3926_model, &(_1a68d0097_emptyData));
}



inline void static__1a68c7d5e_optimizeData(jule::Any* _4330_model, jule::Ptr<_1a68d098d_data>* _4353_d) {
	if (_1a69d3a08_exprEnabled) {
		jule::Ptr<_1a68c75cd_exprOptimizer> _468_exop = jule::new_ptr<_1a68c75cd_exprOptimizer>(_1a68c75cd_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_4330_model)), ._field_data=(*(_4353_d))});;
		_1a68cb390_do(_468_exop.ptr());
	};
}



inline jule::Bool _1a68c81a0_selfCmpCond(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel>* _5428_m) {
	if ((!(_1c7998150_equalModels((*((*((*(_5428_m))))._field_Left))._field_Model, (*((*((*(_5428_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_5428_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aa53bc11:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1b916cb41_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1aa53c10c:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1b916cb41_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1aa53aacd:;
			{
				return false;;
			}
		}
		_match_end_1aa53bb9a:;
	};
}



inline jule::Bool _1a68c84e1_boolCond(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel>* _7825_m) {
	jule::Ptr<_1a5b5892b_Prim> _793_lp = _1a5b534a3_Prim((*((*((*(_7825_m))))._field_Left))._field_Kind.ptr());;
	if (((_793_lp == nullptr) || (!(_1a5b5bb2c_IsBool(_793_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7825_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa5414b8:;
			{
				std::swap((*((*(_7825_m))))._field_Left, (*((*(_7825_m))))._field_Right);
			}
		}
		else {
			_case_begin_1aa5406c6:;
			{
				{
					auto &_match_expr{ (*((*((*(_7825_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1aa53e9b1:;
						{
							goto _match_end_1aa540ee0;
						}
					}
					else {
						_case_begin_1aa541045:;
						{
							return false;;
						}
					}
					_match_end_1aa540ee0:;
				};
			}
		}
		_match_end_1aa540671:;
	};
	jule::Ptr<_1b916c16d_Const> _967_c = (*((*((*(_7825_m))))._field_Right))._field_Model.cast_ptr<_1b916c16d_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_7825_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1aa5430d0:;
			{
				if (_1b916e060_ReadBool(_967_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_7825_m))))._field_Left.alloc)._field_Model;
				} else {
					_1b9170649_SetBool(_967_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_967_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1aa543179:;
			{
				if (_1b916e060_ReadBool(_967_c.ptr())) {
					_1b9170649_SetBool(_967_c, true);
					(*((*(_self_))._field_model))=jule::Any(_967_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_7825_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1aa541243:;
		}
		_match_end_1aa543058:;
	};
	return false;;
}



inline jule::Bool _1a68c8832_strCond(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel> _13123_m) {
	jule::Ptr<_1a5b5892b_Prim> _1323_lp = _1a5b534a3_Prim((*((*(_13123_m))._field_Left))._field_Kind.ptr());;
	if (((_1323_lp == nullptr) || (!(_1a5b5bdb3_IsStr(_1323_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_13123_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*_13123_m.alloc)._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_13123_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa549bdb:;
			{
				std::swap((*_13123_m.alloc)._field_Left, (*_13123_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1aa548de9:;
			{
				{
					auto &_match_expr{ (*((*(_13123_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1aa547964:;
						{
							goto _match_end_1aa549713;
						}
					}
					else {
						_case_begin_1aa549768:;
						{
							return false;;
						}
					}
					_match_end_1aa549713:;
				};
			}
		}
		_match_end_1aa548d94:;
	};
	jule::Ptr<_1b916c16d_Const> _1527_c = (*((*_13123_m.alloc)._field_Right))._field_Model.cast_ptr<_1b916c16d_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_13123_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1aa549977:;
			{
				if ((_1b916e2e6_ReadStr(_1527_c.ptr())).empty()) {
					jule::Any _1569_model = jule::Any(jule::new_ptr<_1c79994d6_EmptyCompareExprModel>(_1c79994d6_EmptyCompareExprModel{._field_Expr=(*(*_13123_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1569_model))))));
					goto _match_end_1aa54b715;
				};
				jule::Any _1638_model = jule::Any(jule::new_ptr<_1c7999ccd_StrCompExprModel>(_1c7999ccd_StrCompExprModel{._field_Left=(*(*_13123_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_1527_c, ._field_NotEq=false}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1638_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1aa54b7ae:;
			{
				if ((_1b916e2e6_ReadStr(_1527_c.ptr())).empty()) {
					jule::Any _1719_model = jule::Any(jule::new_ptr<_1c79994d6_EmptyCompareExprModel>(_1c79994d6_EmptyCompareExprModel{._field_Expr=(*(*_13123_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1719_model))))));
					goto _match_end_1aa54b715;
				};
				jule::Any _1788_model = jule::Any(jule::new_ptr<_1c7999ccd_StrCompExprModel>(_1c7999ccd_StrCompExprModel{._field_Left=(*(*_13123_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_1527_c, ._field_NotEq=true}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1788_model))))));
			}
		}
		_match_end_1aa54b715:;
	};
	return true;;
}



inline jule::Bool _1a68c8cd8_tryNeutralElement1(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel>* _18835_m, jule::Ptr<_1b916c16d_Const> _18860_c, jule::Ptr<_1a59eb989_OperandExprModel>* _18872_nc) {
	if (_1b91718e2_IsStr(_18860_c.ptr())) {
		if ((!(_1a68d6884_Str))) {
			return false;;
		};
		if (((_1b916e2e6_ReadStr(_18860_c)).empty() && ((*((*((*(_18835_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_18872_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1a68d5960_Math)) || (_1b916ed30_AsF64(_18860_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_18835_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1aa5553ab:;
			{
				if (((*(_18872_nc)) == (*((*(_18835_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_18872_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_18860_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa55606b:;
			{
				_1b91700d8_SetI64(_18860_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_18860_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1aa5560d2:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_18872_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1aa555e39:;
	};
	return false;;
}



inline jule::Bool _1a68c9129_tryNeutralElement(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel>* _23234_m) {
	{
		auto &_match_expr{ (*((*((*(_23234_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa559558:;
			{
				jule::Ptr<_1b916c16d_Const> _2368_c = (*((*((*(_23234_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1b916c16d_Const>();;
				return _1a68c8cd8_tryNeutralElement1(_self_, _23234_m, _2368_c, &((*((*(_23234_m))))._field_Right));;
			}
		}
		_match_end_1aa5594e2:;
	};
	{
		auto &_match_expr{ (*((*((*(_23234_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa5599cb:;
			{
				jule::Ptr<_1b916c16d_Const> _2418_c = (*((*((*(_23234_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1b916c16d_Const>();;
				return _1a68c8cd8_tryNeutralElement1(_self_, _23234_m, _2418_c, &((*((*(_23234_m))))._field_Left));;
			}
		}
		_match_end_1aa559965:;
	};
	return false;;
}



inline void _1a68c93d2_checkBinaryForBoundary(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel>* _24739_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_24739_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1aa55ce74:;
			{
				jule::Ptr<_1a5a047d8_BuiltinLenCallExprModel> _2538_blc = (*((*((*(_24739_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1a5a047d8_BuiltinLenCallExprModel>();;
				if ((!(_1a68d4585_isBoundaryValidType((*((*(_2538_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_24739_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_24739_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24739_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24739_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1aa5611b9:;
							{
								jule::Ptr<_1b916c16d_Const> _26510_c = jule::new_ptr<_1b916c16d_Const>((*((*((*((*(_24739_m))))._field_Right))._field_Model.cast_ptr<_1b916c16d_Const>(&__jule_any_type19))));;
								_1b91741b9_Sub(_26510_c, (*(static__1b916c5ad_NewI64(1LL))));
								_1a68d2880_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a68d484e_getBoundaryVar((*(*_2538_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_26510_c, &__jule_any_type19));
							}
						}
						_match_end_1aa561153:;
					};
					return;;
				};
				_1a68d2880_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a68d484e_getBoundaryVar((*(*_2538_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_24739_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1aa55ce0d:;
	};
	{
		auto &_match_expr{ (*((*((*(_24739_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1aa55d4c4:;
			{
				jule::Ptr<_1a5a047d8_BuiltinLenCallExprModel> _2768_blc = (*((*((*(_24739_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1a5a047d8_BuiltinLenCallExprModel>();;
				if ((!(_1a68d4585_isBoundaryValidType((*(*(_2768_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_24739_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_24739_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24739_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24739_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1aa567b3d:;
							{
								jule::Ptr<_1b916c16d_Const> _28810_c = jule::new_ptr<_1b916c16d_Const>((*((*((*((*(_24739_m))))._field_Left))._field_Model.cast_ptr<_1b916c16d_Const>(&__jule_any_type19))));;
								_1b91741b9_Sub(_28810_c, (*(static__1b916c5ad_NewI64(1LL))));
								_1a68d2880_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a68d484e_getBoundaryVar((*(*_2768_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_28810_c, &__jule_any_type19));
							}
						}
						_match_end_1aa567ac7:;
					};
					return;;
				};
				_1a68d2880_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1a68d484e_getBoundaryVar((*(*_2768_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_24739_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1aa55d45d:;
	};
}



inline void _1a68c968a_checkBinaryForNil(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel>* _29934_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _3037_var = _1c799e73e_getNilVar((*((*((*(_29934_m))))._field_Left))._field_Model);;
	if ((_3037_var != 0LLU)) {
		if ((!(_1c799e3ed_isNilValidType((*(*((*(_29934_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29934_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1aa56d490:;
				{
					_1c799d1ee_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3037_var, ((*((*((*(_29934_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1aa56d429:;
		};
		return;;
	};
	_3037_var=_1c799e73e_getNilVar((*((*((*(_29934_m))))._field_Right))._field_Model);
	if ((_3037_var != 0LLU)) {
		if ((!(_1c799e3ed_isNilValidType((*(*((*(_29934_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29934_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1aa570b35:;
				{
					_1c799d1ee_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3037_var, ((*(*((*(_29934_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1aa570abe:;
		};
		return;;
	};
}



inline void _1a68c9943_binary(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ebe84_BinaryExprModel> _33122_m) {
	_1a68c93d2_checkBinaryForBoundary(_self_, &(_33122_m));
	_1a68c968a_checkBinaryForNil(_self_, &(_33122_m));
	if (_1a68d6642_Cond) {
		{
			
			if (_1a68c8832_strCond(_self_, _33122_m) || _1a68c84e1_boolCond(_self_, &(_33122_m)) || _1a68c81a0_selfCmpCond(_self_, &(_33122_m))) {
				_case_begin_1aa572a5a:;
				{
					return;;
				}
			}
			_match_end_1aa572939:;
		};
	};
	if (_1a68c9129_tryNeutralElement(_self_, &(_33122_m))) {
		return;;
	};
	if ((!(_1a68d5960_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_33122_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa573891:;
			{
				goto _match_end_1aa573c59;
			}
		}
		else {
			_case_begin_1aa573cae:;
			{
				return;;
			}
		}
		_match_end_1aa573c59:;
	};
	jule::Ptr<_1a5b5892b_Prim> _3643_lp = _1a5b534a3_Prim((*((*(_33122_m))._field_Left))._field_Kind.ptr());;
	if ((_3643_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1a5b5892b_Prim> _3683_rp = _1a5b534a3_Prim((*((*_33122_m.alloc)._field_Right))._field_Kind);;
	if ((_3683_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_33122_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa57692c:;
			{
				jule::Bool _3754_ok;
				jule::U64 _3758_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a68cb813_checkForBitShiftOpt(&((*_33122_m.alloc)._field_Left), &((*_33122_m.alloc)._field_Right));
					_3754_ok = __jule_assign_result.__jule_result_arg0;
					_3758_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3754_ok) {
					(*((*_33122_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*(*_33122_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1b916c16d_Const> _3799_c = (*(*_33122_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b916c16d_Const>(&__jule_any_type19);;
					_1b9170391_SetU64(_3799_c.ptr(), _3758_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1aa576531:;
			{
				jule::Bool _3864_ok;
				jule::U64 _3868_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a68cb813_checkForBitShiftOpt(&((*_33122_m.alloc)._field_Left), &((*_33122_m.alloc)._field_Right));
					_3864_ok = __jule_assign_result.__jule_result_arg0;
					_3868_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3864_ok) {
					(*((*_33122_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*(*_33122_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1b916c16d_Const> _3909_c = (*(*_33122_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b916c16d_Const>(&__jule_any_type19);;
					_1b9170391_SetU64(_3909_c.ptr(), _3868_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aa5765a8:;
			{
				jule::Ptr<_1b916c16d_Const> _3978_c = (*(*_33122_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b916c16d_Const>(&__jule_any_type19);;
				if ((_1b916ed30_AsF64(_3978_c.ptr()) == 2LL)) {
					(*((*_33122_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*(*_33122_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("&", 1);
					_1b91700d8_SetI64(_3978_c, 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1aa576168:;
			{
				return;;
			}
		}
		_match_end_1aa5764ba:;
	};
	jule::Any _4127_model = jule::Any(jule::new_ptr<_1c799a65d_UnsafeBinaryExprModel>(_1c799a65d_UnsafeBinaryExprModel{._field_Node=_33122_m}), &__jule_any_type128);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4127_model))))));
}



inline void _1a68c9beb_unary(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ec35d_UnaryExprModel> _41621_m) {
	if ((!(_1a68d6279_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41621_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa58056d:;
			{
				{
					auto &_match_expr{ (*((*(_41621_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1aa58189e:;
						{
							jule::Ptr<_1a59ec35d_UnaryExprModel> _4249_um = (*((*(_41621_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a59ec35d_UnaryExprModel>();;
							if (((*((*(_4249_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4249_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1aa581838:;
				};
				if ((!(_1a68d5c18_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1c799e3ed_isNilValidType((*(*(_41621_m))._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _4385_var = _1c799e73e_getNilVar((*(*_41621_m.alloc)._field_Expr.alloc)._field_Model);;
					if (_1c799d881_isSafe((*(*(_self_))._field_data.alloc)._field_nils, _4385_var)) {
						jule::Any _44010_model = jule::Any(jule::new_ptr<_1c799b96c_UnsafeDerefExprModel>(_1c799b96c_UnsafeDerefExprModel{._field_Base=_41621_m}), &__jule_any_type129);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_44010_model))))));
						return;;
					};
					_1c799d1ee_pushVar((*(*(_self_))._field_data.alloc)._field_nils, _4385_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aa580bcd:;
			{
				{
					auto &_match_expr{ (*((*(_41621_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1aa587399:;
						{
							jule::Ptr<_1a5ab1ee4_Var> _4509_v = (*((*(_41621_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
							if ((*(_4509_v))._field_Reference) {
								jule::Any _45210_model = jule::Any(jule::new_ptr<_1c799985a_RefExprModel>(_1c799985a_RefExprModel{._field_Var=_4509_v}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_45210_model))))));
							};
						}
					}
					_match_end_1aa587333:;
				};
			}
		}
		_match_end_1aa580b34:;
	};
}



inline void _1a68c9ea4_structureLit(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ecc32_StructLitExprModel> _45928_m) {
	{
		auto expr = &((*(_45928_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa587740:;
		if (it != expr_end) {
			jule::Ptr<_1a59ec88b_StructArgExprModel> _46015_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1a68d42bb_isBoundaryRiskyType((*((*(_46015_arg))._field_Expr))._field_Kind)) {
						_1a68d4002_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_46015_arg, &__jule_any_type131));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1c799dc6b_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*_46015_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1a68cdd98_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*_46015_arg.alloc)._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1aa587740:;
			++it;
			goto _iter_begin_1aa587740;
		}
		_iter_end_1aa587740:;
	};
}



inline void _1a68ca25c_casting(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ed5b2_CastingExprModel> _47523_m) {
	jule::Bool _4763_valid = _1a68ce1a6_isDynamicValidType((*(_47523_m))._field_ExprKind);;
	jule::Uintptr _4773_var = _1a68ce926_getDynamicVar((*((*_47523_m.alloc)._field_Expr))._field_Model);;
	if (((_4763_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1a68cd9ad_isFits((*(*(_self_))._field_data.alloc)._field_dynamic, _4773_var, (*_47523_m.alloc)._field_Kind))) {
		jule::Any _4798_model = jule::Any(jule::new_ptr<_1c799bc69_UnsafeCastingExprModel>(_1c799bc69_UnsafeCastingExprModel{._field_Base=_47523_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4798_model))))));
		(*(_1a68c7358_exprInspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4763_valid)) {
		_1a68cd271_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _4773_var, (*_47523_m.alloc)._field_Kind);
	};
}



inline void _1a68ca5c0_args(_1a68c75cd_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1a5a0bc30_ParamIns>> _48920_params, jule::Slice<jule::Any>* _48946_args) {
	{
		auto expr = _48946_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa59263a:;
		if (it != expr_end) {
			jule::I64 _4908_i = it - expr->begin();
			jule::Any _49015_arg = *it;
			{
				if ((_4908_i < _48920_params.len())) {
					jule::Ptr<_1a5a0bc30_ParamIns> _4929_p = _48920_params[_4908_i];;
					if (((*((*(_4929_p))._field_Decl))._field_Mutable && (*(*_4929_p.alloc)._field_Decl.alloc)._field_Reference)) {
						if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
							if (_1a68d42bb_isBoundaryRiskyType((*_4929_p.alloc)._field_Kind)) {
								_1a68d4002_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _49015_arg);
							};
						};
						if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
							_1c799dc6b_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _49015_arg);
						};
						if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
							_1a68cdd98_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _49015_arg);
						};
					};
				};
			}
			_iter_next_1aa59263a:;
			++it;
			_4908_i++;
			goto _iter_begin_1aa59263a;
		}
		_iter_end_1aa59263a:;
	};
}



inline void _1a68ca878_scope(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a5a4bc4d_Scope>* _51022_s) {
	jule::Ptr<_1a68c08b2_scopeOptimizer> _5117_scopt = static__1a68c0e34_new((*(_51022_s)));;
	(*(_5117_scopt))._field_data=(*(_self_))._field_data;
	_1a68c509d_optimize(_5117_scopt);
}



inline void _1a68cab31_funcCall(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ede64_FnCallExprModel> _51624_m) {
	_1a68ca5c0_args(_self_, (*((*(_51624_m))._field_Func))._field_Params, &((*_51624_m.alloc)._field_Args));
	if (((*_51624_m.alloc)._field_Except != nullptr)) {
		_1a68ca878_scope(_self_, &((*_51624_m.alloc)._field_Except));
	};
}



inline void _1a68cadd9_indexing(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59ee7e4_IndexingExprModel> _52324_m) {
	if ((!(_1a68d5c18_Access))) {
		return;;
	};
	jule::Bool _5283_array = (_1a5b54273_Arr((*((*(_52324_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_5283_array && _1a5b1a503_IsConst((*_52324_m.alloc)._field_Index.ptr()))) {
		jule::Any _5318_model = jule::Any(jule::new_ptr<_1c799a9e3_UnsafeIndexingExprModel>(_1c799a9e3_UnsafeIndexingExprModel{._field_Node=_52324_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5318_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1a68d4585_isBoundaryValidType((*(*_52324_m.alloc)._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _5374_var = _1a68d484e_getBoundaryVar((*(*_52324_m.alloc)._field_Expr.alloc)._field_Model);;
		if (_1a68d30bc_fitsMaxSize((*(*(_self_))._field_data.alloc)._field_boundary, _5374_var, (*(*_52324_m.alloc)._field_Index.alloc)._field_Model)) {
			jule::Any _5399_model = jule::Any(jule::new_ptr<_1c799a9e3_UnsafeIndexingExprModel>(_1c799a9e3_UnsafeIndexingExprModel{._field_Node=_52324_m}), &__jule_any_type133);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5399_model))))));
			return;;
		};
		_1a68d2880_pushVar((*(*(_self_))._field_data.alloc)._field_boundary, _5374_var, (*(*_52324_m.alloc)._field_Index.alloc)._field_Model);
	};
}



inline void _1a68cb192_anonFunc(_1a68c75cd_exprOptimizer* _self_, jule::Ptr<_1a59eec9a_AnonFnExprModel> _54724_m) {
	_1a68ca878_scope(_self_, &((*((*(_54724_m))._field_Func))._field_Scope));
}



inline void _1a68cb390_do(_1a68c75cd_exprOptimizer* _self_) {
	_1a68b4a4e_Inspect(_1a68c7358_exprInspector.ptr(), (*((*(_self_))._field_model)), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1aa5a1759, jule::Ptr<__jule_anon_1aa5a1759_ctx>::make(__jule_anon_1aa5a1759_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa5a1759_ctx_handler));
}





std::ostream &operator<<(std::ostream &_Stream, _1a68c75cd_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68cc9bd_dynamicVar _Src) {
	_Stream << "dynamicVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline void _1a68cd271_pushVar(jule::Ptr<_1a68ccd0e_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1a5b50d52_TypeKind> _3242_kind) {
	if (((!(_1a68d76ed_Dynamic)) || (_3224_var == 0LLU))) {
		return;;
	};
	_3242_kind=_1a68ce5d5_isTypeGuaranteedDynamicData(&(_self_), _3242_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5b11c5:;
		if (it != expr_end) {
			_1a68cc9bd_dynamicVar _3815_v = *it;
			{
				if ((_3815_v._field_var == _3224_var)) {
					_3815_v._field_kind=_3242_kind;
					return;;
				};
			}
			_iter_next_1aa5b11c5:;
			++it;
			goto _iter_begin_1aa5b11c5;
		}
		_iter_end_1aa5b11c5:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5b1b87:;
		if (it != expr_end) {
			_1a68cc9bd_dynamicVar _4515_v = *it;
			{
				if ((_4515_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3224_var;
						jule::Ptr<_1a5b50d52_TypeKind> _1___jule_assign_arg = _3242_kind;
						_4515_v._field_var = ___jule_assign_arg;
						_4515_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1aa5b1b87:;
			++it;
			goto _iter_begin_1aa5b1b87;
		}
		_iter_end_1aa5b1b87:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,jule::Slice<_1a68cc9bd_dynamicVar>::make({_1a68cc9bd_dynamicVar{._field_var=_3224_var, ._field_kind=_3242_kind}}));
}



inline jule::Bool _1a68cd5b2_removeVar(_1a68ccd0e_dynamic* _self_, jule::Uintptr _5525_var) {
	if ((_5525_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa5b3d21:;
			if (it != expr_end) {
				_1a68cc9bd_dynamicVar _5716_v = *it;
				{
					if ((_5716_v._field_var == _5525_var)) {
						_5716_v._field_var=0LLU;
						_5716_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1aa5b3d21:;
				++it;
				goto _iter_begin_1aa5b3d21;
			}
			_iter_end_1aa5b3d21:;
		};
	};
	return false;;
}



inline jule::Bool _1a68cd9ad_isFits(_1a68ccd0e_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1a5b50d52_TypeKind> _6936_kind) {
	if ((_6922_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa5b56a2:;
			if (it != expr_end) {
				_1a68cc9bd_dynamicVar _7111_v = *it;
				{
					if ((_7111_v._field_var == _6922_var)) {
						return ((_7111_v._field_kind != nullptr) && _1a5b5155b_Equal(_7111_v._field_kind, _6936_kind));;
					};
				}
				_iter_next_1aa5b56a2:;
				++it;
				goto _iter_begin_1aa5b56a2;
			}
			_iter_end_1aa5b56a2:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68ccd0e_dynamic _Src) {
	_Stream << "dynamic{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline _1a68d0493_dataCheckpoint _1a68d0d12_getCheckpoint(_1a68d098d_data* _self_) {
	_1a68d0493_dataCheckpoint _257_c = _1a68d0493_dataCheckpoint{};;
	_257_c._field_boundary._field_vars=jule::append(jule::Slice<_1a68d20cc_boundaryVar>::alloc(0LL, 0LL),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_257_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5b752d:;
		if (it != expr_end) {
			jule::I64 _277_i = it - expr->begin();
			{
				_257_c._field_boundary._field_vars[_277_i]._field_maxSize=jule::append(jule::Slice<jule::Any>::alloc(0LL, 0LL, jule::Any(nullptr)),_257_c._field_boundary._field_vars[_277_i]._field_maxSize);
			}
			_iter_next_1aa5b752d:;
			++it;
			_277_i++;
			goto _iter_begin_1aa5b752d;
		}
		_iter_end_1aa5b752d:;
	};
	_257_c._field_nils._field_vars=jule::append(jule::Slice<_1c799c94b_nilVar>::alloc(0LL, 0LL),(*((*(_self_))._field_nils))._field_vars);
	_257_c._field_dynamic._field_vars=jule::append(jule::Slice<_1a68cc9bd_dynamicVar>::alloc(0LL, 0LL),(*((*(_self_))._field_dynamic))._field_vars);
	return _257_c;;
}



inline void _1a68d10ba_loadCheckpoint(_1a68d098d_data* _self_, _1a68d0493_dataCheckpoint* _3535_c) {
	(*((*(_self_))._field_boundary))=(*(_3535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3535_c))._field_dynamic;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68d098d_data _Src) {
	_Stream << "data{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68d20cc_boundaryVar _Src) {
	_Stream << "boundaryVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "maxSize:" << _Src._field_maxSize;
	_Stream << "}";
	return _Stream;
}



inline void _1a68d2880_pushVar(_1a68d241d_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1a68d5c18_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1a68d3485_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5cb630:;
		if (it != expr_end) {
			_1a68d20cc_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa5cc39a:;
						if (it != expr_end) {
							jule::I64 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1a68d3bc2_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1aa5cc39a:;
							++it;
							_349_i++;
							goto _iter_begin_1aa5cc39a;
						}
						_iter_end_1aa5cc39a:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1aa5cb630:;
			++it;
			goto _iter_begin_1aa5cb630;
		}
		_iter_end_1aa5cb630:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5cbe6b:;
		if (it != expr_end) {
			_1a68d20cc_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1aa5cbe6b:;
			++it;
			goto _iter_begin_1aa5cbe6b;
		}
		_iter_end_1aa5cbe6b:;
	};
	{ jule::Slice<_1a68d20cc_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1a68d20cc_boundaryVar{._field_var=_2423_var, ._field_maxSize=jule::Slice<jule::Any>::make({_2441_maxSize})}); };
}



inline jule::Bool _1a68d30bc_fitsMaxSize(_1a68d241d_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa5d1c2e:;
			if (it != expr_end) {
				_1a68d20cc_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1a68d384d_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1aa5d1c2e:;
				++it;
				goto _iter_begin_1aa5d1c2e;
			}
			_iter_end_1aa5d1c2e:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68d241d_boundary _Src) {
	_Stream << "boundary{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a69d3e7b_Optimizer> static__1a69d43ee_New(jule::Ptr<_1a68b0055_IR>* _2621_ir) {
	return jule::new_ptr<_1a69d3e7b_Optimizer>(_1a69d3e7b_Optimizer{._field_ir=(*(_2621_ir))});;
}



inline void _1a69d46a7_optimizeGlobal(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a5ab1ee4_Var>* _3235_v) {
	if ((!((*((*(_3235_v))))._field_Binded))) {
		static__1a68c7a73_optimize(&((*((*((*((*(_3235_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1a69d4960_optimizeFunction(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a5a09cc7_Fn>* _3837_func) {
	if ((*((*(_3837_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3837_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5d6c89:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0cca8_FnIns> _4215_ins = *it;
			{
				jule::Ptr<_1a68c08b2_scopeOptimizer> _438_so = static__1a68c0e34_new((*(_4215_ins))._field_Scope);;
				_1a68c509d_optimize(_438_so);
			}
			_iter_next_1aa5d6c89:;
			++it;
			goto _iter_begin_1aa5d6c89;
		}
		_iter_end_1aa5d6c89:;
	};
}



inline void _1a69d4c18_optimizeStruct(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a59e4d06_Struct>* _4835_s) {
	if ((*((*(_4835_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5d843e:;
		if (it != expr_end) {
			jule::Ptr<_1a59e7a84_StructIns> _5215_ins = *it;
			{
				{
					auto expr = &((*(_5215_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa5d8d35:;
					if (it != expr_end) {
						jule::Ptr<_1a59e6ed4_FieldIns> _5316_f = *it;
						{
							if (((*(_5316_f))._field_Default != nullptr)) {
								static__1a68c7a73_optimize(&((*(*_5316_f.alloc)._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1aa5d8d35:;
						++it;
						goto _iter_begin_1aa5d8d35;
					}
					_iter_end_1aa5d8d35:;
				};
				{
					auto expr = &((*_5215_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa5d9275:;
					if (it != expr_end) {
						jule::Ptr<_1a5a09cc7_Fn> _5816_m = *it;
						{
							_1a69d4960_optimizeFunction(_self_, &(_5816_m));
						}
						_iter_next_1aa5d9275:;
						++it;
						goto _iter_begin_1aa5d9275;
					}
					_iter_end_1aa5d9275:;
				};
			}
			_iter_next_1aa5d843e:;
			++it;
			goto _iter_begin_1aa5d843e;
		}
		_iter_end_1aa5d843e:;
	};
}



inline void _1a69d4ec1_optimizeGlobals(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a5a71c0c_Package>* _6436_p) {
	{
		auto expr = &((*((*(_6436_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5da595:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _6515_f = *it;
			{
				{
					auto expr = &((*(_6515_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa5db398:;
					if (it != expr_end) {
						jule::Ptr<_1a5ab1ee4_Var> _6616_v = *it;
						{
							_1a69d46a7_optimizeGlobal(_self_, &(_6616_v));
						}
						_iter_next_1aa5db398:;
						++it;
						goto _iter_begin_1aa5db398;
					}
					_iter_end_1aa5db398:;
				};
			}
			_iter_next_1aa5da595:;
			++it;
			goto _iter_begin_1aa5da595;
		}
		_iter_end_1aa5da595:;
	};
}



inline void _1a69d5279_optimizeFunctions(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a5a71c0c_Package>* _7238_p) {
	{
		auto expr = &((*((*(_7238_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5db92b:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _7315_f = *it;
			{
				{
					auto expr = &((*(_7315_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa5dc795:;
					if (it != expr_end) {
						jule::Ptr<_1a5a09cc7_Fn> _7416_func = *it;
						{
							_1a69d4960_optimizeFunction(_self_, &(_7416_func));
						}
						_iter_next_1aa5dc795:;
						++it;
						goto _iter_begin_1aa5dc795;
					}
					_iter_end_1aa5dc795:;
				};
			}
			_iter_next_1aa5db92b:;
			++it;
			goto _iter_begin_1aa5db92b;
		}
		_iter_end_1aa5db92b:;
	};
}



inline void _1a69d5532_optimizeStructs(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a5a71c0c_Package>* _8036_p) {
	{
		auto expr = &((*((*(_8036_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5dcd28:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _8115_f = *it;
			{
				{
					auto expr = &((*(_8115_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa5ddb92:;
					if (it != expr_end) {
						jule::Ptr<_1a59e4d06_Struct> _8216_s = *it;
						{
							_1a69d4c18_optimizeStruct(_self_, &(_8216_s));
						}
						_iter_next_1aa5ddb92:;
						++it;
						goto _iter_begin_1aa5ddb92;
					}
					_iter_end_1aa5ddb92:;
				};
			}
			_iter_next_1aa5dcd28:;
			++it;
			goto _iter_begin_1aa5dcd28;
		}
		_iter_end_1aa5dcd28:;
	};
}



inline void _1a69d57da_optimizePackage(_1a69d3e7b_Optimizer* _self_, jule::Ptr<_1a5a71c0c_Package>* _8836_p) {
	_1a69d4ec1_optimizeGlobals(_self_, _8836_p);
	_1a69d5279_optimizeFunctions(_self_, _8836_p);
	_1a69d5532_optimizeStructs(_self_, _8836_p);
}



inline void _1a69d59d8_Optimize(_1a69d3e7b_Optimizer* _self_) {
	_1a69d5c80_detectEnabled();
	if (_1a68d53aa_Deadcode) {
		_1a69cc8ae_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a69d3c7d_scopeEnabled || _1a69d3a08_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa5e0b83:;
			if (it != expr_end) {
				jule::Ptr<_1a5a6dcd6_ImportInfo> _10416_u = *it;
				{
					if ((!((*(_10416_u))._field_Binded))) {
						_1a69d57da_optimizePackage(_self_, &((*_10416_u.alloc)._field_Package));
					};
				}
				_iter_next_1aa5e0b83:;
				++it;
				goto _iter_begin_1aa5e0b83;
			}
			_iter_end_1aa5e0b83:;
		};
		_1a69d57da_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1a68d53aa_Deadcode) {
		_1a69d2287_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a69d3e7b_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1a69d6236_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1a6a0e11b_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::out(_1918_escape);
	jule::out(_1931_text);
	static__1a69d6236_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1a6a10293_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a6a11ae1_LogFlat(_1d1c6d64c_Log* _1421_l) {
	jule::outln((*(_1421_l))._field_Text);
}



inline void static__1a6a11d22_LogError(_1d1c6d64c_Log* _1922_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1922_l))._field_Text);
	static__1a69d6236_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1922_l))._field_Path);
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1b915e0a5_Itoa((*(_1922_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1b915e0a5_Itoa((*(_1922_l))._field_Column));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1d1909be0_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1d190876b_Replace(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1), -1LL);
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _434_row = _1b915e0a5_Itoa((*(_1922_l))._field_Row);;
		jule::out(_434_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_388_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_1d1902a0c_Repeat(jule::Str::lit(" ", 1), _434_row.len()));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_1d1902a0c_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset)));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_1d1902a0c_Repeat(jule::Str::lit(" ", 1), _434_row.len()));
			jule::out(jule::Str::lit(" | ", 3));
			static__1a6a0e11b_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1922_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1a6a12053_Log(_1d1c6d64c_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1aa5e99b1:;
			{
				static__1a6a11ae1_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1aa5ecb18:;
			{
				static__1a6a11d22_LogError(_6417_l);
			}
		}
		_match_end_1aa5eca2a:;
	};
}



inline void static__1a6a12284_PrintLogs(jule::Slice<_1d1c6d64c_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5ed5ec:;
		if (it != expr_end) {
			_1d1c6d64c_Log *_7510_l = it;
			{
				static__1a6a12053_Log(_7510_l);
			}
			_iter_next_1aa5ed5ec:;
			++it;
			goto _iter_begin_1aa5ed5ec;
		}
		_iter_end_1aa5ed5ec:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1b915e0a5_Itoa((*(_7423_logs)).len()));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1a6a11816_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7570bb0_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1a7571386_Time static__1a757173d_Unix(jule::U64 _9117_sec) {
	return _1a7571386_Time{._field_sec=_9117_sec};;
}



inline _1a7571386_Time static__1a757194c_Now(void) {
	return static__1a757173d_Unix(_1a7573476_unix());;
}



inline _1a7570bb0_AbsTime _1a7573135_Abs(_1a7571386_Time* _self_) {
	jule::U64 _1273_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (((_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (365LLU + _1607_leap))) {
		_1647_yDay-=(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1a7570121_mdays[static_cast<jule::I64>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1a7570121_mdays[static_cast<jule::I64>(_1697_months)];
		}
	_iter_next_1aa62b4e8:;
	}
	_iter_end_1aa62b4e8:;;
	_1a7570bb0_AbsTime _1747_t = _1a7570bb0_AbsTime{};;
	_1747_t._field_Year=((((_1547_remYears + (4LLU * _1487_qCycles)) + (100LLU * _1427_cCycles)) + (400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=((_1297_remSecs / 60LLU) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7571386_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6a6b3a9_scopeCoder> static__1a6a6ba19_new(jule::Ptr<_1a757b913_ObjectCoder>* _7321_oc) {
	return jule::new_ptr<_1a6a6b3a9_scopeCoder>(_1a6a6b3a9_scopeCoder{._field_oc=(*(_7321_oc))});;
}



inline void _1aa6c5cbd_iterHead(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4da85_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a68d50ad_Copy && _1a74a7d28_isCopyOptimizable(&((*((*(_8029_it))))._field_Expr)))) {
		(*(_8041_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_8029_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1aa6c9134:;
				{
					jule::Ptr<_1a5ab1ee4_Var> _895_v = (*((*((*(_8029_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
					if ((*(_895_v))._field_Reference) {
						_1a74b8de4_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
						goto _match_end_1aa6c9794;
					};
					goto _case_begin_1aa6c97e9;
				}
			}
			else {
				_case_begin_1aa6c97e9:;
				{
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1a74b8de4_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1aa6c9794:;
		};
	} else {
		_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_8041_ref))) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("begin();\n", 9));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_8041_ref))) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("end();\n", 7));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, _8052_begin);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
}



inline void _1a6a6c1e0_rangeIndexIter(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4da85_RangeIter>* _12936_it) {
	_1e9a030bc_StrBuilder _1307_sb = static__1e9a034eb_New(64LL);;
	static__1a74c23a3_iterBegin(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1323_begin = _1e9a04354_Str(&_1307_sb);;
	_1e9a04552_Clear(&_1307_sb);
	static__1a74c297a_iterNext(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1353_next = _1e9a04354_Str(&_1307_sb);;
	jule::Bool _1377_ref = false;;
	_1aa6c5cbd_iterHead(_self_, _12936_it, &(_1377_ref), _1323_begin);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		_1a7584223_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12936_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1aa6d676d, jule::Ptr<__jule_anon_1aa6d676d_ctx>::make(__jule_anon_1aa6d676d_ctx{._self_=_self_,._1377_ref=_1377_ref}).as<jule::Uintptr>(), __jule_anon_1aa6d676d_ctx_handler));
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a757c969_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_12936_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12936_it))))._field_KeyB.alloc)._field_Reference=(_1a68d50ad_Copy && _1a74a81e1_isIterCopyOptimizable(&((*((*(_12936_it))))._field_Expr), &((*((*(_12936_it))))._field_KeyB)));
		_1a7584223_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12936_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1aa6da233, jule::Ptr<__jule_anon_1aa6da233_ctx>::make(__jule_anon_1aa6da233_ctx{._self_=_self_,._12936_it=_12936_it}).as<jule::Uintptr>(), __jule_anon_1aa6da233_ctx_handler));
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a757c969_indent((*_self_.alloc)._field_oc);
	};
	_1a74a70d0_scope(_self_, (*((*(_12936_it))))._field_Scope);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, _1353_next);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		static__1a74c20b7_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_12936_it))))._field_KeyA);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1a757c969_indent((*_self_.alloc)._field_oc);
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1a757c0b7_write((*_self_.alloc)._field_oc, _1323_begin);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	static__1a74c268e_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12936_it))));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a6a6c498_rangeHashmapIter(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4da85_RangeIter>* _19638_it) {
	_1e9a030bc_StrBuilder _1977_sb = static__1e9a034eb_New(64LL);;
	static__1a74c23a3_iterBegin(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _1993_begin = _1e9a04354_Str(&_1977_sb);;
	_1e9a04552_Clear(&_1977_sb);
	static__1a74c297a_iterNext(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _2023_next = _1e9a04354_Str(&_1977_sb);;
	jule::Bool _2047_ref = false;;
	_1aa6c5cbd_iterHead(_self_, _19638_it, &(_2047_ref), _1993_begin);
	if (((*((*(_19638_it))))._field_KeyA != nullptr)) {
		_1a7584223_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19638_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1aa6e9709, jule::Ptr<__jule_anon_1aa6e9709_ctx>::make(__jule_anon_1aa6e9709_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa6e9709_ctx_handler));
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a757c969_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_19638_it))))._field_KeyB != nullptr)) {
		_1a7584223_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19638_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1aa6ebb7e, jule::Ptr<__jule_anon_1aa6ebb7e_ctx>::make(__jule_anon_1aa6ebb7e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa6ebb7e_ctx_handler));
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a757c969_indent((*_self_.alloc)._field_oc);
	};
	_1a74a70d0_scope(_self_, (*((*(_19638_it))))._field_Scope);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, _2023_next);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1a757c0b7_write((*_self_.alloc)._field_oc, _1993_begin);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	static__1a74c268e_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19638_it))));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a6a6c751_strRuneIter(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1c799b670_StrRuneIter> _24332_it) {
	_1e9a030bc_StrBuilder _2447_sb = static__1e9a034eb_New(64LL);;
	static__1a74c23a3_iterBegin(&(_2447_sb), static_cast<jule::Uintptr>((*(_24332_it))._field_Base));
	jule::Str _2463_begin = _1e9a04354_Str(&_2447_sb);;
	_1e9a04552_Clear(&_2447_sb);
	static__1a74c297a_iterNext(&(_2447_sb), static_cast<jule::Uintptr>((*_24332_it.alloc)._field_Base));
	jule::Str _2493_next = _1e9a04354_Str(&_2447_sb);;
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	jule::Bool _2557_ref = false;;
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1a68d50ad_Copy && _1a74a7d28_isCopyOptimizable(&((*_24332_it.alloc)._field_Expr)))) {
		_2557_ref=true;
		{
			auto &_match_expr{ (*((*(_24332_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1aa709a8d:;
				{
					jule::Ptr<_1a5ab1ee4_Var> _2615_v = (*((*(_24332_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
					if ((*(_2615_v))._field_Reference) {
						_1a74b8de4_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1aa70a1ed;
					};
					goto _case_begin_1aa70a253;
				}
			}
			else {
				_case_begin_1aa70a253:;
				{
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1a74b8de4_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1aa70a1ed:;
		};
	} else {
		_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("char *it = expr", 15));
	if (_2557_ref) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("operator char*();\n", 18));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("const char *end = it + expr", 27));
	if (_2557_ref) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("len();\n", 7));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	if (((*((*_24332_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1a7584223_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24332_it.alloc)._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1aa7158ac, jule::Ptr<__jule_anon_1aa7158ac_ctx>::make(__jule_anon_1aa7158ac_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa7158ac_ctx_handler));
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a757c969_indent((*_self_.alloc)._field_oc);
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("std::size_t len;\n", 17));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	if (((*(*_24332_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		_1a7584223_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24332_it.alloc)._field_Base.alloc)._field_KeyB), nullptr);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a757c969_indent((*_self_.alloc)._field_oc);
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, _2463_begin);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("std::tie(", 9));
	if (((*(*_24332_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		static__1a74c20b7_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24332_it.alloc)._field_Base.alloc)._field_KeyB);
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("std::ignore", 11));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", len) = jule::utf8_decode_rune_str(it, end - it", 48));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a74a70d0_scope(_self_, (*(*_24332_it.alloc)._field_Base.alloc)._field_Scope);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, _2493_next);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("it += len;\n", 11));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	if (((*(*_24332_it.alloc)._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1a74c20b7_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24332_it.alloc)._field_Base.alloc)._field_KeyA);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1a757c969_indent((*_self_.alloc)._field_oc);
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1a757c0b7_write((*_self_.alloc)._field_oc, _2463_begin);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a6a6ca09_ifCase(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4c16b_If> _35127_i) {
	if (((*(_35127_i))._field_Expr != nullptr)) {
		_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_35127_i.alloc)._field_Expr);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	};
	_1a74a70d0_scope(_self_, (*_35127_i.alloc)._field_Scope);
}



inline void _1a6a6ccb2_conditional(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4c886_Conditional> _36032_c) {
	jule::Bool _3617_writed = false;;
	{
		auto expr = &((*(_36032_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa72a817:;
		if (it != expr_end) {
			jule::Ptr<_1a5a4c16b_If> _36215_elif = *it;
			{
				if ((_36215_elif == nullptr)) {
					goto _iter_next_1aa72a817;
				};
				if (_3617_writed) {
					_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3617_writed=true;
				_1a6a6ca09_ifCase(_self_, _36215_elif);
			}
			_iter_next_1aa72a817:;
			++it;
			goto _iter_begin_1aa72a817;
		}
		_iter_end_1aa72a817:;
	};
	if (((*_36032_c.alloc)._field_Default != nullptr)) {
		if (_3617_writed) {
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" else ", 6));
		};
		_1a74a70d0_scope(_self_, (*(*_36032_c.alloc)._field_Default.alloc)._field_Scope);
	};
}



inline void _1a6a6d06a_infIter(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4cb83_InfIter> _38028_it) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a74a70d0_scope(_self_, (*(_38028_it))._field_Scope);
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	static__1a74c297a_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38028_it));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	static__1a74c268e_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38028_it));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a6a6d323_whileIter(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4d139_WhileIter> _39730_it) {
	if ((((*(_39730_it))._field_Expr != nullptr) && ((*_39730_it.alloc)._field_Next == nullptr))) {
		_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39730_it.alloc)._field_Expr);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39730_it))._field_Expr != nullptr)) {
			_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39730_it.alloc)._field_Expr);
		};
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
		if (((*_39730_it.alloc)._field_Next != nullptr)) {
			_1a74a6b4b_st(_self_, (*_39730_it.alloc)._field_Next);
		};
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39730_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a74a70d0_scope(_self_, (*_39730_it.alloc)._field_Scope);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	static__1a74c297a_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39730_it));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	static__1a74c268e_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39730_it));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a6a6d5cb_rangeIter(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4da85_RangeIter> _43630_it) {
	{
		
		if ((_1a5b54509_Slc((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa741135:;
			{
				_1a6a6c1e0_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		else if ((_1a5b54273_Arr((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa740ce4:;
			{
				_1a6a6c1e0_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		else if ((_1a5b55043_Map((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa740d5a:;
			{
				_1a6a6c498_rangeHashmapIter(_self_, &(_43630_it));
			}
		}
		else {
			_case_begin_1aa740c7d:;
			{
				_1a6a6c1e0_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		_match_end_1aa740b7e:;
	};
}



inline void _1a6a6d884_cont(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4de1a_ContSt> _44921_c) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a74c297a_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_44921_c))._field_It);
}



inline void _1a6a6db3c_label(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4e5e1_Label> _45422_l) {
	static__1a74c2c66_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45422_l));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":", 1));
}



inline void _1a6a6dde5_gotoSt(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4e9ba_GotoSt> _45923_gt) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a74c2c66_label(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_45923_gt))._field_Label));
}



inline void _1a6a6e19d_postfix(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4ed94_Postfix> _46428_p) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_46428_p))._field_Expr);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	_1a757c0b7_write((*_self_.alloc)._field_oc, (*_46428_p.alloc)._field_Op);
}



inline void _1a6a6e456_assign(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a5034a_Assign> _47127_a) {
	_1a74ae527_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47127_a))._field_Left))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, (*((*_47127_a.alloc)._field_Op))._field_Kind);
	_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_47127_a.alloc)._field_Right))._field_Model);
}



inline void _1a6a6e70e_mapLookupAssign(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50801_MultiAssign>* _47737_a) {
	jule::Ptr<_1a59ee7e4_IndexingExprModel> _4787_iem = (*((*(_47737_a))))._field_Right.cast_ptr<_1a59ee7e4_IndexingExprModel>(&__jule_any_type44);;
	_1a74ae527_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_4787_iem))._field_Expr))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".lookup(", 8));
	_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_4787_iem.alloc)._field_Index))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_47737_a))))._field_Left[0LL] != nullptr)) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47737_a))))._field_Left[0LL]))._field_Model);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_47737_a))))._field_Left[1LL] != nullptr)) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47737_a))))._field_Left[1LL]))._field_Model);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a6a6e9b7_multiAssignTup(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50801_MultiAssign>* _50036_a) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	jule::Ptr<_1a5a0264e_TupleExprModel> _5047_tup = (*((*(_50036_a))))._field_Right.cast_ptr<_1a5a0264e_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_5047_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa7566bc:;
		if (it != expr_end) {
			jule::I64 _5068_i = it - expr->begin();
			jule::Ptr<_1a5b19aeb_Data> _50615_r = *it;
			{
				_1a757c969_indent((*_self_.alloc)._field_oc);
				jule::Ptr<_1a5b19aeb_Data> _5088_l = (*((*(_50036_a))))._field_Left[_5068_i];;
				if ((_5088_l != nullptr)) {
					{
						auto &_match_expr{ (*(_5088_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1aa7594a0:;
							{
								jule::Ptr<_1a5ab1ee4_Var> _51210_v = (*(_5088_l))._field_Model.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
								if (((*(_51210_v))._field_Reference && (!(_1a5ab23bd_IsInitialized(_51210_v))))) {
									static__1a74c20b7_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _51210_v);
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = &(", 5));
									_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_50615_r))._field_Model);
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_50036_a))))._field_Left[_5068_i]=nullptr;
									goto _iter_next_1aa7566bc;
								};
							}
						}
						_match_end_1aa75944a:;
					};
					_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_5088_l.alloc)._field_Kind);
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
					static__1a74c0318_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a6a6ab4a_assignArgName, static_cast<jule::Uintptr>(_5068_i));
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				};
				_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_50615_r.alloc)._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aa7566bc:;
			++it;
			_5068_i++;
			goto _iter_begin_1aa7566bc;
		}
		_iter_end_1aa7566bc:;
	};
	{
		auto expr = &((*((*(_50036_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa760264:;
		if (it != expr_end) {
			jule::I64 _5338_i = it - expr->begin();
			jule::Ptr<_1a5b19aeb_Data> _53315_l = *it;
			{
				if ((_53315_l == nullptr)) {
					goto _iter_next_1aa760264;
				};
				_1a757c969_indent((*_self_.alloc)._field_oc);
				_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_53315_l))._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				static__1a74c0318_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a6a6ab4a_assignArgName, static_cast<jule::Uintptr>(_5338_i));
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aa760264:;
			++it;
			_5338_i++;
			goto _iter_begin_1aa760264;
		}
		_iter_end_1aa760264:;
	};
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1a6a6ec70_multiAssignFn(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50801_MultiAssign>* _54935_a) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	jule::Ptr<_1a59ede64_FnCallExprModel> _5547_f = (*((*(_54935_a))))._field_Right.cast_ptr<_1a59ede64_FnCallExprModel>(&__jule_any_type33);;
	_1a7596851_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_5547_f))._field_Func))._field_Result));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_54935_a))))._field_Right);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1a5b5da1e_Tuple> _5607_tup = _1a5b552c9_Tup((*(*_5547_f.alloc)._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_54935_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa769b42:;
		if (it != expr_end) {
			jule::I64 _5618_i = it - expr->begin();
			jule::Ptr<_1a5b19aeb_Data> _56115_l = *it;
			{
				if ((_56115_l != nullptr)) {
					;
					_1a757c969_indent((*_self_.alloc)._field_oc);
					_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_56115_l.alloc)._field_Model);
					{
						
						if (_1a5b5155b_Equal((*(_5607_tup))._field_Types[_5618_i], (*_56115_l.alloc)._field_Kind)) {
							_case_begin_1aa775e5b:;
							{
								_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_5618_i));
							}
						}
						else if (_1a68bb061_IsAny(&((*_56115_l.alloc)._field_Kind))) {
							_case_begin_1aa772d6a:;
							{
								_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_5618_i));
								_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_1a757d77d_pushAnyType((*_self_.alloc)._field_oc, (*(_5607_tup))._field_Types[_5618_i])));
								_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1aa76b1a4:;
							{
								if ((_1a5b54cac_Trait((*(_5607_tup))._field_Types[_5618_i].ptr()) != nullptr)) {
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
									jule::Ptr<_1a5a1d181_Trait> _58011_t1 = _1a5b54cac_Trait((*_56115_l.alloc)._field_Kind.ptr());;
									jule::Ptr<_1a5a1d181_Trait> _58111_t2 = _1a5b54cac_Trait((*_5607_tup.alloc)._field_Types[_5618_i].ptr());;
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_5618_i));
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".map<", 5));
									static__1a74c112c_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _58011_t1);
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
									_1a757e152_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _58011_t1, _58111_t2);
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1aa76c1c7;
								};
								jule::Ptr<_1a5a1d181_Trait> _5916_t = _1a5b54cac_Trait((*_56115_l.alloc)._field_Kind);;
								_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
								_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_5618_i));
								_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
								static__1a74c112c_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _5916_t);
								_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
								_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_1a68bd9c0_FindTraitTypeOffset(_5916_t, (*_5607_tup.alloc)._field_Types[_5618_i])));
								_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1aa76c1c7:;
					};
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1aa769b42:;
			++it;
			_5618_i++;
			goto _iter_begin_1aa769b42;
		}
		_iter_end_1aa769b42:;
	};
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1a6a70028_multiAssign(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50801_MultiAssign> _60932_a) {
	{
		auto expr = &((*(_60932_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa77b99a:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> _61215_d = *it;
			{
				_1a7584223_varInitExpr((*(_self_))._field_oc, &(_61215_d), nullptr);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
				_1a757c969_indent((*_self_.alloc)._field_oc);
			}
			_iter_next_1aa77b99a:;
			++it;
			goto _iter_begin_1aa77b99a;
		}
		_iter_end_1aa77b99a:;
	};
	{
		auto &_match_expr{ (*(_60932_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1aa77c1b5:;
			{
				_1a6a6e70e_mapLookupAssign(_self_, &(_60932_a));
				return;;
			}
		}
		_match_end_1aa77c160:;
	};
	{
		auto &_match_expr{ (*(_60932_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa77e44d:;
			{
				_1a6a6e9b7_multiAssignTup(_self_, &(_60932_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa77db9a:;
			{
				_1a6a6ec70_multiAssignFn(_self_, &(_60932_a));
			}
		}
		else {
			_case_begin_1aa77db34:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:631:4"));;
			}
		}
		_match_end_1aa77dace:;
	};
}



inline jule::Fn<void> _1a6a70369_matchExpr(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50e61_Match> _63530_m) {
	if ((!(_1a5b1a503_IsConst((*(_63530_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1aa781043, jule::Ptr<__jule_anon_1aa781043_ctx>::make(__jule_anon_1aa781043_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa781043_ctx_handler);;
	};
	if (((!(_1b917165b_IsBool((*(*_63530_m.alloc)._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1b916e060_ReadBool((*(*_63530_m.alloc)._field_Expr.alloc)._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1aa782352, jule::Ptr<__jule_anon_1aa782352_ctx>::make(__jule_anon_1aa782352_ctx{._self_=_self_,._63530_m=_63530_m}).as<jule::Uintptr>(), __jule_anon_1aa782352_ctx_handler);;
	};
	return nullptr;;
}



inline void _1a6a706cc_case(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50e61_Match> _64525_m, jule::Ptr<_1a5a51989_Case> _64540_c) {
	if ((((*(_64540_c))._field_Exprs.len() != 0LL) && (!((*(_64525_m))._field_Comptime)))) {
		if ((((*_64525_m.alloc)._field_Cases.len() > 0LL) && ((*_64525_m.alloc)._field_Cases[0LL] == _64540_c))) {
			_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_64540_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa786477:;
			if (it != expr_end) {
				jule::I64 _6529_i = it - expr->begin();
				jule::Ptr<_1a5b19aeb_Data> _65216_expr = *it;
				{
					{
						
						if ((!((*_64525_m.alloc)._field_TypeMatch))) {
							_case_begin_1aa78ec66:;
							{
								jule::Fn<void> _6556_caseExpr = _1a6a70369_matchExpr(_self_, _64525_m);;
								if (_1a5b1a844_GoodOperand((*_64525_m.alloc)._field_Expr.ptr(), &(_65216_expr))) {
									if ((_6556_caseExpr != nullptr)) {
										_6556_caseExpr();
										_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_65216_expr))._field_Model);
								} else {
									_1a74ae527_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_65216_expr))._field_Model);
									if ((_6556_caseExpr != nullptr)) {
										_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
										_6556_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1aa787159:;
							{
								_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1a5b50d52_TypeKind> _67110_tk = (*(_65216_expr))._field_Model.cast_ptr<_1a5b50d52_TypeKind>(&__jule_any_type84);;
								if ((_1a5b54cac_Trait((*((*_64525_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".type_is(", 9));
									_1a74abb0c_boolean((*(*_self_.alloc)._field_oc.alloc)._field_ec, (_1a5b53739_Sptr((*_65216_expr.alloc)._field_Kind) != nullptr));
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1a74c112c_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a5b54cac_Trait((*(*_64525_m.alloc)._field_Expr.alloc)._field_Kind));
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
									_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_1a68bd9c0_FindTraitTypeOffset(_1a5b54cac_Trait((*(*_64525_m.alloc)._field_Expr.alloc)._field_Kind), (*_65216_expr.alloc)._field_Kind)));
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _6817_j = _1a757d77d_pushAnyType((*_self_.alloc)._field_oc, _67110_tk);;
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_6817_j));
								};
							}
						}
						_match_end_1aa78705a:;
					};
					if ((((*_64540_c.alloc)._field_Exprs.len() - _6529_i) > 1LL)) {
						_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1aa786477:;
				++it;
				_6529_i++;
				goto _iter_begin_1aa786477;
			}
			_iter_end_1aa786477:;
		};
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_64525_m))._field_Default == _64540_c) && ((*_64525_m.alloc)._field_Cases.len() != 0LL))) {
		_1a757c969_indent((*(_self_))._field_oc);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("else ", 5));
	};
	_1a757c56d_addIndent((*(_self_))._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	static__1a74c333d_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_64540_c));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_64540_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1a757c969_indent((*_self_.alloc)._field_oc);
		_1a74a70d0_scope(_self_, (*_64540_c.alloc)._field_Scope);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	};
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a6a70985_matchSt(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a50e61_Match> _71528_m) {
	if ((((*(_71528_m))._field_Cases.len() == 0LL) && ((*_71528_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_71528_m.alloc)._field_Comptime && (((*_71528_m.alloc)._field_Default == nullptr) || ((*((*((*_71528_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	if (((!((*_71528_m.alloc)._field_Comptime)) && (!(_1a5b1a503_IsConst((*_71528_m.alloc)._field_Expr.ptr()))))) {
		if ((_1a68d50ad_Copy && _1a74a7d28_isCopyOptimizable(&((*_71528_m.alloc)._field_Expr)))) {
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(*_71528_m.alloc)._field_Expr.alloc)._field_Model);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" };\n", 4));
		_1a757c969_indent((*_self_.alloc)._field_oc);
	};
	if (((*_71528_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_71528_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa7a27c3:;
			if (it != expr_end) {
				jule::Ptr<_1a5a51989_Case> _74316_c = *it;
				{
					if ((_74316_c == nullptr)) {
						goto _iter_next_1aa7a27c3;
					};
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1a757c969_indent((*_self_.alloc)._field_oc);
					_1a6a706cc_case(_self_, _71528_m, _74316_c);
				}
				_iter_next_1aa7a27c3:;
				++it;
				goto _iter_begin_1aa7a27c3;
			}
			_iter_end_1aa7a27c3:;
		};
	};
	if (((*_71528_m.alloc)._field_Default != nullptr)) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1a6a706cc_case(_self_, _71528_m, (*_71528_m.alloc)._field_Default);
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	static__1a74c3052_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_71528_m));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a6a70c3d_fallSt(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a52182_FallSt> _77023_f) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a74c333d_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_77023_f))._field_DestCase);
}



inline void _1a74a69d6_breakSt(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4e2e4_BreakSt> _77524_b) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_77524_b))._field_It != 0LLU)) {
		static__1a74c268e_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_77524_b.alloc)._field_It);
	} else {
		static__1a74c3052_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_77524_b))._field_Mtch);
	};
}



inline void _1a749eea7_setResult(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a52528_RetSt> _78430_r) {
	if (((*((*((*((*(_78430_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_78430_r.alloc)._field_Expr);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		_1a757c969_indent((*_self_.alloc)._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_78430_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa7ac5e1:;
			{
				jule::Slice<jule::Ptr<_1a5b19aeb_Data>> _7948_datas = (*((*(_78430_r))._field_Expr.unsafe_cast_ptr<_1a5a0264e_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_7948_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa7b12b5:;
					if (it != expr_end) {
						jule::I64 _7958_i = it - expr->begin();
						jule::Ptr<_1a5b19aeb_Data> _79511_data = *it;
						{
							_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_7958_i));
							_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_79511_data))._field_Model);
							_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
							_1a757c969_indent((*_self_.alloc)._field_oc);
						}
						_iter_next_1aa7b12b5:;
						++it;
						_7958_i++;
						goto _iter_begin_1aa7b12b5;
					}
					_iter_end_1aa7b12b5:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa7b0281:;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1a74b8de4_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_78430_r.alloc)._field_Expr);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1aa7aeda7:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:808:4"));;
			}
		}
		_match_end_1aa7aed52:;
	};
}



inline void _1a74a660c_retSt(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a52528_RetSt> _81226_r) {
	if (_1a5a0a24a_IsVoid((*((*(_81226_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*(*_81226_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_81226_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*(*_81226_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_81226_r.alloc)._field_Func.alloc)._field_Result);
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=", 10));
			_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_81226_r.alloc)._field_Expr);
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
		} else {
			_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_81226_r.alloc)._field_Expr);
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_81226_r))._field_Expr != nullptr)) {
		_1a749eea7_setResult(_self_, _81226_r);
	};
	if ((*((*((*_81226_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1a7596851_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*(*_81226_r.alloc)._field_Func.alloc)._field_Result));
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1a703271b_var(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5ab1ee4_Var> _84824_v) {
	if ((!((*(_84824_v))._field_Constant))) {
		_1a75844cb_var((*(_self_))._field_oc, _84824_v);
	};
}



inline void _1a70329b3_mutSlicing(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1c799a361_MutSlicingExprModel> _85431_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_85431_m))._field_Expr);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_2133d9726_Production))) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*_85431_m.alloc)._field_Token));
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_85431_m.alloc)._field_Left);
	if (((*_85431_m.alloc)._field_Right != nullptr)) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_85431_m.alloc)._field_Right);
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1a70358d9_swap(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1c799910c_SwapExprModel> _87125_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_87125_m))._field_Left))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1a74ae527_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_87125_m.alloc)._field_Right))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a7035b2b_exceptionalForwarding(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1c7998c88_ExceptionalForwardingExprModel> _87942_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1a74b120a_pureFuncCall((*(*_self_.alloc)._field_oc.alloc)._field_ec, &((*(_87942_m))._field_Expr));
}



inline void _1a74a6b4b_st(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Any _88523_st) {
	if ((_88523_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _88523_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aa7cd238:;
			{
				_1a74a70d0_scope(_self_, _88523_st.unsafe_cast_ptr<_1a5a4bc4d_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa7cd4be:;
			{
				_1a703271b_var(_self_, _88523_st.unsafe_cast_ptr<_1a5ab1ee4_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aa7cd535:;
			{
				_1a74b8de4_model((*((*(_self_))._field_oc))._field_ec, (*(_88523_st.unsafe_cast_ptr<_1a5b19aeb_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aa7cdc94:;
			{
				_1a6a6ccb2_conditional(_self_, _88523_st.unsafe_cast_ptr<_1a5a4c886_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aa7cdd0a:;
			{
				_1a6a6d06a_infIter(_self_, _88523_st.unsafe_cast_ptr<_1a5a4cb83_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aa7cdd71:;
			{
				_1a6a6d323_whileIter(_self_, _88523_st.unsafe_cast_ptr<_1a5a4d139_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1aa7cddd7:;
			{
				_1a6a6d5cb_rangeIter(_self_, _88523_st.unsafe_cast_ptr<_1a5a4da85_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1aa7cde4d:;
			{
				_1a6a6d884_cont(_self_, _88523_st.unsafe_cast_ptr<_1a5a4de1a_ContSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aa7cdeb4:;
			{
				_1a6a6db3c_label(_self_, _88523_st.unsafe_cast_ptr<_1a5a4e5e1_Label>());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1aa7ce02a:;
			{
				_1a6a6dde5_gotoSt(_self_, _88523_st.unsafe_cast_ptr<_1a5a4e9ba_GotoSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa7ce091:;
			{
				_1a6a6e19d_postfix(_self_, _88523_st.unsafe_cast_ptr<_1a5a4ed94_Postfix>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1aa7ce107:;
			{
				_1a6a6e456_assign(_self_, _88523_st.unsafe_cast_ptr<_1a5a5034a_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aa7ce16d:;
			{
				_1a6a70028_multiAssign(_self_, _88523_st.unsafe_cast_ptr<_1a5a50801_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aa7ce1d4:;
			{
				_1a6a70985_matchSt(_self_, _88523_st.unsafe_cast_ptr<_1a5a50e61_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1aa7ce25b:;
			{
				_1a6a70c3d_fallSt(_self_, _88523_st.unsafe_cast_ptr<_1a5a52182_FallSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1aa7ce2d3:;
			{
				_1a74a69d6_breakSt(_self_, _88523_st.unsafe_cast_ptr<_1a5a4e2e4_BreakSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1aa7ce35a:;
			{
				_1a74a660c_retSt(_self_, _88523_st.unsafe_cast_ptr<_1a5a52528_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1aa7ce3d2:;
			{
				_1a74b661c_pushToSlice((*((*(_self_))._field_oc))._field_ec, _88523_st.unsafe_cast_ptr<_1c799adbc_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1aa7ce459:;
			{
				_1a74b68c5_appendToSlice((*((*(_self_))._field_oc))._field_ec, _88523_st.unsafe_cast_ptr<_1c799b296_AppendToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1aa7ce4d1:;
			{
				_1a70329b3_mutSlicing(_self_, _88523_st.unsafe_cast_ptr<_1c799a361_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1aa7ce558:;
			{
				_1a70358d9_swap(_self_, _88523_st.unsafe_cast_ptr<_1c799910c_SwapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1aa7ce5d0:;
			{
				_1a7035b2b_exceptionalForwarding(_self_, _88523_st.unsafe_cast_ptr<_1c7998c88_ExceptionalForwardingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1aa7ce657:;
			{
				_1a6a6c751_strRuneIter(_self_, _88523_st.unsafe_cast_ptr<_1c799b670_StrRuneIter>());
			}
		}
		else {
			_case_begin_1aa7cd04b:;
			{
				_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1aa7ccdb4:;
	};
}



inline void _1a74a6d27_scopeStmts(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4bc4d_Scope>* _94132_s) {
	{
		auto expr = &((*((*(_94132_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa7dc0e3:;
		if (it != expr_end) {
			jule::Any _94215_st = *it;
			{
				_1a757c969_indent((*(_self_))._field_oc);
				_1a74a6b4b_st(_self_, _94215_st);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aa7dc0e3:;
			++it;
			goto _iter_begin_1aa7dc0e3;
		}
		_iter_end_1aa7dc0e3:;
	};
}



inline void _1a74a70d0_scope(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a4bc4d_Scope> _95026_s) {
	_1a757c56d_addIndent((*(_self_))._field_oc);
	if ((*(_95026_s))._field_Deferred) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1a74a6d27_scopeStmts(_self_, &(_95026_s));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
	if ((*_95026_s.alloc)._field_Deferred) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1a74a7388_commonFuncScope(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _96537_f) {
	if ((!(_1a5a0a24a_IsVoid((*((*(_96537_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1a5b5da1e_Tuple> _9678_tup = _1a5b552c9_Tup((*((*(_96537_f))))._field_Result.ptr());;
		if ((_9678_tup != nullptr)) {
			_1a757c969_indent((*(_self_))._field_oc);
			_1a759617a_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _9678_tup);
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_9678_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1aa7e534e:;
				if (it != expr_end) {
					jule::I64 _97210_i = it - expr->begin();
					jule::Ptr<_1a5b50d52_TypeKind> _97217_t = *it;
					{
						if (_1a75984bd_shouldInitialized(&(_97217_t))) {
							_1a757c969_indent((*_self_.alloc)._field_oc);
							_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_97210_i));
							_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1a74b919c_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, _97217_t);
							_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1aa7e534e:;
					++it;
					_97210_i++;
					goto _iter_begin_1aa7e534e;
				}
				_iter_end_1aa7e534e:;
			};
		} else if (((*((*(*((*(_96537_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1a757c969_indent((*(_self_))._field_oc);
			_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_96537_f))))._field_Result);
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1a75984bd_shouldInitialized(&((*((*(_96537_f))))._field_Result))) {
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1a74b919c_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_96537_f))))._field_Result);
			};
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1a74a6d27_scopeStmts(_self_, &((*((*(_96537_f))))._field_Scope));
	if (((*(*((*(_96537_f))))._field_Decl.alloc)._field_Exceptional && _1a5a0a24a_IsVoid((*((*(_96537_f))))._field_Decl))) {
		_1a757c969_indent((*_self_.alloc)._field_oc);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1a74a76a7_anonFuncScope(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a59eec9a_AnonFnExprModel> _100534_m, jule::Str _100555_ident) {
	if (((*((*(_100534_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _10093_closure = _1a68bb3a2_IsClosure(&(_100534_m));;
	if (_10093_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*(*_self_.alloc)._field_oc.alloc)._field_ec.alloc)._field_varPrefixes,jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1a5ab1ee4_Var>>>::make({jule::__new_closure<jule::Bool,jule::Ptr<_1a5ab1ee4_Var>>((void*)__jule_anon_1aa807350, jule::Ptr<__jule_anon_1aa807350_ctx>::make(__jule_anon_1aa807350_ctx{._self_=_self_,._100534_m=_100534_m}).as<jule::Uintptr>(), __jule_anon_1aa807350_ctx_handler)}));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	if (_10093_closure) {
		_1a757c969_indent((*_self_.alloc)._field_oc);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1a757c0b7_write((*_self_.alloc)._field_oc, _100555_ident);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1a757c0b7_write((*_self_.alloc)._field_oc, _100555_ident);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1a74a7388_commonFuncScope(_self_, &((*_100534_m.alloc)._field_Func));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
	if (_10093_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1a74a7960_funcScope(jule::Ptr<_1a6a6b3a9_scopeCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns> _103730_f) {
	if (((*(_103730_f))._field_Scope == nullptr)) {
		return;;
	};
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a74a7388_commonFuncScope(_self_, &(_103730_f));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1a6a6b3a9_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a74ab1d3_exprCoder> static__1a74ab59b_new(jule::Ptr<_1a757b913_ObjectCoder>* _11421_oc) {
	return jule::new_ptr<_1a74ab1d3_exprCoder>(_1a74ab1d3_exprCoder{._field_oc=(*(_11421_oc)), });;
}



inline void _1a74ab854_string(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1b916c16d_Const>* _12024_c) {
	jule::Str _1213_content = _1b916e2e6_ReadStr((*(_12024_c)).ptr());;
	if ((_1213_content.len() == 0LL)) {
		_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1263_len = _1b915dcdb_FmtInt(static_cast<jule::I64>(_1213_content.len()), 10LL);;
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str", 9));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("::lit(", 6));
	_1a74b9e8e_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1213_content);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1a757c0b7_write((*_self_.alloc)._field_oc, _1263_len);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74abb0c_boolean(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Bool _13524_b) {
	if (_13524_b) {
		_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1a74abd0a_nilLit(jule::Ptr<_1a74ab1d3_exprCoder> _self_) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1a74ac14b_ftoaSpecialCases(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::F64* _14734_x) {
	{
		
		if (_1b9113620_IsNaN((*(_14734_x)))) {
			_case_begin_1aa826e1e:;
			{
				_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1b9113ca2_IsInf((*(_14734_x)), 1LL)) {
			_case_begin_1aa826eb8:;
			{
				_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1b9113ca2_IsInf((*(_14734_x)), -1LL)) {
			_case_begin_1aa827040:;
			{
				_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1aa826d86:;
			{
				return false;;
			}
		}
		_match_end_1aa826c87:;
	};
	return true;;
}



inline void _1a74ac404_float32(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1b916c16d_Const>* _16125_c) {
	jule::F64 _1623_x = _1b916ed30_AsF64((*(_16125_c)).ptr());;
	if (_1a74ac14b_ftoaSpecialCases(_self_, &(_1623_x))) {
		return;;
	};
	{
		
		if ((_1623_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1aa82b154:;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1623_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1aa82a21e:;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1aa82a1a8:;
			{
				_1a74ba335_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1623_x, 32LL);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1aa82a076:;
	};
}



inline void _1a74ac6ac_float64(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1b916c16d_Const>* _18025_c) {
	jule::F64 _1813_x = _1b916ed30_AsF64((*(_18025_c)).ptr());;
	if (_1a74ac14b_ftoaSpecialCases(_self_, &(_1813_x))) {
		return;;
	};
	{
		
		if ((_1813_x == jule::MAX_F64)) {
			_case_begin_1aa82dad5:;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1813_x == jule::MIN_F64)) {
			_case_begin_1aa82d70b:;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1aa82d695:;
			{
				_1a74ba335_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1813_x, 64LL);
			}
		}
		_match_end_1aa82d563:;
	};
}



inline void _1a74ac965_constant(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1b916c16d_Const> _19829_c) {
	{
		
		if (_1b91718e2_IsStr(_19829_c.ptr())) {
			_case_begin_1aa83093e:;
			{
				_1a74ab854_string(_self_, &(_19829_c));
			}
		}
		else if (_1b917165b_IsBool(_19829_c.ptr())) {
			_case_begin_1aa8309a5:;
			{
				_1a74abb0c_boolean(_self_, _1b916e060_ReadBool(_19829_c));
			}
		}
		else if (_1b9171b78_IsF64(_19829_c.ptr())) {
			_case_begin_1aa830a1b:;
			{
				{
					
					if ((*_19829_c.alloc)._field_Kind.equal("f32", 3)) {
						_case_begin_1aa8333e2:;
						{
							_1a74ac404_float32(_self_, &(_19829_c));
						}
					}
					else {
						_case_begin_1aa83305c:;
						{
							_1a74ac6ac_float64(_self_, &(_19829_c));
						}
					}
					_match_end_1aa832e5d:;
				};
			}
		}
		else if (_1b917113e_IsI64(_19829_c.ptr())) {
			_case_begin_1aa830a82:;
			{
				_1a74ba621_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1b916da43_ReadI64(_19829_c));
			}
		}
		else if (_1b91713c5_IsU64(_19829_c.ptr())) {
			_case_begin_1aa830ae8:;
			{
				_1a74ba90c_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1b916dcc9_ReadU64(_19829_c));
			}
		}
		else if (_1b9171e0e_IsNil(_19829_c.ptr())) {
			_case_begin_1aa830b5e:;
			{
				_1a74abd0a_nilLit(_self_);
			}
		}
		else {
			_case_begin_1aa8308c8:;
			{
				_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1aa8307c9:;
	};
}



inline void _1a74acd83_divByZeroBinary(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c80b653c_Token>* _22233_op, jule::Ptr<_1a59eb989_OperandExprModel>* _22250_l, jule::Ptr<_1a59eb989_OperandExprModel>* _22277_r) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_22233_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1aa83659e:;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1aa83703e:;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1aa836ea6:;
	};
	if ((!(_2133d9726_Production))) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1a757e40a_locInfo((*_self_.alloc)._field_oc, _22233_op);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\",", 2));
	};
	_1a74ae527_possibleRefExpr(_self_, (*((*(_22250_l))))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1a74ae527_possibleRefExpr(_self_, (*((*(_22277_r))))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74ad13b_unsafeBinary(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ebe84_BinaryExprModel> _24433_m) {
	if ((((*((*(_24433_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*_24433_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1a68bb061_IsAny(&((*((*_24433_m.alloc)._field_Left))._field_Kind))) {
			if (((!(_1a5b51e30_IsNil((*((*_24433_m.alloc)._field_Right))._field_Kind.ptr()))) && (!(_1a68bb061_IsAny(&((*(*_24433_m.alloc)._field_Right.alloc)._field_Kind)))))) {
				_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*(*_24433_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU))) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _2546_i = _1a757d77d_pushAnyType((*_self_.alloc)._field_oc, (*(*_24433_m.alloc)._field_Right.alloc)._field_Kind);;
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_2546_i));
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("_compare(", 9));
				_1a74ae527_possibleRefExpr(_self_, (*(*_24433_m.alloc)._field_Left.alloc)._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1a74ae527_possibleRefExpr(_self_, (*(*_24433_m.alloc)._field_Right.alloc)._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a74ae527_possibleRefExpr(_self_, (*(*_24433_m.alloc)._field_Left.alloc)._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1a757c0b7_write((*_self_.alloc)._field_oc, (*(*_24433_m.alloc)._field_Op.alloc)._field_Kind);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1a74ae527_possibleRefExpr(_self_, (*(*_24433_m.alloc)._field_Right.alloc)._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74ad3e4_binary(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ebe84_BinaryExprModel> _27527_m) {
	{
		auto &_match_expr{ (*((*(_27527_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1aa8481d7:;
			{
				if ((_1a5b54a26_Struct((*((*(_27527_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1a74acd83_divByZeroBinary(_self_, &((*_27527_m.alloc)._field_Op), &((*_27527_m.alloc)._field_Left), &((*_27527_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1aa84812c:;
	};
	_1a74ad13b_unsafeBinary(_self_, _27527_m);
}



inline void _1a74ad69c_var(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5ab1ee4_Var> _28724_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa84a45e:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1a5ab1ee4_Var>> _28810_prefix = *it;
			{
				if (_28810_prefix(_28724_m)) {
					return;;
				};
			}
			_iter_next_1aa84a45e:;
			++it;
			goto _iter_begin_1aa84a45e;
		}
		_iter_end_1aa84a45e:;
	};
	if ((*(_28724_m))._field_Binded) {
		jule::Ptr<_1a59c3389_Directive> _2944_d = _1a68bc749_FindDirective(&((*_28724_m.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_2944_d != nullptr)) {
			_1a757c370_writeBytes((*_self_.alloc)._field_oc, _1a7589305_concatAllParts((*_2944_d.alloc)._field_Args));
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a74c20b7_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _28724_m);
}



inline void _1a74ad955_structureIns(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59e7a84_StructIns> _30333_m) {
	_1a758eb57_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _30333_m);
}



inline void _1a74adc0d_unary(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ec35d_UnaryExprModel> _30726_m) {
	{
		auto &_match_expr{ (*((*(_30726_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aa84e73d:;
			{
				_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1a74ae527_possibleRefExpr(_self_, (*((*(_30726_m))._field_Expr))._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1aa84ed26:;
			{
				if ((_2133d9726_Production || (_1a5b53739_Sptr((*((*(_30726_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1aa84ec38;
				};
				_1a74ae527_possibleRefExpr(_self_, (*(*_30726_m.alloc)._field_Expr.alloc)._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*_30726_m.alloc)._field_Op));
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1aa84ec38:;
	};
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a757c0b7_write((*_self_.alloc)._field_oc, (*((*(_30726_m))._field_Op))._field_Kind);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a74ae527_possibleRefExpr(_self_, (*((*_30726_m.alloc)._field_Expr))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
}



inline void _1a74adeb6_structureLit(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ecc32_StructLitExprModel> _33133_m) {
	if ((*((*((*(_33133_m))._field_Strct))._field_Decl))._field_Binded) {
		_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1a758eb57_structureIns((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_33133_m.alloc)._field_Strct);
	if ((*(*(*_33133_m.alloc)._field_Strct.alloc)._field_Decl.alloc)._field_Binded) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	if (((*_33133_m.alloc)._field_Args.len() > 0LL)) {
		_julec_label_1aa859eda:;
		{
			auto expr = &((*(*_33133_m.alloc)._field_Strct.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa85a183:;
			if (it != expr_end) {
				jule::I64 _3448_i = it - expr->begin();
				jule::Ptr<_1a59e6ed4_FieldIns> _34411_f = *it;
				{
					{
						auto expr = &((*_33133_m.alloc)._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa85aedb:;
						if (it != expr_end) {
							jule::Ptr<_1a59ec88b_StructArgExprModel> _34517_arg = *it;
							{
								if (((*(_34517_arg))._field_Field == _34411_f)) {
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
									static__1a74c1ccb_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_34517_arg.alloc)._field_Field))._field_Decl));
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
									_1a74ae527_possibleRefExpr(_self_, (*((*_34517_arg.alloc)._field_Expr))._field_Model);
									if ((((*(*_33133_m.alloc)._field_Strct.alloc)._field_Fields.len() - _3448_i) > 1LL)) {
										_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1aa85a183;
								};
							}
							_iter_next_1aa85aedb:;
							++it;
							goto _iter_begin_1aa85aedb;
						}
						_iter_end_1aa85aedb:;
					};
				}
				_iter_next_1aa85a183:;
				++it;
				_3448_i++;
				goto _iter_begin_1aa85a183;
			}
			_iter_end_1aa85a183:;
		};
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a74ae26e_allocStructure(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ed02e_AllocStructLitExprModel> _36235_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1a74c19e0_structureIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_36235_m))._field_Lit))._field_Strct));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1a74adeb6_structureLit(_self_, (*_36235_m.alloc)._field_Lit);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74ae527_possibleRefExpr(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Any _37032_expr) {
	{
		auto &_match_expr{ _37032_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa863345:;
			{
				jule::Ptr<_1a5ab1ee4_Var> _3734_v = _37032_expr.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
				if ((*(_3734_v))._field_Reference) {
					_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1a74b8de4_model(_self_, _37032_expr);
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1aa8632e0:;
	};
	_1a74b8de4_model(_self_, _37032_expr);
}



inline void _1a74ae945_castTraitFromTrait(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ed5b2_CastingExprModel>* _38440_m, jule::Ptr<_1a5a1d181_Trait> _38466_t1, jule::Ptr<_1a5a1d181_Trait> _38482_t2) {
	_1a74ae527_possibleRefExpr(_self_, (*((*((*(_38440_m))))._field_Expr))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1a757e152_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _38466_t1, _38482_t2);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74aebed_casting(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ed5b2_CastingExprModel> _39728_m) {
	{
		
		if (_1a68bb061_IsAny(&((*(_39728_m))._field_Kind))) {
			_case_begin_1aa867e0a:;
			{
				if (_1a5b51e30_IsNil((*_39728_m.alloc)._field_ExprKind.ptr())) {
					_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1a5b53edc_TypeEnum((*_39728_m.alloc)._field_ExprKind) != nullptr)) {
					_1a74ae527_possibleRefExpr(_self_, (*((*_39728_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _4084_i = _1a757d77d_pushAnyType((*_self_.alloc)._field_oc, (*_39728_m.alloc)._field_ExprKind);;
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_39728_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1aa86ae0d:;
						{
							jule::Ptr<_1a5b5892b_Prim> _4125_prim = _1a5b534a3_Prim((*_39728_m.alloc)._field_ExprKind);;
							if (((_4125_prim != nullptr) && _1b916b502_IsInt((*_4125_prim.alloc)._field_Kind))) {
								_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
								_1a758c3c4_prim((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _4125_prim);
								_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
								_1a74ae527_possibleRefExpr(_self_, (*(*_39728_m.alloc)._field_Expr.alloc)._field_Model);
								_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1aa86bcdd;
							};
							goto _case_begin_1aa86bd43;
						}
					}
					else {
						_case_begin_1aa86bd43:;
						{
							_1a74ae527_possibleRefExpr(_self_, (*(*_39728_m.alloc)._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1aa86bcdd:;
				};
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_4084_i));
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1a68bb061_IsAny(&((*(_39728_m))._field_ExprKind))) {
			_case_begin_1aa867ea4:;
			{
				_1a74ae527_possibleRefExpr(_self_, (*((*_39728_m.alloc)._field_Expr))._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a5b53739_Sptr((*_39728_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1a5b53739_Sptr((*_39728_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39728_m.alloc)._field_Kind);
				};
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2133d9726_Production))) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*_39728_m.alloc)._field_Token));
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_1a757d77d_pushAnyType((*_self_.alloc)._field_oc, (*_39728_m.alloc)._field_Kind)));
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a5b539c0_Ptr((*(_39728_m))._field_ExprKind.ptr()) != nullptr) || (_1a5b539c0_Ptr((*_39728_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa86801a:;
			{
				_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39728_m.alloc)._field_Kind);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")(", 2));
				_1a74ae527_possibleRefExpr(_self_, (*((*_39728_m.alloc)._field_Expr))._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1a5b54cac_Trait((*(_39728_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1aa868081:;
			{
				if ((_1a5b54cac_Trait((*_39728_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a74ae945_castTraitFromTrait(_self_, &(_39728_m), _1a5b54cac_Trait((*_39728_m.alloc)._field_Kind), _1a5b54cac_Trait((*_39728_m.alloc)._field_ExprKind));
					return;;
				};
				_1a74ae527_possibleRefExpr(_self_, (*((*_39728_m.alloc)._field_Expr))._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1a5b53739_Sptr((*_39728_m.alloc)._field_Kind) != nullptr)) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1a5b53739_Sptr((*_39728_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39728_m.alloc)._field_Kind);
				};
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_2133d9726_Production))) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*_39728_m.alloc)._field_Token));
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1a74c112c_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a5b54cac_Trait((*_39728_m.alloc)._field_ExprKind));
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_1a68bd9c0_FindTraitTypeOffset(_1a5b54cac_Trait((*_39728_m.alloc)._field_ExprKind), (*_39728_m.alloc)._field_Kind)));
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1a5b54cac_Trait((*(_39728_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa8680e7:;
			{
				_1a75918a1_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39728_m.alloc)._field_Kind);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
				_1a74ae527_possibleRefExpr(_self_, (*((*_39728_m.alloc)._field_Expr))._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1a74c112c_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a5b54cac_Trait((*_39728_m.alloc)._field_Kind));
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_1a68bd9c0_FindTraitTypeOffset(_1a5b54cac_Trait((*_39728_m.alloc)._field_Kind), (*_39728_m.alloc)._field_ExprKind)));
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1aa867c84:;
	};
	jule::Ptr<_1a5b5892b_Prim> _4943_prim = _1a5b534a3_Prim((*(_39728_m))._field_Kind.ptr());;
	jule::Ptr<_1a5b5892b_Prim> _4953_eprim = _1a5b534a3_Prim((*_39728_m.alloc)._field_ExprKind.ptr());;
	if ((((_4953_eprim != nullptr) && (_4943_prim != nullptr)) && _1a5b5bdb3_IsStr(_4943_prim))) {
		if (_1a5b5a323_IsU8(_4953_eprim)) {
			_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1a74ae527_possibleRefExpr(_self_, (*((*_39728_m.alloc)._field_Expr))._field_Model);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
	_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39728_m.alloc)._field_Kind);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1a74ae527_possibleRefExpr(_self_, (*(*_39728_m.alloc)._field_Expr.alloc)._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74aeea6_models(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Slice<jule::Any> _51327_args) {
	if ((_51327_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_51327_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa896103:;
		if (it != expr_end) {
			jule::I64 _5178_i = it - expr->begin();
			jule::Any _51715_a = *it;
			{
				_1a74ae527_possibleRefExpr(_self_, _51715_a);
				if (((_51327_args.len() - _5178_i) > 1LL)) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1aa896103:;
			++it;
			_5178_i++;
			goto _iter_begin_1aa896103;
		}
		_iter_end_1aa896103:;
	};
}



inline void _1a74b025e_args(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ede64_FnCallExprModel>* _52526_m) {
	jule::I64 _5267_j = 0LL;;
	if (((((*((*((*(_52526_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_52526_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_52526_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1a5a0891e_IsSelf((*((*(*((*(_52526_m))))._field_Func.alloc)._field_Params[0LL]))._field_Decl.ptr())))) {
		(_5267_j)++;
	};
	{
		auto expr = &((*((*(_52526_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8992c1:;
		if (it != expr_end) {
			jule::I64 _5317_i = it - expr->begin();
			jule::Any _53110_arg = *it;
			{
				jule::Ptr<_1a5a0bc30_ParamIns> _5324_p = (*(*((*(_52526_m))))._field_Func.alloc)._field_Params[_5267_j];;
				if ((((*(_5324_p))._field_Decl != nullptr) && (*(*_5324_p.alloc)._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _53110_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1aa89c0b5:;
							{
								jule::Ptr<_1a5ab1ee4_Var> _5366_v = _53110_arg.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
								if ((*(_5366_v))._field_Reference) {
									_1a74b8de4_model(_self_, _53110_arg);
									goto _julec_label_1aa89ba10;
								};
							}
						}
						_match_end_1aa89c060:;
					};
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1a74b8de4_model(_self_, _53110_arg);
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1aa89ba10;
				};
				_1a74ae527_possibleRefExpr(_self_, _53110_arg);
				_julec_label_1aa89ba10:;
				if ((((*((*(_52526_m))))._field_Args.len() - _5317_i) > 1LL)) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
				(_5267_j)++;
			}
			_iter_next_1aa8992c1:;
			++it;
			_5317_i++;
			goto _iter_begin_1aa8992c1;
		}
		_iter_end_1aa8992c1:;
	};
}



inline void _1a74b0517_modelForCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Any _55633_expr) {
	{
		auto &_match_expr{ _55633_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aa8a1e00:;
			{
				_1a74b3a8c_funcIns(_self_, _55633_expr.unsafe_cast_ptr<_1a5a0cca8_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa8a1c57:;
			{
				jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _5628_ssie = _55633_expr.unsafe_cast_ptr<_1a5a01ad2_StructSubIdentExprModel>();;
				if (((*(_5628_ssie))._field_Method != nullptr)) {
					_1a74b3a8c_funcIns(_self_, (*_5628_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1aa8a1d89:;
	};
	_1a74ae527_possibleRefExpr(_self_, _55633_expr);
}



inline void _1a74b07c0_pushCallInf(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ede64_FnCallExprModel>* _57129_m) {
	if ((_2133d9726_Production || (!((*((*((*(_57129_m))))._field_Func))._field_Anon)))) {
		_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_57129_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_57129_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1aa8a5909:;
				{
					if ((*((*((*((*((*((*(_57129_m))))._field_Expr.unsafe_cast_ptr<_1a5a01ad2_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1aa8a58a4:;
		};
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".call", 5));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(\"", 2));
	_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*((*(_57129_m))))._field_Token));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_57129_m))))._field_Args.len() != 0LL)) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1a74b0b11_isWrapped(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ede64_FnCallExprModel>* _59431_m) {
	if ((((!(_1a5a0e23d_IsBuiltin((*((*(_59431_m))))._field_Func.ptr()))) && ((*((*(*((*(_59431_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1a5a0891e_IsSelf((*(*(*((*(_59431_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_59431_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1aa8aa667:;
				{
					jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _5989_ssie = (*((*(_59431_m))))._field_Expr.unsafe_cast_ptr<_1a5a01ad2_StructSubIdentExprModel>();;
					{
						
						if (_1a5a08ba5_IsRef((*(*(*((*(_59431_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()) || (_1a5b53739_Sptr((*((*(_5989_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1aa8ac34a:;
							{
								goto _match_end_1aa8ab5ad;
							}
						}
						else {
							_case_begin_1aa8ab624:;
							{
								if ((_1a5b54a26_Struct((*((*(_5989_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*_5989_ssie.alloc)._field_Expr.alloc)._field_Lvalue))) {
										_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1a74b8de4_model(_self_, (*(*_5989_ssie.alloc)._field_Expr.alloc)._field_Model);
										_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1aa8ab5ad:;
					};
				}
			}
			_match_end_1aa8aa612:;
		};
	};
	return false;;
}



inline jule::Bool _1a74b0e52_writeReceiver(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Any _61834_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _61834_m };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa8b1e10:;
			{
				_1a74ae527_possibleRefExpr(_self_, (*((*(_61834_m.unsafe_cast_ptr<_1a59ec35d_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1aa8b210d:;
			{
				_1a74ae527_possibleRefExpr(_self_, (*((*((*(_61834_m.unsafe_cast_ptr<_1c799b96c_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aa8b2097:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:627:4"));;
			}
		}
		_match_end_1aa8b2042:;
	};
}



inline void _1a74b120a_pureFuncCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ede64_FnCallExprModel>* _63134_m) {
	jule::Bool _6323_wrapped = _1a74b0b11_isWrapped(_self_, _63134_m);;
	_1a74b0517_modelForCall(_self_, (*((*(_63134_m))))._field_Expr);
	if ((!(_1a5a0e23d_IsBuiltin((*((*(_63134_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_63134_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_63134_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1a68bcb12_HasDirective(&((*(*(*((*(_63134_m))))._field_Func.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_63134_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa8b6211:;
					if (it != expr_end) {
						jule::I64 _63811_i = it - expr->begin();
						jule::Ptr<_1a5b4e46b_InsGeneric> _63818_g = *it;
						{
							_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_63818_g))._field_Kind);
							if ((((*(*((*(_63134_m))))._field_Func.alloc)._field_Generics.len() - _63811_i) > 1LL)) {
								_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1aa8b6211:;
						++it;
						_63811_i++;
						goto _iter_begin_1aa8b6211;
					}
					_iter_end_1aa8b6211:;
				};
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1a74b07c0_pushCallInf(_self_, _63134_m);
	if (((*(*((*(_63134_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_63134_m))))._field_Func.alloc)._field_Anon)))) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_63134_m))))._field_Args.len() > 0LL)) {
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1a5a0e23d_IsBuiltin((*((*(_63134_m))))._field_Func))) && ((*(*(*((*(_63134_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params.len() > 0LL)) && _1a5a0891e_IsSelf((*(*(*((*(_63134_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_63134_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1aa8bce1b:;
				{
					jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _6629_ssie = (*((*(_63134_m))))._field_Expr.unsafe_cast_ptr<_1a5a01ad2_StructSubIdentExprModel>();;
					{
						
						if (_1a5a08ba5_IsRef((*(*(*((*(_63134_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr())) {
							_case_begin_1aa8c27e4:;
							{
								_1a74b0e52_writeReceiver(_self_, (*((*(_6629_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1a5b53739_Sptr((*((*(_6629_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1aa8bded8:;
							{
								jule::Bool _6696_safe = _1a74b0e52_writeReceiver(_self_, (*(*_6629_ssie.alloc)._field_Expr.alloc)._field_Model);;
								if (_6696_safe) {
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_2133d9726_Production))) {
										_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
										_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*((*(_63134_m))))._field_Token));
										_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
									};
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1aa8bde50:;
							{
								if ((_1a5b54a26_Struct((*((*(_6629_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_6629_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1aa8be747:;
											{
												jule::Ptr<_1a5ab1ee4_Var> _6838_v = (*((*(_6629_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
												if ((*(_6838_v))._field_Reference) {
													goto _match_end_1aa8bec20;
												};
												goto _case_begin_1aa8bec75;
											}
										}
										else {
											_case_begin_1aa8bec75:;
											{
												_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1aa8bec20:;
									};
								};
								if (_6323_wrapped) {
									_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1a5b539c0_Ptr((*(*_6629_ssie.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
									_1a74b8de4_model(_self_, (*(*_6629_ssie.alloc)._field_Expr.alloc)._field_Model);
								} else {
									_1a74ae527_possibleRefExpr(_self_, (*((*((*(*_6629_ssie.alloc)._field_Expr.alloc)._field_Model.cast_ptr<_1a59ec35d_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1aa8bddd9:;
					};
					if (((*((*(_63134_m))))._field_Args.len() > 0LL)) {
						_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1aa8bcaca:;
				{
					_1a74ae527_possibleRefExpr(_self_, (*((*((*(_63134_m))))._field_Expr.unsafe_cast_ptr<_1a5a01241_TraitSubIdentExprModel>()))._field_Expr);
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_63134_m))))._field_Args.len() > 0LL)) {
						_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1aa8bcda5:;
		};
	};
	_1a74b025e_args(_self_, _63134_m);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if (_6323_wrapped) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1a74b14b3_coFuncCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ede64_FnCallExprModel>* _72132_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1e9a030bc_StrBuilder _7247_head = static__1e9a034eb_New(32LL);;
	_1e9a03a5c_WriteStr(&_7247_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_72132_m))))._field_Func))._field_Owner != nullptr)) {
		_1e9a03a5c_WriteStr(&_7247_head, jule::Str::lit("_self_", 6));
		if (((*((*(_72132_m))))._field_Args.len() > 0LL)) {
			_1e9a03a5c_WriteStr(&_7247_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_72132_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8d1c21:;
		if (it != expr_end) {
			jule::I64 _7327_i = it - expr->begin();
			jule::Any _73210_arg = *it;
			{
				if ((_7327_i > 0LL)) {
					_1e9a03a5c_WriteStr(&_7247_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _73210_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1aa8d3261:;
						{
							jule::Ptr<_1a5ab1ee4_Var> _7389_v = _73210_arg.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
							static__1a74c20b7_var(&(_7247_head), _7389_v);
							goto _iter_next_1aa8d1c21;
						}
					}
					_match_end_1aa8d29d0:;
				};
				jule::Str _7424_name = (jule::Str::lit("_co_arg_", 8) + _1b915e0a5_Itoa(_7327_i));;
				_1e9a03a5c_WriteStr(&_7247_head, _7424_name);
				_1a757c969_indent((*_self_.alloc)._field_oc);
				_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(*((*(_72132_m))))._field_Func.alloc)._field_Params[_7327_i]))._field_Kind);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*(*((*(_72132_m))))._field_Func.alloc)._field_Params[_7327_i]))._field_Decl))._field_Reference) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
				};
				_1a757c0b7_write((*_self_.alloc)._field_oc, _7424_name);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1a74ae527_possibleRefExpr(_self_, _73210_arg);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _7544_argS = jule::Any(_7424_name, &__jule_any_type4);;
				(*((*(_72132_m))))._field_Args[_7327_i]=(*(((jule::Any*)((&(_7544_argS))))));
			}
			_iter_next_1aa8d1c21:;
			++it;
			_7327_i++;
			goto _iter_begin_1aa8d1c21;
		}
		_iter_end_1aa8d1c21:;
	};
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1e9a037a4_Write(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _1e9a04d05_Buf(&_7247_head));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a74b120a_pureFuncCall(_self_, _72132_m);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a74b1826_writeUseExpr(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _77234_f, jule::Ptr<_1a5b19aeb_Data> _77249_d) {
	if ((_1a5b552c9_Tup((*(_77249_d))._field_Kind.ptr()) == nullptr)) {
		_1a74ae527_possibleRefExpr(_self_, (*_77249_d.alloc)._field_Model);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1a5a0264e_TupleExprModel> _7787_tup = (*_77249_d.alloc)._field_Model.cast_ptr<_1a5a0264e_TupleExprModel>(&__jule_any_type81);;
	_1a759617a_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1a5b552c9_Tup((*((*(_77234_f))))._field_Result.ptr()));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_7787_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8e1736:;
		if (it != expr_end) {
			jule::I64 _7817_i = it - expr->begin();
			jule::Ptr<_1a5b19aeb_Data> _78110_data = *it;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_7817_i));
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
				_1a74ae527_possibleRefExpr(_self_, (*(_78110_data))._field_Model);
				if ((((*(_7787_tup))._field_Datas.len() - _7817_i) > 1LL)) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1aa8e1736:;
			++it;
			_7817_i++;
			goto _iter_begin_1aa8e1736;
		}
		_iter_end_1aa8e1736:;
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
}



inline void _1a74b1ace_funcCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ede64_FnCallExprModel> _79329_m) {
	if ((*(_79329_m))._field_IsCo) {
		_1a74b14b3_coFuncCall(_self_, &(_79329_m));
		return;;
	};
	if (((_1a5a0e23d_IsBuiltin((*_79329_m.alloc)._field_Func.ptr()) || (!((*((*(*_79329_m.alloc)._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_79329_m.alloc)._field_Except != nullptr) && ((*(*_79329_m.alloc)._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1a74b120a_pureFuncCall(_self_, &(_79329_m));
		return;;
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("auto except = ", 14));
	_1a74b120a_pureFuncCall(_self_, &(_79329_m));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	if (((*_79329_m.alloc)._field_Except != nullptr)) {
		if ((((*(*_79329_m.alloc)._field_Func.alloc)._field_Result == nullptr) || (!((*_79329_m.alloc)._field_Assigned)))) {
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1a74a70d0_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_79329_m.alloc)._field_Except);
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _8215_forwarded = _1a68ba989_IsForwarded(&((*_79329_m.alloc)._field_Except));;
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_8215_forwarded) {
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _8269_stmt = (*(*_79329_m.alloc)._field_Except.alloc)._field_Stmts[((*(*_79329_m.alloc)._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _8269_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_1aa900327:;
					{
						((*((*(_79329_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_79329_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
						_1a757c56d_addIndent((*_self_.alloc)._field_oc);
						_1a74a6d27_scopeStmts((*(*_self_.alloc)._field_oc.alloc)._field_sc, &((*_79329_m.alloc)._field_Except));
						_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1a757c969_indent((*_self_.alloc)._field_oc);
						_1a74b1826_writeUseExpr(_self_, &((*_79329_m.alloc)._field_Func), _8269_stmt.unsafe_cast_ptr<_1a5b19aeb_Data>());
						_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
						_1a757c969_indent((*_self_.alloc)._field_oc);
						_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1aa901834:;
					{
						_1a74a70d0_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_79329_m.alloc)._field_Except);
					}
				}
				_match_end_1aa9017ce:;
			};
			if (_8215_forwarded) {
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				_1a74b919c_initExpr(_self_, (*(*_79329_m.alloc)._field_Func.alloc)._field_Result);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";}", 2));
			};
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
		};
		_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*_79329_m.alloc)._field_Token));
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1a5a0a24a_IsVoid((*(*_79329_m.alloc)._field_Func.alloc)._field_Decl)))) {
			_1a757c969_indent((*_self_.alloc)._field_oc);
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	};
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1a74b1d87_slice(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ee33d_SliceExprModel> _86626_m) {
	if (((*(_86626_m))._field_Elems.len() == 0LL)) {
		_1a758dcaa_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_86626_m.alloc)._field_ElemKind);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a758dcaa_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_86626_m.alloc)._field_ElemKind);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("::make({", 8));
	_1a74aeea6_models(_self_, (*_86626_m.alloc)._field_Elems);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1a74b2140_indexing(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59ee7e4_IndexingExprModel> _87829_m) {
	{
		auto &_match_expr{ (*((*(_87829_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa912ea5:;
			{
				_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_2133d9726_Production))) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*(_87829_m))._field_Token));
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _8894_s = _1b916e2e6_ReadStr((*((*(_87829_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1b916c16d_Const>().ptr());;
				_1a74b9e8e_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _8894_s);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
				_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_8894_s.len()));
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1a74ae527_possibleRefExpr(_self_, (*((*_87829_m.alloc)._field_Index))._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1aa912e50:;
	};
	_1a74ae527_possibleRefExpr(_self_, (*((*_87829_m.alloc)._field_Expr))._field_Model);
	{
		
		if (_2133d9726_Production || (_1a5b539c0_Ptr((*(*_87829_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1a5b55043_Map((*(*_87829_m.alloc)._field_Expr.alloc)._field_Kind) != nullptr) || _1a68bac97_IsExprComesFromBind(&((*_87829_m.alloc)._field_Expr))) {
			_case_begin_1aa91bc39:;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1a74ae527_possibleRefExpr(_self_, (*(*_87829_m.alloc)._field_Index.alloc)._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1aa91304e:;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".at(\"", 5));
				_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*_87829_m.alloc)._field_Token));
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				_1a74ae527_possibleRefExpr(_self_, (*(*_87829_m.alloc)._field_Index.alloc)._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1aa91962c:;
	};
}



inline void _1a74b23e8_unsafeIndexing(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c799a9e3_UnsafeIndexingExprModel> _91835_m) {
	_1a74ae527_possibleRefExpr(_self_, (*((*((*(_91835_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_2133d9726_Production || (_1a5b539c0_Ptr((*(*(*_91835_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1a5b55043_Map((*(*(*_91835_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind) != nullptr)) {
			_case_begin_1aa920a73:;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1a74ae527_possibleRefExpr(_self_, (*((*(*_91835_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1aa91eb1b:;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1a74ae527_possibleRefExpr(_self_, (*((*(*_91835_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1aa9206bb:;
	};
}



inline void _1a74b26a1_anonFunc(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a59eec9a_AnonFnExprModel> _93529_m) {
	jule::Bool _9363_closure = _1a68bb3a2_IsClosure(&(_93529_m));;
	jule::Str _9373_ident = _1a757d43c_pushAnonFn((*(_self_))._field_oc, &(_93529_m));;
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1a75911ca_anonFunc((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_93529_m))._field_Func);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">((void*)", 9));
	_1a757c0b7_write((*_self_.alloc)._field_oc, _9373_ident);
	if (_9363_closure) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1a757c0b7_write((*_self_.alloc)._field_oc, _9373_ident);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx", 4));
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">::make(", 8));
		_1a757c0b7_write((*_self_.alloc)._field_oc, _9373_ident);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_93529_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa92a374:;
			if (it != expr_end) {
				jule::I64 _9499_i = it - expr->begin();
				jule::Ptr<_1a5ab1ee4_Var> _94916_v = *it;
				{
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
					static__1a74c20b7_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _94916_v);
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
					_1a74ad69c_var(_self_, _94916_v);
					if ((((*_93529_m.alloc)._field_Captured.len() - _9499_i) > 1LL)) {
						_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1aa92a374:;
				++it;
				_9499_i++;
				goto _iter_begin_1aa92a374;
			}
			_iter_end_1aa92a374:;
		};
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1a757c0b7_write((*_self_.alloc)._field_oc, _9373_ident);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1a74b2959_mapExpr(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a0062a_MapExprModel> _96628_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_96628_m))._field_KeyKind);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_96628_m.alloc)._field_ValKind);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">({", 3));
	if (((*_96628_m.alloc)._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*_96628_m.alloc)._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa933745:;
			if (it != expr_end) {
				jule::I64 _9739_i = it - expr->begin();
				jule::Ptr<_1a5a00174_KeyValPairExprModel> _97316_pair = *it;
				{
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
					_1a74ae527_possibleRefExpr(_self_, (*(_97316_pair))._field_Key);
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					_1a74ae527_possibleRefExpr(_self_, (*_97316_pair.alloc)._field_Val);
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					if ((((*_96628_m.alloc)._field_Entries.len() - _9739_i) > 1LL)) {
						_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1aa933745:;
				++it;
				_9739_i++;
				goto _iter_begin_1aa933745;
			}
			_iter_end_1aa933745:;
		};
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1a74b2c12_slicing(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a00bad_SlicingExprModel> _98728_m) {
	_1a74ae527_possibleRefExpr(_self_, (*(_98728_m))._field_Expr);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_2133d9726_Production))) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*_98728_m.alloc)._field_Token));
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a74ae527_possibleRefExpr(_self_, (*_98728_m.alloc)._field_Left);
	if (((*_98728_m.alloc)._field_Right != nullptr)) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1a74ae527_possibleRefExpr(_self_, (*_98728_m.alloc)._field_Right);
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74b2eba_traitSub(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a01241_TraitSubIdentExprModel> _100329_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1a74c112c_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_100329_m))._field_Trt);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("MptrData", 8));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("*)", 2));
	_1a74ae527_possibleRefExpr(_self_, (*_100329_m.alloc)._field_Expr);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_2133d9726_Production))) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*_100329_m.alloc)._field_Token));
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("))->", 4));
	static__1a74c0a55_func(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*_100329_m.alloc)._field_Method));
}



inline void _1a74b3273_structureSub(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _101933_m) {
	_1a74ae527_possibleRefExpr(_self_, (*((*(_101933_m))._field_Expr))._field_Model);
	if (((*_101933_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1a74c1ccb_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_101933_m.alloc)._field_Field))._field_Decl));
}



inline void _1a74b352b_array(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a02352_ArrayExprModel> _102826_m) {
	_1a758eeba_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_102826_m))._field_Kind);
	if (((*_102826_m.alloc)._field_Elems.len() == 0LL)) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_102826_m.alloc)._field_Elems.len() == 2LL) && ((*_102826_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1a74ae527_possibleRefExpr(_self_, (*_102826_m.alloc)._field_Elems[0LL]);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("({", 2));
	_1a74aeea6_models(_self_, (*_102826_m.alloc)._field_Elems);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1a74b37d4_funcInsCommon(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns> _105134_m) {
	_1a759153d_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _105134_m);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a74b3a8c_funcIns(_self_, _105134_m);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74b3a8c_funcIns(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns> _105828_m) {
	if ((((*(_105828_m))._field_Decl != nullptr) && (*(*_105828_m.alloc)._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1a59c3389_Directive> _10604_d = _1a68bc749_FindDirective(&((*(*_105828_m.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_10604_d != nullptr)) {
			_1a757c370_writeBytes((*(_self_))._field_oc, _1a7589305_concatAllParts((*_10604_d.alloc)._field_Args));
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a74c0d41_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_105828_m));
}



inline void _1a74b3d45_tuple(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a0264e_TupleExprModel> _106926_m) {
	{
		auto expr = &((*_106926_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa94ebb2:;
		if (it != expr_end) {
			jule::I64 _10708_i = it - expr->begin();
			jule::Ptr<_1a5b19aeb_Data> _107015_d = *it;
			{
				_1a74ae527_possibleRefExpr(_self_, (*(_107015_d))._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_106926_m))._field_Datas.len() - _10708_i) > 1LL)) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1a757c969_indent((*_self_.alloc)._field_oc);
				};
			}
			_iter_next_1aa94ebb2:;
			++it;
			_10708_i++;
			goto _iter_begin_1aa94ebb2;
		}
		_iter_end_1aa94ebb2:;
	};
}



inline void _1a74b40ed_newCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a032cb_BuiltinNewCallExprModel> _108028_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_108028_m))._field_Kind);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	if (((*_108028_m.alloc)._field_Init != nullptr)) {
		_1a74ae527_possibleRefExpr(_self_, (*_108028_m.alloc)._field_Init);
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74b43a6_outCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a02a28_BuiltinOutCallExprModel> _109028_m) {
	if (((*(_109028_m))._field_Debug && _2133d9726_Production)) {
		return;;
	};
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1a74ae527_possibleRefExpr(_self_, (*_109028_m.alloc)._field_Expr);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74b465e_outlnCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a02e02_BuiltinOutlnCallExprModel> _109930_m) {
	if (((*(_109930_m))._field_Debug && _2133d9726_Production)) {
		return;;
	};
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1a74ae527_possibleRefExpr(_self_, (*_109930_m.alloc)._field_Expr);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74b4917_panicCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a036a5_BuiltinPanicCallExprModel> _110830_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1a74ae527_possibleRefExpr(_self_, (*(_110830_m))._field_Expr);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*_110830_m.alloc)._field_Token));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a74b4bc0_assertCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a03b5b_BuiltinAssertCallExprModel> _111631_m) {
	if (_2133d9726_Production) {
		return;;
	};
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1a74ae527_possibleRefExpr(_self_, (*(_111631_m))._field_Expr);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1a74b9e8e_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_111631_m.alloc)._field_Log);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1a757e40a_locInfo((*_self_.alloc)._field_oc, &((*_111631_m.alloc)._field_Token));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a74b4e78_errorCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a05762_BuiltinErrorCallExprModel> _112930_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1a5a0a24a_IsVoid((*((*(_112930_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_112930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1aa965e81:;
				{
					jule::Ptr<_1a5ab1ee4_Var> _11345_v = (*((*(_112930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
					if ((*(_11345_v))._field_Ident.equal("error", 5)) {
						_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1aa965e2b:;
		};
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1a7596851_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_112930_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_112930_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1aa96a3e7:;
				{
					jule::Ptr<_1a5ab1ee4_Var> _11465_v = (*((*(_112930_m))._field_Err))._field_Model.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
					if ((*(_11465_v))._field_Ident.equal("error", 5)) {
						_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1aa96a392:;
		};
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1a74ae527_possibleRefExpr(_self_, (*((*(_112930_m))._field_Err))._field_Model);
	jule::I64 _11553_i = _1a757d77d_pushAnyType((*_self_.alloc)._field_oc, (*(*_112930_m.alloc)._field_Err.alloc)._field_Kind);;
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_11553_i));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")}", 2));
}



inline void _1a74b5231_copyCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a05388_BuiltinCopyCallExprModel> _116129_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1a74ae527_possibleRefExpr(_self_, (*((*(_116129_m))._field_Dest))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1a74ae527_possibleRefExpr(_self_, (*((*_116129_m.alloc)._field_Src))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74b54d9_lenCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a047d8_BuiltinLenCallExprModel> _116928_m) {
	_1a74ae527_possibleRefExpr(_self_, (*((*(_116928_m))._field_Expr))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1a74b5792_capCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a04ad5_BuiltinCapCallExprModel> _117428_m) {
	_1a74ae527_possibleRefExpr(_self_, (*((*(_117428_m))._field_Expr))._field_Model);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1a74b5a4a_deleteCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a04eae_BuiltinDeleteCallExprModel> _117931_m) {
	_1a74ae527_possibleRefExpr(_self_, (*((*(_117931_m))._field_Dest))._field_Model);
	if (((*_117931_m.alloc)._field_Key != nullptr)) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".del(", 5));
		_1a74ae527_possibleRefExpr(_self_, (*(*_117931_m.alloc)._field_Key.alloc)._field_Model);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1a74b5d03_makeCallSlice(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a04112_BuiltinMakeCallExprModel>* _119035_m) {
	jule::Ptr<_1a5b5ce2a_Slc> _11917_slice = _1a5b54509_Slc((*((*(_119035_m))))._field_Kind.ptr());;
	_1a75918a1_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_119035_m))))._field_Kind);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1a74ae527_possibleRefExpr(_self_, (*((*(_119035_m))))._field_Len);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_119035_m))))._field_Cap != nullptr)) {
		_1a74ae527_possibleRefExpr(_self_, (*((*(_119035_m))))._field_Cap);
	} else {
		_1a74ae527_possibleRefExpr(_self_, (*((*(_119035_m))))._field_Len);
	};
	if (_1a75984bd_shouldInitialized(&((*(_11917_slice))._field_Elem))) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1a74b919c_initExpr(_self_, (*_11917_slice.alloc)._field_Elem);
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74b60ab_makeCallStr(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a04112_BuiltinMakeCallExprModel>* _120833_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1a74ae527_possibleRefExpr(_self_, (*((*(_120833_m))))._field_Len);
	if (((*((*(_120833_m))))._field_Cap != nullptr)) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1a74ae527_possibleRefExpr(_self_, (*((*(_120833_m))))._field_Cap);
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74b6364_makeCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a04112_BuiltinMakeCallExprModel> _121929_m) {
	if ((_1a5b54509_Slc((*(_121929_m))._field_Kind.ptr()) != nullptr)) {
		_1a74b5d03_makeCallSlice(_self_, &(_121929_m));
		return;;
	};
	_1a74b60ab_makeCallStr(_self_, &(_121929_m));
}



inline void _1a74b661c_pushToSlice(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c799adbc_PushToSliceExprModel> _122732_m) {
	;
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1a758dcaa_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_122732_m))._field_Elems))._field_ElemKind);
	jule::Bool _12357_ptr = false;;
	{
		auto &_match_expr{ (*(_122732_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa982992:;
			{
				jule::Ptr<_1a59ec35d_UnaryExprModel> _12398_u = (*(_122732_m))._field_Dest.unsafe_cast_ptr<_1a59ec35d_UnaryExprModel>();;
				if ((_1a5b539c0_Ptr((*((*(_12398_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1a74ae527_possibleRefExpr(_self_, (*(*_12398_u.alloc)._field_Expr.alloc)._field_Model);
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
					_12357_ptr=true;
					goto _match_end_1aa9846db;
				};
				goto _case_begin_1aa984741;
			}
		}
		else {
			_case_begin_1aa984741:;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1a74ae527_possibleRefExpr(_self_, (*_122732_m.alloc)._field_Dest);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1aa9846db:;
	};
	if (((*(*_122732_m.alloc)._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_12357_ptr) {
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1a74ae527_possibleRefExpr(_self_, (*(*_122732_m.alloc)._field_Elems.alloc)._field_Elems[0LL]);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_12357_ptr) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa((*(*_122732_m.alloc)._field_Elems.alloc)._field_Elems.len()));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*_122732_m.alloc)._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa98b1a4:;
		if (it != expr_end) {
			jule::Any _127315_e = *it;
			{
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_12357_ptr) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1a74ae527_possibleRefExpr(_self_, _127315_e);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1aa98b1a4:;
			++it;
			goto _iter_begin_1aa98b1a4;
		}
		_iter_end_1aa98b1a4:;
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1a74b68c5_appendToSlice(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c799b296_AppendToSliceExprModel> _128734_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a74ae527_possibleRefExpr(_self_, (*(_128734_m))._field_Dest);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(").append(", 9));
	_1a74ae527_possibleRefExpr(_self_, (*_128734_m.alloc)._field_Slice);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1a74b6b7d_appendCall(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a044db_BuiltinAppendCallExprModel> _129531_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1a74ae527_possibleRefExpr(_self_, (*(_129531_m))._field_Dest);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1a74ae527_possibleRefExpr(_self_, (*_129531_m.alloc)._field_Elements);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74b6e36_sizeof(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a05e16_SizeofExprModel> _130327_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1a74ae527_possibleRefExpr(_self_, (*(_130327_m))._field_Expr);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74b71de_alignof(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a06103_AlignofExprModel> _130928_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1a74ae527_possibleRefExpr(_self_, (*(_130928_m))._field_Expr);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74b7497_runeLit(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a0639a_RuneExprModel> _131524_m) {
	if (((*(_131524_m))._field_Code <= 127LL)) {
		_1e9a03d15_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _13188_b = _1a74b9873_sbtoa(static_cast<jule::U8>((*_131524_m.alloc)._field_Code));;
		if (_13188_b.equal("'", 1)) {
			_1e9a03d15_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\\');
		};
		_1e9a03a5c_WriteStr(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _13188_b);
		_1e9a03d15_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1a74ba621_itoa(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_131524_m.alloc)._field_Code));
}



inline void _1a74b7750_structureStatic(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a01e78_StructStaticIdentExprModel> _132936_m) {
	static__1a74c0d41_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_132936_m))._field_Method));
}



inline void _1a74b7a08_integratedToStr(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a06697_IntegratedToStrExprModel> _133336_m) {
	_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1a74ae527_possibleRefExpr(_self_, (*(_133336_m))._field_Expr);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1a74b7cb1_backendEmit(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a06a71_BackendEmitExprModel> _133932_m) {
	if (((*(_133932_m))._field_Exprs.len() == 0LL)) {
		_1a757c0b7_write((*(_self_))._field_oc, (*_133932_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _13443_n = _1e9a047d8_Len(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _13457_args = jule::Slice<jule::Any>::alloc((*_133932_m.alloc)._field_Exprs.len(), (*_133932_m.alloc)._field_Exprs.len());;
	{
		auto expr = &((*_133932_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa99ea58:;
		if (it != expr_end) {
			jule::I64 _13468_i = it - expr->begin();
			jule::Any _134615_expr = *it;
			{
				_1a74ae527_possibleRefExpr(_self_, _134615_expr);
				jule::Slice<jule::U8> _13488_buf = _1e9a04d05_Buf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
				_13457_args[_13468_i]=jule::Any(static_cast<jule::Str>(_13488_buf.slice(_13443_n)), &__jule_any_type4);
				{
					_1e9a050ad_SetBuf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _13488_buf.slice(0LL, _13443_n));
				};
			}
			_iter_next_1aa99ea58:;
			++it;
			_13468_i++;
			goto _iter_begin_1aa99ea58;
		}
		_iter_end_1aa99ea58:;
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, _1c798656c_Format((*_133932_m.alloc)._field_Code, _13457_args));
}



inline void _1a74b8069_free(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5a06d6d_FreeExprModel> _135525_m) {
	_1a74ae527_possibleRefExpr(_self_, (*(_135525_m))._field_Expr);
	if (_2133d911b_RC) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1a74b8322_strComp(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c7999ccd_StrCompExprModel> _136428_m) {
	if ((*(_136428_m))._field_NotEq) {
		_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _13683_s = _1b916e2e6_ReadStr((*_136428_m.alloc)._field_Right.ptr());;
	_1a74ae527_possibleRefExpr(_self_, (*_136428_m.alloc)._field_Left);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".equal(", 7));
	_1a74b9e8e_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _13683_s);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_13683_s.len()));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if ((*_136428_m.alloc)._field_NotEq) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a74b85ca_emptyCompare(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c79994d6_EmptyCompareExprModel> _138033_m) {
	if ((*(_138033_m))._field_Neg) {
		_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a74ae527_possibleRefExpr(_self_, (*_138033_m.alloc)._field_Expr);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1a74b8883_unsafeDeref(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c799b96c_UnsafeDerefExprModel> _138932_m) {
	{
		
		if ((_1a5b53739_Sptr((*((*((*(_138932_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa9ad517:;
			{
				_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a74ae527_possibleRefExpr(_self_, (*(*(*_138932_m.alloc)._field_Base.alloc)._field_Expr.alloc)._field_Model);
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1aa9ad160:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1396:4"));;
			}
		}
		_match_end_1aa9ad061:;
	};
}



inline void _1a74b8b3b_unsafeCasting(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1c799bc69_UnsafeCastingExprModel> _140034_m) {
	{
		
		if (_1a68bb061_IsAny(&((*((*(_140034_m))._field_Base))._field_ExprKind))) {
			_case_begin_1aa9b11b8:;
			{
				_1a74ae527_possibleRefExpr(_self_, (*((*(*_140034_m.alloc)._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1a5b53739_Sptr((*(*_140034_m.alloc)._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1a5b53739_Sptr((*(*_140034_m.alloc)._field_Base.alloc)._field_Kind)))._field_Elem);
				} else {
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_140034_m.alloc)._field_Base.alloc)._field_Kind);
				};
				_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1aa9b0d11:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1413:4"));;
			}
		}
		_match_end_1aa9b0c23:;
	};
}



inline void _1a74b8de4_model(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Any _141726_m) {
	{
		auto &_match_expr{ _141726_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa9b6883:;
			{
				_1a757c0b7_write((*(_self_))._field_oc, _141726_m.unsafe_cast<jule::Str>());
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1aa9b6a2b:;
			{
				_1a75918a1_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _141726_m.unsafe_cast_ptr<_1a5b50d52_TypeKind>());
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa9b6a92:;
			{
				_1a74ac965_constant(_self_, _141726_m.unsafe_cast_ptr<_1b916c16d_Const>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa9b6b08:;
			{
				_1a74ad69c_var(_self_, _141726_m.unsafe_cast_ptr<_1a5ab1ee4_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1aa9b6b6e:;
			{
				_1a74ad955_structureIns(_self_, _141726_m.unsafe_cast_ptr<_1a59e7a84_StructIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aa9b6bd5:;
			{
				_1a74b37d4_funcInsCommon(_self_, _141726_m.unsafe_cast_ptr<_1a5a0cca8_FnIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1aa9b6c4b:;
			{
				_1a74ad13b_unsafeBinary(_self_, (*(_141726_m.unsafe_cast_ptr<_1c799a65d_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1aa9b7895:;
			{
				_1a74ad3e4_binary(_self_, _141726_m.unsafe_cast_ptr<_1a59ebe84_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa9b790b:;
			{
				_1a74adc0d_unary(_self_, _141726_m.unsafe_cast_ptr<_1a59ec35d_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1aa9b7972:;
			{
				_1a74adeb6_structureLit(_self_, _141726_m.unsafe_cast_ptr<_1a59ecc32_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1aa9b79d8:;
			{
				_1a74ae26e_allocStructure(_self_, _141726_m.unsafe_cast_ptr<_1a59ed02e_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1aa9b7a4e:;
			{
				_1a74aebed_casting(_self_, _141726_m.unsafe_cast_ptr<_1a59ed5b2_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa9b7ab5:;
			{
				_1a74b1ace_funcCall(_self_, _141726_m.unsafe_cast_ptr<_1a59ede64_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1aa9b7b2b:;
			{
				_1a74b1d87_slice(_self_, _141726_m.unsafe_cast_ptr<_1a59ee33d_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1aa9b7ba3:;
			{
				_1a74b352b_array(_self_, _141726_m.unsafe_cast_ptr<_1a5a02352_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1aa9b7c2a:;
			{
				_1a74b23e8_unsafeIndexing(_self_, _141726_m.unsafe_cast_ptr<_1c799a9e3_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1aa9b7ca2:;
			{
				_1a74b2140_indexing(_self_, _141726_m.unsafe_cast_ptr<_1a59ee7e4_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1aa9b7d29:;
			{
				_1a74b26a1_anonFunc(_self_, _141726_m.unsafe_cast_ptr<_1a59eec9a_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1aa9b7da1:;
			{
				_1a74b2959_mapExpr(_self_, _141726_m.unsafe_cast_ptr<_1a5a0062a_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1aa9b7e28:;
			{
				_1a74b2c12_slicing(_self_, _141726_m.unsafe_cast_ptr<_1a5a00bad_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aa9b7ea0:;
			{
				_1a74b2eba_traitSub(_self_, _141726_m.unsafe_cast_ptr<_1a5a01241_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa9b8027:;
			{
				_1a74b3273_structureSub(_self_, _141726_m.unsafe_cast_ptr<_1a5a01ad2_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aa9b809e:;
			{
				_1a74b3d45_tuple(_self_, _141726_m.unsafe_cast_ptr<_1a5a0264e_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1aa9b8126:;
			{
				_1a74b43a6_outCall(_self_, _141726_m.unsafe_cast_ptr<_1a5a02a28_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1aa9b819d:;
			{
				_1a74b465e_outlnCall(_self_, _141726_m.unsafe_cast_ptr<_1a5a02e02_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1aa9b8225:;
			{
				_1a74b40ed_newCall(_self_, _141726_m.unsafe_cast_ptr<_1a5a032cb_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1aa9b829c:;
			{
				_1a74b4917_panicCall(_self_, _141726_m.unsafe_cast_ptr<_1a5a036a5_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1aa9b8324:;
			{
				_1a74b4bc0_assertCall(_self_, _141726_m.unsafe_cast_ptr<_1a5a03b5b_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1aa9b839b:;
			{
				_1a74b4e78_errorCall(_self_, _141726_m.unsafe_cast_ptr<_1a5a05762_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1aa9b8423:;
			{
				_1a74b6364_makeCall(_self_, _141726_m.unsafe_cast_ptr<_1a5a04112_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1aa9b849a:;
			{
				_1a74b6b7d_appendCall(_self_, _141726_m.unsafe_cast_ptr<_1a5a044db_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1aa9b8522:;
			{
				_1a74b5231_copyCall(_self_, _141726_m.unsafe_cast_ptr<_1a5a05388_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1aa9b8599:;
			{
				_1a74b54d9_lenCall(_self_, _141726_m.unsafe_cast_ptr<_1a5a047d8_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1aa9b8621:;
			{
				_1a74b5792_capCall(_self_, _141726_m.unsafe_cast_ptr<_1a5a04ad5_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1aa9b8698:;
			{
				_1a74b5a4a_deleteCall(_self_, _141726_m.unsafe_cast_ptr<_1a5a04eae_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1aa9b8720:;
			{
				_1a74b6e36_sizeof(_self_, _141726_m.unsafe_cast_ptr<_1a5a05e16_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1aa9b8797:;
			{
				_1a74b71de_alignof(_self_, _141726_m.unsafe_cast_ptr<_1a5a06103_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1aa9b881e:;
			{
				_1a74b7497_runeLit(_self_, _141726_m.unsafe_cast_ptr<_1a5a0639a_RuneExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1aa9b8896:;
			{
				_1a74b7750_structureStatic(_self_, _141726_m.unsafe_cast_ptr<_1a5a01e78_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1aa9b891d:;
			{
				_1a74b7a08_integratedToStr(_self_, _141726_m.unsafe_cast_ptr<_1a5a06697_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aa9b8995:;
			{
				_1a74b7cb1_backendEmit(_self_, _141726_m.unsafe_cast_ptr<_1a5a06a71_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1aa9b8a1c:;
			{
				_1a74b8069_free(_self_, _141726_m.unsafe_cast_ptr<_1a5a06d6d_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1aa9b8a94:;
			{
				_1a74b8322_strComp(_self_, _141726_m.unsafe_cast_ptr<_1c7999ccd_StrCompExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1aa9b8b1b:;
			{
				_1a74ad69c_var(_self_, (*(_141726_m.unsafe_cast_ptr<_1c799985a_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1aa9b8b93:;
			{
				_1a74b85ca_emptyCompare(_self_, _141726_m.unsafe_cast_ptr<_1c79994d6_EmptyCompareExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1aa9b8c1a:;
			{
				_1a74b8883_unsafeDeref(_self_, _141726_m.unsafe_cast_ptr<_1c799b96c_UnsafeDerefExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1aa9b8c92:;
			{
				_1a74b8b3b_unsafeCasting(_self_, _141726_m.unsafe_cast_ptr<_1c799bc69_UnsafeCastingExprModel>());
			}
		}
		else {
			_case_begin_1aa9b69b5:;
			{
				_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1aa9b6960:;
	};
}



inline void _1a74b919c_initExpr(jule::Ptr<_1a74ab1d3_exprCoder> _self_, jule::Ptr<_1a5b50d52_TypeKind> _151829_t) {
	if (_1a5b52c00_NilCompatible(_151829_t.ptr())) {
		if ((_1a5b539c0_Ptr(_151829_t) != nullptr)) {
			_1a757c0b7_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1a75918a1_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151829_t);
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1a5b5da1e_Tuple> _15287_tup = _1a5b552c9_Tup(_151829_t);;
	if ((_15287_tup != nullptr)) {
		_1a759617a_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _15287_tup);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_15287_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa9d740e:;
			if (it != expr_end) {
				jule::I64 _15329_i = it - expr->begin();
				jule::Ptr<_1a5b50d52_TypeKind> _153216_tt = *it;
				{
					if ((!(_1a75984bd_shouldInitialized(&(_153216_tt))))) {
						goto _iter_next_1aa9d740e;
					};
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1a757c0b7_write((*_self_.alloc)._field_oc, _1b915e0a5_Itoa(_15329_i));
					_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
					_1a74b919c_initExpr(_self_, _153216_tt);
					if ((((*_15287_tup.alloc)._field_Types.len() - _15329_i) > 1LL)) {
						_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1aa9d740e:;
				++it;
				_15329_i++;
				goto _iter_begin_1aa9d740e;
			}
			_iter_end_1aa9d740e:;
		};
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1a5a2088c_Enum> _15477_enm = _1a5b53c56_Enum(_151829_t);;
	if ((_15477_enm != nullptr)) {
		_1a74b8de4_model(_self_, (*((*((*((*_15477_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1a5b5892b_Prim> _15523_prim = _1a5b534a3_Prim(_151829_t);;
	if ((_15523_prim != nullptr)) {
		if (_1b916bac9_IsNum((*_15523_prim.alloc)._field_Kind)) {
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("0", 1));
		} else if (_1a5b5bb2c_IsBool(_15523_prim)) {
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("false", 5));
		} else if (_1a5b5bdb3_IsStr(_15523_prim)) {
			_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1a5b54273_Arr(_151829_t) != nullptr)) {
		jule::Ptr<_1a5b6024b_Arr> _15648_arr = _1a5b54273_Arr(_151829_t);;
		_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151829_t);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1a74b919c_initExpr(_self_, (*(_15648_arr))._field_Elem);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _15717_s = _1a5b54a26_Struct(_151829_t);;
	if ((((_15717_s != nullptr) && (*((*_15717_s.alloc)._field_Decl))._field_Binded) && (_1a68bc749_FindDirective(&((*(*_15717_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151829_t);
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1a75918a1_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151829_t);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1a74ab1d3_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "varPrefixes:" << _Src._field_varPrefixes;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a74bb9da_TestCoder> static__1a74bbe5d_New(jule::Ptr<_1a757b913_ObjectCoder>* _2921_oc) {
	return jule::new_ptr<_1a74bb9da_TestCoder>(_1a74bb9da_TestCoder{._field_oc=(*(_2921_oc))});;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a74bc1e4_findTestingPackage(jule::Ptr<_1a74bb9da_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9e7166:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _3615_imp = *it;
			{
				if ((*(_3615_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3615_imp;;
				};
			}
			_iter_next_1aa9e7166:;
			++it;
			goto _iter_begin_1aa9e7166;
		}
		_iter_end_1aa9e7166:;
	};
	return nullptr;;
}



inline void _1a74bc49c_appendTest(jule::Ptr<_1a74bb9da_TestCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns> _4431_f) {
	_1a757c969_indent((*(_self_))._field_oc);
	_1a74bcbd9_callTmReset(_self_);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1a74b9e8e_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_4431_f))._field_Decl))._field_Ident);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	static__1a74c0d41_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_4431_f));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t);\n", 6));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1a74bc755_appendPackageTests(jule::Ptr<_1a74bb9da_TestCoder> _self_, jule::Ptr<_1a5a71c0c_Package>* _5940_p) {
	{
		auto expr = &((*((*(_5940_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9ed931:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _6015_file = *it;
			{
				{
					auto expr = &((*(_6015_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa9ee39e:;
					if (it != expr_end) {
						jule::Ptr<_1a5a09cc7_Fn> _6116_f = *it;
						{
							if (_1a68bcb12_HasDirective(&((*(_6116_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1a74bc49c_appendTest(_self_, (*_6116_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1aa9ee39e:;
						++it;
						goto _iter_begin_1aa9ee39e;
					}
					_iter_end_1aa9ee39e:;
				};
			}
			_iter_next_1aa9ed931:;
			++it;
			goto _iter_begin_1aa9ed931;
		}
		_iter_end_1aa9ed931:;
	};
}



inline jule::Bool _1a74bc9db_readyTestingPackage(jule::Ptr<_1a74bb9da_TestCoder> _self_) {
	jule::Ptr<_1a5a6dcd6_ImportInfo> _707_p = _1a74bc1e4_findTestingPackage(_self_);;
	if ((_707_p == nullptr)) {
		return false;;
	};
	(*_self_.alloc)._field_t=(*(_1a5a6eeb3_FindStruct(_707_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*_self_.alloc)._field_tmReset=_1a59e8aeb_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1a59e8aeb_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1a59e8aeb_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1a74bcbd9_callTmReset(jule::Ptr<_1a74bb9da_TestCoder> _self_) {
	static__1a74c0a55_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a74bcdd7_callTmFailed(jule::Ptr<_1a74bb9da_TestCoder> _self_) {
	static__1a74c0a55_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a74bd0d5_callTmSkipped(jule::Ptr<_1a74bb9da_TestCoder> _self_) {
	static__1a74c0a55_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a74bd2d3_Serialize(jule::Ptr<_1a74bb9da_TestCoder> _self_) {
	_1a7588c3e_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1a75886cd_end((*_self_.alloc)._field_oc);
	});;
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	if ((!(_1a74bc9db_readyTestingPackage(_self_)))) {
		_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
		return;;
	};
	_1e9a030bc_StrBuilder _1187_tb = static__1e9a034eb_New(40LL);;
	_1a758eb57_structureIns((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &(_1187_tb), (*_self_.alloc)._field_t);
	_1a758ca9a_asSptr((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1e9a04d05_Buf(&_1187_tb));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1a757c370_writeBytes((*_self_.alloc)._field_oc, _1e9a04d05_Buf(&_1187_tb));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1a757c56d_addIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("++total;\n", 9));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("if (", 4));
	_1a74bcdd7_callTmFailed(_self_);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("else if (", 9));
	_1a74bd0d5_callTmSkipped(_self_);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("};\n", 3));
	_1a74bc755_appendPackageTests(_self_, &((*((*(*_self_.alloc)._field_oc.alloc)._field_ir))._field_Main));
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("\n\n", 2));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1a757c76b_doneIndent((*_self_.alloc)._field_oc);
	_1a757c969_indent((*_self_.alloc)._field_oc);
	_1a757c0b7_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1a74bb9da_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1a74bee72_writeIdentTo(_1e9a030bc_StrBuilder* _3530_buf, jule::Str* _3548_ident) {
	{
		auto expr = _3548_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa18c48:;
		if (it != expr_end) {
			jule::U8 *_3610_b = it;
			{
				if (((*(_3610_b)) >= 128LLU)) {
					goto _julec_label_1aaa19de2;
				};
			}
			_iter_next_1aaa18c48:;
			++it;
			goto _iter_begin_1aaa18c48;
		}
		_iter_end_1aaa18c48:;
	};
	_1e9a03a5c_WriteStr(_3530_buf, (*(_3548_ident)));
	return;;
	_julec_label_1aaa19de2:;
	{
		auto expr = _3548_ident;
		char *it = expr->operator char*();
		const char *end = it + expr->len();
		std::size_t len;
		jule::I32 _4610_r;
		_iter_begin_1aaa1a2cc:;
		std::tie(_4610_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				if ((_4610_r < 128LL)) {
					_1e9a03d15_WriteByte(_3530_buf, static_cast<jule::U8>(_4610_r));
					goto _iter_next_1aaa1a2cc;
				};
				_1e9a03a5c_WriteStr(_3530_buf, _1b915dcdb_FmtInt(static_cast<jule::I64>(_4610_r), 15LL));
			}
			_iter_next_1aaa1a2cc:;
			it += len;
			goto _iter_begin_1aaa1a2cc;
		}
	};
}



inline void static__1a74c0318_toOut(_1e9a030bc_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr) {
	_1e9a03d15_WriteByte(_6323_buf, '_');
	if ((_6352_addr != 0LLU)) {
		_1e9a03a5c_WriteStr(_6323_buf, _1b915d923_FmtUint(static_cast<jule::U64>(_6352_addr), 15LL));
		_1e9a03d15_WriteByte(_6323_buf, '_');
	};
	static__1a74bee72_writeIdentTo(_6323_buf, &(_6340_ident));
}



inline void static__1a74c0769_toLocal(_1e9a030bc_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident) {
	_1e9a03d15_WriteByte(_7825_buf, '_');
	_1e9a03a5c_WriteStr(_7825_buf, _1b915e0a5_Itoa(_7842_row));
	_1e9a03a5c_WriteStr(_7825_buf, _1b915e0a5_Itoa(_7852_col));
	_1e9a03d15_WriteByte(_7825_buf, '_');
	static__1a74bee72_writeIdentTo(_7825_buf, _7863_ident);
}



inline void static__1a74c0a55_func(_1e9a030bc_StrBuilder* _8622_buf, jule::Ptr<_1a5a09cc7_Fn>* _8640_f) {
	{
		
		if ((*((*(_8640_f))))._field_Binded) {
			_case_begin_1aaa1ea95:;
			{
				_1e9a03a5c_WriteStr(_8622_buf, (*((*(_8640_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8640_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1aaa1eb3e:;
			{
				_1e9a03a5c_WriteStr(_8622_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1a5a0a4d1_IsMethod((*(_8640_f)).ptr())) {
			_case_begin_1aaa1eba5:;
			{
				if ((*((*(_8640_f))))._field_Statically) {
					_1e9a03a5c_WriteStr(_8622_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1aaa1e941:;
	};
	static__1a74c0318_toOut(_8622_buf, (*((*(_8640_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8640_f))));
}



inline void static__1a74c0d41_funcIns(_1e9a030bc_StrBuilder* _10225_buf, jule::Ptr<_1a5a0cca8_FnIns>* _10243_f) {
	if (_1a5a0e23d_IsBuiltin((*(_10243_f)).ptr())) {
		_1e9a03a5c_WriteStr(_10225_buf, jule::Str::lit("jule::", 6));
		_1e9a03a5c_WriteStr(_10225_buf, (*((*((*(_10243_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10243_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10243_f))))._field_Generics.len() == 0LL))) {
		static__1a74c0a55_func(_10225_buf, &((*((*(_10243_f))))._field_Decl));
		return;;
	};
	static__1a74c0318_toOut(_10225_buf, (*(*((*(_10243_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10243_f))));
}



inline void static__1a74c112c_traitDecl(_1e9a030bc_StrBuilder* _11727_buf, jule::Ptr<_1a5a1d181_Trait> _11744_t) {
	static__1a74c0318_toOut(_11727_buf, (*(_11744_t))._field_Ident, static_cast<jule::Uintptr>(_11744_t));
}



inline void static__1a74c1418_param(_1e9a030bc_StrBuilder* _12123_buf, jule::Ptr<_1a5a08303_Param>* _12141_p) {
	if ((_1c80b91dd_IsAnonIdent((*((*(_12141_p))))._field_Ident) || _1c80b8e24_IsIgnoreIdent((*((*(_12141_p))))._field_Ident))) {
		return;;
	};
	if (_1a5a0891e_IsSelf((*(_12141_p)).ptr())) {
		_1e9a03a5c_WriteStr(_12123_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12141_p))))._field_Token == nullptr)) {
		static__1a74c0769_toLocal(_12123_buf, 0LL, 0LL, &((*((*(_12141_p))))._field_Ident));
		return;;
	};
	static__1a74c0769_toLocal(_12123_buf, (*((*((*(_12141_p))))._field_Token))._field_Row, (*((*((*(_12141_p))))._field_Token))._field_Column, &((*((*(_12141_p))))._field_Ident));
}



inline void static__1a74c1704_structure(_1e9a030bc_StrBuilder* _13627_buf, jule::Ptr<_1a59e4d06_Struct>* _13645_s) {
	if ((*((*(_13645_s))))._field_Binded) {
		if ((!(_1a68bcb12_HasDirective(&((*((*(_13645_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_1e9a03a5c_WriteStr(_13627_buf, jule::Str::lit("struct ", 7));
		};
		_1e9a03a5c_WriteStr(_13627_buf, (*((*(_13645_s))))._field_Ident);
		return;;
	};
	static__1a74c0318_toOut(_13627_buf, (*((*(_13645_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13645_s))));
}



inline void static__1a74c19e0_structureIns(_1e9a030bc_StrBuilder* _14730_buf, jule::Ptr<_1a59e7a84_StructIns>* _14748_s) {
	if (((*((*((*(_14748_s))))._field_Decl))._field_Binded || ((*((*(_14748_s))))._field_Generics.len() == 0LL))) {
		static__1a74c1704_structure(_14730_buf, &((*((*(_14748_s))))._field_Decl));
		return;;
	};
	static__1a74c0318_toOut(_14730_buf, (*(*((*(_14748_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14748_s))));
}



inline void static__1a74c1ccb_field(_1e9a030bc_StrBuilder* _15523_buf, jule::Ptr<_1a59e1dd0_Field>* _15541_f) {
	if ((*((*((*(_15541_f))))._field_Owner))._field_Binded) {
		_1e9a03a5c_WriteStr(_15523_buf, (*((*(_15541_f))))._field_Ident);
		return;;
	};
	_1e9a03a5c_WriteStr(_15523_buf, jule::Str::lit("_field_", 7));
	static__1a74bee72_writeIdentTo(_15523_buf, &((*((*(_15541_f))))._field_Ident));
}



inline void static__1a74c20b7_var(_1e9a030bc_StrBuilder* _16521_buf, jule::Ptr<_1a5ab1ee4_Var> _16542_v) {
	{
		
		if ((*(_16542_v))._field_Binded) {
			_case_begin_1aaa2d312:;
			{
				_1e9a03a5c_WriteStr(_16521_buf, (*_16542_v.alloc)._field_Ident);
			}
		}
		else if ((*(_16542_v))._field_Ident.equal("error", 5)) {
			_case_begin_1aaa2d378:;
			{
				_1e9a03a5c_WriteStr(_16521_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16542_v))._field_Ident.equal("self", 4)) {
			_case_begin_1aaa2d3de:;
			{
				_1e9a03a5c_WriteStr(_16521_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16542_v))._field_RetOrder == -1LL)) {
			_case_begin_1aaa2d455:;
			{
				_1e9a03a5c_WriteStr(_16521_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16542_v))._field_RetOrder >= 0LL)) {
			_case_begin_1aaa2d4bb:;
			{
				_1e9a03a5c_WriteStr(_16521_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1e9a03a5c_WriteStr(_16521_buf, _1b915e0a5_Itoa((*_16542_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16542_v))._field_Scope != nullptr)) {
			_case_begin_1aaa2d532:;
			{
				static__1a74c0769_toLocal(_16521_buf, (*((*_16542_v.alloc)._field_Token))._field_Row, (*(*_16542_v.alloc)._field_Token.alloc)._field_Column, &((*_16542_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1aaa2d29b:;
			{
				static__1a74c0318_toOut(_16521_buf, (*(_16542_v))._field_Ident, static_cast<jule::Uintptr>(_16542_v));
			}
		}
		_match_end_1aaa2d19c:;
	};
}



inline void static__1a74c23a3_iterBegin(_1e9a030bc_StrBuilder* _18727_buf, jule::Uintptr _18744_it) {
	_1e9a03a5c_WriteStr(_18727_buf, jule::Str::lit("_iter_begin_", 12));
	_1e9a03a5c_WriteStr(_18727_buf, _1b915d923_FmtUint(static_cast<jule::U64>(_18744_it), 15LL));
}



inline void static__1a74c268e_iterEnd(_1e9a030bc_StrBuilder* _19225_buf, jule::Uintptr _19242_it) {
	_1e9a03a5c_WriteStr(_19225_buf, jule::Str::lit("_iter_end_", 10));
	_1e9a03a5c_WriteStr(_19225_buf, _1b915d923_FmtUint(static_cast<jule::U64>(_19242_it), 15LL));
}



inline void static__1a74c297a_iterNext(_1e9a030bc_StrBuilder* _19726_buf, jule::Uintptr _19743_it) {
	_1e9a03a5c_WriteStr(_19726_buf, jule::Str::lit("_iter_next_", 11));
	_1e9a03a5c_WriteStr(_19726_buf, _1b915d923_FmtUint(static_cast<jule::U64>(_19743_it), 15LL));
}



inline void static__1a74c2c66_label(_1e9a030bc_StrBuilder* _20223_buf, jule::Uintptr _20240_u) {
	_1e9a03a5c_WriteStr(_20223_buf, jule::Str::lit("_julec_label_", 13));
	_1e9a03a5c_WriteStr(_20223_buf, _1b915d923_FmtUint(static_cast<jule::U64>(_20240_u), 15LL));
}



inline void static__1a74c3052_matchEnd(_1e9a030bc_StrBuilder* _20726_buf, jule::Uintptr _20743_m) {
	_1e9a03a5c_WriteStr(_20726_buf, jule::Str::lit("_match_end_", 11));
	_1e9a03a5c_WriteStr(_20726_buf, _1b915d923_FmtUint(static_cast<jule::U64>(_20743_m), 15LL));
}



inline void static__1a74c333d_caseBegin(_1e9a030bc_StrBuilder* _21227_buf, jule::Uintptr _21244_c) {
	_1e9a03a5c_WriteStr(_21227_buf, jule::Str::lit("_case_begin_", 12));
	_1e9a03a5c_WriteStr(_21227_buf, _1b915d923_FmtUint(static_cast<jule::U64>(_21244_c), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1a74be966_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a7579b64_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a757a082_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a757a45b_anonHash _Src) {
	_Stream << "anonHash{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a757b913_ObjectCoder> static__1a757bd0e_New(jule::Ptr<_1a68b0055_IR>* _11521_ir, _1a7579b64_SerializationInfo _11530_info) {
	jule::Ptr<_1a757b913_ObjectCoder> _1167_oc = jule::new_ptr<_1a757b913_ObjectCoder>(_1a757b913_ObjectCoder{._field_ir=(*(_11521_ir)), ._field_info=_11530_info, });;
	(*(_1167_oc))._field_ec=static__1a74ab59b_new(&(_1167_oc));
	(*_1167_oc.alloc)._field_sc=static__1a6a6ba19_new(&(_1167_oc));
	(*_1167_oc.alloc)._field_tc=static__1a758bbed_new(&(_1167_oc));
	return _1167_oc;;
}



inline void _1a757c0b7_write(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Str _12622_s) {
	_1e9a03a5c_WriteStr(&(*(_self_))._field_Buf, _12622_s);
}



inline void _1a757c370_writeBytes(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Slice<jule::U8> _13027_b) {
	_1e9a037a4_Write(&(*(_self_))._field_Buf, _13027_b);
}



inline void _1a757c56d_addIndent(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,jule::Slice<jule::U8>::make({9LLU}));
}



inline void _1a757c76b_doneIndent(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1a757c969_indent(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_1e9a037a4_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1a757ccaa_findAnyType(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5b50d52_TypeKind>* _14933_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa42744:;
		if (it != expr_end) {
			jule::I64 _1508_i = it - expr->begin();
			jule::Ptr<_1a5b50d52_TypeKind> _15015_at = *it;
			{
				if (_1a5b5155b_Equal(_15015_at, (*(_14933_t)))) {
					return _1508_i;;
				};
			}
			_iter_next_1aaa42744:;
			++it;
			_1508_i++;
			goto _iter_begin_1aaa42744;
		}
		_iter_end_1aaa42744:;
	};
	return -1LL;;
}



inline jule::I64 _1a757d0eb_pushDealloc(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5b50d52_TypeKind> _15832_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa43b96:;
		if (it != expr_end) {
			jule::I64 _1597_i = it - expr->begin();
			jule::Ptr<_1a5b50d52_TypeKind> _15910_dt = *it;
			{
				if (_1a5b5155b_Equal(_15910_dt, _15832_t)) {
					return _1597_i;;
				};
			}
			_iter_next_1aaa43b96:;
			++it;
			_1597_i++;
			goto _iter_begin_1aaa43b96;
		}
		_iter_end_1aaa43b96:;
	};
	jule::I64 _1643_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>::make({_15832_t}));
	_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_deallocObj, _1b915e0a5_Itoa(_1643_i));
	_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1a75918a1_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _15832_t);
	_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _1643_i;;
}



inline jule::Str _1a757d43c_pushAnonFn(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59eec9a_AnonFnExprModel>* _17432_m) {
	jule::Str __jule_func_result;
	jule::Bool _1753_closure = _1a68bb3a2_IsClosure(_17432_m);;
	if (_1753_closure) {
		_1e9a03a5c_WriteStr(&(*(_self_))._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I64 _1794_l = _1e9a047d8_Len(&(*_self_.alloc)._field_anonObj);;
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anonObj, _1b915d923_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17432_m))))._field_Func)), 15LL));
		__jule_func_result=static_cast<jule::Str>(_1e9a04d05_Buf(&(*_self_.alloc)._field_anonObj).slice(_1794_l));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_17432_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aaa4a52c:;
			if (it != expr_end) {
				jule::Ptr<_1a5ab1ee4_Var> _18416_v = *it;
				{
					_1e9a03d15_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1a75918a1_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_18416_v))._field_Kind))._field_Kind);
					_1e9a03d15_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_18416_v.alloc)._field_Reference) {
						_1e9a03d15_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1a74c20b7_var(&((*_self_.alloc)._field_anonObj), _18416_v);
					_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1aaa4a52c:;
				++it;
				goto _iter_begin_1aaa4a52c;
			}
			_iter_end_1aaa4a52c:;
		};
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1b915d923_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17432_m))))._field_Func)), 15LL);
	};
	(*(_self_))._field_anons=jule::append((*_self_.alloc)._field_anons,jule::Slice<jule::Ptr<_1a757a45b_anonHash>>::make({jule::new_ptr<_1a757a45b_anonHash>(_1a757a45b_anonHash{._field_expr=(*(_17432_m)), ._field_ident=__jule_func_result})}));
	_1a758483e_anonFuncInsDecl(_self_, _17432_m, __jule_func_result);
	_1e9a03d15_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I64 _1a757d77d_pushAnyType(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5b50d52_TypeKind> _21432_t) {
	if ((_1a5b53c56_Enum(_21432_t.ptr()) != nullptr)) {
		_21432_t=(*((*(_1a5b53c56_Enum(_21432_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _2187_i = _1a757ccaa_findAnyType(_self_, &(_21432_t));;
	if ((_2187_i != -1LL)) {
		return _2187_i;;
	};
	_2187_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>::make({_21432_t}));
	jule::Str _2243_si = _1b915e0a5_Itoa(_2187_i);;
	if ((_1a5b53739_Sptr(_21432_t) != nullptr)) {
		_1e9a030bc_StrBuilder _2268_elemKind = static__1e9a034eb_New(40LL);;
		_1a75918a1_kind((*_self_.alloc)._field_tc.ptr(), &(_2268_elemKind), (*(_1a5b53739_Sptr(_21432_t)))._field_Elem);
		jule::I64 _2304_di = _1a757d0eb_pushDealloc(_self_, (*(_1a5b53739_Sptr(_21432_t)))._field_Elem);;
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _1b915e0a5_Itoa(_2304_di));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 50));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1a758ca9a_asSptr((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_anyObj), _1e9a04d05_Buf(&_2268_elemKind));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _2494_comparable = _1a5b5244c_Comparable(_21432_t);;
		_1e9a030bc_StrBuilder _2508_kindB = static__1e9a034eb_New(40LL);;
		_1a75918a1_kind((*_self_.alloc)._field_tc.ptr(), &(_2508_kindB), _21432_t);
		jule::Slice<jule::U8> _2524_kind = _1e9a04d05_Buf(&_2508_kindB);;
		jule::I64 _2554_di = _1a757d0eb_pushDealloc(_self_, _21432_t);;
		if (_2494_comparable) {
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_1e9a037a4_Write(&(*_self_.alloc)._field_anyObj, _2524_kind);
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_1e9a037a4_Write(&(*_self_.alloc)._field_anyObj, _2524_kind);
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1a5b539c0_Ptr(_21432_t) == nullptr)) {
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_1e9a037a4_Write(&(*_self_.alloc)._field_anyObj, _2524_kind);
		} else {
			_1e9a037a4_Write(&(*_self_.alloc)._field_anyObj, _2524_kind);
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _1b915e0a5_Itoa(_2554_di));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", ", 2));
		if (_2494_comparable) {
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
		_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_2494_comparable) {
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_1e9a037a4_Write(&(*_self_.alloc)._field_anyObj, _2524_kind);
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _2243_si);
			_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _2187_i;;
}



inline void _1a757da36_pushResultIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _31335_f) {
	jule::Str _3143_s = static_cast<jule::Str>(_1a7596b5e_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_31335_f))))._field_Result)));;
	jule::Bool _3156_ok;
	(*_self_.alloc)._field_resultMap.lookup(_3143_s, nullptr, &(_3156_ok));
	if (_3156_ok) {
		return;;
	};
	(*_self_.alloc)._field_resultMap[_3143_s]=false;
	_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_resultDecls, _3143_s);
	_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1a5b552c9_Tup((*((*(_31335_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa6e8d6:;
		if (it != expr_end) {
			jule::I64 _3238_i = it - expr->begin();
			jule::Ptr<_1a5b50d52_TypeKind> _32315_t = *it;
			{
				_1e9a03d15_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1a75918a1_kind((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_resultDecls), _32315_t);
				_1e9a03d15_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_resultDecls, _1b915e0a5_Itoa(_3238_i));
				_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aaa6e8d6:;
			++it;
			_3238_i++;
			goto _iter_begin_1aaa6e8d6;
		}
		_iter_end_1aaa6e8d6:;
	};
	_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1a757dcde_pushResult(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a09cc7_Fn>* _33432_f) {
	if ((_1a5a0a24a_IsVoid((*(_33432_f)).ptr()) || ((*((*((*(_33432_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _3387_n = (*((*(_33432_f))))._field_Instances.len();;
	if (((*((*(_33432_f))))._field_Generics.len() == 0LL)) {
		_3387_n=1LL;
	};
	{
		auto expr = (*((*(_33432_f))))._field_Instances.slice(0LL, _3387_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aaa74985:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0cca8_FnIns> _34215_ins = *it;
			{
				_1a757da36_pushResultIns(_self_, &(_34215_ins));
			}
			_iter_next_1aaa74985:;
			++it;
			goto _iter_begin_1aaa74985;
		}
		_iter_end_1aaa74985:;
	};
}



inline void _1a757e152_pushAndWriteMaskMapper(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a1d181_Trait> _34743_t1, jule::Ptr<_1a5a1d181_Trait> _34759_t2) {
	_1e9a030bc_StrBuilder _3487_ident = static__1e9a034eb_New(32LL);;
	_1e9a03a5c_WriteStr(&_3487_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_1e9a03a5c_WriteStr(&_3487_ident, _1b915d923_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_34759_t2)), 15LL));
	_1e9a03a5c_WriteStr(&_3487_ident, jule::Str::lit("_to_", 4));
	_1e9a03a5c_WriteStr(&_3487_ident, _1b915d923_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_34743_t1)), 15LL));
	_1e9a037a4_Write(&(*(_self_))._field_Buf, _1e9a04d05_Buf(&_3487_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa77801:;
		if (it != expr_end) {
			_1a757a082_traitCast _35610_m = *it;
			{
				if (((_35610_m._field_t1 == _34743_t1) && (_35610_m._field_t2 == _34759_t2))) {
					return;;
				};
			}
			_iter_next_1aaa77801:;
			++it;
			goto _iter_begin_1aaa77801;
		}
		_iter_end_1aaa77801:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,jule::Slice<_1a757a082_traitCast>::make({_1a757a082_traitCast{._field_t1=_34743_t1, ._field_t2=_34759_t2}}));
	;
	_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_1e9a037a4_Write(&(*_self_.alloc)._field_anyObj, _1e9a04d05_Buf(&_3487_ident));
	_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_1e9a030bc_StrBuilder _3707_t1Ident = static__1e9a034eb_New(16LL);;
	_1e9a030bc_StrBuilder _3717_t2Ident = static__1e9a034eb_New(16LL);;
	static__1a74c112c_traitDecl(&(_3707_t1Ident), _34743_t1);
	static__1a74c112c_traitDecl(&(_3717_t2Ident), _34759_t2);
	{
		auto expr = &((*(_34743_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa77e1c:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _37515_s1 = *it;
			{
				{
					auto expr = &((*(_34759_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaa7bdcc:;
					if (it != expr_end) {
						jule::Ptr<_1a59e4d06_Struct> _37611_s2 = *it;
						{
							if ((_37515_s1 == _37611_s2)) {
								{
									auto expr = &((*(_37515_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1aaa7cc68:;
									if (it != expr_end) {
										jule::Ptr<_1a59e7a84_StructIns> _37818_s1i = *it;
										{
											jule::I64 _3797_i1 = _1a68bd64b_FindTraitTypeOffsetS(_34743_t1, _37818_s1i);;
											jule::I64 _3807_i2 = _1a68bd64b_FindTraitTypeOffsetS(_34759_t2, _37818_s1i);;
											_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_1e9a037a4_Write(&(*_self_.alloc)._field_anyObj, _1e9a04d05_Buf(&_3717_t2Ident));
											_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _1b915e0a5_Itoa(_3807_i2));
											_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_1e9a037a4_Write(&(*_self_.alloc)._field_anyObj, _1e9a04d05_Buf(&_3707_t1Ident));
											_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, _1b915e0a5_Itoa(_3797_i1));
											_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1aaa7cc68:;
										++it;
										goto _iter_begin_1aaa7cc68;
									}
									_iter_end_1aaa7cc68:;
								};
							};
						}
						_iter_next_1aaa7bdcc:;
						++it;
						goto _iter_begin_1aaa7bdcc;
					}
					_iter_end_1aaa7bdcc:;
				};
			}
			_iter_next_1aaa77e1c:;
			++it;
			goto _iter_begin_1aaa77e1c;
		}
		_iter_end_1aaa77e1c:;
	};
	_1e9a03a5c_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" jule::panic(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 114));
}



inline void _1a757e40a_locInfo(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1c80b653c_Token>* _39825_t) {
	jule::Str *_3994_loc = &((*((*((*(_39825_t))))._field_File))._field_Path);;
	if (_2133d9726_Production) {
		{
			
			if (_1d1902dc5_HasPrefix((*(_3994_loc)), _1d1d32dd7_PathStdlib)) {
				_case_begin_1aaa83224:;
				{
					_1a74b9b5e_cstrBytes(&((*(_self_))._field_Buf), (*(_3994_loc)).slice((_1d190dd59_Dir(_1d1d32dd7_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1d1902dc5_HasPrefix((*(_3994_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1aaa83312:;
				{
					_1a74b9b5e_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_3994_loc)).slice((_1d190dd59_Dir((*(*_self_.alloc)._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1aaa82d5b:;
				{
					_1a74b9b5e_cstrBytes(&((*(_self_))._field_Buf), (*(_3994_loc)));
				}
			}
			_match_end_1aaa82c90:;
		};
	} else {
		_1a74b9b5e_cstrBytes(&((*(_self_))._field_Buf), (*(_3994_loc)));
	};
	_1a757c0b7_write(_self_, jule::Str::lit(":", 1));
	_1a757c0b7_write(_self_, _1b915e0a5_Itoa((*((*(_39825_t))))._field_Row));
	_1a757c0b7_write(_self_, jule::Str::lit(":", 1));
	_1a757c0b7_write(_self_, _1b915e0a5_Itoa((*((*(_39825_t))))._field_Column));
}



inline void _1a757e608_head(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_1a7571386_Time _4253_time = static__1a757194c_Now();;
	_1a7570bb0_AbsTime _4263_abs = _1a7573135_Abs(&_4253_time);;
	_1a757c0b7_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1a757c0b7_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1a757c0b7_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1a757c0b7_write(_self_, jule::Str::lit("\n", 1));
	_1a757c0b7_write(_self_, jule::Str::lit("// Date: ", 9));
	_1a757c0b7_write(_self_, _1b915d923_FmtUint(_4263_abs._field_Day, 10LL));
	_1a757c0b7_write(_self_, jule::Str::lit("/", 1));
	_1a757c0b7_write(_self_, _1b915d923_FmtUint(_4263_abs._field_Month, 10LL));
	_1a757c0b7_write(_self_, jule::Str::lit("/", 1));
	_1a757c0b7_write(_self_, _1b915d923_FmtUint(_4263_abs._field_Year, 10LL));
	_1a757c0b7_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a757c0b7_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1a757c0b7_write(_self_, jule::Str::lit(" ", 1));
	_1a757c0b7_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
	if (_2133d9726_Production) {
		_1a757c0b7_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_2133d911b_RC))) {
		_1a757c0b7_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_2133d94d4_Safety))) {
		_1a757c0b7_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a757e806_links(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1a757c0b7_write(_self_, _1d1d3368a_PathApi);
	_1a757c0b7_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1a757e806_links(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa8e86d:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _46310_used = *it;
			{
				{
					
					if ((!((*(_46310_used))._field_Binded))) {
						_case_begin_1aaa90682:;
						{
							goto _iter_next_1aaa8e86d;
						}
					}
					else if (_1d1c61035_IsStdHeaderPath((*(_46310_used))._field_Path)) {
						_case_begin_1aaa9071a:;
						{
							_1a757c0b7_write(_self_, jule::Str::lit("#include ", 9));
							_1a757c0b7_write(_self_, (*_46310_used.alloc)._field_Path);
							_1a757c0b7_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1d1c61310_IsValidHeaderExt(_1d190d3ec_Ext((*(_46310_used))._field_Path))) {
						_case_begin_1aaa90781:;
						{
							_1a757c0b7_write(_self_, jule::Str::lit("#include \"", 10));
							_1a757c0b7_write(_self_, (*_46310_used.alloc)._field_Path);
							_1a757c0b7_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1aaa9053e:;
				};
			}
			_iter_next_1aaa8e86d:;
			++it;
			goto _iter_begin_1aaa8e86d;
		}
		_iter_end_1aaa8e86d:;
	};
}



inline void _1a757eaae_prepareStructure(_1a757b913_ObjectCoder* _self_, jule::Ptr<_1a59e4d06_Struct>* _47937_s) {
	{
		auto expr = &((*((*(_47937_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa92563:;
		if (it != expr_end) {
			jule::Ptr<_1a59e7a84_StructIns> _48015_ins = *it;
			{
				{
					auto expr = &((*(_48015_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aaa93e9e:;
					if (it != expr_end) {
						jule::Ptr<_1a5a09cc7_Fn> _48116_m = *it;
						{
							if ((*(_48116_m))._field_Statically) {
								goto _iter_next_1aaa93e9e;
							};
							{
								auto expr = &((*_48116_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aaa94983:;
								if (it != expr_end) {
									jule::Ptr<_1a5a0cca8_FnIns> _48517_mins = *it;
									{
										jule::Ptr<_1a5a0bc30_ParamIns> _48610_p = (*(_48517_mins))._field_Params[0LL];;
										_1e9a030bc_StrBuilder _48710_kind = static__1e9a034eb_New(40LL);;
										_1a75918a1_kind((*(_self_))._field_tc.ptr(), &(_48710_kind), (*(_48610_p))._field_Kind);
										if ((!(_1a5a08ba5_IsRef((*_48610_p.alloc)._field_Decl.ptr())))) {
											_1e9a03a5c_WriteStr(&_48710_kind, jule::Str::lit("*", 1));
										};
										(*_48610_p.alloc)._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a758aa98_customType>(_1a758aa98_customType{._field_kind=_1e9a04354_Str(&_48710_kind)}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data27)});
									}
									_iter_next_1aaa94983:;
									++it;
									goto _iter_begin_1aaa94983;
								}
								_iter_end_1aaa94983:;
							};
						}
						_iter_next_1aaa93e9e:;
						++it;
						goto _iter_begin_1aaa93e9e;
					}
					_iter_end_1aaa93e9e:;
				};
			}
			_iter_next_1aaa92563:;
			++it;
			goto _iter_begin_1aaa92563;
		}
		_iter_end_1aaa92563:;
	};
}



inline void _1a757ecac_prepareStructures(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa93e16:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _50315_s = *it;
			{
				if (((*(_50315_s))._field_Token != nullptr)) {
					_1a757eaae_prepareStructure(_self_.ptr(), &(_50315_s));
				};
			}
			_iter_next_1aaa93e16:;
			++it;
			goto _iter_begin_1aaa93e16;
		}
		_iter_end_1aaa93e16:;
	};
}



inline void _1a7580065_structurePlainDecl(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e4d06_Struct>* _51040_s) {
	{
		auto expr = &((*((*(_51040_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa990a3:;
		if (it != expr_end) {
			jule::Ptr<_1a59e7a84_StructIns> _51115_ins = *it;
			{
				_1a757c0b7_write(_self_, jule::Str::lit("struct ", 7));
				static__1a74c19e0_structureIns(&((*_self_.alloc)._field_Buf), &(_51115_ins));
				_1a757c0b7_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1aaa990a3:;
			++it;
			goto _iter_begin_1aaa990a3;
		}
		_iter_end_1aaa990a3:;
	};
}



inline void _1a7580263_structurePlainDecls(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa9a58d:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _51915_s = *it;
			{
				if (((*(_51915_s))._field_Token != nullptr)) {
					_1a7580065_structurePlainDecl(_self_, &(_51915_s));
				};
			}
			_iter_next_1aaa9a58d:;
			++it;
			goto _iter_begin_1aaa9a58d;
		}
		_iter_end_1aaa9a58d:;
	};
}



inline void _1a758051b_fieldDecl(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e6ed4_FieldIns>* _52631_f) {
	_1a75918a1_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_52631_f))))._field_Kind);
	_1a757c0b7_write(_self_, jule::Str::lit(" ", 1));
	static__1a74c1ccb_field(&((*_self_.alloc)._field_Buf), &((*((*(_52631_f))))._field_Decl));
	if (((*((*(_52631_f))))._field_Default == nullptr)) {
		if (_1a75984bd_shouldInitialized(&((*((*(_52631_f))))._field_Kind))) {
			_1a757c0b7_write(_self_, jule::Str::lit(" = ", 3));
			_1a74b919c_initExpr((*_self_.alloc)._field_ec, (*((*(_52631_f))))._field_Kind);
		};
	} else {
		_1a757c0b7_write(_self_, jule::Str::lit(" = ", 3));
		_1a74ae527_possibleRefExpr((*_self_.alloc)._field_ec, (*((*((*(_52631_f))))._field_Default))._field_Model);
	};
	_1a757c0b7_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a75807c4_structureDestructor(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _54441_s) {
	;
	jule::Ptr<_1a5a09cc7_Fn> _5473_disposeMethod = _1a59e8aeb_FindMethod((*(_54441_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _5487_disposed = static__1a5ab348a_Dispose(_5473_disposeMethod);;
	if ((!(_5487_disposed))) {
		return;;
	};
	_1a757c0b7_write(_self_, jule::Str::lit("~", 1));
	static__1a74c19e0_structureIns(&((*_self_.alloc)._field_Buf), _54441_s);
	_1a757c0b7_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1a74c0a55_func(&((*_self_.alloc)._field_Buf), &(_5473_disposeMethod));
	_1a757c0b7_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1a7580b37_structureOperatorEq(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Slice<jule::U8> _56036_ident, jule::Ptr<_1a59e7a84_StructIns>* _56056_s) {
	if ((!((*((*(_56056_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_56056_s))))._field_Operators._field_Eq != nullptr)) {
		_1a75813b8_structureOperator(_self_, _56036_ident, &((*((*(_56056_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1a757c969_indent(_self_);
	if (_1a68d5ec1_Inline) {
		_1a757c0b7_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a757c0b7_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1a757c370_writeBytes(_self_, _56036_ident);
	_1a757c0b7_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_56056_s))))._field_Fields.len() > 0LL)) {
		_1a757c56d_addIndent(_self_);
		_1a757c0b7_write(_self_, jule::Str::lit("\n", 1));
		_1a757c969_indent(_self_);
		_1a757c0b7_write(_self_, jule::Str::lit("return ", 7));
		_1a757c56d_addIndent(_self_);
		jule::Bool _5838_writed = false;;
		{
			auto expr = &((*((*(_56056_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aaaa8678:;
			if (it != expr_end) {
				jule::Ptr<_1a59e6ed4_FieldIns> _58416_f = *it;
				{
					jule::Ptr<_1a59e7a84_StructIns> _5865_strct = _1a5b54a26_Struct((*(_58416_f))._field_Kind.ptr());;
					if ((((_5865_strct != nullptr) && ((*_5865_strct.alloc)._field_Decl != nullptr)) && (*(*_5865_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						goto _iter_next_1aaaa8678;
					};
					if (_5838_writed) {
						_1a757c0b7_write(_self_, jule::Str::lit(" &&", 3));
					};
					_5838_writed=true;
					_1a757c0b7_write(_self_, jule::Str::lit("\n", 1));
					_1a757c969_indent(_self_);
					_1a757c0b7_write(_self_, jule::Str::lit("this->", 6));
					_1e9a030bc_StrBuilder _5979_fIdent = static__1e9a034eb_New((*((*_58416_f.alloc)._field_Decl))._field_Ident.len());;
					static__1a74c1ccb_field(&(_5979_fIdent), &((*_58416_f.alloc)._field_Decl));
					_1a757c370_writeBytes(_self_, _1e9a04d05_Buf(&_5979_fIdent));
					_1a757c0b7_write(_self_, jule::Str::lit(" == _other.", 11));
					_1a757c370_writeBytes(_self_, _1e9a04d05_Buf(&_5979_fIdent));
				}
				_iter_next_1aaaa8678:;
				++it;
				goto _iter_begin_1aaaa8678;
			}
			_iter_end_1aaaa8678:;
		};
		_1a757c76b_doneIndent(_self_);
		if ((!(_5838_writed))) {
			_1a757c0b7_write(_self_, jule::Str::lit("true", 4));
		};
		_1a757c0b7_write(_self_, jule::Str::lit(";\n", 2));
		_1a757c76b_doneIndent(_self_);
		_1a757c969_indent(_self_);
		_1a757c0b7_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1a757c0b7_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1a7580e9a_structureOperatorNotEq(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Slice<jule::U8> _61739_ident, jule::Ptr<_1a59e7a84_StructIns>* _61759_s) {
	if ((!((*((*(_61759_s))))._field_Comparable))) {
		return;;
	};
	_1a757c969_indent(_self_);
	if (_1a68d5ec1_Inline) {
		_1a757c0b7_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a757c0b7_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1a757c370_writeBytes(_self_, _61739_ident);
	_1a757c0b7_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a75813b8_structureOperator(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Slice<jule::U8> _63134_ident, jule::Ptr<_1a5a0cca8_FnIns>* _63154_f, jule::Str _63165_op) {
	if (((*(_63154_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6363_unary = ((*((*(_63154_f))))._field_Params.len() == 1LL);;
	jule::Bool _6373_assignment = _1a5a0a24a_IsVoid((*((*(_63154_f))))._field_Decl.ptr());;
	_1a757c969_indent(_self_);
	if (_1a68d5ec1_Inline) {
		_1a757c0b7_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6373_assignment) {
		_1a757c370_writeBytes(_self_, _63134_ident);
		_1a757c0b7_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1a5b534a3_Prim((*((*(_63154_f))))._field_Result.ptr()) == nullptr)) {
			_1a757c370_writeBytes(_self_, _63134_ident);
		} else {
			_1a757c0b7_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1a757c0b7_write(_self_, jule::Str::lit(" operator", 9));
	_1a757c0b7_write(_self_, _63165_op);
	_1a757c0b7_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6363_unary))) {
		jule::Ptr<_1a5a0bc30_ParamIns> _6598_p = (*((*(_63154_f))))._field_Params[1LL];;
		_1a7590691_paramIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), &(_6598_p));
		_1a757c0b7_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1a757c0b7_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6373_assignment))) {
		_1a757c0b7_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1a74c0d41_funcIns(&((*_self_.alloc)._field_Buf), _63154_f);
	if ((!(_6363_unary))) {
		_1a757c0b7_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6373_assignment) {
			_1a757c0b7_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1a757c0b7_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1a757c0b7_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1a7581671_structureOperators(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _68040_s) {
	_1e9a030bc_StrBuilder _6817_sb = static__1e9a034eb_New(40LL);;
	static__1a74c19e0_structureIns(&(_6817_sb), _68040_s);
	jule::Slice<jule::U8> _6833_ident = _1e9a04d05_Buf(&_6817_sb);;
	_1a7580b37_structureOperatorEq(_self_, _6833_ident, _68040_s);
	_1a7580e9a_structureOperatorNotEq(_self_, _6833_ident, _68040_s);
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1a75813b8_structureOperator(_self_, _6833_ident, &((*((*(_68040_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1a7581929_structureInsDecl(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _72138_s) {
	{
		auto expr = &((*((*(_72138_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a756a0b6:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _72215_m = *it;
			{
				if (_1a7589613_isHeadDecl(&(_72215_m))) {
					_1a7582c7c_funcDecl(_self_, &(_72215_m), false);
				};
			}
			_iter_next_1a756a0b6:;
			++it;
			goto _iter_begin_1a756a0b6;
		}
		_iter_end_1a756a0b6:;
	};
	_1a757c0b7_write(_self_, jule::Str::lit("struct ", 7));
	static__1a74c19e0_structureIns(&((*_self_.alloc)._field_Buf), _72138_s);
	_1a757c0b7_write(_self_, jule::Str::lit(" {\n", 3));
	_1a757c56d_addIndent(_self_);
	{
		auto expr = &((*((*(_72138_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90228a2:;
		if (it != expr_end) {
			jule::Ptr<_1a59e6ed4_FieldIns> _73315_f = *it;
			{
				_1a757c969_indent(_self_);
				_1a758051b_fieldDecl(_self_, &(_73315_f));
				_1a757c0b7_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1a90228a2:;
			++it;
			goto _iter_begin_1a90228a2;
		}
		_iter_end_1a90228a2:;
	};
	_1a757c969_indent(_self_);
	_1a75807c4_structureDestructor(_self_, _72138_s);
	_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
	_1a7581671_structureOperators(_self_, _72138_s);
	_1a757c0b7_write(_self_, jule::Str::lit("\n", 1));
	_1a757c76b_doneIndent(_self_);
	_1a757c969_indent(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("};", 2));
}



inline void _1a7581bd2_structureDecl(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e4d06_Struct>* _75135_s) {
	{
		auto expr = &((*((*(_75135_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9033dd0:;
		if (it != expr_end) {
			jule::Ptr<_1a59e7a84_StructIns> _75215_ins = *it;
			{
				_1a7581929_structureInsDecl(_self_, &(_75215_ins));
			}
			_iter_next_1a9033dd0:;
			++it;
			goto _iter_begin_1a9033dd0;
		}
		_iter_end_1a9033dd0:;
	};
}



inline void _1a7581dd0_structureDecls(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9034650:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _75815_s = *it;
			{
				if (((*(_75815_s))._field_Token != nullptr)) {
					_1a7581bd2_structureDecl(_self_, &(_75815_s));
					_1a757c0b7_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1a9034650:;
			++it;
			goto _iter_begin_1a9034650;
		}
		_iter_end_1a9034650:;
	};
}



inline void _1a75820cd_structureMethodDecls(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9035662:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _76715_s = *it;
			{
				if (((*(_76715_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_76715_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a9037730:;
						if (it != expr_end) {
							jule::Ptr<_1a59e7a84_StructIns> _76917_ins = *it;
							{
								{
									auto expr = &((*(_76917_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a903816a:;
									if (it != expr_end) {
										jule::Ptr<_1a5a09cc7_Fn> _77018_m = *it;
										{
											if ((!(_1a7589613_isHeadDecl(&(_77018_m))))) {
												_1a757dcde_pushResult(_self_, &(_77018_m));
												_1a7582c7c_funcDecl(_self_, &(_77018_m), false);
											};
										}
										_iter_next_1a903816a:;
										++it;
										goto _iter_begin_1a903816a;
									}
									_iter_end_1a903816a:;
								};
							}
							_iter_next_1a9037730:;
							++it;
							goto _iter_begin_1a9037730;
						}
						_iter_end_1a9037730:;
					};
				};
			}
			_iter_next_1a9035662:;
			++it;
			goto _iter_begin_1a9035662;
		}
		_iter_end_1a9035662:;
	};
}



inline void _1a75825a6_funcHead(jule::Ptr<_1a757b913_ObjectCoder> _self_, _1e9a030bc_StrBuilder* _78530_buf, jule::Ptr<_1a5a0cca8_FnIns>* _78552_f, jule::Bool _78563_ptr, jule::Str _78574_ident) {
	if ((((!(_78563_ptr)) && _1a68d5ec1_Inline) && (!(_1a5a0a767_IsEntryPoint((*((*(_78552_f))))._field_Decl.ptr()))))) {
		_1e9a03a5c_WriteStr(_78530_buf, jule::Str::lit("inline ", 7));
	};
	_1a7590d67_funcInsResult((*(_self_))._field_tc.ptr(), _78530_buf, _78552_f);
	if (_78563_ptr) {
		_1e9a03a5c_WriteStr(_78530_buf, jule::Str::lit("(*", 2));
		static__1a74c0d41_funcIns(_78530_buf, _78552_f);
		_1e9a03d15_WriteByte(_78530_buf, ')');
	} else {
		_1e9a03d15_WriteByte(_78530_buf, ' ');
		if ((_78574_ident).empty()) {
			static__1a74c0d41_funcIns(_78530_buf, _78552_f);
		} else {
			_1e9a03a5c_WriteStr(_78530_buf, _78574_ident);
		};
	};
}



inline void _1a7582919_funcDeclIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _80433_f, jule::Bool _80444_ptr) {
	_1a757c969_indent(_self_);
	_1a75825a6_funcHead(_self_, &((*_self_.alloc)._field_Buf), _80433_f, _80444_ptr, jule::Str());
	_1a7583db0_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _80433_f);
	_1a757c0b7_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1a7582c7c_funcDecl(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a09cc7_Fn>* _81130_f, jule::Bool _81138_ptr) {
	{
		auto expr = &((*((*(_81130_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a903e35d:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0cca8_FnIns> _81215_c = *it;
			{
				_1a7582919_funcDeclIns(_self_, &(_81215_c), _81138_ptr);
			}
			_iter_next_1a903e35d:;
			++it;
			goto _iter_begin_1a903e35d;
		}
		_iter_end_1a903e35d:;
	};
}



inline void _1a7583035_funcDeclTrait(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a09cc7_Fn>* _81735_f) {
	{
		auto expr = &((*((*(_81735_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9040271:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0cca8_FnIns> _81815_c = *it;
			{
				jule::Ptr<_1a5b50d52_TypeKind> _8198_k = (*((*(_81815_c))._field_Params[0LL]))._field_Kind;;
				(*((*_81815_c.alloc)._field_Params[0LL]))._field_Kind=_1a7579911_generalGCPtr;
				_1a7582919_funcDeclIns(_self_, &(_81815_c), true);
				(*((*_81815_c.alloc)._field_Params[0LL]))._field_Kind=_8198_k;
			}
			_iter_next_1a9040271:;
			++it;
			goto _iter_begin_1a9040271;
		}
		_iter_end_1a9040271:;
	};
}



inline void _1a7583233_funcDecls(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_1a68b2794_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a5a71c0c_Package>*>((void*)__jule_anon_1a9042e88, jule::Ptr<__jule_anon_1a9042e88_ctx>::make(__jule_anon_1a9042e88_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9042e88_ctx_handler));
}



inline void _1a75834db_traitDataTypeMethods(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a1d181_Trait>* _83942_t) {
	_1a68b3641_IterTraitMethods(_83942_t, jule::__new_closure<void,jule::Ptr<_1a5a09cc7_Fn>*>((void*)__jule_anon_1a90444a6, jule::Ptr<__jule_anon_1a90444a6_ctx>::make(__jule_anon_1a90444a6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a90444a6_ctx_handler));
}



inline void _1a75836d9_traitDataTypes(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_1a68b2794_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a5a71c0c_Package>*>((void*)__jule_anon_1a9049ab6, jule::Ptr<__jule_anon_1a9049ab6_ctx>::make(__jule_anon_1a9049ab6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a9049ab6_ctx_handler));
}



inline void _1a7583a4c_paramIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, _1e9a030bc_StrBuilder* _87530_buf, jule::Ptr<_1a5a0bc30_ParamIns>* _87552_p) {
	_1a7590691_paramIns((*(_self_))._field_tc.ptr(), _87530_buf, _87552_p);
	_1e9a03d15_WriteByte(_87530_buf, ' ');
	static__1a74c1418_param(_87530_buf, &((*((*(_87552_p))))._field_Decl));
}



inline void _1a7583db0_paramsIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, _1e9a030bc_StrBuilder* _88131_buf, jule::Ptr<_1a5a0cca8_FnIns>* _88153_f) {
	if (((!((*((*(_88153_f))))._field_AsAnon)) && ((*((*(_88153_f))))._field_Params.len() == 0LL))) {
		_1e9a03a5c_WriteStr(_88131_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_1e9a03d15_WriteByte(_88131_buf, '(');
	if ((*((*(_88153_f))))._field_AsAnon) {
		_1e9a03a5c_WriteStr(_88131_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_88153_f))))._field_Params.len() > 0LL)) {
			_1e9a03a5c_WriteStr(_88131_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_88153_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9053174:;
		if (it != expr_end) {
			jule::I64 _8938_i = it - expr->begin();
			jule::Ptr<_1a5a0bc30_ParamIns> _89315_p = *it;
			{
				_1a7583a4c_paramIns(_self_, _88131_buf, &(_89315_p));
				if ((((*((*(_88153_f))))._field_Params.len() - _8938_i) > 1LL)) {
					_1e9a03a5c_WriteStr(_88131_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1a9053174:;
			++it;
			_8938_i++;
			goto _iter_begin_1a9053174;
		}
		_iter_end_1a9053174:;
	};
	_1e9a03d15_WriteByte(_88131_buf, ')');
}



inline void _1a7584223_varInitExpr(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5ab1ee4_Var>* _90233_v, jule::Fn<void> _90242_init) {
	if ((*((*(_90233_v))))._field_Statically) {
		_1a757c0b7_write(_self_, jule::Str::lit("static ", 7));
	};
	_1a75918a1_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_90233_v))))._field_Kind))._field_Kind);
	_1a757c0b7_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_90233_v))))._field_Reference) {
		_1a757c0b7_write(_self_, jule::Str::lit("*", 1));
	};
	static__1a74c20b7_var(&((*_self_.alloc)._field_Buf), (*(_90233_v)));
	if ((_90242_init != nullptr)) {
		_1a757c0b7_write(_self_, jule::Str::lit(" = ", 3));
		_90242_init();
	};
	_1a757c0b7_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a75844cb_var(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5ab1ee4_Var> _92024_v) {
	if (_1c80b8e24_IsIgnoreIdent((*(_92024_v))._field_Ident)) {
		return;;
	};
	if ((((*_92024_v.alloc)._field_Value != nullptr) && ((*(*_92024_v.alloc)._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*_92024_v.alloc)._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_92024_v.alloc)._field_Reference) {
				_1a7584223_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1a905a621, jule::Ptr<__jule_anon_1a905a621_ctx>::make(__jule_anon_1a905a621_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1a905a621_ctx_handler));
			} else {
				_1a7584223_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1a905c722, jule::Ptr<__jule_anon_1a905c722_ctx>::make(__jule_anon_1a905c722_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1a905c722_ctx_handler));
			};
			return;;
		};
		_1a7584223_varInitExpr(_self_, &(_92024_v), nullptr);
		return;;
	};
	if ((*_92024_v.alloc)._field_Reference) {
		_1a7584223_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1a905ee3e, jule::Ptr<__jule_anon_1a905ee3e_ctx>::make(__jule_anon_1a905ee3e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a905ee3e_ctx_handler));
		return;;
	};
	if (_1a75984bd_shouldInitialized(&((*((*_92024_v.alloc)._field_Kind))._field_Kind))) {
		_1a7584223_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1a90610b6, jule::Ptr<__jule_anon_1a90610b6_ctx>::make(__jule_anon_1a90610b6_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1a90610b6_ctx_handler));
		return;;
	};
	_1a7584223_varInitExpr(_self_, &(_92024_v), nullptr);
}



inline void _1a758483e_anonFuncInsDecl(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59eec9a_AnonFnExprModel>* _95137_m, jule::Str _95158_ident) {
	_1a75825a6_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95137_m))))._field_Func), false, _95158_ident);
	_1a7583db0_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95137_m))))._field_Func));
	_1e9a03d15_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1a7584ba2_anonFuncIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59eec9a_AnonFnExprModel>* _95733_m, jule::Str _95754_ident) {
	_1a75825a6_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95733_m))))._field_Func), false, _95754_ident);
	_1a7583db0_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95733_m))))._field_Func));
	_1a757c0b7_write(_self_, jule::Str::lit(" ", 1));
	_1a74a76a7_anonFuncScope((*_self_.alloc)._field_sc, (*(_95733_m)), _95754_ident);
	if (((*((*((*(_95733_m))))._field_Func))._field_Scope != nullptr)) {
		_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a7585015_funcIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a0cca8_FnIns>* _96729_f, jule::Str _96740_ident) {
	_1a75825a6_funcHead(_self_, &((*_self_.alloc)._field_Buf), _96729_f, false, _96740_ident);
	_1a7583db0_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _96729_f);
	_1a757c0b7_write(_self_, jule::Str::lit(" ", 1));
	_1a74a7960_funcScope((*_self_.alloc)._field_sc, (*(_96729_f)));
	if (((*((*(_96729_f))))._field_Scope != nullptr)) {
		_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a75852bd_func(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a09cc7_Fn>* _97726_f) {
	{
		auto expr = &((*((*(_97726_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90698a5:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0cca8_FnIns> _97815_ins = *it;
			{
				_1a7585015_funcIns(_self_, &(_97815_ins), jule::Str());
			}
			_iter_next_1a90698a5:;
			++it;
			goto _iter_begin_1a90698a5;
		}
		_iter_end_1a90698a5:;
	};
}



inline void _1a7585631_funcTrait(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _98327_s, jule::Ptr<_1a5a0cca8_FnIns>* _98347_f) {
	(*((*(_98347_f))))._field_Scope=nullptr;
	_1e9a030bc_StrBuilder _9867_nident = static__1e9a034eb_New(30LL);;
	_1e9a03a5c_WriteStr(&_9867_nident, jule::Str::lit("__jule_trait_method_", 20));
	_1e9a03a5c_WriteStr(&_9867_nident, _1b915d923_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98347_f)))), 15LL));
	_1e9a03a5c_WriteStr(&_9867_nident, jule::Str::lit("_", 1));
	_1e9a03a5c_WriteStr(&_9867_nident, _1b915d923_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98327_s)))), 15LL));
	jule::Ptr<_1a5b50d52_TypeKind> _9927_k = (*((*((*(_98347_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_98347_f))))._field_Params[0LL]))._field_Kind=_1a7579911_generalGCPtr;
	_1a7585015_funcIns(_self_, _98347_f, _1e9a04354_Str(&_9867_nident));
	(*((*((*(_98347_f))))._field_Params[0LL]))._field_Kind=_9927_k;
}



inline __jule_tuple_x_1a5a0cca8_FnIns__jule_tuple_bool _1a7585972_findTraitMetMap(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a09cc7_Fn>* _99837_m) {
	__jule_tuple_x_1a5a0cca8_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a5a0cca8_FnIns> _9997_mins = (*((*(_99837_m))))._field_Instances[0LL];;
	{
		auto expr = &((*(_self_))._field_traitMetMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a907016e:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0cca8_FnIns> _100012_f = it->first;
			{
				if (((((*((*(_100012_f))._field_Decl))._field_Public == (*((*(_99837_m))))._field_Public) && ((*(*_100012_f.alloc)._field_Decl.alloc)._field_Ident == (*((*(_99837_m))))._field_Ident)) && _1a5a0d8d0_EqualFn(_100012_f, &(_9997_mins)))) {
					__jule_func_result.__jule_result_arg0 = _100012_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a907016e:;
			++it;
			goto _iter_begin_1a907016e;
		}
		_iter_end_1a907016e:;
	};
	__jule_func_result.__jule_result_arg0 = _9997_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1a7585cd5_traitWrapper(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a1d181_Trait>* _101034_t, jule::Ptr<_1a5a09cc7_Fn>* _101050_m) {
	_julec_label_1a907287a:;
	{
		auto expr = &((*((*(_101034_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9072a23:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _101215_imp = *it;
			{
				jule::Ptr<_1a5a0cca8_FnIns> _10138_mepf;
				jule::Bool _101314_exist;
				({
					__jule_tuple_x_1a5a0cca8_FnIns__jule_tuple_bool __jule_assign_result = _1a7585972_findTraitMetMap(_self_, _101050_m);
					_10138_mepf = __jule_assign_result.__jule_result_arg0;
					_101314_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_101314_exist) {
					jule::Slice<jule::Uintptr> _10169_vals = (*_self_.alloc)._field_traitMetMap[_10138_mepf];;
					{
						auto expr = &(_10169_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a907487c:;
						if (it != expr_end) {
							jule::Uintptr _101712_val = *it;
							{
								if ((_101712_val == static_cast<jule::Uintptr>(_101215_imp))) {
									goto _iter_next_1a9072a23;
								};
							}
							_iter_next_1a907487c:;
							++it;
							goto _iter_begin_1a907487c;
						}
						_iter_end_1a907487c:;
					};
					(*_self_.alloc)._field_traitMetMap[_10138_mepf]=jule::append(_10169_vals,jule::Slice<jule::Uintptr>::make({static_cast<jule::Uintptr>(_101215_imp)}));
				} else {
					(*_self_.alloc)._field_traitMetMap[_10138_mepf]=jule::append(jule::Slice<jule::Uintptr>::alloc(0LL, 0LL, 0),jule::Slice<jule::Uintptr>::make({static_cast<jule::Uintptr>(_101215_imp)}));
				};
				{
					auto expr = &((*(_101215_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9075372:;
					if (it != expr_end) {
						jule::Ptr<_1a59e7a84_StructIns> _102716_ins = *it;
						{
							_1a7585631_funcTrait(_self_, &(_102716_ins), &(_10138_mepf));
							jule::Ptr<_1a5a09cc7_Fn> _10309_sm = _1a59e8aeb_FindMethod(_102716_ins.ptr(), (*((*(_101050_m))))._field_Ident, false);;
							if (((_10309_sm == nullptr) || ((*(_10309_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1a757c56d_addIndent(_self_);
							_1a757c0b7_write(_self_, jule::Str::lit("{\n", 2));
							_1a757c969_indent(_self_);
							if (((*((*(_101050_m))))._field_Exceptional || (!(_1a5a0a24a_IsVoid((*(_101050_m)).ptr()))))) {
								_1a757c0b7_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1a74c0a55_func(&((*_self_.alloc)._field_Buf), &(_10309_sm));
							_1a757c0b7_write(_self_, jule::Str::lit("(", 1));
							_1a757c0b7_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1a758eb57_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _102716_ins);
							_1a757c0b7_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10475_ptr = (!(_1a5a08ba5_IsRef((*((*(_101050_m))))._field_Params[0LL].ptr())));;
							if (_10475_ptr) {
								_1a757c0b7_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_101050_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1a907bee4:;
								if (it != expr_end) {
									jule::Ptr<_1a5a08303_Param> _105112_mp = *it;
									{
										_1a757c0b7_write(_self_, jule::Str::lit(", ", 2));
										static__1a74c1418_param(&((*_self_.alloc)._field_Buf), &(_105112_mp));
									}
									_iter_next_1a907bee4:;
									++it;
									goto _iter_begin_1a907bee4;
								}
								_iter_end_1a907bee4:;
							};
							_1a757c0b7_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1a757c76b_doneIndent(_self_);
						}
						_iter_next_1a9075372:;
						++it;
						goto _iter_begin_1a9075372;
					}
					_iter_end_1a9075372:;
				};
			}
			_iter_next_1a9072a23:;
			++it;
			goto _iter_begin_1a9072a23;
		}
		_iter_end_1a9072a23:;
	};
}



inline void _1a7585ed3_traitWrappers(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_1a68b2794_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a5a71c0c_Package>*>((void*)__jule_anon_1a907e337, jule::Ptr<__jule_anon_1a907e337_ctx>::make(__jule_anon_1a907e337_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a907e337_ctx_handler));
}



inline void _1a7586346_traitDataMethods(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a1d181_Trait>* _107638_t, jule::Ptr<_1a59e7a84_StructIns> _107649_s) {
	_1a68b3641_IterTraitMethods(_107638_t, jule::__new_closure<void,jule::Ptr<_1a5a09cc7_Fn>*>((void*)__jule_anon_1a90806bd, jule::Ptr<__jule_anon_1a90806bd_ctx>::make(__jule_anon_1a90806bd_ctx{._self_=_self_,._107649_s=_107649_s}).as<jule::Uintptr>(), __jule_anon_1a90806bd_ctx_handler));
}



inline void _1a7586764_traitData(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a1d181_Trait>* _109331_t, jule::I64 _109342_i, jule::Ptr<_1a59e7a84_StructIns>* _109355_s) {
	_1e9a030bc_StrBuilder _10947_ident = static__1e9a034eb_New((*((*(_109331_t))))._field_Ident.len());;
	static__1a74c112c_traitDecl(&(_10947_ident), (*(_109331_t)));
	_1a757c0b7_write(_self_, jule::Str::lit("static ", 7));
	_1a757c370_writeBytes(_self_, _1e9a04d05_Buf(&_10947_ident));
	_1a757c0b7_write(_self_, jule::Str::lit("MptrData ", 9));
	_1a757c370_writeBytes(_self_, _1e9a04d05_Buf(&_10947_ident));
	_1a757c0b7_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1a757c0b7_write(_self_, _1b915e0a5_Itoa(_109342_i));
	_1a757c0b7_write(_self_, jule::Str::lit(" {\n", 3));
	_1a757c56d_addIndent(_self_);
	_1a757c969_indent(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1a757c0b7_write(_self_, _1b915e0a5_Itoa(_1a757d0eb_pushDealloc(_self_, jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait((*(_109355_s)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0)}))));
	_1a757c0b7_write(_self_, jule::Str::lit(",\n", 2));
	_1a7586346_traitDataMethods(_self_, _109331_t, (*(_109355_s)));
	_1a757c76b_doneIndent(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1a7586962_traitDatas(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_1a68b2794_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a5a71c0c_Package>*>((void*)__jule_anon_1a908d126, jule::Ptr<__jule_anon_1a908d126_ctx>::make(__jule_anon_1a908d126_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a908d126_ctx_handler));
}



inline void _1a7586b60_globals(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a908c873:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> _113015_v = *it;
			{
				_1a75918a1_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_113015_v))._field_Kind))._field_Kind);
				_1a757c0b7_write(_self_, jule::Str::lit(" ", 1));
				static__1a74c20b7_var(&((*_self_.alloc)._field_Buf), _113015_v);
				_1a757c0b7_write(_self_, jule::Str::lit(" = ", 3));
				_1a74b8de4_model((*_self_.alloc)._field_ec, (*((*((*_113015_v.alloc)._field_Value))._field_Data))._field_Model);
				_1a757c0b7_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1a908c873:;
			++it;
			goto _iter_begin_1a908c873;
		}
		_iter_end_1a908c873:;
	};
}



inline void _1a7586d5d_decls(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_1a7580263_structurePlainDecls(_self_);
	_1a7581dd0_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1e9a047d8_Len(&(*_self_.alloc)._field_Buf);
	_1a75820cd_structureMethodDecls(_self_);
	_1a7583233_funcDecls(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
	_1a75836d9_traitDataTypes(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1e9a047d8_Len(&(*_self_.alloc)._field_Buf);
	_1a7585ed3_traitWrappers(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
	_1a7586962_traitDatas(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1e9a047d8_Len(&(*_self_.alloc)._field_Buf);
	_1a7586b60_globals(_self_);
}



inline void _1a7587116_structureMethods(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _115838_s) {
	{
		auto expr = &((*((*(_115838_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9098d9b:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _115915_f = *it;
			{
				_1a75852bd_func(_self_, &(_115915_f));
				_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1a9098d9b:;
			++it;
			goto _iter_begin_1a9098d9b;
		}
		_iter_end_1a9098d9b:;
	};
}



inline void _1a75873be_structureOstream(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _116538_s) {
	_1a757c969_indent(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1a74c19e0_structureIns(&((*_self_.alloc)._field_Buf), _116538_s);
	_1a757c0b7_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1a757c56d_addIndent(_self_);
	_1a757c969_indent(_self_);
	jule::Ptr<_1a5a09cc7_Fn> _11737_fts = _1a59e8aeb_FindMethod((*(_116538_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1a5ab3754_Str(_11737_fts)) {
		_1a757c0b7_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1a74c0a55_func(&((*_self_.alloc)._field_Buf), &(_11737_fts));
		_1a757c0b7_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1a757c0b7_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1a74b9b5e_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*((*(_116538_s))))._field_Decl))._field_Ident);
		_1a757c0b7_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_116538_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a909d9d8:;
			if (it != expr_end) {
				jule::I64 _11839_i = it - expr->begin();
				jule::Ptr<_1a59e6ed4_FieldIns> _118316_f = *it;
				{
					_1a757c969_indent(_self_);
					_1a757c0b7_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1a74b9b5e_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*(_118316_f))._field_Decl))._field_Ident);
					_1a757c0b7_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1a59e7a84_StructIns> _11905_strct = _1a5b54a26_Struct((*_118316_f.alloc)._field_Kind.ptr());;
					if ((((_11905_strct != nullptr) && ((*_11905_strct.alloc)._field_Decl != nullptr)) && (*(*_11905_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						_1a757c0b7_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1a74c1ccb_field(&((*_self_.alloc)._field_Buf), &((*_118316_f.alloc)._field_Decl));
						_1a757c0b7_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1a757c0b7_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1a74c1ccb_field(&((*_self_.alloc)._field_Buf), &((*_118316_f.alloc)._field_Decl));
					};
					if (((_11839_i + 1LL) < (*((*(_116538_s))))._field_Fields.len())) {
						_1a757c0b7_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1a757c0b7_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1a909d9d8:;
				++it;
				_11839_i++;
				goto _iter_begin_1a909d9d8;
			}
			_iter_end_1a909d9d8:;
		};
		_1a757c969_indent(_self_);
		_1a757c0b7_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1a757c969_indent(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1a757c76b_doneIndent(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("}", 1));
}



inline void _1a7587677_structureIns(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e7a84_StructIns>* _121634_s) {
	_1a7587116_structureMethods(_self_, _121634_s);
	_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
	_1a75873be_structureOstream(_self_, _121634_s);
}



inline void _1a7587930_structure(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a59e4d06_Struct>* _122231_s) {
	{
		auto expr = &((*((*(_122231_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90a7dbb:;
		if (it != expr_end) {
			jule::Ptr<_1a59e7a84_StructIns> _122315_ins = *it;
			{
				_1a7587677_structureIns(_self_, &(_122315_ins));
				_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1a90a7dbb:;
			++it;
			goto _iter_begin_1a90a7dbb;
		}
		_iter_end_1a90a7dbb:;
	};
}



inline void _1a7587b2d_structures(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90a8619:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> _123015_s = *it;
			{
				if (((*(_123015_s))._field_Token != nullptr)) {
					_1a7587930_structure(_self_, &(_123015_s));
					_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1a90a8619:;
			++it;
			goto _iter_begin_1a90a8619;
		}
		_iter_end_1a90a8619:;
	};
}



inline void _1a7587d2b_funcs(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_1a68b2794_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1a5a71c0c_Package>*>((void*)__jule_anon_1a90ab1dd, jule::Ptr<__jule_anon_1a90ab1dd_ctx>::make(__jule_anon_1a90ab1dd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a90ab1dd_ctx_handler));
}



inline void _1a75880d4_pushInit(jule::Ptr<_1a757b913_ObjectCoder> _self_, jule::Ptr<_1a5a71c0c_Package>* _125430_pkg) {
	_1a68b2ac4_IterFiles(_125430_pkg, jule::__new_closure<void,jule::Ptr<_1a5b14783_SymbolTable>*>((void*)__jule_anon_1a90ac6b7, jule::Ptr<__jule_anon_1a90ac6b7_ctx>::make(__jule_anon_1a90ac6b7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a90ac6b7_ctx_handler));
}



inline void _1a75882d2_anonHashes(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_julec_label_1a90b11c1:;
	jule::Slice<jule::Ptr<_1a757a45b_anonHash>> _12717_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12717_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90b0bc6:;
		if (it != expr_end) {
			jule::Ptr<_1a757a45b_anonHash> _127315_h = *it;
			{
				_1a7584ba2_anonFuncIns(_self_, &((*(_127315_h))._field_expr), (*_127315_h.alloc)._field_ident);
			}
			_iter_next_1a90b0bc6:;
			++it;
			goto _iter_begin_1a90b0bc6;
		}
		_iter_end_1a90b0bc6:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1a90b11c1;
	};
}



inline void _1a75884d0_initCaller(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_1a757c0b7_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1a757c56d_addIndent(_self_);
	_1a68b2794_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1a5a71c0c_Package>*>((void*)__jule_anon_1a90b548e, jule::Ptr<__jule_anon_1a90b548e_ctx>::make(__jule_anon_1a90b548e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1a90b548e_ctx_handler));
	_1a757c76b_doneIndent(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1a75886cd_end(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_1a757c0b7_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_2133d8d63_Test) {
		_1a757c0b7_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1a757c0b7_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1a757c0b7_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a7588a41_insertBuf(jule::Ptr<_1a757b913_ObjectCoder> _self_, _1e9a030bc_StrBuilder* _131131_buf, jule::I64 _131148_pos) {
	if ((_1e9a047d8_Len(_131131_buf) > 0LL)) {
		jule::Slice<jule::U8> _13138_head = jule::Slice<jule::U8>::alloc(0LL, (_1e9a047d8_Len(&(*(_self_))._field_Buf) + _1e9a047d8_Len(_131131_buf)), 0);;
		(_13138_head).append(_1e9a04d05_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _131148_pos));;
		(_13138_head).append(_1e9a04d05_Buf(_131131_buf));;
		(_13138_head).append(_1e9a04d05_Buf(&(*_self_.alloc)._field_Buf).slice(_131148_pos));;
		{
			_1e9a050ad_SetBuf(&(*_self_.alloc)._field_Buf, _13138_head);
		};
	};
}



inline void _1a7588c3e_serializeHead(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_1a757ecac_prepareStructures(_self_);
	_1a757e608_head(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("\n", 1));
	_1a7586d5d_decls(_self_);
	_1a7588a41_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1e9a047d8_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1e9a047d8_Len(&(*_self_.alloc)._field_resultDecls);
	_1a757c0b7_write(_self_, jule::Str::lit("\n", 1));
	_1a7587b2d_structures(_self_);
	_1a7587d2b_funcs(_self_);
	_1a75884d0_initCaller(_self_);
	_1a757c0b7_write(_self_, jule::Str::lit("\n\n", 2));
	_1a75882d2_anonHashes(_self_);
	_1a7588a41_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1e9a047d8_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1e9a047d8_Len(&(*_self_.alloc)._field_deallocObj);
	_1a7588a41_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1e9a047d8_Len(&(*_self_.alloc)._field_anyObj);
	_1a7588a41_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1e9a047d8_Len(&(*_self_.alloc)._field_anonObj);
}



inline void _1a7588e3c_Serialize(jule::Ptr<_1a757b913_ObjectCoder> _self_) {
	_1a7588c3e_serializeHead(_self_);
	_1a75886cd_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a757b913_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "anonObj:" << _Src._field_anonObj << ", ";
	_Stream << "deallocObj:" << _Src._field_deallocObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "anons:" << _Src._field_anons << ", ";
	_Stream << "deallocated:" << _Src._field_deallocated << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "traitMetMap:" << _Src._field_traitMetMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos << ", ";
	_Stream << "wrapPos:" << _Src._field_wrapPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a758ae61_Str(_1a758aa98_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a758b2a2_Equal(jule::Ptr<_1a758aa98_customType> _self_, jule::Ptr<_1a5b50d52_TypeKind> _4418_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a758aa98_customType _Src) {
	_Stream << _1a758ae61_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a758b6d1_typeCoder> static__1a758bbed_new(jule::Ptr<_1a757b913_ObjectCoder>* _6921_oc) {
	jule::Ptr<_1a758b6d1_typeCoder> _707_tc = jule::new_ptr<_1a758b6d1_typeCoder>(_1a758b6d1_typeCoder{._field_oc=(*(_6921_oc)), });;
	(*(_707_tc))._field_rc=static__1a7594794_new(&(_707_tc));
	return _707_tc;;
}



inline void _1a758c061_toType(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _7627_buf, jule::Str _7648_id) {
	if ((!_7648_id.equal("uintptr", 7))) {
		_7648_id=_1b916121c_RealKindOf(_7648_id);
	};
	_1e9a03a5c_WriteStr(_7627_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7648_id[0LL]) && (_7648_id[0LL] <= 122LLU))) {
		_1e9a03d15_WriteByte(_7627_buf, (_7648_id[0LL] - 32LLU));
	} else {
		_1e9a03d15_WriteByte(_7627_buf, _7648_id[0LL]);
	};
	_1e9a03a5c_WriteStr(_7627_buf, _7648_id.slice(1LL));
}



inline void _1a758c3c4_prim(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _9025_buf, jule::Ptr<_1a5b5892b_Prim> _9042_p) {
	_1a758c061_toType(_self_, _9025_buf, (*(_9042_p))._field_Kind);
}



inline void _1a758c737_tuple(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _9526_buf, jule::Ptr<_1a5b5da1e_Tuple> _9547_t) {
	_1e9a03a5c_WriteStr(_9526_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9547_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90cd067:;
		if (it != expr_end) {
			jule::I64 _978_i = it - expr->begin();
			jule::Ptr<_1a5b50d52_TypeKind> _9715_tk = *it;
			{
				_1a75918a1_kind(_self_, _9526_buf, _9715_tk);
				if ((((*(_9547_t))._field_Types.len() - _978_i) > 1LL)) {
					_1e9a03d15_WriteByte(_9526_buf, ',');
				};
			}
			_iter_next_1a90cd067:;
			++it;
			_978_i++;
			goto _iter_begin_1a90cd067;
		}
		_iter_end_1a90cd067:;
	};
	_1e9a03d15_WriteByte(_9526_buf, '>');
}



inline void _1a758ca9a_asSptr(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem) {
	_1e9a03a5c_WriteStr(_10727_buf, jule::Str::lit("jule::Ptr<", 10));
	_1e9a037a4_Write(_10727_buf, _10744_elem);
	_1e9a03d15_WriteByte(_10727_buf, '>');
}



inline void _1a758ce0d_sptr(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _11425_buf, jule::Ptr<_1a5b5c457_Sptr> _11446_sptr) {
	_1e9a03a5c_WriteStr(_11425_buf, jule::Str::lit("jule::Ptr<", 10));
	_1a75918a1_kind(_self_, _11425_buf, (*(_11446_sptr))._field_Elem);
	_1e9a03d15_WriteByte(_11425_buf, '>');
}



inline void _1a758d271_ptr(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _12124_buf, jule::Ptr<_1a5b60c1e_Ptr> _12145_p) {
	;
	if (_1a5b61758_IsUnsafe(_12145_p.ptr())) {
		_1e9a03a5c_WriteStr(_12124_buf, jule::Str::lit("void*", 5));
	} else {
		_1a75918a1_kind(_self_, _12124_buf, (*(_12145_p))._field_Elem);
		_1e9a03a5c_WriteStr(_12124_buf, jule::Str::lit("*", 1));
	};
}



inline void _1a758d5d4_enumDecl(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _13229_buf, jule::Ptr<_1a5a2088c_Enum> _13250_e) {
	_1a75918a1_kind(_self_, _13229_buf, (*((*(_13250_e))._field_Kind))._field_Kind);
}



inline void _1a758d947_typeEnumDecl(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _13733_buf, jule::Ptr<_1a5a22097_TypeEnum> _13754_e) {
	_1e9a03a5c_WriteStr(_13733_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1a758dcaa_asSlice(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _14128_buf, jule::Ptr<_1a5b50d52_TypeKind> _14149_elem) {
	_1e9a03a5c_WriteStr(_14128_buf, jule::Str::lit("jule::Slice<", 12));
	_1a75918a1_kind(_self_, _14128_buf, _14149_elem);
	_1e9a03d15_WriteByte(_14128_buf, '>');
}



inline void _1a758e11d_slice(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _14826_buf, jule::Ptr<_1a5b5ce2a_Slc> _14847_s) {
	_1a758dcaa_asSlice(_self_, _14826_buf, (*(_14847_s))._field_Elem);
}



inline void _1a758e481_mapType(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _15328_buf, jule::Ptr<_1a5b5e5be_Map> _15349_m) {
	_1e9a03a5c_WriteStr(_15328_buf, jule::Str::lit("jule::Map<", 10));
	_1a75918a1_kind(_self_, _15328_buf, (*(_15349_m))._field_Key);
	_1e9a03d15_WriteByte(_15328_buf, ',');
	_1a75918a1_kind(_self_, _15328_buf, (*_15349_m.alloc)._field_Val);
	_1e9a03d15_WriteByte(_15328_buf, '>');
}



inline void _1a758eb57_structureIns(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _16733_buf, jule::Ptr<_1a59e7a84_StructIns> _16754_s) {
	if ((!((*((*(_16754_s))._field_Decl))._field_Binded))) {
		static__1a74c19e0_structureIns(_16733_buf, &(_16754_s));
		return;;
	};
	jule::Ptr<_1a59c3389_Directive> _1723_d = _1a68bc749_FindDirective(&((*(*_16754_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1723_d != nullptr)) {
		_1e9a037a4_Write(_16733_buf, _1a7589305_concatAllParts((*_1723_d.alloc)._field_Args));
		_1e9a03a5c_WriteStr(_16733_buf, jule::Str::lit("::", 2));
	};
	static__1a74c19e0_structureIns(_16733_buf, &(_16754_s));
	if (((*_16754_s.alloc)._field_Generics.len() > 0LL)) {
		_1e9a03d15_WriteByte(_16733_buf, '<');
		{
			auto expr = &((*_16754_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aac279d4:;
			if (it != expr_end) {
				jule::I64 _1809_i = it - expr->begin();
				jule::Ptr<_1a5b4e46b_InsGeneric> _18016_g = *it;
				{
					_1a75918a1_kind(_self_, _16733_buf, (*(_18016_g))._field_Kind);
					if ((((*_16754_s.alloc)._field_Generics.len() - _1809_i) > 1LL)) {
						_1e9a03d15_WriteByte(_16733_buf, ',');
					};
				}
				_iter_next_1aac279d4:;
				++it;
				_1809_i++;
				goto _iter_begin_1aac279d4;
			}
			_iter_end_1aac279d4:;
		};
		_1e9a03d15_WriteByte(_16733_buf, '>');
	};
}



inline void _1a758eeba_array(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _19126_buf, jule::Ptr<_1a5b6024b_Arr> _19147_a) {
	_1e9a03a5c_WriteStr(_19126_buf, jule::Str::lit("jule::Array<", 12));
	_1a75918a1_kind(_self_, _19126_buf, (*(_19147_a))._field_Elem);
	_1e9a03d15_WriteByte(_19126_buf, ',');
	_1e9a03a5c_WriteStr(_19126_buf, _1b915e0a5_Itoa((*_19147_a.alloc)._field_N));
	_1e9a03d15_WriteByte(_19126_buf, '>');
}



inline void _1a7590691_paramIns(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _21429_buf, jule::Ptr<_1a5a0bc30_ParamIns>* _21451_p) {
	if ((*((*((*(_21451_p))))._field_Decl))._field_Variadic) {
		_1e9a03a5c_WriteStr(_21429_buf, jule::Str::lit("jule::Slice<", 12));
		_1a75918a1_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
		_1e9a03d15_WriteByte(_21429_buf, '>');
	} else {
		_1a75918a1_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
	};
	if ((*((*((*(_21451_p))))._field_Decl))._field_Reference) {
		_1e9a03d15_WriteByte(_21429_buf, '*');
	};
}



inline void _1a7590d67_funcInsResult(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _24634_s, jule::Ptr<_1a5a0cca8_FnIns>* _24654_f) {
	if (_1a5a0a24a_IsVoid((*((*(_24654_f))))._field_Decl.ptr())) {
		if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
			_1e9a03a5c_WriteStr(_24634_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_1e9a03a5c_WriteStr(_24634_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
		_1e9a03a5c_WriteStr(_24634_s, jule::Str::lit("jule::Exceptional<", 18));
		_1a7596851_codeMut1((*(_self_))._field_rc.ptr(), _24634_s, &((*((*(_24654_f))))._field_Result));
		_1e9a03d15_WriteByte(_24634_s, '>');
		return;;
	};
	_1a7596851_codeMut1((*(_self_))._field_rc, _24634_s, &((*((*(_24654_f))))._field_Result));
}



inline void _1a75911ca_anonFunc(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _26429_buf, jule::Ptr<_1a5a0cca8_FnIns> _26450_f) {
	if ((((*(_26450_f))._field_Result != nullptr) && (_1a5b552c9_Tup((*_26450_f.alloc)._field_Result) != nullptr))) {
		_1a757da36_pushResultIns((*(_self_))._field_oc, &(_26450_f));
	};
	_1a7590d67_funcInsResult(_self_, _26429_buf, &(_26450_f));
	if (((*_26450_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_1e9a03d15_WriteByte(_26429_buf, ',');
	{
		auto expr = &((*_26450_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac3a277:;
		if (it != expr_end) {
			jule::I64 _2738_i = it - expr->begin();
			jule::Ptr<_1a5a0bc30_ParamIns> _27315_param = *it;
			{
				if (_1a5a0891e_IsSelf((*(_27315_param))._field_Decl.ptr())) {
					goto _iter_next_1aac3a277;
				};
				_1a7590691_paramIns(_self_, _26429_buf, &(_27315_param));
				if ((((*_26450_f.alloc)._field_Params.len() - _2738_i) > 1LL)) {
					_1e9a03d15_WriteByte(_26429_buf, ',');
				};
			}
			_iter_next_1aac3a277:;
			++it;
			_2738_i++;
			goto _iter_begin_1aac3a277;
		}
		_iter_end_1aac3a277:;
	};
}



inline void _1a759153d_func(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _28525_buf, jule::Ptr<_1a5a0cca8_FnIns> _28546_f) {
	_1e9a03a5c_WriteStr(_28525_buf, jule::Str::lit("jule::Fn<", 9));
	_1a75911ca_anonFunc(_self_, _28525_buf, _28546_f);
	_1e9a03d15_WriteByte(_28525_buf, '>');
}



inline void _1a75918a1_kind(_1a758b6d1_typeCoder* _self_, _1e9a030bc_StrBuilder* _29225_buf, jule::Ptr<_1a5b50d52_TypeKind> _29246_k) {
	{
		
		if ((_1a5b54a26_Struct(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aac3d984:;
			{
				_1a758eb57_structureIns(_self_, _29225_buf, _1a5b54a26_Struct(_29246_k));
				return;;
			}
		}
		else if (_1a5b51b99_Binded(_29246_k.ptr())) {
			_case_begin_1aac3da2d:;
			{
				_1e9a03a5c_WriteStr(_29225_buf, (*_29246_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1a5b534a3_Prim(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aac3da94:;
			{
				_1a758c3c4_prim(_self_, _29225_buf, _1a5b534a3_Prim(_29246_k));
				return;;
			}
		}
		else if ((_1a5b552c9_Tup(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aac3db0a:;
			{
				_1a758c737_tuple(_self_, _29225_buf, _1a5b552c9_Tup(_29246_k));
				return;;
			}
		}
		else if ((_1a5b53739_Sptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aac3db71:;
			{
				_1a758ce0d_sptr(_self_, _29225_buf, _1a5b53739_Sptr(_29246_k));
				return;;
			}
		}
		else if ((_1a5b539c0_Ptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aac3dbe8:;
			{
				_1a758d271_ptr(_self_, _29225_buf, _1a5b539c0_Ptr(_29246_k));
				return;;
			}
		}
		else if ((_1a5b53c56_Enum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aac3dc70:;
			{
				_1a758d5d4_enumDecl(_self_, _29225_buf, _1a5b53c56_Enum(_29246_k));
				return;;
			}
		}
		else if ((_1a5b53edc_TypeEnum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aac3dce7:;
			{
				_1a758d947_typeEnumDecl(_self_, _29225_buf, _1a5b53edc_TypeEnum(_29246_k));
				return;;
			}
		}
		else if ((_1a5b54509_Slc(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aac3dd6e:;
			{
				_1a758e11d_slice(_self_, _29225_buf, _1a5b54509_Slc(_29246_k));
				return;;
			}
		}
		else if ((_1a5b55043_Map(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aac3dde6:;
			{
				_1a758e481_mapType(_self_, _29225_buf, _1a5b55043_Map(_29246_k));
				return;;
			}
		}
		else if ((_1a5b54cac_Trait(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aac3de6d:;
			{
				_1e9a03a5c_WriteStr(_29225_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1a5b54273_Arr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aac3dee5:;
			{
				_1a758eeba_array(_self_, _29225_buf, _1a5b54273_Arr(_29246_k));
				return;;
			}
		}
		else if ((_1a5b54790_Fn(_29246_k.ptr()) != nullptr)) {
			_case_begin_1aac3e06c:;
			{
				_1a759153d_func(_self_, _29225_buf, _1a5b54790_Fn(_29246_k));
				return;;
			}
		}
		_match_end_1aac3d7a8:;
	};
	{
		auto &_match_expr{ (*(_29246_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data27)) {
			_case_begin_1aac3e105:;
			{
				_1e9a03a5c_WriteStr(_29225_buf, (*((*(_29246_k))._field_Kind.cast_ptr<_1a758aa98_customType>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data27)))._field_kind);
			}
		}
		else {
			_case_begin_1aac47707:;
			{
				_1e9a03a5c_WriteStr(_29225_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1aac476a2:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a758b6d1_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a75942bb_resultCoder> static__1a7594794_new(jule::Ptr<_1a758b6d1_typeCoder>* _35921_tc) {
	return jule::new_ptr<_1a75942bb_resultCoder>(_1a75942bb_resultCoder{._field_tc=(*(_35921_tc))});;
}



inline void _1a7594b07_ptr(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _36324_s, jule::Ptr<_1a5b60c1e_Ptr> _36343_p) {
	_1e9a03a5c_WriteStr(_36324_s, jule::Str::lit("p", 1));
	_1a75964dd_codeMut(_self_, _36324_s, &((*(_36343_p))._field_Elem));
}



inline void _1a7594e6a_sptr(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _36825_s, jule::Ptr<_1a5b5c457_Sptr> _36844_p) {
	_1e9a03a5c_WriteStr(_36825_s, jule::Str::lit("x", 1));
	_1a75964dd_codeMut(_self_, _36825_s, &((*(_36844_p))._field_Elem));
}



inline void _1a75952cd_mapType(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _37328_s, jule::Ptr<_1a5b5e5be_Map> _37347_p) {
	_1e9a03a5c_WriteStr(_37328_s, jule::Str::lit("m", 1));
	_1a75964dd_codeMut(_self_, _37328_s, &((*(_37347_p))._field_Key));
	_1a75964dd_codeMut(_self_, _37328_s, &((*_37347_p.alloc)._field_Val));
}



inline void _1a7595641_slice(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _37926_s, jule::Ptr<_1a5b5ce2a_Slc> _37945_slc) {
	_1e9a03a5c_WriteStr(_37926_s, jule::Str::lit("s", 1));
	_1a75964dd_codeMut(_self_, _37926_s, &((*(_37945_slc))._field_Elem));
}



inline void _1a75959a4_arr(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _38424_s, jule::Ptr<_1a5b6024b_Arr> _38443_arr) {
	_1e9a03a5c_WriteStr(_38424_s, jule::Str::lit("a", 1));
	_1e9a03a5c_WriteStr(_38424_s, _1b915dcdb_FmtInt(static_cast<jule::I64>((*(_38443_arr))._field_N), 16LL));
	_1a75964dd_codeMut(_self_, _38424_s, &((*_38443_arr.alloc)._field_Elem));
}



inline void _1a7595d17_func(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _39025_s, jule::Ptr<_1a5a0cca8_FnIns> _39044_f) {
	_1e9a03a5c_WriteStr(_39025_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_39044_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac4eba4:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0bc30_ParamIns> _39215_p = *it;
			{
				if ((*((*(_39215_p))._field_Decl))._field_Reference) {
					_1e9a03a5c_WriteStr(_39025_s, jule::Str::lit("r", 1));
				};
				_1a75964dd_codeMut(_self_, _39025_s, &((*_39215_p.alloc)._field_Kind));
			}
			_iter_next_1aac4eba4:;
			++it;
			goto _iter_begin_1aac4eba4;
		}
		_iter_end_1aac4eba4:;
	};
	if (((*_39044_f.alloc)._field_Result != nullptr)) {
		_1a75964dd_codeMut(_self_, _39025_s, &((*_39044_f.alloc)._field_Result));
	};
}



inline void _1a759617a_tup(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _40324_s, jule::Ptr<_1a5b5da1e_Tuple> _40343_tup) {
	{
		auto expr = &((*(_40343_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac52305:;
		if (it != expr_end) {
			jule::Ptr<_1a5b50d52_TypeKind> _40415_t = *it;
			{
				_1e9a03a5c_WriteStr(_40324_s, jule::Str::lit("__jule_tuple_", 13));
				_1a75964dd_codeMut(_self_, _40324_s, &(_40415_t));
			}
			_iter_next_1aac52305:;
			++it;
			goto _iter_begin_1aac52305;
		}
		_iter_end_1aac52305:;
	};
}



inline void _1a75964dd_codeMut(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _41028_s, jule::Ptr<_1a5b50d52_TypeKind>* _41048_t) {
	{
		auto &_match_expr{ (*((*(_41048_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data26)) {
			_case_begin_1aac53515:;
			{
				_1a7594b07_ptr(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a5b60c1e_Ptr>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data21)) {
			_case_begin_1aac53c30:;
			{
				_1a7594e6a_sptr(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a5b5c457_Sptr>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data21));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data24)) {
			_case_begin_1aac538bc:;
			{
				_1a75952cd_mapType(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a5b5e5be_Map>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data22)) {
			_case_begin_1aac53933:;
			{
				_1a7595641_slice(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a5b5ce2a_Slc>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data22));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data25)) {
			_case_begin_1aac53999:;
			{
				_1a75959a4_arr(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a5b6024b_Arr>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data25));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data1)) {
			_case_begin_1aac53a10:;
			{
				_1a7595d17_func(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a5a0cca8_FnIns>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data3)) {
			_case_begin_1aac53e72:;
			{
				jule::Ptr<_1a5a2088c_Enum> _4254_te = (*((*(_41048_t))))._field_Kind.cast_ptr<_1a5a2088c_Enum>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data3);;
				static__1a74c0318_toOut(_41028_s, (*(_4254_te))._field_Ident, static_cast<jule::Uintptr>(_4254_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data4)) {
			_case_begin_1aac53ed8:;
			{
				jule::Ptr<_1a5a22097_TypeEnum> _4284_te = (*((*(_41048_t))))._field_Kind.cast_ptr<_1a5a22097_TypeEnum>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data4);;
				static__1a74c0318_toOut(_41028_s, (*(_4284_te))._field_Ident, static_cast<jule::Uintptr>(_4284_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0)) {
			_case_begin_1aac5404e:;
			{
				jule::Ptr<_1a59e7a84_StructIns> _4318_si = (*((*(_41048_t))))._field_Kind.cast_ptr<_1a59e7a84_StructIns>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0);;
				static__1a74c19e0_structureIns(_41028_s, &(_4318_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data2)) {
			_case_begin_1aac540b5:;
			{
				jule::Ptr<_1a5a1d181_Trait> _4348_trt = (*((*(_41048_t))))._field_Kind.cast_ptr<_1a5a1d181_Trait>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data2);;
				static__1a74c112c_traitDecl(_41028_s, _4348_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)) {
			_case_begin_1aac5413c:;
			{
				_1e9a03a5c_WriteStr(_41028_s, (*((*((*(_41048_t))))._field_Kind.cast_ptr<_1a5b5892b_Prim>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data23)) {
			_case_begin_1aac541b4:;
			{
				_1a759617a_tup(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1a5b5da1e_Tuple>((jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data23));
			}
		}
		else {
			_case_begin_1aac53856:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:441:4"));;
			}
		}
		_match_end_1aac53801:;
	};
}



inline void _1a7596851_codeMut1(_1a75942bb_resultCoder* _self_, _1e9a030bc_StrBuilder* _44529_s, jule::Ptr<_1a5b50d52_TypeKind>* _44549_t) {
	jule::Ptr<_1a5b5da1e_Tuple> _4467_tup = _1a5b552c9_Tup((*(_44549_t)).ptr());;
	if ((_4467_tup != nullptr)) {
		_1a759617a_tup(_self_, _44529_s, _4467_tup);
	} else {
		_1a75918a1_kind((*(_self_))._field_tc.ptr(), _44529_s, (*(_44549_t)));
	};
}



inline jule::Slice<jule::U8> _1a7596b5e_code(_1a75942bb_resultCoder* _self_, jule::Ptr<_1a5b50d52_TypeKind>* _45425_t) {
	_1e9a030bc_StrBuilder _4557_s = static__1e9a034eb_New(20LL);;
	_1a75964dd_codeMut(_self_, &(_4557_s), _45425_t);
	return _1e9a04d05_Buf(&_4557_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a75942bb_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aac60368_Name(_1aac5ee4a_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aac604bc_What(_1aac5ee4a_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aac60621_Reset(_1aac5ee4a_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aac60775_Short(_1aac5ee4a_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aac5ee4a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aac63679_Name(_1aac639ed_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aac63cd9_What(_1aac639ed_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aac63e2c_Reset(_1aac639ed_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aac64070_Short(_1aac639ed_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aac639ed_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aac66cdc_Name(_1aac67161_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aac6744c_What(_1aac67161_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aac67590_Reset(_1aac67161_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aac676d3_Short(_1aac67161_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aac67161_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aac6a494_Name(_1aac6a818_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aac6ab04_What(_1aac6a818_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aac6ac47_Reset(_1aac6a818_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aac6ad8a_Short(_1aac6a818_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aac6a818_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1aac6db07_Name(_1aac6de7b_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1aac6e267_What(_1aac6de7b_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1aac6e3aa_Reset(_1aac6de7b_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1aac6e4ed_Short(_1aac6de7b_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1aac6de7b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a668eb59_FlagSet> static__1a668ee45_New(void) {
	return jule::new_ptr<_1a668eb59_FlagSet>(_1a668eb59_FlagSet{._field_flags=jule::Slice<jule::Trait>::alloc(0LL, 20LL)});;
}



inline jule::Trait _1a66903eb_FindFlag(_1a668eb59_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac78e20:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1a668d086_CommonFlagMptrData*)_7215_flag.safe_type())->_1a665bc03_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1aac78e20:;
			++it;
			goto _iter_begin_1aac78e20;
		}
		_iter_end_1aac78e20:;
	};
	return nullptr;;
}



inline jule::Trait _1a669073c_FindFlagShort(_1a668eb59_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac79c9a:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1a668d086_CommonFlagMptrData*)_8215_flag.safe_type())->_1a665be34_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1aac79c9a:;
			++it;
			goto _iter_begin_1aac79c9a;
		}
		_iter_end_1aac79c9a:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a6690d14_Parse(_1a668eb59_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1a669261d_argParser _1167_ap = _1a669261d_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, };;
	({
		auto except = _1a6693b19_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1aac6de7b_Flag> _1aacd9557_addFlagCommon(_1a668eb59_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1a66903eb_FindFlag(_self_, _13132_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1a669073c_FindFlagShort(_self_, _13143_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1aac6de7b_Flag> _1407_flag = jule::new_ptr<_1aac6de7b_Flag>(_1aac6de7b_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_what=_13156_what, });;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1a668d086_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1aac6a818_Flag> _1aace185b_addFlagCommon(_1a668eb59_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1a66903eb_FindFlag(_self_, _13132_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1a669073c_FindFlagShort(_self_, _13143_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1aac6a818_Flag> _1407_flag = jule::new_ptr<_1aac6a818_Flag>(_1aac6a818_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_what=_13156_what, });;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1a668d086_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1aacd6d29_AddVar(_1a668eb59_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1aac6de7b_Flag> _1717_flag = _1aacd9557_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1aacde172_AddVar(_1a668eb59_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1aac6a818_Flag> _1717_flag = _1aace185b_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1a668eb59_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1aac81b5e_parseInteger(_1a669261d_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1aac84755:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1d1902dc5_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1aac84b1d:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d1902dc5_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1aac8429e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d1902dc5_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1aac84315:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1aac8437b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aac84238:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aac84139:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1aac895d4_parseInteger(_1a669261d_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1aac8c186:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1d1902dc5_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1aac8c54e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d1902dc5_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1aac8bbd0:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1d1902dc5_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1aac8bc46:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1aac8bcac:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1aac8bb69:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1aac8ba6a:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a6692e37_getData(_1a669261d_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a66931ac_processFlag(_1a669261d_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a668d086_CommonFlag_mptr_data3)) {
			_case_begin_1aac7dd6a:;
			{
				jule::Ptr<_1aac6a818_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1aac6a818_Flag>((jule::Trait::Type*)&_1a668d086_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1aac7dd15:;
	};
	jule::Str _2203_data = _1a6692e37_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a668d086_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a665bc03_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a668d086_CommonFlag_mptr_data0)) {
			_case_begin_1aac80c18:;
			{
				jule::Ptr<_1aac5ee4a_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1aac5ee4a_Flag>((jule::Trait::Type*)&_1a668d086_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1aac81b5e_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1aac81ea0, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a668d086_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a665bc03_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a668d086_CommonFlag_mptr_data1)) {
			_case_begin_1aac805db:;
			{
				jule::Ptr<_1aac639ed_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1aac639ed_Flag>((jule::Trait::Type*)&_1a668d086_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1aac895d4_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1aac89d65, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a668d086_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a665bc03_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a668d086_CommonFlag_mptr_data2)) {
			_case_begin_1aac80c7e:;
			{
				jule::Ptr<_1aac67161_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1aac67161_Flag>((jule::Trait::Type*)&_1a668d086_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1b9154056_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1a668d086_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1a665bc03_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a668d086_CommonFlag_mptr_data4)) {
			_case_begin_1aac80d06:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1aac6de7b_Flag>((jule::Trait::Type*)&_1a668d086_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1aac804ed:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a6693465_singleDash(_1a669261d_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		char *it = expr.operator char*();
		const char *end = it + expr.len();
		std::size_t len;
		jule::I32 _25710_r;
		_iter_begin_1aac9391d:;
		std::tie(_25710_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1a669073c_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune(_25710_r)), &__jule_any_type4)};
				};
				({
					auto except = _1a66931ac_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1aac9391d:;
			it += len;
			goto _iter_begin_1aac9391d;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a669371d_doubleDash(_1a669261d_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait _2707_flag = _1a66903eb_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1a66931ac_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a669391b_tryArg(_1a669261d_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1a669371d_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1a6693465_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a6693b19_parse(_1a669261d_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a669391b_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1aac993a2:;
	}
	_iter_end_1aac993a2:;;
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1a669261d_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d1d2a7b4_Cmd> static__1d1d2abb0_New(jule::Str _2616_path) {
	return jule::new_ptr<_1d1d2a7b4_Cmd>(_1d1d2a7b4_Cmd{._field_path=_2616_path, });;
}



inline jule::VoidExceptional _1d1d2adad_Spawn(_1d1d2a7b4_Cmd* _self_) {
	return _1d1d2ed7e_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1d1d2b342_Wait(_1d1d2a7b4_Cmd* _self_) {
	return _1d1d30313_wait(_self_);
}



inline jule::VoidExceptional _1d1d2ed7e_spawn(_1d1d2a7b4_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:43:4"));;
	};
	STARTUPINFOW _457_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _467_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_457_startupInfo)), sizeof(_457_startupInfo));
		ZeroMemory((&(_467_processInfo)), sizeof(_467_processInfo));
	};
	_457_startupInfo.cb=sizeof(_457_startupInfo);
	jule::Slice<jule::Str> _527_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_527_args[0LL]=(*(_self_))._field_path;
	(_527_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _553_argv = _21463032d_UTF16FromStr(_1d1d30984_makeCmdLine(_527_args));;
	jule::Slice<jule::U16> _563_env = ({
		auto except = _1d1d30d5d_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _577_envp = (&(_563_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_577_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_553_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _577_envp, nullptr, (&(_457_startupInfo)), (&(_467_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_1d1d3207e_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_467_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_467_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1d1d30313_wait(_1d1d2a7b4_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:86:4"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _897_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_897_exitCode)));
		_2146593ac_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_2146593ac_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>{.result=static_cast<jule::I64>(_897_exitCode)};;
}





std::ostream &operator<<(std::ostream &_Stream, _1d1d2a7b4_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1a68d0493_dataCheckpoint _Src) {
	_Stream << "dataCheckpoint{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1a68b0055_IR__jule_tuple_s_1d1c6d64c_Log static__1a68b04ea_Build(jule::Str _2718_path, jule::I64 _2729_flags) {
	__jule_tuple_x_1a68b0055_IR__jule_tuple_s_1d1c6d64c_Log __jule_func_result;
	jule::Ptr<_1a68ac5c4_JuleImporter> _287_importer = static__1a68ac9c0_New(_1a68b1ed0_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1a59c2058_Ast>> _297_files;
	jule::Slice<_1d1c6d64c_Log> _2918_logs;
	({
		__jule_tuple_sx_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a68adeaa_ImportPackage(_287_importer.ptr(), _2718_path, true);
		_297_files = __jule_assign_result.__jule_result_arg0;
		_2918_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2918_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2918_logs;
		return __jule_func_result;;
	};
	jule::Str _333_root = _2718_path;;
	if ((_297_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5a71c0c_Package> _397_pkg;
	({
		__jule_tuple_x_1a5a71c0c_Package__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a5b720d7_AnalyzePackage(_297_files, jule::Trait(_287_importer, (jule::Trait::Type*)&_1a5a6adc1_Importer_mptr_data0), _2729_flags);
		_397_pkg = __jule_assign_result.__jule_result_arg0;
		_2918_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2918_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2918_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a68b0055_IR> _447_ir = jule::new_ptr<_1a68b0055_IR>(_1a68b0055_IR{._field_Root=_333_root, ._field_Main=_397_pkg, ._field_Used=_1a68acc56_AllPackages(_287_importer), });;
	(*(_447_ir))._field_Passes=_1a68b1cc1_getAllUniquePasses(&((*_447_ir.alloc)._field_Main), (*_447_ir.alloc)._field_Used);
	__jule_func_result.__jule_result_arg0 = _447_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a68b09d4_appendStructs(_1a68b0055_IR* _self_, jule::Ptr<_1a5a71c0c_Package>* _5630_p, jule::Slice<jule::Ptr<_1a59e4d06_Struct>>* _5654_buffer) {
	{
		auto expr = &((*((*(_5630_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa328c51:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _5715_f = *it;
			{
				{
					auto expr = &((*(_5715_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa32969c:;
					if (it != expr_end) {
						jule::Ptr<_1a59e4d06_Struct> _5816_s = *it;
						{
							if ((!((*(_5816_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1a59e4d06_Struct>> &__jule_push_dest = (*(_5654_buffer)); __jule_push_dest.push(_5816_s); };
							};
						}
						_iter_next_1aa32969c:;
						++it;
						goto _iter_begin_1aa32969c;
					}
					_iter_end_1aa32969c:;
				};
			}
			_iter_next_1aa328c51:;
			++it;
			goto _iter_begin_1aa328c51;
		}
		_iter_end_1aa328c51:;
	};
}



inline jule::Slice<jule::Ptr<_1a59e4d06_Struct>> _1a68b0c6a_GetAllStructures(_1a68b0055_IR* _self_) {
	jule::Slice<jule::Ptr<_1a59e4d06_Struct>> _6911_buffer = nullptr;;
	_1a68b09d4_appendStructs(_self_, &((*(_self_))._field_Main), &(_6911_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa32a846:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _7115_u = *it;
			{
				if ((!((*(_7115_u))._field_Binded))) {
					_1a68b09d4_appendStructs(_self_, &((*_7115_u.alloc)._field_Package), &(_6911_buffer));
				};
			}
			_iter_next_1aa32a846:;
			++it;
			goto _iter_begin_1aa32a846;
		}
		_iter_end_1aa32a846:;
	};
	return _6911_buffer;;
}



inline void _1a68b10cd_appendGlobals(_1a68b0055_IR* _self_, jule::Ptr<_1a5a71c0c_Package>* _7930_p, jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>* _7954_buffer) {
	{
		auto expr = &((*((*(_7930_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa32be96:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _8015_f = *it;
			{
				{
					auto expr = &((*(_8015_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa32c8e2:;
					if (it != expr_end) {
						jule::Ptr<_1a5ab1ee4_Var> _8116_v = *it;
						{
							if (((((*(_8116_v))._field_Token != nullptr) && (!((*_8116_v.alloc)._field_Binded))) && (!((*_8116_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> &__jule_push_dest = (*(_7954_buffer)); __jule_push_dest.push(_8116_v); };
							};
						}
						_iter_next_1aa32c8e2:;
						++it;
						goto _iter_begin_1aa32c8e2;
					}
					_iter_end_1aa32c8e2:;
				};
			}
			_iter_next_1aa32be96:;
			++it;
			goto _iter_begin_1aa32be96;
		}
		_iter_end_1aa32be96:;
	};
}



inline jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _1a68b1364_GetAllGlobals(_1a68b0055_IR* _self_) {
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _9211_buffer = nullptr;;
	_1a68b10cd_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9211_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa32e2ea:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _9415_u = *it;
			{
				if ((!((*(_9415_u))._field_Binded))) {
					_1a68b10cd_appendGlobals(_self_, &((*_9415_u.alloc)._field_Package), &(_9211_buffer));
				};
			}
			_iter_next_1aa32e2ea:;
			++it;
			goto _iter_begin_1aa32e2ea;
		}
		_iter_end_1aa32e2ea:;
	};
	return _9211_buffer;;
}



inline void _1a68b1562_Order(_1a68b0055_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1a68b0c6a_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1a68b1364_GetAllGlobals(_self_);
	_1aa330dce_order(&((*(_self_))._field_Ordered._field_Structs));
	_1aa336533_order(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1a68b0055_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _21462e3b5_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _21462e67e_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _21462e9c0_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _886_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a66a1a7d:;
		if (it != expr_end) {
			jule::I32 *_899_v = it;
			{
				if (((*(_899_v)) >= 65536LL)) {
					(_886_n)++;
				};
			}
			_iter_next_1a66a1a7d:;
			++it;
			goto _iter_begin_1a66a1a7d;
		}
		_iter_end_1a66a1a7d:;
	};
	jule::Slice<jule::U16> _956_a = jule::Slice<jule::U16>::alloc(_886_n, _886_n, 0);;
	_886_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a66a2cb0:;
		if (it != expr_end) {
			jule::I32 *_979_v = it;
			{
				{
					
					if (((0LL <= (*(_979_v))) && ((*(_979_v)) < 55296LL)) || ((57344LL <= (*(_979_v))) && ((*(_979_v)) < 65536LL))) {
						_case_begin_1a66a3a2a:;
						{
							_956_a[_886_n]=static_cast<jule::U16>((*(_979_v)));
							(_886_n)++;
						}
					}
					else if (((65536LL <= (*(_979_v))) && ((*(_979_v)) <= 1114111LL))) {
						_case_begin_1a66a370b:;
						{
							jule::I32 _1054_r1;
							jule::I32 _1058_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _21462e67e_EncodeRune((*(_979_v)));
								_1054_r1 = __jule_assign_result.__jule_result_arg0;
								_1058_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_956_a[_886_n]=static_cast<jule::U16>(_1054_r1);
							_956_a[(_886_n + 1LL)]=static_cast<jule::U16>(_1058_r2);
							_886_n+=2LL;
						}
					}
					else {
						_case_begin_1a66a3695:;
						{
							_956_a[_886_n]=static_cast<jule::U16>(65533LLU);
							(_886_n)++;
						}
					}
					_match_end_1a66a3596:;
				};
			}
			_iter_next_1a66a2cb0:;
			++it;
			goto _iter_begin_1a66a2cb0;
		}
		_iter_end_1a66a2cb0:;
	};
	return _956_a.slice(0LL, _886_n);;
}



inline jule::Slice<jule::I32> _21462ec56_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1206_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I64 _1216_n = 0LL;;
	jule::I64 _1226_i = 0LL;;
	for (; (_1226_i < _11911_s.len()); (_1226_i)++) {
		{
			jule::U16 _1243_r = _11911_s[_1226_i];;
			{
				
				if ((_1243_r < 55296LLU) || (57344LL <= _1243_r)) {
					_case_begin_1a66a8326:;
					{
						_1206_a[_1216_n]=static_cast<jule::I32>(_1243_r);
					}
				}
				else if (((((_1243_r < 56320LLU) && ((_1226_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1226_i + 1LL)])) && (_11911_s[(_1226_i + 1LL)] < 57344LLU))) {
					_case_begin_1a66a80e5:;
					{
						_1206_a[_1216_n]=_21462e3b5_DecodeRune(static_cast<jule::I32>(_1243_r), static_cast<jule::I32>(_11911_s[(_1226_i + 1LL)]));
						(_1226_i)++;
					}
				}
				else {
					_case_begin_1a66a7c3d:;
					{
						_1206_a[_1216_n]=65533LL;
					}
				}
				_match_end_1a66a7bc7:;
			};
			(_1216_n)++;
		}
	_iter_next_1a66a5c80:;
	}
	_iter_end_1a66a5c80:;;
	return _1206_a.slice(0LL, _1216_n);;
}



inline jule::Slice<jule::U16> _2146300ca_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1a66aacda:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(_14929_r)}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1a66aad84:;
			{
				jule::I32 _1563_r1;
				jule::I32 _1567_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _21462e67e_EncodeRune(_14929_r);
					_1563_r1 = __jule_assign_result.__jule_result_arg0;
					_1567_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(_1563_r1),static_cast<jule::U16>(_1567_r2)}));;
			}
		}
		_match_end_1a66aabec:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _21463032d_UTF16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _202_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _216_buff = jule::Slice<jule::U16>::alloc(0LL, _202_runes.len(), 0);;
	{
		auto expr = &(_202_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a66b670d:;
		if (it != expr_end) {
			jule::I32 *_229_r = it;
			{
				if (((*(_229_r)) == 0LL)) {
					goto _iter_end_1a66b670d;
				};
				_216_buff=_2146300ca_AppendRune(_216_buff, (*(_229_r)));
			}
			_iter_next_1a66b670d:;
			++it;
			goto _iter_begin_1a66b670d;
		}
		_iter_end_1a66b670d:;
	};
	return _2146300ca_AppendRune(_216_buff, 0LL);;
}



inline jule::Str _21463063b_UTF16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _386_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a66b8ec4:;
		if (it != expr_end) {
			jule::I64 _396_i = it - expr->begin();
			jule::U16 *_399_v = it;
			{
				if (((*(_399_v)) == 0LLU)) {
					(_386_codePage).mut_slice(0LL, _396_i);;
					goto _iter_end_1a66b8ec4;
				};
			}
			_iter_next_1a66b8ec4:;
			++it;
			_396_i++;
			goto _iter_begin_1a66b8ec4;
		}
		_iter_end_1a66b8ec4:;
	};
	return static_cast<jule::Str>(_21462ec56_Decode(_386_codePage));;
}



inline jule::Str _214630905_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5510_codePage;;
	jule::I64 _566_i = 0LL;;
	for (; ; (_566_i)++) {
		{
			jule::U16 _583_r = _5023_s[_566_i];;
			if ((_583_r == 0LLU)) {
				return static_cast<jule::Str>(_21462ec56_Decode(_5510_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5510_codePage; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1a66ba0d5:;
	}
	_iter_end_1a66ba0d5:;;
	return jule::Str();;
}



inline jule::I64 _21457d3be_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _2146590e3_GetStdHandle(jule::Uintptr _6417_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6417_stdh)));;
}



inline jule::Bool _2146593ac_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I64 _214659731_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return _wstat(((wchar_t*)(_6817_path)), _6833_stat);;
}



inline jule::I64 _214659b60_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode) {
	return _wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode);;
}



inline jule::U32 _214659d6e_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _21465a1e3_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff)));;
}



inline jule::Bool _21465a776_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _21465aa40_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _21465ad09_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _21465b2e3_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1092_buff, jule::U16** _10914_fname) {
	return GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1092_buff)), ((wchar_t**)(_10914_fname)));;
}



inline jule::Bool _21465b667_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)(_11440_mode)));;
}



inline jule::Bool _21465bc72_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _21465c2c2_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _1257_written, void* _12521_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_1257_written)))), _12521_reserved);;
}



inline jule::Bool _21465c7ab_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _1337_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)(_1337_readed)), nullptr);;
}



inline jule::Uintptr _21465cd3e_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data)));;
}



inline jule::I64 _21465d1b3_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return FindNextFileW(((HANDLE)(_14924_h)), _14939_data);;
}



inline jule::I64 _21465d47c_FindClose(jule::Uintptr _15414_h) {
	return FindClose(((HANDLE)(_15414_h)));;
}



inline jule::I64 _21466055b_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _214660935_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _214660cdc_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _21466101d_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _213561e31_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _213560b99_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = static_cast<jule::I32>(((_1872_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_21356124e_acceptRange _1962_accept = _2135615e5_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _213562272_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _213560b99_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = static_cast<jule::I32>(((_2342_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_21356124e_acceptRange _2432_accept = _2135615e5_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _2135627c2_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_213563edd_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1a763ae34;
			};
		}
	_iter_next_1a763ae34:;
	}
	_iter_end_1a763ae34:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213562272_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _213562a8b_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1a763e0e1:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1a763e4dc:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1a763e564:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1a763e5db:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1a763e663:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1a763e157:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1a763e07a:;
			{
				return -1LL;;
			}
		}
		_match_end_1a763d882:;
	};
}



inline jule::I64 _213563020_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3762_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3762_i <= 127LLU)) {
			_case_begin_1a7643d0a:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3762_i <= 2047LLU)) {
			_case_begin_1a7644536:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3762_i > 1114111LLU) || ((55296LL <= _3762_i) && (_3762_i <= 57343LLU))) {
			_case_begin_1a764208e:;
			{
				_37434_r=65533LL;
				goto _case_begin_1a76443e3;
			}
		}
		else if ((_3762_i <= 65535LLU)) {
			_case_begin_1a76443e3:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_1a7641bc6:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_1a7641b60:;
	};
}



inline jule::Slice<jule::U8> _21356331c_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(_40530_r)}));;
	};
	return _213563691_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _213563691_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1a764b7d5:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(192LL | static_cast<jule::U8>((_41242_r >> 6LL))),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1a764a3b6:;
			{
				_41242_r=128LL;
				goto _case_begin_1a764a42c;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1a764a42c:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(224LL | static_cast<jule::U8>((_41242_r >> 12LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else {
			_case_begin_1a7649b68:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(240LL | static_cast<jule::U8>((_41242_r >> 18LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		_match_end_1a7649b02:;
	};
}



inline jule::I64 _213563c24_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1a764edc1;
			};
			jule::U8 _4823_x = _213560b99_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1a764edc1;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1a764edc1;
			};
			_21356124e_acceptRange _4923_accept = _2135615e5_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1a764edc1:;
	}
	_iter_end_1a764edc1:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _213563edd_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline void _213565132_handleRW(jule::Slice<jule::U8>* _514_b) {
}



inline void _21356ad91_HandleRW(jule::Slice<jule::U8>* _814_b) {
	_213565132_handleRW(_814_b);
}



inline jule::Str _1e99e65aa_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1a7676ea3_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _246_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_246_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_246_buf._len = _2326_n;
		_246_buf._cap = _2326_n;
		_246_buf._slice = _2316_e;
	};
	return _246_buf;;
}



inline jule::Slice<jule::U8> _1e9a02352_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1a7676ea3_Slice((&(_4113_s[0LL])), _4113_s.len());;
}



inline jule::Str _1e9a025d8_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1e99e65aa_Str((&(_5013_b[0LL])), _5013_b.len());;
}



inline jule::Str _1e9a028a2_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::I64 _1e9a31a24_getLastOsErrorWindows(void) {
	jule::U32 _162_err = _214659d6e_GetLastError();;
	{
		auto &_match_expr{ _162_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1a768bade:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a768bb55:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a768bbbb:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1a768bc32:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1a76889ba:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1a7688a97:;
	};
}



inline jule::Slice<jule::Str> _1e9a32a9c_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _1e9a3300e_WorkingDir(void) {
	return _1e9a33949_getwd();
}



inline jule::Exceptional<jule::Str> _1e9a33949_getwd(void) {
	jule::Array<jule::U16,261> _1510_buf = jule::Array<jule::U16,261>(0);;
	jule::U32 _162_n = _21465a1e3_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_1510_buf[0LL])));;
	if ((_162_n == 0LLU)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_1e9a31a24_getLastOsErrorWindows(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Str>{.result=_214630905_U16PtrToStr((&(_1510_buf[0LL])))};;
}



inline jule::Bool _1d1b2e9d6_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1d1b8c758__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1d1b95ba1_isExcludingLatin(_1d1b389ac_Letter, _7613_r);;
}



inline jule::Bool _1d1b95024_is16(jule::Slice<_1d1b93286_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a82c65a2:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_1d1b93286_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_1944_range))._field_Lo),(*(_1944_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a82c65a2:;
				++it;
				_1937_i++;
				goto _iter_begin_1a82c65a2;
			}
			_iter_end_1a82c65a2:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ((_2096_hi - _2086_lo) >> 1LLU));;
			_1d1b93286_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2123_range))._field_Lo),(*(_2123_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1a82c53b4:;
	}
	_iter_end_1a82c53b4:;;
	return false;;
}



inline jule::Bool _1d1b95398_is32(jule::Slice<_1d1b937b4_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a82ccc7e:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_1d1b937b4_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2314_range))._field_Lo),(*(_2314_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a82ccc7e:;
				++it;
				_2307_i++;
				goto _iter_begin_1a82ccc7e;
			}
			_iter_end_1a82ccc7e:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ((_2466_hi - _2456_lo) >> 1LLU));;
			_1d1b937b4_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2493_range))._field_Lo),(*(_2493_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1a82cc6a7:;
	}
	_iter_end_1a82cc6a7:;;
	return false;;
}



inline jule::Bool _1d1b95ba1_isExcludingLatin(jule::Ptr<_1d1b93c37_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1d1b93286_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1d1b95024_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1d1b937b4_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1d1b95398_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1d1b95de3_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1d1b8c758__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1d1b95ba1_isExcludingLatin(_1d1b3ec7c_Upper, _29512_r);;
}



inline jule::I64 _1d1901a94_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I64)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1a82e36e0:;
	}
	_iter_end_1a82e36e0:;;
	return -1LL;;
}



inline jule::I64 _1d19022d1_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82e5824:;
		if (it != expr_end) {
			jule::I64 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1a82e5824:;
			++it;
			_706_i++;
			goto _iter_begin_1a82e5824;
		}
		_iter_end_1a82e5824:;
	};
	return -1LL;;
}



inline jule::I64 _1d1902655_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1d1901a94_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1d1902a0c_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1e9a030bc_StrBuilder _186_ss = static__1e9a034eb_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1e9a03a5c_WriteStr(&_186_ss, _1111_s);
		}
	_iter_next_1a8306abb:;
	}
	_iter_end_1a8306abb:;;
	return _1e9a04354_Str(&_186_ss);;
}



inline jule::Bool _1d1902dc5_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1d1903249_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _1d1903700_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1d1902dc5_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1a830a707:;
	}
	_iter_end_1a830a707:;;
	return -1LL;;
}



inline jule::I64 _1d1903a41_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1d1903700_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _1d1903e70_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1a830d452:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1a830d0ab;
					};
				}
			_iter_next_1a830e08a:;
			}
			_iter_end_1a830e08a:;;
			return _636_j;;
		}
	_iter_next_1a830d0ab:;
	}
	_iter_end_1a830d0ab:;;
	return -1LL;;
}



inline jule::I64 _1d19042e4_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1d1903e70_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _1d1905acb_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1d1902655_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _1d1905e50_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213562272_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1a8316944:;
	}
	_iter_end_1a8316944:;;
	return -1LL;;
}



inline jule::I64 _1d1906879_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213562272_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1d1905e50_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1a8319c77:;
	}
	_iter_end_1a8319c77:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1d190701c_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = jule::Slice<jule::Str>::alloc(0LL, _2166_cap);;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _1d1903700_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1a831e95d;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1a831e95d:;
	}
	_iter_end_1a831e95d:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Bool _1d1907391_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_1d1903700_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _1d1907e0d_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_1d1906879_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I64 _1d1908282_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2686_n = 0LL;;
	jule::I64 _2696_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2713_j = _1d1903700_FindAt(_26410_s, _26418_sub, _2696_i);;
			if ((_2713_j == -1LL)) {
				goto _iter_end_1a8324ac8;
			};
			(_2686_n)++;
			_2696_i=(_2713_j + _26418_sub.len());
		}
	_iter_next_1a8324ac8:;
	}
	_iter_end_1a8324ac8:;;
	return _2686_n;;
}



inline jule::Str _1d190876b_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I64 _2892_m = _1d1908282_Count(_28412_s, _28420_sub);;
	if ((_2892_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2892_m < _28444_n))) {
		_28444_n=_2892_m;
	};
	_1e9a030bc_StrBuilder _2976_ss = static__1e9a034eb_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I64 _2986_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I64 _3003_j = _1d1903700_FindAt(_28412_s, _28420_sub, _2986_i);;
			if ((_3003_j == -1LL)) {
				goto _iter_end_1a832858d;
			};
			_1e9a03a5c_WriteStr(&_2976_ss, _28412_s.slice(_2986_i, _3003_j));
			_1e9a03a5c_WriteStr(&_2976_ss, _28430_new);
			_2986_i=(_3003_j + _28420_sub.len());
		}
	_iter_next_1a832858d:;
	}
	_iter_end_1a832858d:;;
	_1e9a03a5c_WriteStr(&_2976_ss, _28412_s.slice(_2986_i));
	return _1e9a04354_Str(&_2976_ss);;
}



inline jule::Str _1d19094e7_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I64 _3426_i = 0LL;;
	while ((_3426_i < _34117_s.len())) {
		{
			jule::I32 _3443_r;
			jule::I64 _3446_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213562272_DecodeRuneStr(_34117_s.slice(_3426_i));
				_3443_r = __jule_assign_result.__jule_result_arg0;
				_3446_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1d1905e50_FindRune(_34125_cutset, _3443_r) == -1LL)) {
				return _34117_s.slice(_3426_i);;
			};
			_3426_i+=_3446_n;
		}
	_iter_next_1a832ce66:;
	}
	_iter_end_1a832ce66:;;
	return jule::Str();;
}



inline jule::Str _1d190986b_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I64 _3566_i = _35514_s.len();;
	while ((_3566_i > 0LL)) {
		{
			jule::I32 _3583_r;
			jule::I64 _3586_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2135627c2_DecodeLastRuneStr(_35514_s.slice(0LL, _3566_i));
				_3583_r = __jule_assign_result.__jule_result_arg0;
				_3586_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1d1905e50_FindRune(_35522_cutset, _3583_r) == -1LL)) {
				return _35514_s.slice(0LL, _3566_i);;
			};
			_3566_i-=_3586_n;
		}
	_iter_next_1a8330133:;
	}
	_iter_end_1a8330133:;;
	return jule::Str();;
}



inline jule::Str _1d1909be0_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _1d19094e7_TrimLeft(_1d190986b_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Bool _1e9a05b19_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _1e9a05e27_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _1e9a061e1_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I64 _1e9a067b8_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _882_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _882_c) && (_882_c <= 'z')) || (('A' <= _882_c) && (_882_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_1e9a05e27_isSlash(_8318_path[0LL]))) || (!(_1e9a05e27_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _962_p1;
	jule::Str _9610_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e9a06a82_cutPath(_8318_path.slice(2LL));
		_962_p1 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _976_p2 = jule::Str();;
	jule::Bool _986_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e9a06a82_cutPath(_9610_rest);
		_976_p2 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
		_986_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_986_ok))) {
		return _8318_path.len();;
	};
	if (((!_962_p1.equal(".", 1)) && (!_962_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
	};
	if (((((_976_p2.len() == 3LL) && (_1e9a061e1_toUpper(_976_p2[0LL]) == 'U')) && (_1e9a061e1_toUpper(_976_p2[1LL]) == 'N')) && (_1e9a061e1_toUpper(_976_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e9a06a82_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e9a06a82_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
			_986_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_986_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1e9a06a82_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a834bc32:;
		if (it != expr_end) {
			jule::I64 _1216_i = it - expr->begin();
			{
				if (_1e9a05e27_isSlash(_12012_path[_1216_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1216_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1216_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a834bc32:;
			++it;
			_1216_i++;
			goto _iter_begin_1a834bc32;
		}
		_iter_end_1a834bc32:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1e9a06d4b_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1302_utf16Name = _21463032d_UTF16FromStr(_12913_name);;
	jule::U16* _1312_p = (&(_1302_utf16Name[0LL]));;
	jule::U32 _1326_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _1347_buf = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_1326_n), static_cast<jule::I64>(_1326_n), 0);;
			_1326_n=_21465b2e3_GetFullPathName(_1312_p, static_cast<jule::U32>(_1347_buf.len()), (&(_1347_buf[0LL])), nullptr);
			if ((_1326_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1326_n <= static_cast<jule::U32>(_1347_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _21463063b_UTF16ToStr(_1347_buf.slice(0LL, static_cast<jule::I64>(_1326_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1a834c370:;
	}
	_iter_end_1a834c370:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1e9a07225_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e9a06d4b_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1d190c74d_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1e9a07467_join(jule::Slice<jule::Str> _16013_elem) {
	_1e9a030bc_StrBuilder _1616_s = static__1e9a034eb_New(16LL);;
	jule::U8 _1626_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_16013_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8353112:;
		if (it != expr_end) {
			jule::Str _16314_e = *it;
			{
				{
					
					if ((_1e9a047d8_Len(&_1616_s) == 0LL)) {
						_case_begin_1a8353db0:;
					}
					else if (_1e9a05e27_isSlash(_1626_lastChar)) {
						_case_begin_1a8354278:;
						{
							while (((_16314_e.len() > 0LL) && _1e9a05e27_isSlash(_16314_e[0LL]))) {
								{
									(_16314_e).mut_slice(1LL);;
								}
							_iter_next_1a83548a5:;
							}
							_iter_end_1a83548a5:;;
						}
					}
					else if ((_1626_lastChar == ':')) {
						_case_begin_1a8353a91:;
					}
					else {
						_case_begin_1a8353a2a:;
						{
							_1e9a03d15_WriteByte(&_1616_s, '\\');
							_1626_lastChar='\\';
						}
					}
					_match_end_1a835392b:;
				};
				if ((_16314_e.len() > 0LL)) {
					_1e9a03a5c_WriteStr(&_1616_s, _16314_e);
					_1626_lastChar=_16314_e[(_16314_e.len() - 1LL)];
				};
			}
			_iter_next_1a8353112:;
			++it;
			goto _iter_begin_1a8353112;
		}
		_iter_end_1a8353112:;
	};
	if ((_1e9a047d8_Len(&_1616_s) == 0LL)) {
		return jule::Str();;
	};
	return _1d190c74d_Clean(_1e9a04354_Str(&_1616_s));;
}



inline jule::Str _1d190c74d_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I64 _1112_volLen = _1e9a067b8_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _1e9a05b19_IsPathSep(_1102_originalPath[0LL])) && _1e9a05b19_IsPathSep(_1102_originalPath[1LL]))) {
			return _1d190cd25_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _1e9a05b19_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1272_n = _10914_path.len();;
	_1d190b8b2_lazyBuff _1286_out = _1d190b8b2_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I64 _1336_r;
	jule::I64 _13313_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_1d190c0ee_append(&_1286_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_1e9a05b19_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1a835e195:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _1e9a05b19_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1a835ac74:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _1e9a05b19_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1a835acda:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1a8362264:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_1e9a05b19_IsPathSep(_1d190bd46_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1a83629e5:;
									}
									_iter_end_1a83629e5:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1a836230d:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_1d190c0ee_append(&_1286_out, 92LLU);
									};
									_1d190c0ee_append(&_1286_out, '.');
									_1d190c0ee_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1a8361e01:;
						};
					}
				}
				else {
					_case_begin_1a835ac0d:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_1d190c0ee_append(&_1286_out, 92LLU);
						};
						if ((((_1286_out._field_w == 0LL) && (_1286_out._field_volLen == 0LL)) && (_1336_r != 0LL))) {
							jule::I64 _1769_i = _1336_r;;
							for (; ((_1769_i < _1272_n) && (!(_1e9a05b19_IsPathSep(_10914_path[_1769_i])))); (_1769_i)++) {
								{
									if ((_10914_path[_1769_i] == ':')) {
										_1d190c0ee_append(&_1286_out, '.');
										_1d190c0ee_append(&_1286_out, 92LLU);
										goto _iter_end_1a835c6d2;
									};
								}
							_iter_next_1a835c6d2:;
							}
							_iter_end_1a835c6d2:;;
						};
						for (; ((_1336_r < _1272_n) && (!(_1e9a05b19_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_1d190c0ee_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1a835c072:;
						}
						_iter_end_1a835c072:;;
					}
				}
				_match_end_1a835ab64:;
			};
		}
	_iter_next_1a8359921:;
	}
	_iter_end_1a8359921:;;
	if ((_1286_out._field_w == 0LL)) {
		_1d190c0ee_append(&_1286_out, '.');
	};
	return _1d190cd25_FromSlash(_1d190c385_string(&_1286_out));;
}



inline jule::Str _1d190cd25_FromSlash(jule::Str _21214_path) {
	;
	return _1d190876b_Replace(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1), -1LL);;
}



inline jule::Str _1d190d166_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1e9a07467_join(_2269_elem);;
}



inline jule::Str _1d190d3ec_Ext(jule::Str _2318_path) {
	jule::I64 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_1e9a05b19_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1a83664cc:;
	}
	_iter_end_1a83664cc:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1d190d6b6_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1e9a07225_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _1d190d980_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _1e9a05b19_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1a8367830:;
	}
	_iter_end_1a8367830:;;
	(_25213_path).mut_slice(_1d190e09b_VolumeName(_25213_path).len());;
	jule::I64 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_1e9a05b19_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1a8367c2b:;
	}
	_iter_end_1a8367c2b:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25213_path;;
}



inline jule::Str _1d190dd59_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _1d190e09b_VolumeName(_2838_path);;
	jule::I64 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_1e9a05b19_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1a837130b:;
	}
	_iter_end_1a837130b:;;
	jule::Str _2892_dir = _1d190c74d_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _1d190e09b_VolumeName(jule::Str _30115_path) {
	return _1d190cd25_FromSlash(_30115_path.slice(0LL, _1e9a067b8_volumeNameLen(_30115_path)));;
}



inline jule::I64 _21467124d_getLastFsError(void) {
	jule::I64 _722_err = _21457d3be_GetLastErrno();;
	{
		auto &_match_expr{ _722_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a8384341:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a8384242:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1a8383b7b:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1a8383be2:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a8383c58:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a8383cd0:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1a8383d57:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a8383dce:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a83844d9:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a8384561:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a83845d8:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a8384660:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a83846d7:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a838475e:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a83847d6:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1a838485d:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a83848d5:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a838495c:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a83849d4:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a8384a5b:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1a8384ad3:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a8384b5a:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a8384bd2:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a8384c59:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a8384cd1:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1a8384d58:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1a8384dd0:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1a8384e57:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1a8383a16:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a8383b26:;
	};
}



inline jule::Bool _21356cd93_isConsoleHandle(jule::Uintptr _11620_handle) {
	return (((_11620_handle == _2146587da_STDIN) || (_11620_handle == _214658a82_STDOUT)) || (_11620_handle == _214658d7e_STDERR));;
}



inline void _1d1d306ba_appendEscapeArg(_1e9a030bc_StrBuilder* _10225_s, jule::Str _10240_arg) {
	if ((_10240_arg.len() == 0LL)) {
		_1e9a03a5c_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
		return;;
	};
	jule::Bool _1086_needsBackslash = false;;
	jule::Bool _1096_hasSpace = false;;
	jule::I64 _1106_i = 0LL;;
	for (; (_1106_i < _10240_arg.len()); (_1106_i)++) {
		{
			{
				auto &_match_expr{ _10240_arg[_1106_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1a83c88e6:;
					{
						_1086_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1a83c8be3:;
					{
						_1096_hasSpace=true;
					}
				}
				_match_end_1a83c8ad3:;
			};
		}
	_iter_next_1a83c8451:;
	}
	_iter_end_1a83c8451:;;
	if (((!(_1086_needsBackslash)) && (!(_1096_hasSpace)))) {
		_1e9a03a5c_WriteStr(_10225_s, _10240_arg);
		return;;
	};
	if ((!(_1086_needsBackslash))) {
		_1e9a03d15_WriteByte(_10225_s, '\"');
		_1e9a03a5c_WriteStr(_10225_s, _10240_arg);
		_1e9a03d15_WriteByte(_10225_s, '\"');
		return;;
	};
	if (_1096_hasSpace) {
		_1e9a03d15_WriteByte(_10225_s, '\"');
	};
	jule::I64 _1366_slashes = 0LL;;
	_1106_i=0LL;
	for (; (_1106_i < _10240_arg.len()); (_1106_i)++) {
		{
			jule::U8 _1393_c = _10240_arg[_1106_i];;
			{
				auto &_match_expr{ _1393_c };
				
				if (_match_expr == '\\') {
					_case_begin_1a83cc037:;
					{
						(_1366_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1a83cc103:;
					{
						for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
							{
								_1e9a03d15_WriteByte(_10225_s, '\\');
							}
						_iter_next_1a83cc80c:;
						}
						_iter_end_1a83cc80c:;;
						_1e9a03d15_WriteByte(_10225_s, '\\');
					}
				}
				else {
					_case_begin_1a83cbab4:;
					{
						_1366_slashes=0LL;
					}
				}
				_match_end_1a83cbbc4:;
			};
			_1e9a03d15_WriteByte(_10225_s, _1393_c);
		}
	_iter_next_1a83cb2de:;
	}
	_iter_end_1a83cb2de:;;
	if (_1096_hasSpace) {
		for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
			{
				_1e9a03d15_WriteByte(_10225_s, '\\');
			}
		_iter_next_1a83cd39b:;
		}
		_iter_end_1a83cd39b:;;
		_1e9a03d15_WriteByte(_10225_s, '\"');
	};
}



inline jule::Str _1d1d30984_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_1e9a030bc_StrBuilder _1646_s = static__1e9a034eb_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83ce0c2:;
		if (it != expr_end) {
			jule::Str *_1659_arg = it;
			{
				if ((_1e9a047d8_Len(&_1646_s) > 0LL)) {
					_1e9a03d15_WriteByte(&_1646_s, ' ');
				};
				_1d1d306ba_appendEscapeArg(&(_1646_s), (*(_1659_arg)));
			}
			_iter_next_1a83ce0c2:;
			++it;
			goto _iter_begin_1a83ce0c2;
		}
		_iter_end_1a83ce0c2:;
	};
	return _1e9a04354_Str(&_1646_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _1d1d30d5d_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_21462e9c0_Encode(jule::Slice<jule::I32>::make({0LL,0LL}))};;
	};
	jule::I64 _1836_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83d09ec:;
		if (it != expr_end) {
			jule::Str *_1849_s = it;
			{
				if ((_1d19022d1_FindByteStr((*(_1849_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				_1836_n+=((*(_1849_s)).len() + 1LL);
			}
			_iter_next_1a83d09ec:;
			++it;
			goto _iter_begin_1a83d09ec;
		}
		_iter_end_1a83d09ec:;
	};
	(_1836_n)++;
	jule::Slice<jule::U16> _1916_b = jule::Slice<jule::U16>::alloc(0LL, _1836_n, 0);;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83d0326:;
		if (it != expr_end) {
			jule::Str *_1929_s = it;
			{
				{
					auto expr = _1929_s;
					char *it = expr->operator char*();
					const char *end = it + expr->len();
					std::size_t len;
					jule::I32 _19310_c;
					_iter_begin_1a83d2e1c:;
					std::tie(_19310_c, len) = jule::utf8_decode_rune_str(it, end - it);
					if (it < end) {
						{
							_1916_b=_2146300ca_AppendRune(_1916_b, _19310_c);
						}
						_iter_next_1a83d2e1c:;
						it += len;
						goto _iter_begin_1a83d2e1c;
					}
				};
				_1916_b=_2146300ca_AppendRune(_1916_b, 0LL);
			}
			_iter_next_1a83d0326:;
			++it;
			goto _iter_begin_1a83d0326;
		}
		_iter_end_1a83d0326:;
	};
	_1916_b=_2146300ca_AppendRune(_1916_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1916_b};;
}



inline jule::I64 _1d1d31d5e_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1a83d43a2:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1a83d3c31:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1a83d369d:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1a83d3857:;
	};
}



inline jule::I64 _1d1d3207e_getLastProcessError(void) {
	return _1d1d31d5e_processErrorFromCode(static_cast<jule::I64>(_214659d6e_GetLastError()));;
}



inline void _1d1d32898_Exit(jule::I64 _129_code) {
	_21466101d_Exit(_129_code);
}



inline jule::Str _1d1d32aa7_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1d1c61035_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1d1c61310_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1d191107b_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8405aee:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1a8405aee:;
			++it;
			goto _iter_begin_1a8405aee;
		}
		_iter_end_1a8405aee:;
	};
	return false;;
}



inline jule::Bool _1d1c615c9_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1d1c60573_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8406193:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1a8406193:;
			++it;
			goto _iter_begin_1a8406193;
		}
		_iter_end_1a8406193:;
	};
	{
		auto expr = &(_1d1c5e2b9_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8406ccb:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1a8406ccb:;
			++it;
			goto _iter_begin_1a8406ccb;
		}
		_iter_end_1a8406ccb:;
	};
	return false;;
}



inline jule::Str _1d1c6daae_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args) {
	return _1d1c6e54e_applyFmt(_3239_fmt, _32322_args);;
}



inline jule::Str _1d1c6ddbc_argToStr(jule::Any _32713_arg) {
	{
		auto &_match_expr{ _32713_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a840831b:;
			{
				return _32713_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1a840898c:;
			{
				return jule::Str::from_byte(_32713_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a8408a14:;
			{
				return jule::Str::from_rune(_32713_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1a840854c:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1a84084e7:;
	};
}



inline jule::I64 _1d1c6e186_findNextFmt(jule::Str _34016_fmt) {
	{
		auto expr = &(_34016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a840865c:;
		if (it != expr_end) {
			jule::I64 _3416_i = it - expr->begin();
			jule::U8 *_3419_b = it;
			{
				if (((*(_3419_b)) == '@')) {
					return _3416_i;;
				};
			}
			_iter_next_1a840865c:;
			++it;
			_3416_i++;
			goto _iter_begin_1a840865c;
		}
		_iter_end_1a840865c:;
	};
	return -1LL;;
}



inline jule::Str _1d1c6e54e_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args) {
	_1e9a030bc_StrBuilder _3506_s = static__1e9a034eb_New(32LL);;
	{
		auto expr = &(_34927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a840a571:;
		if (it != expr_end) {
			jule::Any *_3519_arg = it;
			{
				jule::I64 _3523_i = _1d1c6e186_findNextFmt(_34917_fmt);;
				if ((_3523_i == -1LL)) {
					goto _iter_end_1a840a571;
				};
				_1e9a03a5c_WriteStr(&_3506_s, _34917_fmt.slice(0LL, _3523_i));
				_1e9a03a5c_WriteStr(&_3506_s, _1d1c6ddbc_argToStr((*(_3519_arg))));
				(_34917_fmt).mut_slice((_3523_i + 1LL));;
			}
			_iter_next_1a840a571:;
			++it;
			goto _iter_begin_1a840a571;
		}
		_iter_end_1a840a571:;
	};
	_1e9a03a5c_WriteStr(&_3506_s, _34917_fmt);
	return _1e9a04354_Str(&_3506_s);;
}



inline jule::Bool _1d1c703a7_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _1d1c717c6_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1d1c71ad4_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1d1c71d9d_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1d1c721de_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1d1c72475_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1d1c7273e_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1d1c72a08_IsUnix(jule::Str _5511_os) {
	return (_1d1c71ad4_IsDarwin(_5511_os) || _1d1c71d9d_IsLinux(_5511_os));;
}



inline jule::Bool _1d1c72dd2_Is32Bit(jule::Str _5812_arch) {
	return _1d1c721de_IsI386(_5812_arch);;
}



inline jule::Bool _1d1c73124_Is64Bit(jule::Str _6112_arch) {
	return (_1d1c72475_IsAmd64(_6112_arch) || _1d1c7273e_IsArm64(_6112_arch));;
}



inline void _1d1d33d3e_init(void) {
	jule::Str _256_path = _1d1d32aa7_Executable();;
	if ((_256_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_1d1d3338d_PathWd=({
			auto except = _1e9a3300e_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_1d1d330e6_PathExec=_1d190dd59_Dir(_256_path);
		_1d1d32dd7_PathStdlib=_1d190d166_Join(jule::Slice<jule::Str>::make({_1d1d330e6_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_1d1d3368a_PathApi=_1d190d166_Join(jule::Slice<jule::Str>::make({_1d1d330e6_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _1b910129a_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _1b9108b32_Len64(_6119_x));;
}



inline jule::I64 _1b91021e1_TrailingZeros(jule::U64 _8318_x) {
	;
	return _1b9102d90_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _1b9102ac6_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_1b91018d8__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _1b9102d90_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_1b9101e7c__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _1b9108868_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _1b9108b32_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1b91098be_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=((_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1b910b1c8_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5012_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5022_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5032_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5042_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5052_w0 = (_5012_x0 * _5032_y0);;
	jule::U64 _5062_t = ((_5022_x1 * _5032_y0) + (_5052_w0 >> 32LLU));;
	jule::U64 _5076_w1 = (_5062_t & 4294967295LLU);;
	jule::U64 _5082_w2 = (_5062_t >> 32LLU);;
	_5076_w1+=(_5012_x0 * _5042_y1);
	__jule_func_result.__jule_result_arg0=(((_5022_x1 * _5042_y1) + _5082_w2) + (_5076_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::U32 _1b900cea9_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1b900d2b7_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1b900d581_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1b900d8c2_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1b9010e35_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1a79ee3d5:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1b9113ca2_IsInf(_4714_f, 0LL) || _1b9113620_IsNaN(_4714_f)) {
			_case_begin_1a79ee47e:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1a79ee308:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b911406b_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1b900d581_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1b900d8c2_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1b9113312_NaN(void) {
	return _1b900d8c2_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1b9113620_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1b91138d9_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1b900d8c2_F64FromBits(9218868437227405312LLU);;
	};
	return _1b900d8c2_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1b9113ca2_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1b911406b_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1b9116425_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1b9115a40_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1b9113620_IsNaN(_1118_x) || _1b9113ca2_IsInf(_1118_x, 1LL)) {
			_case_begin_1a84e1a97:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a84e1b41:;
			{
				return _1b9113312_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a84e1ba7:;
			{
				return _1b91138d9_Inf(-1LL);;
			}
		}
		_match_end_1a84e19cb:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b9010e35_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = jule::div(_1382_f,(2LL + _1382_f));;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1b9116425_Abs(jule::F64 _438_x) {
	return _1b900d8c2_F64FromBits((_1b900d581_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1b911ceed_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1b9116425_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1a8555c3d:;
		}
		_iter_end_1a8555c3d:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1b911d806_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b9010e35_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1b9115a40_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1b914729c_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _1e9a028a2_StrFromBytes(_1b9147885_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1b914ac40_max(((_7932_prec + 4LL) + 1LL), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1b9147885_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1b914608c_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a848bd3e:;
			{
				_886_bits=static_cast<jule::U64>(_1b900cea9_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1b914608c_floatInfo>)((&(_1b9146488_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a848bda5:;
			{
				_886_bits=_1b900d581_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1b914608c_floatInfo>)((&(_1b9146785_f64info))));
			}
		}
		else {
			_case_begin_1a84899c9:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1a848b613:;
	};
	jule::Bool _1012_neg = ((_886_bits >> ((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits)) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>((_886_bits >> (*_8910_flt.alloc)._field_mantbits)) & static_cast<jule::I64>(((1LL << (*_8910_flt.alloc)._field_expbits) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & ((static_cast<jule::U64>(1LLU) << (*_8910_flt.alloc)._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I64>(((1LL << (*_8910_flt.alloc)._field_expbits) - 1LL))) {
			_case_begin_1a8490c00:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1a8492608:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1a8492482:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1a8491d11:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1a8491c12:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a8490cdd:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1a848ed64:;
			{
				_1036_mant|=(static_cast<jule::U64>(1LLU) << (*_8910_flt.alloc)._field_mantbits);
			}
		}
		_match_end_1a849000c:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1b9149db5_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1b914a547_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	;
	_1b9146c19_decimalSlice _1376_digs = _1b9146c19_decimalSlice{};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1b9155b90_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*_8910_flt.alloc)));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a8490848:;
				{
					_8758_prec=_1b914ac40_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a8496288:;
				{
					_8758_prec=_1b914ac40_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a84962ee:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1a84954c9:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a8498257:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a8498345:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1a8497d17:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1a84967d8:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1b91548d6_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1b9154d7b_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1b914808e_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	return _1b9148765_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1b914808e_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1b914608c_floatInfo* _18824_flt) {
	_1b9159974_decimal _1896_d = _1b9159974_decimal{};;
	_1b9159d2b_assign(&_1896_d, _1882_mant);
	_1b915a0d4_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_1b9146c19_decimalSlice _1926_digs = _1b9146c19_decimalSlice{};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1b9148b83_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1b9146c19_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, };
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a849e1b4:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a849eea6:;
				{
					_18733_prec=_1b914ac40_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a84a001c:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1a849ed30:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a849ddea:;
				{
					_1b915a8ed_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a849de61:;
				{
					_1b915a8ed_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a849dec7:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1b915a8ed_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1a84a167d:;
		};
		_1926_digs=_1b9146c19_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, };
	};
	return _1b9148765_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1b9148765_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1b9146c19_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a84a46b4:;
			{
				return _1b9149227_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a84a472a:;
			{
				return _1b9149711_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a84a4791:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1b9149227_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), ((_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1b9149711_fmtF(_22418_dst, _22447_neg, _2252_digs, _1b914ac40_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1a84a461a:;
	};
	return jule::append(_22418_dst,jule::Slice<jule::U8>::make({'%',_22537_fmt}));;
}



inline void _1b9148b83_roundShortest(_1b9159974_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1b914608c_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1b9159974_decimal _2926_upper = _1b9159974_decimal{};;
	_1b9159d2b_assign(&_2926_upper, ((_26235_mant << 1LLU) + 1LLU));
	_1b915a0d4_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=((_26235_mant << 1LLU) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1b9159974_decimal _3116_lower = _1b9159974_decimal{};;
	_1b9159d2b_assign(&_3116_lower, ((_3026_mantlo << 1LLU) + 1LLU));
	_1b915a0d4_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1a84b101c;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1a84b5b8c:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1a84b5c36:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1a84b5c9c:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1a84b5ac1:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1a84b86d9:;
					{
						_1b915a8ed_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1a84b8783:;
					{
						_1b915a38c_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1a84b87e9:;
					{
						_1b915a645_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1a84b5d13:;
			};
		}
	_iter_next_1a84b101c:;
	}
	_iter_end_1a84b101c:;;
}



inline jule::Slice<jule::U8> _1b9149227_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1b9146c19_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _1b914a8bb_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a84bc7cb:;
		}
		_iter_end_1a84bc7cb:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1a84bee71:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1a84be8ee:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1a84be888:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_4306_exp / 10LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1a84be415:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1b9149711_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1b9146c19_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _1b914a8bb_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a84c3d87:;
		}
		_iter_end_1a84c3d87:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1a88ec205:;
		}
		_iter_end_1a88ec205:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1b9149db5_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1b914608c_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b915ec21_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b915ec21_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1b914a547_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1b914608c_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant<<=(60LLU - (*(_51232_flt))._field_mantbits);
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant<<=1LLU;
			(_51221_exp)--;
		}
	_iter_next_1a89020d9:;
	}
	_iter_end_1a89020d9:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>((_51126_prec << 2LLU));;
		jule::U64 _5273_extra = ((_5126_mant << _5263_shift) & 1152921504606846975LLU);;
		_5126_mant>>=(60LLU - _5263_shift);
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant<<=(60LLU - _5263_shift);
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant>>=1LLU;
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant<<=4LLU;
			}
		_iter_next_1a8907980:;
		}
		_iter_end_1a8907980:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant<<=4LLU;
			}
		_iter_next_1a8909179:;
		}
		_iter_end_1a8909179:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1b914b8cd_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1a890640c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1a8906473:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51221_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1a890ad29:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_51221_exp / 100LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51221_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1a890b126:;
	};
	return _51113_dst;;
}



inline jule::I64 _1b914a8bb_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1b914ac40_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1b914b8cd_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1b8a0782d_ConvError _1b914bd51_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1b8a0782d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1a891289c:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1a89127d1:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1b914b8cd_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1a89142b6:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1b914b8cd_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1a89143a4:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1b914b8cd_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1a8913e75:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1a8913e0e:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1a8913d54:;
					};
				};
			}
		}
		else {
			_case_begin_1a8911bed:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1a8912281:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a8918276:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a8917e57:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a891753e:;
			{
				_906_cutoff=(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU);
			}
		}
		_match_end_1a8917d69:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a8917ebd:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a8913a8a:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1a8919420:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a891a2cd:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1a891b620:;
						{
							_1107_d=(_1099_c - '0');
						}
					}
					else if ((('a' <= _1b914b8cd_lower(_1099_c)) && (_1b914b8cd_lower(_1099_c) <= 'z'))) {
						_case_begin_1a891b554:;
						{
							_1107_d=((_1b914b8cd_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1a891b169:;
						{
							goto _iter_next_1a891a2cd;
						}
					}
					else {
						_case_begin_1a891b103:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1a891b09d:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1a891a2cd:;
			++it;
			goto _iter_begin_1a891a2cd;
		}
		_iter_end_1a891a2cd:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1b914c280_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1b8a0782d_ConvError __jule_assign_result = _1b914bd51_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1b914c736_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1b8a0782d_ConvError __jule_assign_result = _1b914bd51_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1b914d3e6_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1b900d8c2_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _1b910129a_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_572_clz);
	;
	jule::U64 _606_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b910b1c8_Mul64(_4122_man, _1b914e260_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b910b1c8_Mul64(_4122_man, _1b914e260_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((_6817_mergedLo + 1LLU) == 0LLU)) && ((_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = (_636_xHi >> (_792_msb + 9LLU));;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa>>=1LLU;
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa>>=1LLU;
		_606_retExp2+=1LLU;
	};
	if (((_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1b900d8c2_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b914d869_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1b900d2b7_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _1b910129a_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1322_clz);
	;
	jule::U64 _1356_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b910b1c8_Mul64(_11022_man, _1b914e260_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b910b1c8_Mul64(_11022_man, _1b914e260_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14318_merged_lo + 1LLU) == 0LLU)) && ((_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = (_1386_x_hi >> (_1542_msb + 38LLU));;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa>>=1LLU;
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa>>=1LLU;
		_1356_retExp2+=1LLU;
	};
	if (((_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1b900d2b7_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1b915064b_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1a8940ce8:;
	}
	_iter_end_1a8940ce8:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b9150959_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a894466a:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1a89446e2;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a89446e2:;
			{
				jule::I64 _887_caseN = _1b915064b_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1b91138d9_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a8944758:;
			{
				if ((_1b915064b_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1b9113312_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a89445c1:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b9150c23_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1a8949c8b:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1a8949d02:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1a8949890:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1b914b8cd_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1a894ecd5:;
					{
						goto _iter_next_1a894e114;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1a894ed7e:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1a8954757;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1a894e114;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1a894ede5:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1a894e114;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a894e114;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1b914b8cd_lower(_1383_c))) && (_1b914b8cd_lower(_1383_c) <= 'f'))) {
					_case_begin_1a894ee5b:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1b914b8cd_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a894e114;
					}
				}
				_match_end_1a894ec08:;
			};
			goto _iter_end_1a894e114;
		}
	_iter_next_1a894e114:;
	}
	_iter_end_1a894e114:;;
	_julec_label_1a8954757:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1b914b8cd_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1a89570b7;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1a89570b7:;
		}
		_iter_end_1a89570b7:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1b915276e_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1b9146785_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1a89610c1:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1a8961159:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1b9151b36_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1b9151b36_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1a89611c0:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1b9151b36_f64pow10[(-(_48635_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a89609e9:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b9152b9d_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1b9146488_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1a8965317:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1a89653a0:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1b9151e66_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1b9151e66_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1a8965416:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1b9151e66_f32pow10[(-(_52035_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a8964c40:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1b8a0782d_ConvError _1b9153242_atofHex(_1b914608c_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1b8a0782d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1a8968c22:;
	}
	_iter_end_1a8968c22:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1a896b0dc:;
	}
	_iter_end_1a896b0dc:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1a896b4b6:;
	}
	_iter_end_1a896b4b6:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6106_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6106_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1b9146488_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1b900d2b7_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1b900d8c2_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b8a0782d_ConvError _1b915361b_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1b8a0782d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9150959_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9150c23_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1b8a0782d_ConvError __jule_assign_result = _1b9153242_atofHex(&(_1b9146488_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b9152b9d_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b914d869_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b914d869_eiselLemire32((_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b9159974_decimal _6676_d = _1b9159974_decimal{};;
	if ((!(_1b91513a5_set(&_6676_d, _1e9a02352_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b91516e6_floatBits(&_6676_d, &(_1b9146488_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1b900d2b7_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b8a0782d_ConvError _1b915385d_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b8a0782d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9150959_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9150c23_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1b8a0782d_ConvError __jule_assign_result = _1b9153242_atofHex(&(_1b9146785_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b915276e_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b914d3e6_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b914d3e6_eiselLemire64((_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b9159974_decimal _7246_d = _1b9159974_decimal{};;
	if ((!(_1b91513a5_set(&_7246_d, _1e9a02352_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b91516e6_floatBits(&_7246_d, &(_1b9146785_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1b900d8c2_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b8a0782d_ConvError _1b9153bd2_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b8a0782d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1b8a0782d_ConvError __jule_assign_result = _1b915361b_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1b915385d_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1b9154056_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1b8a0782d_ConvError __jule_assign_result = _1b9153bd2_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1b91548d6_ryuFtoaFixed32(_1b9146c19_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _1b9108868_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _632_b));
		_626_e2+=(static_cast<jule::I64>(_632_b) - 25LL);
	};
	jule::I64 _742_q = (((-(_1b9155e26_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b915781d_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1b91580c1_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>(((1LL << _942_extra) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = (_816_di >> _942_extra);
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > (1LLU << (_942_extra - 1LLU))) || ((_976_dfrac == (1LLU << (_942_extra - 1LLU))) && (!(_8121_d0)))) || (((_976_dfrac == (1LLU << (_942_extra - 1LLU))) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=((_976_dfrac >> (_942_extra - 1LLU)) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1b91556b7_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1b9154d7b_ryuFtoaFixed64(_1b9146c19_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _1b9108b32_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=(_12145_mant << static_cast<jule::U64>((55LL - _1322_b)));
		_1316_e2+=(static_cast<jule::I64>(_1322_b) - 55LL);
	};
	jule::I64 _1462_q = (((-(_1b9155e26_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9157c4c_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1b91580c1_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>(((1LL << _1662_extra) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_1536_di >> _1662_extra);
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > (1LLU << (_1662_extra - 1LLU))) || ((_1696_dfrac == (1LLU << (_1662_extra - 1LLU))) && (!(_15321_d0)))) || (((_1696_dfrac == (1LLU << (_1662_extra - 1LLU))) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=((_1696_dfrac >> (_1662_extra - 1LLU)) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1b91556b7_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1b91556b7_formatDecimal(_1b9146c19_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _1b91551bc_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1a89a1d04:;
	}
	_iter_end_1a89a1d04:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m/=10LLU;
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1a89a4752:;
	}
	_iter_end_1a89a4752:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1a89aad85:;
	}
	_iter_end_1a89aad85:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1b9155b90_ryuFtoaShortest(_1b9146c19_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1b914608c_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1b9102d90_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1b9156c6d_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1b915661e_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1b9156c6d_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_1b9155e26_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (((*(_26168_flt)) == _1b9146488_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b915781d_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b915781d_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b915781d_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9157c4c_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9157c4c_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9157c4c_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1b91580c1_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1b91580c1_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1b91580c1_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>(((1LL << _3252_extra) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2836_dl >> _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2846_dc >> _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2856_du >> _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > (1LLU << (_3252_extra - 1LLU))) || ((_3306_fracc == (1LLU << (_3252_extra - 1LLU))) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=((_3306_fracc >> (_3252_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1b9156c6d_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _1b9155e26_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1b91561e0_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b915661e_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1b914608c_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3963_flt))._field_mantbits)) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = ((2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = ((4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1b9156c6d_ryuDigits(_1b9146c19_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b915838a_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b915838a_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b915838a_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1b91573de_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1b91573de_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((_4318_v2 + '0'));
			}
		_iter_next_1a87c2b7a:;
		}
		_iter_end_1a87c2b7a:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((9LL - _4287_n));
		_1b91573de_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1a87c582b:;
	}
	_iter_end_1a87c582b:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1a87c36d6:;
	}
	_iter_end_1a87c36d6:;;
}



inline void _1b91573de_ryuDigits32(_1b9146c19_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1a87c8521;
			};
			if (((_4703_l == (_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1a87c8521:;
	}
	_iter_end_1a87c8521:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1a87ce0c6:;
	}
	_iter_end_1a87ce0c6:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b915781d_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1b914e260_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b910b1c8_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1b91561e0_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b9157c4c_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1b914e260_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1b91561e0_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b910b1c8_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b910b1c8_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b91098be_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b91580c1_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1a87dce5e:;
	}
	_iter_end_1a87dce5e:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1b915838a_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1b915b2c2_trim(_1b9159974_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1a87e144b:;
	}
	_iter_end_1a87e144b:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1b915b5ad_rightShift(_1b9159974_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2896_n >> _28432_k) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2896_n >> _28432_k) == 0LLU)) {
					{
						_2896_n=(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1a87e45e7:;
				}
				_iter_end_1a87e45e7:;;
				goto _iter_end_1a87e3096;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(((_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1a87e3096:;
	}
	_iter_end_1a87e3096:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = (_2896_n >> _28432_k);;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(((_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1a87e3e65:;
	}
	_iter_end_1a87e3e65:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = (_2896_n >> _28432_k);;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(_2896_n * 10LLU);
		}
	_iter_next_1a87e6cd1:;
	}
	_iter_end_1a87e6cd1:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1b915b2c2_trim(_28420_a);
}



inline jule::Bool _1b915ba64_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1a87ead4b:;
	}
	_iter_end_1a87ead4b:;;
	return false;;
}



inline void _1b915bd1c_leftShift(_1b9159974_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _1b915938b_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1b915ba64_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1b915938b_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0') << _35231_k);
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (_3626_n - (10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1a87ee080:;
	}
	_iter_end_1a87ee080:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (_3626_n - (10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1a87ee657:;
	}
	_iter_end_1a87ee657:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1b915b2c2_trim(_35219_a);
}



inline jule::Bool _1b915c191_shouldRoundUp(_1b9159974_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1b915d923_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1b915e3e6_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b915ec21_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1b915dcdb_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1b915e3e6_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b915ec21_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1b915e0a5_Itoa(jule::I64 _819_i) {
	return _1b915dcdb_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1b915e3e6_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1e9a028a2_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1b915e67c_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1b915ec21_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1a8839b59:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = ((_1547_us % 100LL) << 1LLU);;
						_1547_us/=100LLU;
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_1a883b6e9:;
				}
				_iter_end_1a883b6e9:;;
				jule::U64 _1643_is = (_1547_us << 1LLU);;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_1b915e67c_isPowerOfTwo(_10541_base)) {
			_case_begin_1a883a31e:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_1b91021e1_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u>>=_1793_shift;
					}
				_iter_next_1a8844416:;
				}
				_iter_end_1a8844416:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1a8838c68:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = jule::div(_10533_u,_1923_b);;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((_10533_u - (_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1a8839939:;
				}
				_iter_end_1a8839939:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1a8838bd0:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_1e9a028a2_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline jule::Str _1b916121c_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a8855955:;
			{
				return _1b9160738_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a88590b8:;
			{
				return _1b91609e1_SysUint;;
			}
		}
		else {
			_case_begin_1a8856912:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1a8858309:;
	};
}



inline jule::I64 _1b91614d6_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a8859eed:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a885a21d:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a885a284:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a885a064:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a885a0ca:;
			{
				return _1b916043b_BitSize;;
			}
		}
		else {
			_case_begin_1a8859d33:;
			{
				return -1LL;;
			}
		}
		_match_end_1a8859e54:;
	};
}



inline jule::Str _1b9161827_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a885c63d:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a885c462:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a885c4c8:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a885c6a4:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1a885bc25:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a885bd46:;
	};
}



inline jule::Str _1b9161aad_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a885d8b4:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a885d177:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a885d1dd:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a885d92a:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1a885d430:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a885d0cd:;
	};
}



inline jule::Str _1b9161d77_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1a885ed8d:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a885e40e:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1a885e6a6:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a885e354:;
	};
}



inline jule::Bool _1b916297c_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1b9154056_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1b9162c46_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1a88649b9:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a8864447:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a88613bc:;
	};
}



inline jule::I64 _1b9163010_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1a8865723:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1a8865800:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1a8865866:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a8864c83:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a8864ba6:;
	};
}



inline jule::I64 _1b91632c9_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1a8867291:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1a886647c:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1a88664e3:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a8866405:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a886689a:;
	};
}



inline void _1b9163472_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1d1d33beb_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1a886734b:;
				{
					_1b916043b_BitSize=64LLU;
					_1b9160738_SysInt=jule::Str::lit("i64", 3);
					_1b91609e1_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1a8868270:;
				{
					_1b916043b_BitSize=32LLU;
					_1b9160738_SysInt=jule::Str::lit("i32", 3);
					_1b91609e1_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1a8868171:;
		};
	};
}



inline void _1b91635e8_init(void) {
	_1b9163472_UpdateTarget();
}



inline jule::I64 _1b9167256_MinI(jule::Str _6113_k) {
	_6113_k=_1b916121c_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a886a959:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a886a6d4:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a886a74a:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a886a7c2:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1a8867439:;
			{
				return 0LL;;
			}
		}
		_match_end_1a8867505:;
	};
}



inline jule::I64 _1b9167564_MaxI(jule::Str _7913_k) {
	_7913_k=_1b916121c_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a886b96b:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a886b9d2:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a886ba48:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a886baae:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1a886b817:;
			{
				return 0LL;;
			}
		}
		_match_end_1a886b7b2:;
	};
}



inline jule::U64 _1b916782d_MaxU(jule::Str _9713_k) {
	_9713_k=_1b916121c_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a886d066:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a886d0cc:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a886d143:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a886d1a9:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1a886ce12:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a886cdac:;
	};
}



inline jule::F64 _1b9167b6e_Min(jule::Str _11512_k) {
	_11512_k=_1b916121c_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1b9167256_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a88706d9:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a8870266:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1a886ed8c:;
			{
				return 0LL;;
			}
		}
		_match_end_1a886eaa1:;
	};
}



inline jule::F64 _1b9167e05_Max(jule::Str _13312_k) {
	_13312_k=_1b916121c_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1b9167564_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1b916782d_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a88729e9:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a8872576:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1a887219c:;
			{
				return 0LL;;
			}
		}
		_match_end_1a8871d5b:;
	};
}



inline jule::Bool _1b91683ab_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _1b91686b9_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _1b9168983_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _1b9168cc4_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _1b916905a_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _1b9169324_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _1b91695dd_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _1b91699b7_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _1b9169cb4_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a88761e5:;
			{
				return _1b916ae2a_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1a887625b:;
			{
				return _1b916b238_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a88762c2:;
			{
				return _1b916b238_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a8876349:;
			{
				return _1b91683ab_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a88765be:;
			{
				return _1b91686b9_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a8876646:;
			{
				return _1b9168983_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a88766bd:;
			{
				return _1b9168cc4_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a8876745:;
			{
				return _1b916905a_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a8876855:;
			{
				return _1b9169324_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a88768bb:;
			{
				return _1b91695dd_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a8876932:;
			{
				return _1b91699b7_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1a8876998:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a8875e92:;
			{
				return false;;
			}
		}
		_match_end_1a8874996:;
	};
}



inline jule::Bool _1b916ae2a_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1b916b238_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1b916b502_IsInt(jule::Str _4610_k) {
	return (_1b916ae2a_IsSigInt(_4610_k) || _1b916b238_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1b916b843_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1b916bac9_IsNum(jule::Str _5610_k) {
	return (_1b916b502_IsInt(_5610_k) || _1b916b843_IsFloat(_5610_k));;
}



inline jule::Bool _1b916bd93_IsSigNum(jule::Str _6113_k) {
	return (_1b916ae2a_IsSigInt(_6113_k) || _1b916b843_IsFloat(_6113_k));;
}



inline void _1b9176188_lshiftUnsig(_1b916c16d_Const* _59021_c, _1b916c16d_Const* _59032_x) {
	jule::U64 _5912_l = _1b916ea99_AsU64(_59021_c);;
	jule::U64 _5922_r = _1b916ea99_AsU64(_59032_x);;
	_1b9170391_SetU64(_59021_c, (_5912_l << _5922_r));
}



inline void _1b91764b8_rshiftUnsig(_1b916c16d_Const* _59621_c, _1b916c16d_Const* _59632_x) {
	jule::U64 _5972_l = _1b916ea99_AsU64(_59621_c);;
	jule::U64 _5982_r = _1b916ea99_AsU64(_59632_x);;
	_1b9170391_SetU64(_59621_c, (_5972_l >> _5982_r));
}



inline jule::Bool _1c80b6c79_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1c801c75c_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a3e567:;
		if (it != expr_end) {
			jule::U64 *_3359_op = it;
			{
				if ((_33414_id == (*(_3359_op)))) {
					return true;;
				};
			}
			_iter_next_1a8a3e567:;
			++it;
			goto _iter_begin_1a8a3e567;
		}
		_iter_end_1a8a3e567:;
	};
	return false;;
}



inline jule::Bool _1c80b7087_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1c801ca8c_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a3ea73:;
		if (it != expr_end) {
			jule::U64 *_3459_op = it;
			{
				if ((_34412_id == (*(_3459_op)))) {
					return true;;
				};
			}
			_iter_next_1a8a3ea73:;
			++it;
			goto _iter_begin_1a8a3ea73;
		}
		_iter_end_1a8a3ea73:;
	};
	return false;;
}



inline jule::Bool _1c80b7692_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1c80b7928_IsRawStr(_36410_k)));;
}



inline jule::Bool _1c80b7928_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1c80b7be2_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1c80b85c7_IsFloat(jule::Str _38012_k) {
	if (_1d1902dc5_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _1d1907e0d_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _1d1907e0d_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1c80b8891_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3932_b = _38810_k[0LL];;
	return ((_3932_b == '.') || (('0' <= _3932_b) && (_3932_b <= '9')));;
}



inline jule::Bool _1c80b8e24_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1c80b91dd_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1c80b9771_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1c801c53c_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a46e54:;
		if (it != expr_end) {
			jule::I32 *_4209_cr = it;
			{
				if ((_41912_r == (*(_4209_cr)))) {
					return true;;
				};
			}
			_iter_next_1a8a46e54:;
			++it;
			goto _iter_begin_1a8a46e54;
		}
		_iter_end_1a8a46e54:;
	};
	return false;;
}



inline jule::Bool _1c80b9c6b_IsLetter(jule::I32 _42913_r) {
	return _1d1b2e9d6_IsLetter(_42913_r);;
}



inline jule::Bool _1c80ba1de_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1c80ba4a8_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1c80ba772_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1c80baa3b_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1a8a4a9c4:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1a8a4aa6d:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1a8a4aae5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a8a4a94c:;
			{
				return false;;
			}
		}
		_match_end_1a8a4a463:;
	};
}



inline jule::Bool _1c80bad05_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1c80bb0be_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1c80b0a20_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a4c102:;
		if (it != expr_end) {
			jule::U64 *_4869_op = it;
			{
				if ((_48516_id == (*(_4869_op)))) {
					return true;;
				};
			}
			_iter_next_1a8a4c102:;
			++it;
			goto _iter_begin_1a8a4c102;
		}
		_iter_end_1a8a4c102:;
	};
	return false;;
}



inline jule::Bool _1c80bb388_IsAssignOp(jule::U64 _49515_id) {
	if (_1c80bb0be_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1c80b0d0b_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a4e7b9:;
		if (it != expr_end) {
			jule::U64 *_4999_op = it;
			{
				if ((_49515_id == (*(_4999_op)))) {
					return true;;
				};
			}
			_iter_next_1a8a4e7b9:;
			++it;
			goto _iter_begin_1a8a4e7b9;
		}
		_iter_end_1a8a4e7b9:;
	};
	return false;;
}



inline jule::Ptr<_1c80bbcc3_File> _1c80bd19d_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1c80bbcc3_File>(_1c80bbcc3_File{._field_Path=_5715_path, });;
}



inline _1d1c6d64c_Log _1c80bebc7_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1c80bbcc3_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1d1c6d64c_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1d1c6daae_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1c80c0090_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a5e895:;
		if (it != expr_end) {
			jule::I64 _1146_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1146_i] != _11035_prefix[_1146_i])) {
					return false;;
				};
			}
			_iter_next_1a8a5e895:;
			++it;
			_1146_i++;
			goto _iter_begin_1a8a5e895;
		}
		_iter_end_1a8a5e895:;
	};
	return true;;
}



inline jule::Str _1c80c0414_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1286_b = (*(_12215_txt))[_12232_i];;
	if ((_1286_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1286_b == '+') || (_1286_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1422_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1286_b=(*(_12215_txt))[_12232_i];
			if (((_1286_b != '_') && (!(_1c80ba1de_IsDecimal(_1286_b))))) {
				goto _iter_end_1a8a62733;
			};
		}
	_iter_next_1a8a62733:;
	}
	_iter_end_1a8a62733:;;
	if ((_12232_i == _1422_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1c80c07cc_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1c80c0414_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1c80c0b51_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1a8a64b53:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1683_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1683_b == '_') || _1c80ba1de_IsDecimal(_1683_b)) {
					_case_begin_1a8a65604:;
					{
						goto _iter_next_1a8a648ab;
					}
				}
				else if (_1c80c24d2_isFloatFmtP(_1683_b, _16036_i)) {
					_case_begin_1a8a6569d:;
					{
						return _1c80c07cc_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1a8a6557c:;
					{
						goto _iter_end_1a8a648ab;
					}
				}
				_match_end_1a8a65516:;
			};
		}
	_iter_next_1a8a648ab:;
	}
	_iter_end_1a8a648ab:;;
	return jule::Str();;
}



inline jule::Str _1c80c0ec5_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1c80c0414_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1c80c1349_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1c80c0414_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1c80c17cd_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2013_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2013_b == 'e') || (_2013_b == 'E')))) {
				__jule_func_result = _1c80c0414_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2013_b != '_') && (!(_1c80ba1de_IsDecimal(_2013_b))))) {
				goto _iter_end_1a8a683b5;
			};
		}
	_iter_next_1a8a683b5:;
	}
	_iter_end_1a8a683b5:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1c80c1a20_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2176_i = 0LL;;
	_julec_label_1a8a67b45:;
	for (; (_2176_i < (*(_21615_txt)).len()); (_2176_i)++) {
		{
			jule::U8 _2203_b = (*(_21615_txt))[_2176_i];;
			{
				
				if ((_2203_b == '.')) {
					_case_begin_1a8a6b4ea:;
					{
						__jule_func_result = _1c80c17cd_floatNum(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((_2203_b == '_')) {
					_case_begin_1a8a6b594:;
					{
						goto _iter_next_1a8a6a8e5;
					}
				}
				else if (_1c80c215d_isFloatFmtE(_2203_b, _2176_i)) {
					_case_begin_1a8a6b60a:;
					{
						__jule_func_result = _1c80c0414_floatFmtE(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1c80ba1de_IsDecimal(_2203_b)))) {
					_case_begin_1a8a6b671:;
					{
						goto _iter_end_1a8a6a8e5;
					}
				}
				_match_end_1a8a6b41d:;
			};
		}
	_iter_next_1a8a6a8e5:;
	}
	_iter_end_1a8a6a8e5:;;
	if ((_2176_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2176_i));
	return __jule_func_result;;
}



inline jule::Str _1c80c1cd9_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1c80c0090_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2486_i = 2LL;;
	for (; (_2486_i < (*(_23915_txt)).len()); (_2486_i)++) {
		{
			if ((((*(_23915_txt))[_2486_i] != '_') && (!(_1c80ba4a8_IsBinary((*(_23915_txt))[_2486_i]))))) {
				goto _iter_end_1a8a6e3cc;
			};
		}
	_iter_next_1a8a6e3cc:;
	}
	_iter_end_1a8a6e3cc:;;
	if ((_2486_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2486_i));
	return __jule_func_result;;
}



inline jule::Bool _1c80c215d_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1c80c24d2_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1c80c2856_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1a8a71eb2:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2763_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2763_b == '_') || _1c80ba1de_IsDecimal(_2763_b)) {
					_case_begin_1a8a72ec4:;
					{
						goto _iter_next_1a8a71db3;
					}
				}
				else if (_1c80c24d2_isFloatFmtP(_2763_b, _26938_i)) {
					_case_begin_1a8a7306d:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1a8a72e4c:;
					{
						goto _iter_end_1a8a71db3;
					}
				}
				_match_end_1a8a72dd6:;
			};
		}
	_iter_next_1a8a71db3:;
	}
	_iter_end_1a8a71db3:;;
	return false;;
}



inline jule::Bool _1c80c2bca_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1a8a742d3:;
			{
				goto _case_begin_1a8a7437c;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1a8a7437c:;
			{
				goto _case_begin_1a8a74404;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1a8a74404:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a8a7424a:;
			{
				return true;;
			}
		}
		_match_end_1a8a7414b:;
	};
}



inline jule::Bool _1c80c304e_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1a8a76093:;
			{
				goto _case_begin_1a8a76109;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1a8a76109:;
			{
				goto _case_begin_1a8a76170;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1a8a76170:;
			{
				goto _case_begin_1a8a761e7;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1a8a761e7:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a8a75ec7:;
			{
				return true;;
			}
		}
		_match_end_1a8a75a87:;
	};
}



inline jule::Str _1c80c3549_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3266_octalStart = 1LL;;
	jule::Bool _3286_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3266_octalStart)++;
		_3286_o=true;
	};
	jule::I64 _3376_i = _3266_octalStart;;
	for (; (_3376_i < (*(_31814_txt)).len()); (_3376_i)++) {
		{
			jule::U8 _3393_b = (*(_31814_txt))[_3376_i];;
			if ((_3393_b == '.')) {
				if (_3286_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1c80c17cd_floatNum(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (_1c80c215d_isFloatFmtE(_3393_b, _3376_i)) {
				__jule_func_result = _1c80c0414_floatFmtE(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (((_3393_b != '_') && (!(_1c80ba772_IsOctal(_3393_b))))) {
				goto _iter_end_1a8a7a6e6;
			};
		}
	_iter_next_1a8a7a6e6:;
	}
	_iter_end_1a8a7a6e6:;;
	if ((_3376_i == _3266_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3376_i));
	return __jule_func_result;;
}



inline jule::Str _1c80c3725_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3696_i = 2LL;;
	_julec_label_1a8a7e1ab:;
	for (; (_3696_i < (*(_36012_txt)).len()); (_3696_i)++) {
		{
			jule::U8 _3723_b = (*(_36012_txt))[_3696_i];;
			{
				
				if (_1c80c2bca_isFloatFmtDotp(_36012_txt, _3696_i)) {
					_case_begin_1a8a7edb0:;
					{
						__jule_func_result = _1c80c1349_floatFmtDotp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1c80c304e_isFloatFmtDotfp(_36012_txt, _3696_i)) {
					_case_begin_1a8a7ee59:;
					{
						__jule_func_result = _1c80c0ec5_floatFmtDotfp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1c80c24d2_isFloatFmtP(_3723_b, _3696_i)) {
					_case_begin_1a8a7eec0:;
					{
						__jule_func_result = _1c80c07cc_floatFmtP(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1c80c2856_isFloatFmtDotnp(_36012_txt, _3696_i)) {
					_case_begin_1a8a80036:;
					{
						__jule_func_result = _1c80c0b51_floatFmtDotnp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (((_3723_b != '_') && (!(_1c80baa3b_IsHex(_3723_b))))) {
					_case_begin_1a8a8009c:;
					{
						goto _iter_end_1a8a7e310;
					}
				}
				_match_end_1a8a7ecc2:;
			};
		}
	_iter_next_1a8a7e310:;
	}
	_iter_end_1a8a7e310:;;
	if ((_3696_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3696_i));
	return __jule_func_result;;
}



inline jule::Str _1c80c3a77_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3996_i = 2LL;;
	for (; (_3996_i < _39328_n); (_3996_i)++) {
		{
			if ((!(_1c80baa3b_IsHex((*(_39315_txt))[_3996_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1a8a82643:;
	}
	_iter_end_1a8a82643:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1c80c3d41_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1c80c3a77_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1c80c410a_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1c80c3a77_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1c80c43c4_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1c80c3a77_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1c80c468d_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1c80ba772_IsOctal((*(_42616_txt))[1LL]))) || (!(_1c80ba772_IsOctal((*(_42616_txt))[2LL])))) || (!(_1c80ba772_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1d1c6d64c_Log> _1a59c1b07_Lex(jule::Ptr<_1c80bbcc3_File> _80612_f, jule::I64 _80622_mode) {
	if ((_80612_f == nullptr)) {
		return nullptr;;
	};
	_1c80c4e0d_lex _8116_lex = _1c80c4e0d_lex{._field_mode=_80622_mode, ._field_file=_80612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1a59c0199_newLine(&_8116_lex);
	_1c80c5a02_lex(&_8116_lex);
	if ((_8116_lex._field_errors.len() > 0LL)) {
		return _8116_lex._field_errors;;
	};
	(*(_80612_f))._field_Tokens=_8116_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1a5a8a374_FindModuleFile(jule::Slice<jule::Ptr<_21467189c_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b14a05:;
		if (it != expr_end) {
			jule::Ptr<_21467189c_DirEntry> *_149_d = it;
			{
				if (((!(_214675340_IsDir((*((*(_149_d))))._field_Stat.ptr()))) && (*(*(_149_d)).alloc)._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1a8b14a05:;
			++it;
			goto _iter_begin_1a8b14a05;
		}
		_iter_end_1a8b14a05:;
	};
	return false;;
}



inline jule::Str _1a5a8a62c_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_21467189c_DirEntry>> _277_dirents = ({
				auto except = static__1d190e750_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a8b1540c;
				} jule::Slice<jule::Ptr<_21467189c_DirEntry>>(nullptr);});
			});;
			jule::Bool _313_exist = _1a5a8a374_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I64 _363_n = _2527_path.len();;
			_2527_path=_1d190dd59_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1a8b1540c;
			};
		}
	_iter_next_1a8b1540c:;
	}
	_iter_end_1a8b1540c:;;
	return jule::Str();;
}



inline jule::Slice<_1d1c6d64c_Log> _1a5a8a8e6_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__2146737d3_Read(_1d190d166_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1d1c6d64c_Log>::make({_1d1c6d64c_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _1d1909be0_Trim(_1e9a025d8_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return jule::Slice<_1d1c6d64c_Log>::make({_1d1c6d64c_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1a5a8b243_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213562272_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1d1b95de3_IsUpper(_142_r);;
}



inline jule::Bool _1a5ad3aa4_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1a5aedad0_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_1a5aee73a_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213562272_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1a5aedcde_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1a5aee130_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b2234d:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1a8b2234d;
				};
			}
			_iter_next_1a8b2234d:;
			++it;
			goto _iter_begin_1a8b2234d;
		}
		_iter_end_1a8b2234d:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len(), 0);;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1a5aeead1_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213562272_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_21356331c_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1a8b2433e:;
	}
	_iter_end_1a8b2433e:;;
	return _1e9a028a2_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1a5aee3b6_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a8b26819:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a8b27034:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a8b2709a:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a8b27111:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a8b27177:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a8b271ee:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a8b27276:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a8b272ed:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a8b27375:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a8b273ec:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1a8b26d8b:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1a5aee73a_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1a5aee3b6_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1a8b2bee5:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1b914c280_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a8b2bd08:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1b914c280_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a8b2b720:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1b914c280_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1a8b2a521:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1b914c280_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1a8b2ac91:;
	};
}



inline void _1a5aeead1_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _1a5aee73a_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_21356331c_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _1c79831c3_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _133_r;
			jule::I64 _136_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213561e31_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_133_r = __jule_assign_result.__jule_result_arg0;
				_136_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_133_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_136_size;
		}
	_iter_next_1a8b57c46:;
	}
	_iter_end_1a8b57c46:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1c7983503_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _282_start = (*(_2724_i));;
	jule::I64 _296_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _313_r;
			jule::I64 _316_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _213561e31_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_313_r = __jule_assign_result.__jule_result_arg0;
				_316_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_316_size;
			{
				auto &_match_expr{ _313_r };
				
				if (_match_expr == '{') {
					_case_begin_1a8b5a6a5:;
					{
						(_296_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a8b5a919:;
					{
						(_296_braces)--;
						if ((_296_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_282_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1a8b59e13:;
			};
		}
	_iter_next_1a8b59792:;
	}
	_iter_end_1a8b59792:;;
	return nullptr;;
}



inline void _1c79837de_FmtByDefault(_1e9a030bc_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_1e9a03a5c_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1a8b5c5a8:;
			{
				_1e9a03a5c_WriteStr(_4722_buf, _1b914729c_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type135)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a8b5bde3:;
			{
				_1e9a03a5c_WriteStr(_4722_buf, _1b914729c_FmtFloat((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1a8b5be59:;
			{
				_1e9a03a5c_WriteStr(_4722_buf, _1b915dcdb_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1a8b5bec0:;
			{
				_1e9a03a5c_WriteStr(_4722_buf, _1b915dcdb_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type137)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a8b5c036:;
			{
				_1e9a03a5c_WriteStr(_4722_buf, _1b915dcdb_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a8b5c09c:;
			{
				_1e9a03a5c_WriteStr(_4722_buf, _1b915dcdb_FmtInt((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1a8b5c6c9:;
			{
				_1e9a03a5c_WriteStr(_4722_buf, _1b915d923_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1a8b5c740:;
			{
				_1e9a03a5c_WriteStr(_4722_buf, _1b915d923_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1a8b5c7a6:;
			{
				_1e9a03a5c_WriteStr(_4722_buf, _1b915d923_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a8b5c81c:;
			{
				_1e9a03a5c_WriteStr(_4722_buf, _1b915d923_FmtUint((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a8b5c883:;
			{
				_1e9a03a5c_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a8b5c8e9:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_1e9a03a5c_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_1e9a03a5c_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1a8b5b893:;
			{
				_1e9a03a5c_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1a8b59bc1:;
	};
}



inline void _1c7983c0c_applyFmtByDefault(_1e9a030bc_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _872_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1c79837de_FmtByDefault(_8627_buf, &(_872_arg));
}



inline void _1c798412a_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _1e9a030bc_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1c7983c0c_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_1e9a03a5c_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_1e9a037a4_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1c798449e_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1166_fmtBytes = _1e9a02352_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1166_fmtBytes;;
	};
	jule::I64 _1206_i = _1c79831c3_findFormatPrefix(&(_1166_fmtBytes), 0LL);;
	if ((_1206_i == -1LL)) {
		return _1166_fmtBytes;;
	};
	jule::I64 _1246_j = 0LL;;
	jule::I64 _1256_last = 0LL;;
	_1e9a030bc_StrBuilder _1266_buf = static__1e9a034eb_New(_11511_fmt.len());;
	for (; (_1206_i != -1LL); _1206_i=_1c79831c3_findFormatPrefix(&(_1166_fmtBytes), _1206_i)) {
		{
			_1e9a037a4_Write(&_1266_buf, _1166_fmtBytes.slice(_1256_last, _1206_i));
			jule::Slice<jule::U8> _1297_format = _1c7983503_getFormatRange(&(_1206_i), &(_1166_fmtBytes));;
			if ((_1297_format == nullptr)) {
				goto _iter_next_1a8b69ac1;
			};
			_1c798412a_applyFmt(&(_1297_format), &(_1266_buf), &(_1246_j), _11521_args);
			if ((_1246_j >= _11521_args.len())) {
				_1e9a037a4_Write(&_1266_buf, _1166_fmtBytes.slice(_1206_i));
				_1256_last=_1166_fmtBytes.len();
				goto _iter_end_1a8b69ac1;
			};
			_1256_last=_1206_i;
		}
	_iter_next_1a8b69ac1:;
	}
	_iter_end_1a8b69ac1:;;
	if ((_1256_last < _1166_fmtBytes.len())) {
		_1e9a037a4_Write(&_1266_buf, _1166_fmtBytes.slice(_1256_last));
	};
	return _1e9a04d05_Buf(&_1266_buf);;
}



inline jule::Str _1c798656c_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1e9a028a2_StrFromBytes(_1c798449e_Format(_3111_fmt, _3121_args));;
}



inline jule::Bool _1a5a10085_parameterUsesGenerics(jule::Ptr<_1a5a0bc30_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>>* _38546_generics) {
	if (_1a5a0891e_IsSelf((*((*(_38531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1a5b6b5a9_kindUsesGenerics(&((*((*(_38531_p))))._field_Kind), _38546_generics);;
}



inline jule::Ptr<_1a5b58024_TypeSymbol> _1a5a12807_buildType(jule::Ptr<_1a59c3e6c_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1a5b1ac73_Value> _1a5a12b15_buildExpr(jule::Ptr<_1a59c82a1_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1a5b50060_TypeAlias> _1a5a12dce_buildTypeAlias(jule::Ptr<_1a59da989_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1a5b50060_TypeAlias>(_1a5b50060_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1a5a12807_buildType((*_11223_decl.alloc)._field_Kind), });;
}



inline jule::Ptr<_1a59e1dd0_Field> _1a5a13220_buildField(jule::Ptr<_1a59de33e_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1a59e1dd0_Field>(_1a59e1dd0_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1a5a12807_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1a59e1dd0_Field>> _1a5a134a6_buildFields(jule::Slice<jule::Ptr<_1a59de33e_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1a59e1dd0_Field>> _1356_fields = jule::Slice<jule::Ptr<_1a59e1dd0_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e1a107:;
		if (it != expr_end) {
			jule::Ptr<_1a59de33e_FieldDecl> _13614_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a59e1dd0_Field>> &__jule_push_dest = _1356_fields; __jule_push_dest.push(_1a5a13220_buildField(_13614_decl)); };
			}
			_iter_next_1a8e1a107:;
			++it;
			goto _iter_begin_1a8e1a107;
		}
		_iter_end_1a8e1a107:;
	};
	return _1356_fields;;
}



inline jule::Ptr<_1a59e4d06_Struct> _1a5a13770_buildStruct(jule::Ptr<_1a59dec35_StructDecl> _14220_decl) {
	return jule::new_ptr<_1a59e4d06_Struct>(_1a59e4d06_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1a5a134a6_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, });;
}



inline jule::Ptr<_1a5a08303_Param> _1a5a13a39_buildParam(jule::Ptr<_1a59d46ca_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1a5a08303_Param>(_1a5a08303_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1a5a12807_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1a5a08303_Param>> _1a5a13e13_buildParams(jule::Slice<jule::Ptr<_1a59d46ca_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1a5a08303_Param>> _1666_params = jule::Slice<jule::Ptr<_1a5a08303_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e22263:;
		if (it != expr_end) {
			jule::Ptr<_1a59d46ca_ParamDecl> _16714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a5a08303_Param>> &__jule_push_dest = _1666_params; __jule_push_dest.push(_1a5a13a39_buildParam(_16714_decl)); };
			}
			_iter_next_1a8e22263:;
			++it;
			goto _iter_begin_1a8e22263;
		}
		_iter_end_1a8e22263:;
	};
	return _1666_params;;
}



inline jule::Ptr<_1a5a07a72_RetType> _1a5a14155_buildRetType(jule::Ptr<_1a59c6d60_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a5a07a72_RetType>(_1a5a07a72_RetType{._field_Kind=_1a5a12807_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1a5a09cc7_Fn> _1a5a1441e_buildFunc(jule::Ptr<_1a59d5b2c_FnDecl> _18318_decl) {
	return jule::new_ptr<_1a5a09cc7_Fn>(_1a5a09cc7_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1a5a14155_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1a5a13e13_buildParams(&((*_18318_decl.alloc)._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1a5a09cc7_Fn>> _1a5a146d8_buildMethods(jule::Slice<jule::Ptr<_1a59d5b2c_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1a5a09cc7_Fn>> _2026_methods = jule::Slice<jule::Ptr<_1a5a09cc7_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e2780c:;
		if (it != expr_end) {
			jule::Ptr<_1a59d5b2c_FnDecl> _20314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a5a09cc7_Fn>> &__jule_push_dest = _2026_methods; __jule_push_dest.push(_1a5a1441e_buildFunc(_20314_decl)); };
			}
			_iter_next_1a8e2780c:;
			++it;
			goto _iter_begin_1a8e2780c;
		}
		_iter_end_1a8e2780c:;
	};
	return _2026_methods;;
}



inline jule::Slice<jule::Ptr<_1a5b58024_TypeSymbol>> _1a5a149a2_buildTraitInherits(jule::Slice<jule::Ptr<_1a59c3e6c_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1a5b58024_TypeSymbol>> _2106_symbols = jule::Slice<jule::Ptr<_1a5b58024_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e28434:;
		if (it != expr_end) {
			jule::Ptr<_1a59c3e6c_TypeDecl> _21114_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1a5b58024_TypeSymbol>> &__jule_push_dest = _2106_symbols; __jule_push_dest.push(_1a5a12807_buildType(_21114_it)); };
			}
			_iter_next_1a8e28434:;
			++it;
			goto _iter_begin_1a8e28434;
		}
		_iter_end_1a8e28434:;
	};
	return _2106_symbols;;
}



inline jule::Ptr<_1a5a1d181_Trait> _1a5a14c6b_buildTrait(jule::Ptr<_1a59e0472_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1a5a1d181_Trait>(_1a5a1d181_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1a5a149a2_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1a5a146d8_buildMethods(&((*_21719_decl.alloc)._field_Methods)), });;
}



inline jule::Ptr<_1a5a1ed20_EnumItem> _1a5a15035_buildEnumItem(jule::Ptr<_1a59dc529_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1a5a1ed20_EnumItem>(_1a5a1ed20_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1a5a12b15_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1a5a1ed20_EnumItem>> _1a5a152ee_buildEnumItems(jule::Slice<jule::Ptr<_1a59dc529_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1a5a1ed20_EnumItem>> _2366_items = jule::Slice<jule::Ptr<_1a5a1ed20_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e2a7bb:;
		if (it != expr_end) {
			jule::Ptr<_1a59dc529_EnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a5a1ed20_EnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1a5a15035_buildEnumItem(_23714_decl)); };
			}
			_iter_next_1a8e2a7bb:;
			++it;
			goto _iter_begin_1a8e2a7bb;
		}
		_iter_end_1a8e2a7bb:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1a5a2088c_Enum> _1a5a157e9_buildEnum(jule::Ptr<_1a59dd0da_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1a5a2088c_Enum>(_1a5a2088c_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1a5a12807_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1a5a152ee_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a5a219c0_TypeEnumItem> _1a5a159c5_buildTypeEnumItem(jule::Ptr<_1a59dd915_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1a5a219c0_TypeEnumItem>(_1a5a219c0_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1a5a12807_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1a5a219c0_TypeEnumItem>> _1a5a15c6c_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a59dd915_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1a5a219c0_TypeEnumItem>> _2626_items = jule::Slice<jule::Ptr<_1a5a219c0_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e2da22:;
		if (it != expr_end) {
			jule::Ptr<_1a59dd915_TypeEnumItemDecl> _26314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a5a219c0_TypeEnumItem>> &__jule_push_dest = _2626_items; __jule_push_dest.push(_1a5a159c5_buildTypeEnumItem(_26314_decl)); };
			}
			_iter_next_1a8e2da22:;
			++it;
			goto _iter_begin_1a8e2da22;
		}
		_iter_end_1a8e2da22:;
	};
	return _2626_items;;
}



inline jule::Ptr<_1a5a22097_TypeEnum> _1a5a16036_buildTypeEnum(jule::Ptr<_1a59de075_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1a5a22097_TypeEnum>(_1a5a22097_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1a5a15c6c_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a5a16300_buildVar(jule::Ptr<_1a59d6cd7_VarDecl> _27817_decl) {
	return jule::new_ptr<_1a5ab1ee4_Var>(_1a5ab1ee4_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1a5a12807_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1a5a12b15_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1a5a11273_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _1a5a165b9_buildVars(jule::Slice<jule::Ptr<_1a59d6cd7_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _2966_vars = jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e34709:;
		if (it != expr_end) {
			jule::Ptr<_1a59d6cd7_VarDecl> _29714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> &__jule_push_dest = _2966_vars; __jule_push_dest.push(_1a5a16300_buildVar(_29714_decl)); };
			}
			_iter_next_1a8e34709:;
			++it;
			goto _iter_begin_1a8e34709;
		}
		_iter_end_1a8e34709:;
	};
	return _2966_vars;;
}



inline jule::Ptr<_1a5a467e7_Impl> _1a5a16883_buildImpl(jule::Ptr<_1a59e0ad2_Impl> _30318_decl) {
	return jule::new_ptr<_1a5a467e7_Impl>(_1a5a467e7_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1a5a146d8_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1a5a165b9_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a41c43_buildAsComptimeMethodData(jule::Ptr<_1a5a0cca8_FnIns>* _142135_f) {
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait((*(_142135_f)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data1)}), });;
}



inline jule::Ptr<_1a5a6dcd6_ImportInfo> _1a5a42051_findComptimePackage(jule::Ptr<_1a5a8e17a_Sema>* _142929_s) {
	return _1a5a8e620_SelectPackage((*(_142929_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1a5a6dcd6_ImportInfo>>((void*)__jule_anon1a8ea57d0, nullptr, nullptr));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a423c5_buildComptimeTypeInfoData(jule::Ptr<_1a5a8e17a_Sema>* _143535_s, jule::Ptr<_1a5b50d52_TypeKind>* _143550_t) {
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5a8d9b5_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data15)}), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5a42716_buildComptimeValue(jule::Ptr<_1a5b19aeb_Data>* _144328_d) {
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a3b039_comptimeValue>(_1a5a3b039_comptimeValue{._field_data=(*(_144328_d))}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data16)}), });;
}



inline jule::Str _1a5a45791_toStrConstraints(jule::Ptr<_1a5b4e46b_InsGeneric> _14321_g) {
	_1e9a030bc_StrBuilder _1446_sb = static__1e9a034eb_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90eb21c:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_1a5b50d52_TypeKind> *_1459_c = it;
			{
				_1e9a03a5c_WriteStr(&_1446_sb, _1a5b5121a_Str((*(_1459_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					_1e9a03a5c_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1a90eb21c:;
			++it;
			_1456_i++;
			goto _iter_begin_1a90eb21c;
		}
		_iter_end_1a90eb21c:;
	};
	return _1e9a04354_Str(&_1446_sb);;
}



inline jule::Bool _1a5a45b59_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1a5b50d52_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1a90ed076:;
			{
				jule::Ptr<_1a5b5892b_Prim> _1573_prim = _1a5b534a3_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1b916bd93_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1a90ed0dc:;
			{
				jule::Ptr<_1a5b5892b_Prim> _1633_prim = _1a5b534a3_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1b916b238_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1a90ed164:;
			{
				jule::Ptr<_1a5b5892b_Prim> _1693_prim = _1a5b534a3_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1b916b843_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1a90ed1db:;
			{
				jule::Ptr<_1a5b5892b_Prim> _1753_prim = _1a5b534a3_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1b916bac9_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1a90ed3b7:;
			{
				return _1a5b526d3_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1a90ed42d:;
			{
				return (!(_1a5b526d3_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1a90ed494:;
			{
				return _1a5b5244c_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1a90ed50a:;
			{
				return _1a5b52969_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1a90ec4c6:;
			{
				return false;;
			}
		}
		_match_end_1a90ece22:;
	};
}



inline jule::Bool _1a5a45e23_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1a5a43b57_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9104225:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1a9104225:;
			++it;
			goto _iter_begin_1a9104225;
		}
		_iter_end_1a9104225:;
	};
	return false;;
}



inline jule::Ptr<_1a5a5420b_scopeChecker> _1a5a48a2a_newScopeCheckerBase(jule::Ptr<_1a5a8e17a_Sema>* _5829_s, jule::Ptr<_1a5a0cca8_FnIns> _5843_owner) {
	return jule::new_ptr<_1a5a5420b_scopeChecker>(_1a5a5420b_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1a5b14783_SymbolTable>(), });;
}



inline jule::Ptr<_1a5a5420b_scopeChecker> _1a5a48de3_newScopeChecker(jule::Ptr<_1a5a8e17a_Sema>* _6625_s, jule::Ptr<_1a5a0cca8_FnIns> _6639_owner) {
	jule::Ptr<_1a5a5420b_scopeChecker> _676_base = _1a5a48a2a_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_676_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a5a52b88_scopeLabel>>>(nullptr);
	(*_676_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a5a5321b_scopeGoto>>>(nullptr);
	return _676_base;;
}



inline jule::Ptr<_1a5a52b88_scopeLabel> _1a5a49267_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1a5a5420b_scopeChecker> _7637_scope) {
	jule::Ptr<_1a5a52b88_scopeLabel> _776_label = _1a5a5830e_findLabelScope(_7637_scope, _7621_ident);;
	while ((_776_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_776_label=_1a5a5830e_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1a911ce42:;
	}
	_iter_end_1a911ce42:;;
	return _776_label;;
}



inline jule::Bool _1a5a49630_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1a5a4bc4d_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a911ecce:;
			{
				jule::Ptr<_1a59ede64_FnCallExprModel> _933_fcem = _9021_Model.unsafe_cast_ptr<_1a59ede64_FnCallExprModel>();;
				if (((*(_933_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a911d64b:;
			{
				jule::Ptr<_1a5b19aeb_Data> _983_d = _9021_Model.unsafe_cast_ptr<_1a5b19aeb_Data>();;
				return _1a5a49630_modelIsGotoScope((*(_983_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1a911ec79:;
	};
	return false;;
}



inline jule::Bool _1a5a499a4_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1a5a4bc4d_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a91219e5:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1a5a4bc4d_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a9122375:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1a5a4cb83_InfIter>(&__jule_any_type35)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a91223db:;
			{
				jule::Ptr<_1a5a4da85_RangeIter> _1113_it = (*(_10421_stmt)).cast_ptr<_1a5a4da85_RangeIter>(&__jule_any_type39);;
				return (((*(_1113_it))._field_Scope == (*(_10434_sc))) || _1a5a49630_modelIsGotoScope((*((*_1113_it.alloc)._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a9121e68:;
			{
				jule::Ptr<_1a5a4d139_WhileIter> _1143_it = (*(_10421_stmt)).cast_ptr<_1a5a4d139_WhileIter>(&__jule_any_type37);;
				return ((((*(_1143_it))._field_Scope == (*(_10434_sc))) || _1a5a49630_modelIsGotoScope((*_1143_it.alloc)._field_Expr, _10434_sc)) || _1a5a49630_modelIsGotoScope((*_1143_it.alloc)._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a9121ece:;
			{
				jule::Ptr<_1a5a50e61_Match> _1193_m = (*(_10421_stmt)).cast_ptr<_1a5a50e61_Match>(&__jule_any_type46);;
				{
					auto expr = &((*(_1193_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a91267ca:;
					if (it != expr_end) {
						jule::Ptr<_1a5a51989_Case> *_12010_c = it;
						{
							if (((*((*(_12010_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(*(_12010_c)).alloc)._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a9127721:;
								if (it != expr_end) {
									jule::Ptr<_1a5b19aeb_Data> *_12411_expr = it;
									{
										if (_1a5a49630_modelIsGotoScope((*((*(_12411_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1a9127721:;
									++it;
									goto _iter_begin_1a9127721;
								}
								_iter_end_1a9127721:;
							};
						}
						_iter_next_1a91267ca:;
						++it;
						goto _iter_begin_1a91267ca;
					}
					_iter_end_1a91267ca:;
				};
				return (((*_1193_m.alloc)._field_Default != nullptr) && ((*(*_1193_m.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a9122045:;
			{
				jule::Ptr<_1a5a4c886_Conditional> _1323_c = (*(_10421_stmt)).cast_ptr<_1a5a4c886_Conditional>(&__jule_any_type34);;
				{
					auto expr = &((*(_1323_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a91292e4:;
					if (it != expr_end) {
						jule::Ptr<_1a5a4c16b_If> *_13310_elif = it;
						{
							if ((((*((*(_13310_elif))))._field_Scope == (*(_10434_sc))) || _1a5a49630_modelIsGotoScope((*(*(_13310_elif)).alloc)._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1a91292e4:;
						++it;
						goto _iter_begin_1a91292e4;
					}
					_iter_end_1a91292e4:;
				};
				return (((*_1323_c.alloc)._field_Default != nullptr) && ((*(*_1323_c.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a91220ab:;
			{
				jule::Ptr<_1a5b19aeb_Data> _1403_d = (*(_10421_stmt)).cast_ptr<_1a5b19aeb_Data>(&__jule_any_type23);;
				return _1a5a49630_modelIsGotoScope((*(_1403_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1a9120362:;
			{
				return false;;
			}
		}
		_match_end_1a912030c:;
	};
}



inline jule::I64 _1a5a49d28_countMatchType(jule::Ptr<_1a5a50e61_Match>* _14720_m, jule::Ptr<_1a5b50d52_TypeKind>* _14732_t) {
	jule::I64 _1486_n = 0LL;;
	jule::Str _1492_kind = _1a5b5121a_Str((*(_14732_t)).ptr());;
	_julec_label_1a912c22b:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a912c65a:;
		if (it != expr_end) {
			jule::Ptr<_1a5a51989_Case> *_1519_c = it;
			{
				if (((*(_1519_c)) == nullptr)) {
					goto _iter_next_1a912c65a;
				};
				{
					auto expr = &((*((*(_1519_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a912d392:;
					if (it != expr_end) {
						jule::Ptr<_1a5b19aeb_Data> *_15610_expr = it;
						{
							if (((*(_15610_expr)) == nullptr)) {
								goto _iter_end_1a912c65a;
							};
							if ((_1492_kind == _1a5b5121a_Str((*((*(_15610_expr))))._field_Model.cast_ptr<_1a5b50d52_TypeKind>(&__jule_any_type84).ptr()))) {
								(_1486_n)++;
							};
						}
						_iter_next_1a912d392:;
						++it;
						goto _iter_begin_1a912d392;
					}
					_iter_end_1a912d392:;
				};
			}
			_iter_next_1a912c65a:;
			++it;
			goto _iter_begin_1a912c65a;
		}
		_iter_end_1a912c65a:;
	};
	return _1486_n;;
}



inline jule::Slice<jule::Ptr<_1a5b19aeb_Data>> _1a5a4a0e2_getDatasFromTupleData(jule::Ptr<_1a5b19aeb_Data>* _17131_d) {
	if ((_1a5b552c9_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1a9132000:;
				{
					return (*((*((*(_17131_d))))._field_Model.unsafe_cast_ptr<_1a5a0264e_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1a912eddd:;
				{
					jule::Ptr<_1a5b5da1e_Tuple> _1778_t = _1a5b552c9_Tup((*((*(_17131_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1a5b19aeb_Data>> _1788_r = jule::Slice<jule::Ptr<_1a5b19aeb_Data>>::alloc(0LL, (*(_1778_t))._field_Types.len());;
					{
						auto expr = &((*_1778_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a91316c5:;
						if (it != expr_end) {
							jule::Ptr<_1a5b50d52_TypeKind> _17916_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1a5b19aeb_Data>> &__jule_push_dest = _1788_r; __jule_push_dest.push(jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_17916_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1a91316c5:;
							++it;
							goto _iter_begin_1a91316c5;
						}
						_iter_end_1a91316c5:;
					};
					return _1788_r;;
				}
			}
			_match_end_1a912ed88:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1a5b19aeb_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1a5a4a92d_checkMut(jule::Ptr<_1a5a8e17a_Sema>* _20618_s, jule::Ptr<_1a5b19aeb_Data>* _20629_left, jule::Ptr<_1a5b19aeb_Data> _20646_right, jule::Ptr<_1c80b653c_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1a91359a4:;
			{
				_1a5a91cb5_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*_20646_right.alloc)._field_Mutable))) && _1a5b526d3_Mutable((*_20646_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1a9135da0:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1a5b54a26_Struct((*_20646_right.alloc)._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1a5a91cb5_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*_20646_right.alloc)._field_Kind), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a913593d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a9135894:;
	};
}



inline jule::Bool _1a5a4ae17_checkAssign(jule::Ptr<_1a5a8e17a_Sema>* _22521_s, jule::Ptr<_1a5b19aeb_Data>* _22536_left, jule::Ptr<_1a5b19aeb_Data> _22553_right, jule::Ptr<_1c80b653c_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5a0cca8_FnIns> _2262_f = _1a5b54790_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2262_f != nullptr) && ((*_2262_f.alloc)._field_Decl != nullptr)) && (*(*_2262_f.alloc)._field_Decl.alloc)._field_Global)) {
		_1a5a91cb5_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1a5b1a503_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1a913b26d:;
			{
				_1a5a91cb5_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1a5a92128_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1a913b2d4:;
			{
				_1a5a91cb5_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1a5a4a92d_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1a913b34a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a913b1b3:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a913b04d:;
	};
}



inline jule::Bool _1a5a4b1d1_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1a913b3d3:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1a59d291a_AssignSt>(&__jule_any_type57)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a913d4c3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a913d380:;
			{
				return false;;
			}
		}
		_match_end_1a913d32a:;
	};
}



inline jule::Bool _1a5a4b49a_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type42 || _match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type45) {
			_case_begin_1a913db88:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a913e639:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1a5b19aeb_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type33) {
						_case_begin_1a9140052:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a914087c:;
						{
							return false;;
						}
					}
					_match_end_1a9140827:;
				};
			}
		}
		else {
			_case_begin_1a913e370:;
			{
				return false;;
			}
		}
		_match_end_1a913dc10:;
	};
}



inline jule::Bool _1a5a4b764_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a9140d00:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a913ee20:;
			{
				return false;;
			}
		}
		_match_end_1a913edba:;
	};
}



inline jule::U64 _1a5a66619_removeEqFromOp(jule::U64 _220119_op) {
	{
		auto &_match_expr{ _220119_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a9141aae:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1a9141b25:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1a91417d4:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1a914184a:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1a9141c13:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1a9141c79:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1a9141ce0:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1a9141d67:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1a9141dde:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1a9141ebb:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1a91411eb:;
			{
				return _220119_op;;
			}
		}
		_match_end_1a9141707:;
	};
}



inline void _1a5a6684a_makeComptimeRange(jule::Ptr<_1a5b19aeb_Data>* _223027_d) {
	{
		
		if ((_1a5b557e6_comptimeStructFields((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a91423b7:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a251ee_comptimeRange>(_1a5a251ee_comptimeRange{._field_kind=jule::Trait(_1a5b557e6_comptimeStructFields((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1a5a24ece_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data5)});
			}
		}
		else if ((_1a5b55d13_comptimeEnumFields((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a914592b:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a251ee_comptimeRange>(_1a5a251ee_comptimeRange{._field_kind=jule::Trait(_1a5b55d13_comptimeEnumFields((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1a5a24ece_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data5)});
			}
		}
		else if ((_1a5b56ad3_comptimeTypeInfos((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9145992:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a251ee_comptimeRange>(_1a5a251ee_comptimeRange{._field_kind=jule::Trait(_1a5b56ad3_comptimeTypeInfos((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1a5a24ece_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data5)});
			}
		}
		else if ((_1a5b56330_comptimeParams((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a914242d:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a251ee_comptimeRange>(_1a5a251ee_comptimeRange{._field_kind=jule::Trait(_1a5b56330_comptimeParams((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1a5a24ece_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data5)});
			}
		}
		else if ((_1a5b57100_comptimeStatics((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9142494:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a251ee_comptimeRange>(_1a5a251ee_comptimeRange{._field_kind=jule::Trait(_1a5b57100_comptimeStatics((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1a5a24ece_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data5)});
			}
		}
		else if ((_1a5b57b39_comptimeFiles((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a914250a:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a251ee_comptimeRange>(_1a5a251ee_comptimeRange{._field_kind=jule::Trait(_1a5b57b39_comptimeFiles((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1a5a24ece_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1a9142351:;
			{
				(*((*(_223027_d))))._field_Decl=true;
			}
		}
		_match_end_1a91455eb:;
	};
}



inline jule::Bool _1a5a66d45_canComptimeMatch(jule::Ptr<_1a5b19aeb_Data>* _225126_d) {
	if ((!(_1a5b13881_isGoodValueToInfer(_225126_d)))) {
		return false;;
	};
	return (_1a5b1a503_IsConst((*(_225126_d)).ptr()) || (_1a5b56d69_comptimeTypeInfo((*((*(_225126_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a5a6b2bc_findVarInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a929d38b:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _4714_f = *it;
			{
				jule::Ptr<_1a5ab1ee4_Var> _487_v = _1a5b15168_FindVar(_4714_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_487_v != nullptr)) {
					return _487_v;;
				};
			}
			_iter_next_1a929d38b:;
			++it;
			goto _iter_begin_1a929d38b;
		}
		_iter_end_1a929d38b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5b50060_TypeAlias> _1a5a6b740_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a929e2e3:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _5914_f = *it;
			{
				jule::Ptr<_1a5b50060_TypeAlias> _607_ta = _1a5b15564_FindTypeAlias(_5914_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_607_ta != nullptr)) {
					return _607_ta;;
				};
			}
			_iter_next_1a929e2e3:;
			++it;
			goto _iter_begin_1a929e2e3;
		}
		_iter_end_1a929e2e3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a59e4d06_Struct> _1a5a6bb6e_findStructInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92a0800:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _7114_f = *it;
			{
				jule::Ptr<_1a59e4d06_Struct> _727_s = _1a5b15960_FindStruct(_7114_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_727_s != nullptr)) {
					return _727_s;;
				};
			}
			_iter_next_1a92a0800:;
			++it;
			goto _iter_begin_1a92a0800;
		}
		_iter_end_1a92a0800:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a09cc7_Fn> _1a5a6c125_findFnInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92a1d0c:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _8314_file = *it;
			{
				jule::Ptr<_1a5a09cc7_Fn> _847_f = _1a5b15d5b_FindFn(_8314_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_847_f != nullptr)) {
					return _847_f;;
				};
			}
			_iter_next_1a92a1d0c:;
			++it;
			goto _iter_begin_1a92a1d0c;
		}
		_iter_end_1a92a1d0c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a1d181_Trait> _1a5a6c466_findTraitInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92a38e1:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _9514_f = *it;
			{
				jule::Ptr<_1a5a1d181_Trait> _967_t = _1a5b1619c_FindTrait(_9514_f.ptr(), (*(_9452_ident)));;
				if ((_967_t != nullptr)) {
					return _967_t;;
				};
			}
			_iter_next_1a92a38e1:;
			++it;
			goto _iter_begin_1a92a38e1;
		}
		_iter_end_1a92a38e1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a2088c_Enum> _1a5a6c7da_findEnumInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92a3b33:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _10714_f = *it;
			{
				jule::Ptr<_1a5a2088c_Enum> _1087_e = _1a5b164dd_FindEnum(_10714_f.ptr(), (*(_10651_ident)));;
				if ((_1087_e != nullptr)) {
					return _1087_e;;
				};
			}
			_iter_next_1a92a3b33:;
			++it;
			goto _iter_begin_1a92a3b33;
		}
		_iter_end_1a92a3b33:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5a22097_TypeEnum> _1a5a6cb5e_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92a4e64:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _11914_f = *it;
			{
				jule::Ptr<_1a5a22097_TypeEnum> _1207_e = _1a5b1682e_FindTypeEnum(_11914_f.ptr(), (*(_11855_ident)));;
				if ((_1207_e != nullptr)) {
					return _1207_e;;
				};
			}
			_iter_next_1a92a4e64:;
			++it;
			goto _iter_begin_1a92a4e64;
		}
		_iter_end_1a92a4e64:;
	};
	return nullptr;;
}



inline jule::Any _1a5a6d19d_defByIdentPackage(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92a642c:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _13014_file = *it;
			{
				jule::Any _1317_def = _1a5b177ec_defByIdent(_13014_file.ptr(), _12951_ident, _12963_binded);;
				if ((_1317_def != nullptr)) {
					return _1317_def;;
				};
			}
			_iter_next_1a92a642c:;
			++it;
			goto _iter_begin_1a92a642c;
		}
		_iter_end_1a92a642c:;
	};
	return nullptr;;
}



inline jule::Bool _1a5a741d7_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _1d1902dc5_HasPrefix((*(_35518_f)), _1d190d166_Join(jule::Slice<jule::Str>::make({_1d1d32dd7_PathStdlib,_35526_p})));;
}



inline jule::Bool _1a5a8b81a_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a92b8065:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a92b80cb:;
			{
				jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _187_model = (*(_1328_m)).cast_ptr<_1a5a01ad2_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_187_model))._field_Field != nullptr) && _1a5a8b81a_isValidModelForRef(&((*((*_187_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a92b8142:;
			{
				jule::Ptr<_1a59ec35d_UnaryExprModel> _217_unary = (*(_1328_m)).cast_ptr<_1a59ec35d_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_217_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1a5b539c0_Ptr((*((*_217_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1a5b53739_Sptr((*(*_217_unary.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
					return false;;
				};
				return _1a5a8b81a_isValidModelForRef(&((*(*_217_unary.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a92b81a8:;
			{
				jule::Ptr<_1a59ee7e4_IndexingExprModel> _357_indexing = (*(_1328_m)).cast_ptr<_1a59ee7e4_IndexingExprModel>(&__jule_any_type44);;
				return _1a5a8b81a_isValidModelForRef(&((*((*(_357_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1a92b7790:;
			{
				return false;;
			}
		}
		_match_end_1a92b773a:;
	};
}



inline _1d1c6d64c_Log _1a5a8bcc1_compilerErr(jule::Ptr<_1c80b653c_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_1d1c6d64c_Log _436_log = _1d1c6d64c_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4217_token))))._field_Row, ._field_Column=(*((*(_4217_token))))._field_Column, ._field_Path=(*((*((*(_4217_token))))._field_File))._field_Path, ._field_Text=_1d1c6daae_Logf(_4244_fmt, _4257_args), };;
	if (_4232_line) {
		_436_log._field_Line=_1c80bccd5_GetRow((*((*(_4217_token))))._field_File, (*((*(_4217_token))))._field_Row);
	};
	return _436_log;;
}



inline jule::Bool _1a5a8c145_impIsLookupable(jule::Ptr<_1a5a6dcd6_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*((*(_5621_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5621_i))))._field_ImportAll))) {
		if (((*((*(_5621_i))))._field_Selected.len() > 0LL)) {
			return _1a5a71668_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*((*(_5621_i))))._field_ImportAll;;
}



inline void _1a5a8c475_appendRetVars(jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>* _6823_dest, jule::Ptr<_1a5a0cca8_FnIns>* _6842_f) {
	if ((_1a5a0a24a_IsVoid((*((*(_6842_f))))._field_Decl.ptr()) || ((*((*(_6842_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>> _736_types = _1a5a0dea7_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6842_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92c3d1d:;
		if (it != expr_end) {
			jule::I64 _747_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> _7414_ident = *it;
			{
				if ((_1c80b8e24_IsIgnoreIdent((*(_7414_ident))._field_Kind) || _1c80b91dd_IsAnonIdent((*_7414_ident.alloc)._field_Kind))) {
					goto _iter_next_1a92c3d1d;
				};
				{ jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_1a5ab1ee4_Var>(_1a5ab1ee4_Var{._field_Scope=(*((*(_6842_f))))._field_Scope, ._field_Token=_7414_ident, ._field_Ident=(*_7414_ident.alloc)._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=_736_types[_747_i]}), ._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()}), ._field_RetOrder=_747_i, })); };
			}
			_iter_next_1a92c3d1d:;
			++it;
			_747_i++;
			goto _iter_begin_1a92c3d1d;
		}
		_iter_end_1a92c3d1d:;
	};
	if ((((*(*(*((*(_6842_f))))._field_Decl.alloc)._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*((*(_6823_dest))[((*(_6823_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1a5a8c761_appendParamVars(jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>* _9825_dest, jule::Ptr<_1a5a0cca8_FnIns>* _9844_f) {
	if (((*((*(_9844_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9844_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92c86a2:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0bc30_ParamIns> _10314_p = *it;
			{
				if ((_1c80b8e24_IsIgnoreIdent((*((*(_10314_p))._field_Decl))._field_Ident) || _1c80b91dd_IsAnonIdent((*(*_10314_p.alloc)._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1a92c86a2;
				};
				jule::Ptr<_1a5ab1ee4_Var> _1087_v = jule::new_ptr<_1a5ab1ee4_Var>(_1a5ab1ee4_Var{._field_Scope=(*((*(_9844_f))))._field_Scope, ._field_Token=(*(*_10314_p.alloc)._field_Decl.alloc)._field_Token, ._field_Ident=(*(*_10314_p.alloc)._field_Decl.alloc)._field_Ident, ._field_Mutable=(*(*_10314_p.alloc)._field_Decl.alloc)._field_Mutable, ._field_Used=true, ._field_Reference=(*(*_10314_p.alloc)._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(), ._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()}), });;
				{
					
					if (_1a5a0891e_IsSelf((*_10314_p.alloc)._field_Decl)) {
						_case_begin_1a92cc50d:;
						{
							(*((*(_1087_v))._field_Kind))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9844_f))))._field_Owner, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0)});
							(*_1087_v.alloc)._field_Reference=(!(_1a5a08ba5_IsRef((*_10314_p.alloc)._field_Decl)));
							if (_1a5a08ba5_IsRef((*_10314_p.alloc)._field_Decl)) {
								((*(_1087_v))._field_Ident).mut_slice(1LL);;
								(*((*(*_1087_v.alloc)._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1a5b5c457_Sptr>(_1a5b5c457_Sptr{._field_Elem=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_BindIdent=(*(*(*_1087_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent, ._field_Kind=(*(*(*_1087_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data21);
							};
						}
					}
					else if ((*(*_10314_p.alloc)._field_Decl.alloc)._field_Variadic) {
						_case_begin_1a92cc244:;
						{
							(*((*(_1087_v))._field_Kind))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a5b5ce2a_Slc>(_1a5b5ce2a_Slc{._field_Elem=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_BindIdent=(*((*_10314_p.alloc)._field_Kind))._field_BindIdent, ._field_Kind=(*(*_10314_p.alloc)._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data22)});
						}
					}
					else {
						_case_begin_1a92cc1cd:;
						{
							(*((*(_1087_v))._field_Kind))._field_Kind=(*_10314_p.alloc)._field_Kind;
						}
					}
					_match_end_1a92cc0ac:;
				};
				{ jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_1087_v); };
			}
			_iter_next_1a92c86a2:;
			++it;
			goto _iter_begin_1a92c86a2;
		}
		_iter_end_1a92c86a2:;
	};
}



inline void _1a5a8ca4c_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>* _15834_dest, jule::Ptr<_1a5a0cca8_FnIns>* _15859_f) {
	jule::I64 _1596_size = (*((*(_15859_f))))._field_Generics.len();;
	if (((*((*((*(_15859_f))))._field_Decl))._field_Owner != nullptr)) {
		_1596_size+=(*(*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1596_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15859_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92d5956:;
		if (it != expr_end) {
			jule::I64 _1687_i = it - expr->begin();
			jule::Ptr<_1a5b4e46b_InsGeneric> _16814_g = *it;
			{
				jule::Ptr<_1a59d1177_GenericDecl> _1697_decl = (*(*((*(_15859_f))))._field_Decl.alloc)._field_Generics[_1687_i];;
				{ jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1a5b50060_TypeAlias>(_1a5b50060_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1697_decl.alloc)._field_Token, ._field_Ident=(*(_1697_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=(*(_16814_g))._field_Kind}), })); };
			}
			_iter_next_1a92d5956:;
			++it;
			_1687_i++;
			goto _iter_begin_1a92d5956;
		}
		_iter_end_1a92d5956:;
	};
	if (((*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1a59e7a84_StructIns> _1817_owner = (*((*(_15859_f))))._field_Owner;;
		{
			auto expr = &((*_1817_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a92d833d:;
			if (it != expr_end) {
				jule::I64 _1828_i = it - expr->begin();
				jule::Ptr<_1a5b4e46b_InsGeneric> _18215_g = *it;
				{
					jule::Ptr<_1a59d1177_GenericDecl> _1838_decl = (*((*(_1817_owner))._field_Decl))._field_Generics[_1828_i];;
					{ jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1a5b50060_TypeAlias>(_1a5b50060_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1838_decl.alloc)._field_Token, ._field_Ident=(*(_1838_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=(*(_18215_g))._field_Kind}), })); };
				}
				_iter_next_1a92d833d:;
				++it;
				_1828_i++;
				goto _iter_begin_1a92d833d;
			}
			_iter_end_1a92d833d:;
		};
	};
}



inline jule::Ptr<_1a5b14783_SymbolTable> _1a5a8cdc1_findFile(jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>* _19618_files, jule::Ptr<_1c80bbcc3_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92d614e:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _19714_fl = *it;
			{
				if (((*(_19714_fl))._field_File == (*(_19642_handler)))) {
					return _19714_fl;;
				};
			}
			_iter_next_1a92d614e:;
			++it;
			goto _iter_begin_1a92d614e;
		}
		_iter_end_1a92d614e:;
	};
	return nullptr;;
}



inline void _1a5a8d377_pushSuggestion(_1d1c6d64c_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	(*(_20530_log))._field_Suggestion=_1d1c6daae_Logf(_20541_fmt, _20554_args);
}



inline void _1a5ab06c9_pushImplemented(jule::Ptr<_1a5a1d181_Trait> _288224_t, jule::Ptr<_1a59e4d06_Struct>* _288240_d) {
	_julec_label_1a92dcd7b:;
	{
		
		if (((*(_288224_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1a92dd5da:;
			{
				{
					auto expr = &((*_288224_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a92de652:;
					if (it != expr_end) {
						jule::Ptr<_1a59e4d06_Struct> _288610_s = *it;
						{
							if ((_288610_s == (*(_288240_d)))) {
								goto _match_end_1a92dd1ab;
							};
						}
						_iter_next_1a92de652:;
						++it;
						goto _iter_begin_1a92de652;
					}
					_iter_end_1a92de652:;
				};
				goto _case_begin_1a92dd255;
			}
		}
		else {
			_case_begin_1a92dd255:;
			{
				(*(_288224_t))._field_Implemented=jule::append((*_288224_t.alloc)._field_Implemented,jule::Slice<jule::Ptr<_1a59e4d06_Struct>>::make({(*(_288240_d))}));
			}
		}
		_match_end_1a92dd1ab:;
	};
	{
		auto expr = &((*(_288224_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92de9c6:;
		if (it != expr_end) {
			jule::Ptr<_1a5b58024_TypeSymbol> _289514_i = *it;
			{
				_1a5ab06c9_pushImplemented(_1a5b54cac_Trait((*(_289514_i))._field_Kind.ptr()), _288240_d);
			}
			_iter_next_1a92de9c6:;
			++it;
			goto _iter_begin_1a92de9c6;
		}
		_iter_end_1a92de9c6:;
	};
}



inline void _1a5ab09b5_pushImplements(jule::Ptr<_1a59e4d06_Struct>* _290024_s, jule::Ptr<_1a5a1d181_Trait> _290040_t) {
	_julec_label_1a92e0dd4:;
	{
		
		if (((*((*(_290024_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1a92e1555:;
			{
				{
					auto expr = &((*((*(_290024_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a92e25bc:;
					if (it != expr_end) {
						jule::Ptr<_1a5a1d181_Trait> _290410_b = *it;
						{
							if ((_290410_b == _290040_t)) {
								goto _match_end_1a92e1126;
							};
						}
						_iter_next_1a92e25bc:;
						++it;
						goto _iter_begin_1a92e25bc;
					}
					_iter_end_1a92e25bc:;
				};
				goto _case_begin_1a92e11c0;
			}
		}
		else {
			_case_begin_1a92e11c0:;
			{
				{ jule::Slice<jule::Ptr<_1a5a1d181_Trait>> &__jule_push_dest = (*((*(_290024_s))))._field_Implements; __jule_push_dest.push(_290040_t); };
			}
		}
		_match_end_1a92e1126:;
	};
	{
		auto expr = &((*(_290040_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92e2941:;
		if (it != expr_end) {
			jule::Ptr<_1a5b58024_TypeSymbol> _291314_i = *it;
			{
				_1a5ab09b5_pushImplements(_290024_s, _1a5b54cac_Trait((*(_291314_i))._field_Kind.ptr()));
			}
			_iter_next_1a92e2941:;
			++it;
			goto _iter_begin_1a92e2941;
		}
		_iter_end_1a92e2941:;
	};
}



inline jule::Bool _1a5b00362_traitHasReferenceReceiver(jule::Ptr<_1a5a1d181_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9586795:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> *_299_f = it;
			{
				if ((*((*(_299_f))))._field_Statically) {
					goto _iter_next_1a9586795;
				};
				jule::Ptr<_1a5a08303_Param> _353_p = (*(*(_299_f)).alloc)._field_Params[0LL];;
				if ((_1a5a08ba5_IsRef(_353_p.ptr()) && _1a5a0891e_IsSelf(_353_p))) {
					return true;;
				};
			}
			_iter_next_1a9586795:;
			++it;
			goto _iter_begin_1a9586795;
		}
		_iter_end_1a9586795:;
	};
	return false;;
}



inline jule::Bool _1a5b00719_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1a5b19aeb_Data>* _4333_d) {
	jule::Str _442_value = _1b914729c_FmtFloat(_1b916ed30_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1b916297c_CheckBitFloat(_442_value, _1b91614d6_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1a5b00a8d_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1a5b19aeb_Data>* _4830_d) {
	jule::F64 _492_min = _1b9167b6e_Min(_4818_kind);;
	jule::F64 _502_max = _1b9167e05_Max(_4818_kind);;
	{
		
		if (_1b9171b78_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1a958a2d2:;
			{
				jule::F64 _533_x = _1b916e57c_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _543_i;
				jule::F64 _546_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b911ceed_Modf(_533_x);
					_543_i = __jule_assign_result.__jule_result_arg0;
					_546_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_546_frac != 0LL)) {
					return false;;
				};
				return ((_543_i >= _492_min) && (_543_i <= _502_max));;
			}
		}
		else if (_1b91713c5_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1a958a348:;
			{
				jule::F64 _603_x = _1b916ed30_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_603_x <= _502_max)) {
					return true;;
				};
			}
		}
		else if (_1b917113e_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1a958a3c0:;
			{
				jule::F64 _653_x = _1b916ed30_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_492_min <= _653_x) && (_653_x <= _502_max));;
			}
		}
		_match_end_1a958a1c2:;
	};
	return false;;
}



inline jule::Bool _1a5b00e56_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1a5b19aeb_Data>* _7132_d) {
	jule::F64 _722_max = _1b9167e05_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && _7120_kind.equal("u8", 2))) {
		return _1a5ad3aa4_IsAscii(static_cast<jule::I32>(_1b916da43_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1b9171b78_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1a9590e75:;
			{
				jule::F64 _793_x = _1b916e57c_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_793_x < 0LL)) {
					return false;;
				};
				jule::F64 _833_i;
				jule::F64 _836_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b911ceed_Modf(_793_x);
					_833_i = __jule_assign_result.__jule_result_arg0;
					_836_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_836_frac != 0LL)) {
					return false;;
				};
				return (_833_i <= _722_max);;
			}
		}
		else if (_1b91713c5_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1a9590edb:;
			{
				jule::F64 _893_x = _1b916ed30_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_893_x <= _722_max)) {
					return true;;
				};
			}
		}
		else if (_1b917113e_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1a9591052:;
			{
				jule::F64 _943_x = _1b916ed30_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _943_x) && (_943_x <= _722_max));;
			}
		}
		_match_end_1a95905d4:;
	};
	return false;;
}



inline jule::Bool _1a5b012ca_intAssignable(jule::Str _10018_kind, jule::Ptr<_1a5b19aeb_Data>* _10030_d) {
	{
		
		if (_1b916ae2a_IsSigInt(_10018_kind)) {
			_case_begin_1a9595b17:;
			{
				return _1a5b00a8d_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_1b916b238_IsUnsigInt(_10018_kind)) {
			_case_begin_1a9595ba0:;
			{
				return _1a5b00e56_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1a959562d:;
			{
				return false;;
			}
		}
		_match_end_1a9595562:;
	};
}



inline void _1a5b0c6e3_checkMutRiskOfStructLit(jule::Ptr<_1a5a8e17a_Sema>* _92033_s, jule::Ptr<_1a59ecc32_StructLitExprModel>* _92044_m) {
	{
		auto expr = &((*((*(_92044_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9596c28:;
		if (it != expr_end) {
			jule::Ptr<_1a59ec88b_StructArgExprModel> *_9219_arg = it;
			{
				if ((*((*((*((*(_9219_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1a9596c28;
				};
				if (((!((*((*(*(_9219_arg)).alloc)._field_Expr))._field_Mutable)) && _1a5b526d3_Mutable((*(*(*(_9219_arg)).alloc)._field_Expr.alloc)._field_Kind.ptr()))) {
					_1a5a91cb5_pushErr((*(_92033_s)).ptr(), (*(*(_9219_arg)).alloc)._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(*(*(_9219_arg)).alloc)._field_Expr.alloc)._field_Kind), &__jule_any_type4)}));
				};
			}
			_iter_next_1a9596c28:;
			++it;
			goto _iter_begin_1a9596c28;
		}
		_iter_end_1a9596c28:;
	};
}



inline jule::Ptr<_1a5b50d52_TypeKind> _1a5b1352e_lenKind(void) {
	return _1c7988c23_primInt;;
}



inline jule::Bool _1a5b13881_isGoodValueToInfer(jule::Ptr<_1a5b19aeb_Data>* _142124_d) {
	return (!(_1a5b19ed6_IsNil((*(_142124_d)).ptr())));;
}



inline jule::Ptr<_1a59c3389_Directive> _1a5b48300_findDirective(jule::Slice<jule::Ptr<_1a59c3389_Directive>>* _425923_directives, jule::Str _425954_d) {
	{
		auto expr = _425923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9763785:;
		if (it != expr_end) {
			jule::Ptr<_1a59c3389_Directive> _426014_dr = *it;
			{
				if (((*((*(_426014_dr))._field_Tag))._field_Kind == _425954_d)) {
					return _426014_dr;;
				};
			}
			_iter_next_1a9763785:;
			++it;
			goto _iter_begin_1a9763785;
		}
		_iter_end_1a9763785:;
	};
	return nullptr;;
}



inline jule::Any _1a5b486b8_findBuiltinsImport(jule::Str* _426824_ident, jule::Ptr<_1a5a6dcd6_ImportInfo> _426836_imp) {
	return _1c798c331_findPackageBuiltinDef(&((*(_426836_imp))._field_LinkPath), _426824_ident);;
}



inline void _1a5b488e9_fitBitsize(jule::Ptr<_1a5b19aeb_Data>* _427720_d) {
	jule::Ptr<_1a5b5892b_Prim> _42786_prim = _1a5b534a3_Prim((*((*(_427720_d))))._field_Kind.ptr());;
	jule::I64 _42792_z = _1b91614d6_BitsizeOf(_1a5b58c6c_Str(_42786_prim.ptr()));;
	{
		
		if (_1b917113e_IsI64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1a976606d:;
			{
				jule::I64 _42823_k = _1b9163010_BitsizeOfInt(_1b916da43_ReadI64((*((*(_427720_d))))._field_Constant));;
				if (((_42823_k > _42792_z) || _1b916b238_IsUnsigInt((*_42786_prim.alloc)._field_Kind))) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_1b9161827_IntFromBits(_42823_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1c798b077_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1b91713c5_IsU64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1a97660d4:;
			{
				jule::I64 _42883_k = _1b91632c9_BitsizeOfUint(_1b916dcc9_ReadU64((*((*(_427720_d))))._field_Constant));;
				if (((_42883_k > _42792_z) || _1b916ae2a_IsSigInt((*_42786_prim.alloc)._field_Kind))) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_1b9161aad_UintFromBits(_42883_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1c798b077_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1b9171b78_IsF64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1a976615b:;
			{
				if ((_42792_z == 64LLU)) {
					return;;
				};
				jule::I64 _42983_k = _1b9162c46_BitsizeOfFloat(_1b916e57c_ReadF64((*((*(_427720_d))))._field_Constant));;
				if ((_42983_k > _42792_z)) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_1b9161d77_FloatFromBits(_42983_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1c798b077_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1a9765e5d:;
	};
}



inline void _1a5b48c29_makeStructLitAlloc(jule::Ptr<_1a5b19aeb_Data>* _430628_d, jule::Ptr<_1a59ecc32_StructLitExprModel>* _430643_lit) {
	(*((*(_430628_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5b5c457_Sptr>(_1a5b5c457_Sptr{._field_Elem=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait((*((*(_430643_lit))))._field_Strct, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data21)});
	(*((*(_430628_d))))._field_Model=jule::Any(jule::new_ptr<_1a59ed02e_AllocStructLitExprModel>(_1a59ed02e_AllocStructLitExprModel{._field_Lit=(*(_430643_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1a5ab1ee4_Var> _1a5b4909d_buildErrorVar(jule::Ptr<_1a5a4bc4d_Scope>* _431723_s, jule::Ptr<_1a59cbeca_FnCallExpr>* _431739_fc) {
	return jule::new_ptr<_1a5ab1ee4_Var>(_1a5ab1ee4_Var{._field_Scope=(*(_431723_s)), ._field_Token=(*((*(_431739_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1c798b077_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>()}), });;
}



inline jule::Any _1a5b49422_findBuiltinsSema(jule::Str* _433222_ident, jule::Ptr<_1a5a8e17a_Sema> _433238_s) {
	{
		auto expr = &((*((*(_433238_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9772871:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _433314_imp = *it;
			{
				if (((*(_433314_imp))._field_ImportAll || _1a5a71668_existIdent(_433314_imp, (*(_433222_ident))))) {
					jule::Any _43358_def = _1a5b486b8_findBuiltinsImport(_433222_ident, _433314_imp);;
					if ((_43358_def != nullptr)) {
						return _43358_def;;
					};
				};
			}
			_iter_next_1a9772871:;
			++it;
			goto _iter_begin_1a9772871;
		}
		_iter_end_1a9772871:;
	};
	jule::Str _43436_ppath = _1c80bc477_Dir((*(*_433238_s.alloc)._field_file.alloc)._field_File.ptr());;
	if (_1d1902dc5_HasPrefix(_43436_ppath, _1d1d32dd7_PathStdlib)) {
		(_43436_ppath).mut_slice(_1d1d32dd7_PathStdlib.len());;
		_43436_ppath=(jule::Str::lit("std", 3) + _1d190876b_Replace(_43436_ppath, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));
		return _1c798c331_findPackageBuiltinDef(&(_43436_ppath), _433222_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1a5b496db_isOkForShifting(jule::Ptr<_1a5b19aeb_Data>* _435725_d) {
	if (_1a5b1a503_IsConst((*(_435725_d)).ptr())) {
		{
			
			if (_1b917113e_IsI64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1a9775c81:;
				{
					return (_1b916da43_ReadI64((*((*(_435725_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1b91713c5_IsU64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1a9775d2a:;
				{
					return true;;
				}
			}
			else if (_1b9171b78_IsF64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1a9775da2:;
				{
					return (_1b916e57c_ReadF64((*((*(_435725_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1a9775be8:;
				{
					return false;;
				}
			}
			_match_end_1a9775b2c:;
		};
	};
	jule::Ptr<_1a5b5892b_Prim> _43702_prim = _1a5b534a3_Prim((*((*(_435725_d))))._field_Kind.ptr());;
	return ((_43702_prim != nullptr) && _1b916b502_IsInt(_1a5b58c6c_Str(_43702_prim)));;
}



inline jule::Bool _1a5b49ab5_isInstancedStruct(jule::Ptr<_1a59e7a84_StructIns> _437422_s) {
	return ((*((*(_437422_s))._field_Decl))._field_Generics.len() == (*_437422_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1a5b49db2_isPtrArithmeticCompatible(jule::Ptr<_1a5b19aeb_Data>* _437835_l, jule::Ptr<_1a5b19aeb_Data>* _437850_r) {
	jule::Ptr<_1a5b60c1e_Ptr> _43792_ptr = _1a5b539c0_Ptr((*((*(_437850_r))))._field_Kind.ptr());;
	if ((_43792_ptr != nullptr)) {
		return _1a5b5155b_Equal((*(_1a5b539c0_Ptr((*((*(_437835_l))))._field_Kind)))._field_Elem, (*_43792_ptr.alloc)._field_Elem);;
	};
	if ((_1a5b1a503_IsConst((*(_437850_r)).ptr()) && (*((*(_437850_r))))._field_untyped)) {
		return (_1a5b012ca_intAssignable(jule::Str::lit("int", 3), _437850_r) || _1a5b012ca_intAssignable(jule::Str::lit("uint", 4), _437850_r));;
	};
	_1a5b017b4_typeCompatibilityChecker _43886_tcc = _1a5b017b4_typeCompatibilityChecker{._field_dest=_1c7988c23_primInt, ._field_src=(*((*(_437850_r))))._field_Kind, };;
	if (_1a5b02e7a_check(&_43886_tcc)) {
		return true;;
	};
	_43886_tcc._field_dest=_1c798885a_primUint;
	return _1a5b02e7a_check(&_43886_tcc);;
}



inline void _1a5b4a258_applyCastKindModel(jule::Ptr<_1a5b19aeb_Data>* _439928_d, jule::Ptr<_1a5b50d52_TypeKind>* _439943_t, jule::Ptr<_1c80b653c_Token>* _439962_token) {
	(*((*(_439928_d))))._field_Model=jule::Any(jule::new_ptr<_1a59ed5b2_CastingExprModel>(_1a59ed5b2_CastingExprModel{._field_Token=(*(_439962_token)), ._field_Expr=jule::new_ptr<_1a5b19aeb_Data>((*((*(_439928_d))))), ._field_Kind=(*(_439943_t)), ._field_ExprKind=(*((*(_439928_d))))._field_Kind}), &__jule_any_type93);
}



inline void _1a5b4a5ee_applyCastKind(jule::Ptr<_1a5b19aeb_Data>* _440823_d, jule::Ptr<_1a5b50d52_TypeKind>* _440838_t, jule::Ptr<_1c80b653c_Token>* _440857_token) {
	_1a5b4a258_applyCastKindModel(_440823_d, _440838_t, _440857_token);
	(*((*(_440823_d))))._field_Kind=(*(_440838_t));
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b4a80d_buildVoidData(void) {
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c798798b_primVoid, });;
}



inline jule::Str _1a5b4ab82_checkDataForIntegerIndexing(jule::Ptr<_1a5b19aeb_Data>* _441937_d, jule::Ptr<_1c80b653c_Token>* _441952_token) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_441937_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1a5b534a3_Prim((*((*(_441937_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1a97811cb:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1b916b502_IsInt(_1a5b58c6c_Str(_1a5b534a3_Prim((*((*(_441937_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1a9781242:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1a5b1a503_IsConst((*(_441937_d)).ptr())) {
			_case_begin_1a97812a8:;
			{
				if ((_1b916ed30_AsF64((*((*(_441937_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1a5b534a3_Prim((*((*(_441937_d))))._field_Kind.ptr()) == nullptr) || _1a5b1a503_IsConst((*(_441937_d)).ptr()) || (_1b916121c_RealKindOf(_1a5b58c6c_Str(_1a5b534a3_Prim((*((*(_441937_d))))._field_Kind).ptr())) != _1b916121c_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1a978131e:;
			{
				_1a5b4a5ee_applyCastKind(_441937_d, &(_1c7988c23_primInt), _441952_token);
			}
		}
		_match_end_1a9781121:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1a5b4b028_applyCastModelByEnum(jule::Ptr<_1a5b19aeb_Data>* _444430_d, jule::Ptr<_1a5a2088c_Enum> _444444_e, jule::Ptr<_1c80b653c_Token>* _444459_token) {
	if ((_444444_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1a5b5892b_Prim> _44482_p = _1a5b534a3_Prim((*((*(_444444_e))._field_Kind))._field_Kind.ptr());;
	if (_1a5b5bdb3_IsStr(_44482_p.ptr())) {
		return;;
	};
	_1a5b4a258_applyCastKindModel(_444430_d, &((*(*(_444444_e))._field_Kind.alloc)._field_Kind), _444459_token);
}



inline void _1a5b4b314_castConstByType(jule::Str* _445521_t, jule::Ptr<_1a5b19aeb_Data>* _445534_d) {
	{
		
		if (_1b916ae2a_IsSigInt((*(_445521_t)))) {
			_case_begin_1a9787127:;
			{
				{
					auto _match_expr{ _1b91614d6_BitsizeOf(_1b916121c_RealKindOf((*(_445521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a9787bd8:;
						{
							_1b91700d8_SetI64((*((*(_445534_d))))._field_Constant.ptr(), _1b916e813_AsI64((*((*(_445534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a9787c60:;
						{
							_1b91700d8_SetI64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1b916e813_AsI64((*((*(_445534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a9787cc6:;
						{
							_1b91700d8_SetI64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1b916e813_AsI64((*((*(_445534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a9787d3c:;
						{
							_1b91700d8_SetI64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1b916e813_AsI64((*((*(_445534_d))))._field_Constant))));
						}
					}
					_match_end_1a97878b9:;
				};
			}
		}
		else if (_1b916b238_IsUnsigInt((*(_445521_t)))) {
			_case_begin_1a97871c1:;
			{
				{
					auto _match_expr{ _1b91614d6_BitsizeOf(_1b916121c_RealKindOf((*(_445521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a978bd1e:;
						{
							_1b9170391_SetU64((*((*(_445534_d))))._field_Constant.ptr(), _1b916ea99_AsU64((*((*(_445534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a978bd96:;
						{
							_1b9170391_SetU64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1b916ea99_AsU64((*((*(_445534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a978be0c:;
						{
							_1b9170391_SetU64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1b916ea99_AsU64((*((*(_445534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a978be73:;
						{
							_1b9170391_SetU64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1b916ea99_AsU64((*((*(_445534_d))))._field_Constant))));
						}
					}
					_match_end_1a978acda:;
				};
			}
		}
		else if (_1b916b843_IsFloat((*(_445521_t)))) {
			_case_begin_1a9787237:;
			{
				{
					auto _match_expr{ _1b91614d6_BitsizeOf(_1b916121c_RealKindOf((*(_445521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a978c2b4:;
						{
							_1b9170baa_SetF64((*((*(_445534_d))))._field_Constant.ptr(), _1b916ed30_AsF64((*((*(_445534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a9790e77:;
						{
							_1b9170baa_SetF64((*((*(_445534_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1b916ed30_AsF64((*((*(_445534_d))))._field_Constant))));
						}
					}
					_match_end_1a978ee21:;
				};
			}
		}
		_match_end_1a9786ec3:;
	};
}



inline void _1a5b4b831_updateModelToGenericIns(jule::Any* _448933_m, jule::Ptr<_1a5a0cca8_FnIns>* _448952_f) {
	{
		auto &_match_expr{ (*(_448933_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9787534:;
			{
				(*(_448933_m))=jule::Any((*(_448952_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a979132e:;
			{
				(*((*(_448933_m)).cast_ptr<_1a5a01ad2_StructSubIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_448952_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a97875bc:;
			{
				(*((*(_448933_m)).cast_ptr<_1a5a01e78_StructStaticIdentExprModel>(&__jule_any_type96)))._field_Method=(*(_448952_f));
			}
		}
		_match_end_1a979140b:;
	};
}



inline jule::Bool _1a5b4ba95_pushSubIdentFromExpr(jule::Any _450029_expr, jule::Ptr<_1a59c4841_SubIdentTypeDecl>* _450050_t) {
	{
		auto &_match_expr{ _450029_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a9794343:;
			{
				jule::Ptr<_1a59c9abb_IdentExpr> _45037_e = _450029_expr.unsafe_cast_ptr<_1a59c9abb_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1a59c4577_IdentTypeDecl>> &__jule_push_dest = (*((*(_450050_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a59c4577_IdentTypeDecl>(_1a59c4577_IdentTypeDecl{._field_Token=(*(_45037_e))._field_Token, ._field_Ident=(*_45037_e.alloc)._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a9794e37:;
			{
				jule::Ptr<_1a59cb3b4_SubIdentExpr> _45097_e = _450029_expr.unsafe_cast_ptr<_1a59cb3b4_SubIdentExpr>();;
				if ((!(_1a5b4ba95_pushSubIdentFromExpr((*((*(_45097_e))._field_Expr))._field_Kind, _450050_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1a59c4577_IdentTypeDecl>> &__jule_push_dest = (*((*(_450050_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a59c4577_IdentTypeDecl>(_1a59c4577_IdentTypeDecl{._field_Token=(*_45097_e.alloc)._field_Ident, ._field_Ident=(*((*_45097_e.alloc)._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1a97949d6:;
			{
				return false;;
			}
		}
		_match_end_1a9794981:;
	};
	return true;;
}



inline jule::Str _1a5b4bd5e_constoa(jule::Ptr<_1b916c16d_Const>* _452313_c) {
	{
		
		if (_1b917113e_IsI64((*(_452313_c)).ptr())) {
			_case_begin_1a9797d19:;
			{
				return _1b915dcdb_FmtInt(_1b916da43_ReadI64((*(_452313_c)).ptr()), 10LL);;
			}
		}
		else if (_1b91713c5_IsU64((*(_452313_c)).ptr())) {
			_case_begin_1a9797bd7:;
			{
				return _1b915d923_FmtUint(_1b916dcc9_ReadU64((*(_452313_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1a9795124:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a9797885:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1a5b4c28d_evalEnumStatic(jule::Ptr<_1a5a2088c_Enum>* _453424_enm, jule::Ptr<_1a5a1ed20_EnumItem>* _453441_item, jule::Ptr<_1c80b653c_Token>* _453463_token) {
	jule::Ptr<_1a5b19aeb_Data> _45356_d = jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait((*(_453424_enm)), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data3)}), });;
	if (((*(_453441_item)) != nullptr)) {
		(*(_45356_d))._field_Constant=jule::new_ptr<_1b916c16d_Const>((*(*((*((*((*(_453441_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_45356_d.alloc)._field_Model=jule::Any((*_45356_d.alloc)._field_Constant, &__jule_any_type19);
		_1a5b4b028_applyCastModelByEnum(&(_45356_d), (*(_453424_enm)), _453463_token);
	};
	return _45356_d;;
}



inline jule::Ptr<_1a59ecc32_StructLitExprModel> _1a5b4c557_isLitBased(jule::Any* _455120_m) {
	{
		auto &_match_expr{ (*(_455120_m)) };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a979c967:;
			{
				return (*(_455120_m)).cast_ptr<_1a59ecc32_StructLitExprModel>(&__jule_any_type95);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a979c9cd:;
			{
				return (*((*(_455120_m)).cast_ptr<_1a59ed02e_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a979ca44:;
			{
				jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _45587_ssi = (*(_455120_m)).cast_ptr<_1a5a01ad2_StructSubIdentExprModel>(&__jule_any_type98);;
				return _1a5b4c557_isLitBased(&((*((*(_45587_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a979caaa:;
			{
				jule::Ptr<_1a59ed5b2_CastingExprModel> _45617_c = (*(_455120_m)).cast_ptr<_1a59ed5b2_CastingExprModel>(&__jule_any_type93);;
				return _1a5b4c557_isLitBased(&((*((*(_45617_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1a979c527:;
			{
				return nullptr;;
			}
		}
		_match_end_1a979c4c2:;
	};
}



inline void _1a5b4c843_makeImplicitDeref(jule::Ptr<_1a5b19aeb_Data>* _456827_d, jule::Ptr<_1c80b653c_Token> _456841_baseToken) {
	jule::Ptr<_1a59ec35d_UnaryExprModel> _45696_unary = jule::new_ptr<_1a59ec35d_UnaryExprModel>(_1a59ec35d_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5b19aeb_Data>((*((*(_456827_d))))), ._field_Op=jule::new_ptr<_1c80b653c_Token>((*(_456841_baseToken)))});;
	(*((*(_45696_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*_45696_unary.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("*", 1);
	(*((*(_456827_d))))._field_Model=jule::Any(_45696_unary, &__jule_any_type110);
}



inline void _1a8c03330_updateRefer(jule::Ptr<_1a5a10e87_ReferenceStack> _457923_ref, jule::Ptr<_1a5a0cca8_FnIns>* _457946_old, jule::Ptr<_1a5a0cca8_FnIns>* _457959_new) {
	{
		auto expr = &((*_457923_ref.alloc)._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c04c27:;
		if (it != expr_end) {
			jule::I64 _45806_i = it - expr->begin();
			jule::Any _45809_sym = *it;
			{
				if ((__jule_any_type7_compare(_45809_sym, (*(_457946_old))))) {
					(*(_457923_ref))._field_buffer[_45806_i]=jule::Any((*(_457959_new)), &__jule_any_type7);
				};
			}
			_iter_next_1a8c04c27:;
			++it;
			_45806_i++;
			goto _iter_begin_1a8c04c27;
		}
		_iter_end_1a8c04c27:;
	};
}



inline void _1a5b4cec5_makeVariadic(jule::Ptr<_1a5b19aeb_Data>* _458722_d, jule::Ptr<_1a5b50d52_TypeKind> _458736_elem) {
	(*((*(_458722_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_BindIdent=(*_458736_elem.alloc)._field_BindIdent, ._field_Generic=(*(_458736_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_458736_elem.alloc)._field_Kind});
}



inline jule::Bool _1a5b4d404_isVarCaptured(jule::Ptr<_1a5a5420b_scopeChecker> _460118_r, jule::Ptr<_1a5a5420b_scopeChecker> _460140_s, jule::Ptr<_1a5ab1ee4_Var> _460158_v) {
	if (((*(_460158_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_460140_s))._field_scope == (*_460158_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_460140_s.alloc)._field_parent == nullptr) || (_460140_s == _460118_r))) {
				goto _iter_end_1a97a4100;
			};
			_460140_s=(*_460140_s.alloc)._field_parent;
		}
	_iter_next_1a97a4100:;
	}
	_iter_end_1a97a4100:;;
	return true;;
}



inline jule::Bool _1a5b6b5a9_kindUsesGenerics(jule::Ptr<_1a5b50d52_TypeKind>* _171626_k, jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>>* _171641_generics) {
	{
		auto expr = _171641_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b1287b:;
		if (it != expr_end) {
			jule::Ptr<_1a59d1177_GenericDecl> *_17179_g = it;
			{
				if (static__1a5b6b17a_exist(&((*((*(_17179_g))))._field_Ident), _171626_k)) {
					return true;;
				};
			}
			_iter_next_1a9b1287b:;
			++it;
			goto _iter_begin_1a9b1287b;
		}
		_iter_end_1a9b1287b:;
	};
	return false;;
}



inline jule::Bool _1a5b6b972_hasDirective(jule::Slice<jule::Ptr<_1a59c3389_Directive>>* _172622_directives, jule::Str _172653_tag) {
	{
		auto expr = _172622_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b1311d:;
		if (it != expr_end) {
			jule::Ptr<_1a59c3389_Directive> _172714_dr = *it;
			{
				if (((*((*(_172714_dr))._field_Tag))._field_Kind == _172653_tag)) {
					return true;;
				};
			}
			_iter_next_1a9b1311d:;
			++it;
			goto _iter_begin_1a9b1311d;
		}
		_iter_end_1a9b1311d:;
	};
	return false;;
}



inline jule::Bool _1a5b6bc3b_canGetPtr(jule::Ptr<_1a5b19aeb_Data>* _173519_d) {
	{
		
		if ((!((*((*(_173519_d))))._field_Lvalue)) || _1a5b1a503_IsConst((*(_173519_d)).ptr())) {
			_case_begin_1a9b14a6a:;
			{
				return false;;
			}
		}
		else if ((_1a5b54790_Fn((*((*(_173519_d))))._field_Kind.ptr()) != nullptr) || (_1a5b53c56_Enum((*((*(_173519_d))))._field_Kind) != nullptr)) {
			_case_begin_1a9b14b03:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a9b14a04:;
			{
				return true;;
			}
		}
		_match_end_1a9b13ecb:;
	};
}



inline jule::Bool _1a5b6c07c_isValidForSptrType(jule::Ptr<_1a5b50d52_TypeKind>* _174728_t) {
	jule::Ptr<_1a59e7a84_StructIns> _17486_s = _1a5b54a26_Struct((*(_174728_t)).ptr());;
	if ((((_17486_s != nullptr) && ((*_17486_s.alloc)._field_Decl != nullptr)) && (*(*_17486_s.alloc)._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1a5b6c313_isValidForRef(jule::Ptr<_1a5b50d52_TypeKind>* _175623_t) {
	return (_1a5b54790_Fn((*(_175623_t)).ptr()) == nullptr);;
}



inline jule::Bool _1a5b6c5cc_isBuiltinStrConvertable(jule::Ptr<_1a5b50d52_TypeKind>* _175933_t) {
	return ((((!(_1a5b521b6_Void((*(_175933_t)).ptr()))) && (_1a5b54790_Fn((*(_175933_t)).ptr()) == nullptr)) && (_1a5b552c9_Tup((*(_175933_t)).ptr()) == nullptr)) && (!(_1a5b55560_comptime((*(_175933_t)).ptr()))));;
}



inline jule::Str _1a5b6c896_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _176327_tokens) {
	if ((((*(_176327_tokens)).len() == 1LL) && ((*((*(_176327_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17676_n = 0LL;;
	{
		auto expr = _176327_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b1a8c8:;
		if (it != expr_end) {
			jule::Ptr<_1c80b653c_Token> *_17689_token = it;
			{
				_17676_n+=(*((*(_17689_token))))._field_Kind.len();
				_17676_n+=2LL;
			}
			_iter_next_1a9b1a8c8:;
			++it;
			goto _iter_begin_1a9b1a8c8;
		}
		_iter_end_1a9b1a8c8:;
	};
	_1e9a030bc_StrBuilder _17726_s = static__1e9a034eb_New(_17676_n);;
	{
		auto expr = _176327_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b185c9:;
		if (it != expr_end) {
			jule::I64 _17736_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> *_17739_token = it;
			{
				_1e9a03a5c_WriteStr(&_17726_s, (*((*(_17739_token))))._field_Kind);
				if ((((*(_176327_tokens)).len() - _17736_i) > 1LL)) {
					_1e9a03a5c_WriteStr(&_17726_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1a9b185c9:;
			++it;
			_17736_i++;
			goto _iter_begin_1a9b185c9;
		}
		_iter_end_1a9b185c9:;
	};
	return _1e9a04354_Str(&_17726_s);;
}



inline jule::Ptr<_1a5b5892b_Prim> _1a5b6cc70_buildPrimType(jule::Str _178218_kind) {
	return jule::new_ptr<_1a5b5892b_Prim>(_1a5b5892b_Prim{._field_Kind=_178218_kind});;
}



inline void _1a5b6d358_applyImplicitCast(jule::Ptr<_1a5b50d52_TypeKind>* _181027_dest, jule::Ptr<_1a5b19aeb_Data>* _181049_d, jule::Ptr<_1c80b653c_Token>* _181064_token) {
	if (_1a5b51e30_IsNil((*((*(_181049_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a5b5892b_Prim> _18142_destPrim = _1a5b534a3_Prim((*(_181027_dest)).ptr());;
	if (((_18142_destPrim != nullptr) && _1a5b5c149_IsAny(_18142_destPrim))) {
		jule::Ptr<_1a5b5892b_Prim> _18163_prim = _1a5b534a3_Prim((*((*(_181049_d))))._field_Kind);;
		if (((_18163_prim == nullptr) || (!(_1a5b5c149_IsAny(_18163_prim.ptr()))))) {
			_1a5b4a5ee_applyCastKind(_181049_d, _181027_dest, _181064_token);
		};
		return;;
	};
	jule::Ptr<_1a5a1d181_Trait> _18232_dt = _1a5b54cac_Trait((*(_181027_dest)).ptr());;
	if ((_18232_dt != nullptr)) {
		jule::Ptr<_1a5a1d181_Trait> _18253_bt = _1a5b54cac_Trait((*((*(_181049_d))))._field_Kind);;
		if (((_18253_bt == nullptr) || (_18253_bt != _18232_dt))) {
			_1a5b4a258_applyCastKindModel(_181049_d, _181027_dest, _181064_token);
			return;;
		};
	};
	if (((_1a5b53edc_TypeEnum((*(_181027_dest)).ptr()) != nullptr) && (_1a5b53edc_TypeEnum((*((*(_181049_d))))._field_Kind) == nullptr))) {
		_1a5b4a258_applyCastKindModel(_181049_d, _181027_dest, _181064_token);
		return;;
	};
}



inline jule::Bool _1a5b6d622_validTypeForXof(jule::Ptr<_1a5b50d52_TypeKind>* _183825_t) {
	return ((!(_1a5b521b6_Void((*(_183825_t)).ptr()))) && (_1a5b54790_Fn((*(_183825_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1a5b14783_SymbolTable__jule_tuple_s_1d1c6d64c_Log _1a5b71735_buildSymbols(jule::Ptr<_1a59c2058_Ast>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1a5a16e49_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1a5b14783_SymbolTable__jule_tuple_s_1d1c6d64c_Log __jule_func_result;
	jule::Ptr<_1a5a16e49_symbolBuilder> _176_sb = jule::new_ptr<_1a5a16e49_symbolBuilder>(_1a5a16e49_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1a5a1c548_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a5a71c0c_Package__jule_tuple_s_1d1c6d64c_Log _1a5b71ba8_analyzePackage(jule::Slice<jule::Ptr<_1a59c2058_Ast>>* _3024_files, jule::Trait* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1a5a71c0c_Package__jule_tuple_s_1d1c6d64c_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>> _326_tables = jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9c40503:;
		if (it != expr_end) {
			jule::Ptr<_1a59c2058_Ast> _3314_f = *it;
			{
				jule::Ptr<_1a5b14783_SymbolTable> _347_table;
				jule::Slice<_1d1c6d64c_Log> _3418_errors;
				({
					__jule_tuple_x_1a5b14783_SymbolTable__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a5b71735_buildSymbols(&(_3314_f), _3044_importer, nullptr);
					_347_table = __jule_assign_result.__jule_result_arg0;
					_3418_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3418_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3418_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1a5b14783_SymbolTable>> &__jule_push_dest = _326_tables; __jule_push_dest.push(_347_table); };
			}
			_iter_next_1a9c40503:;
			++it;
			goto _iter_begin_1a9c40503;
		}
		_iter_end_1a9c40503:;
	};
	jule::Ptr<_1a5a8e17a_Sema> _416_sema = jule::new_ptr<_1a5a8e17a_Sema>(_1a5a8e17a_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1a5a8d575_commonSemaMeta>()});;
	_1a5aad919_check(_416_sema, &(_326_tables));
	if (((*_416_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_416_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1a5a71c0c_Package> _506_pkg = jule::new_ptr<_1a5a71c0c_Package>(_1a5a71c0c_Package{._field_Files=(*_416_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _506_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a5a71c0c_Package__jule_tuple_s_1d1c6d64c_Log _1a5b720d7_AnalyzePackage(jule::Slice<jule::Ptr<_1a59c2058_Ast>> _7423_files, jule::Trait _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1a5a71c0c_Package__jule_tuple_s_1d1c6d64c_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a5b71ba8_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1a5a0cca8_FnIns> _1c7987073_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1a9c49760:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _2914_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c798cad4_builtinCallerOut), });;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1a9c497c6:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _3214_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c798d013_builtinCallerOutln), });;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1a9c4984d:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _3514_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c798d442_builtinCallerNew), });;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1a9c498c5:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _3814_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c798d871_builtinCallerPanic), });;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1a9c49a6d:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _4114_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c798ded1_builtinCallerMake), });;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1a9c49ad4:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _4414_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c798e300_builtinCallerAppend), });;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1a9c49b5b:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _4714_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c798ec18_builtinCallerCopy), });;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1a9c49bd3:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _5014_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c79913ac_builtinCallerLen), });;
				return _5014_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1a9c49d04:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _5314_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c7991b60_builtinCallerCap), });;
				return _5314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1a9c49d6a:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _5614_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c7992578_builtinCallerDelete), });;
				return _5614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1a9c49dd1:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _5914_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c79929a7_builtinCallerAssert), });;
				return _5914_f;;
			}
		}
		else {
			_case_begin_1a9c492a9:;
			{
				return nullptr;;
			}
		}
		_match_end_1a9c49562:;
	};
}



inline jule::Ptr<_1a5b50060_TypeAlias> _1c7987381_primTypeAlias(jule::Ptr<_1a5b50d52_TypeKind>* _6623_k) {
	return jule::new_ptr<_1a5b50060_TypeAlias>(_1a5b50060_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1a5ab1ee4_Var> _1c798ac36_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1a95d06ce:;
			{
				static jule::Ptr<_1a5ab1ee4_Var> _9714_v = jule::new_ptr<_1a5ab1ee4_Var>(_1a5ab1ee4_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(_1a5b58024_TypeSymbol{._field_Kind=_1c798768e_primNil}), ._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Constant=static__1b916d3d3_NewNil()})}), });;
				return _9714_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1a95d0118:;
			{
				static jule::Ptr<_1a5ab1ee4_Var> _11214_v = jule::new_ptr<_1a5ab1ee4_Var>(_1a5ab1ee4_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1c798b077_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Constant=static__1b916cb41_NewBool(true)})}), });;
				return _11214_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1a95d017e:;
			{
				static jule::Ptr<_1a5ab1ee4_Var> _12514_v = jule::new_ptr<_1a5ab1ee4_Var>(_1a5ab1ee4_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1c798b077_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1a5b1ac73_Value>(_1a5b1ac73_Value{._field_Data=jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Constant=static__1b916cb41_NewBool(false)})}), });;
				return _12514_v;;
			}
		}
		else {
			_case_begin_1a95cbaa4:;
			{
				return nullptr;;
			}
		}
		_match_end_1a95d0437:;
	};
}



inline jule::Ptr<_1a5b50060_TypeAlias> _1c798b077_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1a95d4e75:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _14514_t = _1c7987381_primTypeAlias(&(_1c7987c44_primAny));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1a95d50eb:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _14814_t = _1c7987381_primTypeAlias(&(_1c7988041_primStr));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1a95d5162:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _15114_t = _1c7987381_primTypeAlias(&(_1c79882e9_primBool));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1a95d51ea:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _15414_t = _1c7987381_primTypeAlias(&(_1c79885a2_primUintptr));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1a95d5261:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _15714_t = _1c7987381_primTypeAlias(&(_1c798885a_primUint));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1a95d52c7:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _16014_t = _1c7987381_primTypeAlias(&(_1c7988c23_primInt));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1a95d533d:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _16314_t = _1c7987381_primTypeAlias(&(_1c7988e65_primI8));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1a95d53b5:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _16614_t = _1c7987381_primTypeAlias(&(_1c798920c_primI16));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1a95d5492:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _16914_t = _1c7987381_primTypeAlias(&(_1c798976d_primI64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1a95d5519:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _17214_t = _1c7987381_primTypeAlias(&(_1c7989cce_primU16));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1a95d5591:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _17514_t = _1c7987381_primTypeAlias(&(_1c798a087_primU32));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1a95d5618:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _17814_t = _1c7987381_primTypeAlias(&(_1c798a571_primU64));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1a95d5690:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _18114_t = _1c7987381_primTypeAlias(&(_1c798a7b3_primF32));;
				return _18114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1a95d5717:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _18414_t = _1c7987381_primTypeAlias(&(_1c798a9c2_primF64));;
				return _18414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1a95d578e:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _18714_t = _1c7987381_primTypeAlias(&(_1c7989a26_primU8));;
				return _18714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1a95d5816:;
			{
				static jule::Ptr<_1a5b50060_TypeAlias> _19014_t = _1c7987381_primTypeAlias(&(_1c79894b5_primI32));;
				return _19014_t;;
			}
		}
		else {
			_case_begin_1a95d048c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a95d0569:;
	};
}



inline jule::Any _1c798b30d_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1a5ab1ee4_Var> _1986_v = _1c798ac36_findBuiltinVar(_19720_ident);;
	if ((_1986_v != nullptr)) {
		return jule::Any(_1986_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _2026_f = _1c7987073_findBuiltinFunc(_19720_ident);;
	if ((_2026_f != nullptr)) {
		return jule::Any(_2026_f, &__jule_any_type7);;
	};
	jule::Ptr<_1a5b50060_TypeAlias> _2066_ta = _1c798b077_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2066_ta != nullptr)) {
		return jule::Any(_2066_ta, &__jule_any_type65);;
	};
	return nullptr;;
}



inline jule::Any _1c798b5c7_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1a95e00d4:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _21614_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c799624c_builtinCallerStdDebugOut), });;
				return jule::Any(_21614_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1a95e0425:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _21914_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c799667b_builtinCallerStdDebugOutln), });;
				return jule::Any(_21914_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a95dd786:;
			{
				return nullptr;;
			}
		}
		_match_end_1a95dee5d:;
	};
}



inline jule::Any _1c798b891_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1a95e1965:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _22914_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c7994b52_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22914_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1a95e1cc8:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _23214_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c7995081_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23214_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1a95e19ed:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _23514_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c79954b0_builtinCallerStdMemFree), });;
				return jule::Any(_23514_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a95e1b96:;
			{
				return nullptr;;
			}
		}
		_match_end_1a95e0205:;
	};
}



inline jule::Any _1c798bc6a_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1a95e3e62:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _24514_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c7992dd6_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24514_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1a95e423c:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _24814_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c7993557_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24814_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1a95e42a3:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _25114_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c7993986_builtinCallerStdComptimeLine), });;
				return jule::Any(_25114_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1a95e3ec8:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _25414_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c7993db5_builtinCallerStdComptimeFile), });;
				return jule::Any(_25414_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1a95e4050:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _25714_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c79942e4_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25714_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1a95e436e:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _26014_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c7994723_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26014_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a95e411b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a95e21c4:;
	};
}



inline jule::Any _1c798beac_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1a95e4616:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _27014_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c79958de_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27014_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1a95e862b:;
			{
				static jule::Ptr<_1a5a0cca8_FnIns> _27314_f = jule::new_ptr<_1a5a0cca8_FnIns>(_1a5a0cca8_FnIns{._field_Decl=jule::new_ptr<_1a5a09cc7_Fn>(_1a5a09cc7_Fn{._field_Generics=jule::Slice<jule::Ptr<_1a59d1177_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1a5b19aeb_Data>,jule::Ptr<_1a5b1b823_Eval>*,jule::Ptr<_1a59cbeca_FnCallExpr>*,jule::Ptr<_1a5b19aeb_Data>*>(_1c7995d1d_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27314_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a95e850a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a95e841c:;
	};
}



inline jule::Any _1c798c331_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1a95ea6e9:;
			{
				return _1c798bc6a_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1a95ea760:;
			{
				return _1c798b5c7_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1a95ea7c6:;
			{
				return _1c798b891_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1a95ea83c:;
			{
				return _1c798beac_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1a95e887e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a95ea397:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1c798c6a5_builtinCallerError(jule::Ptr<_1a5b1b823_Eval>* _30028_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _30043_fc) {
	if (((*((*(_30043_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_30028_e)).ptr(), (*((*(_30043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_30043_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _3086_expr = _1a5b3e8e0_evalExpr((*(_30028_e)), (*((*(_30043_fc))))._field_Args[0LL]);;
	if ((_3086_expr == nullptr)) {
		return nullptr;;
	};
	if (_1a5b19ed6_IsNil(_3086_expr.ptr())) {
		_1a5b1bd73_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5b19aeb_Data> _3176_d = _1a5b4a80d_buildVoidData();;
	(*(_3176_d))._field_Model=jule::Any(jule::new_ptr<_1a5a05762_BuiltinErrorCallExprModel>(_1a5a05762_BuiltinErrorCallExprModel{._field_Err=_3086_expr}), &__jule_any_type22);
	return _3176_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c798cad4_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _32226_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _32241_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	if (((*((*(_32241_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_32226_e)).ptr(), (*((*(_32241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_32241_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _3316_expr = _1a5b3e8e0_evalExpr((*(_32226_e)), (*((*(_32241_fc))))._field_Args[0LL]);;
	if ((_3316_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a5b6c5cc_isBuiltinStrConvertable(&((*(_3316_expr))._field_Kind))))) {
		_1a5b1bd73_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5b19aeb_Data> _3416_d = _1a5b4a80d_buildVoidData();;
	(*(_3416_d))._field_Model=jule::Any(jule::new_ptr<_1a5a02a28_BuiltinOutCallExprModel>(_1a5a02a28_BuiltinOutCallExprModel{._field_Expr=(*(_3316_expr))._field_Model, }), &__jule_any_type26);
	return _3416_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c798d013_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _34628_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _34643_fc, jule::Ptr<_1a5b19aeb_Data>* _34665_d) {
	(*(_34665_d))=_1c798cad4_builtinCallerOut(nullptr, _34628_e, _34643_fc, _34665_d);
	if (((*(_34665_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34665_d))))._field_Model=jule::Any(jule::new_ptr<_1a5a02e02_BuiltinOutlnCallExprModel>(_1a5a02e02_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34665_d))))._field_Model.cast_ptr<_1a5a02a28_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Expr, }), &__jule_any_type27);
	return (*(_34665_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c798d442_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _35826_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _35841_fc, jule::Ptr<_1a5b19aeb_Data>* _35863_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1a5b1bd73_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _3676_t = _1a5b3dacb_evalExprKind((*(_35826_e)), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3676_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3676_t))._field_Decl))) {
		_1a5b1bd73_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1a5b6c07c_isValidForSptrType(&((*(_3676_t))._field_Kind))))) {
		jule::Ptr<_1a59e7a84_StructIns> _3787_s = _1a5b54a26_Struct((*(_3676_t))._field_Kind.ptr());;
		if ((((_3787_s != nullptr) && ((*_3787_s.alloc)._field_Decl != nullptr)) && (*(*_3787_s.alloc)._field_Decl.alloc)._field_Binded)) {
			_1a5b1bd73_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35863_d))))._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5b5c457_Sptr>(_1a5b5c457_Sptr{._field_Elem=(*(_3676_t))._field_Kind}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data21)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a5b50d52_TypeKind> _3927_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3676_t))._field_Kind;
		jule::Ptr<_1a5b19aeb_Data> _3957_init = _1a5b3e8e0_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_3927_old;
		if ((_3957_init != nullptr)) {
			jule::Ptr<_1c80b653c_Token> _4008_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1a5a9db5c_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3676_t))._field_Kind), &(_3957_init), &(_4008_token));
			_1a5a997c3_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3676_t))._field_Kind), &(_3957_init), _4008_token);
			(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1a5a032cb_BuiltinNewCallExprModel>(_1a5a032cb_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, ._field_Init=(*_3957_init.alloc)._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1a5a032cb_BuiltinNewCallExprModel>(_1a5a032cb_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_35863_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c798d871_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _42028_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _42043_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _4296_expr = _1a5b3e8e0_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4296_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a5b534a3_Prim((*(_4296_expr))._field_Kind.ptr()) == nullptr) || (!(_1a5b5bdb3_IsStr(_1a5b534a3_Prim((*(_4296_expr))._field_Kind).ptr()))))) {
		_1a5b1bd73_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5b19aeb_Data> _4386_d = _1a5b4a80d_buildVoidData();;
	(*(_4386_d))._field_Model=jule::Any(jule::new_ptr<_1a5a036a5_BuiltinPanicCallExprModel>(_1a5a036a5_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4296_expr))._field_Model}), &__jule_any_type28);
	return _4386_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c798ded1_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _44627_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _44642_fc, jule::Ptr<_1a5b19aeb_Data>* _44664_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1a5b1bd73_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a5b1bd73_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1a5b1bd73_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5b19aeb_Data> _4596_t = _1a5b3dacb_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4596_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4596_t))._field_Decl))) {
		_1a5b1bd73_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1a5b54509_Slc((*(_4596_t))._field_Kind.ptr()) == nullptr)) {
		_1a5b1bd73_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_4596_t))._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_44664_d))))._field_Kind=(*(_4596_t))._field_Kind;
	jule::Ptr<_1a5b19aeb_Data> _4746_lenExpr = _1a5b3e8e0_evalExpr(_1a5a98e21_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4746_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1a5b2a8ba_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4746_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1a5a04112_BuiltinMakeCallExprModel> _4816_model = jule::new_ptr<_1a5a04112_BuiltinMakeCallExprModel>(_1a5a04112_BuiltinMakeCallExprModel{._field_Kind=(*(_4596_t))._field_Kind, ._field_Len=(*(_4746_lenExpr))._field_Model, });;
	(*((*(_44664_d))))._field_Model=jule::Any(_4816_model, &__jule_any_type114);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1a5b19aeb_Data> _4877_capExpr = _1a5b3e8e0_evalExpr(_1a5a98e21_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_4877_capExpr == nullptr)) {
			return (*(_44664_d));;
		};
		_1a5b2a8ba_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4877_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4816_model))._field_Cap=(*(_4877_capExpr))._field_Model;
	};
	return (*(_44664_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c798e300_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _49729_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _49744_fc, jule::Ptr<_1a5b19aeb_Data>* _49766_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1a5b1bd73_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("values", 6), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a5b1bd73_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5b19aeb_Data> _5076_t = _1a5b3e8e0_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[0LL]);;
	if ((_5076_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a5b5ce2a_Slc> _5126_s = _1a5b54509_Slc((*(_5076_t))._field_Kind.ptr());;
	if ((_5126_s == nullptr)) {
		_1a5b1bd73_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1a5a9db5c_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5076_t))._field_Kind), &(_5076_t), &((*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token))) {
		_1a5a997c3_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5076_t))._field_Kind), &(_5076_t), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token);
	};
	jule::Ptr<_1a5b50d52_TypeKind> _5276_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5076_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5276_prefix;
	});;
	(*(_49766_d))=jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=(*(_5076_t))._field_Kind, ._field_Mutable=true, });
	{
		auto &_match_expr{ (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1a963559c:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1a5b1bd73_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a5b19aeb_Data> _5417_e1 = _1a5b3e8e0_evalExpr((*(_49729_e)), (*((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind.unsafe_cast_ptr<_1a59ca737_VariadicExpr>()))._field_Expr);;
				if ((_5417_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1a5b534a3_Prim((*(_5126_s))._field_Elem.ptr()) != nullptr) && _1a5b5a323_IsU8(_1a5b534a3_Prim((*(_5126_s))._field_Elem).ptr()))) {
					if (((_1a5b534a3_Prim((*(_5417_e1))._field_Kind) != nullptr) && _1a5b5bdb3_IsStr(_1a5b534a3_Prim((*(_5417_e1))._field_Kind).ptr()))) {
						_1a5b4cec5_makeVariadic(&(_5417_e1), _1c7989a26_primU8);
						(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a5a044db_BuiltinAppendCallExprModel>(_1a5a044db_BuiltinAppendCallExprModel{._field_Dest=(*(_5076_t))._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type25);
						return (*(_49766_d));;
					};
				};
				if ((!(_1a5b5321c_Variadicable((*(_5417_e1))._field_Kind)))) {
					_1a5b1bd73_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_5417_e1))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				_1a5b4cec5_makeVariadic(&(_5417_e1), (*(_5126_s))._field_Elem);
				if (_1a5a9db5c_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5126_s))._field_Elem), &(_5417_e1), &((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token))) {
					_1a5a997c3_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5126_s))._field_Elem), &(_5417_e1), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token);
				};
				(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a5a044db_BuiltinAppendCallExprModel>(_1a5a044db_BuiltinAppendCallExprModel{._field_Dest=(*(_5076_t))._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type25);
				return (*(_49766_d));;
			}
		}
		_match_end_1a9635503:;
	};
	jule::Ptr<_1a5b19aeb_Data> _5756_e1 = _1a5b3e8e0_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[1LL]);;
	if ((_5756_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a59ee33d_SliceExprModel> _5806_slice = jule::new_ptr<_1a59ee33d_SliceExprModel>(_1a59ee33d_SliceExprModel{._field_ElemKind=(*(_5126_s))._field_Elem, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL), jule::Any(nullptr))});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a964282e:;
		if (it != expr_end) {
			jule::Ptr<_1a59c82a1_Expr> _58414_arg = *it;
			{
				_5756_e1=_1a5b3e8e0_evalExpr((*(_49729_e)), _58414_arg);
				if ((_5756_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5756_e1))._field_Kind.alloc)._field_Variadic) {
					_1a5b1bd73_pushErr((*(_49729_e)).ptr(), (*(_58414_arg))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				if (_1a5a9db5c_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5126_s))._field_Elem), &(_5756_e1), &((*_58414_arg.alloc)._field_Token))) {
					_1a5a997c3_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5126_s))._field_Elem), &(_5756_e1), (*_58414_arg.alloc)._field_Token);
				};
				(*(_5806_slice))._field_Elems=jule::append((*_5806_slice.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_5756_e1))._field_Model}));
			}
			_iter_next_1a964282e:;
			++it;
			goto _iter_begin_1a964282e;
		}
		_iter_end_1a964282e:;
	};
	(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1a5a044db_BuiltinAppendCallExprModel>(_1a5a044db_BuiltinAppendCallExprModel{._field_Dest=(*(_5076_t))._field_Model, ._field_Elements=jule::Any(_5806_slice, &__jule_any_type76)}), &__jule_any_type25);
	return (*(_49766_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c798e7d9_callerCopySlice(jule::Ptr<_1a5b19aeb_Data>* _60625_dest, jule::Ptr<_1a5b1b823_Eval>* _60643_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _60658_fc, jule::Ptr<_1a5b19aeb_Data>* _60680_d) {
	if ((!((*((*(_60625_dest))))._field_Mutable))) {
		_1a5b1bd73_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5b19aeb_Data> _6116_src = _1a5b3e8e0_evalExpr((*(_60643_e)), (*((*(_60658_fc))))._field_Args[1LL]);;
	if ((_6116_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a5b5ce2a_Slc> _6156_slc = _1a5b54509_Slc((*(_6116_src))._field_Kind.ptr());;
	if ((_6156_slc != nullptr)) {
		if (((!((*(_6116_src))._field_Mutable)) && _1a5b526d3_Mutable((*_6156_slc.alloc)._field_Elem.ptr()))) {
			_1a5b1bd73_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1a5b5155b_Equal((*((*(_60625_dest))))._field_Kind, (*(_6116_src))._field_Kind)))) {
			_1a5b1bd73_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_60625_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(_6116_src))._field_Kind), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1a5b5892b_Prim> _6253_destPrim = _1a5b534a3_Prim((*(_1a5b54509_Slc((*((*(_60625_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1a5b5892b_Prim> _6263_prim = _1a5b534a3_Prim((*(_6116_src))._field_Kind);;
		if (((((_6253_destPrim == nullptr) || (_6263_prim == nullptr)) || (!(_1a5b5bdb3_IsStr(_6263_prim.ptr())))) || (!(_1a5b5a323_IsU8(_6253_destPrim.ptr()))))) {
			_1a5b1bd73_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*((*(_60625_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(_6116_src))._field_Kind), &__jule_any_type4)}));
		};
	};
	(*((*(_60680_d))))._field_Kind=_1a5b1352e_lenKind();
	(*((*(_60680_d))))._field_Model=jule::Any(jule::new_ptr<_1a5a05388_BuiltinCopyCallExprModel>(_1a5a05388_BuiltinCopyCallExprModel{._field_Dest=(*(_60625_dest)), ._field_Src=_6116_src}), &__jule_any_type30);
	return (*(_60680_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c798ec18_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _64027_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _64042_fc, jule::Ptr<_1a5b19aeb_Data>* _64064_d) {
	if (((*((*(_64042_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_64042_fc))))._field_Args.len() == 1LL)) {
			_1a5b1bd73_pushErr((*(_64027_e)).ptr(), (*((*(_64042_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1a5b1bd73_pushErr((*(_64027_e)).ptr(), (*((*(_64042_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_64042_fc))))._field_Args.len() > 2LL)) {
		_1a5b1bd73_pushErr((*(_64027_e)).ptr(), (*((*((*(_64042_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _6536_dest = _1a5b3e8e0_evalExpr((*(_64027_e)), (*((*(_64042_fc))))._field_Args[0LL]);;
	{
		
		if ((_6536_dest == nullptr)) {
			_case_begin_1a9658119:;
			{
				return nullptr;;
			}
		}
		else if ((_1a5b54509_Slc((*(_6536_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9658180:;
			{
				return _1c798e7d9_callerCopySlice(&(_6536_dest), _64027_e, _64042_fc, _64064_d);;
			}
		}
		else {
			_case_begin_1a96570c4:;
			{
				_1a5b1bd73_pushErr((*(_64027_e)).ptr(), (*((*((*(_64042_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9655567:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1c799008c_callerLenSlice(jule::Ptr<_1a5b19aeb_Data>* _66524_expr, jule::Ptr<_1a5b19aeb_Data>* _66542_d) {
	(*((*(_66542_d))))._field_Kind=_1a5b1352e_lenKind();
	(*((*(_66542_d))))._field_Model=jule::Any(jule::new_ptr<_1a5a047d8_BuiltinLenCallExprModel>(_1a5a047d8_BuiltinLenCallExprModel{._field_Expr=(*(_66524_expr))}), &__jule_any_type115);
	return (*(_66542_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7990411_callerLenMap(jule::Ptr<_1a5b19aeb_Data>* _67322_expr, jule::Ptr<_1a5b19aeb_Data>* _67340_d) {
	(*((*(_67340_d))))._field_Kind=_1a5b1352e_lenKind();
	(*((*(_67340_d))))._field_Model=jule::Any(jule::new_ptr<_1a5a047d8_BuiltinLenCallExprModel>(_1a5a047d8_BuiltinLenCallExprModel{._field_Expr=(*(_67322_expr))}), &__jule_any_type115);
	return (*(_67340_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7990785_callerLenArr(jule::Ptr<_1a5b19aeb_Data>* _68122_expr, jule::Ptr<_1a5b19aeb_Data>* _68140_d) {
	(*((*(_68140_d))))._field_Kind=_1a5b1352e_lenKind();
	(*((*(_68140_d))))._field_Constant=static__1b916c5ad_NewI64(static_cast<jule::I64>((*(_1a5b54273_Arr((*((*(_68122_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_68140_d))))._field_Model=jule::Any((*((*(_68140_d))))._field_Constant, &__jule_any_type19);
	return (*(_68140_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7990b09_callerLenStr(jule::Ptr<_1a5b19aeb_Data>* _68822_expr, jule::Ptr<_1a5b19aeb_Data>* _68840_d) {
	(*((*(_68840_d))))._field_Kind=_1a5b1352e_lenKind();
	if (_1a5b1a503_IsConst((*(_68822_expr)).ptr())) {
		(*((*(_68840_d))))._field_Constant=static__1b916c5ad_NewI64(static_cast<jule::I64>(_1b916e2e6_ReadStr((*((*(_68822_expr))))._field_Constant.ptr()).len()));
		(*((*(_68840_d))))._field_Model=jule::Any((*((*(_68840_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_68840_d))))._field_Model=jule::Any(jule::new_ptr<_1a5a047d8_BuiltinLenCallExprModel>(_1a5a047d8_BuiltinLenCallExprModel{._field_Expr=(*(_68822_expr))}), &__jule_any_type115);
	};
	return (*(_68840_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7990e7d_callerLenComptime(jule::Ptr<_1a5b19aeb_Data>* _70127_d, jule::I64 _70137_n) {
	(*((*(_70127_d))))._field_Kind=_1a5b1352e_lenKind();
	(*((*(_70127_d))))._field_Constant=static__1b916c5ad_NewI64(static_cast<jule::I64>(_70137_n));
	(*((*(_70127_d))))._field_Model=jule::Any((*((*(_70127_d))))._field_Constant, &__jule_any_type19);
	return (*(_70127_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c79913ac_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _70826_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _70841_fc, jule::Ptr<_1a5b19aeb_Data>* _70863_d) {
	if (((*((*(_70841_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_70826_e)).ptr(), (*((*(_70841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_70841_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr((*(_70826_e)).ptr(), (*((*((*(_70841_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _7166_dest = _1a5b3e59e_evalExpr1((*(_70826_e)), (*((*(_70841_fc))))._field_Args[0LL]);;
	{
		
		if ((_7166_dest == nullptr)) {
			_case_begin_1a9d53a78:;
			{
				return nullptr;;
			}
		}
		else if ((_1a5b54509_Slc((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9d529bc:;
			{
				return _1c799008c_callerLenSlice(&(_7166_dest), _70863_d);;
			}
		}
		else if ((_1a5b54273_Arr((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9d52a33:;
			{
				return _1c7990785_callerLenArr(&(_7166_dest), _70863_d);;
			}
		}
		else if ((_1a5b55043_Map((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9d52a99:;
			{
				return _1c7990411_callerLenMap(&(_7166_dest), _70863_d);;
			}
		}
		else if (((_1a5b534a3_Prim((*(_7166_dest))._field_Kind.ptr()) != nullptr) && _1a5b5bdb3_IsStr(_1a5b534a3_Prim((*_7166_dest.alloc)._field_Kind).ptr()))) {
			_case_begin_1a9d52b10:;
			{
				return _1c7990b09_callerLenStr(&(_7166_dest), _70863_d);;
			}
		}
		else if ((_1a5b557e6_comptimeStructFields((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9d52b76:;
			{
				return _1c7990e7d_callerLenComptime(_70863_d, (*(_1a5b557e6_comptimeStructFields((*_7166_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a5b55d13_comptimeEnumFields((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9d52bdc:;
			{
				return _1c7990e7d_callerLenComptime(_70863_d, (*(_1a5b55d13_comptimeEnumFields((*_7166_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a5b56ad3_comptimeTypeInfos((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9d53b77:;
			{
				return _1c7990e7d_callerLenComptime(_70863_d, (*(_1a5b56ad3_comptimeTypeInfos((*_7166_dest.alloc)._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1a5b56330_comptimeParams((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9d53bdd:;
			{
				return _1c7990e7d_callerLenComptime(_70863_d, (*(_1a5b56330_comptimeParams((*_7166_dest.alloc)._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1a5b57100_comptimeStatics((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9d53c54:;
			{
				return _1c7990e7d_callerLenComptime(_70863_d, (*(_1a5b57100_comptimeStatics((*_7166_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1a5b57b39_comptimeFiles((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9d53cba:;
			{
				return _1c7990e7d_callerLenComptime(_70863_d, (*(_1a5b57b39_comptimeFiles((*_7166_dest.alloc)._field_Kind)))._field_files.len());;
			}
		}
		else {
			_case_begin_1a9d52956:;
			{
				_1a5b1bd73_pushErr((*(_70826_e)).ptr(), (*((*((*(_70841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9d50de9:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7991731_callerCapSlice(jule::Ptr<_1a5b19aeb_Data>* _74624_expr, jule::Ptr<_1a5b19aeb_Data>* _74642_d) {
	(*((*(_74642_d))))._field_Kind=_1a5b1352e_lenKind();
	(*((*(_74642_d))))._field_Model=jule::Any(jule::new_ptr<_1a5a04ad5_BuiltinCapCallExprModel>(_1a5a04ad5_BuiltinCapCallExprModel{._field_Expr=(*(_74624_expr))}), &__jule_any_type116);
	return (*(_74642_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7991b60_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _75426_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _75441_fc, jule::Ptr<_1a5b19aeb_Data>* _75463_d) {
	if (((*((*(_75441_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_75426_e)).ptr(), (*((*(_75441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_75441_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _7626_dest = _1a5b3e8e0_evalExpr((*(_75426_e)), (*((*(_75441_fc))))._field_Args[0LL]);;
	{
		
		if ((_7626_dest == nullptr)) {
			_case_begin_1a9d63637:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7626_dest))._field_Decl) {
			_case_begin_1a9d6369d:;
			{
				_1a5b1bd73_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a5b54509_Slc((*(_7626_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9d63714:;
			{
				return _1c7991731_callerCapSlice(&(_7626_dest), _75463_d);;
			}
		}
		else {
			_case_begin_1a9d625e2:;
			{
				_1a5b1bd73_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9d60a85:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7992149_callerDeleteMap(jule::Ptr<_1a5b1b823_Eval>* _77725_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _77740_fc, jule::Ptr<_1a5b19aeb_Data>* _77762_expr, jule::Ptr<_1a5b19aeb_Data>* _77780_d) {
	if ((!((*((*(_77762_expr))))._field_Mutable))) {
		_1a5b1bd73_pushErr((*(_77725_e)).ptr(), (*((*((*(_77740_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_77780_d))=_1a5b4a80d_buildVoidData();
	jule::Ptr<_1a5a04eae_BuiltinDeleteCallExprModel> _7826_model = jule::new_ptr<_1a5a04eae_BuiltinDeleteCallExprModel>(_1a5a04eae_BuiltinDeleteCallExprModel{._field_Dest=(*(_77762_expr)), });;
	if (((*((*(_77740_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a5b19aeb_Data> _7867_key = _1a5b3e8e0_evalExpr((*(_77725_e)), (*((*(_77740_fc))))._field_Args[1LL]);;
		{
			
			if ((_7867_key == nullptr)) {
				_case_begin_1a9d69451:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7867_key))._field_Decl) {
				_case_begin_1a9d68098:;
				{
					_1a5b1bd73_pushErr((*(_77725_e)).ptr(), (*((*((*(_77740_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1a9d68032:;
				{
					;
					jule::Ptr<_1a5b50d52_TypeKind> _7958_keyType = (*(_1a5b55043_Map((*((*(_77762_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1a5a997c3_checkAssignType((*((*(_77725_e))))._field_s, false, &(_7958_keyType), &(_7867_key), (*((*((*(_77740_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1a9d67ebb:;
		};
		(*(_7826_model))._field_Key=_7867_key;
	};
	(*((*(_77780_d))))._field_Model=jule::Any(_7826_model, &__jule_any_type31);
	return (*(_77780_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7992578_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _80629_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _80644_fc, jule::Ptr<_1a5b19aeb_Data>* _80666_d) {
	if (((*((*(_80644_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_80629_e)).ptr(), (*((*(_80644_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80644_fc))))._field_Args.len() > 2LL)) {
		_1a5b1bd73_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _8146_dest = _1a5b3e8e0_evalExpr((*(_80629_e)), (*((*(_80644_fc))))._field_Args[0LL]);;
	{
		
		if ((_8146_dest == nullptr)) {
			_case_begin_1a9d711a0:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8146_dest))._field_Decl) {
			_case_begin_1a9d71216:;
			{
				_1a5b1bd73_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a5b55043_Map((*(_8146_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a9d7127c:;
			{
				return _1c7992149_callerDeleteMap(_80629_e, _80644_fc, &(_8146_dest), _80666_d);;
			}
		}
		else {
			_case_begin_1a9d7015a:;
			{
				_1a5b1bd73_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9d6d5ed:;
	};
}



inline jule::Ptr<_1a5b19aeb_Data> _1c79929a7_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _82929_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _82944_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	if (((*((*(_82944_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_82929_e)).ptr(), (*((*(_82944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_82944_fc))))._field_Args.len() > 2LL)) {
		_1a5b1bd73_pushErr((*(_82929_e)).ptr(), (*((*((*(_82944_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _8386_expr = _1a5b3e8e0_evalExpr((*(_82929_e)), (*((*(_82944_fc))))._field_Args[0LL]);;
	if ((_8386_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a5b534a3_Prim((*(_8386_expr))._field_Kind.ptr()) == nullptr) || (!(_1a5b5bb2c_IsBool(_1a5b534a3_Prim((*(_8386_expr))._field_Kind).ptr()))))) {
		_1a5b1bd73_pushErr((*(_82929_e)).ptr(), (*((*(_82944_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5a03b5b_BuiltinAssertCallExprModel> _8476_model = jule::new_ptr<_1a5a03b5b_BuiltinAssertCallExprModel>(_1a5a03b5b_BuiltinAssertCallExprModel{._field_Token=(*((*(_82944_fc))))._field_Token, ._field_Expr=(*(_8386_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_82944_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1a5b19aeb_Data> _8557_log = _1a5b3e8e0_evalExpr((*(_82929_e)), (*((*(_82944_fc))))._field_Args[1LL]);;
		if ((_8557_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1a5b1a503_IsConst(_8557_log.ptr()))) || (_1a5b534a3_Prim((*(_8557_log))._field_Kind) == nullptr)) || (!(_1a5b5bdb3_IsStr(_1a5b534a3_Prim((*(_8557_log))._field_Kind).ptr()))))) {
			_1a5b1bd73_pushErr((*(_82929_e)).ptr(), (*((*((*(_82944_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(_8557_log))._field_Kind), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8476_model))._field_Log=_1b916e2e6_ReadStr((*(_8557_log))._field_Constant.ptr());
	};
	jule::Ptr<_1a5b19aeb_Data> _8686_d = _1a5b4a80d_buildVoidData();;
	(*(_8686_d))._field_Model=jule::Any(_8476_model, &__jule_any_type29);
	return _8686_d;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7992dd6_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _87340_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _87355_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	if (((*((*(_87355_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_87340_e)).ptr(), (*((*(_87355_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_87355_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _8826_d = _1a5b3dacb_evalExprKind((*(_87340_e)), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8826_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _8862_f = _1a5b54790_Fn((*(_8826_d))._field_Kind.ptr());;
	if ((_8862_f != nullptr)) {
		if (_1a5a0e23d_IsBuiltin(_8862_f)) {
			_1a5b1bd73_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*_8862_f.alloc)._field_Generics.len() != (*((*_8862_f.alloc)._field_Decl))._field_Generics.len())) {
			_1a5b1bd73_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1a59e7a84_StructIns> _8972_s = _1a5b54a26_Struct((*(_8826_d))._field_Kind);;
	if (((_8972_s != nullptr) && ((*_8972_s.alloc)._field_Generics.len() != (*((*_8972_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1a5b1bd73_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1a5b55560_comptime((*(_8826_d))._field_Kind)) {
		_1a5b1bd73_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_8826_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a5a423c5_buildComptimeTypeInfoData(&((*((*(_87340_e))))._field_s), &((*(_8826_d))._field_Kind));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7993557_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _90941_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _90956_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	if (((*((*(_90956_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_90941_e)).ptr(), (*((*(_90956_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_90956_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr((*(_90941_e)).ptr(), (*((*((*(_90956_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _9176_d = _1a5b3e8e0_evalExpr((*(_90941_e)), (*((*(_90956_fc))))._field_Args[0LL]);;
	if ((_9176_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a5b13881_isGoodValueToInfer(&(_9176_d))))) {
		_1a5b1bd73_pushErr((*(_90941_e)).ptr(), (*((*((*(_90956_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_9176_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1a5a42716_buildComptimeValue(&(_9176_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7993986_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _92938_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _92953_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	if (((*((*(_92953_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_92938_e)).ptr(), (*((*((*(_92953_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1b916c16d_Const> _9336_constant = static__1b916c5ad_NewI64(static_cast<jule::I64>((*((*((*(_92953_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988c23_primInt, ._field_Model=jule::Any(_9336_constant, &__jule_any_type19), ._field_Constant=_9336_constant});;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7993db5_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _94138_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _94153_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	if (((*((*(_94153_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_94138_e)).ptr(), (*((*((*(_94153_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a3ee83_comptimeFile>(_1a5a3ee83_comptimeFile{._field_file=(*((*((*(_94138_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data18)}), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c79942e4_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _95439_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _95454_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	if (((*((*(_95454_fc))))._field_Args.len() > 0LL)) {
		_1a5b1bd73_pushErr((*(_95439_e)).ptr(), (*((*((*(_95454_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5a3d888_comptimeFiles>(_1a5a3d888_comptimeFiles{._field_files=(*((*((*(_95439_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data17)}), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7994723_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _96743_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _96758_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	if (((*((*(_96758_fc))))._field_Args.len() > 2LL)) {
		_1a5b1bd73_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96758_fc))))._field_Args.len() == 0LL)) {
		_1a5b1bd73_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96758_fc))))._field_Args.len() == 1LL)) {
		_1a5b1bd73_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_96758_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a9d97a12:;
			{
				goto _match_end_1a9d99c9a;
			}
		}
		else {
			_case_begin_1a9d99d11:;
			{
				_1a5b1bd73_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a5b1c1d6_pushSuggestion((*(_96743_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a9d99c9a:;
	};
	jule::Ptr<_1c80b653c_Token> _9886_ident = (*((*((*((*(_96758_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1a59c9abb_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_96743_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0)) {
			_case_begin_1a9d9c0ee:;
			{
				goto _match_end_1a9d9c341;
			}
		}
		else {
			_case_begin_1a9d9c396:;
			{
				_1a5b1bd73_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1a9d9c341:;
	};
	jule::Ptr<_1a5a5420b_scopeChecker> _9976_sc = (*((*(_96743_e))))._field_lookup.cast_ptr<_1a5a5420b_scopeChecker>((jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data0);;
	jule::Ptr<_1a5b50060_TypeAlias> _9986_alias = jule::new_ptr<_1a5b50060_TypeAlias>(_1a5b50060_TypeAlias{._field_Scope=(*(_9976_sc))._field_tree, ._field_Public=_1a5a8b243_IsPub((*(_9886_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9886_ident, ._field_Ident=(*_9886_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1a5b58024_TypeSymbol>(), });;
	jule::Ptr<_1a5b19aeb_Data> _10086_t = _1a5b3de1c_eval1((*(_96743_e)), (*((*(_96758_fc))))._field_Args[1LL]);;
	if ((_10086_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10086_t))._field_Decl) {
		(*((*(_9986_alias))._field_Kind))._field_Kind=(*(_10086_t))._field_Kind;
	} else {
		jule::Ptr<_1a5a34a27_comptimeTypeInfo> _10157_cti = _1a5b56d69_comptimeTypeInfo((*(_10086_t))._field_Kind.ptr());;
		if ((_10157_cti == nullptr)) {
			_1a5b1bd73_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a5b1c1d6_pushSuggestion((*(_96743_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9986_alias))._field_Kind))._field_Kind=(*(_10157_cti))._field_base;
	};
	_1a5a590ac_checkTypeAlias(_9976_sc, &(_9986_alias));
	return _1a5b4a80d_buildVoidData();;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7994b52_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _102735_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _102750_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<_1a5b19aeb_Data> _10286_result = jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c798885a_primUint, });;
	if (((*((*(_102750_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_102735_e)).ptr(), (*((*(_102750_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10286_result;;
	};
	if (((*((*(_102750_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr((*(_102735_e)).ptr(), (*((*((*(_102750_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _10406_d = _1a5b3dacb_evalExprKind((*(_102735_e)), (*((*((*(_102750_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10406_d == nullptr)) {
		return _10286_result;;
	};
	if ((!(_1a5b6d622_validTypeForXof(&((*(_10406_d))._field_Kind))))) {
		_1a5b1bd73_pushErr((*(_102735_e)).ptr(), (*((*((*(_102750_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_10406_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10286_result))._field_Model=jule::Any(jule::new_ptr<_1a5a05e16_SizeofExprModel>(_1a5a05e16_SizeofExprModel{._field_Expr=(*(_10406_d))._field_Model}), &__jule_any_type117);
	return _10286_result;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7995081_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _105236_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _105251_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<_1a5b19aeb_Data> _10536_result = jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c798885a_primUint, });;
	if (((*((*(_105251_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_105236_e)).ptr(), (*((*(_105251_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10536_result;;
	};
	if (((*((*(_105251_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr((*(_105236_e)).ptr(), (*((*((*(_105251_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _10656_d = _1a5b3dacb_evalExprKind((*(_105236_e)), (*((*((*(_105251_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10656_d == nullptr)) {
		return _10536_result;;
	};
	if ((!(_1a5b6d622_validTypeForXof(&((*(_10656_d))._field_Kind))))) {
		_1a5b1bd73_pushErr((*(_105236_e)).ptr(), (*((*((*(_105251_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a5b5121a_Str((*(_10656_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10536_result))._field_Model=jule::Any(jule::new_ptr<_1a5a06103_AlignofExprModel>(_1a5a06103_AlignofExprModel{._field_Expr=(*(_10656_d))._field_Model}), &__jule_any_type118);
	return _10536_result;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c79954b0_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _107733_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _107748_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	if (((*((*(_107748_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_107733_e)).ptr(), (*((*(_107748_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107748_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr((*(_107733_e)).ptr(), (*((*((*(_107748_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _10866_d = _1a5b3e8e0_evalExpr((*(_107733_e)), (*((*(_107748_fc))))._field_Args[0LL]);;
	if ((_10866_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a5b52e86_PerformsRC((*(_10866_d))._field_Kind.ptr())))) {
		_1a5b1bd73_pushErr((*(_107733_e)).ptr(), (*((*((*(_107748_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5b19aeb_Data> _10956_result = _1a5b4a80d_buildVoidData();;
	(*(_10956_result))._field_Model=jule::Any(jule::new_ptr<_1a5a06d6d_FreeExprModel>(_1a5a06d6d_FreeExprModel{._field_Expr=(*(_10866_d))._field_Model}), &__jule_any_type32);
	return _10956_result;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c79958de_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _110045_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _110060_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	if (((*((*(_110060_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_110045_e)).ptr(), (*((*(_110060_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_110060_fc))))._field_Args.len() > 1LL)) {
		_1a5b1bd73_pushErr((*(_110045_e)).ptr(), (*((*((*(_110060_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1a5b19aeb_Data> _11096_d = _1a5b3e8e0_evalExpr((*(_110045_e)), (*((*(_110060_fc))))._field_Args[0LL]);;
	if ((_11096_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a5b6c5cc_isBuiltinStrConvertable(&((*(_11096_d))._field_Kind))))) {
		_1a5b1bd73_pushErr((*(_110045_e)).ptr(), (*((*((*(_110060_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a5b19aeb_Data>(_1a5b19aeb_Data{._field_Kind=_1c7988041_primStr, ._field_Model=jule::Any(jule::new_ptr<_1a5a06697_IntegratedToStrExprModel>(_1a5a06697_IntegratedToStrExprModel{._field_Expr=(*(_11096_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c7995d1d_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _112744_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _112759_fc, jule::Ptr<_1a5b19aeb_Data>* _112781_d) {
	if ((!(_1a5b1c868_isUnsafe((*(_112744_e)).ptr())))) {
		_1a5b1bd73_pushErr((*(_112744_e)).ptr(), (*((*(_112759_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_112759_fc))))._field_Args.len() < 1LL)) {
		_1a5b1bd73_pushErr((*(_112744_e)).ptr(), (*((*(_112759_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1a5b19aeb_Data> _11376_argd = _1a5b3e8e0_evalExpr((*(_112744_e)), (*((*(_112759_fc))))._field_Args[0LL]);;
	if ((_11376_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1a5b534a3_Prim((*(_11376_argd))._field_Kind.ptr()) == nullptr) || (!(_1a5b5bdb3_IsStr(_1a5b534a3_Prim((*(_11376_argd))._field_Kind).ptr()))))) {
		_1a5b1bd73_pushErr((*(_112744_e)).ptr(), (*((*((*(_112759_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1a5b5121a_Str((*(_11376_argd))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1a5b1a503_IsConst(_11376_argd.ptr()))) || (!(_1b91718e2_IsStr((*(_11376_argd))._field_Constant.ptr()))))) {
		_1a5b1bd73_pushErr((*(_112744_e)).ptr(), (*((*((*(_112759_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5b19aeb_Data> _11526_r = _1a5b4a80d_buildVoidData();;
	jule::Ptr<_1a5a0cca8_FnIns> _11546_f = _1a5b54790_Fn((*((*(_112781_d))))._field_Kind);;
	if (((*(_11546_f))._field_Generics.len() > 0LL)) {
		(*(_11526_r))._field_Kind=(*((*_11546_f.alloc)._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1a5a06a71_BackendEmitExprModel> _11596_model = jule::new_ptr<_1a5a06a71_BackendEmitExprModel>(_1a5a06a71_BackendEmitExprModel{._field_Code=_1b916e2e6_ReadStr((*(_11376_argd))._field_Constant), });;
	if (((*((*(_112759_fc))))._field_Args.len() > 1LL)) {
		(*(_11596_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_112759_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_112759_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a9dc6e70:;
			if (it != expr_end) {
				jule::Ptr<_1a59c82a1_Expr> _116515_arg = *it;
				{
					_11376_argd=_1a5b3de1c_eval1((*(_112744_e)), _116515_arg);
					if ((_11376_argd == nullptr)) {
						return nullptr;;
					};
					(*_11596_model.alloc)._field_Exprs=jule::append((*_11596_model.alloc)._field_Exprs,jule::Slice<jule::Any>::make({(*(_11376_argd))._field_Model}));
				}
				_iter_next_1a9dc6e70:;
				++it;
				goto _iter_begin_1a9dc6e70;
			}
			_iter_end_1a9dc6e70:;
		};
	};
	(*_11526_r.alloc)._field_Model=jule::Any(_11596_model, &__jule_any_type24);
	return _11526_r;;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c799624c_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _117834_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _117849_fc, jule::Ptr<_1a5b19aeb_Data>* _117871_d) {
	(*(_117871_d))=_1c798cad4_builtinCallerOut(nullptr, _117834_e, _117849_fc, _117871_d);
	if (((*(_117871_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_117871_d))))._field_Model.cast_ptr<_1a5a02a28_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Debug=true;
	return (*(_117871_d));;
}



inline jule::Ptr<_1a5b19aeb_Data> _1c799667b_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _118736_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _118751_fc, jule::Ptr<_1a5b19aeb_Data>* _118773_d) {
	(*(_118773_d))=_1c798d013_builtinCallerOutln(nullptr, _118736_e, _118751_fc, _118773_d);
	if (((*(_118773_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_118773_d))))._field_Model.cast_ptr<_1a5a02e02_BuiltinOutlnCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_118773_d));;
}



inline jule::Ptr<_1a682b884_FileInfo> _1a6870334_ParseFile(jule::Ptr<_1c80bbcc3_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a682b884_FileInfo> _276_finf = jule::new_ptr<_1a682b884_FileInfo>();;
	({
		__jule_tuple_x_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = _1a68708c8_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log _1a68708c8_parseFileset(jule::Ptr<_1c80bbcc3_File> _5521_f) {
	__jule_tuple_x_1a59c2058_Ast__jule_tuple_s_1d1c6d64c_Log __jule_func_result;
	jule::Ptr<_1a689636b_parser> _566_p = jule::new_ptr<_1a689636b_parser>();;
	_1a68a71c3_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1a59d3e8d_ScopeTree> _1a6871368_newScope(void) {
	return jule::new_ptr<_1a59d3e8d_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a68716ed_isSt(jule::Ptr<_1c80b653c_Token> _499_current, jule::Ptr<_1c80b653c_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a6871a72_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1c80b653c_Token> _613_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_613_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1c80b7087_IsBinOp((*_613_prev.alloc)._field_Id) && ((*_613_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a6871e3a_nextStPos(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _696_braceN = 0LL;;
	jule::I64 _706_i = _6833_start;;
	for (; (_706_i < (*(_6815_tokens)).len()); (_706_i)++) {
		{
			jule::Bool _727_ok = false;;
			jule::Bool _737_terminated = false;;
			jule::Ptr<_1c80b653c_Token> _743_tok = (*(_6815_tokens))[_706_i];;
			{
				auto &_match_expr{ (*(_743_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1a9e54b79:;
					{
						if (((_696_braceN == 0LL) && (_706_i > _6833_start))) {
							if ((!(_1a6871a72_prevIsIncompleteExpr(_6815_tokens, &(_706_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a68716ed_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
									_727_ok = __jule_assign_result.__jule_result_arg0;
									_737_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_727_ok) {
									goto _julec_label_1a9e54abe;
								};
							};
						};
						(_696_braceN)++;
						goto _iter_next_1a9e53738;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1a9e54ddd:;
					{
						(_696_braceN)--;
						if (((_696_braceN == 0LL) && ((_706_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a68716ed_isSt((*(_6815_tokens))[(_706_i + 1LL)], _743_tok);
								_727_ok = __jule_assign_result.__jule_result_arg0;
								_737_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_727_ok) {
								(_706_i)++;
								goto _julec_label_1a9e54abe;
							};
						};
						goto _iter_next_1a9e53738;
					}
				}
				_match_end_1a9e54d66:;
			};
			if ((_696_braceN != 0LL)) {
				goto _iter_next_1a9e53738;
			};
			if ((_706_i > _6833_start)) {
				if (_1a6871a72_prevIsIncompleteExpr(_6815_tokens, &(_706_i))) {
					goto _iter_next_1a9e53738;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a68716ed_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a68716ed_isSt(_743_tok, _743_tok);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_727_ok))) {
				goto _iter_next_1a9e53738;
			};
			_julec_label_1a9e54abe:;
			if (_737_terminated) {
				(_706_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _706_i;
			__jule_func_result.__jule_result_arg1 = _737_terminated;
			return __jule_func_result;;
		}
	_iter_next_1a9e53738:;
	}
	_iter_end_1a9e53738:;;
	__jule_func_result.__jule_result_arg0 = _706_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c80b653c_Token__jule_tuple_bool _1a68722ae_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1c80b653c_Token>> _13028_tokens) {
	__jule_tuple_sx_1c80b653c_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1312_start = (*(_13016_i));;
	jule::Bool _1326_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a6871e3a_nextStPos(&(_13028_tokens), _1312_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1326_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1c80b653c_Token>> _1346_stTokens = _13028_tokens.slice(_1312_start, (*(_13016_i)));;
	if (_1326_terminated) {
		if ((_1346_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1a68722ae_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1346_stTokens).mut_slice(0LL, (_1346_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1346_stTokens;
	__jule_func_result.__jule_result_arg1 = _1326_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a68725de_stmt>> _1a6872996_splitStmts(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1a68725de_stmt>> _1526_stmts = jule::Slice<jule::Ptr<_1a68725de_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1536_pos = 0LL;;
	while ((_1536_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1c80b653c_Token>> _1557_stmt;
			jule::Bool _15513_terminated;
			({
				__jule_tuple_sx_1c80b653c_Token__jule_tuple_bool __jule_assign_result = _1a68722ae_skipSt(&(_1536_pos), (*(_15120_tokens)));
				_1557_stmt = __jule_assign_result.__jule_result_arg0;
				_15513_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1a68725de_stmt>> &__jule_push_dest = _1526_stmts; __jule_push_dest.push(jule::new_ptr<_1a68725de_stmt>(_1a68725de_stmt{._field_tokens=_1557_stmt, ._field_terminated=_15513_terminated})); };
		}
	_iter_next_1a9e5d0c2:;
	}
	_iter_end_1a9e5d0c2:;;
	return _1526_stmts;;
}



inline jule::Bool _1a688b0ec_isTypeOp(jule::U64* _89314_id) {
	return ((((*(_89314_id)) == static_cast<jule::U64>(65LLU)) || ((*(_89314_id)) == static_cast<jule::U64>(54LLU))) || ((*(_89314_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1a688b40a_isTypeRange(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _90021_tokens) {
	jule::Bool _9016_op = false;;
	{
		auto expr = _90021_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa033120:;
		if (it != expr_end) {
			jule::I64 _9026_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> _9029_token = *it;
			{
				if (((*(_9029_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_9016_op) {
						return true;;
					};
					jule::I64 _9078_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1c80b653c_Token>> _9088_lTokens = (*(_90021_tokens)).slice(_9026_i);;
					{
						auto expr = &(_9088_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa034a5b:;
						if (it != expr_end) {
							jule::Ptr<_1c80b653c_Token> _90911_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90911_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1aa0352ed:;
										{
											(_9078_rangeN)++;
											goto _iter_next_1aa034a5b;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1aa0356c7:;
										{
											(_9078_rangeN)--;
											goto _iter_next_1aa034a5b;
										}
									}
									_match_end_1aa0355d9:;
								};
								if ((_9078_rangeN == 0LL)) {
									return _1a688b0ec_isTypeOp(&((*(_90911_lToken))._field_Id));;
								};
							}
							_iter_next_1aa034a5b:;
							++it;
							goto _iter_begin_1aa034a5b;
						}
						_iter_end_1aa034a5b:;
					};
					return true;;
				};
				if ((!(_1a688b0ec_isTypeOp(&((*_9029_token.alloc)._field_Id))))) {
					return false;;
				};
				_9016_op=true;
			}
			_iter_next_1aa033120:;
			++it;
			_9026_i++;
			goto _iter_begin_1aa033120;
		}
		_iter_end_1aa033120:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c80b653c_Token>> _1a688b6c4_getBlockExpr(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _93322_tokens) {
	jule::I64 _9346_braceN = 0LL;;
	jule::I64 _9356_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa036bb2:;
		if (it != expr_end) {
			jule::I64 _9366_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> _9369_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9369_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1aa03839a:;
						{
							if (((((*(_93322_tokens)).len() - _9366_i) > 1LL) && ((*((*(_93322_tokens))[(_9366_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9356_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1aa038433:;
						{
							if (((_9346_braceN > 0LL) || (_9356_skipToNextBraceClose > 0LL))) {
								if ((_9356_skipToNextBraceClose > 0LL)) {
									(_9356_skipToNextBraceClose)--;
								};
								(_9346_braceN)++;
								goto _match_end_1aa0382e0;
							};
							return (*(_93322_tokens)).slice(0LL, _9366_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa038499:;
						{
							(_9346_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aa038510:;
						{
							(_9346_braceN)--;
						}
					}
					_match_end_1aa0382e0:;
				};
			}
			_iter_next_1aa036bb2:;
			++it;
			_9366_i++;
			goto _iter_begin_1aa036bb2;
		}
		_iter_end_1aa036bb2:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c80b653c_Token__jule_tuple_sx_1c80b653c_Token _1a68918e9_splitDelim(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _96520_tokens, jule::U64 _96538_delim) {
	__jule_tuple_sx_1c80b653c_Token__jule_tuple_sx_1c80b653c_Token __jule_func_result;
	jule::I64 _9666_func = -1LL;;
	jule::I64 _9676_rangeN = 0LL;;
	jule::I64 _9686_i = 0LL;;
	for (; (_9686_i < (*(_96520_tokens)).len()); (_9686_i)++) {
		{
			jule::Ptr<_1c80b653c_Token> _9703_token = (*(_96520_tokens))[_9686_i];;
			{
				auto &_match_expr{ (*(_9703_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1aa03ced7:;
					{
						_9666_func=_9676_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aa03d04d:;
					{
						(_9676_rangeN)++;
						goto _iter_next_1aa03b733;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aa03d0b4:;
					{
						(_9676_rangeN)--;
						if ((_9666_func == _9676_rangeN)) {
							_9666_func=-1LL;
							if (((((*(_96520_tokens)).len() - _9686_i) > 1LL) && ((*((*(_96520_tokens))[(_9686_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9686_i)++;
								goto _iter_next_1aa03b733;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1aa03d12a:;
					{
						(_9676_rangeN)--;
					}
				}
				_match_end_1aa03ce82:;
			};
			if ((((*(_9703_token))._field_Id == _96538_delim) && (_9676_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1c80b653c_Token>> _9948_l = (*(_96520_tokens)).slice(0LL, _9686_i);;
				jule::Slice<jule::Ptr<_1c80b653c_Token>> _9958_r = (*(_96520_tokens)).slice((_9686_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9948_l;
				__jule_func_result.__jule_result_arg1 = _9958_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1aa03b733:;
	}
	_iter_end_1aa03b733:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1a6891bb3_findLowestPrecOp(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _100422_tokens) {
	jule::U8 _10096_prec = 255LLU;;
	jule::I64 _10106_precPos = -1LL;;
	jule::I64 _10126_braceN = 0LL;;
	jule::Bool _10136_skipToNextBraceOpen = false;;
	{
		auto expr = _100422_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0432ea:;
		if (it != expr_end) {
			jule::I64 _10146_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> *_10149_token = it;
			{
				{
					auto &_match_expr{ (*((*(_10149_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1aa044087:;
						{
							_10136_skipToNextBraceOpen=false;
							goto _case_begin_1aa044120;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1aa044120:;
						{
							(_10126_braceN)++;
							goto _iter_next_1aa0432ea;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1aa044186:;
						{
							(_10126_braceN)--;
							goto _iter_next_1aa0432ea;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1aa0441ec:;
						{
							_10136_skipToNextBraceOpen=true;
							goto _iter_next_1aa0432ea;
						}
					}
					_match_end_1aa043ecc:;
				};
				{
					
					if (_10136_skipToNextBraceOpen) {
						_case_begin_1aa045907:;
						{
							goto _iter_next_1aa0432ea;
						}
					}
					else if ((_10146_i == 0LL)) {
						_case_begin_1aa04596d:;
						{
							goto _iter_next_1aa0432ea;
						}
					}
					else if ((_10126_braceN > 0LL)) {
						_case_begin_1aa0459d4:;
						{
							goto _iter_next_1aa0432ea;
						}
					}
					else if ((!(_1c80b7087_IsBinOp((*((*(_10149_token))))._field_Id)))) {
						_case_begin_1aa045a4a:;
						{
							goto _iter_next_1aa0432ea;
						}
					}
					_match_end_1aa045792:;
				};
				jule::Ptr<_1c80b653c_Token> _10433_left = (*(_100422_tokens))[(_10146_i - 1LL)];;
				if ((_1c80b6c79_IsUnaryOp((*(_10433_left))._field_Id) || ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1aa0432ea;
				};
				if (((_10146_i > 1LL) && ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1c80b653c_Token> _10514_lleft = (*(_100422_tokens))[(_10146_i - 2LL)];;
					if (((*(_10514_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_10149_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_10149_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1aa0432ea;
						};
					};
				};
				jule::U8 _10603_p = _1c80b68b1_Prec((*(_10149_token)));;
				if (((_10603_p != 0LLU) && (_10603_p <= _10096_prec))) {
					_10096_prec=_10603_p;
					_10106_precPos=_10146_i;
				};
			}
			_iter_next_1aa0432ea:;
			++it;
			_10146_i++;
			goto _iter_begin_1aa0432ea;
		}
		_iter_end_1aa0432ea:;
	};
	return _10106_precPos;;
}



inline jule::Ptr<_1a59c9abb_IdentExpr> _1a6891e7c_buildIdentExpr(jule::Ptr<_1c80b653c_Token>* _106924_token) {
	return jule::new_ptr<_1a59c9abb_IdentExpr>(_1a59c9abb_IdentExpr{._field_Token=(*(_106924_token)), ._field_Ident=(*((*(_106924_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1c80b653c_Token__jule_tuple_int _1a6892246_getRangeExprTokens(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _107728_tokens) {
	__jule_tuple_sx_1c80b653c_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10786_rangeN = 0LL;;
	jule::I64 _10796_i = ((*(_107728_tokens)).len() - 1LL);;
	for (; (_10796_i >= 0LL); (_10796_i)--) {
		{
			jule::Ptr<_1c80b653c_Token> _10813_tok = (*(_107728_tokens))[_10796_i];;
			{
				auto &_match_expr{ (*(_10813_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aa04c931:;
					{
						(_10786_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aa04cc3e:;
					{
						(_10786_rangeN)--;
					}
				}
				_match_end_1aa04cbd9:;
			};
			if ((_10786_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_107728_tokens)).slice(0LL, _10796_i);
				__jule_func_result.__jule_result_arg1 = _10786_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1aa04bec4:;
	}
	_iter_end_1aa04bec4:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10786_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a6892620_isAnonFnHead(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _110018_tokens) {
	{
		auto &_match_expr{ (*((*(_110018_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aa04e67a:;
			{
				if ((((*(_110018_tokens)).len() == 1LL) || ((*((*(_110018_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1aa04eadc;
				};
				goto _case_begin_1aa04ec1e;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aa04ec1e:;
			{
				if (((*((*(_110018_tokens))[((*(_110018_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1aa04eadc;
				};
				return true;;
			}
		}
		_match_end_1aa04eadc:;
	};
	return false;;
}



inline jule::Bool _1a6893324_checkAssignTokens(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1c80bad05_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0e07d7:;
		if (it != expr_end) {
			jule::Ptr<_1c80b653c_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa0e0ee1:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aa0e1398:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1aa0e12aa:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1aa0e2531:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1aa0e25b9:;
						{
							goto _iter_next_1aa0e07d7;
						}
					}
					else if (_1c80bb388_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1aa0e2630:;
						{
							return true;;
						}
					}
					_match_end_1aa0e24cb:;
				};
			}
			_iter_next_1aa0e07d7:;
			++it;
			goto _iter_begin_1aa0e07d7;
		}
		_iter_end_1aa0e07d7:;
	};
	return false;;
}



inline _1d1c6d64c_Log _1a68944e0_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1c80bbcc3_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1d1c6d64c_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1d1c6daae_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1c80b653c_Token>> _1a6894a1d_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1c80b653c_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1c80b653c_Token> _732_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_732_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _786_rangeN = 1LL;;
	jule::I64 _792_start = (*(_6915_i));;
	for (; ((_786_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1c80b653c_Token> _813_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_813_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1aa0e759c:;
					{
						(_786_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1aa0e78ee:;
					{
						(_786_rangeN)--;
					}
				}
				_match_end_1aa0e7877:;
			};
		}
	_iter_next_1aa0e69a8:;
	}
	_iter_end_1aa0e69a8:;;
	return (*(_6959_tokens)).slice(_792_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1c80b653c_Token__jule_tuple_sx_1c80b653c_Token _1a6894cd7_rangeLast(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _9919_tokens) {
	__jule_tuple_sx_1c80b653c_Token__jule_tuple_sx_1c80b653c_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1032_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1032_first != static_cast<jule::U64>(73LLU)) && (_1032_first != static_cast<jule::U64>(76LLU))) && (_1032_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1096_braceN = 0LL;;
	jule::I64 _1106_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1106_i >= 0LL); (_1106_i)--) {
		{
			jule::Ptr<_1c80b653c_Token> _1123_token = (*(_9919_tokens))[_1106_i];;
			{
				auto &_match_expr{ (*(_1123_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aa0eb87b:;
					{
						(_1096_braceN)++;
						goto _iter_next_1aa0eab44;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aa0ebb89:;
					{
						(_1096_braceN)--;
					}
				}
				_match_end_1aa0ebb34:;
			};
			if ((_1096_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1106_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1106_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1aa0eab44:;
	}
	_iter_end_1aa0eab44:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log _1a689528d_parts(jule::Slice<jule::Ptr<_1c80b653c_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1c80b653c_Token__jule_tuple_s_1d1c6d64c_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1416_rangeN = 0LL;;
	jule::I64 _1426_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa0ee9c2:;
		if (it != expr_end) {
			jule::I64 _1436_i = it - expr->begin();
			jule::Ptr<_1c80b653c_Token> _1439_token = *it;
			{
				{
					auto &_match_expr{ (*(_1439_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aa1009e5:;
						{
							(_1416_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aa100a6c:;
						{
							(_1416_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1aa100ad3:;
						{
							if ((_1416_rangeN > 0LL)) {
								goto _iter_next_1aa0ee9c2;
							};
							if ((_13746_exprMust && ((_1436_i - _1426_last) <= 0LL))) {
								_1d1c6d64c_Log _1545_err = _1a68944e0_makeErr((*(_1439_token))._field_Row, (*_1439_token.alloc)._field_Column, &((*_1439_token.alloc)._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
								{ jule::Slice<_1d1c6d64c_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1545_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last, _1436_i)); };
							_1426_last=(_1436_i + 1LL);
						}
					}
					_match_end_1aa10093a:;
				};
			}
			_iter_next_1aa0ee9c2:;
			++it;
			_1436_i++;
			goto _iter_begin_1aa0ee9c2;
		}
		_iter_end_1aa0ee9c2:;
	};
	if ((_1426_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c80b653c_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1a6895524_getCloseOfBrace(jule::U64 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1aa104048:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1aa1040ae:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1aa104125:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1aa1003da:;
			{
				return _16720_left;;
			}
		}
		_match_end_1aa10050b:;
	};
}



inline _1d1c6d64c_Log _1a6895953_compilerErr(jule::Ptr<_1c80b653c_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _1d1c6d64c_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_1d1c6daae_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1c80bccd5_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), };;
}



inline void _1a6895ce9_pushSuggestion(_1d1c6d64c_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_1d1c6daae_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1a59c3e6c_TypeDecl> _1a68a7bc9_buildVoidType(void) {
	return jule::new_ptr<_1a59c3e6c_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a5d45b18_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1aa2c1457:;
			{
				__jule_func_result.__jule_result_arg0=_1d1c717c6_IsWindows(_1d1d33943_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1aa2c10c2:;
			{
				__jule_func_result.__jule_result_arg0=_1d1c71ad4_IsDarwin(_1d1d33943_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1aa2c1138:;
			{
				__jule_func_result.__jule_result_arg0=_1d1c71d9d_IsLinux(_1d1d33943_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1aa2c119e:;
			{
				__jule_func_result.__jule_result_arg0=_1d1c72a08_IsUnix(_1d1d33943_Os);
			}
		}
		else {
			_case_begin_1aa2c0ad8:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1aa2c0c09:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a5d45c5b_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1aa2c3635:;
			{
				__jule_func_result.__jule_result_arg0=_1d1c721de_IsI386(_1d1d33beb_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1aa2c32a0:;
			{
				__jule_func_result.__jule_result_arg0=_1d1c72475_IsAmd64(_1d1d33beb_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1aa2c3316:;
			{
				__jule_func_result.__jule_result_arg0=_1d1c7273e_IsArm64(_1d1d33beb_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1aa2c337c:;
			{
				__jule_func_result.__jule_result_arg0=_1d1c73124_Is64Bit(_1d1d33beb_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1aa2c33e3:;
			{
				__jule_func_result.__jule_result_arg0=_1d1c72dd2_Is32Bit(_1d1d33beb_Arch);
			}
		}
		else {
			_case_begin_1aa2c2cb6:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1aa2c2dd7:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a5d45e04_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1d190d980_Base(_5029_p);
	jule::I64 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _1d190d3ec_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I64 _646_i = _1d1905acb_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a5d45b18_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a5d45c5b_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_1d1905acb_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a5d45b18_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a5d45c5b_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a5d45c5b_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a5d45b18_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a5d45b18_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1a5d6178d_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1d1d33943_Os); };
	if (_1d1c72a08_IsUnix(_1d1d33943_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1a5d61a13_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1d1d33beb_Arch); };
	if (_1d1c73124_Is64Bit(_1d1d33beb_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1d1c72dd2_Is32Bit(_1d1d33beb_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1a5d61cee_initVars(jule::Slice<jule::Str>* _5518_vars, _1a5d6146e_CompileInfo* _5532_info) {
	_1a5d6178d_setOsVars(_5518_vars);
	_1a5d61a13_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1aa2ce1e0:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1aa2cdb3a:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1aa2cdaa2:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1aa2cdbc3:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1aa2ce90a:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aa2ce971:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1aa2ce8a5:;
	};
}



inline jule::Slice<jule::U8> _1a68abccc_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__2146737d3_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_1d1d32898_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1d1c6d64c_Log _1a68ac0da_flatCompilerErr(jule::Str _4120_text) {
	return _1d1c6d64c_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1a68b1908_pushPasses(jule::Ptr<_1a5a71c0c_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa31cb8a:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _11214_f = *it;
			{
				_julec_label_1aa31d2b7:;
				{
					auto expr = &((*(_11214_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa31d718:;
					if (it != expr_end) {
						_1a5a12494_Pass _11410_pass = *it;
						{
							if ((_11410_pass._field_Text).empty()) {
								goto _iter_next_1aa31d718;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aa31e2da:;
								if (it != expr_end) {
									jule::Str _11811_cpass = *it;
									{
										if ((_11811_cpass == _11410_pass._field_Text)) {
											goto _iter_next_1aa31d718;
										};
									}
									_iter_next_1aa31e2da:;
									++it;
									goto _iter_begin_1aa31e2da;
								}
								_iter_end_1aa31e2da:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11410_pass._field_Text); };
						}
						_iter_next_1aa31d718:;
						++it;
						goto _iter_begin_1aa31d718;
					}
					_iter_end_1aa31d718:;
				};
			}
			_iter_next_1aa31cb8a:;
			++it;
			goto _iter_begin_1aa31cb8a;
		}
		_iter_end_1aa31cb8a:;
	};
}



inline jule::Slice<jule::Str> _1a68b1cc1_getAllUniquePasses(jule::Ptr<_1a5a71c0c_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1a5a6dcd6_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12910_passes = nullptr;;
	_1a68b1908_pushPasses(_12828_pkg, &(_12910_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3208b3:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _13214_u = *it;
			{
				if ((!((*(_13214_u))._field_Binded))) {
					_1a68b1908_pushPasses(&((*_13214_u.alloc)._field_Package), &(_12910_passes));
				};
			}
			_iter_next_1aa3208b3:;
			++it;
			goto _iter_begin_1aa3208b3;
		}
		_iter_end_1aa3208b3:;
	};
	return _12910_passes;;
}



inline _1a5d6146e_CompileInfo _1a68b1ed0_buildCompileInfo(void) {
	_1a5d6146e_CompileInfo _1426_info = _1a5d6146e_CompileInfo{._field_Prod=_2133d9726_Production, ._field_Test=_2133d8d63_Test, };;
	{
		auto &_match_expr{ _2133d6eb5_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1aa321c9e:;
			{
				_1426_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1aa321e14:;
			{
				_1426_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1aa321d8c:;
	};
	{
		auto &_match_expr{ _2133d85c1_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1aa321e9c:;
			{
				_1426_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1aa322a3b:;
			{
				_1426_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aa3222cc:;
			{
				_1426_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1aa322bd4:;
	};
	return _1426_info;;
}



inline void _1a68b2794_IterPackages(jule::Ptr<_1a68b0055_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1a5a71c0c_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa33e43c:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1aa33e43c:;
			++it;
			goto _iter_begin_1aa33e43c;
		}
		_iter_end_1aa33e43c:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1a68b2ac4_IterFiles(jule::Ptr<_1a5a71c0c_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1a5b14783_SymbolTable>*> _1634_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa340a7b:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _1714_file = *it;
			{
				_1634_f(&(_1714_file));
			}
			_iter_next_1aa340a7b:;
			++it;
			goto _iter_begin_1aa340a7b;
		}
		_iter_end_1aa340a7b:;
	};
}



inline void _1a68b2e6a_iterTraitInheritMethods(jule::Ptr<_1a5a1d181_Trait>* _2233_base, jule::Ptr<_1a5a1d181_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1a5a09cc7_Fn>*> _2263_f) {
	_1a68b3388_iterTraitInheritMethods1(_2233_base, _2252_t, _2263_f);
	{
		auto expr = &((*((*(_2252_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa341bae:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _2414_m = *it;
			{
				if ((!(_1a68bce86_ContainsTraitMethod(_2233_base, &((*(_2414_m))._field_Ident))))) {
					_2263_f(&(_2414_m));
				};
			}
			_iter_next_1aa341bae:;
			++it;
			goto _iter_begin_1aa341bae;
		}
		_iter_end_1aa341bae:;
	};
}



inline void _1a68b3388_iterTraitInheritMethods1(jule::Ptr<_1a5a1d181_Trait>* _3134_base, jule::Ptr<_1a5a1d181_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1a5a09cc7_Fn>*> _3164_f) {
	{
		auto expr = &((*((*(_3153_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa343034:;
		if (it != expr_end) {
			jule::Ptr<_1a5b58024_TypeSymbol> _3214_inh = *it;
			{
				jule::Ptr<_1a5a1d181_Trait> _337_t2 = _1a5b54cac_Trait((*(_3214_inh))._field_Kind.ptr());;
				_1a68b2e6a_iterTraitInheritMethods(_3134_base, &(_337_t2), _3164_f);
			}
			_iter_next_1aa343034:;
			++it;
			goto _iter_begin_1aa343034;
		}
		_iter_end_1aa343034:;
	};
}



inline void _1a68b3641_IterTraitMethods(jule::Ptr<_1a5a1d181_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1a5a09cc7_Fn>*> _3937_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3444b9:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _4014_m = *it;
			{
				_3937_f(&(_4014_m));
			}
			_iter_next_1aa3444b9:;
			++it;
			goto _iter_begin_1aa3444b9;
		}
		_iter_end_1aa3444b9:;
	};
	_1a68b3388_iterTraitInheritMethods1(_3926_t, _3926_t, _3937_f);
}



inline jule::Bool _1a68ba989_IsForwarded(jule::Ptr<_1a5a4bc4d_Scope>* _2317_s) {
	jule::Any _242_last = (*((*(_2317_s))))._field_Stmts[((*((*(_2317_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _242_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aa364d47:;
			{
				{
					auto &_match_expr{ (*(_242_last.cast_ptr<_1a5b19aeb_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1aa365023:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1aa365be4:;
						{
							return false;;
						}
					}
					_match_end_1aa365b8e:;
				};
			}
		}
		else {
			_case_begin_1aa364eac:;
			{
				return true;;
			}
		}
		_match_end_1aa364e57:;
	};
}



inline jule::Bool _1a68bac97_IsExprComesFromBind(jule::Ptr<_1a5b19aeb_Data>* _3925_d) {
	{
		auto &_match_expr{ (*((*(_3925_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa3653ca:;
			{
				return (*((*((*(_3925_d))))._field_Model.unsafe_cast_ptr<_1a5ab1ee4_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa366893:;
			{
				return (*((*((*((*((*(_3925_d))))._field_Model.unsafe_cast_ptr<_1a5a01ad2_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1aa3663cb:;
			{
				return false;;
			}
		}
		_match_end_1aa366376:;
	};
}



inline jule::Bool _1a68bb061_IsAny(jule::Ptr<_1a5b50d52_TypeKind>* _5115_t) {
	if ((_1a5b53edc_TypeEnum((*(_5115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a5b5892b_Prim> _552_prim = _1a5b534a3_Prim((*(_5115_t)).ptr());;
	return ((_552_prim != nullptr) && _1a5b5c149_IsAny(_552_prim));;
}



inline jule::Bool _1a68bb3a2_IsClosure(jule::Ptr<_1a59eec9a_AnonFnExprModel>* _6015_m) {
	return ((*((*(_6015_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1a68bb638_IsOpMethod(jule::Ptr<_1a5a09cc7_Fn>* _6316_m) {
	if ((((*((*(_6316_m))))._field_Generics.len() > 0LL) || ((*((*(_6316_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _672_mi = (*((*(_6316_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_672_mi == (*(*_672_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a68bb9ac_IsTraitMethod(jule::Ptr<_1a59e7a84_StructIns>* _7923_owner, jule::Ptr<_1a5a0cca8_FnIns>* _7943_f) {
	{
		auto expr = &((*((*((*(_7923_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa36c2b1:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> _8014_t = *it;
			{
				if ((_1a5a1dd30_FindMethod(_8014_t.ptr(), (*((*((*(_7943_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1aa36c2b1:;
			++it;
			goto _iter_begin_1aa36c2b1;
		}
		_iter_end_1aa36c2b1:;
	};
	return false;;
}



inline jule::Bool _1a68bbd31_IsStdPackage(jule::Str* _9218_f, jule::Str _9226_p) {
	return _1d1902dc5_HasPrefix((*(_9218_f)), _1d190d166_Join(jule::Slice<jule::Str>::make({_1d1d32dd7_PathStdlib,_9226_p})));;
}



inline jule::Ptr<_1a59c3389_Directive> _1a68bc749_FindDirective(jule::Slice<jule::Ptr<_1a59c3389_Directive>>* _923_directives, jule::Str _954_tag) {
	{
		auto expr = _923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa377c5b:;
		if (it != expr_end) {
			jule::Ptr<_1a59c3389_Directive> _1014_dr = *it;
			{
				if (((*((*(_1014_dr))._field_Tag))._field_Kind == _954_tag)) {
					return _1014_dr;;
				};
			}
			_iter_next_1aa377c5b:;
			++it;
			goto _iter_begin_1aa377c5b;
		}
		_iter_end_1aa377c5b:;
	};
	return nullptr;;
}



inline jule::Bool _1a68bcb12_HasDirective(jule::Slice<jule::Ptr<_1a59c3389_Directive>>* _1918_directives, jule::Str _1949_tag) {
	return (_1a68bc749_FindDirective(&((*(_1918_directives))), _1949_tag) != nullptr);;
}



inline jule::Bool _1a68bce86_ContainsTraitMethod(jule::Ptr<_1a5a1d181_Trait>* _2429_t, jule::Str* _2441_ident) {
	{
		auto expr = &((*((*(_2429_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa3798a6:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _259_m = *it;
			{
				if (((*(_259_m))._field_Ident == (*(_2441_ident)))) {
					return true;;
				};
			}
			_iter_next_1aa3798a6:;
			++it;
			goto _iter_begin_1aa3798a6;
		}
		_iter_end_1aa3798a6:;
	};
	return false;;
}



inline jule::I64 _1a68bd64b_FindTraitTypeOffsetS(jule::Ptr<_1a5a1d181_Trait> _3725_t, jule::Ptr<_1a59e7a84_StructIns> _3740_s) {
	if (((*(_3725_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _416_i = 0LL;;
	{
		auto expr = &((*_3725_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa37b589:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> *_429_si = it;
			{
				if (((*(_3740_s))._field_Decl == (*(_429_si)))) {
					{
						auto expr = &((*((*(_429_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1aa37c425:;
						if (it != expr_end) {
							jule::Ptr<_1a59e7a84_StructIns> *_4411_ins = it;
							{
								if (((*(_4411_ins)) == _3740_s)) {
									return _416_i;;
								};
								(_416_i)++;
							}
							_iter_next_1aa37c425:;
							++it;
							goto _iter_begin_1aa37c425;
						}
						_iter_end_1aa37c425:;
					};
					goto _iter_end_1aa37b589;
				} else {
					_416_i+=(*((*(_429_si))))._field_Instances.len();
				};
			}
			_iter_next_1aa37b589:;
			++it;
			goto _iter_begin_1aa37b589;
		}
		_iter_end_1aa37b589:;
	};
	return -1LL;;
}



inline jule::I64 _1a68bd9c0_FindTraitTypeOffset(jule::Ptr<_1a5a1d181_Trait> _6024_t, jule::Ptr<_1a5b50d52_TypeKind> _6039_k) {
	if (((*(_6024_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1a59e7a84_StructIns> _6410_s = nullptr;;
	if ((_1a5b53739_Sptr(_6039_k.ptr()) != nullptr)) {
		_6039_k=(*(_1a5b53739_Sptr(_6039_k)))._field_Elem;
	};
	_6410_s=_1a5b54a26_Struct(_6039_k);
	if ((_6410_s == nullptr)) {
		return -1LL;;
	};
	return _1a68bd64b_FindTraitTypeOffsetS(_6024_t, _6410_s);;
}



inline jule::Bool _1aa334102_isOrdered(jule::Ptr<_1a59e4d06_Struct>* _1418_t, jule::Slice<jule::Ptr<_1a59e4d06_Struct>> _1425_s) {
	_julec_label_1aa335b09:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa336049:;
		if (it != expr_end) {
			jule::Ptr<_1a59e4d06_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa3366ba:;
					if (it != expr_end) {
						jule::Ptr<_1a59e4d06_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1aa336049;
							};
						}
						_iter_next_1aa3366ba:;
						++it;
						goto _iter_begin_1aa3366ba;
					}
					_iter_end_1aa3366ba:;
				};
				return false;;
			}
			_iter_next_1aa336049:;
			++it;
			goto _iter_begin_1aa336049;
		}
		_iter_end_1aa336049:;
	};
	return true;;
}

inline jule::Bool _1aa33a69c_isOrdered(jule::Ptr<_1a5ab1ee4_Var>* _1418_t, jule::Slice<jule::Ptr<_1a5ab1ee4_Var>> _1425_s) {
	_julec_label_1aa33c160:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa33c5a0:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1aa33cd86:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1aa33c5a0;
							};
						}
					}
					_match_end_1aa33cd20:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa33d13e:;
					if (it != expr_end) {
						jule::Ptr<_1a5ab1ee4_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1aa33c5a0;
							};
						}
						_iter_next_1aa33d13e:;
						++it;
						goto _iter_begin_1aa33d13e;
					}
					_iter_end_1aa33d13e:;
				};
				return false;;
			}
			_iter_next_1aa33c5a0:;
			++it;
			goto _iter_begin_1aa33c5a0;
		}
		_iter_end_1aa33c5a0:;
	};
	return true;;
}



inline void _1aa330dce_order(jule::Slice<jule::Ptr<_1a59e4d06_Struct>>* _3718_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1aa331352:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1aa332551:;
	for (; (_406_j < (*(_3718_s)).len()); (_406_j)++) {
		{
			jule::Ptr<_1a59e4d06_Struct> _437_t = (*(_3718_s))[_406_j];;
			{
				auto expr = (*(_3718_s)).slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1aa3332bb:;
				if (it != expr_end) {
					jule::Ptr<_1a59e4d06_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1aa332584;
						};
					}
					_iter_next_1aa3332bb:;
					++it;
					goto _iter_begin_1aa3332bb;
				}
				_iter_end_1aa3332bb:;
			};
			if (_1aa334102_isOrdered(&(_437_t), (*(_3718_s)).slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap((*(_3718_s))[_386_i], (*(_3718_s))[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1aa332584:;
	}
	_iter_end_1aa332584:;;
	if ((_386_i < (*(_3718_s)).len())) {
		goto _julec_label_1aa331352;
	};
}

inline void _1aa336533_order(jule::Slice<jule::Ptr<_1a5ab1ee4_Var>>* _3718_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1aa337941:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1aa338aeb:;
	for (; (_406_j < (*(_3718_s)).len()); (_406_j)++) {
		{
			jule::Ptr<_1a5ab1ee4_Var> _437_t = (*(_3718_s))[_406_j];;
			{
				auto expr = (*(_3718_s)).slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1aa339866:;
				if (it != expr_end) {
					jule::Ptr<_1a5ab1ee4_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1aa338b2e;
						};
					}
					_iter_next_1aa339866:;
					++it;
					goto _iter_begin_1aa339866;
				}
				_iter_end_1aa339866:;
			};
			if (_1aa33a69c_isOrdered(&(_437_t), (*(_3718_s)).slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap((*(_3718_s))[_386_i], (*(_3718_s))[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1aa338b2e:;
	}
	_iter_end_1aa338b2e:;;
	if ((_386_i < (*(_3718_s)).len())) {
		goto _julec_label_1aa337941;
	};
}



inline void _1a69cc8ae_EliminateDefines(jule::Ptr<_1a68b0055_IR>* _30526_ir) {
	jule::Ptr<_1a69c9999_ObjectDeadCode> _3066_ocd = static__1a69c9e3e_new(_30526_ir);;
	_1a69cc57e_elimanate(_3066_ocd);
}



inline void _1a69d182a_eliminateDeadCodeOfScope(jule::Ptr<_1a5a4bc4d_Scope> _23733_s) {
	jule::Slice<jule::Ptr<_1a5a4e5e1_Label>> _2382_labels = jule::Slice<jule::Ptr<_1a5a4e5e1_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1a5a4e9ba_GotoSt>> _2392_gotos = jule::Slice<jule::Ptr<_1a5a4e9ba_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1a69cd5e6_scopeDeadCode> _2406_sdc = jule::new_ptr<_1a69cd5e6_scopeDeadCode>(_1a69cd5e6_scopeDeadCode{._field_s=_23733_s, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a5a4e5e1_Label>>>)((&(_2382_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a5a4e9ba_GotoSt>>>)((&(_2392_gotos)))), });;
	{
		_1a69d14ea_optimizeStmts(_2406_sdc);
	};
}



inline void _1a69d1aa0_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a5a09cc7_Fn>>* _24933_funcs) {
	{
		auto expr = _24933_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa4011be:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _25014_func = *it;
			{
				{
					auto expr = &((*(_25014_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa403369:;
					if (it != expr_end) {
						jule::Ptr<_1a5a0cca8_FnIns> _25115_ins = *it;
						{
							_1a69d182a_eliminateDeadCodeOfScope((*(_25115_ins))._field_Scope);
						}
						_iter_next_1aa403369:;
						++it;
						goto _iter_begin_1aa403369;
					}
					_iter_end_1aa403369:;
				};
			}
			_iter_next_1aa4011be:;
			++it;
			goto _iter_begin_1aa4011be;
		}
		_iter_end_1aa4011be:;
	};
}



inline void _1a69d1cd1_eliminateFunctionsScopePackage(jule::Ptr<_1a5a71c0c_Package>* _25740_pkg) {
	{
		auto expr = &((*((*(_25740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa403d09:;
		if (it != expr_end) {
			jule::Ptr<_1a5b14783_SymbolTable> _25814_f = *it;
			{
				_1a69d1aa0_eliminateScopeFunctions(&((*(_25814_f))._field_Funcs));
			}
			_iter_next_1aa403d09:;
			++it;
			goto _iter_begin_1aa403d09;
		}
		_iter_end_1aa403d09:;
	};
}



inline void _1a69d2089_eliminateScopePackage(jule::Ptr<_1a5a71c0c_Package>* _26331_pkg) {
	_1a69d1cd1_eliminateFunctionsScopePackage(_26331_pkg);
}



inline void _1a69d2287_EliminateScopes(jule::Ptr<_1a68b0055_IR>* _26825_ir) {
	jule::I64 _2696_i = ((*((*(_26825_ir))))._field_Used.len() - 1LL);;
	for (; (_2696_i >= 0LL); (_2696_i)--) {
		{
			jule::Ptr<_1a5a6dcd6_ImportInfo> _2717_u = (*((*(_26825_ir))))._field_Used[_2696_i];;
			if ((!((*(_2717_u))._field_Binded))) {
				_1a69d2089_eliminateScopePackage(&((*_2717_u.alloc)._field_Package));
			};
		}
	_iter_next_1aa405525:;
	}
	_iter_end_1aa405525:;;
	_1a69d2089_eliminateScopePackage(&((*((*(_26825_ir))))._field_Main));
}



inline jule::Uintptr _1c79969cd_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1c7996d96_equalConst(jule::Ptr<_1b916c16d_Const> _2115_l, jule::Ptr<_1b916c16d_Const> _2126_r) {
	{
		
		if (_1b917113e_IsI64(_2115_l.ptr())) {
			_case_begin_1aa466c29:;
			{
				return (_1b917113e_IsI64(_2126_r.ptr()) && (_1b916da43_ReadI64(_2115_l) == _1b916da43_ReadI64(_2126_r)));;
			}
		}
		else if (_1b91713c5_IsU64(_2115_l.ptr())) {
			_case_begin_1aa466c90:;
			{
				return (_1b91713c5_IsU64(_2126_r.ptr()) && (_1b916dcc9_ReadU64(_2115_l) == _1b916dcc9_ReadU64(_2126_r)));;
			}
		}
		else if (_1b9171b78_IsF64(_2115_l.ptr())) {
			_case_begin_1aa466d06:;
			{
				return (_1b9171b78_IsF64(_2126_r.ptr()) && (_1b916e57c_ReadF64(_2115_l) == _1b916e57c_ReadF64(_2126_r)));;
			}
		}
		else if (_1b91718e2_IsStr(_2115_l.ptr())) {
			_case_begin_1aa466d7d:;
			{
				return (_1b91718e2_IsStr(_2126_r.ptr()) && (_1b916e2e6_ReadStr(_2115_l) == _1b916e2e6_ReadStr(_2126_r)));;
			}
		}
		else if (_1b917165b_IsBool(_2115_l.ptr())) {
			_case_begin_1aa466e05:;
			{
				return (_1b917165b_IsBool(_2126_r.ptr()) && (_1b916e060_ReadBool(_2115_l) == _1b916e060_ReadBool(_2126_r)));;
			}
		}
		else if (_1b9171e0e_IsNil(_2115_l.ptr())) {
			_case_begin_1aa467048:;
			{
				return _1b9171e0e_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1aa466b3b:;
			{
				return false;;
			}
		}
		_match_end_1aa466685:;
	};
}



inline jule::Bool _1c799721a_equalCasting(jule::Ptr<_1a59ed5b2_CastingExprModel> _4017_l, jule::Ptr<_1a59ed5b2_CastingExprModel> _4039_r) {
	if ((!(_1a5b5155b_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1c7998150_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*_4039_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1c79975d3_equalUnary(jule::Ptr<_1a59ec35d_UnaryExprModel> _4715_l, jule::Ptr<_1a59ec35d_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*_4715_l.alloc)._field_Op.alloc)._field_Kind != (*(*_4735_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1c7998150_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*_4735_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1c7997957_equalIndexing(jule::Ptr<_1a59ee7e4_IndexingExprModel> _5418_l, jule::Ptr<_1a59ee7e4_IndexingExprModel> _5441_r) {
	return (_1c7998150_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1c7998150_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*_5441_r.alloc)._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1c7997ccb_equalBinary(jule::Ptr<_1a59ebe84_BinaryExprModel> _5916_l, jule::Ptr<_1a59ebe84_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*_5916_l.alloc)._field_Op.alloc)._field_Kind != (*(*_5937_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1c7998150_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*_5937_r.alloc)._field_Left.alloc)._field_Model) && _1c7998150_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*_5937_r.alloc)._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1c7998150_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1c79969cd_typeData(&(_7016_l)) != _1c79969cd_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa475a18:;
			{
				return (_7016_l.unsafe_cast_ptr<_1a5ab1ee4_Var>() == _7030_r.cast_ptr<_1a5ab1ee4_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa476387:;
			{
				jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _783_li = _7016_l.unsafe_cast_ptr<_1a5a01ad2_StructSubIdentExprModel>();;
				jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _793_ri = _7030_r.cast_ptr<_1a5a01ad2_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_783_li))._field_Field == (*(_793_ri))._field_Field) && _1c7998150_equalModels((*((*_783_li.alloc)._field_Expr))._field_Model, (*(*_793_ri.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa4763ed:;
			{
				return _1c7996d96_equalConst(_7016_l.unsafe_cast_ptr<_1b916c16d_Const>(), _7030_r.cast_ptr<_1b916c16d_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1aa475e36:;
			{
				return _1c799721a_equalCasting(_7016_l.unsafe_cast_ptr<_1a59ed5b2_CastingExprModel>(), _7030_r.cast_ptr<_1a59ed5b2_CastingExprModel>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa475e9c:;
			{
				return _1c79975d3_equalUnary(_7016_l.unsafe_cast_ptr<_1a59ec35d_UnaryExprModel>(), _7030_r.cast_ptr<_1a59ec35d_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1aa476013:;
			{
				return _1c7997957_equalIndexing(_7016_l.unsafe_cast_ptr<_1a59ee7e4_IndexingExprModel>(), _7030_r.cast_ptr<_1a59ee7e4_IndexingExprModel>(&__jule_any_type44));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1aa476079:;
			{
				return _1c7997ccb_equalBinary(_7016_l.unsafe_cast_ptr<_1a59ebe84_BinaryExprModel>(), _7030_r.cast_ptr<_1a59ebe84_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1aa475c05:;
			{
				return false;;
			}
		}
		_match_end_1aa4757b5:;
	};
}



inline void _1c799dc6b_possibleNilRemove(jule::Ptr<_1c799cc8c_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1c799d540_removeVar((*(_7827_n)).ptr(), _1c799e73e_getNilVar(_7837_m));
	};
}



inline jule::Bool _1c799e134_isGuaranteedNonNilExpr(jule::Ptr<_1c799cc8c_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1aa47c239:;
			{
				return true;;
			}
		}
		_match_end_1aa47c1d4:;
	};
	return (((*(_8432_n)) != nullptr) && _1c799d881_isSafe((*(_8432_n)).ptr(), _1c799e73e_getNilVar(_8442_m)));;
}



inline jule::Bool _1c799e3ed_isNilValidType(jule::Ptr<_1a5b50d52_TypeKind> _9223_t) {
	return (_1a5b53739_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1c799e73e_getNilVar(jule::Any _9414_m) {
	if ((!(_1a68d5c18_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa47d7e0:;
			{
				jule::Ptr<_1a5ab1ee4_Var> _1003_v = _9414_m.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1a5ab1ee4_Var>());;
				};
				return _1c799e73e_getNilVar((*((*((*_1003_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa47d724:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1a5a01ad2_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1aa47d78a:;
	};
	return 0LLU;;
}



inline jule::Bool _1a68c5466_isConstantValidConditionalCase(jule::Ptr<_1a5a4c16b_If>* _67836_i) {
	{
		auto &_match_expr{ (*((*(_67836_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa485b27:;
			{
				jule::Ptr<_1b916c16d_Const> _6813_c = (*((*(_67836_i))))._field_Expr.unsafe_cast_ptr<_1b916c16d_Const>();;
				return (_1b917165b_IsBool(_6813_c.ptr()) && _1b916e060_ReadBool(_6813_c));;
			}
		}
		_match_end_1aa485ac2:;
	};
	return false;;
}



inline jule::Bool _1a68c5774_isUnreachableExpr(jule::Any* _68723_expr) {
	{
		auto &_match_expr{ (*(_68723_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa486892:;
			{
				jule::Ptr<_1b916c16d_Const> _6903_c = (*(_68723_expr)).cast_ptr<_1b916c16d_Const>(&__jule_any_type19);;
				return (_1b917165b_IsBool(_6903_c.ptr()) && (!(_1b916e060_ReadBool(_6903_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1aa485bb0:;
			{
				jule::Ptr<_1a59ebe84_BinaryExprModel> _6933_m = (*(_68723_expr)).cast_ptr<_1a59ebe84_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_6933_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1a68c5774_isUnreachableExpr(&((*((*_6933_m.alloc)._field_Left))._field_Model)) || _1a68c5774_isUnreachableExpr(&((*((*_6933_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1aa48683c:;
	};
	return false;;
}



inline jule::Bool _1a68c5a3d_isConstantValidMatchCase(jule::Ptr<_1a5a51989_Case>* _70230_case) {
	{
		auto expr = &((*((*(_70230_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa48ac1a:;
		if (it != expr_end) {
			jule::Ptr<_1a5b19aeb_Data> *_7039_expr = it;
			{
				if (((_1a5b1a503_IsConst((*(_7039_expr)).ptr()) && _1b917165b_IsBool((*(*(_7039_expr)).alloc)._field_Constant.ptr())) && _1b916e060_ReadBool((*(*(_7039_expr)).alloc)._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1aa48ac1a:;
			++it;
			goto _iter_begin_1aa48ac1a;
		}
		_iter_end_1aa48ac1a:;
	};
	return false;;
}



inline jule::Bool _1a68c5d7e_isUnreachableConditionalCase(jule::Ptr<_1a5a4c16b_If>* _71134_i) {
	return _1a68c5774_isUnreachableExpr(&((*((*(_71134_i))))._field_Expr));;
}



inline jule::Bool _1a68c6115_isUnreachableMatchCase(jule::Ptr<_1a5a51989_Case>* _71528_case) {
	{
		auto expr = &((*((*(_71528_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa48cbc8:;
		if (it != expr_end) {
			jule::Ptr<_1a5b19aeb_Data> *_7169_expr = it;
			{
				if ((!(_1a68c5774_isUnreachableExpr(&((*((*(_7169_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1aa48cbc8:;
			++it;
			goto _iter_begin_1aa48cbc8;
		}
		_iter_end_1aa48cbc8:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1a68cb813_checkForBitShiftOpt(jule::Ptr<_1a59eb989_OperandExprModel>* _58325_l, jule::Ptr<_1a59eb989_OperandExprModel>* _58348_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1b916b502_IsInt(_1a5b5121a_Str((*((*(_58325_l))))._field_Kind.ptr())))) || (!(_1b916b502_IsInt(_1a5b5121a_Str((*((*(_58348_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1b916ea99_AsU64((*((*(_58348_r))))._field_Model.cast_ptr<_1b916c16d_Const>(&__jule_any_type19).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _5912_j = _1b911d806_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _5922_z = static_cast<jule::U64>(_5912_j);;
	if ((static_cast<jule::F64>(_5922_z) != _5912_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _5922_z;
	return __jule_func_result;;
}



inline jule::Bool _1a68cbbcb_areSameLvalueExprModel(jule::Any* _60028_l, jule::Any* _60043_r) {
	{
		auto &_match_expr{ (*(_60028_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa52d41c:;
			{
				return ((*(_60043_r)) == (*(_60028_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa52d1ec:;
			{
				{
					auto &_match_expr{ (*(_60043_r)) };
					
					if (_match_expr.type == &__jule_any_type98) {
						_case_begin_1aa52dd68:;
						{
							goto _match_end_1aa52dc36;
						}
					}
					else {
						_case_begin_1aa52e011:;
						{
							return false;;
						}
					}
					_match_end_1aa52dc36:;
				};
				jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _6133_lsi = (*(_60028_l)).cast_ptr<_1a5a01ad2_StructSubIdentExprModel>(&__jule_any_type98);;
				jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _6143_rsi = (*(_60043_r)).cast_ptr<_1a5a01ad2_StructSubIdentExprModel>(&__jule_any_type98);;
				if (((*(_6133_lsi))._field_Field != (*(_6143_rsi))._field_Field)) {
					return false;;
				};
				return _1a68cbbcb_areSameLvalueExprModel(&((*((*_6133_lsi.alloc)._field_Expr))._field_Model), &((*(*_6143_rsi.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa52d483:;
			{
				{
					auto &_match_expr{ (*(_60043_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1aa535853:;
						{
							jule::Ptr<_1a59ec35d_UnaryExprModel> _6264_ul = (*(_60028_l)).cast_ptr<_1a59ec35d_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1a59ec35d_UnaryExprModel> _6274_ur = (*(_60043_r)).cast_ptr<_1a59ec35d_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_6264_ul))._field_Op))._field_Id != (*(*(_6274_ur))._field_Op.alloc)._field_Id) || ((*(*_6264_ul.alloc)._field_Op.alloc)._field_Kind != (*(*_6274_ur.alloc)._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1a68cbbcb_areSameLvalueExprModel(&((*((*_6264_ul.alloc)._field_Expr))._field_Model), &((*(*_6274_ur.alloc)._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1aa53515a:;
				};
			}
		}
		_match_end_1aa52d373:;
	};
	return false;;
}



inline void _1a68cdd98_possibleDynamicRemove(jule::Ptr<_1a68ccd0e_dynamic>* _8131_d, jule::Any _8144_m) {
	if (((*(_8131_d)) != nullptr)) {
		_1a68cd5b2_removeVar((*(_8131_d)).ptr(), _1a68ce926_getDynamicVar(_8144_m));
	};
}



inline jule::Bool _1a68ce1a6_isDynamicValidType(jule::Ptr<_1a5b50d52_TypeKind> _8727_t) {
	return _1a68bb061_IsAny(&(_8727_t));;
}



inline jule::Ptr<_1a5b50d52_TypeKind> _1a68ce5d5_isTypeGuaranteedDynamicData(jule::Ptr<_1a68ccd0e_dynamic>* _8937_dy, jule::Ptr<_1a5b50d52_TypeKind> _8955_t, jule::Any _8973_m) {
	jule::Bool _902_isAny = _1a68bb061_IsAny(&(_8955_t));;
	if (((!(_902_isAny)) && (_1a5b54cac_Trait(_8955_t.ptr()) == nullptr))) {
		return _8955_t;;
	};
	if ((!(_902_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8973_m };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1aa5a880a:;
			{
				jule::Ptr<_1a59ed5b2_CastingExprModel> _997_cem = _8973_m.unsafe_cast_ptr<_1a59ed5b2_CastingExprModel>();;
				return _1a68ce5d5_isTypeGuaranteedDynamicData(_8937_dy, (*(_997_cem))._field_ExprKind, (*((*_997_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1aa5a8b18:;
	};
	jule::Uintptr _1022_var = _1a68ce926_getDynamicVar(_8973_m);;
	if ((_1022_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8937_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5aa60e:;
		if (it != expr_end) {
			_1a68cc9bd_dynamicVar _10614_v = *it;
			{
				if ((_10614_v._field_var == _1022_var)) {
					return _10614_v._field_kind;;
				};
			}
			_iter_next_1aa5aa60e:;
			++it;
			goto _iter_begin_1aa5aa60e;
		}
		_iter_end_1aa5aa60e:;
	};
	return nullptr;;
}



inline jule::Uintptr _1a68ce926_getDynamicVar(jule::Any _11418_m) {
	if ((!(_1a68d76ed_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11418_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa5aad29:;
			{
				jule::Ptr<_1a5ab1ee4_Var> _1203_v = _11418_m.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
				if ((!((*(_1203_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11418_m.unsafe_cast_ptr<_1a5ab1ee4_Var>());;
				};
				return _1a68ce926_getDynamicVar((*((*((*_1203_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa5aac08:;
			{
				return static_cast<jule::Uintptr>((*(_11418_m.unsafe_cast_ptr<_1a5a01ad2_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa5ab6ed:;
			{
				jule::Ptr<_1a59ec35d_UnaryExprModel> _1313_uem = _11418_m.unsafe_cast_ptr<_1a59ec35d_UnaryExprModel>();;
				if (((*((*(_1313_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1a68ce926_getDynamicVar((*((*_1313_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1aa5aac80:;
	};
	return 0LLU;;
}



inline jule::Bool _1a68d3485_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1a68d3bc2_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1a68d384d_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5bac4b:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1a68d3bc2_fitsSize((*(_909_m)), _8934_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1aa5bac4b:;
			++it;
			_906_i++;
			goto _iter_begin_1aa5bac4b;
		}
		_iter_end_1aa5bac4b:;
	};
	return -1LL;;
}



inline jule::Bool _1a68d3bc2_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1c79969cd_typeData(&(_9813_e1)) != _1c79969cd_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa5bc764:;
			{
				jule::Ptr<_1b916c16d_Const> _1043_exprConst = _9828_e2.cast_ptr<_1b916c16d_Const>(&__jule_any_type19);;
				return ((_1b916ed30_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1b9173a37_GtEq(_9813_e1.unsafe_cast_ptr<_1b916c16d_Const>().ptr(), (*_1043_exprConst.alloc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa5bc7ca:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa5bc841:;
			{
				jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1a5a01ad2_StructSubIdentExprModel>();;
				jule::Ptr<_1a5a01ad2_StructSubIdentExprModel> _1103_ssi2 = _9828_e2.cast_ptr<_1a5a01ad2_StructSubIdentExprModel>(&__jule_any_type98);;
				return (_1c7998150_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*_1103_ssi2.alloc)._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa5bc8a7:;
			{
				jule::Ptr<_1a59ec35d_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1a59ec35d_UnaryExprModel>();;
				jule::Ptr<_1a59ec35d_UnaryExprModel> _1143_uem2 = _9828_e2.cast_ptr<_1a59ec35d_UnaryExprModel>(&__jule_any_type110);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*_1133_uem1.alloc)._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1a68d3bc2_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*_1143_uem2.alloc)._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1aa5bb455:;
			{
				return false;;
			}
		}
		_match_end_1aa5bb400:;
	};
}



inline void _1a68d4002_possibleBoundaryRemove(jule::Ptr<_1a68d241d_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5bcbc6:;
		if (it != expr_end) {
			_1a68d20cc_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa5c45d4:;
					if (it != expr_end) {
						jule::I64 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1c7998150_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1aa5c45d4;
							};
						}
						_iter_next_1aa5c45d4:;
						++it;
						_1277_i++;
						goto _iter_begin_1aa5c45d4;
					}
					_iter_end_1aa5c45d4:;
				};
			}
			_iter_next_1aa5bcbc6:;
			++it;
			goto _iter_begin_1aa5bcbc6;
		}
		_iter_end_1aa5bcbc6:;
	};
}



inline jule::Bool _1a68d42bb_isBoundaryRiskyType(jule::Ptr<_1a5b50d52_TypeKind> _13628_t) {
	return (_1a5b54273_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1a68d4585_isBoundaryValidType(jule::Ptr<_1a5b50d52_TypeKind> _14128_t) {
	return ((_1a5b54509_Slc(_14128_t.ptr()) != nullptr) || (_1a5b54273_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1a68d484e_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1a68d5c18_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa5c6b03:;
			{
				jule::Ptr<_1a5ab1ee4_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1a5ab1ee4_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1a5ab1ee4_Var>());;
				};
				return _1a68d484e_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa5c6e44:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1a5a01ad2_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa5c6b9c:;
			{
				jule::Ptr<_1a59ec35d_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1a59ec35d_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1a68d484e_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1aa5c6a9d:;
	};
	return 0LLU;;
}



inline void _1a68d78c9_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _332_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1a68d50ad_Copy=_332_l1;
	_1a68d53aa_Deadcode=_332_l1;
	_1a68d5663_Append=_332_l1;
	_1a68d5960_Math=_332_l1;
	_1a68d5c18_Access=_332_l1;
	_1a68d5ec1_Inline=_332_l1;
	_1a68d6279_Ptr=_332_l1;
	_1a68d6642_Cond=_332_l1;
	_1a68d6884_Str=_332_l1;
	_1a68d6b2b_Slice=_332_l1;
	_1a68d6dd4_Assign=_332_l1;
	_1a68d718c_Exceptional=_332_l1;
	_1a68d7445_Iter=_332_l1;
	_1a68d76ed_Dynamic=_332_l1;
}



inline void _1a69d5c80_detectEnabled(void) {
	_1a69d3a08_exprEnabled=(((_1a68d6279_Ptr || _1a68d5960_Math) || _1a68d5c18_Access) || _1a68d6642_Cond);
	_1a69d3c7d_scopeEnabled=((((((((_1a68d6642_Cond || _1a68d5663_Append) || _1a68d50ad_Copy) || _1a68d6884_Str) || _1a68d6b2b_Slice) || _1a68d6dd4_Assign) || _1a68d718c_Exceptional) || _1a68d7445_Iter) || _1a68d76ed_Dynamic);
}



inline void _1a6a12c46_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1d1d32898_Exit(1LL);
}



inline jule::U64 _1a7573476_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1a74a7d28_isCopyOptimizable(jule::Ptr<_1a5b19aeb_Data>* _105023_expr) {
	if ((!((*((*(_105023_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_105023_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1aa6becc8:;
			{
				return false;;
			}
		}
		_match_end_1aa6bec73:;
	};
	return true;;
}



inline jule::Bool _1a74a81e1_isIterCopyOptimizable(jule::Ptr<_1a5b19aeb_Data>* _106127_expr, jule::Ptr<_1a5ab1ee4_Var>* _106141_v) {
	if (((!((*((*(_106127_expr))))._field_Lvalue)) && (!(_1a5b526d3_Mutable((*((*(_106127_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_106141_v))))._field_Mutable)) && (!((*((*(_106127_expr))))._field_Mutable)));;
}



inline jule::Bool _1a74a8620_captureVarHandling(jule::Ptr<_1a757b913_ObjectCoder>* _106828_oc, jule::Ptr<_1a59eec9a_AnonFnExprModel>* _106851_m, jule::Ptr<_1a5ab1ee4_Var>* _106877_v) {
	{
		auto expr = &((*((*(_106851_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa6c1e62:;
		if (it != expr_end) {
			jule::Ptr<_1a5ab1ee4_Var> _10699_cv = *it;
			{
				if ((_10699_cv == (*(_106877_v)))) {
					_1a757c0b7_write((*(_106828_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1a74c20b7_var(&((*((*(_106828_oc))))._field_Buf), (*(_106877_v)));
					return true;;
				};
			}
			_iter_next_1aa6c1e62:;
			++it;
			goto _iter_begin_1aa6c1e62;
		}
		_iter_end_1aa6c1e62:;
	};
	return false;;
}



inline jule::Str _1a74b9565_decomposeCommonEsq(jule::U8 _158323_b) {
	{
		auto &_match_expr{ _158323_b };
		
		if (_match_expr == '\\') {
			_case_begin_1aa812b30:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aa812998:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aa812a0e:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1aa812514:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1aa81257a:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1aa812602:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1aa812679:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1aa812701:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1aa812b96:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1aa812c0c:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1aa810c71:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa8124ae:;
	};
}



inline jule::Str _1a74b9873_sbtoa(jule::U8 _161010_b) {
	if ((_161010_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_161010_b < 128LLU)) {
		jule::Str _16153_seq = _1a74b9565_decomposeCommonEsq(_161010_b);;
		if (!(_16153_seq).empty()) {
			return _16153_seq;;
		};
		if (((32LL <= _161010_b) && (_161010_b <= 126LLU))) {
			return jule::Str::from_byte(_161010_b);;
		};
	};
	jule::Str _16232_seq = _1b915d923_FmtUint(static_cast<jule::U64>(_161010_b), 8LL);;
	if ((_16232_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _16232_seq);;
	};
	return (jule::Str::lit("\\", 1) + _16232_seq);;
}



inline void _1a74b9b5e_cstrBytes(_1e9a030bc_StrBuilder* _163019_s, jule::Str _163034_ctx) {
	{
		auto expr = &(_163034_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa817915:;
		if (it != expr_end) {
			jule::U8 *_16319_b = it;
			{
				_1e9a03a5c_WriteStr(_163019_s, _1a74b9873_sbtoa((*(_16319_b))));
			}
			_iter_next_1aa817915:;
			++it;
			goto _iter_begin_1aa817915;
		}
		_iter_end_1aa817915:;
	};
}



inline void _1a74b9e8e_cstrLit(_1e9a030bc_StrBuilder* _163617_s, jule::Str _163632_ctx) {
	_1e9a03d15_WriteByte(_163617_s, '\"');
	_1a74b9b5e_cstrBytes(_163617_s, _163632_ctx);
	_1e9a03d15_WriteByte(_163617_s, '\"');
}



inline void _1a74ba335_ftoa(_1e9a030bc_StrBuilder* _164214_s, jule::F64 _164229_f, jule::I64 _164237_bitsize) {
	if ((_164237_bitsize != 32LL)) {
		if ((_164229_f == static_cast<jule::F64>(static_cast<jule::I64>(_164229_f)))) {
			_1a74ba621_itoa(_164214_s, static_cast<jule::I64>(_164229_f));
			return;;
		};
		if ((_164229_f == static_cast<jule::F64>(static_cast<jule::U64>(_164229_f)))) {
			_1a74ba90c_utoa(_164214_s, static_cast<jule::U64>(_164229_f));
			return;;
		};
	};
	jule::Str _16532_m = _1b914729c_FmtFloat(_164229_f, 'f', -1LL, _164237_bitsize);;
	_1e9a03a5c_WriteStr(_164214_s, _16532_m);
	if ((!(_1d1907391_Contains(_16532_m, jule::Str::lit(".", 1))))) {
		_1e9a03a5c_WriteStr(_164214_s, jule::Str::lit(".0", 2));
	};
}



inline void _1a74ba621_itoa(_1e9a030bc_StrBuilder* _166014_s, jule::I64 _166029_x) {
	{
		
		if ((_166029_x == jule::MAX_I64)) {
			_case_begin_1aa81bbe4:;
			{
				_1e9a03a5c_WriteStr(_166014_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_166029_x == jule::MIN_I64)) {
			_case_begin_1aa81bc8d:;
			{
				_1e9a03a5c_WriteStr(_166014_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1aa81bad4:;
	};
	_1e9a03a5c_WriteStr(_166014_s, _1b915dcdb_FmtInt(_166029_x, 10LL));
	if (_1d1c73124_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1e9a03d15_WriteByte(_166014_s, 'L');
	};
	_1e9a03d15_WriteByte(_166014_s, 'L');
}



inline void _1a74ba90c_utoa(_1e9a030bc_StrBuilder* _167714_s, jule::U64 _167729_x) {
	{
		
		if ((_167729_x == jule::MAX_U64)) {
			_case_begin_1aa81dd39:;
			{
				_1e9a03a5c_WriteStr(_167714_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1aa81dc07:;
	};
	_1e9a03a5c_WriteStr(_167714_s, _1b915d923_FmtUint(_167729_x, 10LL));
	if (_1d1c73124_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1e9a03d15_WriteByte(_167714_s, 'L');
	};
	_1e9a03a5c_WriteStr(_167714_s, jule::Str::lit("LU", 2));
}



inline jule::Slice<jule::U8> _1a7589305_concatAllParts(jule::Slice<jule::Ptr<_1c80b653c_Token>> _135719_parts) {
	jule::I64 _13586_n = 0LL;;
	{
		auto expr = &(_135719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa380ec:;
		if (it != expr_end) {
			jule::Ptr<_1c80b653c_Token> *_13599_part = it;
			{
				_13586_n+=(*((*(_13599_part))))._field_Kind.len();
			}
			_iter_next_1aaa380ec:;
			++it;
			goto _iter_begin_1aaa380ec;
		}
		_iter_end_1aaa380ec:;
	};
	if ((_13586_n == 0LL)) {
		return nullptr;;
	};
	_1e9a030bc_StrBuilder _13656_s = static__1e9a034eb_New(_13586_n);;
	{
		auto expr = &(_135719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa393ea:;
		if (it != expr_end) {
			jule::Ptr<_1c80b653c_Token> *_13669_p = it;
			{
				_1e9a03a5c_WriteStr(&_13656_s, (*((*(_13669_p))))._field_Kind);
			}
			_iter_next_1aaa393ea:;
			++it;
			goto _iter_begin_1aaa393ea;
		}
		_iter_end_1aaa393ea:;
	};
	return _1e9a04d05_Buf(&_13656_s);;
}



inline jule::Bool _1a7589613_isHeadDecl(jule::Ptr<_1a5a09cc7_Fn>* _137320_m) {
	if ((((*((*(_137320_m))))._field_Generics.len() > 0LL) || ((*((*(_137320_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1a68bb638_IsOpMethod(_137320_m)) {
		return true;;
	};
	jule::Ptr<_1a5a0cca8_FnIns> _13806_mi = (*((*(_137320_m))))._field_Instances[0LL];;
	;
	return static__1a5ab348a_Dispose(_1a59e8aeb_FindMethod((*(_13806_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1a75984bd_shouldInitialized(jule::Ptr<_1a5b50d52_TypeKind>* _46427_t) {
	jule::Ptr<_1a5b5892b_Prim> _4652_prim = _1a5b534a3_Prim((*(_46427_t)).ptr());;
	if ((_4652_prim != nullptr)) {
		return ((!(_1a5b5c149_IsAny(_4652_prim))) && (!(_1a5b5bdb3_IsStr(_4652_prim))));;
	};
	{
		
		if ((_1a5b53739_Sptr((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1a90c4ab9:;
			{
				return false;;
			}
		}
		else if ((_1a5b55043_Map((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1a90c4b30:;
			{
				return false;;
			}
		}
		else if ((_1a5b54509_Slc((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1a90c4b96:;
			{
				return false;;
			}
		}
		else if ((_1a5b54cac_Trait((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1a90c3ce9:;
			{
				return false;;
			}
		}
		else if ((_1a5b54790_Fn((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1a90c4c51:;
			{
				return false;;
			}
		}
		else if ((_1a5b54273_Arr((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1a90c4cb7:;
			{
				jule::Ptr<_1a5b6024b_Arr> _4817_arr = _1a5b54273_Arr((*(_46427_t)).ptr());;
				return _1a75984bd_shouldInitialized(&((*(_4817_arr))._field_Elem));;
			}
		}
		else if ((_1a5b54a26_Struct((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1a90c4d2d:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a90c3c72:;
			{
				return true;;
			}
		}
		_match_end_1a90c40c4:;
	};
}



inline void _1d1d36c54_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1d1d36ec9_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1d1d36c54_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _1d1d36a78_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1d1d36a78_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaca81c4:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1aaca81c4:;
			++it;
			goto _iter_begin_1aaca81c4;
		}
		_iter_end_1aaca81c4:;
	};
	_1e9a030bc_StrBuilder _496_s = static__1e9a034eb_New(32LL);;
	;
	{
		auto expr = &(_1d1d36a78_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaca9a11:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				_1e9a03a5c_WriteStr(&_496_s, (*(_519_part))[0LL]);
				_1e9a03a5c_WriteStr(&_496_s, _1d1902a0c_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
				_1e9a03a5c_WriteStr(&_496_s, (*(_519_part))[1LL]);
				if (((_516_i + 1LL) < 5LL)) {
					_1e9a03d15_WriteByte(&_496_s, '\n');
				};
			}
			_iter_next_1aaca9a11:;
			++it;
			_516_i++;
			goto _iter_begin_1aaca9a11;
		}
		_iter_end_1aaca9a11:;
	};
	jule::outln(_496_s);
}



inline void _1d1d3720a_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1d1d36c54_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.16 @master", 18));
}



inline void _1d1d37419_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1d1d3757e_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1d1d3777c_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1d1d36c54_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1aacb084c:;
			{
				_1d1d37419_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1aacb0918:;
			{
				_1d1d3757e_toolDistarch();
			}
		}
		else {
			_case_begin_1aacae351:;
			{
				_1d1d36c54_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1aacb0440:;
	};
}



inline void _1d1d379ad_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1d1d36c54_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.16 @master", 33));
	jule::outln(jule::Str::lit("architecture: arm64", 19));
	jule::outln(jule::Str::lit("operating system: windows", 25));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _2133d6eb5_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _2133d85c1_CppStd));
}



inline void _1d1d37cee_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1d1d36c54_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1aacb3e38:;
			{
				({
					auto except = static__214673b79_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1d1d36c54_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1aacb2a2a:;
			{
				_1d1d36c54_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1aacb391b:;
	};
}



inline jule::Bool _1d1d38041_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1aacb5412:;
			{
				_1d1d36ec9_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1aacb5478:;
			{
				_1d1d3720a_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1aacb54de:;
			{
				_1d1d3777c_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1aacb4bc5:;
			{
				_1d1d379ad_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1aacb4c3b:;
			{
				_1d1d37cee_mod(_15320_args);
			}
		}
		else {
			_case_begin_1aacb3a70:;
			{
				return false;;
			}
		}
		_match_end_1aacb45ed:;
	};
	return true;;
}



inline void _1d1d381d9_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1896_args = _1e9a32a9c_Args();;
	if ((_1896_args.len() < 2LL)) {
		_1d1d381d9_showInfo();
		return;;
	};
	if (_1d1d38041_processCommand(&(_1896_args))) {
		return;;
	};
	_1a6698503_compileCommand(&(_1896_args));
}



inline void _1d1d38c12_enableVtp(void) {
	jule::Uintptr _192_hOut = _2146590e3_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_192_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _246_dwMode = 0LL;;
	if ((!(_21465b667_GetConsoleMode(_192_hOut, &(_246_dwMode))))) {
		return;;
	};
	_246_dwMode|=4LL;
	_21465bc72_SetConsoleMode(_192_hOut, _246_dwMode);
}



inline void _1d1d38dcc_init(void) {
	_1d1d38c12_enableVtp();
}



inline void _1a6695423_init(void) {
	_2133d6eb5_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_214672d32_File> _1a66956dc_openOutput(jule::Str* _4316_path) {
	jule::Str _442_dir = _1d190dd59_Dir((*(_4316_path)));;
	({
		auto except = static__1d191061e_Of(_442_dir);
		if (!except.ok()) {
			({
				auto except = static__1d190e981_Create(_442_dir);
				if (!except.ok()) {
					_1a6a12c46_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__214673519_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1a6a12c46_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a6695885_clearObjects(void) {
	({
		auto except = static__21356c249_Remove(_1a66969da_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1d190ebb2_Remove(_1a6694bc5_OutDir);
}



inline void _1a6695b93_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1d1d2a7b4_Cmd> _736_cmd = static__1d1d2abb0_New(_7214_compiler);;
	(*(_736_cmd))._field_Args=_1d190701c_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1d1d2adad_Spawn(_736_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1aacbc88c:;
					{
						static__1a6a0e11b_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1aacbc55c:;
					{
						static__1a6a0e11b_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1aacbc392:;
					{
						static__1a6a0e11b_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1aacbc4a2:;
			};
			_1a6a12c46_Throw(jule::Str());
		}
	});
	jule::I64 _862_status = ({
		auto except = _1d1d2b342_Wait(_736_cmd);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:12"));
		(except.result);
	});;
	if ((_862_status != 0LL)) {
		jule::Str _883_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _2133d6eb5_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a6a0e11b_Print(jule::Str::lit("\033[31m", 5), _883_errorMessage);
		_1a6a12c46_Throw(jule::Str());
	};
	_1a6695885_clearObjects();
}



inline jule::Bool _1a6695e5c_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1002_offset = _1d1905acb_FindLastByte(_9920_path, '.');;
	if ((_1002_offset == -1LL)) {
		return false;;
	};
	return _1d1c615c9_IsValidCppExt(_9920_path.slice(_1002_offset));;
}



inline void _1a669618d_pushCompCmdClang(_1e9a030bc_StrBuilder* _10726_cmd) {
	_1e9a03a5c_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_1e9a03a5c_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _2133d85c1_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1aacc06b4:;
			{
				_1e9a03a5c_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1aacc1572:;
			{
				_1e9a03a5c_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aacc15d8:;
			{
				_1e9a03a5c_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1aacc073b:;
	};
	_1e9a03d15_WriteByte(_10726_cmd, ' ');
	if (_2133d9726_Production) {
		_1e9a03a5c_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_1e9a03a5c_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_1e9a03a5c_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1e9a03a5c_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1e9a03a5c_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1a66963be_pushCompCmdGcc(_1e9a030bc_StrBuilder* _13324_cmd) {
	_1e9a03a5c_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_1e9a03a5c_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _2133d85c1_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1aacc2b06:;
			{
				_1e9a03a5c_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1aacc4531:;
			{
				_1e9a03a5c_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aacc4597:;
			{
				_1e9a03a5c_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1aacc2b8e:;
	};
	_1e9a03d15_WriteByte(_13324_cmd, ' ');
	if (_2133d9726_Production) {
		_1e9a03a5c_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_1e9a03a5c_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1e9a03a5c_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1e9a03a5c_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1a6696853_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a68b0055_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1603_compiler = &(_2133d83b2_CompilerPath);;
	_1e9a030bc_StrBuilder _1616_cmd = static__1e9a034eb_New(64LL);;
	{
		auto &_match_expr{ _2133d6eb5_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1aacc7248:;
			{
				_1a66963be_pushCompCmdGcc(&(_1616_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1aacc7787:;
			{
				_1a669618d_pushCompCmdClang(&(_1616_cmd));
			}
		}
		_match_end_1aacc7523:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aacc7a40:;
		if (it != expr_end) {
			jule::Ptr<_1a5a6dcd6_ImportInfo> *_1719_u = it;
			{
				if (((*((*(_1719_u))))._field_Binded && _1a6695e5c_isCppSourceFile((*(*(_1719_u)).alloc)._field_Path))) {
					_1e9a03a5c_WriteStr(&_1616_cmd, (*(*(_1719_u)).alloc)._field_Path);
					_1e9a03d15_WriteByte(&_1616_cmd, ' ');
				};
			}
			_iter_next_1aacc7a40:;
			++it;
			goto _iter_begin_1aacc7a40;
		}
		_iter_end_1aacc7a40:;
	};
	if (!(_1a6695269_Out).empty()) {
		_1e9a03a5c_WriteStr(&_1616_cmd, jule::Str::lit("-o ", 3));
		_1e9a03a5c_WriteStr(&_1616_cmd, _1a6695269_Out);
		_1e9a03d15_WriteByte(&_1616_cmd, ' ');
	};
	_1e9a03a5c_WriteStr(&_1616_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aacca548:;
		if (it != expr_end) {
			jule::Str *_1869_pass = it;
			{
				_1e9a03d15_WriteByte(&_1616_cmd, ' ');
				_1e9a03a5c_WriteStr(&_1616_cmd, (*(_1869_pass)));
			}
			_iter_next_1aacca548:;
			++it;
			goto _iter_begin_1aacca548;
		}
		_iter_end_1aacca548:;
	};
	if (_1d1d33943_Os.equal("windows", 7)) {
		_1e9a03a5c_WriteStr(&_1616_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1603_compiler));
	__jule_func_result.__jule_result_arg1 = _1e9a04354_Str(&_1616_cmd);
	return __jule_func_result;;
}



inline jule::Str _1a66969da_getCompilePath(void) {
	return _1d190d166_Join(jule::Slice<jule::Str>::make({_1a6694bc5_OutDir,_1a6694eb1_OutName}));;
}



inline void _1a6696c1b_applyTargetIndependentOptimizations(jule::Ptr<_1a68b0055_IR>* _20545_ir) {
	jule::Ptr<_1a69d3e7b_Optimizer> _2066_opt = static__1a69d43ee_New(_20545_ir);;
	_1a69d59d8_Optimize(_2066_opt.ptr());
}



inline void _1a6696db4_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _2133d6eb5_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1aacccc21:;
			{
				_1a6a12c46_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1aacccb55:;
			{
				if ((_2133d83b2_CompilerPath).empty()) {
					_2133d83b2_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1aaccc836:;
			{
				if ((_2133d83b2_CompilerPath).empty()) {
					_2133d83b2_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1aaccc418:;
			{
				_1a6a12c46_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _2133d6eb5_Compiler));
			}
		}
		_match_end_1aaccc66b:;
	};
}



inline void _1a66970c3_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1a6a12c46_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1a6697304_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1a6a12c46_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1a6697535_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1a6a12c46_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2482_parts = _1d190701c_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2482_parts.len() != 2LL)) {
		_1a6a12c46_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2532_os;
	jule::Str _2536_arch;
	({
		jule::Str ___jule_assign_arg = _2482_parts[0LL];
		jule::Str _1___jule_assign_arg = _2482_parts[1LL];
		_2532_os = ___jule_assign_arg;
		_2536_arch = _1___jule_assign_arg;
	});
	if ((!_2532_os.equal("native", 6))) {
		_1a6697304_checkTargetOs(_2532_os);
		_1d1d33943_Os=_2532_os;
	};
	if ((!_2536_arch.equal("native", 6))) {
		_1a66970c3_checkTargetArch(_2536_arch);
		_1d1d33beb_Arch=_2536_arch;
	};
	_1b9163472_UpdateTarget();
}



inline void _1a6697766_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1a6a12c46_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1aacd45eb:;
			{
				goto _match_end_1aacd3d59;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1aacd4695:;
			{
				_1a68d78c9_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1aacd3e47:;
			{
				_1a6a12c46_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1aacd3d59:;
	};
}



inline void _1a6697b2e_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _2133d85c1_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1aacd5454:;
			{
				goto _match_end_1aacd4e37;
			}
		}
		else {
			_case_begin_1aacd4332:;
			{
				_1a6a12c46_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _2133d85c1_CppStd));
			}
		}
		_match_end_1aacd4e37:;
	};
}



inline jule::Slice<jule::Str> _1a6697ce9_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2936_opt = jule::Str::lit("L0", 2);;
	jule::Str _2946_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1a668eb59_FlagSet> _2966_fs = static__1a668ee45_New();;
	_1aacd6d29_AddVar(_2966_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2936_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1aacd6d29_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2946_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1aacd6d29_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1a6695269_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_2133d8802_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_2133d8aaa_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1aacd6d29_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2133d6eb5_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1aacd6d29_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2133d83b2_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_2133d9726_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_2133d911b_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_2133d94d4_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1aacd6d29_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2133d85c1_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d50ad_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d53aa_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d5663_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d5960_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d5c18_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d5ec1_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d6279_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d6642_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d6884_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d6b2b_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d6dd4_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d718c_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d7445_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1aacde172_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1a68d76ed_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3246_content = ({
		auto except = _1a6690d14_Parse(_2966_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1a6a12c46_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1a6696db4_checkCompilerFlag();
	_1a6697b2e_checkCppStdFlag();
	_1a6697535_checkTargetFlag(&(_2946_target));
	_1a6697766_checkOptFlag(&(_2936_opt));
	return _3246_content;;
}



inline void _1a6698008_setupSemaFlags(jule::I64* _33724_flags) {
	if (_2133d8802_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a68b0055_IR> _1a66982c2_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3442_content = _1a6697ce9_checkFlags(_34313_args);;
	jule::I64 _3466_semaFlags = static_cast<jule::I64>(0LL);;
	_1a6698008_setupSemaFlags(&(_3466_semaFlags));
	if ((_3442_content.len() == 0LL)) {
		_1a6a12c46_Throw(_1d1c6daae_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3442_content.len() > 1LL)) {
		_1a6a12c46_Throw((jule::Str::lit("undefined content: ", 19) + _3442_content[1LL]));
	};
	jule::Str _3546_path;
	jule::Bool _35412_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1d190d6b6_Abs(_3442_content[0LL]);
		_3546_path = __jule_assign_result.__jule_result_arg0;
		_35412_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35412_ok))) {
		_1a6a12c46_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_214674e66_Status> _3602_inf = ({
		auto except = static__1d191061e_Of(_1d1d32dd7_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a6a12c46_Throw(_1d1c6daae_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_214674e66_Status>(nullptr);});
	});;
	if ((!(_214675340_IsDir(_3602_inf.ptr())))) {
		_1a6a12c46_Throw(_1d1c6daae_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a68b0055_IR> _3686_ir;
	jule::Slice<_1d1c6d64c_Log> _36810_logs;
	({
		__jule_tuple_x_1a68b0055_IR__jule_tuple_s_1d1c6d64c_Log __jule_assign_result = static__1a68b04ea_Build(_3546_path, _3466_semaFlags);
		_3686_ir = __jule_assign_result.__jule_result_arg0;
		_36810_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3686_ir == nullptr) && (_36810_logs == nullptr))) {
		_1a6a12c46_Throw(_1d1c6daae_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3546_path, &__jule_any_type4)})));
	};
	if ((_36810_logs != nullptr)) {
		static__1a6a12284_PrintLogs(&(_36810_logs));
		_1a6a12c46_Throw(jule::Str());
	};
	return _3686_ir;;
}



inline void _1a6698503_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_2133d8d63_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1a68b0055_IR> _3896_ir = _1a66982c2_buildIr(_38324_args);;
	;
	if ((!(_2133d8d63_Test))) {
		jule::Ptr<_1a5a09cc7_Fn> _3947_main = _1a5a73291_FindFn((*(_3896_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_3947_main == nullptr)) {
			_1a6a12c46_Throw(_1d1c6daae_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1a6696c1b_applyTargetIndependentOptimizations(&(_3896_ir));
	_1a68b1562_Order(_3896_ir);
	jule::Str _4052_compPath = _1a66969da_getCompilePath();;
	jule::Str _4062_compiler;
	jule::Str _40612_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a6696853_genCompileCmd(_4052_compPath, &(_3896_ir));
		_4062_compiler = __jule_assign_result.__jule_result_arg0;
		_40612_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a757b913_ObjectCoder> _4086_oc = static__1a757bd0e_New(&(_3896_ir), _1a7579b64_SerializationInfo{._field_Compiler=_4062_compiler, ._field_CompilerCommand=_40612_compilerCmd});;
	if (_2133d8d63_Test) {
		jule::Ptr<_1a74bb9da_TestCoder> _4137_tc = static__1a74bbe5d_New(&(_4086_oc));;
		_1a74bd2d3_Serialize(_4137_tc);
	} else {
		_1a7588e3c_Serialize(_4086_oc);
	};
	jule::Ptr<_214672d32_File> _4196_file = _1a66956dc_openOutput(&(_4052_compPath));;
	({
		auto except = _21356c6cd_Write(_4196_file.ptr(), _1e9a04d05_Buf(&(*(_4086_oc))._field_Buf));
		if (!except.ok()) {
			_1a6a12c46_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _2146743b6_Close(_4196_file);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:2"));
	});
	if ((!(_2133d8aaa_Transpilation))) {
		_1a6695b93_compileIr(_4062_compiler, _40612_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1d1d33d3e_init();
	_1b91635e8_init();
	_1d1d38dcc_init();
	_1a6695423_init();

}

inline jule::Bool __jule_anon1a8e01330(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a0bc30_ParamIns> _24021_p1, jule::Ptr<_1a5a0bc30_ParamIns> _24036_p2) {
	if (((*((*(_24021_p1))._field_Decl))._field_Mutable != (*(*(_24036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1a5a0891e_IsSelf((*_24021_p1.alloc)._field_Decl)) {
		if ((!(_1a5a0891e_IsSelf((*_24036_p2.alloc)._field_Decl)))) {
			return false;;
		};
		if ((_1a5a08ba5_IsRef((*_24021_p1.alloc)._field_Decl) != _1a5a08ba5_IsRef((*_24036_p2.alloc)._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*_24021_p1.alloc)._field_Decl.alloc)._field_Reference != (*(*_24036_p2.alloc)._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*_24021_p1.alloc)._field_Decl.alloc)._field_Variadic != (*(*_24036_p2.alloc)._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1a5b5155b_Equal((*_24021_p1.alloc)._field_Kind, (*_24036_p2.alloc)._field_Kind);;
}

inline jule::Bool __jule_anon_1a8e58398(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a6dcd6_ImportInfo> _50039_spkg) {
	jule::Ptr<__jule_anon_1a8e58398_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8e58398_ctx>();
	return ((*((*(__jule_closure_ctx.alloc->_49838_pkg))))._field_Path == (*(_50039_spkg))._field_Path);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7372ebd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _8821_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _8836_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a7372ebd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a7372ebd_ctx>();
	return _1a5a26970__Name(__jule_closure_ctx.alloc->_self_, _8821_e, _8836_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7374e6a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _9521_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _9536_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a7374e6a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a7374e6a_ctx>();
	return _1a5a27267__Public(__jule_closure_ctx.alloc->_self_, _9521_e, _9536_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7376dc3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _10221_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _10236_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a7376dc3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a7376dc3_ctx>();
	return _1a5a26d6b__Type(__jule_closure_ctx.alloc->_self_, _10221_e, _10236_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7388b93(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _21121_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _21136_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a7388b93_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a7388b93_ctx>();
	return _1a5a29c70__Name(__jule_closure_ctx.alloc->_self_, _21121_e, _21136_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a738aaeb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _21821_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _21836_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a738aaeb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a738aaeb_ctx>();
	return _1a5a2a567__Public(__jule_closure_ctx.alloc->_self_, _21821_e, _21836_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a738ca54(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _22521_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _22536_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a738ca54_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a738ca54_ctx>();
	return _1a5a2a16b__Type(__jule_closure_ctx.alloc->_self_, _22521_e, _22536_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7399874(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _31321_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _31336_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a7399874_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a7399874_ctx>();
	return _1a5a2ce82__Name(__jule_closure_ctx.alloc->_self_, _31321_e, _31336_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a73ae3e4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _43521_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _43536_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a73ae3e4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a73ae3e4_ctx>();
	return _1a5a30b00__Name(__jule_closure_ctx.alloc->_self_, _43521_e, _43536_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a73b134c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _44221_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _44236_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a73b134c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a73b134c_ctx>();
	return _1a5a313e7__Variadic(__jule_closure_ctx.alloc->_self_, _44221_e, _44236_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a73b32a5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _44921_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _44936_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a73b32a5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a73b32a5_ctx>();
	return _1a5a317e3__Reference(__jule_closure_ctx.alloc->_self_, _44921_e, _44936_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a73b520d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _45621_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _45636_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a73b520d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a73b520d_ctx>();
	return _1a5a30eeb__Type(__jule_closure_ctx.alloc->_self_, _45621_e, _45636_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7447977(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _99821_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _99836_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a7447977_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a7447977_ctx>();
	return _1a5a3583b__Str(__jule_closure_ctx.alloc->_self_, _99821_e, _99836_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a74498d0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _100521_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _100536_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a74498d0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a74498d0_ctx>();
	return _1a5a36133__Bits(__jule_closure_ctx.alloc->_self_, _100521_e, _100536_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a744b838(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _101221_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _101236_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a744b838_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a744b838_ctx>();
	return _1a5a3652e__Elem(__jule_closure_ctx.alloc->_self_, _101221_e, _101236_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a744d791(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _101921_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _101936_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a744d791_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a744d791_ctx>();
	return _1a5a3692a__Size(__jule_closure_ctx.alloc->_self_, _101921_e, _101936_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a74506e9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _102621_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _102636_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a74506e9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a74506e9_ctx>();
	return _1a5a36d26__Key(__jule_closure_ctx.alloc->_self_, _102621_e, _102636_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7452652(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _103321_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _103336_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a7452652_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a7452652_ctx>();
	return _1a5a37222__Value(__jule_closure_ctx.alloc->_self_, _103321_e, _103336_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a74545aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _104021_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _104036_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a74545aa_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a74545aa_ctx>();
	return _1a5a3761d__Fields(__jule_closure_ctx.alloc->_self_, _104021_e, _104036_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7456513(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _104721_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _104736_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a7456513_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a7456513_ctx>();
	return _1a5a37a19__Statics(__jule_closure_ctx.alloc->_self_, _104721_e, _104736_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a74586e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _105421_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _105436_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a74586e1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a74586e1_ctx>();
	return _1a5a3a8da__Params(__jule_closure_ctx.alloc->_self_, _105421_e, _105436_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a745a649(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _106121_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _106136_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a745a649_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a745a649_ctx>();
	return _1a5a39400__Types(__jule_closure_ctx.alloc->_self_, _106121_e, _106136_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a745c5a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _106821_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _106836_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a745c5a2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a745c5a2_ctx>();
	return _1a5a37e15__Public(__jule_closure_ctx.alloc->_self_, _106821_e, _106836_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a745e50a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _107521_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _107536_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a745e50a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a745e50a_ctx>();
	return _1a5a38311__Binded(__jule_closure_ctx.alloc->_self_, _107521_e, _107536_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7461463(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _108221_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _108236_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a7461463_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a7461463_ctx>();
	return _1a5a3870c__Ordered(__jule_closure_ctx.alloc->_self_, _108221_e, _108236_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a74633bb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _108921_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _108936_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a74633bb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a74633bb_ctx>();
	return _1a5a38b08__Comparable(__jule_closure_ctx.alloc->_self_, _108921_e, _108936_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7465324(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _109621_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _109636_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a7465324_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a7465324_ctx>();
	return _1a5a39004__Mutable(__jule_closure_ctx.alloc->_self_, _109621_e, _109636_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a746727c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _110321_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _110336_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a746727c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a746727c_ctx>();
	return _1a5a397eb__Exceptional(__jule_closure_ctx.alloc->_self_, _110321_e, _110336_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a74691d5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _111021_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _111036_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a74691d5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a74691d5_ctx>();
	return _1a5a39be7__CanNil(__jule_closure_ctx.alloc->_self_, _111021_e, _111036_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a746b13d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _111721_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _111736_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a746b13d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a746b13d_ctx>();
	return _1a5a3a0e3__RC(__jule_closure_ctx.alloc->_self_, _111721_e, _111736_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a746d096(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _112421_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _112436_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a746d096_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a746d096_ctx>();
	return _1a5a3a4de__Result(__jule_closure_ctx.alloc->_self_, _112421_e, _112436_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a746eeee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _113121_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _113136_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a746eeee_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a746eeee_ctx>();
	return _1a5a35c37__Kind(__jule_closure_ctx.alloc->_self_, _113121_e, _113136_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a748a1e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _124721_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _124736_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a748a1e5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a748a1e5_ctx>();
	return _1a5a3bc4e__Unwrap(__jule_closure_ctx.alloc->_self_, _124721_e, _124736_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a748c14d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _125421_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _125436_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a748c14d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a748c14d_ctx>();
	return _1a5a3c14a__Type(__jule_closure_ctx.alloc->_self_, _125421_e, _125436_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a748e0a6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _126121_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _126136_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a748e0a6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a748e0a6_ctx>();
	return _1a5a3c546__Lvalue(__jule_closure_ctx.alloc->_self_, _126121_e, _126136_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a749100e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _126821_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _126836_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a749100e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a749100e_ctx>();
	return _1a5a3c942__Mutable(__jule_closure_ctx.alloc->_self_, _126821_e, _126836_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7492e67(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _127521_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _127536_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a7492e67_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a7492e67_ctx>();
	return _1a5a3cd3d__Const(__jule_closure_ctx.alloc->_self_, _127521_e, _127536_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a7494dc0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _128221_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _128236_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a7494dc0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a7494dc0_ctx>();
	return _1a5a3d239__Field(__jule_closure_ctx.alloc->_self_, _128221_e, _128236_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a90e5887(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _139621_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _139636_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a90e5887_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a90e5887_ctx>();
	return _1a5a40c86__Path(__jule_closure_ctx.alloc->_self_, _139621_e, _139636_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a90e77e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _140321_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _140336_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a90e77e0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a90e77e0_ctx>();
	return _1a5a41182__Name(__jule_closure_ctx.alloc->_self_, _140321_e, _140336_fc);;
}

inline jule::Ptr<_1a5b19aeb_Data> __jule_anon_1a90e9748(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b1b823_Eval>* _141021_e, jule::Ptr<_1a59cbeca_FnCallExpr>* _141036_fc, jule::Ptr<_1a5b19aeb_Data>* ) {
	jule::Ptr<__jule_anon_1a90e9748_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a90e9748_ctx>();
	return _1a5a4157d__Dir(__jule_closure_ctx.alloc->_self_, _141021_e, _141036_fc);;
}

inline jule::Bool __jule_anon_1a910527b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a8e17a_Sema>* _6415_sema, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1a910527b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a910527b_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a910637b:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_1a59d1177_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1a5b4e46b_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1a910637b;
				};
				(*(_669_generic))._field_Constraint=jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len());
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a91090e8:;
					if (it != expr_end) {
						jule::Ptr<_1a59c3e6c_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1a5b50d52_TypeKind> _7310_kind = _1a5a96c43_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1a5b70943_Lookup_mptr_data3), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type74) {
										_case_begin_1a910addb:;
										{
											jule::Ptr<_1a59c4577_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1a59c4577_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1a5a45e23_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(_1a5b6cc70_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data20)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1a910da6a;
											};
										}
									}
									_match_end_1a910ad75:;
								};
								return false;;
							};
							_julec_label_1a910da6a:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,jule::Slice<jule::Ptr<_1a5b50d52_TypeKind>>::make({_7310_kind}));
						}
						_iter_next_1a91090e8:;
						++it;
						goto _iter_begin_1a91090e8;
					}
					_iter_end_1a91090e8:;
				};
			}
			_iter_next_1a910637b:;
			++it;
			_659_i++;
			goto _iter_begin_1a910637b;
		}
		_iter_end_1a910637b:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1a93ade2a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a8e17a_Sema>* _110537_sema, jule::Slice<jule::Ptr<_1a5b50060_TypeAlias>>* _110555_generics) {
	jule::Ptr<__jule_anon_1a93ade2a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a93ade2a_ctx>();
	jule::Bool _11068_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93b03c1:;
		if (it != expr_end) {
			jule::Ptr<_1a5a0bc30_ParamIns> _110716_p = *it;
			{
				if (_1a5a0891e_IsSelf((*(_110716_p))._field_Decl.ptr())) {
					if (_1a5a08ba5_IsRef((*_110716_p.alloc)._field_Decl)) {
						(*_110716_p.alloc)._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1a5b5c457_Sptr>(_1a5b5c457_Sptr{._field_Elem=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data21)});
					} else {
						(*_110716_p.alloc)._field_Kind=jule::new_ptr<_1a5b50d52_TypeKind>(_1a5b50d52_TypeKind{._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Owner, (jule::Trait::Type*)&_1a5b5089b_Kind_mptr_data0)});
					};
				} else {
					(*(_110716_p))._field_Kind=_1a5a97ddc_buildTypeWithGenerics((*(_110537_sema)), &((*((*((*_110716_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_110555_generics)), (*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Refers);
					if (((*_110716_p.alloc)._field_Kind != nullptr)) {
						_1a5a9c908_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_110716_p));
					} else {
						_11068_ok=false;
					};
				};
			}
			_iter_next_1a93b03c1:;
			++it;
			goto _iter_begin_1a93b03c1;
		}
		_iter_end_1a93b03c1:;
	};
	if ((!(_1a5a0a24a_IsVoid((*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Result=_1a5a97ddc_buildTypeWithGenerics((*(_110537_sema)), &((*((*((*(*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_110555_generics)), (*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Refers);
		_11068_ok=(((*__jule_closure_ctx.alloc->_110137_f.alloc)._field_Result != nullptr) && _11068_ok);
	};
	return _11068_ok;;
}

inline jule::Bool __jule_anon_1a8c9ba05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a6dcd6_ImportInfo> _183143_imp) {
	jule::Ptr<__jule_anon_1a8c9ba05_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a8c9ba05_ctx>();
	if ((((*__jule_closure_ctx.alloc->_182931_s.alloc)._field_Ns.len() == 1LL) && ((*(_183143_imp))._field_Alias == __jule_closure_ctx.alloc->_18303_path))) {
		return true;;
	};
	return (((*_183143_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_18303_path) && _1a5a718ee_isAccessibleViaSelection(_183143_imp));;
}

inline jule::Str __jule_anon1a9b86504(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _84719_def) {
	{
		auto &_match_expr{ (*(_84719_def)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a9b875c1:;
			{
				return (*((*(_84719_def)).cast_ptr<_1a5b50060_TypeAlias>(&__jule_any_type65)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a9b873e5:;
			{
				return (*((*(_84719_def)).cast_ptr<_1a59e4d06_Struct>(&__jule_any_type64)))._field_Ident;;
			}
		}
		else {
			_case_begin_1a9b86eb6:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a9b86e61:;
	};
}

inline jule::Bool __jule_anon_1a9c17057(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a6dcd6_ImportInfo> _151943_imp) {
	jule::Ptr<__jule_anon_1a9c17057_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9c17057_ctx>();
	if ((((*__jule_closure_ctx.alloc->_151736_decl.alloc)._field_Idents.len() == 1LL) && ((*(_151943_imp))._field_Alias == __jule_closure_ctx.alloc->_15183_path))) {
		return true;;
	};
	return (((*_151943_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_15183_path) && _1a5a718ee_isAccessibleViaSelection(_151943_imp));;
}

inline void __jule_anon_1aa4304b7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2840_expr) {
	jule::Ptr<__jule_anon_1aa4304b7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa4304b7_ctx>();
	{
		auto &_match_expr{ (*(_2840_expr)) };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa430e02:;
			{
				jule::Ptr<_1a59ede64_FnCallExprModel> _319_m = (*(_2840_expr)).cast_ptr<_1a59ede64_FnCallExprModel>(&__jule_any_type33);;
				if (((*(_319_m))._field_Except != nullptr)) {
					{
						_1a69cdd88_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_319_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1aa430c59:;
			{
				jule::Ptr<_1a59ede64_FnCallExprModel> _369_m = (*(_2840_expr)).cast_ptr<_1a59ede64_FnCallExprModel>(&__jule_any_type33);;
				_1a69d182a_eliminateDeadCodeOfScope((*((*(_369_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1aa430d8b:;
	};
}

inline void __jule_anon_1aa5a1759(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _55246_m) {
	jule::Ptr<__jule_anon_1aa5a1759_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa5a1759_ctx>();
	{
		auto &_match_expr{ (*(_55246_m)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1aa5a224e:;
			{
				{
					_1a68c9943_binary(__jule_closure_ctx.alloc->_self_, (*(*(__jule_closure_ctx.alloc->_self_))._field_model.alloc).cast_ptr<_1a59ebe84_BinaryExprModel>(&__jule_any_type111));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1aa5a1eeb:;
			{
				{
					_1a68c9beb_unary(__jule_closure_ctx.alloc->_self_, (*(*(__jule_closure_ctx.alloc->_self_))._field_model.alloc).cast_ptr<_1a59ec35d_UnaryExprModel>(&__jule_any_type110));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1aa5a22b5:;
			{
				{
					_1a68c9ea4_structureLit(__jule_closure_ctx.alloc->_self_, (*(*(__jule_closure_ctx.alloc->_self_))._field_model.alloc).cast_ptr<_1a59ecc32_StructLitExprModel>(&__jule_any_type95));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1aa5a232b:;
			{
				{
					_1a68ca25c_casting(__jule_closure_ctx.alloc->_self_, (*(*(__jule_closure_ctx.alloc->_self_))._field_model.alloc).cast_ptr<_1a59ed5b2_CastingExprModel>(&__jule_any_type93));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aa5a2392:;
			{
				{
					_1a68cab31_funcCall(__jule_closure_ctx.alloc->_self_, (*(*(__jule_closure_ctx.alloc->_self_))._field_model.alloc).cast_ptr<_1a59ede64_FnCallExprModel>(&__jule_any_type33));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1aa5a2419:;
			{
				{
					_1a68cadd9_indexing(__jule_closure_ctx.alloc->_self_, (*(*(__jule_closure_ctx.alloc->_self_))._field_model.alloc).cast_ptr<_1a59ee7e4_IndexingExprModel>(&__jule_any_type44));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1aa5a2491:;
			{
				{
					_1a68cb192_anonFunc(__jule_closure_ctx.alloc->_self_, (*(*(__jule_closure_ctx.alloc->_self_))._field_model.alloc).cast_ptr<_1a59eec9a_AnonFnExprModel>(&__jule_any_type100));
				};
			}
		}
		_match_end_1aa5a2161:;
	};
}

inline void __jule_anon_1aa6d676d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa6d676d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa6d676d_ctx>();
	if (__jule_closure_ctx.alloc->_1377_ref) {
		_1a757c0b7_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1a757c0b7_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1aa6da233(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa6da233_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa6da233_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_12936_it))))._field_KeyB.alloc)._field_Reference) {
			_1a757c0b7_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it", 2));
		} else {
			_1a757c0b7_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1aa6e9709(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa6e9709_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa6e9709_ctx>();
	_1a757c0b7_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it->first", 9));
}

inline void __jule_anon_1aa6ebb7e(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa6ebb7e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa6ebb7e_ctx>();
	_1a757c0b7_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it->second", 10));
}

inline void __jule_anon_1aa7158ac(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa7158ac_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa7158ac_ctx>();
	_1a757c0b7_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1aa781043(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa781043_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa781043_ctx>();
	_1a757c0b7_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1aa782352(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aa782352_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa782352_ctx>();
	_1a74ae527_possibleRefExpr((*(*__jule_closure_ctx.alloc->_self_.alloc)._field_oc.alloc)._field_ec, (*(*__jule_closure_ctx.alloc->_63530_m.alloc)._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1aa807350(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5ab1ee4_Var> _101167_v) {
	jule::Ptr<__jule_anon_1aa807350_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa807350_ctx>();
	return _1a74a8620_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_100534_m), &(_101167_v));;
}

inline void __jule_anon_1a9042e88(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a71c0c_Package>* _82738_pkg) {
	jule::Ptr<__jule_anon_1a9042e88_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9042e88_ctx>();
	_1a68b2ac4_IterFiles(_82738_pkg, jule::__new_closure<void,jule::Ptr<_1a5b14783_SymbolTable>*>((void*)__jule_anon_1a9043dac, jule::Ptr<__jule_anon_1a9043dac_ctx>::make(__jule_anon_1a9043dac_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1a9043dac_ctx_handler));
}

inline void __jule_anon_1a90444a6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn>* _84036_m) {
	jule::Ptr<__jule_anon_1a90444a6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a90444a6_ctx>();
	jule::Ptr<_1a5a0cca8_FnIns> _8418_ins = (*((*(_84036_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_8418_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a9047674:;
		if (it != expr_end) {
			jule::I64 _8429_i = it - expr.begin();
			jule::Ptr<_1a5a0bc30_ParamIns> _84216_ip = *it;
			{
				if (_1c80b91dd_IsAnonIdent((*((*(_84216_ip))._field_Decl))._field_Ident)) {
					(*(*_84216_ip.alloc)._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1b915e0a5_Itoa(_8429_i));
				};
			}
			_iter_next_1a9047674:;
			++it;
			_8429_i++;
			goto _iter_begin_1a9047674;
		}
		_iter_end_1a9047674:;
	};
	_1a757dcde_pushResult(__jule_closure_ctx.alloc->_self_, _84036_m);
	_1a7583035_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _84036_m);
}

inline void __jule_anon_1a9049ab6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a71c0c_Package>* _85338_pkg) {
	jule::Ptr<__jule_anon_1a9049ab6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9049ab6_ctx>();
	_1a68b2ac4_IterFiles(_85338_pkg, jule::__new_closure<void,jule::Ptr<_1a5b14783_SymbolTable>*>((void*)__jule_anon_1a904a9b8, jule::Ptr<__jule_anon_1a904a9b8_ctx>::make(__jule_anon_1a904a9b8_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1a904a9b8_ctx_handler));
}

inline void __jule_anon_1a905a621(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a905a621_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a905a621_ctx>();
	_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1a74b8de4_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(*__jule_closure_ctx.alloc->_92024_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
	_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1a905c722(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a905c722_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a905c722_ctx>();
	_1a74ae527_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(*__jule_closure_ctx.alloc->_92024_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1a905ee3e(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a905ee3e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a905ee3e_ctx>();
	_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1a90610b6(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1a90610b6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a90610b6_ctx>();
	_1a74b919c_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*__jule_closure_ctx.alloc->_92024_v.alloc)._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1a907e337(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a71c0c_Package>* _106238_pkg) {
	jule::Ptr<__jule_anon_1a907e337_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a907e337_ctx>();
	_1a68b2ac4_IterFiles(_106238_pkg, jule::__new_closure<void,jule::Ptr<_1a5b14783_SymbolTable>*>((void*)__jule_anon_1a9080239, jule::Ptr<__jule_anon_1a9080239_ctx>::make(__jule_anon_1a9080239_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1a9080239_ctx_handler));
}

inline void __jule_anon_1a90806bd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn>* _107736_m) {
	jule::Ptr<__jule_anon_1a90806bd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a90806bd_ctx>();
	_1a757c969_indent(__jule_closure_ctx.alloc->_self_);
	_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1a74c0a55_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _107736_m);
	_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1a5a0cca8_FnIns> _10824_mepf;
	jule::Bool _108210_exist;
	({
		__jule_tuple_x_1a5a0cca8_FnIns__jule_tuple_bool __jule_assign_result = _1a7585972_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _107736_m);
		_10824_mepf = __jule_assign_result.__jule_result_arg0;
		_108210_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_108210_exist))) {
		jule::panic(jule::Str::lit("implementation mistake, [traitDataMethods] could not found MepMap record", 72) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1084:5"));;
	};
	_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, _1b915d923_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10824_mepf)), 15LL));
	_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, _1b915d923_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_107649_s)), 15LL));
	_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1a908d126(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a71c0c_Package>* _111438_pkg) {
	jule::Ptr<__jule_anon_1a908d126_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a908d126_ctx>();
	_1a68b2ac4_IterFiles(_111438_pkg, jule::__new_closure<void,jule::Ptr<_1a5b14783_SymbolTable>*>((void*)__jule_anon_1a908e028, jule::Ptr<__jule_anon_1a908e028_ctx>::make(__jule_anon_1a908e028_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1a908e028_ctx_handler));
}

inline void __jule_anon_1a90ab1dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a71c0c_Package>* _123938_pkg) {
	jule::Ptr<__jule_anon_1a90ab1dd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a90ab1dd_ctx>();
	_1a68b2ac4_IterFiles(_123938_pkg, jule::__new_closure<void,jule::Ptr<_1a5b14783_SymbolTable>*>((void*)__jule_anon_1a90ac0e0, jule::Ptr<__jule_anon_1a90ac0e0_ctx>::make(__jule_anon_1a90ac0e0_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1a90ac0e0_ctx_handler));
}

inline void __jule_anon_1a90ac6b7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b14783_SymbolTable>* _125531_file) {
	jule::Ptr<__jule_anon_1a90ac6b7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a90ac6b7_ctx>();
	{
		auto expr = &((*((*(_125531_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90b0610:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _125611_f = *it;
			{
				if ((*(_125611_f))._field_Ident.equal("init", 4)) {
					_1a757c969_indent(__jule_closure_ctx.alloc->_self_);
					static__1a74c0a55_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_125611_f));
					_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1a90b0610:;
			++it;
			goto _iter_begin_1a90b0610;
		}
		_iter_end_1a90b0610:;
	};
}

inline void __jule_anon_1a90b548e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a71c0c_Package>* _128438_pkg) {
	jule::Ptr<__jule_anon_1a90b548e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a90b548e_ctx>();
	_1a75880d4_pushInit(__jule_closure_ctx.alloc->_self_, _128438_pkg);
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1aac81ea0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1b914c736_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1aac89d65(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1b914c280_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1a8ea57d0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a6dcd6_ImportInfo> _143025_pkg) {
	return (*(_143025_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1a9043dac(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b14783_SymbolTable>* _82832_file) {
	jule::Ptr<__jule_anon_1a9043dac_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9043dac_ctx>();
	{
		auto expr = &((*((*(_82832_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a904485d:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _82917_f = *it;
			{
				if (((!((*(_82917_f))._field_Binded)) && ((*_82917_f.alloc)._field_Token != nullptr))) {
					_1a757dcde_pushResult(__jule_closure_ctx.alloc->_self_, &(_82917_f));
					_1a7582c7c_funcDecl(__jule_closure_ctx.alloc->_self_, &(_82917_f), false);
				};
			}
			_iter_next_1a904485d:;
			++it;
			goto _iter_begin_1a904485d;
		}
		_iter_end_1a904485d:;
	};
}

inline void __jule_anon_1a904a9b8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b14783_SymbolTable>* _85432_file) {
	jule::Ptr<__jule_anon_1a904a9b8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a904a9b8_ctx>();
	{
		auto expr = &((*((*(_85432_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a904b447:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> _85517_t = *it;
			{
				if ((((*(_85517_t))._field_Token == nullptr) || ((*_85517_t.alloc)._field_Implemented.len() == 0LL))) {
					goto _iter_next_1a904b447;
				};
				_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1a74c112c_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _85517_t);
				_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1a757c56d_addIndent(__jule_closure_ctx.alloc->_self_);
				_1a757c969_indent(__jule_closure_ctx.alloc->_self_);
				_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1a75834db_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_85517_t));
				_1a757c76b_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1a757c969_indent(__jule_closure_ctx.alloc->_self_);
				_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1a904b447:;
			++it;
			goto _iter_begin_1a904b447;
		}
		_iter_end_1a904b447:;
	};
}

inline void __jule_anon_1a9080239(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b14783_SymbolTable>* _106332_file) {
	jule::Ptr<__jule_anon_1a9080239_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a9080239_ctx>();
	{
		auto expr = &((*((*(_106332_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9080bb8:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> _106417_t = *it;
			{
				if (((*(_106417_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1a9080bb8;
				};
				_1a68b3641_IterTraitMethods(&(_106417_t), jule::__new_closure<void,jule::Ptr<_1a5a09cc7_Fn>*>((void*)__jule_anon_1a90821d6, jule::Ptr<__jule_anon_1a90821d6_ctx>::make(__jule_anon_1a90821d6_ctx{._self_=__jule_closure_ctx.alloc->_self_,._106417_t=_106417_t}).as<jule::Uintptr>(), __jule_anon_1a90821d6_ctx_handler));
			}
			_iter_next_1a9080bb8:;
			++it;
			goto _iter_begin_1a9080bb8;
		}
		_iter_end_1a9080bb8:;
	};
}

inline void __jule_anon_1a908e028(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b14783_SymbolTable>* _111532_file) {
	jule::Ptr<__jule_anon_1a908e028_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a908e028_ctx>();
	{
		auto expr = &((*((*(_111532_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a908e9a7:;
		if (it != expr_end) {
			jule::Ptr<_1a5a1d181_Trait> _111617_t = *it;
			{
				jule::I64 _111710_i = 0LL;;
				{
					auto expr = &((*(_111617_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a90907bb:;
					if (it != expr_end) {
						jule::Ptr<_1a59e4d06_Struct> _111818_s = *it;
						{
							{
								auto expr = &((*(_111818_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a909116d:;
								if (it != expr_end) {
									jule::Ptr<_1a59e7a84_StructIns> _111919_ins = *it;
									{
										_1a7586764_traitData(__jule_closure_ctx.alloc->_self_, &(_111617_t), _111710_i, &(_111919_ins));
										(_111710_i)++;
									}
									_iter_next_1a909116d:;
									++it;
									goto _iter_begin_1a909116d;
								}
								_iter_end_1a909116d:;
							};
						}
						_iter_next_1a90907bb:;
						++it;
						goto _iter_begin_1a90907bb;
					}
					_iter_end_1a90907bb:;
				};
			}
			_iter_next_1a908e9a7:;
			++it;
			goto _iter_begin_1a908e9a7;
		}
		_iter_end_1a908e9a7:;
	};
}

inline void __jule_anon_1a90ac0e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5b14783_SymbolTable>* _124032_file) {
	jule::Ptr<__jule_anon_1a90ac0e0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a90ac0e0_ctx>();
	{
		auto expr = &((*((*(_124032_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90aca6e:;
		if (it != expr_end) {
			jule::Ptr<_1a5a09cc7_Fn> _124117_f = *it;
			{
				if (((!(_2133d8d63_Test)) && _1a68bcb12_HasDirective(&((*(_124117_f))._field_Directives), jule::Str::lit("test", 4)))) {
					goto _iter_next_1a90aca6e;
				};
				if (((!((*_124117_f.alloc)._field_Binded)) && ((*_124117_f.alloc)._field_Token != nullptr))) {
					_1a75852bd_func(__jule_closure_ctx.alloc->_self_, &(_124117_f));
					_1a757c0b7_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1a90aca6e:;
			++it;
			goto _iter_begin_1a90aca6e;
		}
		_iter_end_1a90aca6e:;
	};
}

inline void __jule_anon_1a90821d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1a5a09cc7_Fn>* _106839_m) {
	jule::Ptr<__jule_anon_1a90821d6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1a90821d6_ctx>();
	_1a7585cd5_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_106417_t), _106839_m);
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}