// Auto generated by JuleC.
// JuleC version: jule0.0.9 @master
// Date: 27/2/2024 10.24 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   

struct _1a665b3a6_Reader;
struct _1a665b3a6_Writer;
struct _1a665b3a6_Stream;
struct _1c2c4607e_Importer;
struct _1a5e40a26_Kind;
struct _1a6336746_Lookup;
struct _1dc4768b6_CommonFlag;

struct _1db761ba2_accept_range;


struct _1dc4e2e71_FoldPair;


struct _1dc4e2e71_CaseRange;


struct _1dc4e2e71_Range16;


struct _1dc4e2e71_Range32;


struct _1dc4e2e71_RangeTable;


struct _1db7b8830_LazyBuff;


struct _1db69ceea_DirEntry;


struct _1db69ceea_Directory;


struct _1db6a29e4_File;


struct _1db6a27c4_Status;


struct _1dce5a696_Cmd;


struct _1db678789_Log;


struct _1dd05db0c_Token;


struct _1dd05eba7_File;


struct _1dd0ed32d_KindPair;


struct _1dd0ed32d_Lex;


struct _1dd05b9c8_Ast;


struct _1dd05c765_CommentGroup;


struct _1dd05c765_NamespaceTypeDecl;


struct _1dd05c765_SptrTypeDecl;


struct _1dd05c765_SlcTypeDecl;


struct _1dd05c765_TupleTypeDecl;


struct _1dd05c765_PtrTypeDecl;


struct _1dd05c765_ArrTypeDecl;


struct _1dd05c765_MapTypeDecl;


struct _1dd05c765_RetTypeDecl;


struct _1dd05c765_TupleExpr;


struct _1dd05c765_CastExpr;


struct _1dd05c765_StructLit;


struct _1dd05c765_ScopeTree;


struct _1dd05c765_Conditional;


struct _1dd05c765_Impl;


struct _1dd1ec6b3_FloatInfo;


struct _1dd1ec6b3_DecimalSlice;


struct _1dd472b47_LeftCheat;


struct _1dd472b47_Decimal;


struct _1dd0ba905_AnsiEscape;


struct _1dd0bac02_Logger;


struct _1dd0be6b7_FileInfo;


struct _1dd0be6b7_PackageInfo;


struct _1dd229ca6_Stmt;


struct _1dd229ca6_ScopeParser;


struct _1ddb659bb_CallData;


struct _1ddb659bb_ExprBuilder;


struct _1ddb89cdc_Parser;


struct _1ddc59010_TypeBuilder;


struct _1a64669ca_Const;


struct _1a665a62a_FileStream;


struct _1a6666944_ByteStream;


struct _1a66a95ad_Scanner;


struct _1dd0be530_OperatorMap;


struct _1dd0be530_Operators;


struct _1dd0be530_FieldIns;


struct _1ddb3c047_OperandExprModel;


struct _1ddb3c047_StructArgExprModel;


struct _1ddb3c047_AllocStructLitExprModel;


struct _1ddb3c047_SliceExprModel;


struct _1ddb3c047_AnonFnExprModel;


struct _1ddb3c047_KeyValPairExprModel;


struct _1ddb3c047_MapExprModel;


struct _1ddb3c047_StructSubIdentExprModel;


struct _1ddb3c047_StructStaticIdentExprModel;


struct _1ddb3c047_ArrayExprModel;


struct _1ddb3c047_CommonIdentExprModel;


struct _1ddb3c047_CommonSubIdentExprModel;


struct _1ddb3c047_TupleExprModel;


struct _1ddb3c047_BuiltinOutCallExprModel;


struct _1ddb3c047_BuiltinOutlnCallExprModel;


struct _1ddb3c047_BuiltinCloneCallExprModel;


struct _1ddb3c047_BuiltinNewCallExprModel;


struct _1ddb3c047_BuiltinMakeCallExprModel;


struct _1ddb3c047_BuiltinAppendCallExprModel;


struct _1ddb3c047_BuiltinErrorCallExprModel;


struct _1ddb3c047_SizeofExprModel;


struct _1ddb3c047_AlignofExprModel;


struct _1ddb3c047_RuneExprModel;


struct _1ddb3c047_IntegratedToStrExprModel;


struct _1ddb3c047_TernaryExprModel;


struct _1ddb3c047_BackendEmitExprModel;


struct _1ddb3c047_FreeExprModel;


struct _1dded9702_RetType;


struct _1dded9702_ParamIns;


struct _1dded9702_FnIns;


struct _1dded9779_ReferenceStack;


struct _1dded9779_SymbolBuilder;


struct _1de0e21cd_Impl;


struct _1de0e938e_Scope;


struct _1de0e938e_If;


struct _1de0e938e_Else;


struct _1de0e938e_Conditional;


struct _1de0e938e_InfIter;


struct _1de0e938e_WhileIter;


struct _1de0e938e_RangeIter;


struct _1de0e938e_ContSt;


struct _1de0e938e_BreakSt;


struct _1de0e938e_Label;


struct _1de0e938e_GotoSt;


struct _1de0e938e_Postfix;


struct _1de0e938e_MultiAssign;


struct _1de0e938e_Match;


struct _1de0e938e_Case;


struct _1de0e938e_FallSt;


struct _1de0e938e_RetSt;


struct _1de0e938e_ScopeGoto;


struct _1de0e938e_ScopeChecker;


struct _1de353939_DirectiveChecker;


struct _1c2c4607e_Package;


struct _1c2c46634_Sema;


struct _1c3c3d174_IterRelation;


struct _1c3c3d350_FuncPattern;


struct _1a93c7a48_RangeChecker;


struct _1a943b749_SymbolTable;


struct _1a94c333b_Data;


struct _1a94c333b_Value;


struct _1a94c333b_Eval;


struct _1a94c333b_UnaryEval;


struct _1a5e40a26_TypeKind;


struct _1a5e40a26_TypeSymbol;


struct _1a5e40a26_Prim;


struct _1a5e40a26_Sptr;


struct _1a5e40a26_Slc;


struct _1a5e40a26_Tuple;


struct _1a5e40a26_Map;


struct _1a5e40a26_Arr;


struct _1a5e40a26_Ptr;


struct _1a5e40a26_Referencer;


struct _1dceea978_DirectiveEval;


struct _1dd023275_PlainImporter;


struct _1dcebc175_OrderedDefines;


struct _1dcebc175_DefineOrderer;


struct _1db71cbb3_ScopeDeadCode;


struct _1a69e4ba1_AbsTime;


struct _1a69e4ba1_Time;


struct _1a69e4ba1_Duration;


struct _1db71bcb1_TestCoder;


struct _1dc4e9dbd_ScopeCoder;


struct _1dcb0cd1b_ExprCoder;


struct _1a6849484_DeriveCoder;


struct _1a670d28d_IdentCoder;


struct _1a686ecd4_SerializationInfo;


struct _1a696bb06_TypeCoder;


struct _1dc4c9760_ScopeOptimizer;


struct _1dce62659_Optimizer;


struct _1dc4768b6_Flag_0;

struct _1dc4768b6_Flag_1;

struct _1dc4768b6_Flag_2;

struct _1dc4768b6_Flag_3;

struct _1dc4768b6_Flag_4;


struct _1dc4768b6_FlagSet;


struct _1dded9702_Param;


struct _1dded9702_Fn;


struct _1dd05c765_Expr;


struct _1dd05c765_UseExpr;


struct _1dd05c765_TypeDecl;


struct _1dded9779_Pass;


struct _1dd05c765_LitExpr;


struct _1de043c01_Trait;


struct _1de0dbeb9_EnumItem;


struct _1de0dbeb9_Enum;


struct _1dd05c765_UnsafeExpr;


struct _1dd05c765_CoExpr;


struct _1dd05c765_IdentExpr;


struct _1dd05c765_UnaryExpr;


struct _1dd05c765_VariadicExpr;


struct _1dd05c765_IdentTypeDecl;


struct _1dd05c765_NsSelectionExpr;


struct _1dd05c765_SubIdentExpr;


struct _1dd05c765_BinopExpr;


struct _1ddb61a2d_AssignInfo;


struct _1dd05c765_FnCallExpr;


struct _1dd05c765_FieldExprPair;


struct _1dd05c765_Node;


struct _1de0e938e_Assign;


struct _1dd05c765_BraceLit;


struct _1dd05c765_KeyValPair;


struct _1dd05c765_SliceExpr;


struct _1dd0be530_Field;


struct _1dd05c765_IndexingExpr;


struct _1de0e938e_ScopeLabel;


struct _1dd05c765_SlicingExpr;


struct _1dd0be530_Struct;


struct _1dd05c765_TernaryExpr;


struct _1c2c4607e_ImportInfo;


struct _1dd0be530_StructIns;


struct _1dd05c765_GenericDecl;


struct _1ddb3c047_BinopExprModel;


struct _1c3c3d174_Var;


struct _1ddb3c047_UnaryExprModel;


struct _1a93c7a48_TypeCompatibilityChecker;


struct _1a93c7a48_AssignTypeChecker;


struct _1a93c7a48_DynamicTypeAnnotation;


struct _1a93c7a48_FnCallArgChecker;


struct _1a93c7a48_StructLitChecker;


struct _1dd05c765_LabelSt;


struct _1a93c7a48_RetTypeChecker;


struct _1ddb3c047_StructLitExprModel;


struct _1dd05c765_GotoSt;


struct _1ddb3c047_CastingExprModel;


struct _1ddb3c047_FnCallExprModel;


struct _1dd05c765_FallSt;


struct _1a94c333b_BinaryEval;


struct _1a5e40a26_TypeAlias;


struct _1ddb3c047_IndexingExprModel;


struct _1dd05c765_AssignLeft;


struct _1dd05c765_AssignSt;


struct _1dd05c765_Comment;


struct _1ddb3c047_SlicingExprModel;


struct _1ddb3c047_TraitSubIdentExprModel;


struct _1dd05c765_ParamDecl;


struct _1dd05c765_FnDecl;


struct _1dd05c765_VarDecl;


struct _1dd05c765_RetSt;


struct _1a5e40a26_TypeChecker;


struct _1dd05c765_Iter;


struct _1dd05c765_WhileKind;


struct _1dcecd043_IR;


struct _1dd05c765_RangeKind;


struct _1dd05c765_BreakSt;


struct _1dd05c765_ContSt;


struct _1dd05c765_If;


struct _1ddb3c047_BuiltinPanicCallExprModel;


struct _1ddb3c047_BuiltinAssertCallExprModel;


struct _1dd05c765_Else;


struct _1dd05c765_Directive;


struct _1dd05c765_TypeAliasDecl;


struct _1dd05c765_Case;


struct _1dd05c765_MatchCase;


struct _1dd05c765_UseDecl;


struct _1a686ecd4_ObjectCoder;


struct _1dd05c765_EnumItemDecl;


struct _1dd05c765_EnumDecl;


struct _1dd05c765_FieldDecl;


struct _1dd05c765_StructDecl;


struct _1dd05c765_TraitDecl;


struct _1dc4768b6_ArgParser;

struct _1a665b3a6_Reader {
	virtual ~_1a665b3a6_Reader(void) {}

	virtual jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8> _1131_buff) { return {}; }
};

struct _1a665b3a6_Writer {
	virtual ~_1a665b3a6_Writer(void) {}

	virtual jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8> _1828_buff) { return {}; }
};

struct _1a665b3a6_Stream {
	virtual ~_1a665b3a6_Stream(void) {}

	virtual jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8> _2431_buff) { return {}; }
	virtual jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8> _2628_buff) { return {}; }
};

struct _1c2c4607e_Importer {
	virtual ~_1c2c4607e_Importer(void) {}

	virtual void _method_set_mod_path(jule::Str _1735_path) {}
	virtual jule::Str _method_get_mod_path(void) { return {}; }
	virtual jule::Str _method_mod_by_id(jule::Int _2328_id) { return {}; }
	virtual jule::Ptr<_1c2c4607e_ImportInfo> _method_get_import(jule::Str _2833_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ptr<_1dd05b9c8_Ast>>,jule::Slice<_1db678789_Log>> _method_import_package(jule::Str _3337_path,jule::Bool _3348_update_mod) { return {}; }
	virtual void _method_imported(jule::Ptr<_1c2c4607e_ImportInfo>) {}
};

struct _1a5e40a26_Kind {
	virtual ~_1a5e40a26_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind> _6026_other) { return {}; }
};

struct _1a6336746_Lookup {
	virtual ~_1a6336746_Lookup(void) {}

	virtual jule::Ptr<_1c2c4607e_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ptr<_1c2c4607e_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ptr<_1c3c3d174_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ptr<_1a5e40a26_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ptr<_1dd0be530_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ptr<_1dded9702_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ptr<_1de043c01_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ptr<_1de0dbeb9_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _1dc4768b6_CommonFlag {
	virtual ~_1dc4768b6_CommonFlag(void) {}

	virtual jule::Str _method_name(void) { return {}; }
	virtual jule::I32 _method_short(void) { return {}; }
	virtual jule::Str _method_what(void) { return {}; }
	virtual void _method_reset(void) {}
};


struct _1db761ba2_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();


	_1db761ba2_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_1db761ba2_accept_range(void) = default;

	inline bool operator==(_1db761ba2_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1db761ba2_accept_range _other) { return !this->operator==(_other); }


};


struct _1dc4e2e71_FoldPair {
	jule::U16 _field_from = jule::U16();
	jule::U16 _field_to = jule::U16();


	_1dc4e2e71_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_1dc4e2e71_FoldPair(void) = default;

	inline bool operator==(_1dc4e2e71_FoldPair _other) {
		return 
			this->_field_from == _other._field_from &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1dc4e2e71_FoldPair _other) { return !this->operator==(_other); }


};


struct _1dc4e2e71_CaseRange {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::Array<jule::I32,3> _field_delta = jule::Array<jule::I32,3>();


	_1dc4e2e71_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_1dc4e2e71_CaseRange(void) = default;

	inline bool operator==(_1dc4e2e71_CaseRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_delta == _other._field_delta;
	}

	inline bool operator!=(_1dc4e2e71_CaseRange _other) { return !this->operator==(_other); }


};


struct _1dc4e2e71_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();


	_1dc4e2e71_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1dc4e2e71_Range16(void) = default;

	inline bool operator==(_1dc4e2e71_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1dc4e2e71_Range16 _other) { return !this->operator==(_other); }


};


struct _1dc4e2e71_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();


	_1dc4e2e71_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1dc4e2e71_Range32(void) = default;

	inline bool operator==(_1dc4e2e71_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1dc4e2e71_Range32 _other) { return !this->operator==(_other); }


};


struct _1dc4e2e71_RangeTable {
	jule::Slice<_1dc4e2e71_Range16> _field_r16 = jule::Slice<_1dc4e2e71_Range16>();
	jule::Slice<_1dc4e2e71_Range32> _field_r32 = jule::Slice<_1dc4e2e71_Range32>();
	jule::Int _field_latin_offset = jule::Int();


	_1dc4e2e71_RangeTable(jule::Slice<_1dc4e2e71_Range16> __param_r16, jule::Slice<_1dc4e2e71_Range32> __param_r32, jule::Int __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_1dc4e2e71_RangeTable(void) = default;

	inline bool operator==(_1dc4e2e71_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_1dc4e2e71_RangeTable _other) { return !this->operator==(_other); }


};


struct _1db7b8830_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::Int _field_w = jule::Int();
	jule::Str _field_vol_and_path = jule::Str();
	jule::Int _field_vol_len = jule::Int();


	_1db7b8830_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_1db7b8830_LazyBuff(void) = default;

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(_1db7b8830_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_1db7b8830_LazyBuff _other) { return !this->operator==(_other); }


};


struct _1db69ceea_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_1db6a27c4_Status> _field_stat = jule::Ptr<_1db6a27c4_Status>();


	_1db69ceea_DirEntry(jule::Str __param_name, jule::Ptr<_1db6a27c4_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_1db69ceea_DirEntry(void) = default;

	inline bool operator==(_1db69ceea_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_1db69ceea_DirEntry _other) { return !this->operator==(_other); }


};


struct _1db69ceea_Directory {
	

	_1db69ceea_Directory(void) = default;

	static inline jule::Exceptional<jule::Slice<jule::Ptr<_1db69ceea_DirEntry>>> _static_method_read(jule::Str);


	static inline jule::VoidExceptional _static_method_create(jule::Str);


	static inline jule::VoidExceptional _static_method_remove(jule::Str);


	inline bool operator==(_1db69ceea_Directory _other) { return true; }

	inline bool operator!=(_1db69ceea_Directory _other) { return !this->operator==(_other); }


};


struct _1db6a29e4_File {
	jule::Uintptr _field_handle = jule::Uintptr();


	_1db6a29e4_File(jule::Uintptr __param_handle): _field_handle(__param_handle) {}

	

	_1db6a29e4_File(void) = default;

	static inline jule::Ptr<_1db6a29e4_File> _static_method_new(jule::Uintptr);


	static inline jule::Exceptional<jule::Ptr<_1db6a29e4_File>> _static_method_create(jule::Str);


	static inline jule::Exceptional<jule::Slice<jule::U8>> _static_method_read(jule::Str);


	static inline jule::VoidExceptional _static_method_write(jule::Str,jule::Slice<jule::U8>,jule::Int);


	inline jule::Exceptional<jule::Int> _method_seek(jule::Int,jule::Int);


	inline jule::VoidExceptional _method_close(void);


	static inline jule::Exceptional<jule::Ptr<_1db6a29e4_File>> _static_method_open(jule::Str,jule::Int,jule::Int);


	static inline jule::VoidExceptional _static_method_remove(jule::Str);


	inline jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8>);


	inline jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8>);


	inline bool operator==(_1db6a29e4_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1db6a29e4_File _other) { return !this->operator==(_other); }


};


struct _1db6a27c4_Status {
	jule::Uint _field_mode = jule::Uint();
	jule::Uint _field_size = jule::Uint();


	_1db6a27c4_Status(jule::Uint __param_mode, jule::Uint __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_1db6a27c4_Status(void) = default;

	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	static inline jule::Exceptional<jule::Ptr<_1db6a27c4_Status>> _static_method_of(jule::Str);


	inline bool operator==(_1db6a27c4_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1db6a27c4_Status _other) { return !this->operator==(_other); }


};


struct _1dce5a696_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();


	_1dce5a696_Cmd(jule::Str __param_path, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_env): _field_path(__param_path), _field_args(__param_args), _field_env(__param_env) {}

	

	_1dce5a696_Cmd(void) = default;

	static inline jule::Ptr<_1dce5a696_Cmd> _static_method_new(jule::Str);


	inline jule::Exceptional<jule::Int> _method_spawn(void);


	inline jule::Exceptional<jule::Int> _method___spawn(void);


	inline bool operator==(_1dce5a696_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_1dce5a696_Cmd _other) { return !this->operator==(_other); }


};


struct _1db678789_Log {
	jule::Int _field_kind = 0LL;
	jule::Int _field_row = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();


	_1db678789_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_1db678789_Log(void) = default;

	inline bool operator==(_1db678789_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_1db678789_Log _other) { return !this->operator==(_other); }


};


struct _1dd05db0c_Token {
	jule::Ptr<_1dd05eba7_File> _field_file = jule::Ptr<_1dd05eba7_File>();
	jule::Int _field_row = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Str _field_kind = jule::Str();
	jule::Uint _field_id = 0LLU;


	_1dd05db0c_Token(jule::Ptr<_1dd05eba7_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1dd05db0c_Token(void) = default;

	inline jule::U8 _method_prec(void);


	inline bool operator==(_1dd05db0c_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1dd05db0c_Token _other) { return !this->operator==(_other); }


};


struct _1dd05eba7_File {
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Str _field__path = jule::Str();
	jule::Slice<_1dd05db0c_Token> _field__tokens = jule::Slice<_1dd05db0c_Token>();


	_1dd05eba7_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, jule::Slice<_1dd05db0c_Token> __param__tokens): _field_data(__param_data), _field__path(__param__path), _field__tokens(__param__tokens) {}

	

	_1dd05eba7_File(void) = default;

	inline jule::Bool _method_is_ok(void);


	inline void _method_fill(jule::Slice<jule::U8>);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline jule::Slice<_1dd05db0c_Token> _method_tokens(void);


	inline jule::Str _method_get_row(jule::Int);


	inline bool operator==(_1dd05eba7_File _other) {
		return 
			this->_field_data == _other._field_data &&
			this->_field__path == _other._field__path &&
			this->_field__tokens == _other._field__tokens;
	}

	inline bool operator!=(_1dd05eba7_File _other) { return !this->operator==(_other); }


};


struct _1dd0ed32d_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::Uint _field_id = 0LLU;


	_1dd0ed32d_KindPair(jule::Str __param_kind, jule::Uint __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1dd0ed32d_KindPair(void) = default;

	inline bool operator==(_1dd0ed32d_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1dd0ed32d_KindPair _other) { return !this->operator==(_other); }


};


struct _1dd0ed32d_Lex {
	jule::Slice<_1dd05db0c_Token> _field_tokens = jule::Slice<_1dd05db0c_Token>();
	jule::Ptr<_1dd05eba7_File> _field_file = jule::Ptr<_1dd05eba7_File>();
	jule::Int _field_pos = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Int _field_row = jule::Int();
	jule::Slice<_1db678789_Log> _field_errors = jule::Slice<_1db678789_Log>();


	_1dd0ed32d_Lex(jule::Slice<_1dd05db0c_Token> __param_tokens, jule::Ptr<_1dd05eba7_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_1db678789_Log> __param_errors): _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_1dd0ed32d_Lex(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_1dd05db0c_Token&,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>&);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_1dd05db0c_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>&);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>&);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>&,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>&);


	inline jule::Str _method_lex_str(void);


	inline jule::Bool _method_is_first_token_of_line(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>&,jule::Str,jule::Uint,_1dd05db0c_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_1dd05db0c_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>&,_1dd05db0c_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>&,_1dd05db0c_Token&);


	inline _1dd05db0c_Token _method_token(void);


	inline bool operator==(_1dd0ed32d_Lex _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1dd0ed32d_Lex _other) { return !this->operator==(_other); }


};


struct _1dd05b9c8_Ast {
	jule::Ptr<_1dd05eba7_File> _field_file = jule::Ptr<_1dd05eba7_File>();
	jule::Slice<jule::Ptr<_1dd05c765_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1dd05c765_Directive>>();
	jule::Slice<jule::Ptr<_1dd05c765_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1dd05c765_UseDecl>>();
	jule::Slice<jule::Ptr<_1dd05c765_Impl>> _field_impls = jule::Slice<jule::Ptr<_1dd05c765_Impl>>();
	jule::Slice<_1dd05c765_Node> _field_decls = jule::Slice<_1dd05c765_Node>();


	_1dd05b9c8_Ast(jule::Ptr<_1dd05eba7_File> __param_file, jule::Slice<jule::Ptr<_1dd05c765_Directive>> __param_top_directives, jule::Slice<jule::Ptr<_1dd05c765_UseDecl>> __param_use_decls, jule::Slice<jule::Ptr<_1dd05c765_Impl>> __param_impls, jule::Slice<_1dd05c765_Node> __param_decls): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_impls(__param_impls), _field_decls(__param_decls) {}

	

	_1dd05b9c8_Ast(void) = default;

	inline bool operator==(_1dd05b9c8_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_impls == _other._field_impls &&
			this->_field_decls == _other._field_decls;
	}

	inline bool operator!=(_1dd05b9c8_Ast _other) { return !this->operator==(_other); }


};


struct _1dd05c765_CommentGroup {
	jule::Slice<jule::Ptr<_1dd05c765_Comment>> _field_comments = jule::Slice<jule::Ptr<_1dd05c765_Comment>>();


	_1dd05c765_CommentGroup(jule::Slice<jule::Ptr<_1dd05c765_Comment>> __param_comments): _field_comments(__param_comments) {}

	

	_1dd05c765_CommentGroup(void) = default;

	inline bool operator==(_1dd05c765_CommentGroup _other) {
		return 
			this->_field_comments == _other._field_comments;
	}

	inline bool operator!=(_1dd05c765_CommentGroup _other) { return !this->operator==(_other); }


};


struct _1dd05c765_NamespaceTypeDecl {
	jule::Slice<_1dd05db0c_Token> _field_idents = jule::Slice<_1dd05db0c_Token>();
	jule::Ptr<_1dd05c765_IdentTypeDecl> _field_kind = jule::Ptr<_1dd05c765_IdentTypeDecl>();


	_1dd05c765_NamespaceTypeDecl(jule::Slice<_1dd05db0c_Token> __param_idents, jule::Ptr<_1dd05c765_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_1dd05c765_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1dd05c765_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dd05c765_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_SptrTypeDecl {
	jule::Ptr<_1dd05c765_TypeDecl> _field_elem = jule::Ptr<_1dd05c765_TypeDecl>();


	_1dd05c765_SptrTypeDecl(jule::Ptr<_1dd05c765_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1dd05c765_SptrTypeDecl(void) = default;

	inline bool operator==(_1dd05c765_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1dd05c765_SptrTypeDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_SlcTypeDecl {
	jule::Ptr<_1dd05c765_TypeDecl> _field_elem = jule::Ptr<_1dd05c765_TypeDecl>();


	_1dd05c765_SlcTypeDecl(jule::Ptr<_1dd05c765_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1dd05c765_SlcTypeDecl(void) = default;

	inline bool operator==(_1dd05c765_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1dd05c765_SlcTypeDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>();


	_1dd05c765_TupleTypeDecl(jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_1dd05c765_TupleTypeDecl(void) = default;

	inline bool operator==(_1dd05c765_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1dd05c765_TupleTypeDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_PtrTypeDecl {
	jule::Ptr<_1dd05c765_TypeDecl> _field_elem = jule::Ptr<_1dd05c765_TypeDecl>();


	_1dd05c765_PtrTypeDecl(jule::Ptr<_1dd05c765_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1dd05c765_PtrTypeDecl(void) = default;

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(_1dd05c765_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1dd05c765_PtrTypeDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_ArrTypeDecl {
	jule::Ptr<_1dd05c765_TypeDecl> _field_elem = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Ptr<_1dd05c765_Expr> _field_size = jule::Ptr<_1dd05c765_Expr>();


	_1dd05c765_ArrTypeDecl(jule::Ptr<_1dd05c765_TypeDecl> __param_elem, jule::Ptr<_1dd05c765_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_1dd05c765_ArrTypeDecl(void) = default;

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(_1dd05c765_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1dd05c765_ArrTypeDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_MapTypeDecl {
	jule::Ptr<_1dd05c765_TypeDecl> _field_key = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Ptr<_1dd05c765_TypeDecl> _field_val = jule::Ptr<_1dd05c765_TypeDecl>();


	_1dd05c765_MapTypeDecl(jule::Ptr<_1dd05c765_TypeDecl> __param_key, jule::Ptr<_1dd05c765_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1dd05c765_MapTypeDecl(void) = default;

	inline bool operator==(_1dd05c765_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1dd05c765_MapTypeDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_RetTypeDecl {
	jule::Ptr<_1dd05c765_TypeDecl> _field_kind = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Slice<_1dd05db0c_Token> _field_idents = jule::Slice<_1dd05db0c_Token>();


	_1dd05c765_RetTypeDecl(jule::Ptr<_1dd05c765_TypeDecl> __param_kind, jule::Slice<_1dd05db0c_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1dd05c765_RetTypeDecl(void) = default;

	inline bool operator==(_1dd05c765_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1dd05c765_RetTypeDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_TupleExpr {
	jule::Slice<jule::Ptr<_1dd05c765_Expr>> _field_expr = jule::Slice<jule::Ptr<_1dd05c765_Expr>>();


	_1dd05c765_TupleExpr(jule::Slice<jule::Ptr<_1dd05c765_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_1dd05c765_TupleExpr(void) = default;

	inline bool operator==(_1dd05c765_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dd05c765_TupleExpr _other) { return !this->operator==(_other); }


};


struct _1dd05c765_CastExpr {
	jule::Ptr<_1dd05c765_TypeDecl> _field_kind = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Any _field_expr = jule::Any();


	_1dd05c765_CastExpr(jule::Ptr<_1dd05c765_TypeDecl> __param_kind, jule::Any __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1dd05c765_CastExpr(void) = default;

	inline bool operator==(_1dd05c765_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dd05c765_CastExpr _other) { return !this->operator==(_other); }


};


struct _1dd05c765_StructLit {
	jule::Ptr<_1dd05c765_TypeDecl> _field_kind = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_1dd05c765_StructLit(jule::Ptr<_1dd05c765_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs): _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_1dd05c765_StructLit(void) = default;

	inline bool operator==(_1dd05c765_StructLit _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1dd05c765_StructLit _other) { return !this->operator==(_other); }


};


struct _1dd05c765_ScopeTree {
	jule::Ptr<_1dd05c765_ScopeTree> _field_parent = jule::Ptr<_1dd05c765_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_1dd05c765_ScopeTree(jule::Ptr<_1dd05c765_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1dd05c765_ScopeTree(void) = default;

	inline bool operator==(_1dd05c765_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1dd05c765_ScopeTree _other) { return !this->operator==(_other); }


};


struct _1dd05c765_Conditional {
	jule::Ptr<_1dd05c765_If> _field_head = jule::Ptr<_1dd05c765_If>();
	jule::Slice<jule::Ptr<_1dd05c765_If>> _field_tail = jule::Slice<jule::Ptr<_1dd05c765_If>>();
	jule::Ptr<_1dd05c765_Else> _field_default = jule::Ptr<_1dd05c765_Else>();


	_1dd05c765_Conditional(jule::Ptr<_1dd05c765_If> __param_head, jule::Slice<jule::Ptr<_1dd05c765_If>> __param_tail, jule::Ptr<_1dd05c765_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_1dd05c765_Conditional(void) = default;

	inline bool operator==(_1dd05c765_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1dd05c765_Conditional _other) { return !this->operator==(_other); }


};


struct _1dd05c765_Impl {
	jule::Ptr<_1dd05c765_TypeDecl> _field_base = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Ptr<_1dd05c765_TypeDecl> _field_dest = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Slice<jule::Ptr<_1dd05c765_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1dd05c765_FnDecl>>();
	jule::Slice<jule::Ptr<_1dd05c765_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1dd05c765_VarDecl>>();


	_1dd05c765_Impl(jule::Ptr<_1dd05c765_TypeDecl> __param_base, jule::Ptr<_1dd05c765_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_1dd05c765_FnDecl>> __param_methods, jule::Slice<jule::Ptr<_1dd05c765_VarDecl>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1dd05c765_Impl(void) = default;

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(_1dd05c765_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1dd05c765_Impl _other) { return !this->operator==(_other); }


};


struct _1dd1ec6b3_FloatInfo {
	jule::Uint _field_mantbits = jule::Uint();
	jule::Uint _field_expbits = jule::Uint();
	jule::Int _field_bias = jule::Int();


	_1dd1ec6b3_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_1dd1ec6b3_FloatInfo(void) = default;

	inline bool operator==(_1dd1ec6b3_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1dd1ec6b3_FloatInfo _other) { return !this->operator==(_other); }


};


struct _1dd1ec6b3_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::Int _field_nd = jule::Int();
	jule::Int _field_dp = jule::Int();
	jule::Bool _field_neg = jule::Bool();


	_1dd1ec6b3_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_1dd1ec6b3_DecimalSlice(void) = default;

	inline bool operator==(_1dd1ec6b3_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1dd1ec6b3_DecimalSlice _other) { return !this->operator==(_other); }


};


struct _1dd472b47_LeftCheat {
	jule::Int _field_delta = jule::Int();
	jule::Str _field_cutoff = jule::Str();


	_1dd472b47_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_1dd472b47_LeftCheat(void) = default;

	inline bool operator==(_1dd472b47_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1dd472b47_LeftCheat _other) { return !this->operator==(_other); }


};


struct _1dd472b47_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::Int _field_nd = jule::Int();
	jule::Int _field_dp = jule::Int();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();


	_1dd472b47_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_1dd472b47_Decimal(void) = default;

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_1dd1ec6b3_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(_1dd472b47_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1dd472b47_Decimal _other) { return !this->operator==(_other); }


};


struct _1dd0ba905_AnsiEscape {
	

	_1dd0ba905_AnsiEscape(void) = default;

	static inline void _static_method_reset(void);


	static inline void _static_method_print(jule::Str,jule::Str);


	inline bool operator==(_1dd0ba905_AnsiEscape _other) { return true; }

	inline bool operator!=(_1dd0ba905_AnsiEscape _other) { return !this->operator==(_other); }


};


struct _1dd0bac02_Logger {
	

	_1dd0bac02_Logger(void) = default;

	static inline void _static_method_log_flat(_1db678789_Log&);


	static inline void _static_method_log_error(_1db678789_Log&);


	static inline void _static_method_log(_1db678789_Log&);


	static inline void _static_method_print_logs(jule::Slice<_1db678789_Log>&);


	inline bool operator==(_1dd0bac02_Logger _other) { return true; }

	inline bool operator!=(_1dd0bac02_Logger _other) { return !this->operator==(_other); }


};


struct _1dd0be6b7_FileInfo {
	jule::Ptr<_1dd05b9c8_Ast> _field_ast = jule::Ptr<_1dd05b9c8_Ast>();
	jule::Slice<_1db678789_Log> _field_errors = jule::Slice<_1db678789_Log>();


	_1dd0be6b7_FileInfo(jule::Ptr<_1dd05b9c8_Ast> __param_ast, jule::Slice<_1db678789_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_1dd0be6b7_FileInfo(void) = default;

	inline bool operator==(_1dd0be6b7_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1dd0be6b7_FileInfo _other) { return !this->operator==(_other); }


};


struct _1dd0be6b7_PackageInfo {
	jule::Slice<jule::Ptr<_1dd0be6b7_FileInfo>> _field_files = jule::Slice<jule::Ptr<_1dd0be6b7_FileInfo>>();


	_1dd0be6b7_PackageInfo(jule::Slice<jule::Ptr<_1dd0be6b7_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_1dd0be6b7_PackageInfo(void) = default;

	inline bool operator==(_1dd0be6b7_PackageInfo _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1dd0be6b7_PackageInfo _other) { return !this->operator==(_other); }


};


struct _1dd229ca6_Stmt {
	jule::Slice<_1dd05db0c_Token> _field_tokens = jule::Slice<_1dd05db0c_Token>();
	jule::Bool _field_terminated = jule::Bool();


	_1dd229ca6_Stmt(jule::Slice<_1dd05db0c_Token> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_1dd229ca6_Stmt(void) = default;

	inline bool operator==(_1dd229ca6_Stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1dd229ca6_Stmt _other) { return !this->operator==(_other); }


};


struct _1dd229ca6_ScopeParser {
	jule::Ptr<_1ddb89cdc_Parser> _field_p = jule::Ptr<_1ddb89cdc_Parser>();
	jule::Ptr<_1dd05c765_ScopeTree> _field_s = jule::Ptr<_1dd05c765_ScopeTree>();
	jule::Slice<jule::Ptr<_1dd229ca6_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_1dd229ca6_Stmt>>();
	jule::Int _field_pos = jule::Int();


	_1dd229ca6_ScopeParser(jule::Ptr<_1ddb89cdc_Parser> __param_p, jule::Ptr<_1dd05c765_ScopeTree> __param_s, jule::Slice<jule::Ptr<_1dd229ca6_Stmt>> __param_stmts, jule::Int __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stmts(__param_stmts), _field_pos(__param_pos) {}

	

	_1dd229ca6_ScopeParser(void) = default;

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_1dd05db0c_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_insert_as_next(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd229ca6_Stmt> _method_next(void);


	inline jule::Ptr<_1dd05c765_ScopeTree> _method_build_scope(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_var_st(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_ret_st(jule::Slice<_1dd05db0c_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ptr<_1dd229ca6_Stmt>&);


	inline jule::Ptr<_1dd05c765_WhileKind> _method_build_while_iter_kind(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Slice<jule::Slice<_1dd05db0c_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_VarDecl> _method_build_range_kind_key(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Slice<jule::Ptr<_1dd05c765_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_1dd05db0c_Token>>&);


	inline void _method_setup_range_kind_keys_plain(jule::Ptr<_1dd05c765_RangeKind>&,jule::Slice<_1dd05db0c_Token>&);


	inline void _method_setup_range_kind_keys_explicit(jule::Ptr<_1dd05c765_RangeKind>&,jule::Slice<_1dd05db0c_Token>&);


	inline void _method_setup_range_kind_keys(jule::Ptr<_1dd05c765_RangeKind>&,jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_RangeKind> _method_build_range_iter_kind(jule::Slice<_1dd05db0c_Token>&,jule::Slice<_1dd05db0c_Token>&,_1dd05db0c_Token&);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_1dd05db0c_Token>&,_1dd05db0c_Token&);


	inline jule::Any _method_build_common_iter(jule::Slice<_1dd05db0c_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ptr<_1dd229ca6_Stmt>&);


	inline jule::Any _method_build_break_st(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_cont_st(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_If> _method_build_if(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_Else> _method_build_else(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_1dd05db0c_Token>);


	inline jule::Any _method_build_comment_st(_1dd05db0c_Token&);


	inline jule::Any _method_build_co_call_st(jule::Slice<_1dd05db0c_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_fall_st(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_1dd05db0c_Token>&);


	inline void _method_push_case_expr(jule::Slice<_1dd05db0c_Token>,_1dd05db0c_Token,jule::Bool,jule::Slice<jule::Ptr<_1dd05c765_Expr>>&);


	inline jule::Slice<jule::Ptr<_1dd05c765_Expr>> _method_build_case_exprs(jule::Slice<_1dd05db0c_Token>&,jule::Bool);


	inline jule::Ptr<_1dd05c765_ScopeTree> _method_build_case_scope(jule::Slice<_1dd05db0c_Token>&);


	inline std::tuple<jule::Ptr<_1dd05c765_Case>,jule::Bool> _method_build_case(jule::Slice<_1dd05db0c_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ptr<_1dd05c765_Case>>,jule::Ptr<_1dd05c765_Else>> _method_build_cases(jule::Slice<_1dd05db0c_Token>,jule::Bool);


	inline jule::Ptr<_1dd05c765_MatchCase> _method_build_match_case(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_ScopeTree> _method_build_scope_st(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_LabelSt> _method_build_label_st(jule::Slice<_1dd05db0c_Token>&);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1ddb61a2d_AssignInfo> _method_build_assign_info(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_AssignLeft> _method_build_assign_l(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Slice<jule::Ptr<_1dd05c765_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_1dd05db0c_Token>>&);


	inline std::tuple<jule::Ptr<_1dd05c765_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_1dd05db0c_Token>&);


	inline std::tuple<jule::Ptr<_1dd05c765_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_1dd05db0c_Token>);


	inline std::tuple<jule::Ptr<_1dd05c765_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_use_expr(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_st(jule::Ptr<_1dd229ca6_Stmt>&);


	inline void _method_build(jule::Slice<_1dd05db0c_Token>&,jule::Ptr<_1dd05c765_ScopeTree>&);


	inline bool operator==(_1dd229ca6_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1dd229ca6_ScopeParser _other) { return !this->operator==(_other); }


};


struct _1ddb659bb_CallData {
	jule::Slice<_1dd05db0c_Token> _field_expr_tokens = jule::Slice<_1dd05db0c_Token>();
	jule::Slice<_1dd05db0c_Token> _field_args_tokens = jule::Slice<_1dd05db0c_Token>();
	jule::Slice<_1dd05db0c_Token> _field_generics_tokens = jule::Slice<_1dd05db0c_Token>();


	_1ddb659bb_CallData(jule::Slice<_1dd05db0c_Token> __param_expr_tokens, jule::Slice<_1dd05db0c_Token> __param_args_tokens, jule::Slice<_1dd05db0c_Token> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_1ddb659bb_CallData(void) = default;

	inline bool operator==(_1ddb659bb_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_1ddb659bb_CallData _other) { return !this->operator==(_other); }


};


struct _1ddb659bb_ExprBuilder {
	jule::Ptr<_1ddb89cdc_Parser> _field_p = jule::Ptr<_1ddb89cdc_Parser>();


	_1ddb659bb_ExprBuilder(jule::Ptr<_1ddb89cdc_Parser> __param_p): _field_p(__param_p) {}

	

	_1ddb659bb_ExprBuilder(void) = default;

	inline void _method_push_err(_1dd05db0c_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_1dd05c765_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_1dd05db0c_Token>>&);


	inline jule::Ptr<_1dd05c765_LitExpr> _method_build_lit(_1dd05db0c_Token);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_primitive_type(_1dd05db0c_Token&);


	inline jule::Any _method_build_single(_1dd05db0c_Token);


	inline jule::Ptr<_1dd05c765_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_UnaryExpr> _method_build_unary(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_type(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_sub_ident(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_VariadicExpr> _method_build_variadic(jule::Slice<_1dd05db0c_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_CastExpr> _method_try_build_cast(jule::Slice<_1dd05db0c_Token>&);


	inline void _method_push_arg(jule::Slice<jule::Ptr<_1dd05c765_Expr>>&,jule::Slice<_1dd05db0c_Token>,_1dd05db0c_Token);


	inline jule::Slice<jule::Ptr<_1dd05c765_Expr>> _method_build_args(jule::Slice<_1dd05db0c_Token>);


	inline jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> _method_build_call_generics(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_FnCallExpr> _method_build_fn_call(_1dd05db0c_Token&,jule::Ptr<_1ddb659bb_CallData>&);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_FnDecl> _method_build_anon_fn(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_unsafe(jule::Slice<_1dd05db0c_Token>&);


	inline void _method_push_range_lit_part(jule::Slice<_1dd05db0c_Token>,_1dd05db0c_Token,jule::Slice<jule::Slice<_1dd05db0c_Token>>&);


	inline jule::Slice<jule::Slice<_1dd05db0c_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_1dd05db0c_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_StructLit> _method_build_typed_struct_literal(jule::Slice<_1dd05db0c_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_BraceLit> _method_build_brace_lit(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_brace_range(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Slice<jule::Slice<_1dd05db0c_Token>> _method_get_enumerable_parts(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_SliceExpr> _method_build_slice(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_IndexingExpr> _method_build_indexing(jule::Slice<_1dd05db0c_Token>,jule::Slice<_1dd05db0c_Token>,_1dd05db0c_Token);


	inline jule::Ptr<_1dd05c765_SlicingExpr> _method_build_slicing(jule::Slice<_1dd05db0c_Token>&,jule::Slice<_1dd05db0c_Token>&,jule::Int&,_1dd05db0c_Token&);


	inline jule::Any _method_build_bracket_range(jule::Slice<_1dd05db0c_Token>);


	inline jule::Any _method_build_ternary(jule::Slice<_1dd05db0c_Token>);


	inline jule::Any _method_build_data(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_BinopExpr> _method_build_binop(jule::Slice<_1dd05db0c_Token>&,jule::Int);


	inline jule::Any _method_build(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Any _method_build_kind(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_Expr> _method_build_from_tokens(jule::Slice<_1dd05db0c_Token>);


	inline bool operator==(_1ddb659bb_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1ddb659bb_ExprBuilder _other) { return !this->operator==(_other); }


};


struct _1ddb89cdc_Parser {
	jule::Ptr<_1ddb89cdc_Parser> self;

	jule::Ptr<_1dd05b9c8_Ast> _field_ast = jule::Ptr<_1dd05b9c8_Ast>();
	jule::Slice<jule::Ptr<_1dd05c765_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd05c765_Directive>>();
	jule::Ptr<_1dd05c765_CommentGroup> _field_comment_group = jule::Ptr<_1dd05c765_CommentGroup>();
	jule::Slice<_1db678789_Log> _field_errors = jule::Slice<_1db678789_Log>();


	_1ddb89cdc_Parser(jule::Ptr<_1dd05b9c8_Ast> __param_ast, jule::Slice<jule::Ptr<_1dd05c765_Directive>> __param_directives, jule::Ptr<_1dd05c765_CommentGroup> __param_comment_group, jule::Slice<_1db678789_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_comment_group(__param_comment_group), _field_errors(__param_errors) {
		this->self = jule::Ptr<_1ddb89cdc_Parser>::make(this, nullptr);

	}

	~_1ddb89cdc_Parser(void) { this->self.ref = nullptr; }

	_1ddb89cdc_Parser(void) { this->self = jule::Ptr<_1ddb89cdc_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_1dd05db0c_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_1dd05c765_Expr> _method_build_expr(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_Directive> _method_build_directive(jule::Slice<_1dd05db0c_Token>);


	inline void _method_push_directive(jule::Ptr<_1dd05c765_Directive>);


	inline jule::Ptr<_1dd05c765_ScopeTree> _method_build_scope(jule::Slice<_1dd05db0c_Token>&);


	inline std::tuple<jule::Ptr<_1dd05c765_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_1dd05db0c_Token>&,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ptr<_1dd05c765_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_1dd05db0c_Token>&,jule::Int*,jule::Bool);


	inline jule::Ptr<_1dd05c765_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_1dd05db0c_Token>&);


	inline void _method_build_var_type_and_expr(jule::Ptr<_1dd05c765_VarDecl>&,jule::Slice<_1dd05db0c_Token>&);


	inline void _method_build_var_common(jule::Ptr<_1dd05c765_VarDecl>&,jule::Slice<_1dd05db0c_Token>);


	inline void _method_build_var_begin(jule::Ptr<_1dd05c765_VarDecl>&,jule::Ptr<jule::Int>,jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_VarDecl> _method_build_var(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_GenericDecl> _method_build_generic(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> _method_build_generics(jule::Slice<_1dd05db0c_Token>&,_1dd05db0c_Token&);


	inline jule::Ptr<_1dd05c765_ParamDecl> _method_build_self_param(jule::Slice<_1dd05db0c_Token>);


	inline void _method_param_type_begin(jule::Ptr<_1dd05c765_ParamDecl>&,jule::Int&,jule::Slice<_1dd05db0c_Token>&);


	inline void _method_build_param_type(jule::Ptr<_1dd05c765_ParamDecl>&,jule::Slice<_1dd05db0c_Token>&);


	inline void _method_param_body_id(jule::Ptr<_1dd05c765_ParamDecl>,_1dd05db0c_Token);


	inline void _method_build_param_body(jule::Ptr<_1dd05c765_ParamDecl>&,jule::Ptr<jule::Int>,jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_ParamDecl> _method_build_param(jule::Slice<_1dd05db0c_Token>);


	inline void _method_check_params(jule::Slice<jule::Ptr<_1dd05c765_ParamDecl>>&);


	inline jule::Slice<jule::Ptr<_1dd05c765_ParamDecl>> _method_build_params(jule::Slice<_1dd05db0c_Token>&,jule::Bool);


	inline std::tuple<jule::Ptr<_1dd05c765_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_1dd05db0c_Token>&,jule::Int&);


	inline std::tuple<jule::Ptr<_1dd05c765_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_1dd05db0c_Token>&,jule::Int&);


	inline jule::Ptr<_1dd05c765_FnDecl> _method_build_fn_prototype(jule::Slice<_1dd05db0c_Token>&,jule::Int&,jule::Bool);


	inline jule::Ptr<_1dd05c765_FnDecl> _method_build_fn(jule::Slice<_1dd05db0c_Token>&,jule::Bool,jule::Bool);


	inline jule::Slice<_1dd05db0c_Token> _method_get_use_decl_selectors(jule::Slice<_1dd05db0c_Token>);


	inline void _method_build_cpp_use_decl(jule::Ptr<_1dd05c765_UseDecl>&,jule::Slice<_1dd05db0c_Token>&);


	inline void _method_build_std_use_decl(jule::Ptr<_1dd05c765_UseDecl>&,jule::Slice<_1dd05db0c_Token>);


	inline void _method_build_ident_use_decl(jule::Ptr<_1dd05c765_UseDecl>&,jule::Slice<_1dd05db0c_Token>);


	inline void _method_parse_use_decl(jule::Ptr<_1dd05c765_UseDecl>&,jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_UseDecl> _method_build_use_decl(jule::Slice<_1dd05db0c_Token>,jule::Bool);


	inline jule::Ptr<_1dd05c765_Expr> _method_build_enum_item_expr(jule::Ptr<jule::Int>,jule::Slice<_1dd05db0c_Token>&);


	inline jule::Slice<jule::Ptr<_1dd05c765_EnumItemDecl>> _method_build_enum_items(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_EnumDecl> _method_build_enum_decl(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_FieldDecl> _method_build_field(jule::Slice<_1dd05db0c_Token>);


	inline jule::Slice<jule::Ptr<_1dd05c765_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_StructDecl> _method_build_struct_decl(jule::Slice<_1dd05db0c_Token>&);


	inline void _method_check_method_receiver(jule::Ptr<_1dd05c765_FnDecl>&);


	inline jule::Slice<jule::Ptr<_1dd05c765_FnDecl>> _method_build_trait_methods(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_TraitDecl> _method_build_trait_decl(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_FnDecl> _method_build_cpp_link_fn(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_VarDecl> _method_build_cpp_link_var(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_StructDecl> _method_build_cpp_link_struct(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_1dd05db0c_Token>);


	inline jule::Ptr<_1dd05c765_UseDecl> _method_build_cpp_link_use(jule::Slice<_1dd05db0c_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_FnDecl> _method_get_method(jule::Slice<_1dd05db0c_Token>&);


	inline void _method_parse_impl_body(jule::Ptr<_1dd05c765_Impl>&,jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_Impl> _method_build_impl(jule::Slice<_1dd05db0c_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_1dd05db0c_Token>&);


	inline void _method_check_comment_group(_1dd05c765_Node&);


	inline void _method_check_directive(_1dd05c765_Node&);


	inline void _method_apply_fn_meta(jule::Ptr<_1dd05c765_FnDecl>&,jule::Bool);


	inline void _method_apply_meta(_1dd05c765_Node&,jule::Bool);


	inline void _method_check_use_decl(_1dd05c765_Node&);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_1dd05db0c_Token>);


	inline _1dd05c765_Node _method_parse_node(jule::Slice<_1dd05db0c_Token>&);


	inline void _method_append_node(jule::Slice<_1dd05db0c_Token>&);


	inline void _method_remove_range(jule::Int,jule::Str,jule::Slice<_1dd05db0c_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_wrong_order_close_err(_1dd05db0c_Token&,jule::Slice<_1dd05db0c_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_range_close(_1dd05db0c_Token,jule::Str,jule::Slice<_1dd05db0c_Token>&,jule::Slice<jule::Int>&);


	inline void _method_check_ranges(jule::Slice<_1dd05db0c_Token>&);


	inline void _method_parse(jule::Ptr<_1dd05eba7_File>&);


	inline bool operator==(_1ddb89cdc_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_comment_group == _other._field_comment_group &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1ddb89cdc_Parser _other) { return !this->operator==(_other); }


};


struct _1ddc59010_TypeBuilder {
	jule::Ptr<_1ddb89cdc_Parser> _field_p = jule::Ptr<_1ddb89cdc_Parser>();
	jule::Slice<_1dd05db0c_Token> _field_tokens = jule::Slice<_1dd05db0c_Token>();
	jule::Int* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();


	_1ddc59010_TypeBuilder(jule::Ptr<_1ddb89cdc_Parser> __param_p, jule::Slice<_1dd05db0c_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_1ddc59010_TypeBuilder(void) = default;

	inline void _method_push_err(_1dd05db0c_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_prim(void);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_1dd05db0c_Token>> _method_ident_generics(void);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_ident(void);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_fn(void);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_ptr(void);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_sptr(void);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_op(void);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_slc(void);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_arr(void);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_map(jule::Int,jule::Slice<_1dd05db0c_Token>&);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_build_enumerable(void);


	inline jule::Ptr<_1dd05c765_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ptr<_1dd05c765_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(_1ddc59010_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1ddc59010_TypeBuilder _other) { return !this->operator==(_other); }


};


struct _1a64669ca_Const {
	jule::Any _field_data = jule::Any();


	_1a64669ca_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_1a64669ca_Const(void) = default;

	static inline jule::Ptr<_1a64669ca_Const> _static_method_new_i64(jule::I64);


	static inline jule::Ptr<_1a64669ca_Const> _static_method_new_u64(jule::U64);


	static inline jule::Ptr<_1a64669ca_Const> _static_method_new_bool(jule::Bool);


	static inline jule::Ptr<_1a64669ca_Const> _static_method_new_str(jule::Str);


	static inline jule::Ptr<_1a64669ca_Const> _static_method_new_f64(jule::F64);


	static inline jule::Ptr<_1a64669ca_Const> _static_method_new_nil(void);


	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_1a64669ca_Const);


	inline jule::Bool _method_and(_1a64669ca_Const);


	inline jule::Bool _method_or(_1a64669ca_Const);


	inline jule::Bool _method_eq(_1a64669ca_Const);


	inline jule::Bool _method_lt(_1a64669ca_Const);


	inline jule::Bool _method_lt_eq(_1a64669ca_Const);


	inline jule::Bool _method_gt(_1a64669ca_Const);


	inline jule::Bool _method_gt_eq(_1a64669ca_Const);


	inline jule::Bool _method_add(_1a64669ca_Const);


	inline jule::Bool _method_sub(_1a64669ca_Const);


	inline jule::Bool _method_mul(_1a64669ca_Const);


	inline jule::Bool _method_div(_1a64669ca_Const);


	inline jule::Bool _method_mod(_1a64669ca_Const);


	inline jule::Bool _method_bitwise_and(_1a64669ca_Const);


	inline jule::Bool _method_bitwise_or(_1a64669ca_Const);


	inline jule::Bool _method_xor(_1a64669ca_Const);


	inline jule::Bool _method_lshift(_1a64669ca_Const);


	inline jule::Bool _method_rshift(_1a64669ca_Const);


	inline bool operator==(_1a64669ca_Const _other) { return this->_method_eq(_other); }

	inline bool operator!=(_1a64669ca_Const _other) { return !this->operator==(_other); }

	inline bool operator>(_1a64669ca_Const _other) { return this->_method_gt(_other); }

	inline bool operator>=(_1a64669ca_Const _other) { return this->_method_gt_eq(_other); }

	inline bool operator<(_1a64669ca_Const _other) { return this->_method_lt(_other); }

	inline bool operator<=(_1a64669ca_Const _other) { return this->_method_lt_eq(_other); }


};


struct _1a665a62a_FileStream: public _1a665b3a6_Reader,public _1a665b3a6_Writer,public _1a665b3a6_Stream {
	jule::Ptr<_1db6a29e4_File> _field_buff = jule::Ptr<_1db6a29e4_File>();


	_1a665a62a_FileStream(jule::Ptr<_1db6a29e4_File> __param_buff): _field_buff(__param_buff) {}

	

	_1a665a62a_FileStream(void) = default;

	static inline jule::Ptr<_1a665a62a_FileStream> _static_method_new(jule::Ptr<_1db6a29e4_File>);


	inline jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8>);


	inline jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8>);


	inline jule::Exceptional<jule::Slice<jule::U8>> _method_read_line(void);


	inline bool operator==(_1a665a62a_FileStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1a665a62a_FileStream _other) { return !this->operator==(_other); }


};


struct _1a6666944_ByteStream: public _1a665b3a6_Reader,public _1a665b3a6_Writer,public _1a665b3a6_Stream {
	jule::Int _field_pos = jule::Int();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();


	_1a6666944_ByteStream(jule::Int __param_pos, jule::Slice<jule::U8> __param_buff): _field_pos(__param_pos), _field_buff(__param_buff) {}

	

	_1a6666944_ByteStream(void) = default;

	inline jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8>);


	inline jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8>);


	static inline jule::Ptr<_1a6666944_ByteStream> _static_method_new(void);


	inline jule::Bool _method_data(void);


	inline void _method_fit(void);


	inline bool operator==(_1a6666944_ByteStream _other) {
		return 
			this->_field_pos == _other._field_pos &&
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1a6666944_ByteStream _other) { return !this->operator==(_other); }


};


struct _1a66a95ad_Scanner {
	jule::Trait<_1a665b3a6_Reader> _field_r = jule::Trait<_1a665b3a6_Reader>();
	jule::Slice<jule::U8> _field_b = jule::Slice<jule::U8>();


	_1a66a95ad_Scanner(jule::Trait<_1a665b3a6_Reader> __param_r, jule::Slice<jule::U8> __param_b): _field_r(__param_r), _field_b(__param_b) {}

	

	_1a66a95ad_Scanner(void) = default;

	static inline jule::Ptr<_1a66a95ad_Scanner> _static_method_new(jule::Trait<_1a665b3a6_Reader>);


	static inline jule::Ptr<_1a66a95ad_Scanner> _static_method_newf(jule::Ptr<_1db6a29e4_File>);


	inline void _method_reset(void);


	inline jule::Slice<jule::U8> _method_bytes(void);


	inline jule::Str _method_text(void);


	inline jule::Exceptional<jule::Bool> _method_scan(void);


	inline bool operator==(_1a66a95ad_Scanner _other) {
		return 
			this->_field_r == _other._field_r &&
			this->_field_b == _other._field_b;
	}

	inline bool operator!=(_1a66a95ad_Scanner _other) { return !this->operator==(_other); }


};


struct _1dd0be530_OperatorMap {
	jule::Ptr<_1dded9702_Fn> _field_eq = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_gt = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_gt_eq = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_lt = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_lt_eq = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_shl = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_shr = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_add = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_sub = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_div = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_mul = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_mod = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_bit_and = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_bit_or = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_bit_xor = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_neg = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_pos = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_bit_not = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_add_assign = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_sub_assign = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_div_assign = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_mul_assign = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_mod_assign = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_shl_assign = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_shr_assign = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_bit_or_assign = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_bit_and_assign = jule::Ptr<_1dded9702_Fn>();
	jule::Ptr<_1dded9702_Fn> _field_bit_xor_assign = jule::Ptr<_1dded9702_Fn>();


	_1dd0be530_OperatorMap(jule::Ptr<_1dded9702_Fn> __param_eq, jule::Ptr<_1dded9702_Fn> __param_gt, jule::Ptr<_1dded9702_Fn> __param_gt_eq, jule::Ptr<_1dded9702_Fn> __param_lt, jule::Ptr<_1dded9702_Fn> __param_lt_eq, jule::Ptr<_1dded9702_Fn> __param_shl, jule::Ptr<_1dded9702_Fn> __param_shr, jule::Ptr<_1dded9702_Fn> __param_add, jule::Ptr<_1dded9702_Fn> __param_sub, jule::Ptr<_1dded9702_Fn> __param_div, jule::Ptr<_1dded9702_Fn> __param_mul, jule::Ptr<_1dded9702_Fn> __param_mod, jule::Ptr<_1dded9702_Fn> __param_bit_and, jule::Ptr<_1dded9702_Fn> __param_bit_or, jule::Ptr<_1dded9702_Fn> __param_bit_xor, jule::Ptr<_1dded9702_Fn> __param_neg, jule::Ptr<_1dded9702_Fn> __param_pos, jule::Ptr<_1dded9702_Fn> __param_bit_not, jule::Ptr<_1dded9702_Fn> __param_add_assign, jule::Ptr<_1dded9702_Fn> __param_sub_assign, jule::Ptr<_1dded9702_Fn> __param_div_assign, jule::Ptr<_1dded9702_Fn> __param_mul_assign, jule::Ptr<_1dded9702_Fn> __param_mod_assign, jule::Ptr<_1dded9702_Fn> __param_shl_assign, jule::Ptr<_1dded9702_Fn> __param_shr_assign, jule::Ptr<_1dded9702_Fn> __param_bit_or_assign, jule::Ptr<_1dded9702_Fn> __param_bit_and_assign, jule::Ptr<_1dded9702_Fn> __param_bit_xor_assign): _field_eq(__param_eq), _field_gt(__param_gt), _field_gt_eq(__param_gt_eq), _field_lt(__param_lt), _field_lt_eq(__param_lt_eq), _field_shl(__param_shl), _field_shr(__param_shr), _field_add(__param_add), _field_sub(__param_sub), _field_div(__param_div), _field_mul(__param_mul), _field_mod(__param_mod), _field_bit_and(__param_bit_and), _field_bit_or(__param_bit_or), _field_bit_xor(__param_bit_xor), _field_neg(__param_neg), _field_pos(__param_pos), _field_bit_not(__param_bit_not), _field_add_assign(__param_add_assign), _field_sub_assign(__param_sub_assign), _field_div_assign(__param_div_assign), _field_mul_assign(__param_mul_assign), _field_mod_assign(__param_mod_assign), _field_shl_assign(__param_shl_assign), _field_shr_assign(__param_shr_assign), _field_bit_or_assign(__param_bit_or_assign), _field_bit_and_assign(__param_bit_and_assign), _field_bit_xor_assign(__param_bit_xor_assign) {}

	

	_1dd0be530_OperatorMap(void) = default;

	inline bool operator==(_1dd0be530_OperatorMap _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1dd0be530_OperatorMap _other) { return !this->operator==(_other); }


};


struct _1dd0be530_Operators {
	jule::Ptr<_1dded9702_FnIns> _field_eq = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_gt = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_gt_eq = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_lt = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_lt_eq = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_shl = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_shr = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_add = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_sub = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_div = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_mul = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_mod = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_bit_and = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_bit_or = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_bit_xor = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_neg = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_pos = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_bit_not = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_add_assign = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_sub_assign = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_div_assign = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_mul_assign = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_mod_assign = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_shl_assign = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_shr_assign = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_bit_or_assign = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_bit_and_assign = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_FnIns> _field_bit_xor_assign = jule::Ptr<_1dded9702_FnIns>();


	_1dd0be530_Operators(jule::Ptr<_1dded9702_FnIns> __param_eq, jule::Ptr<_1dded9702_FnIns> __param_gt, jule::Ptr<_1dded9702_FnIns> __param_gt_eq, jule::Ptr<_1dded9702_FnIns> __param_lt, jule::Ptr<_1dded9702_FnIns> __param_lt_eq, jule::Ptr<_1dded9702_FnIns> __param_shl, jule::Ptr<_1dded9702_FnIns> __param_shr, jule::Ptr<_1dded9702_FnIns> __param_add, jule::Ptr<_1dded9702_FnIns> __param_sub, jule::Ptr<_1dded9702_FnIns> __param_div, jule::Ptr<_1dded9702_FnIns> __param_mul, jule::Ptr<_1dded9702_FnIns> __param_mod, jule::Ptr<_1dded9702_FnIns> __param_bit_and, jule::Ptr<_1dded9702_FnIns> __param_bit_or, jule::Ptr<_1dded9702_FnIns> __param_bit_xor, jule::Ptr<_1dded9702_FnIns> __param_neg, jule::Ptr<_1dded9702_FnIns> __param_pos, jule::Ptr<_1dded9702_FnIns> __param_bit_not, jule::Ptr<_1dded9702_FnIns> __param_add_assign, jule::Ptr<_1dded9702_FnIns> __param_sub_assign, jule::Ptr<_1dded9702_FnIns> __param_div_assign, jule::Ptr<_1dded9702_FnIns> __param_mul_assign, jule::Ptr<_1dded9702_FnIns> __param_mod_assign, jule::Ptr<_1dded9702_FnIns> __param_shl_assign, jule::Ptr<_1dded9702_FnIns> __param_shr_assign, jule::Ptr<_1dded9702_FnIns> __param_bit_or_assign, jule::Ptr<_1dded9702_FnIns> __param_bit_and_assign, jule::Ptr<_1dded9702_FnIns> __param_bit_xor_assign): _field_eq(__param_eq), _field_gt(__param_gt), _field_gt_eq(__param_gt_eq), _field_lt(__param_lt), _field_lt_eq(__param_lt_eq), _field_shl(__param_shl), _field_shr(__param_shr), _field_add(__param_add), _field_sub(__param_sub), _field_div(__param_div), _field_mul(__param_mul), _field_mod(__param_mod), _field_bit_and(__param_bit_and), _field_bit_or(__param_bit_or), _field_bit_xor(__param_bit_xor), _field_neg(__param_neg), _field_pos(__param_pos), _field_bit_not(__param_bit_not), _field_add_assign(__param_add_assign), _field_sub_assign(__param_sub_assign), _field_div_assign(__param_div_assign), _field_mul_assign(__param_mul_assign), _field_mod_assign(__param_mod_assign), _field_shl_assign(__param_shl_assign), _field_shr_assign(__param_shr_assign), _field_bit_or_assign(__param_bit_or_assign), _field_bit_and_assign(__param_bit_and_assign), _field_bit_xor_assign(__param_bit_xor_assign) {}

	

	_1dd0be530_Operators(void) = default;

	inline bool operator==(_1dd0be530_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1dd0be530_Operators _other) { return !this->operator==(_other); }


};


struct _1dd0be530_FieldIns {
	jule::Ptr<_1dd0be530_Field> _field_decl = jule::Ptr<_1dd0be530_Field>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_kind = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Ptr<_1a94c333b_Data> _field_default = jule::Ptr<_1a94c333b_Data>();


	_1dd0be530_FieldIns(jule::Ptr<_1dd0be530_Field> __param_decl, jule::Ptr<_1a5e40a26_TypeKind> __param_kind, jule::Ptr<_1a94c333b_Data> __param_default): _field_decl(__param_decl), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1dd0be530_FieldIns(void) = default;

	inline bool operator==(_1dd0be530_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1dd0be530_FieldIns _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_OperandExprModel {
	jule::Ptr<_1a5e40a26_TypeKind> _field_kind = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Any _field_model = jule::Any();


	_1ddb3c047_OperandExprModel(jule::Ptr<_1a5e40a26_TypeKind> __param_kind, jule::Any __param_model): _field_kind(__param_kind), _field_model(__param_model) {}

	

	_1ddb3c047_OperandExprModel(void) = default;

	inline bool operator==(_1ddb3c047_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1ddb3c047_OperandExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_StructArgExprModel {
	jule::Ptr<_1dd0be530_FieldIns> _field_field = jule::Ptr<_1dd0be530_FieldIns>();
	jule::Any _field_expr = jule::Any();


	_1ddb3c047_StructArgExprModel(jule::Ptr<_1dd0be530_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1ddb3c047_StructArgExprModel(void) = default;

	inline bool operator==(_1ddb3c047_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ddb3c047_StructArgExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_AllocStructLitExprModel {
	jule::Ptr<_1ddb3c047_StructLitExprModel> _field_lit = jule::Ptr<_1ddb3c047_StructLitExprModel>();


	_1ddb3c047_AllocStructLitExprModel(jule::Ptr<_1ddb3c047_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_1ddb3c047_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1ddb3c047_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1ddb3c047_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_SliceExprModel {
	jule::Ptr<_1a5e40a26_TypeKind> _field_elem_kind = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1ddb3c047_SliceExprModel(jule::Ptr<_1a5e40a26_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_1ddb3c047_SliceExprModel(void) = default;

	inline bool operator==(_1ddb3c047_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1ddb3c047_SliceExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_AnonFnExprModel {
	jule::Ptr<_1dded9702_FnIns> _field_func = jule::Ptr<_1dded9702_FnIns>();
	jule::Bool _field_global = jule::Bool();


	_1ddb3c047_AnonFnExprModel(jule::Ptr<_1dded9702_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_1ddb3c047_AnonFnExprModel(void) = default;

	inline bool operator==(_1ddb3c047_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1ddb3c047_AnonFnExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();


	_1ddb3c047_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1ddb3c047_KeyValPairExprModel(void) = default;

	inline bool operator==(_1ddb3c047_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1ddb3c047_KeyValPairExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_MapExprModel {
	jule::Ptr<_1a5e40a26_TypeKind> _field_key_kind = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_val_kind = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Slice<jule::Ptr<_1ddb3c047_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1ddb3c047_KeyValPairExprModel>>();


	_1ddb3c047_MapExprModel(jule::Ptr<_1a5e40a26_TypeKind> __param_key_kind, jule::Ptr<_1a5e40a26_TypeKind> __param_val_kind, jule::Slice<jule::Ptr<_1ddb3c047_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_1ddb3c047_MapExprModel(void) = default;

	inline bool operator==(_1ddb3c047_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1ddb3c047_MapExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_StructSubIdentExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a5e40a26_TypeKind> _field_expr_kind = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Ptr<_1dded9702_FnIns> _field_method = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dd0be530_FieldIns> _field_field = jule::Ptr<_1dd0be530_FieldIns>();


	_1ddb3c047_StructSubIdentExprModel(jule::Any __param_expr, jule::Ptr<_1a5e40a26_TypeKind> __param_expr_kind, jule::Ptr<_1dded9702_FnIns> __param_method, jule::Ptr<_1dd0be530_FieldIns> __param_field): _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_1ddb3c047_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1ddb3c047_StructSubIdentExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ddb3c047_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_StructStaticIdentExprModel {
	jule::Ptr<_1dd0be530_StructIns> _field_structure = jule::Ptr<_1dd0be530_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1dded9702_FnIns> _field_method = jule::Ptr<_1dded9702_FnIns>();


	_1ddb3c047_StructStaticIdentExprModel(jule::Ptr<_1dd0be530_StructIns> __param_structure, jule::Any __param_expr, jule::Ptr<_1dded9702_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_1ddb3c047_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1ddb3c047_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1ddb3c047_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_ArrayExprModel {
	jule::Ptr<_1a5e40a26_Arr> _field_kind = jule::Ptr<_1a5e40a26_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1ddb3c047_ArrayExprModel(jule::Ptr<_1a5e40a26_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_1ddb3c047_ArrayExprModel(void) = default;

	inline bool operator==(_1ddb3c047_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1ddb3c047_ArrayExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();


	_1ddb3c047_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1ddb3c047_CommonIdentExprModel(void) = default;

	inline bool operator==(_1ddb3c047_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ddb3c047_CommonIdentExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_CommonSubIdentExprModel {
	jule::Ptr<_1a5e40a26_TypeKind> _field_expr_kind = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_ident = jule::Str();


	_1ddb3c047_CommonSubIdentExprModel(jule::Ptr<_1a5e40a26_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1ddb3c047_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1ddb3c047_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ddb3c047_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_TupleExprModel {
	jule::Slice<jule::Ptr<_1a94c333b_Data>> _field_datas = jule::Slice<jule::Ptr<_1a94c333b_Data>>();


	_1ddb3c047_TupleExprModel(jule::Slice<jule::Ptr<_1a94c333b_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_1ddb3c047_TupleExprModel(void) = default;

	inline bool operator==(_1ddb3c047_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1ddb3c047_TupleExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1ddb3c047_BuiltinOutCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1ddb3c047_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1ddb3c047_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1ddb3c047_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1ddb3c047_BuiltinOutlnCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1ddb3c047_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1ddb3c047_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1ddb3c047_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1ddb3c047_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ddb3c047_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1ddb3c047_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ddb3c047_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_BuiltinNewCallExprModel {
	jule::Ptr<_1a5e40a26_TypeKind> _field_kind = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Any _field_init = jule::Any();


	_1ddb3c047_BuiltinNewCallExprModel(jule::Ptr<_1a5e40a26_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_1ddb3c047_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1ddb3c047_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1ddb3c047_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_BuiltinMakeCallExprModel {
	jule::Ptr<_1a5e40a26_TypeKind> _field_kind = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();


	_1ddb3c047_BuiltinMakeCallExprModel(jule::Ptr<_1a5e40a26_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_1ddb3c047_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1ddb3c047_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1ddb3c047_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();


	_1ddb3c047_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_1ddb3c047_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1ddb3c047_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1ddb3c047_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_BuiltinErrorCallExprModel {
	jule::Ptr<_1dded9702_FnIns> _field_func = jule::Ptr<_1dded9702_FnIns>();
	jule::Any _field_err = jule::Any();


	_1ddb3c047_BuiltinErrorCallExprModel(jule::Ptr<_1dded9702_FnIns> __param_func, jule::Any __param_err): _field_func(__param_func), _field_err(__param_err) {}

	

	_1ddb3c047_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1ddb3c047_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1ddb3c047_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_SizeofExprModel {
	jule::Any _field_expr = jule::Any();


	_1ddb3c047_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ddb3c047_SizeofExprModel(void) = default;

	inline bool operator==(_1ddb3c047_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ddb3c047_SizeofExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_AlignofExprModel {
	jule::Any _field_expr = jule::Any();


	_1ddb3c047_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ddb3c047_AlignofExprModel(void) = default;

	inline bool operator==(_1ddb3c047_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ddb3c047_AlignofExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_RuneExprModel {
	jule::I32 _field_code = jule::I32();


	_1ddb3c047_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_1ddb3c047_RuneExprModel(void) = default;

	inline bool operator==(_1ddb3c047_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1ddb3c047_RuneExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();


	_1ddb3c047_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ddb3c047_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1ddb3c047_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ddb3c047_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_TernaryExprModel {
	jule::Any _field_condition = jule::Any();
	jule::Any _field_true_expr = jule::Any();
	jule::Any _field_false_expr = jule::Any();


	_1ddb3c047_TernaryExprModel(jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_1ddb3c047_TernaryExprModel(void) = default;

	inline bool operator==(_1ddb3c047_TernaryExprModel _other) {
		return 
			this->_field_condition == _other._field_condition &&
			this->_field_true_expr == _other._field_true_expr &&
			this->_field_false_expr == _other._field_false_expr;
	}

	inline bool operator!=(_1ddb3c047_TernaryExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_1ddb3c047_BackendEmitExprModel(jule::Str __param_code, jule::Slice<jule::Any> __param_exprs): _field_code(__param_code), _field_exprs(__param_exprs) {}

	

	_1ddb3c047_BackendEmitExprModel(void) = default;

	inline bool operator==(_1ddb3c047_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1ddb3c047_BackendEmitExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_FreeExprModel {
	jule::Any _field_expr = jule::Any();


	_1ddb3c047_FreeExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ddb3c047_FreeExprModel(void) = default;

	inline bool operator==(_1ddb3c047_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ddb3c047_FreeExprModel _other) { return !this->operator==(_other); }


};


struct _1dded9702_RetType {
	jule::Ptr<_1a5e40a26_TypeSymbol> _field_kind = jule::Ptr<_1a5e40a26_TypeSymbol>();
	jule::Slice<_1dd05db0c_Token> _field_idents = jule::Slice<_1dd05db0c_Token>();


	_1dded9702_RetType(jule::Ptr<_1a5e40a26_TypeSymbol> __param_kind, jule::Slice<_1dd05db0c_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1dded9702_RetType(void) = default;

	inline bool operator==(_1dded9702_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1dded9702_RetType _other) { return !this->operator==(_other); }


};


struct _1dded9702_ParamIns {
	jule::Ptr<_1dded9702_Param> _field_decl = jule::Ptr<_1dded9702_Param>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_kind = jule::Ptr<_1a5e40a26_TypeKind>();


	_1dded9702_ParamIns(jule::Ptr<_1dded9702_Param> __param_decl, jule::Ptr<_1a5e40a26_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1dded9702_ParamIns(void) = default;

	inline jule::Str _method_to_str(void);


	inline bool operator==(_1dded9702_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dded9702_ParamIns _other) { return !this->operator==(_other); }


};


struct _1dded9702_FnIns: public _1a5e40a26_Kind {
	jule::Ptr<_1dded9702_FnIns> self;

	jule::Ptr<_1dd0be530_StructIns> _field_owner = jule::Ptr<_1dd0be530_StructIns>();
	jule::Ptr<_1dded9702_Fn> _field_decl = jule::Ptr<_1dded9702_Fn>();
	jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>();
	jule::Slice<jule::Ptr<_1dded9702_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1dded9702_ParamIns>>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_result = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Ptr<_1de0e938e_Scope> _field_scope = jule::Ptr<_1de0e938e_Scope>();
	jule::Ptr<_1dded9779_ReferenceStack> _field_references = jule::Ptr<_1dded9779_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Ptr<_1dded9779_ReferenceStack> _field_refers = jule::Ptr<_1dded9779_ReferenceStack>();
	jule::U8 _field_caller = jule::U8();
	jule::Bool _field_reloaded = jule::Bool();


	_1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns> __param_owner, jule::Ptr<_1dded9702_Fn> __param_decl, jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1dded9702_ParamIns>> __param_params, jule::Ptr<_1a5e40a26_TypeKind> __param_result, jule::Ptr<_1de0e938e_Scope> __param_scope, jule::Ptr<_1dded9779_ReferenceStack> __param_references, jule::Bool __param_anon, jule::Ptr<_1dded9779_ReferenceStack> __param_refers, jule::U8 __param_caller, jule::Bool __param_reloaded): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_anon(__param_anon), _field_refers(__param_refers), _field_caller(__param_caller), _field_reloaded(__param_reloaded) {
		this->self = jule::Ptr<_1dded9702_FnIns>::make(this, nullptr);

	}

	~_1dded9702_FnIns(void) { this->self.ref = nullptr; }

	_1dded9702_FnIns(void) { this->self = jule::Ptr<_1dded9702_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_same(jule::Ptr<_1dded9702_FnIns>);


	inline jule::Str _method_get_kind_str(jule::Bool);


	inline bool operator==(_1dded9702_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_references == _other._field_references &&
			this->_field_anon == _other._field_anon &&
			this->_field_refers == _other._field_refers &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1dded9702_FnIns _other) { return !this->operator==(_other); }


};


struct _1dded9779_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();


	_1dded9779_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_1dded9779_ReferenceStack(void) = default;

	static inline jule::Ptr<_1dded9779_ReferenceStack> _static_method_new(void);


	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline jule::Bool _method_exist_0(jule::Ptr<_1c3c3d174_Var>);
	inline jule::Bool _method_exist_1(jule::Ptr<_1dded9702_FnIns>);
	inline jule::Bool _method_exist_2(jule::Ptr<_1dd0be530_StructIns>);


	inline bool operator==(_1dded9779_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1dded9779_ReferenceStack _other) { return !this->operator==(_other); }


};


struct _1dded9779_SymbolBuilder {
	jule::Ptr<_1dded9779_SymbolBuilder> self;

	jule::Ptr<_1dded9779_SymbolBuilder> _field_owner = jule::Ptr<_1dded9779_SymbolBuilder>();
	jule::Trait<_1c2c4607e_Importer> _field_importer = jule::Trait<_1c2c4607e_Importer>();
	jule::Slice<_1db678789_Log> _field_errors = jule::Slice<_1db678789_Log>();
	jule::Ptr<_1dd05b9c8_Ast> _field_ast = jule::Ptr<_1dd05b9c8_Ast>();
	jule::Ptr<_1a943b749_SymbolTable> _field_table = jule::Ptr<_1a943b749_SymbolTable>();


	_1dded9779_SymbolBuilder(jule::Ptr<_1dded9779_SymbolBuilder> __param_owner, jule::Trait<_1c2c4607e_Importer> __param_importer, jule::Slice<_1db678789_Log> __param_errors, jule::Ptr<_1dd05b9c8_Ast> __param_ast, jule::Ptr<_1a943b749_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {
		this->self = jule::Ptr<_1dded9779_SymbolBuilder>::make(this, nullptr);

	}

	~_1dded9779_SymbolBuilder(void) { this->self.ref = nullptr; }

	_1dded9779_SymbolBuilder(void) { this->self = jule::Ptr<_1dded9779_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ptr<_1dded9779_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_1dd05db0c_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_text(_1dd05db0c_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ptr<_1dd05c765_UseDecl>&);


	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_build_cpp_header_import(jule::Ptr<_1dd05c765_UseDecl>&);


	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_build_std_import(jule::Ptr<_1dd05c765_UseDecl>&);


	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_build_ident_import(jule::Ptr<_1dd05c765_UseDecl>&);


	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_build_import(jule::Ptr<_1dd05c765_UseDecl>&);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ptr<_1c2c4607e_ImportInfo>&);


	inline void _method_impl_import_selections(jule::Ptr<_1c2c4607e_ImportInfo>&,jule::Ptr<_1dd05c765_UseDecl>&);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cycle_error(jule::Ptr<_1dded9779_SymbolBuilder>&,jule::Str,jule::Str&);


	inline void _method_push_cross_cycle_error(jule::Ptr<_1dded9779_SymbolBuilder>&,jule::Ptr<_1c2c4607e_ImportInfo>&,_1dd05db0c_Token&);


	inline jule::Bool _method_check_import_cycles(jule::Ptr<_1c2c4607e_ImportInfo>,jule::Ptr<_1dd05c765_UseDecl>&);


	inline void _method_check_package_accessibility(jule::Ptr<_1dd05c765_UseDecl>&,jule::Str&,jule::Str&);


	inline jule::Bool _method_import_package(jule::Ptr<_1c2c4607e_ImportInfo>&,jule::Ptr<_1dd05c765_UseDecl>&);


	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_import_use_decl(jule::Ptr<_1dd05c765_UseDecl>&);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_1dd05c765_Node&);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ptr<_1dd05c765_Directive>&);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(_1dded9779_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1dded9779_SymbolBuilder _other) { return !this->operator==(_other); }


};


struct _1de0e21cd_Impl {
	jule::Ptr<_1dd05c765_TypeDecl> _field_base = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Ptr<_1dd05c765_TypeDecl> _field_dest = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Slice<jule::Ptr<_1dded9702_Fn>> _field_methods = jule::Slice<jule::Ptr<_1dded9702_Fn>>();
	jule::Slice<jule::Ptr<_1c3c3d174_Var>> _field_statics = jule::Slice<jule::Ptr<_1c3c3d174_Var>>();


	_1de0e21cd_Impl(jule::Ptr<_1dd05c765_TypeDecl> __param_base, jule::Ptr<_1dd05c765_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_1dded9702_Fn>> __param_methods, jule::Slice<jule::Ptr<_1c3c3d174_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1de0e21cd_Impl(void) = default;

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(_1de0e21cd_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1de0e21cd_Impl _other) { return !this->operator==(_other); }


};


struct _1de0e938e_Scope {
	jule::Ptr<_1de0e938e_Scope> _field_parent = jule::Ptr<_1de0e938e_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_1de0e938e_Scope(jule::Ptr<_1de0e938e_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1de0e938e_Scope(void) = default;

	inline bool operator==(_1de0e938e_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1de0e938e_Scope _other) { return !this->operator==(_other); }


};


struct _1de0e938e_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1de0e938e_Scope> _field_scope = jule::Ptr<_1de0e938e_Scope>();


	_1de0e938e_If(jule::Any __param_expr, jule::Ptr<_1de0e938e_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1de0e938e_If(void) = default;

	inline bool operator==(_1de0e938e_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1de0e938e_If _other) { return !this->operator==(_other); }


};


struct _1de0e938e_Else {
	jule::Ptr<_1de0e938e_Scope> _field_scope = jule::Ptr<_1de0e938e_Scope>();


	_1de0e938e_Else(jule::Ptr<_1de0e938e_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1de0e938e_Else(void) = default;

	inline bool operator==(_1de0e938e_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1de0e938e_Else _other) { return !this->operator==(_other); }


};


struct _1de0e938e_Conditional {
	jule::Slice<jule::Ptr<_1de0e938e_If>> _field_elifs = jule::Slice<jule::Ptr<_1de0e938e_If>>();
	jule::Ptr<_1de0e938e_Else> _field_default = jule::Ptr<_1de0e938e_Else>();


	_1de0e938e_Conditional(jule::Slice<jule::Ptr<_1de0e938e_If>> __param_elifs, jule::Ptr<_1de0e938e_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_1de0e938e_Conditional(void) = default;

	inline bool operator==(_1de0e938e_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1de0e938e_Conditional _other) { return !this->operator==(_other); }


};


struct _1de0e938e_InfIter {
	jule::Ptr<_1de0e938e_Scope> _field_scope = jule::Ptr<_1de0e938e_Scope>();


	_1de0e938e_InfIter(jule::Ptr<_1de0e938e_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1de0e938e_InfIter(void) = default;

	inline bool operator==(_1de0e938e_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1de0e938e_InfIter _other) { return !this->operator==(_other); }


};


struct _1de0e938e_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1de0e938e_Scope> _field_scope = jule::Ptr<_1de0e938e_Scope>();


	_1de0e938e_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ptr<_1de0e938e_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_1de0e938e_WhileIter(void) = default;

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(_1de0e938e_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1de0e938e_WhileIter _other) { return !this->operator==(_other); }


};


struct _1de0e938e_RangeIter {
	jule::Ptr<_1a94c333b_Data> _field_expr = jule::Ptr<_1a94c333b_Data>();
	jule::Ptr<_1de0e938e_Scope> _field_scope = jule::Ptr<_1de0e938e_Scope>();
	jule::Ptr<_1c3c3d174_Var> _field_key_a = jule::Ptr<_1c3c3d174_Var>();
	jule::Ptr<_1c3c3d174_Var> _field_key_b = jule::Ptr<_1c3c3d174_Var>();


	_1de0e938e_RangeIter(jule::Ptr<_1a94c333b_Data> __param_expr, jule::Ptr<_1de0e938e_Scope> __param_scope, jule::Ptr<_1c3c3d174_Var> __param_key_a, jule::Ptr<_1c3c3d174_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1de0e938e_RangeIter(void) = default;

	inline bool operator==(_1de0e938e_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1de0e938e_RangeIter _other) { return !this->operator==(_other); }


};


struct _1de0e938e_ContSt {
	jule::Uintptr _field_it = jule::Uintptr();


	_1de0e938e_ContSt(jule::Uintptr __param_it): _field_it(__param_it) {}

	

	_1de0e938e_ContSt(void) = default;

	inline bool operator==(_1de0e938e_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1de0e938e_ContSt _other) { return !this->operator==(_other); }


};


struct _1de0e938e_BreakSt {
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_mtch = jule::Uintptr();


	_1de0e938e_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_1de0e938e_BreakSt(void) = default;

	inline bool operator==(_1de0e938e_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1de0e938e_BreakSt _other) { return !this->operator==(_other); }


};


struct _1de0e938e_Label {
	jule::Str _field_ident = jule::Str();


	_1de0e938e_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1de0e938e_Label(void) = default;

	inline bool operator==(_1de0e938e_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1de0e938e_Label _other) { return !this->operator==(_other); }


};


struct _1de0e938e_GotoSt {
	jule::Str _field_ident = jule::Str();


	_1de0e938e_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1de0e938e_GotoSt(void) = default;

	inline bool operator==(_1de0e938e_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1de0e938e_GotoSt _other) { return !this->operator==(_other); }


};


struct _1de0e938e_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_1de0e938e_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1de0e938e_Postfix(void) = default;

	inline bool operator==(_1de0e938e_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1de0e938e_Postfix _other) { return !this->operator==(_other); }


};


struct _1de0e938e_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();


	_1de0e938e_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_1de0e938e_MultiAssign(void) = default;

	inline bool operator==(_1de0e938e_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1de0e938e_MultiAssign _other) { return !this->operator==(_other); }


};


struct _1de0e938e_Match {
	jule::Ptr<_1a94c333b_Data> _field_expr = jule::Ptr<_1a94c333b_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1de0e938e_Case>> _field_cases = jule::Slice<jule::Ptr<_1de0e938e_Case>>();
	jule::Ptr<_1de0e938e_Case> _field_default = jule::Ptr<_1de0e938e_Case>();


	_1de0e938e_Match(jule::Ptr<_1a94c333b_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ptr<_1de0e938e_Case>> __param_cases, jule::Ptr<_1de0e938e_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1de0e938e_Match(void) = default;

	inline jule::Bool _method_is_generic_type_match(void);


	inline bool operator==(_1de0e938e_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1de0e938e_Match _other) { return !this->operator==(_other); }


};


struct _1de0e938e_Case {
	jule::Ptr<_1de0e938e_Match> _field_owner = jule::Ptr<_1de0e938e_Match>();
	jule::Ptr<_1de0e938e_Scope> _field_scope = jule::Ptr<_1de0e938e_Scope>();
	jule::Slice<jule::Ptr<_1a94c333b_Data>> _field_exprs = jule::Slice<jule::Ptr<_1a94c333b_Data>>();
	jule::Ptr<_1de0e938e_Case> _field_next = jule::Ptr<_1de0e938e_Case>();


	_1de0e938e_Case(jule::Ptr<_1de0e938e_Match> __param_owner, jule::Ptr<_1de0e938e_Scope> __param_scope, jule::Slice<jule::Ptr<_1a94c333b_Data>> __param_exprs, jule::Ptr<_1de0e938e_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_1de0e938e_Case(void) = default;

	inline jule::Bool _method_is_default(void);


	inline bool operator==(_1de0e938e_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1de0e938e_Case _other) { return !this->operator==(_other); }


};


struct _1de0e938e_FallSt {
	jule::Uintptr _field_dest_case = jule::Uintptr();


	_1de0e938e_FallSt(jule::Uintptr __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_1de0e938e_FallSt(void) = default;

	inline bool operator==(_1de0e938e_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1de0e938e_FallSt _other) { return !this->operator==(_other); }


};


struct _1de0e938e_RetSt {
	jule::Ptr<_1dded9702_FnIns> _field_func = jule::Ptr<_1dded9702_FnIns>();
	jule::Slice<jule::Ptr<_1c3c3d174_Var>> _field_vars = jule::Slice<jule::Ptr<_1c3c3d174_Var>>();
	jule::Any _field_expr = jule::Any();


	_1de0e938e_RetSt(jule::Ptr<_1dded9702_FnIns> __param_func, jule::Slice<jule::Ptr<_1c3c3d174_Var>> __param_vars, jule::Any __param_expr): _field_func(__param_func), _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_1de0e938e_RetSt(void) = default;

	inline bool operator==(_1de0e938e_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1de0e938e_RetSt _other) { return !this->operator==(_other); }


};


struct _1de0e938e_ScopeGoto {
	jule::Ptr<_1dd05c765_GotoSt> _field_gt = jule::Ptr<_1dd05c765_GotoSt>();
	jule::Ptr<_1de0e938e_ScopeChecker> _field_scope = jule::Ptr<_1de0e938e_ScopeChecker>();
	jule::Int _field_pos = jule::Int();


	_1de0e938e_ScopeGoto(jule::Ptr<_1dd05c765_GotoSt> __param_gt, jule::Ptr<_1de0e938e_ScopeChecker> __param_scope, jule::Int __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_1de0e938e_ScopeGoto(void) = default;

	inline bool operator==(_1de0e938e_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1de0e938e_ScopeGoto _other) { return !this->operator==(_other); }


};


struct _1de0e938e_ScopeChecker: public _1a6336746_Lookup {
	jule::Ptr<_1de0e938e_ScopeChecker> self;

	jule::Ptr<_1c2c46634_Sema> _field_s = jule::Ptr<_1c2c46634_Sema>();
	jule::Ptr<_1dded9702_FnIns> _field_owner = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1de0e938e_ScopeChecker> _field_parent = jule::Ptr<_1de0e938e_ScopeChecker>();
	jule::Int _field_child_index = jule::Int();
	jule::Ptr<_1a943b749_SymbolTable> _field_table = jule::Ptr<_1a943b749_SymbolTable>();
	jule::Ptr<_1de0e938e_Scope> _field_scope = jule::Ptr<_1de0e938e_Scope>();
	jule::Ptr<_1dd05c765_ScopeTree> _field_tree = jule::Ptr<_1dd05c765_ScopeTree>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_result = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1de0e938e_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1de0e938e_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1de0e938e_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1de0e938e_ScopeGoto>>>();
	jule::Int _field_i = jule::Int();


	_1de0e938e_ScopeChecker(jule::Ptr<_1c2c46634_Sema> __param_s, jule::Ptr<_1dded9702_FnIns> __param_owner, jule::Ptr<_1de0e938e_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ptr<_1a943b749_SymbolTable> __param_table, jule::Ptr<_1de0e938e_Scope> __param_scope, jule::Ptr<_1dd05c765_ScopeTree> __param_tree, jule::Ptr<_1a5e40a26_TypeKind> __param_result, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ptr<jule::Slice<jule::Ptr<_1de0e938e_ScopeLabel>>> __param_labels, jule::Ptr<jule::Slice<jule::Ptr<_1de0e938e_ScopeGoto>>> __param_gotos, jule::Int __param_i): _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_result(__param_result), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {
		this->self = jule::Ptr<_1de0e938e_ScopeChecker>::make(this, nullptr);

	}

	~_1de0e938e_ScopeChecker(void) { this->self.ref = nullptr; }

	_1de0e938e_ScopeChecker(void) { this->self = jule::Ptr<_1de0e938e_ScopeChecker>::make(this, nullptr); }

	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)>);


	inline jule::Ptr<_1c3c3d174_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1a5e40a26_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1dd0be530_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1dded9702_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1de043c01_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1de0dbeb9_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_is_deferred(void);


	inline jule::Ptr<_1de0e938e_ScopeChecker> _method_get_root(void);


	inline jule::Ptr<_1de0e938e_ScopeChecker> _method_get_hard_root(void);


	inline jule::Ptr<_1de0e938e_Label> _method_find_label(jule::Str);


	inline jule::Ptr<_1de0e938e_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ptr<_1de0e938e_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ptr<_1dd05c765_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ptr<_1dd05c765_TypeAliasDecl>);


	inline jule::Ptr<_1de0e938e_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ptr<_1dd05c765_ScopeTree>&,jule::Ptr<_1de0e938e_Scope>&,jule::Ptr<_1de0e938e_ScopeChecker>&);


	inline jule::Ptr<_1de0e938e_Scope> _method_check_child_sc(jule::Ptr<_1dd05c765_ScopeTree>&,jule::Ptr<_1de0e938e_ScopeChecker>&);


	inline jule::Ptr<_1de0e938e_Scope> _method_check_child(jule::Ptr<_1dd05c765_ScopeTree>&);


	inline void _method_check_anon_scope(jule::Ptr<_1dd05c765_ScopeTree>);


	inline void _method_process_error_call(jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel>&,_1dd05db0c_Token);


	inline void _method_check_expr(jule::Ptr<_1dd05c765_Expr>);


	inline void _method_check_co_expr(jule::Ptr<_1dd05c765_CoExpr>);


	inline jule::Ptr<_1de0e938e_If> _method_check_if(jule::Ptr<_1dd05c765_If>);


	inline jule::Ptr<_1de0e938e_Else> _method_check_else(jule::Ptr<_1dd05c765_Else>);


	inline void _method_check_conditional(jule::Ptr<_1dd05c765_Conditional>);


	inline jule::Ptr<_1de0e938e_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ptr<_1dd05c765_ScopeTree>,jule::Ptr<_1de0e938e_ScopeChecker>);


	inline jule::Ptr<_1de0e938e_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ptr<_1dd05c765_ScopeTree>&);


	inline void _method_check_inf_iter(jule::Ptr<_1dd05c765_Iter>&);


	inline void _method_check_while_iter(jule::Ptr<_1dd05c765_Iter>&);


	inline void _method_check_range_iter(jule::Ptr<_1dd05c765_Iter>&);


	inline void _method_check_iter(jule::Ptr<_1dd05c765_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ptr<_1de0e938e_ContSt> _method_check_cont_valid_scope(jule::Ptr<_1dd05c765_ContSt>);


	inline void _method_check_cont(jule::Ptr<_1dd05c765_ContSt>);


	inline void _method_check_label(jule::Ptr<_1dd05c765_LabelSt>);


	inline void _method_push_goto(jule::Ptr<_1dd05c765_GotoSt>);


	inline void _method_check_postfix(jule::Ptr<_1dd05c765_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline jule::Bool _method_check_structure_assign_op(jule::Ptr<_1dd0be530_StructIns>&,jule::Ptr<_1dd05c765_AssignSt>&);


	inline void _method_check_single_assign(jule::Ptr<_1dd05c765_AssignSt>&);


	inline void _method___process_end_part_of_multi_assign(jule::Ptr<_1de0e938e_MultiAssign>,jule::Ptr<_1dd05c765_AssignSt>,jule::Ptr<_1dd05c765_AssignLeft>,jule::Ptr<_1a94c333b_Data>,jule::Ptr<_1a94c333b_Data>);


	inline void _method_check_ret_multi_assign(jule::Ptr<_1dd05c765_AssignSt>&);


	inline void _method_check_multi_assign(jule::Ptr<_1dd05c765_AssignSt>&);


	inline void _method_check_assign_st(jule::Ptr<_1dd05c765_AssignSt>);


	inline jule::Ptr<_1de0e938e_Scope> _method_check_case_scope(jule::Ptr<_1de0e938e_Case>&,jule::Ptr<_1dd05c765_ScopeTree>&);


	inline jule::Ptr<_1de0e938e_Case> _method_check_case(jule::Ptr<_1de0e938e_Match>,jule::Int,jule::Ptr<_1dd05c765_Case>,jule::Ptr<_1a94c333b_Data>);


	inline void _method_check_cases(jule::Ptr<_1dd05c765_MatchCase>&,jule::Ptr<_1de0e938e_Match>,jule::Ptr<_1a94c333b_Data>);


	inline jule::Ptr<_1de0e938e_Case> _method_check_default(jule::Ptr<_1de0e938e_Match>,jule::Ptr<_1dd05c765_Else>);


	inline void _method_check_comptime_panic(jule::Ptr<_1de0e938e_Scope>&,_1dd05db0c_Token);


	inline void _method_push_type_match(jule::Ptr<_1de0e938e_Match>,jule::Ptr<_1dd05c765_MatchCase>&);


	inline void _method_check_type_match(jule::Ptr<_1dd05c765_MatchCase>&);


	inline void _method_check_common_match(jule::Ptr<_1dd05c765_MatchCase>&);


	inline void _method_check_match(jule::Ptr<_1dd05c765_MatchCase>);


	inline void _method_check_fall(jule::Ptr<_1dd05c765_FallSt>);


	inline jule::Ptr<_1de0e938e_BreakSt> _method_check_break_with_label(jule::Ptr<_1dd05c765_BreakSt>);


	inline jule::Ptr<_1de0e938e_BreakSt> _method_check_plain_break(jule::Ptr<_1dd05c765_BreakSt>);


	inline void _method_check_break(jule::Ptr<_1dd05c765_BreakSt>);


	inline void _method_check_ret(jule::Ptr<_1dd05c765_RetSt>);


	inline void _method_check_use_expr(jule::Ptr<_1dd05c765_UseExpr>);


	inline void _method_check_node(jule::Any&);


	inline void _method_check_result(void);


	inline void _method_check_tree(void);


	inline void _method_check_goto(jule::Ptr<_1de0e938e_ScopeGoto>&,jule::Ptr<_1de0e938e_ScopeLabel>&);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ptr<_1dd05c765_ScopeTree>&,jule::Ptr<_1de0e938e_Scope>&);


	inline jule::Ptr<_1de0e938e_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(_1de0e938e_ScopeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1de0e938e_ScopeChecker _other) { return !this->operator==(_other); }


};


struct _1de353939_DirectiveChecker {
	jule::Ptr<_1c2c46634_Sema> _field_s = jule::Ptr<_1c2c46634_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1dd05c765_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1dd05c765_Directive>>>();
	jule::Any _field_o = jule::Any();


	_1de353939_DirectiveChecker(jule::Ptr<_1c2c46634_Sema> __param_s, jule::Ptr<jule::Slice<jule::Ptr<_1dd05c765_Directive>>> __param_d, jule::Any __param_o): _field_s(__param_s), _field_d(__param_d), _field_o(__param_o) {}

	

	_1de353939_DirectiveChecker(void) = default;

	inline void _method_check_cdef(jule::Ptr<_1dd05c765_Directive>&);


	inline void _method_check_typedef(jule::Ptr<_1dd05c765_Directive>&);


	inline void _method_check_derive(jule::Ptr<_1dd05c765_Directive>&);


	inline void _method_check_namespace(jule::Ptr<_1dd05c765_Directive>&);


	inline void _method_check_deprecated(jule::Ptr<_1dd05c765_Directive>&);


	inline void _method_check_test(jule::Ptr<_1dd05c765_Directive>&);


	inline void _method_check_directive(jule::Ptr<_1dd05c765_Directive>&);


	inline void _method_check(void);


	inline bool operator==(_1de353939_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1de353939_DirectiveChecker _other) { return !this->operator==(_other); }


};


struct _1c2c4607e_Package: public _1a6336746_Lookup {
	jule::Slice<jule::Ptr<_1a943b749_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>();


	_1c2c4607e_Package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_1c2c4607e_Package(void) = default;

	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)>);


	inline jule::Ptr<_1c3c3d174_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1a5e40a26_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1dd0be530_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1dded9702_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1de043c01_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1de0dbeb9_Enum> _method_find_enum(jule::Str);


	inline bool operator==(_1c2c4607e_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1c2c4607e_Package _other) { return !this->operator==(_other); }


};


struct _1c2c46634_Sema: public _1a6336746_Lookup {
	jule::Ptr<_1c2c46634_Sema> self;

	jule::Slice<_1db678789_Log> _field_errors = jule::Slice<_1db678789_Log>();
	jule::Slice<jule::Ptr<_1a943b749_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>();
	jule::Ptr<_1a943b749_SymbolTable> _field_file = jule::Ptr<_1a943b749_SymbolTable>();
	jule::Int _field_flags = 0LL;


	_1c2c46634_Sema(jule::Slice<_1db678789_Log> __param_errors, jule::Slice<jule::Ptr<_1a943b749_SymbolTable>> __param_files, jule::Ptr<_1a943b749_SymbolTable> __param_file, jule::Int __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {
		this->self = jule::Ptr<_1c2c46634_Sema>::make(this, nullptr);

	}

	~_1c2c46634_Sema(void) { this->self.ref = nullptr; }

	_1c2c46634_Sema(void) { this->self = jule::Ptr<_1c2c46634_Sema>::make(this, nullptr); }

	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)>);


	inline jule::Ptr<_1c3c3d174_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1a5e40a26_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1dd0be530_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1dded9702_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1de043c01_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1de0dbeb9_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_flag(jule::Int);


	inline void _method_set_current_file(jule::Ptr<_1a943b749_SymbolTable>);


	inline void _method_push_err(_1dd05db0c_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_1dd05db0c_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline void _method_check_directives(jule::Slice<jule::Ptr<_1dd05c765_Directive>>&,jule::Any);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_1dd05db0c_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline jule::Any _method_get_import_def(jule::Str,jule::Ptr<_1c2c4607e_ImportInfo>&);


	inline jule::Bool _method_check_import_selections(jule::Ptr<_1c2c4607e_ImportInfo>&);


	inline jule::Bool _method_is_use_alias_duplication(jule::Ptr<_1c2c4607e_ImportInfo>&);


	inline jule::Bool _method_check_import(jule::Ptr<_1c2c4607e_ImportInfo>&);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ptr<_1a5e40a26_TypeSymbol>&,jule::Trait<_1a6336746_Lookup>,jule::Ptr<_1a5e40a26_Referencer>);


	inline jule::Bool _method_check_type(jule::Ptr<_1a5e40a26_TypeSymbol>&,jule::Trait<_1a6336746_Lookup>);


	inline jule::Ptr<_1a5e40a26_TypeKind> _method_build_type_with_generics(jule::Ptr<_1dd05c765_TypeDecl>&,jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>);


	inline jule::Ptr<_1a5e40a26_TypeKind> _method_build_type(jule::Ptr<_1dd05c765_TypeDecl>&);


	inline jule::Ptr<_1a5e40a26_TypeKind> _method_select_type(jule::Ptr<_1dd05c765_TypeDecl>&);


	inline jule::Ptr<_1a94c333b_Eval> _method_evalpd(jule::Trait<_1a6336746_Lookup>,jule::Ptr<_1a5e40a26_TypeKind>,jule::Ptr<_1c3c3d174_Var>);


	inline jule::Ptr<_1a94c333b_Eval> _method_evalp(jule::Trait<_1a6336746_Lookup>,jule::Ptr<_1a5e40a26_TypeKind>);


	inline jule::Ptr<_1a94c333b_Eval> _method_eval(jule::Trait<_1a6336746_Lookup>);


	inline void _method_check_assign_type(jule::Bool,jule::Ptr<_1a5e40a26_TypeKind>&,jule::Ptr<_1a94c333b_Data>&,_1dd05db0c_Token);


	inline jule::Bool _method_check_type_compatibility(jule::Ptr<_1a5e40a26_TypeKind>&,jule::Ptr<_1a5e40a26_TypeKind>&,_1dd05db0c_Token&);


	inline jule::Ptr<_1a5e40a26_TypeKind> _method_build_non_generic_type_kind(jule::Ptr<_1dd05c765_TypeDecl>&,jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>&);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ptr<_1dded9702_FnIns>&);


	inline jule::Ptr<_1dded9702_FnIns> _method_get_trait_check_fn_kind(jule::Ptr<_1dded9702_Fn>&);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ptr<_1dded9702_FnIns>&);


	inline jule::Bool _method_check_ref_validity_for_init_expr(jule::Bool,jule::Ptr<_1a94c333b_Data>&,_1dd05db0c_Token&);


	inline jule::Bool _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ptr<_1a5e40a26_TypeKind>&,jule::Ptr<_1a94c333b_Data>&,_1dd05db0c_Token&);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ptr<_1a5e40a26_TypeAlias>&,jule::Trait<_1a6336746_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ptr<_1a5e40a26_TypeAlias>&,jule::Trait<_1a6336746_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ptr<_1a5e40a26_TypeAlias>&);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ptr<_1de0dbeb9_Enum>);


	inline void _method_check_enum_items_str(jule::Ptr<_1de0dbeb9_Enum>&);


	inline void _method_check_enum_items_int(jule::Ptr<_1de0dbeb9_Enum>&);


	inline void _method_check_enum_decl(jule::Ptr<_1de0dbeb9_Enum>&);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>&);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ptr<_1dded9702_Fn>&);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ptr<_1dded9702_Fn>&);


	inline jule::Bool _method_check_fn_decl_types(jule::Ptr<_1dded9702_Fn>&);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ptr<_1dded9702_Fn>&);


	inline void _method_check_trait_decl_method(jule::Ptr<_1dded9702_Fn>&);


	inline void _method_check_trait_decl_methods(jule::Ptr<_1de043c01_Trait>&);


	inline void _method_check_trait_decl(jule::Ptr<_1de043c01_Trait>&);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ptr<_1de043c01_Trait>&,jule::Ptr<_1de0e21cd_Impl>&);


	inline jule::Bool _method_impl_to_struct(jule::Ptr<_1dd0be530_Struct>&,jule::Ptr<_1de0e21cd_Impl>&);


	inline void _method_impl_trait(jule::Ptr<_1de0e21cd_Impl>&);


	inline void _method_impl_struct(jule::Ptr<_1de0e21cd_Impl>&);


	inline void _method_impl_impl(jule::Ptr<_1de0e21cd_Impl>&);


	inline void _method_check_var_decl(jule::Ptr<_1c3c3d174_Var>&,jule::Trait<_1a6336746_Lookup>);


	inline void _method_check_global_var_decl(jule::Ptr<_1c3c3d174_Var>&);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ptr<_1dd0be530_Struct>&,jule::Ptr<_1de043c01_Trait>&);


	inline jule::Bool _method_check_struct_impls(jule::Ptr<_1dd0be530_Struct>&);


	inline jule::Bool _method_check_struct_fields(jule::Ptr<_1dd0be530_Struct>&);


	inline jule::Bool _method_check_struct_decl_methods(jule::Ptr<_1dd0be530_Struct>&);


	inline void _method_check_struct_decl(jule::Ptr<_1dd0be530_Struct>&);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ptr<_1dded9702_Fn>&);


	inline jule::Bool _method_check_fn_decls(void);


	inline void _method_push_cycle_error(jule::Ptr<_1dd0be530_Struct>&,jule::Ptr<_1dd0be530_Struct>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ptr<_1dd0be530_Struct>&,jule::Ptr<_1dd0be530_Struct>&,jule::Str&);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ptr<_1dd0be530_Struct>&,jule::Ptr<_1a5e40a26_TypeKind>&);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ptr<_1dd0be530_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ptr<_1dd0be530_Struct>&);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_type_inference(jule::Ptr<_1a94c333b_Data>&,_1dd05db0c_Token&);


	inline void _method_check_var(jule::Ptr<_1c3c3d174_Var>&);


	inline void _method_check_type_var(jule::Ptr<_1c3c3d174_Var>&,jule::Trait<_1a6336746_Lookup>);


	inline void _method_check_global_types(void);


	inline jule::Ptr<_1dded9702_FnIns> _method_ready_to_check_fn(jule::Ptr<_1dd0be530_StructIns>&,jule::Ptr<_1dded9702_Fn>&);


	inline void _method_check_type_method(jule::Ptr<_1dd0be530_StructIns>&,jule::Ptr<_1dded9702_Fn>&);


	inline void _method_check_field_defaults(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Ptr<_1dded9702_FnIns> _method_check_struct_ins_op(jule::Ptr<_1dd0be530_StructIns>&,jule::Ptr<_1dded9702_Fn>&,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>);


	inline void _method_check_struct_ins(jule::Ptr<_1dd0be530_StructIns>&);


	inline void _method_check_type_struct(jule::Ptr<_1dd0be530_Struct>&);


	inline void _method_check_struct_types(void);


	inline void _method_check_struct_ins_operators(jule::Ptr<_1dd0be530_StructIns>);


	inline void _method_check_type_struct_operators(jule::Ptr<_1dd0be530_Struct>&);


	inline void _method_check_struct_types_operators(void);


	inline void _method_check_rets(jule::Ptr<_1dded9702_FnIns>&);


	inline void _method_check_fn_ins_sc(jule::Ptr<_1dded9702_FnIns>&,jule::Ptr<_1de0e938e_ScopeChecker>&);


	inline void _method_check_fn_ins(jule::Ptr<_1dded9702_FnIns>&);


	inline void _method_check_type_fn(jule::Ptr<_1dded9702_Fn>&);


	inline void _method_check_test_fn(jule::Ptr<_1dded9702_FnIns>&);


	inline void _method_precheck_type_fn(jule::Ptr<_1dded9702_Fn>&);


	inline void _method_precheck_fn_types(void);


	inline void _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>&);


	inline bool operator==(_1c2c46634_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1c2c46634_Sema _other) { return !this->operator==(_other); }


};


struct _1c3c3d174_IterRelation {
	jule::Ptr<_1c3c3d174_Var> _field_range = jule::Ptr<_1c3c3d174_Var>();


	_1c3c3d174_IterRelation(jule::Ptr<_1c3c3d174_Var> __param_range): _field_range(__param_range) {}

	

	_1c3c3d174_IterRelation(void) = default;

	inline bool operator==(_1c3c3d174_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1c3c3d174_IterRelation _other) { return !this->operator==(_other); }


};


struct _1c3c3d350_FuncPattern {
	

	_1c3c3d350_FuncPattern(void) = default;

	static inline jule::Bool _static_method_dispose(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_to_str(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_logical(jule::Ptr<_1dded9702_Fn>&,jule::Str);


	static inline jule::Bool _static_method_eq(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_gt(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_gt_eq(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_lt(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_lt_eq(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_result(jule::Ptr<_1dded9702_Fn>&,jule::Str);


	static inline jule::Bool _static_method_shl(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_shr(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_add(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_sub(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_div(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_mul(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_mod(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_bit_and(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_bit_or(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_bit_xor(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_unary(jule::Ptr<_1dded9702_Fn>&,jule::Str);


	static inline jule::Bool _static_method_neg(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_pos(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_bit_not(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_assign(jule::Ptr<_1dded9702_Fn>&,jule::Str);


	static inline jule::Bool _static_method_add_assign(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_sub_assign(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_div_assign(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_mul_assign(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_mod_assign(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_shl_assign(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_shr_assign(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_bit_or_assign(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_bit_and_assign(jule::Ptr<_1dded9702_Fn>);


	static inline jule::Bool _static_method_bit_xor_assign(jule::Ptr<_1dded9702_Fn>);


	inline bool operator==(_1c3c3d350_FuncPattern _other) { return true; }

	inline bool operator!=(_1c3c3d350_FuncPattern _other) { return !this->operator==(_other); }


};


struct _1a93c7a48_RangeChecker {
	jule::Ptr<_1de0e938e_ScopeChecker> _field_sc = jule::Ptr<_1de0e938e_ScopeChecker>();
	jule::Ptr<_1dd05c765_RangeKind> _field_rang = jule::Ptr<_1dd05c765_RangeKind>();
	jule::Ptr<_1de0e938e_RangeIter> _field_kind = jule::Ptr<_1de0e938e_RangeIter>();
	jule::Ptr<_1a94c333b_Data> _field_d = jule::Ptr<_1a94c333b_Data>();


	_1a93c7a48_RangeChecker(jule::Ptr<_1de0e938e_ScopeChecker> __param_sc, jule::Ptr<_1dd05c765_RangeKind> __param_rang, jule::Ptr<_1de0e938e_RangeIter> __param_kind, jule::Ptr<_1a94c333b_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_1a93c7a48_RangeChecker(void) = default;

	inline jule::Ptr<_1c3c3d174_Var> _method_build_var(jule::Ptr<_1dd05c765_VarDecl>&);


	inline void _method_set_size_key(void);


	inline void _method_check_range_expr_validity(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1c3c3d174_Var>&,jule::Ptr<_1a5e40a26_TypeKind>&);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(_1a93c7a48_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a93c7a48_RangeChecker _other) { return !this->operator==(_other); }


};


struct _1a943b749_SymbolTable: public _1a6336746_Lookup {
	jule::Ptr<_1dd05eba7_File> _field_file = jule::Ptr<_1dd05eba7_File>();
	jule::Slice<_1dded9779_Pass> _field_passes = jule::Slice<_1dded9779_Pass>();
	jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>>();
	jule::Slice<jule::Ptr<_1c3c3d174_Var>> _field_vars = jule::Slice<jule::Ptr<_1c3c3d174_Var>>();
	jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>();
	jule::Slice<jule::Ptr<_1dd0be530_Struct>> _field_structs = jule::Slice<jule::Ptr<_1dd0be530_Struct>>();
	jule::Slice<jule::Ptr<_1dded9702_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1dded9702_Fn>>();
	jule::Slice<jule::Ptr<_1de043c01_Trait>> _field_traits = jule::Slice<jule::Ptr<_1de043c01_Trait>>();
	jule::Slice<jule::Ptr<_1de0dbeb9_Enum>> _field_enums = jule::Slice<jule::Ptr<_1de0dbeb9_Enum>>();
	jule::Slice<jule::Ptr<_1de0e21cd_Impl>> _field_impls = jule::Slice<jule::Ptr<_1de0e21cd_Impl>>();


	_1a943b749_SymbolTable(jule::Ptr<_1dd05eba7_File> __param_file, jule::Slice<_1dded9779_Pass> __param_passes, jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>> __param_imports, jule::Slice<jule::Ptr<_1c3c3d174_Var>> __param_vars, jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ptr<_1dd0be530_Struct>> __param_structs, jule::Slice<jule::Ptr<_1dded9702_Fn>> __param_funcs, jule::Slice<jule::Ptr<_1de043c01_Trait>> __param_traits, jule::Slice<jule::Ptr<_1de0dbeb9_Enum>> __param_enums, jule::Slice<jule::Ptr<_1de0e21cd_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_1a943b749_SymbolTable(void) = default;

	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)>);


	inline jule::Ptr<_1c3c3d174_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1a5e40a26_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1dd0be530_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1dded9702_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1de043c01_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1de0dbeb9_Enum> _method_find_enum(jule::Str);


	inline jule::Ptr<_1c3c3d174_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ptr<_1a5e40a26_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(_1a943b749_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1a943b749_SymbolTable _other) { return !this->operator==(_other); }


};


struct _1a94c333b_Data {
	jule::Ptr<_1a5e40a26_TypeKind> _field_kind = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_cast_kind = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1a64669ca_Const> _field_constant = jule::Ptr<_1a64669ca_Const>();


	_1a94c333b_Data(jule::Ptr<_1a5e40a26_TypeKind> __param_kind, jule::Ptr<_1a5e40a26_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ptr<_1a64669ca_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_1a94c333b_Data(void) = default;

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline jule::Bool _method_good_operand(jule::Ptr<_1a94c333b_Data>&);


	inline bool operator==(_1a94c333b_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_cast_kind == _other._field_cast_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1a94c333b_Data _other) { return !this->operator==(_other); }


};


struct _1a94c333b_Value {
	jule::Ptr<_1dd05c765_Expr> _field_expr = jule::Ptr<_1dd05c765_Expr>();
	jule::Ptr<_1a94c333b_Data> _field_data = jule::Ptr<_1a94c333b_Data>();


	_1a94c333b_Value(jule::Ptr<_1dd05c765_Expr> __param_expr, jule::Ptr<_1a94c333b_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_1a94c333b_Value(void) = default;

	inline bool operator==(_1a94c333b_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a94c333b_Value _other) { return !this->operator==(_other); }


};


struct _1a94c333b_Eval {
	jule::Ptr<_1a94c333b_Eval> self;

	jule::Ptr<_1c2c46634_Sema> _field_s = jule::Ptr<_1c2c46634_Sema>();
	jule::Trait<_1a6336746_Lookup> _field_lookup = jule::Trait<_1a6336746_Lookup>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_prefix = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1c3c3d174_Var> _field_owner = jule::Ptr<_1c3c3d174_Var>();
	jule::Ptr<_1dd0be530_FieldIns> _field_field = jule::Ptr<_1dd0be530_FieldIns>();


	_1a94c333b_Eval(jule::Ptr<_1c2c46634_Sema> __param_s, jule::Trait<_1a6336746_Lookup> __param_lookup, jule::Ptr<_1a5e40a26_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Bool __param_ignored, jule::Bool __param_dis_builtin, jule::Ptr<_1c3c3d174_Var> __param_owner, jule::Ptr<_1dd0be530_FieldIns> __param_field): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_ignored(__param_ignored), _field_dis_builtin(__param_dis_builtin), _field_owner(__param_owner), _field_field(__param_field) {
		this->self = jule::Ptr<_1a94c333b_Eval>::make(this, nullptr);

	}

	~_1a94c333b_Eval(void) { this->self.ref = nullptr; }

	_1a94c333b_Eval(void) { this->self = jule::Ptr<_1a94c333b_Eval>::make(this, nullptr); }

	inline void _method_push_err(_1dd05db0c_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_allow_builtin(void);


	inline void _method_disallow_builtin(void);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline void _method_apply_numeric_prefix(jule::Ptr<_1a94c333b_Data>&);


	inline jule::Ptr<_1a94c333b_Data> _method_lit_nil(void);


	inline jule::Ptr<_1a94c333b_Data> _method_lit_str(jule::Ptr<_1dd05c765_LitExpr>&);


	inline jule::Ptr<_1a94c333b_Data> _method_lit_bool(jule::Ptr<_1dd05c765_LitExpr>&);


	inline jule::Ptr<_1a94c333b_Data> _method_lit_rune(jule::Ptr<_1dd05c765_LitExpr>&);


	inline jule::Ptr<_1a94c333b_Data> _method_lit_float(jule::Ptr<_1dd05c765_LitExpr>&);


	inline jule::Ptr<_1a94c333b_Data> _method_lit_int(jule::Ptr<_1dd05c765_LitExpr>&);


	inline jule::Ptr<_1a94c333b_Data> _method_lit_num(jule::Ptr<_1dd05c765_LitExpr>&);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_lit(jule::Ptr<_1dd05c765_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ptr<_1dded9779_ReferenceStack>&);


	inline void _method_push_reference_to_fn(jule::Ptr<_1dded9702_FnIns>&);


	inline void _method_push_reference_to_var(jule::Ptr<_1c3c3d174_Var>&);


	inline void _method_push_reference_to_struct(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Ptr<_1a94c333b_Data> _method___eval_enum(jule::Ptr<_1de0dbeb9_Enum>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_enum(jule::Ptr<_1de0dbeb9_Enum>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method___eval_struct(jule::Ptr<_1dd0be530_StructIns>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_struct(jule::Ptr<_1dd0be530_StructIns>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_fn_ins(jule::Ptr<_1dded9702_FnIns>);


	inline void _method_check_deprecated(jule::Slice<jule::Ptr<_1dd05c765_Directive>>&,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_fn(jule::Ptr<_1dded9702_Fn>,_1dd05db0c_Token);


	inline void _method_push_illegal_cycle_error(jule::Ptr<_1c3c3d174_Var>&,jule::Ptr<_1c3c3d174_Var>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ptr<_1c3c3d174_Var>&,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ptr<_1c3c3d174_Var>&,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_var(jule::Ptr<_1c3c3d174_Var>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_type_alias(jule::Ptr<_1a5e40a26_TypeAlias>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_def(jule::Any,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_ident(jule::Ptr<_1dd05c765_IdentExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_unary(jule::Ptr<_1dd05c765_UnaryExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_variadic(jule::Ptr<_1dd05c765_VariadicExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_unsafe(jule::Ptr<_1dd05c765_UnsafeExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_arr(jule::Ptr<_1dd05c765_SliceExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_exp_slc(jule::Ptr<_1dd05c765_SliceExpr>,jule::Ptr<_1a5e40a26_TypeKind>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_slice_expr(jule::Ptr<_1dd05c765_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ptr<_1a94c333b_Data>&,_1dd05db0c_Token);


	inline void _method_indexing_ptr(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1dd05c765_IndexingExpr>&);


	inline void _method_indexing_arr(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1dd05c765_IndexingExpr>&);


	inline void _method_indexing_slc(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1dd05c765_IndexingExpr>&);


	inline void _method_indexing_map(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1dd05c765_IndexingExpr>&);


	inline void _method_indexing_str(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1dd05c765_IndexingExpr>&);


	inline void _method_to_indexing(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1dd05c765_IndexingExpr>&);


	inline jule::Bool _method_push_generics_from_index_data(jule::Ptr<_1dd05c765_IdentTypeDecl>&,jule::Ptr<_1dd05c765_IndexingExpr>&);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_ident_decl_from_indexing(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1dd05c765_IndexingExpr>&);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_indexing(jule::Ptr<_1dd05c765_IndexingExpr>);


	inline std::tuple<jule::Ptr<_1a94c333b_Data>,jule::Ptr<_1a94c333b_Data>> _method_eval_slicing_exprs(jule::Ptr<_1dd05c765_SlicingExpr>&);


	inline void _method_slicing_arr(jule::Ptr<_1a94c333b_Data>&);


	inline void _method_slicing_slc(jule::Ptr<_1a94c333b_Data>&);


	inline void _method_slicing_str(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>&);


	inline void _method_check_slicing(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1dd05c765_SlicingExpr>&);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_slicing(jule::Ptr<_1dd05c765_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ptr<_1a5e40a26_TypeKind>,jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline void _method_cast_struct(jule::Ptr<_1a5e40a26_TypeKind>,jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline void _method_cast_ref(jule::Ptr<_1a5e40a26_TypeKind>,jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline void _method_cast_slc(jule::Ptr<_1a5e40a26_TypeKind>,jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline void _method_cast_str(jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline void _method_cast_int(jule::Ptr<_1a5e40a26_TypeKind>,jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline void _method_cast_num(jule::Ptr<_1a5e40a26_TypeKind>,jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline void _method_cast_prim(jule::Ptr<_1a5e40a26_TypeKind>,jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline void _method_cast_constant(jule::Ptr<_1a5e40a26_TypeKind>&,jule::Ptr<_1a94c333b_Data>&);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_cast_by_type_n_data(jule::Ptr<_1a5e40a26_TypeKind>,jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_cast(jule::Ptr<_1dd05c765_CastExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_ns_selection(jule::Ptr<_1dd05c765_NsSelectionExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_struct_lit_explicit(jule::Ptr<_1dd0be530_StructIns>,jule::Slice<jule::Any>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_struct_lit(jule::Ptr<_1dd05c765_StructLit>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_type(jule::Ptr<_1dd05c765_TypeDecl>);


	inline void _method_call_type_fn(jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ptr<_1dded9702_FnIns>,jule::Ptr<_1dd05c765_FnCallExpr>);


	inline void _method_call_builtin_fn(jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);


	inline void _method_check_fn_of_concurrent_call(jule::Ptr<_1dded9702_FnIns>&,_1dd05db0c_Token);


	inline void _method_process_exceptional_handler(jule::Ptr<_1dded9702_FnIns>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);


	inline void _method_call_fn(jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_fn_call(jule::Ptr<_1dd05c765_FnCallExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_enum_static(jule::Ptr<_1de0dbeb9_Enum>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_struct_static(jule::Ptr<_1dd0be530_StructIns>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_trait_sub_ident(jule::Ptr<_1a94c333b_Data>,jule::Ptr<_1de043c01_Trait>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_struct_sub_ident(jule::Ptr<_1a94c333b_Data>,jule::Ptr<_1dd0be530_StructIns>,jule::Ptr<_1dd05c765_SubIdentExpr>,jule::Bool);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_slice_sub_ident(jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_array_sub_ident(jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_map_sub_ident(jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_str_sub_ident(jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_int_type_static(_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_uint_type_static(_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_i8_type_static(_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_i16_type_static(_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_i32_type_static(_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_i64_type_static(_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_u8_type_static(_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_u16_type_static(_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_u32_type_static(_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_u64_type_static(_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_f32_type_tatic(_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_f64_type_static(_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_prim_static(jule::Str,_1dd05db0c_Token);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_type_static(jule::Ptr<_1a94c333b_Data>,jule::Ptr<_1dd05c765_SubIdentExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_obj_sub_ident(jule::Ptr<_1a94c333b_Data>,jule::Ptr<_1dd05c765_SubIdentExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_sub_ident(jule::Ptr<_1dd05c765_SubIdentExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_tuple(jule::Ptr<_1dd05c765_TupleExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_map(jule::Ptr<_1a5e40a26_Map>,jule::Ptr<_1dd05c765_BraceLit>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_brace_lit(jule::Ptr<_1dd05c765_BraceLit>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_anon_fn(jule::Ptr<_1dd05c765_FnDecl>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_binop(jule::Ptr<_1dd05c765_BinopExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_ternary(jule::Ptr<_1dd05c765_TernaryExpr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ptr<_1a94c333b_Data> _method_eval(jule::Ptr<_1dd05c765_Expr>);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_expr(jule::Ptr<_1dd05c765_Expr>);


	inline bool operator==(_1a94c333b_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a94c333b_Eval _other) { return !this->operator==(_other); }


};


struct _1a94c333b_UnaryEval {
	jule::Ptr<_1a94c333b_Eval> _field_e = jule::Ptr<_1a94c333b_Eval>();
	jule::Ptr<_1a94c333b_Data> _field_d = jule::Ptr<_1a94c333b_Data>();
	jule::Ptr<_1dd05c765_UnaryExpr> _field_u = jule::Ptr<_1dd05c765_UnaryExpr>();


	_1a94c333b_UnaryEval(jule::Ptr<_1a94c333b_Eval> __param_e, jule::Ptr<_1a94c333b_Data> __param_d, jule::Ptr<_1dd05c765_UnaryExpr> __param_u): _field_e(__param_e), _field_d(__param_d), _field_u(__param_u) {}

	

	_1a94c333b_UnaryEval(void) = default;

	static inline _1a94c333b_UnaryEval _static_method_new(jule::Ptr<_1a94c333b_Eval>);


	inline void _method_minus(void);


	inline void _method_plus(void);


	inline void _method_caret(void);


	inline void _method_excl(void);


	inline void _method_star(void);


	inline void _method_amper(void);


	inline void _method_type_decl(void);


	inline void _method_eval_data(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval(jule::Ptr<_1dd05c765_UnaryExpr>);


	inline bool operator==(_1a94c333b_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a94c333b_UnaryEval _other) { return !this->operator==(_other); }


};


struct _1a5e40a26_TypeKind: public _1a5e40a26_Kind {
	jule::Ptr<_1a5e40a26_TypeKind> self;

	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1a5e40a26_Kind> _field_kind = jule::Trait<_1a5e40a26_Kind>();


	_1a5e40a26_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_1a5e40a26_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {
		this->self = jule::Ptr<_1a5e40a26_TypeKind>::make(this, nullptr);

	}

	~_1a5e40a26_TypeKind(void) { this->self.ref = nullptr; }

	_1a5e40a26_TypeKind(void) { this->self = jule::Ptr<_1a5e40a26_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind>);


	inline jule::Bool _method_cpp_linked(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_void(void);


	inline jule::Bool _method_mutable(void);


	inline jule::Bool _method_nil_compatible(void);


	inline jule::Bool _method_performs_rc(void);


	inline jule::Bool _method_supports_cloning(void);


	inline jule::Bool _method_variadicable(void);


	inline jule::Ptr<_1a5e40a26_Prim> _method_prim(void);


	inline jule::Ptr<_1a5e40a26_Sptr> _method_sptr(void);


	inline jule::Ptr<_1a5e40a26_Ptr> _method_ptr(void);


	inline jule::Ptr<_1de0dbeb9_Enum> _method_enm(void);


	inline jule::Ptr<_1a5e40a26_Arr> _method_arr(void);


	inline jule::Ptr<_1a5e40a26_Slc> _method_slc(void);


	inline jule::Ptr<_1dded9702_FnIns> _method_fnc(void);


	inline jule::Ptr<_1dd0be530_StructIns> _method_strct(void);


	inline jule::Ptr<_1de043c01_Trait> _method_trt(void);


	inline jule::Ptr<_1a5e40a26_Map> _method_map(void);


	inline jule::Ptr<_1a5e40a26_Tuple> _method_tup(void);


	inline bool operator==(_1a5e40a26_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a5e40a26_TypeKind _other) { return !this->operator==(_other); }


};


struct _1a5e40a26_TypeSymbol {
	jule::Ptr<_1dd05c765_TypeDecl> _field_decl = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_kind = jule::Ptr<_1a5e40a26_TypeKind>();


	_1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl> __param_decl, jule::Ptr<_1a5e40a26_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1a5e40a26_TypeSymbol(void) = default;

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(_1a5e40a26_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a5e40a26_TypeSymbol _other) { return !this->operator==(_other); }


};


struct _1a5e40a26_Prim: public _1a5e40a26_Kind {
	jule::Ptr<_1a5e40a26_Prim> self;

	jule::Str _field_kind = jule::Str();


	_1a5e40a26_Prim(jule::Str __param_kind): _field_kind(__param_kind) {
		this->self = jule::Ptr<_1a5e40a26_Prim>::make(this, nullptr);

	}

	~_1a5e40a26_Prim(void) { this->self.ref = nullptr; }

	_1a5e40a26_Prim(void) { this->self = jule::Ptr<_1a5e40a26_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(_1a5e40a26_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a5e40a26_Prim _other) { return !this->operator==(_other); }


};


struct _1a5e40a26_Sptr: public _1a5e40a26_Kind {
	jule::Ptr<_1a5e40a26_Sptr> self;

	jule::Ptr<_1a5e40a26_TypeKind> _field_elem = jule::Ptr<_1a5e40a26_TypeKind>();


	_1a5e40a26_Sptr(jule::Ptr<_1a5e40a26_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_1a5e40a26_Sptr>::make(this, nullptr);

	}

	~_1a5e40a26_Sptr(void) { this->self.ref = nullptr; }

	_1a5e40a26_Sptr(void) { this->self = jule::Ptr<_1a5e40a26_Sptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind>);


	inline bool operator==(_1a5e40a26_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a5e40a26_Sptr _other) { return !this->operator==(_other); }


};


struct _1a5e40a26_Slc: public _1a5e40a26_Kind {
	jule::Ptr<_1a5e40a26_Slc> self;

	jule::Ptr<_1a5e40a26_TypeKind> _field_elem = jule::Ptr<_1a5e40a26_TypeKind>();


	_1a5e40a26_Slc(jule::Ptr<_1a5e40a26_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_1a5e40a26_Slc>::make(this, nullptr);

	}

	~_1a5e40a26_Slc(void) { this->self.ref = nullptr; }

	_1a5e40a26_Slc(void) { this->self = jule::Ptr<_1a5e40a26_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind>);


	inline bool operator==(_1a5e40a26_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a5e40a26_Slc _other) { return !this->operator==(_other); }


};


struct _1a5e40a26_Tuple: public _1a5e40a26_Kind {
	jule::Ptr<_1a5e40a26_Tuple> self;

	jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>();


	_1a5e40a26_Tuple(jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>> __param_types): _field_types(__param_types) {
		this->self = jule::Ptr<_1a5e40a26_Tuple>::make(this, nullptr);

	}

	~_1a5e40a26_Tuple(void) { this->self.ref = nullptr; }

	_1a5e40a26_Tuple(void) { this->self = jule::Ptr<_1a5e40a26_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind>);


	inline bool operator==(_1a5e40a26_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1a5e40a26_Tuple _other) { return !this->operator==(_other); }


};


struct _1a5e40a26_Map: public _1a5e40a26_Kind {
	jule::Ptr<_1a5e40a26_Map> self;

	jule::Ptr<_1a5e40a26_TypeKind> _field_key = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_val = jule::Ptr<_1a5e40a26_TypeKind>();


	_1a5e40a26_Map(jule::Ptr<_1a5e40a26_TypeKind> __param_key, jule::Ptr<_1a5e40a26_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {
		this->self = jule::Ptr<_1a5e40a26_Map>::make(this, nullptr);

	}

	~_1a5e40a26_Map(void) { this->self.ref = nullptr; }

	_1a5e40a26_Map(void) { this->self = jule::Ptr<_1a5e40a26_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind>);


	inline bool operator==(_1a5e40a26_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1a5e40a26_Map _other) { return !this->operator==(_other); }


};


struct _1a5e40a26_Arr: public _1a5e40a26_Kind {
	jule::Ptr<_1a5e40a26_Arr> self;

	jule::Bool _field_auto = jule::Bool();
	jule::Int _field_n = jule::Int();
	jule::Ptr<_1a5e40a26_TypeKind> _field_elem = jule::Ptr<_1a5e40a26_TypeKind>();


	_1a5e40a26_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ptr<_1a5e40a26_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {
		this->self = jule::Ptr<_1a5e40a26_Arr>::make(this, nullptr);

	}

	~_1a5e40a26_Arr(void) { this->self.ref = nullptr; }

	_1a5e40a26_Arr(void) { this->self = jule::Ptr<_1a5e40a26_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind>);


	inline bool operator==(_1a5e40a26_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a5e40a26_Arr _other) { return !this->operator==(_other); }


};


struct _1a5e40a26_Ptr: public _1a5e40a26_Kind {
	jule::Ptr<_1a5e40a26_Ptr> self;

	jule::Ptr<_1a5e40a26_TypeKind> _field_elem = jule::Ptr<_1a5e40a26_TypeKind>();


	_1a5e40a26_Ptr(jule::Ptr<_1a5e40a26_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_1a5e40a26_Ptr>::make(this, nullptr);

	}

	~_1a5e40a26_Ptr(void) { this->self.ref = nullptr; }

	_1a5e40a26_Ptr(void) { this->self = jule::Ptr<_1a5e40a26_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(_1a5e40a26_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a5e40a26_Ptr _other) { return !this->operator==(_other); }


};


struct _1a5e40a26_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;


	_1a5e40a26_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_1a5e40a26_Referencer(void) = default;

	inline bool operator==(_1a5e40a26_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a5e40a26_Referencer _other) { return !this->operator==(_other); }


};


struct _1dceea978_DirectiveEval {
	jule::Slice<_1db678789_Log> _field_logs = jule::Slice<_1db678789_Log>();
	jule::Ptr<_1dd05c765_Directive> _field_d = jule::Ptr<_1dd05c765_Directive>();


	_1dceea978_DirectiveEval(jule::Slice<_1db678789_Log> __param_logs, jule::Ptr<_1dd05c765_Directive> __param_d): _field_logs(__param_logs), _field_d(__param_d) {}

	

	_1dceea978_DirectiveEval(void) = default;

	inline void _method_push_err(_1dd05db0c_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Slice<_1dd05db0c_Token>> _method_split_operans(jule::Str,jule::Slice<_1dd05db0c_Token>&);


	inline jule::Bool _method_eval_directive_ident(jule::Str);


	inline jule::Bool _method_eval_directive_part(jule::Slice<_1dd05db0c_Token>);


	inline jule::Bool _method_eval(void);


	inline bool operator==(_1dceea978_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1dceea978_DirectiveEval _other) { return !this->operator==(_other); }


};


struct _1dd023275_PlainImporter: public _1c2c4607e_Importer {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>> _field_all_packages = jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>>();


	_1dd023275_PlainImporter(jule::Slice<jule::Str> __param_mods, jule::Str __param_mod, jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>> __param_all_packages): _field_mods(__param_mods), _field_mod(__param_mod), _field_all_packages(__param_all_packages) {}

	

	_1dd023275_PlainImporter(void) = default;

	static inline jule::Ptr<_1dd023275_PlainImporter> _static_method_new(void);


	inline void _method_set_mod_path(jule::Str);


	inline jule::Str _method_get_mod_path(void);


	inline jule::Str _method_mod_by_id(jule::Int);


	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ptr<_1dd05b9c8_Ast>>,jule::Slice<_1db678789_Log>> _method_import_package(jule::Str,jule::Bool);


	inline void _method_imported(jule::Ptr<_1c2c4607e_ImportInfo>);


	inline bool operator==(_1dd023275_PlainImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_all_packages == _other._field_all_packages;
	}

	inline bool operator!=(_1dd023275_PlainImporter _other) { return !this->operator==(_other); }


};


struct _1dcebc175_OrderedDefines {
	jule::Slice<jule::Ptr<_1dd0be530_Struct>> _field_structs = jule::Slice<jule::Ptr<_1dd0be530_Struct>>();


	_1dcebc175_OrderedDefines(jule::Slice<jule::Ptr<_1dd0be530_Struct>> __param_structs): _field_structs(__param_structs) {}

	

	_1dcebc175_OrderedDefines(void) = default;

	inline bool operator==(_1dcebc175_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs;
	}

	inline bool operator!=(_1dcebc175_OrderedDefines _other) { return !this->operator==(_other); }


};


struct _1dcebc175_DefineOrderer {
	

	_1dcebc175_DefineOrderer(void) = default;

	static inline jule::Bool _static_method_is_common_ordered_0(jule::Slice<jule::Ptr<_1dd0be530_Struct>>&,jule::Ptr<_1dd0be530_Struct>);


	static inline void _static_method_order_common_0(jule::Slice<jule::Ptr<_1dd0be530_Struct>>&);


	static inline void _static_method_order_structures(jule::Slice<jule::Ptr<_1dd0be530_Struct>>&);


	inline bool operator==(_1dcebc175_DefineOrderer _other) { return true; }

	inline bool operator!=(_1dcebc175_DefineOrderer _other) { return !this->operator==(_other); }


};


struct _1db71cbb3_ScopeDeadCode {
	jule::Ptr<_1db71cbb3_ScopeDeadCode> self;

	jule::Ptr<_1db71cbb3_ScopeDeadCode> _field_parent = jule::Ptr<_1db71cbb3_ScopeDeadCode>();
	jule::Ptr<_1de0e938e_Scope> _field_s = jule::Ptr<_1de0e938e_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::Int _field_i = jule::Int();


	_1db71cbb3_ScopeDeadCode(jule::Ptr<_1db71cbb3_ScopeDeadCode> __param_parent, jule::Ptr<_1de0e938e_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::Int __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {
		this->self = jule::Ptr<_1db71cbb3_ScopeDeadCode>::make(this, nullptr);

	}

	~_1db71cbb3_ScopeDeadCode(void) { this->self.ref = nullptr; }

	_1db71cbb3_ScopeDeadCode(void) { this->self = jule::Ptr<_1db71cbb3_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ptr<_1de0e938e_Scope>&);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(_1db71cbb3_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1db71cbb3_ScopeDeadCode _other) { return !this->operator==(_other); }


};


struct _1a69e4ba1_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();


	_1a69e4ba1_AbsTime(jule::U64 __param_day, jule::U64 __param_week_day, jule::U64 __param_year_day, jule::U64 __param_month, jule::U64 __param_year, jule::U64 __param_second, jule::U64 __param_minute, jule::U64 __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_1a69e4ba1_AbsTime(void) = default;

	inline jule::U64 _method_unix(void);


	inline bool operator==(_1a69e4ba1_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1a69e4ba1_AbsTime _other) { return !this->operator==(_other); }


};


struct _1a69e4ba1_Time {
	jule::U64 _field_sec = jule::U64();


	_1a69e4ba1_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_1a69e4ba1_Time(void) = default;

	static inline _1a69e4ba1_Time _static_method_unix(jule::U64);


	static inline _1a69e4ba1_Time _static_method_now(void);


	inline jule::U64 _method_unix(void);


	inline jule::U64 _method_day(void);


	inline jule::U64 _method_month(void);


	inline jule::U64 _method_year(void);


	inline jule::U64 _method_second(void);


	inline jule::U64 _method_minute(void);


	inline jule::U64 _method_hour(void);


	inline _1a69e4ba1_AbsTime _method_abs(void);


	inline bool operator==(_1a69e4ba1_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a69e4ba1_Time _other) { return !this->operator==(_other); }


};


struct _1a69e4ba1_Duration {
	

	_1a69e4ba1_Duration(void) = default;

	static inline jule::I64 _static_method_nanoseconds(jule::I64);


	static inline jule::I64 _static_method_microseconds(jule::I64);


	static inline jule::I64 _static_method_milliseconds(jule::I64);


	static inline jule::I64 _static_method_seconds(jule::I64);


	static inline jule::I64 _static_method_minutes(jule::I64);


	static inline jule::I64 _static_method_hours(jule::I64);


	inline bool operator==(_1a69e4ba1_Duration _other) { return true; }

	inline bool operator!=(_1a69e4ba1_Duration _other) { return !this->operator==(_other); }


};


struct _1db71bcb1_TestCoder {
	jule::Ptr<_1a686ecd4_ObjectCoder> _field_oc = jule::Ptr<_1a686ecd4_ObjectCoder>();


	_1db71bcb1_TestCoder(jule::Ptr<_1a686ecd4_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1db71bcb1_TestCoder(void) = default;

	static inline jule::Ptr<_1db71bcb1_TestCoder> _static_method_new(jule::Ptr<_1a686ecd4_ObjectCoder>&);


	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_find_testing_package(void);


	inline void _method_append_test(jule::Str&,jule::Ptr<_1dded9702_FnIns>);


	inline void _method_append_package_tests(jule::Str&,jule::Ptr<_1c2c4607e_Package>&);


	inline void _method_serialize(jule::Str&);


	inline bool operator==(_1db71bcb1_TestCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1db71bcb1_TestCoder _other) { return !this->operator==(_other); }


};


struct _1dc4e9dbd_ScopeCoder {
	jule::Ptr<_1a686ecd4_ObjectCoder> _field_oc = jule::Ptr<_1a686ecd4_ObjectCoder>();


	_1dc4e9dbd_ScopeCoder(jule::Ptr<_1a686ecd4_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1dc4e9dbd_ScopeCoder(void) = default;

	static inline jule::Ptr<_1dc4e9dbd_ScopeCoder> _static_method_new(jule::Ptr<_1a686ecd4_ObjectCoder>&);


	inline jule::Str _method_range_index_iter(jule::Ptr<_1de0e938e_RangeIter>&);


	inline jule::Str _method_range_hashmap_iter(jule::Ptr<_1de0e938e_RangeIter>&);


	inline jule::Str _method_if_case(jule::Ptr<_1de0e938e_If>);


	inline jule::Str _method_conditional(jule::Ptr<_1de0e938e_Conditional>);


	inline jule::Str _method_inf_iter(jule::Ptr<_1de0e938e_InfIter>);


	inline jule::Str _method_while_iter(jule::Ptr<_1de0e938e_WhileIter>);


	inline jule::Str _method_range_iter(jule::Ptr<_1de0e938e_RangeIter>);


	inline jule::Str _method_cont(jule::Ptr<_1de0e938e_ContSt>);


	inline jule::Str _method_label(jule::Ptr<_1de0e938e_Label>);


	inline jule::Str _method_goto_st(jule::Ptr<_1de0e938e_GotoSt>);


	inline jule::Str _method_postfix(jule::Ptr<_1de0e938e_Postfix>);


	inline jule::Str _method_div_by_zero_assign(jule::Ptr<_1de0e938e_Assign>);


	inline jule::Str _method_assign(jule::Ptr<_1de0e938e_Assign>);


	inline jule::Str _method_multi_assign(jule::Ptr<_1de0e938e_MultiAssign>);


	inline jule::Str _method_match_expr(jule::Ptr<_1de0e938e_Match>&);


	inline jule::Str _method_case(jule::Ptr<_1de0e938e_Match>,jule::Ptr<_1de0e938e_Case>);


	inline jule::Str _method_match_st(jule::Ptr<_1de0e938e_Match>);


	inline jule::Str _method_fall_st(jule::Ptr<_1de0e938e_FallSt>);


	inline jule::Str _method_break_st(jule::Ptr<_1de0e938e_BreakSt>);


	inline jule::Str _method_ret_with_vars(jule::Ptr<_1de0e938e_RetSt>);


	inline jule::Str _method_ret_tuple(jule::Ptr<_1de0e938e_RetSt>);


	inline jule::Str _method_ret_with_exprs(jule::Ptr<_1de0e938e_RetSt>);


	inline jule::Str _method_ret_st(jule::Ptr<_1de0e938e_RetSt>);


	inline jule::Str _method_ret_with_defaults(jule::Ptr<_1a5e40a26_TypeKind>);


	inline jule::Str _method_var(jule::Ptr<_1c3c3d174_Var>);


	inline jule::Str _method_st(jule::Any);


	inline jule::Str _method_scope(jule::Ptr<_1de0e938e_Scope>);


	inline jule::Str _method_func_scope(jule::Ptr<_1dded9702_FnIns>);


	inline bool operator==(_1dc4e9dbd_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1dc4e9dbd_ScopeCoder _other) { return !this->operator==(_other); }


};


struct _1dcb0cd1b_ExprCoder {
	jule::Ptr<_1a686ecd4_ObjectCoder> _field_oc = jule::Ptr<_1a686ecd4_ObjectCoder>();


	_1dcb0cd1b_ExprCoder(jule::Ptr<_1a686ecd4_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1dcb0cd1b_ExprCoder(void) = default;

	static inline jule::Ptr<_1dcb0cd1b_ExprCoder> _static_method_new(jule::Ptr<_1a686ecd4_ObjectCoder>&);


	inline jule::Str _method_string(jule::Ptr<_1a64669ca_Const>&);


	inline jule::Str _method_boolean(jule::Ptr<_1a64669ca_Const>&);


	inline jule::Str _method_nil_lit(void);


	inline jule::Str _method_ftoa_special_cases(jule::F64&);


	inline jule::Str _method_float32(jule::Ptr<_1a64669ca_Const>&);


	inline jule::Str _method_float64(jule::Ptr<_1a64669ca_Const>&);


	inline jule::Str _method_constant(jule::Ptr<_1a64669ca_Const>,jule::Bool);


	inline jule::Str _method_div_by_zero_binary(_1dd05db0c_Token&,jule::Ptr<_1ddb3c047_OperandExprModel>&,jule::Ptr<_1ddb3c047_OperandExprModel>&);


	inline jule::Str _method_binary(jule::Ptr<_1ddb3c047_BinopExprModel>);


	inline jule::Str _method_var(jule::Ptr<_1c3c3d174_Var>);


	inline jule::Str _method_structure(jule::Ptr<_1dd0be530_Struct>);


	inline jule::Str _method_structure_ins(jule::Ptr<_1dd0be530_StructIns>);


	inline jule::Str _method_unary(jule::Ptr<_1ddb3c047_UnaryExprModel>);


	inline jule::Str _method_cpp_structure_lit(jule::Ptr<_1ddb3c047_StructLitExprModel>);


	inline jule::Str _method_structure_lit(jule::Ptr<_1ddb3c047_StructLitExprModel>);


	inline jule::Str _method_alloc_structure(jule::Ptr<_1ddb3c047_AllocStructLitExprModel>);


	inline jule::Str _method_casting(jule::Ptr<_1ddb3c047_CastingExprModel>);


	inline jule::Str _method_args(jule::Slice<jule::Any>);


	inline jule::Str _method_model_for_call(jule::Any);


	inline jule::Str _method_pure_func_call(jule::Ptr<_1ddb3c047_FnCallExprModel>&);


	inline jule::Str _method_func_call(jule::Ptr<_1ddb3c047_FnCallExprModel>);


	inline jule::Str _method_slice(jule::Ptr<_1ddb3c047_SliceExprModel>);


	inline jule::Str _method_indexing(jule::Ptr<_1ddb3c047_IndexingExprModel>);


	inline jule::Str _method_anon_func(jule::Ptr<_1ddb3c047_AnonFnExprModel>);


	inline jule::Str _method_map(jule::Ptr<_1ddb3c047_MapExprModel>);


	inline jule::Str _method_slicing(jule::Ptr<_1ddb3c047_SlicingExprModel>);


	inline jule::Str _method_trait_sub(jule::Ptr<_1ddb3c047_TraitSubIdentExprModel>);


	inline jule::Str _method_structure_sub(jule::Ptr<_1ddb3c047_StructSubIdentExprModel>);


	inline jule::Str _method_common_ident(jule::Ptr<_1ddb3c047_CommonIdentExprModel>);


	inline jule::Str _method_common_sub(jule::Ptr<_1ddb3c047_CommonSubIdentExprModel>);


	inline jule::Str _method_array(jule::Ptr<_1ddb3c047_ArrayExprModel>);


	inline jule::Str _method_func_ins_common(jule::Ptr<_1dded9702_FnIns>);


	inline jule::Str _method_func_ins(jule::Ptr<_1dded9702_FnIns>);


	inline jule::Str _method_tuple(jule::Ptr<_1ddb3c047_TupleExprModel>);


	inline jule::Str _method_new_call(jule::Ptr<_1ddb3c047_BuiltinNewCallExprModel>);


	inline jule::Str _method_out_call(jule::Ptr<_1ddb3c047_BuiltinOutCallExprModel>);


	inline jule::Str _method_outln_call(jule::Ptr<_1ddb3c047_BuiltinOutlnCallExprModel>);


	inline jule::Str _method_panic_call(jule::Ptr<_1ddb3c047_BuiltinPanicCallExprModel>);


	inline jule::Str _method_assert_call(jule::Ptr<_1ddb3c047_BuiltinAssertCallExprModel>);


	inline jule::Str _method_error_call(jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel>);


	inline jule::Str _method_make_call(jule::Ptr<_1ddb3c047_BuiltinMakeCallExprModel>);


	inline jule::Str _method___append_call_assign(jule::Str&,jule::Ptr<_1a5e40a26_TypeKind>&,jule::Ptr<_1ddb3c047_SliceExprModel>&,jule::Ptr<_1ddb3c047_BuiltinAppendCallExprModel>&);


	inline std::tuple<jule::Str,jule::Bool> _method_append_call_assign(jule::Any,jule::Ptr<_1ddb3c047_BuiltinAppendCallExprModel>);


	inline jule::Str _method_append_call(jule::Ptr<_1ddb3c047_BuiltinAppendCallExprModel>);


	inline jule::Str _method_clone_call(jule::Ptr<_1ddb3c047_BuiltinCloneCallExprModel>);


	inline jule::Str _method_sizeof(jule::Ptr<_1ddb3c047_SizeofExprModel>);


	inline jule::Str _method_alignof(jule::Ptr<_1ddb3c047_AlignofExprModel>);


	inline jule::Str _method_rune_lit(jule::Ptr<_1ddb3c047_RuneExprModel>);


	inline jule::Str _method_structure_static(jule::Ptr<_1ddb3c047_StructStaticIdentExprModel>);


	inline jule::Str _method_integrated_to_str(jule::Ptr<_1ddb3c047_IntegratedToStrExprModel>);


	inline jule::Str _method_ternary(jule::Ptr<_1ddb3c047_TernaryExprModel>);


	inline jule::Str _method_backend_emit(jule::Ptr<_1ddb3c047_BackendEmitExprModel>);


	inline jule::Str _method_free(jule::Ptr<_1ddb3c047_FreeExprModel>);


	inline jule::Str _method_model(jule::Any);


	inline jule::Str _method_expr(jule::Any);


	inline jule::Str _method_val(jule::Ptr<_1a94c333b_Value>);


	inline jule::Str _method_init_expr(jule::Ptr<_1a5e40a26_TypeKind>);


	inline bool operator==(_1dcb0cd1b_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1dcb0cd1b_ExprCoder _other) { return !this->operator==(_other); }


};


struct _1a6849484_DeriveCoder {
	

	_1a6849484_DeriveCoder(void) = default;

	static inline jule::Str _static_method_clone_func_decl(jule::Ptr<_1dd0be530_Struct>&);


	static inline jule::Str _static_method_clone_func_def(jule::Ptr<_1dd0be530_Struct>&);


	inline bool operator==(_1a6849484_DeriveCoder _other) { return true; }

	inline bool operator!=(_1a6849484_DeriveCoder _other) { return !this->operator==(_other); }


};


struct _1a670d28d_IdentCoder {
	

	_1a670d28d_IdentCoder(void) = default;

	static inline jule::Str _static_method_to_ident(jule::Str);


	static inline jule::Str _static_method_addr(jule::Uintptr);


	static inline jule::Str _static_method_to_out(jule::Str,jule::Uintptr);


	static inline jule::Str _static_method_to_local(jule::Int,jule::Int,jule::Str);


	static inline jule::Str _static_method_func(jule::Ptr<_1dded9702_Fn>&);


	static inline jule::Str _static_method_func_ins(jule::Ptr<_1dded9702_FnIns>&);


	static inline jule::Str _static_method_trait_decl(jule::Ptr<_1de043c01_Trait>);


	static inline jule::Str _static_method_param(jule::Ptr<_1dded9702_Param>&);


	static inline jule::Str _static_method_structure(jule::Ptr<_1dd0be530_Struct>&);


	static inline jule::Str _static_method_structure_ins(jule::Ptr<_1dd0be530_StructIns>&);


	static inline jule::Str _static_method_field(jule::Ptr<_1dd0be530_Field>&);


	static inline jule::Str _static_method_var(jule::Ptr<_1c3c3d174_Var>);


	static inline jule::Str _static_method_iter_begin(jule::Uintptr);


	static inline jule::Str _static_method_iter_end(jule::Uintptr);


	static inline jule::Str _static_method_iter_next(jule::Uintptr);


	static inline jule::Str _static_method_label(jule::Str);


	static inline jule::Str _static_method_match_end(jule::Uintptr);


	static inline jule::Str _static_method_case_begin(jule::Uintptr);


	inline bool operator==(_1a670d28d_IdentCoder _other) { return true; }

	inline bool operator!=(_1a670d28d_IdentCoder _other) { return !this->operator==(_other); }


};


struct _1a686ecd4_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();


	_1a686ecd4_SerializationInfo(jule::Str __param_compiler, jule::Str __param_compiler_command): _field_compiler(__param_compiler), _field_compiler_command(__param_compiler_command) {}

	

	_1a686ecd4_SerializationInfo(void) = default;

	inline bool operator==(_1a686ecd4_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1a686ecd4_SerializationInfo _other) { return !this->operator==(_other); }


};


struct _1a696bb06_TypeCoder {
	

	_1a696bb06_TypeCoder(void) = default;

	static inline jule::Str _static_method_to_type(jule::Str);


	static inline jule::Str _static_method_prim(jule::Ptr<_1a5e40a26_Prim>);


	static inline jule::Str _static_method_tuple(jule::Ptr<_1a5e40a26_Tuple>);


	static inline jule::Str _static_method_as_sptr(jule::Str);


	static inline jule::Str _static_method_sptr(jule::Ptr<_1a5e40a26_Sptr>);


	static inline jule::Str _static_method_ptr(jule::Ptr<_1a5e40a26_Ptr>);


	static inline jule::Str _static_method_enum_decl(jule::Ptr<_1de0dbeb9_Enum>);


	static inline jule::Str _static_method_as_slice(jule::Ptr<_1a5e40a26_TypeKind>);


	static inline jule::Str _static_method_slice(jule::Ptr<_1a5e40a26_Slc>);


	static inline jule::Str _static_method_map(jule::Ptr<_1a5e40a26_Map>);


	static inline jule::Str _static_method_trait_ident(jule::Str);


	static inline jule::Str _static_method_trait_decl(jule::Ptr<_1de043c01_Trait>);


	static inline jule::Str _static_method_structure(jule::Ptr<_1dd0be530_Struct>);


	static inline jule::Str _static_method_structure_ins(jule::Ptr<_1dd0be530_StructIns>);


	static inline jule::Str _static_method_array(jule::Ptr<_1a5e40a26_Arr>);


	static inline jule::Str _static_method_param(jule::Ptr<_1dded9702_Param>&);


	static inline jule::Str _static_method_param_ins(jule::Ptr<_1dded9702_ParamIns>&);


	static inline jule::Str _static_method_func_result(jule::Ptr<_1dded9702_Fn>&);


	static inline jule::Str _static_method_func_ins_result(jule::Ptr<_1dded9702_FnIns>&);


	static inline jule::Str _static_method_anon_func(jule::Ptr<_1dded9702_FnIns>);


	static inline jule::Str _static_method_func(jule::Ptr<_1dded9702_FnIns>);


	static inline jule::Str _static_method_kind(jule::Ptr<_1a5e40a26_TypeKind>);


	inline bool operator==(_1a696bb06_TypeCoder _other) { return true; }

	inline bool operator!=(_1a696bb06_TypeCoder _other) { return !this->operator==(_other); }


};


struct _1dc4c9760_ScopeOptimizer {
	jule::Int _field_i = jule::Int();
	jule::Ptr<_1de0e938e_Scope> _field_scope = jule::Ptr<_1de0e938e_Scope>();


	_1dc4c9760_ScopeOptimizer(jule::Int __param_i, jule::Ptr<_1de0e938e_Scope> __param_scope): _field_i(__param_i), _field_scope(__param_scope) {}

	

	_1dc4c9760_ScopeOptimizer(void) = default;

	static inline jule::Ptr<_1dc4c9760_ScopeOptimizer> _static_method_new(jule::Ptr<_1de0e938e_Scope>);


	inline void _method_set_current_stmt(jule::Any);


	inline jule::Any _method_current_stmt(void);


	inline void _method_optimize_data(jule::Ptr<_1a94c333b_Data>);


	inline void _method_optimize_conditional(jule::Ptr<_1de0e938e_Conditional>);


	inline void _method_optimize_match(jule::Ptr<_1de0e938e_Match>);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_child(jule::Ptr<_1de0e938e_Scope>);


	inline void _method_optimize(void);


	inline bool operator==(_1dc4c9760_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1dc4c9760_ScopeOptimizer _other) { return !this->operator==(_other); }


};


struct _1dce62659_Optimizer {
	jule::Ptr<_1dcecd043_IR> _field_ir = jule::Ptr<_1dcecd043_IR>();


	_1dce62659_Optimizer(jule::Ptr<_1dcecd043_IR> __param_ir): _field_ir(__param_ir) {}

	

	_1dce62659_Optimizer(void) = default;

	static inline jule::Ptr<_1dce62659_Optimizer> _static_method_new(jule::Ptr<_1dcecd043_IR>&);


	inline void _method_optimize_function(jule::Ptr<_1dded9702_Fn>&);


	inline void _method_optimize_struct(jule::Ptr<_1dd0be530_Struct>&);


	inline void _method_optimize_functions(jule::Ptr<_1c2c4607e_Package>&);


	inline void _method_optimize_structs(jule::Ptr<_1c2c4607e_Package>&);


	inline void _method_optimize_package(jule::Ptr<_1c2c4607e_Package>&);


	inline void _method_optimize(void);


	inline bool operator==(_1dce62659_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1dce62659_Optimizer _other) { return !this->operator==(_other); }


};


struct _1dc4768b6_Flag_0: public _1dc4768b6_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();


	_1dc4768b6_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::I64 __param__default, jule::Str __param__what, jule::Ptr<jule::I64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1dc4768b6_Flag_0(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(_1dc4768b6_Flag_0 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1dc4768b6_Flag_0 _other) { return !this->operator==(_other); }


};

struct _1dc4768b6_Flag_1: public _1dc4768b6_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();


	_1dc4768b6_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::U64 __param__default, jule::Str __param__what, jule::Ptr<jule::U64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1dc4768b6_Flag_1(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(_1dc4768b6_Flag_1 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1dc4768b6_Flag_1 _other) { return !this->operator==(_other); }


};

struct _1dc4768b6_Flag_2: public _1dc4768b6_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();


	_1dc4768b6_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ptr<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1dc4768b6_Flag_2(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(_1dc4768b6_Flag_2 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1dc4768b6_Flag_2 _other) { return !this->operator==(_other); }


};

struct _1dc4768b6_Flag_3: public _1dc4768b6_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();


	_1dc4768b6_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ptr<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1dc4768b6_Flag_3(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(_1dc4768b6_Flag_3 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1dc4768b6_Flag_3 _other) { return !this->operator==(_other); }


};

struct _1dc4768b6_Flag_4: public _1dc4768b6_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();


	_1dc4768b6_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ptr<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1dc4768b6_Flag_4(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(_1dc4768b6_Flag_4 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1dc4768b6_Flag_4 _other) { return !this->operator==(_other); }


};


struct _1dc4768b6_FlagSet {
	jule::Slice<jule::Trait<_1dc4768b6_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1dc4768b6_CommonFlag>>();


	_1dc4768b6_FlagSet(jule::Slice<jule::Trait<_1dc4768b6_CommonFlag>> __param__flags): _field__flags(__param__flags) {}

	

	_1dc4768b6_FlagSet(void) = default;

	static inline jule::Ptr<_1dc4768b6_FlagSet> _static_method_new(void);


	inline jule::Trait<_1dc4768b6_CommonFlag> _method_find_flag(jule::Str);


	inline jule::Trait<_1dc4768b6_CommonFlag> _method_find_flag_short(jule::I32);


	inline jule::Slice<jule::Trait<_1dc4768b6_CommonFlag>> _method_flags(void);


	inline jule::Exceptional<jule::Slice<jule::Str>> _method_parse(jule::Slice<jule::Str>);


	inline void _method_reset(void);


	inline jule::Ptr<_1dc4768b6_Flag_4> _method_add_flag_common_0(jule::Str,jule::I32,jule::Str);
	inline jule::Ptr<_1dc4768b6_Flag_3> _method_add_flag_common_1(jule::Str,jule::I32,jule::Str);




	inline void _method_add_var_0(jule::Ptr<jule::Str>,jule::Str,jule::I32,jule::Str);
	inline void _method_add_var_1(jule::Ptr<jule::Bool>,jule::Str,jule::I32,jule::Str);


	inline bool operator==(_1dc4768b6_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1dc4768b6_FlagSet _other) { return !this->operator==(_other); }


};


struct _1dded9702_Param {
	jule::Ptr<_1dded9702_Param> self;

	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a5e40a26_TypeSymbol> _field_kind = jule::Ptr<_1a5e40a26_TypeSymbol>();
	jule::Str _field_ident = jule::Str();


	_1dded9702_Param(_1dd05db0c_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1a5e40a26_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {
		this->self = jule::Ptr<_1dded9702_Param>::make(this, nullptr);

	}

	~_1dded9702_Param(void) { this->self.ref = nullptr; }

	_1dded9702_Param(void) { this->self = jule::Ptr<_1dded9702_Param>::make(this, nullptr); }

	inline jule::Ptr<_1dded9702_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(_1dded9702_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dded9702_Param _other) { return !this->operator==(_other); }


};


struct _1dded9702_Fn {
	jule::Ptr<_1dded9702_Fn> self;

	jule::Ptr<_1c2c46634_Sema> _field_sema = jule::Ptr<_1c2c46634_Sema>();
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1dd05c765_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd05c765_Directive>>();
	jule::Str _field_doc = jule::Str();
	jule::Ptr<_1dd05c765_ScopeTree> _field_scope = jule::Ptr<_1dd05c765_ScopeTree>();
	jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>();
	jule::Ptr<_1dded9702_RetType> _field_result = jule::Ptr<_1dded9702_RetType>();
	jule::Slice<jule::Ptr<_1dded9702_Param>> _field_params = jule::Slice<jule::Ptr<_1dded9702_Param>>();
	jule::Ptr<_1dd0be530_Struct> _field_owner = jule::Ptr<_1dd0be530_Struct>();
	jule::Slice<jule::Ptr<_1dded9702_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1dded9702_FnIns>>();


	_1dded9702_Fn(jule::Ptr<_1c2c46634_Sema> __param_sema, _1dd05db0c_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_1dd05c765_Directive>> __param_directives, jule::Str __param_doc, jule::Ptr<_1dd05c765_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> __param_generics, jule::Ptr<_1dded9702_RetType> __param_result, jule::Slice<jule::Ptr<_1dded9702_Param>> __param_params, jule::Ptr<_1dd0be530_Struct> __param_owner, jule::Slice<jule::Ptr<_1dded9702_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc(__param_doc), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {
		this->self = jule::Ptr<_1dded9702_Fn>::make(this, nullptr);

	}

	~_1dded9702_Fn(void) { this->self.ref = nullptr; }

	_1dded9702_Fn(void) { this->self = jule::Ptr<_1dded9702_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ptr<_1dded9702_FnIns> _method_instance_force(void);


	inline jule::Ptr<_1dded9702_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ptr<_1dded9702_FnIns>&);


	inline bool operator==(_1dded9702_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_doc == _other._field_doc &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1dded9702_Fn _other) { return !this->operator==(_other); }


};


struct _1dd05c765_Expr {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_kind = jule::Any();


	_1dd05c765_Expr(_1dd05db0c_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1dd05c765_Expr(void) = default;

	inline bool operator==(_1dd05c765_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dd05c765_Expr _other) { return !this->operator==(_other); }


};


struct _1dd05c765_UseExpr {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Ptr<_1dd05c765_Expr> _field_expr = jule::Ptr<_1dd05c765_Expr>();


	_1dd05c765_UseExpr(_1dd05db0c_Token __param_token, jule::Ptr<_1dd05c765_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1dd05c765_UseExpr(void) = default;

	inline bool operator==(_1dd05c765_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dd05c765_UseExpr _other) { return !this->operator==(_other); }


};


struct _1dd05c765_TypeDecl {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_kind = jule::Any();


	_1dd05c765_TypeDecl(_1dd05db0c_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1dd05c765_TypeDecl(void) = default;

	inline bool operator==(_1dd05c765_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dd05c765_TypeDecl _other) { return !this->operator==(_other); }


};


struct _1dded9779_Pass {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_text = jule::Str();


	_1dded9779_Pass(_1dd05db0c_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1dded9779_Pass(void) = default;

	inline bool operator==(_1dded9779_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1dded9779_Pass _other) { return !this->operator==(_other); }


};


struct _1dd05c765_LitExpr {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_value = jule::Str();


	_1dd05c765_LitExpr(_1dd05db0c_Token __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_1dd05c765_LitExpr(void) = default;

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(_1dd05c765_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1dd05c765_LitExpr _other) { return !this->operator==(_other); }


};


struct _1de043c01_Trait: public _1a5e40a26_Kind {
	jule::Ptr<_1de043c01_Trait> self;

	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Ptr<_1dded9702_Fn>> _field_methods = jule::Slice<jule::Ptr<_1dded9702_Fn>>();
	jule::Slice<jule::Ptr<_1dd0be530_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1dd0be530_Struct>>();


	_1de043c01_Trait(_1dd05db0c_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_doc, jule::Slice<jule::Ptr<_1dded9702_Fn>> __param_methods, jule::Slice<jule::Ptr<_1dd0be530_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_doc(__param_doc), _field_methods(__param_methods), _field_implemented(__param_implemented) {
		this->self = jule::Ptr<_1de043c01_Trait>::make(this, nullptr);

	}

	~_1de043c01_Trait(void) { this->self.ref = nullptr; }

	_1de043c01_Trait(void) { this->self = jule::Ptr<_1de043c01_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ptr<_1dded9702_Fn> _method_find_method(jule::Str);


	inline bool operator==(_1de043c01_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_doc == _other._field_doc &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1de043c01_Trait _other) { return !this->operator==(_other); }


};


struct _1de0dbeb9_EnumItem {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a94c333b_Value> _field_value = jule::Ptr<_1a94c333b_Value>();


	_1de0dbeb9_EnumItem(_1dd05db0c_Token __param_token, jule::Str __param_ident, jule::Ptr<_1a94c333b_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_1de0dbeb9_EnumItem(void) = default;

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(_1de0dbeb9_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1de0dbeb9_EnumItem _other) { return !this->operator==(_other); }


};


struct _1de0dbeb9_Enum: public _1a5e40a26_Kind {
	jule::Ptr<_1de0dbeb9_Enum> self;

	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a5e40a26_TypeSymbol> _field_kind = jule::Ptr<_1a5e40a26_TypeSymbol>();
	jule::Slice<jule::Ptr<_1de0dbeb9_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1de0dbeb9_EnumItem>>();
	jule::Str _field_doc = jule::Str();


	_1de0dbeb9_Enum(_1dd05db0c_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1a5e40a26_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_1de0dbeb9_EnumItem>> __param_items, jule::Str __param_doc): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc(__param_doc) {
		this->self = jule::Ptr<_1de0dbeb9_Enum>::make(this, nullptr);

	}

	~_1de0dbeb9_Enum(void) { this->self.ref = nullptr; }

	_1de0dbeb9_Enum(void) { this->self = jule::Ptr<_1de0dbeb9_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind>);


	inline jule::Ptr<_1de0dbeb9_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(_1de0dbeb9_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_doc == _other._field_doc;
	}

	inline bool operator!=(_1de0dbeb9_Enum _other) { return !this->operator==(_other); }


};


struct _1dd05c765_UnsafeExpr {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_expr = jule::Any();


	_1dd05c765_UnsafeExpr(_1dd05db0c_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1dd05c765_UnsafeExpr(void) = default;

	inline bool operator==(_1dd05c765_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dd05c765_UnsafeExpr _other) { return !this->operator==(_other); }


};


struct _1dd05c765_CoExpr {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Ptr<_1dd05c765_Expr> _field_expr = jule::Ptr<_1dd05c765_Expr>();


	_1dd05c765_CoExpr(_1dd05db0c_Token __param_token, jule::Ptr<_1dd05c765_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1dd05c765_CoExpr(void) = default;

	inline bool operator==(_1dd05c765_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dd05c765_CoExpr _other) { return !this->operator==(_other); }


};


struct _1dd05c765_IdentExpr {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();


	_1dd05c765_IdentExpr(_1dd05db0c_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_1dd05c765_IdentExpr(void) = default;

	inline jule::Bool _method_is_self(void);


	inline bool operator==(_1dd05c765_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_1dd05c765_IdentExpr _other) { return !this->operator==(_other); }


};


struct _1dd05c765_UnaryExpr {
	_1dd05db0c_Token _field_op = _1dd05db0c_Token();
	jule::Any _field_expr = jule::Any();


	_1dd05c765_UnaryExpr(_1dd05db0c_Token __param_op, jule::Any __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_1dd05c765_UnaryExpr(void) = default;

	inline bool operator==(_1dd05c765_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dd05c765_UnaryExpr _other) { return !this->operator==(_other); }


};


struct _1dd05c765_VariadicExpr {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_expr = jule::Any();


	_1dd05c765_VariadicExpr(_1dd05db0c_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1dd05c765_VariadicExpr(void) = default;

	inline bool operator==(_1dd05c765_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dd05c765_VariadicExpr _other) { return !this->operator==(_other); }


};


struct _1dd05c765_IdentTypeDecl {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>();


	_1dd05c765_IdentTypeDecl(_1dd05db0c_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_1dd05c765_IdentTypeDecl(void) = default;

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(_1dd05c765_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1dd05c765_IdentTypeDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_NsSelectionExpr {
	jule::Slice<_1dd05db0c_Token> _field_ns = jule::Slice<_1dd05db0c_Token>();
	_1dd05db0c_Token _field_ident = _1dd05db0c_Token();


	_1dd05c765_NsSelectionExpr(jule::Slice<_1dd05db0c_Token> __param_ns, _1dd05db0c_Token __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_1dd05c765_NsSelectionExpr(void) = default;

	inline bool operator==(_1dd05c765_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dd05c765_NsSelectionExpr _other) { return !this->operator==(_other); }


};


struct _1dd05c765_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Any _field_expr = jule::Any();
	_1dd05db0c_Token _field_ident = _1dd05db0c_Token();


	_1dd05c765_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _1dd05db0c_Token __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1dd05c765_SubIdentExpr(void) = default;

	inline bool operator==(_1dd05c765_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dd05c765_SubIdentExpr _other) { return !this->operator==(_other); }


};


struct _1dd05c765_BinopExpr {
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	_1dd05db0c_Token _field_op = _1dd05db0c_Token();


	_1dd05c765_BinopExpr(jule::Any __param_left, jule::Any __param_right, _1dd05db0c_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1dd05c765_BinopExpr(void) = default;

	inline bool operator==(_1dd05c765_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1dd05c765_BinopExpr _other) { return !this->operator==(_other); }


};


struct _1ddb61a2d_AssignInfo {
	jule::Slice<_1dd05db0c_Token> _field_l = jule::Slice<_1dd05db0c_Token>();
	jule::Slice<_1dd05db0c_Token> _field_r = jule::Slice<_1dd05db0c_Token>();
	_1dd05db0c_Token _field_setter = _1dd05db0c_Token();
	jule::Bool _field_ok = jule::Bool();


	_1ddb61a2d_AssignInfo(jule::Slice<_1dd05db0c_Token> __param_l, jule::Slice<_1dd05db0c_Token> __param_r, _1dd05db0c_Token __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_1ddb61a2d_AssignInfo(void) = default;

	inline bool operator==(_1ddb61a2d_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1ddb61a2d_AssignInfo _other) { return !this->operator==(_other); }


};


struct _1dd05c765_FnCallExpr {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Ptr<_1dd05c765_Expr> _field_expr = jule::Ptr<_1dd05c765_Expr>();
	jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>();
	jule::Slice<jule::Ptr<_1dd05c765_Expr>> _field_args = jule::Slice<jule::Ptr<_1dd05c765_Expr>>();
	jule::Ptr<_1dd05c765_ScopeTree> _field_exception = jule::Ptr<_1dd05c765_ScopeTree>();


	_1dd05c765_FnCallExpr(_1dd05db0c_Token __param_token, jule::Ptr<_1dd05c765_Expr> __param_expr, jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> __param_generics, jule::Slice<jule::Ptr<_1dd05c765_Expr>> __param_args, jule::Ptr<_1dd05c765_ScopeTree> __param_exception): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_exception(__param_exception) {}

	

	_1dd05c765_FnCallExpr(void) = default;

	inline jule::Bool _method_unhandled(void);


	inline jule::Bool _method_ignored(void);


	inline bool operator==(_1dd05c765_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_1dd05c765_FnCallExpr _other) { return !this->operator==(_other); }


};


struct _1dd05c765_FieldExprPair {
	_1dd05db0c_Token _field_field = _1dd05db0c_Token();
	jule::Any _field_expr = jule::Any();


	_1dd05c765_FieldExprPair(_1dd05db0c_Token __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1dd05c765_FieldExprPair(void) = default;

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(_1dd05c765_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dd05c765_FieldExprPair _other) { return !this->operator==(_other); }


};


struct _1dd05c765_Node {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_data = jule::Any();


	_1dd05c765_Node(_1dd05db0c_Token __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_1dd05c765_Node(void) = default;

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_directive(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(_1dd05c765_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1dd05c765_Node _other) { return !this->operator==(_other); }


};


struct _1de0e938e_Assign {
	jule::Ptr<_1ddb3c047_OperandExprModel> _field_l = jule::Ptr<_1ddb3c047_OperandExprModel>();
	jule::Ptr<_1ddb3c047_OperandExprModel> _field_r = jule::Ptr<_1ddb3c047_OperandExprModel>();
	_1dd05db0c_Token _field_op = _1dd05db0c_Token();


	_1de0e938e_Assign(jule::Ptr<_1ddb3c047_OperandExprModel> __param_l, jule::Ptr<_1ddb3c047_OperandExprModel> __param_r, _1dd05db0c_Token __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1de0e938e_Assign(void) = default;

	inline bool operator==(_1de0e938e_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1de0e938e_Assign _other) { return !this->operator==(_other); }


};


struct _1dd05c765_BraceLit {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_1dd05c765_BraceLit(_1dd05db0c_Token __param_token, jule::Slice<jule::Any> __param_exprs): _field_token(__param_token), _field_exprs(__param_exprs) {}

	

	_1dd05c765_BraceLit(void) = default;

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(_1dd05c765_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1dd05c765_BraceLit _other) { return !this->operator==(_other); }


};


struct _1dd05c765_KeyValPair {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	_1dd05db0c_Token _field_colon = _1dd05db0c_Token();


	_1dd05c765_KeyValPair(jule::Any __param_key, jule::Any __param_val, _1dd05db0c_Token __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_1dd05c765_KeyValPair(void) = default;

	inline bool operator==(_1dd05c765_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_1dd05c765_KeyValPair _other) { return !this->operator==(_other); }


};


struct _1dd05c765_SliceExpr {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1dd05c765_SliceExpr(_1dd05db0c_Token __param_token, jule::Slice<jule::Any> __param_elems): _field_token(__param_token), _field_elems(__param_elems) {}

	

	_1dd05c765_SliceExpr(void) = default;

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(_1dd05c765_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1dd05c765_SliceExpr _other) { return !this->operator==(_other); }


};


struct _1dd0be530_Field {
	jule::Ptr<_1dd0be530_Field> self;

	jule::Ptr<_1dd0be530_Struct> _field_owner = jule::Ptr<_1dd0be530_Struct>();
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a5e40a26_TypeSymbol> _field_kind = jule::Ptr<_1a5e40a26_TypeSymbol>();
	jule::Ptr<_1dd05c765_Expr> _field_default = jule::Ptr<_1dd05c765_Expr>();


	_1dd0be530_Field(jule::Ptr<_1dd0be530_Struct> __param_owner, _1dd05db0c_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1a5e40a26_TypeSymbol> __param_kind, jule::Ptr<_1dd05c765_Expr> __param_default): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {
		this->self = jule::Ptr<_1dd0be530_Field>::make(this, nullptr);

	}

	~_1dd0be530_Field(void) { this->self.ref = nullptr; }

	_1dd0be530_Field(void) { this->self = jule::Ptr<_1dd0be530_Field>::make(this, nullptr); }

	inline jule::Ptr<_1dd0be530_FieldIns> _method_instance(void);


	inline bool operator==(_1dd0be530_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1dd0be530_Field _other) { return !this->operator==(_other); }


};


struct _1dd05c765_IndexingExpr {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_index = jule::Any();


	_1dd05c765_IndexingExpr(_1dd05db0c_Token __param_token, jule::Any __param_expr, jule::Any __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1dd05c765_IndexingExpr(void) = default;

	inline bool operator==(_1dd05c765_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1dd05c765_IndexingExpr _other) { return !this->operator==(_other); }


};


struct _1de0e938e_ScopeLabel {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Ptr<_1de0e938e_Label> _field_label = jule::Ptr<_1de0e938e_Label>();
	jule::Int _field_pos = jule::Int();
	jule::Ptr<_1de0e938e_ScopeChecker> _field_scope = jule::Ptr<_1de0e938e_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();


	_1de0e938e_ScopeLabel(_1dd05db0c_Token __param_token, jule::Ptr<_1de0e938e_Label> __param_label, jule::Int __param_pos, jule::Ptr<_1de0e938e_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_1de0e938e_ScopeLabel(void) = default;

	inline bool operator==(_1de0e938e_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1de0e938e_ScopeLabel _other) { return !this->operator==(_other); }


};


struct _1dd05c765_SlicingExpr {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_start = jule::Any();
	jule::Any _field_to = jule::Any();


	_1dd05c765_SlicingExpr(_1dd05db0c_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to): _field_token(__param_token), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_1dd05c765_SlicingExpr(void) = default;

	inline bool operator==(_1dd05c765_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1dd05c765_SlicingExpr _other) { return !this->operator==(_other); }


};


struct _1dd0be530_Struct {
	jule::Ptr<_1dd0be530_Struct> self;

	jule::Ptr<_1c2c46634_Sema> _field_sema = jule::Ptr<_1c2c46634_Sema>();
	jule::Slice<jule::Ptr<_1dd0be530_Struct>> _field_depends = jule::Slice<jule::Ptr<_1dd0be530_Struct>>();
	jule::Slice<jule::Ptr<_1dd0be530_Struct>> _field_uses = jule::Slice<jule::Ptr<_1dd0be530_Struct>>();
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1dd0be530_Field>> _field_fields = jule::Slice<jule::Ptr<_1dd0be530_Field>>();
	jule::Slice<jule::Ptr<_1dded9702_Fn>> _field_methods = jule::Slice<jule::Ptr<_1dded9702_Fn>>();
	jule::Slice<jule::Ptr<_1c3c3d174_Var>> _field_statics = jule::Slice<jule::Ptr<_1c3c3d174_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1dd05c765_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd05c765_Directive>>();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>();
	jule::Slice<jule::Ptr<_1de043c01_Trait>> _field_implements = jule::Slice<jule::Ptr<_1de043c01_Trait>>();
	_1dd0be530_OperatorMap _field_operators = _1dd0be530_OperatorMap();
	jule::Slice<jule::Ptr<_1dd0be530_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1dd0be530_StructIns>>();


	_1dd0be530_Struct(jule::Ptr<_1c2c46634_Sema> __param_sema, jule::Slice<jule::Ptr<_1dd0be530_Struct>> __param_depends, jule::Slice<jule::Ptr<_1dd0be530_Struct>> __param_uses, _1dd05db0c_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_1dd0be530_Field>> __param_fields, jule::Slice<jule::Ptr<_1dded9702_Fn>> __param_methods, jule::Slice<jule::Ptr<_1c3c3d174_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1dd05c765_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> __param_generics, jule::Slice<jule::Ptr<_1de043c01_Trait>> __param_implements, _1dd0be530_OperatorMap __param_operators, jule::Slice<jule::Ptr<_1dd0be530_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc(__param_doc), _field_generics(__param_generics), _field_implements(__param_implements), _field_operators(__param_operators), _field_instances(__param_instances) {
		this->self = jule::Ptr<_1dd0be530_Struct>::make(this, nullptr);

	}

	~_1dd0be530_Struct(void) { this->self.ref = nullptr; }

	_1dd0be530_Struct(void) { this->self = jule::Ptr<_1dd0be530_Struct>::make(this, nullptr); }

	inline jule::Ptr<_1dd0be530_StructIns> _method_instance(void);


	inline jule::Ptr<_1dd0be530_StructIns> _method_append_instance(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Ptr<_1dded9702_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ptr<_1c3c3d174_Var> _method_find_static(jule::Str);


	inline jule::Ptr<_1dd0be530_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ptr<_1de043c01_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ptr<_1dd0be530_Struct>);


	inline jule::Bool _method_has_ref_accessible(void);


	inline bool operator==(_1dd0be530_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_doc == _other._field_doc &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_operators == _other._field_operators &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1dd0be530_Struct _other) { return !this->operator==(_other); }


};


struct _1dd05c765_TernaryExpr {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_condition = jule::Any();
	jule::Any _field_true_expr = jule::Any();
	jule::Any _field_false_expr = jule::Any();


	_1dd05c765_TernaryExpr(_1dd05db0c_Token __param_token, jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_token(__param_token), _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_1dd05c765_TernaryExpr(void) = default;

	inline bool operator==(_1dd05c765_TernaryExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_condition == _other._field_condition &&
			this->_field_true_expr == _other._field_true_expr &&
			this->_field_false_expr == _other._field_false_expr;
	}

	inline bool operator!=(_1dd05c765_TernaryExpr _other) { return !this->operator==(_other); }


};


struct _1c2c4607e_ImportInfo: public _1a6336746_Lookup {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<_1dd05db0c_Token> _field_selected = jule::Slice<_1dd05db0c_Token>();
	jule::Ptr<_1c2c4607e_Package> _field_package = jule::Ptr<_1c2c4607e_Package>();
	jule::Int _field_mod_id = jule::Int();


	_1c2c4607e_ImportInfo(_1dd05db0c_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_1dd05db0c_Token> __param_selected, jule::Ptr<_1c2c4607e_Package> __param_package, jule::Int __param_mod_id): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package), _field_mod_id(__param_mod_id) {}

	

	_1c2c4607e_ImportInfo(void) = default;

	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_1c2c4607e_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)>);


	inline jule::Ptr<_1c3c3d174_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_1a5e40a26_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_1dd0be530_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_1dded9702_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_1de043c01_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_1de0dbeb9_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline jule::Bool _method_is_accessible_via_selection(void);


	inline bool operator==(_1c2c4607e_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1c2c4607e_ImportInfo _other) { return !this->operator==(_other); }


};


struct _1dd0be530_StructIns: public _1a5e40a26_Kind {
	jule::Ptr<_1dd0be530_StructIns> self;

	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1dd0be530_Struct> _field_decl = jule::Ptr<_1dd0be530_Struct>();
	jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>();
	jule::Slice<jule::Ptr<_1dd0be530_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1dd0be530_FieldIns>>();
	jule::Slice<jule::Ptr<_1dded9702_Fn>> _field_methods = jule::Slice<jule::Ptr<_1dded9702_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1dded9779_ReferenceStack> _field_references = jule::Ptr<_1dded9779_ReferenceStack>();
	_1dd0be530_Operators _field_operators = _1dd0be530_Operators();


	_1dd0be530_StructIns(jule::Bool __param_checked, jule::Ptr<_1dd0be530_Struct> __param_decl, jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1dd0be530_FieldIns>> __param_fields, jule::Slice<jule::Ptr<_1dded9702_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ptr<_1dded9779_ReferenceStack> __param_references, _1dd0be530_Operators __param_operators): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references), _field_operators(__param_operators) {
		this->self = jule::Ptr<_1dd0be530_StructIns>::make(this, nullptr);

	}

	~_1dd0be530_StructIns(void) { this->self.ref = nullptr; }

	_1dd0be530_StructIns(void) { this->self = jule::Ptr<_1dd0be530_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_1a5e40a26_TypeKind>);


	inline jule::Bool _method_same(jule::Ptr<_1dd0be530_StructIns>);


	inline jule::Ptr<_1dded9702_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ptr<_1dd0be530_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(_1dd0be530_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_references == _other._field_references &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1dd0be530_StructIns _other) { return !this->operator==(_other); }


};


struct _1dd05c765_GenericDecl {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();


	_1dd05c765_GenericDecl(_1dd05db0c_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1dd05c765_GenericDecl(void) = default;

	inline bool operator==(_1dd05c765_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dd05c765_GenericDecl _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_BinopExprModel {
	jule::Ptr<_1ddb3c047_OperandExprModel> _field_left = jule::Ptr<_1ddb3c047_OperandExprModel>();
	jule::Ptr<_1ddb3c047_OperandExprModel> _field_right = jule::Ptr<_1ddb3c047_OperandExprModel>();
	_1dd05db0c_Token _field_op = _1dd05db0c_Token();


	_1ddb3c047_BinopExprModel(jule::Ptr<_1ddb3c047_OperandExprModel> __param_left, jule::Ptr<_1ddb3c047_OperandExprModel> __param_right, _1dd05db0c_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1ddb3c047_BinopExprModel(void) = default;

	inline bool operator==(_1ddb3c047_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ddb3c047_BinopExprModel _other) { return !this->operator==(_other); }


};


struct _1c3c3d174_Var {
	jule::Ptr<_1de0e938e_Scope> _field_scope = jule::Ptr<_1de0e938e_Scope>();
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_doc = jule::Str();
	jule::Ptr<_1a5e40a26_TypeSymbol> _field_kind = jule::Ptr<_1a5e40a26_TypeSymbol>();
	jule::Ptr<_1a94c333b_Value> _field_value = jule::Ptr<_1a94c333b_Value>();
	jule::Ptr<_1dded9779_ReferenceStack> _field_references = jule::Ptr<_1dded9779_ReferenceStack>();
	jule::Slice<jule::Ptr<_1dd05c765_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd05c765_Directive>>();
	jule::Ptr<_1c3c3d174_IterRelation> _field_iter_relation = jule::Ptr<_1c3c3d174_IterRelation>();
	jule::Slice<jule::Ptr<_1c3c3d174_Var>> _field_depends = jule::Slice<jule::Ptr<_1c3c3d174_Var>>();


	_1c3c3d174_Var(jule::Ptr<_1de0e938e_Scope> __param_scope, _1dd05db0c_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ptr<_1a5e40a26_TypeSymbol> __param_kind, jule::Ptr<_1a94c333b_Value> __param_value, jule::Ptr<_1dded9779_ReferenceStack> __param_references, jule::Slice<jule::Ptr<_1dd05c765_Directive>> __param_directives, jule::Ptr<_1c3c3d174_IterRelation> __param_iter_relation, jule::Slice<jule::Ptr<_1c3c3d174_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_doc(__param_doc), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_1c3c3d174_Var(void) = default;

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_type_inferred(void);


	inline bool operator==(_1c3c3d174_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_doc == _other._field_doc &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_references == _other._field_references &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1c3c3d174_Var _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_UnaryExprModel {
	jule::Ptr<_1a94c333b_Data> _field_expr = jule::Ptr<_1a94c333b_Data>();
	_1dd05db0c_Token _field_op = _1dd05db0c_Token();


	_1ddb3c047_UnaryExprModel(jule::Ptr<_1a94c333b_Data> __param_expr, _1dd05db0c_Token __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1ddb3c047_UnaryExprModel(void) = default;

	inline bool operator==(_1ddb3c047_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ddb3c047_UnaryExprModel _other) { return !this->operator==(_other); }


};


struct _1a93c7a48_TypeCompatibilityChecker {
	jule::Ptr<_1c2c46634_Sema> _field_s = jule::Ptr<_1c2c46634_Sema>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_dest = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_src = jule::Ptr<_1a5e40a26_TypeKind>();
	_1dd05db0c_Token _field_error_token = _1dd05db0c_Token();


	_1a93c7a48_TypeCompatibilityChecker(jule::Ptr<_1c2c46634_Sema> __param_s, jule::Ptr<_1a5e40a26_TypeKind> __param_dest, jule::Ptr<_1a5e40a26_TypeKind> __param_src, _1dd05db0c_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token) {}

	

	_1a93c7a48_TypeCompatibilityChecker(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_prim(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(_1a93c7a48_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1a93c7a48_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};


struct _1a93c7a48_AssignTypeChecker {
	jule::Ptr<_1c2c46634_Sema> _field_s = jule::Ptr<_1c2c46634_Sema>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_dest = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Ptr<_1a94c333b_Data> _field_d = jule::Ptr<_1a94c333b_Data>();
	_1dd05db0c_Token _field_error_token = _1dd05db0c_Token();


	_1a93c7a48_AssignTypeChecker(jule::Ptr<_1c2c46634_Sema> __param_s, jule::Ptr<_1a5e40a26_TypeKind> __param_dest, jule::Ptr<_1a94c333b_Data> __param_d, _1dd05db0c_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token) {}

	

	_1a93c7a48_AssignTypeChecker(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_is_prim(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(_1a93c7a48_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1a93c7a48_AssignTypeChecker _other) { return !this->operator==(_other); }


};


struct _1a93c7a48_DynamicTypeAnnotation {
	jule::Ptr<_1a94c333b_Eval> _field_e = jule::Ptr<_1a94c333b_Eval>();
	jule::Ptr<_1dded9702_FnIns> _field_f = jule::Ptr<_1dded9702_FnIns>();
	jule::Ptr<_1dded9702_ParamIns> _field_p = jule::Ptr<_1dded9702_ParamIns>();
	jule::Ptr<_1a94c333b_Data> _field_a = jule::Ptr<_1a94c333b_Data>();
	_1dd05db0c_Token _field_error_token = _1dd05db0c_Token();
	jule::Ptr<_1a5e40a26_TypeKind>* _field_k = nullptr;


	_1a93c7a48_DynamicTypeAnnotation(jule::Ptr<_1a94c333b_Eval> __param_e, jule::Ptr<_1dded9702_FnIns> __param_f, jule::Ptr<_1dded9702_ParamIns> __param_p, jule::Ptr<_1a94c333b_Data> __param_a, _1dd05db0c_Token __param_error_token, jule::Ptr<_1a5e40a26_TypeKind>* __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_1a93c7a48_DynamicTypeAnnotation(void) = default;

	inline void _method_push_generic(jule::Ptr<_1a5e40a26_TypeKind>&,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ptr<_1a5e40a26_TypeKind>&);


	inline jule::Bool _method_annotate_slc(jule::Ptr<_1a5e40a26_TypeKind>&);


	inline jule::Bool _method_check_map_key(jule::Ptr<_1a5e40a26_TypeKind>*,jule::Ptr<_1a5e40a26_TypeKind>&);


	inline jule::Bool _method_annotate_map(jule::Ptr<_1a5e40a26_TypeKind>&);


	inline jule::Bool _method_annotate_fn(jule::Ptr<_1a5e40a26_TypeKind>&);


	inline jule::Bool _method_annotate_ptr(jule::Ptr<_1a5e40a26_TypeKind>&);


	inline jule::Bool _method_annotate_sptr(jule::Ptr<_1a5e40a26_TypeKind>&);


	inline jule::Bool _method_annotate_any(jule::Ptr<_1a5e40a26_TypeKind>&);


	inline jule::Bool _method_annotate_kind(jule::Ptr<_1a5e40a26_TypeKind>&);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(_1a93c7a48_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_1a93c7a48_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};


struct _1a93c7a48_FnCallArgChecker {
	jule::Ptr<_1a94c333b_Eval> _field_e = jule::Ptr<_1a94c333b_Eval>();
	jule::Slice<jule::Ptr<_1dd05c765_Expr>> _field_args = jule::Slice<jule::Ptr<_1dd05c765_Expr>>();
	_1dd05db0c_Token _field_error_token = _1dd05db0c_Token();
	jule::Ptr<_1dded9702_FnIns> _field_f = jule::Ptr<_1dded9702_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();


	_1a93c7a48_FnCallArgChecker(jule::Ptr<_1a94c333b_Eval> __param_e, jule::Slice<jule::Ptr<_1dd05c765_Expr>> __param_args, _1dd05db0c_Token __param_error_token, jule::Ptr<_1dded9702_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_1a93c7a48_FnCallArgChecker(void) = default;

	inline void _method_push_err_token(_1dd05db0c_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ptr<_1dded9702_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ptr<_1dded9702_ParamIns>>&);


	inline jule::Bool _method_check_arg(jule::Ptr<_1dded9702_ParamIns>&,jule::Ptr<_1a94c333b_Data>&,_1dd05db0c_Token&);


	inline jule::Bool _method_push(jule::Ptr<_1dded9702_ParamIns>&,jule::Ptr<_1dd05c765_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ptr<_1dded9702_ParamIns>&,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ptr<_1dded9702_ParamIns>>&);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(_1a93c7a48_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1a93c7a48_FnCallArgChecker _other) { return !this->operator==(_other); }


};


struct _1a93c7a48_StructLitChecker {
	jule::Ptr<_1a94c333b_Eval> _field_e = jule::Ptr<_1a94c333b_Eval>();
	_1dd05db0c_Token _field_error_token = _1dd05db0c_Token();
	jule::Ptr<_1dd0be530_StructIns> _field_s = jule::Ptr<_1dd0be530_StructIns>();
	jule::Slice<jule::Ptr<_1ddb3c047_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1ddb3c047_StructArgExprModel>>();


	_1a93c7a48_StructLitChecker(jule::Ptr<_1a94c333b_Eval> __param_e, _1dd05db0c_Token __param_error_token, jule::Ptr<_1dd0be530_StructIns> __param_s, jule::Slice<jule::Ptr<_1ddb3c047_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_1a93c7a48_StructLitChecker(void) = default;

	inline void _method_push_err(_1dd05db0c_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ptr<_1dd0be530_FieldIns>&,jule::Ptr<_1a94c333b_Data>&,_1dd05db0c_Token&);


	inline void _method_check_pair(jule::Ptr<_1dd05c765_FieldExprPair>&,jule::Slice<jule::Any>&);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>&);


	inline void _method_check(jule::Slice<jule::Any>&);


	inline bool operator==(_1a93c7a48_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1a93c7a48_StructLitChecker _other) { return !this->operator==(_other); }


};


struct _1dd05c765_LabelSt {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();


	_1dd05c765_LabelSt(_1dd05db0c_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1dd05c765_LabelSt(void) = default;

	inline bool operator==(_1dd05c765_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dd05c765_LabelSt _other) { return !this->operator==(_other); }


};


struct _1a93c7a48_RetTypeChecker {
	jule::Ptr<_1de0e938e_ScopeChecker> _field_sc = jule::Ptr<_1de0e938e_ScopeChecker>();
	jule::Ptr<_1dded9702_FnIns> _field_f = jule::Ptr<_1dded9702_FnIns>();
	jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>();
	jule::Slice<jule::Ptr<_1dd05c765_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1dd05c765_Expr>>();
	jule::Slice<jule::Ptr<_1c3c3d174_Var>> _field_vars = jule::Slice<jule::Ptr<_1c3c3d174_Var>>();
	_1dd05db0c_Token _field_error_token = _1dd05db0c_Token();
	jule::Any _field_model = jule::Any();


	_1a93c7a48_RetTypeChecker(jule::Ptr<_1de0e938e_ScopeChecker> __param_sc, jule::Ptr<_1dded9702_FnIns> __param_f, jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>> __param_types, jule::Slice<jule::Ptr<_1dd05c765_Expr>> __param_exprs, jule::Slice<jule::Ptr<_1c3c3d174_Var>> __param_vars, _1dd05db0c_Token __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_1a93c7a48_RetTypeChecker(void) = default;

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ptr<_1dd05c765_Expr>&);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ptr<_1dd05c765_Expr>&);


	inline bool operator==(_1a93c7a48_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a93c7a48_RetTypeChecker _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_StructLitExprModel {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Ptr<_1dd0be530_StructIns> _field_strct = jule::Ptr<_1dd0be530_StructIns>();
	jule::Slice<jule::Ptr<_1ddb3c047_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1ddb3c047_StructArgExprModel>>();


	_1ddb3c047_StructLitExprModel(_1dd05db0c_Token __param_token, jule::Ptr<_1dd0be530_StructIns> __param_strct, jule::Slice<jule::Ptr<_1ddb3c047_StructArgExprModel>> __param_args): _field_token(__param_token), _field_strct(__param_strct), _field_args(__param_args) {}

	

	_1ddb3c047_StructLitExprModel(void) = default;

	inline bool operator==(_1ddb3c047_StructLitExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1ddb3c047_StructLitExprModel _other) { return !this->operator==(_other); }


};


struct _1dd05c765_GotoSt {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	_1dd05db0c_Token _field_label = _1dd05db0c_Token();


	_1dd05c765_GotoSt(_1dd05db0c_Token __param_token, _1dd05db0c_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1dd05c765_GotoSt(void) = default;

	inline bool operator==(_1dd05c765_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1dd05c765_GotoSt _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_CastingExprModel {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a5e40a26_TypeKind> _field_kind = jule::Ptr<_1a5e40a26_TypeKind>();
	jule::Ptr<_1a5e40a26_TypeKind> _field_expr_kind = jule::Ptr<_1a5e40a26_TypeKind>();


	_1ddb3c047_CastingExprModel(_1dd05db0c_Token __param_token, jule::Any __param_expr, jule::Ptr<_1a5e40a26_TypeKind> __param_kind, jule::Ptr<_1a5e40a26_TypeKind> __param_expr_kind): _field_token(__param_token), _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_1ddb3c047_CastingExprModel(void) = default;

	inline bool operator==(_1ddb3c047_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1ddb3c047_CastingExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_FnCallExprModel {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Ptr<_1dded9702_FnIns> _field_func = jule::Ptr<_1dded9702_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1de0e938e_Scope> _field_except = jule::Ptr<_1de0e938e_Scope>();
	jule::Bool _field_assigned = jule::Bool();


	_1ddb3c047_FnCallExprModel(_1dd05db0c_Token __param_token, jule::Ptr<_1dded9702_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args, jule::Ptr<_1de0e938e_Scope> __param_except, jule::Bool __param_assigned): _field_token(__param_token), _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args), _field_except(__param_except), _field_assigned(__param_assigned) {}

	

	_1ddb3c047_FnCallExprModel(void) = default;

	inline bool operator==(_1ddb3c047_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1ddb3c047_FnCallExprModel _other) { return !this->operator==(_other); }


};


struct _1dd05c765_FallSt {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();


	_1dd05c765_FallSt(_1dd05db0c_Token __param_token): _field_token(__param_token) {}

	

	_1dd05c765_FallSt(void) = default;

	inline bool operator==(_1dd05c765_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_1dd05c765_FallSt _other) { return !this->operator==(_other); }


};


struct _1a94c333b_BinaryEval {
	jule::Ptr<_1a94c333b_Eval> _field_e = jule::Ptr<_1a94c333b_Eval>();
	jule::Ptr<_1a94c333b_Data> _field_l = jule::Ptr<_1a94c333b_Data>();
	jule::Ptr<_1a94c333b_Data> _field_r = jule::Ptr<_1a94c333b_Data>();
	_1dd05db0c_Token _field_op = _1dd05db0c_Token();


	_1a94c333b_BinaryEval(jule::Ptr<_1a94c333b_Eval> __param_e, jule::Ptr<_1a94c333b_Data> __param_l, jule::Ptr<_1a94c333b_Data> __param_r, _1dd05db0c_Token __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1a94c333b_BinaryEval(void) = default;

	static inline _1a94c333b_BinaryEval _static_method_new_plain(jule::Ptr<_1a94c333b_Eval>);


	static inline _1a94c333b_BinaryEval _static_method_new(jule::Ptr<_1a94c333b_Eval>,_1dd05db0c_Token);


	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_nil(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_enum(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_sptr(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_ptr(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_arr(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_slc(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_fn(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_struct(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_trait(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_any(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_bool(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_check_mod_data(jule::Ptr<_1a94c333b_Data>&);


	inline void _method_mod(void);


	inline jule::Bool _method_numbers_are_compatibile(jule::Str&,jule::Str&);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_float(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_int(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_prim(void);


	inline jule::Ptr<_1a94c333b_Data> _method_eval_op(void);


	inline void _method_eval_const(jule::Ptr<_1a94c333b_Data>&);


	inline void _method_check_data(jule::Ptr<_1a94c333b_Data>&);


	inline void _method_check_datas(void);


	inline void _method_set_model(jule::Ptr<_1a94c333b_Data>&);


	inline void _method_post_eval(jule::Ptr<_1a94c333b_Data>&);


	inline jule::Ptr<_1a94c333b_Data> _method_solve_explicit(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>&);


	inline jule::Ptr<_1a94c333b_Data> _method_eval(jule::Ptr<_1dd05c765_BinopExpr>&);


	inline bool operator==(_1a94c333b_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a94c333b_BinaryEval _other) { return !this->operator==(_other); }


};


struct _1a5e40a26_TypeAlias {
	jule::Ptr<_1dd05c765_ScopeTree> _field_scope = jule::Ptr<_1dd05c765_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a5e40a26_TypeSymbol> _field_kind = jule::Ptr<_1a5e40a26_TypeSymbol>();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>();


	_1a5e40a26_TypeAlias(jule::Ptr<_1dd05c765_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, _1dd05db0c_Token __param_token, jule::Str __param_ident, jule::Ptr<_1a5e40a26_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers, jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> __param_generics): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc(__param_doc), _field_refers(__param_refers), _field_generics(__param_generics) {}

	

	_1a5e40a26_TypeAlias(void) = default;

	inline bool operator==(_1a5e40a26_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_doc == _other._field_doc &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1a5e40a26_TypeAlias _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_IndexingExprModel {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Ptr<_1a94c333b_Data> _field_expr = jule::Ptr<_1a94c333b_Data>();
	jule::Ptr<_1a94c333b_Data> _field_index = jule::Ptr<_1a94c333b_Data>();


	_1ddb3c047_IndexingExprModel(_1dd05db0c_Token __param_token, jule::Ptr<_1a94c333b_Data> __param_expr, jule::Ptr<_1a94c333b_Data> __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1ddb3c047_IndexingExprModel(void) = default;

	inline bool operator==(_1ddb3c047_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1ddb3c047_IndexingExprModel _other) { return !this->operator==(_other); }


};


struct _1dd05c765_AssignLeft {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dd05c765_Expr> _field_expr = jule::Ptr<_1dd05c765_Expr>();


	_1dd05c765_AssignLeft(_1dd05db0c_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ptr<_1dd05c765_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1dd05c765_AssignLeft(void) = default;

	inline bool operator==(_1dd05c765_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dd05c765_AssignLeft _other) { return !this->operator==(_other); }


};


struct _1dd05c765_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	_1dd05db0c_Token _field_setter = _1dd05db0c_Token();
	jule::Slice<jule::Ptr<_1dd05c765_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1dd05c765_AssignLeft>>();
	jule::Ptr<_1dd05c765_Expr> _field_right = jule::Ptr<_1dd05c765_Expr>();


	_1dd05c765_AssignSt(jule::Bool __param_declarative, _1dd05db0c_Token __param_setter, jule::Slice<jule::Ptr<_1dd05c765_AssignLeft>> __param_left, jule::Ptr<_1dd05c765_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_1dd05c765_AssignSt(void) = default;

	inline bool operator==(_1dd05c765_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1dd05c765_AssignSt _other) { return !this->operator==(_other); }


};


struct _1dd05c765_Comment {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_text = jule::Str();


	_1dd05c765_Comment(_1dd05db0c_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1dd05c765_Comment(void) = default;

	inline bool operator==(_1dd05c765_Comment _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1dd05c765_Comment _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_SlicingExprModel {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1ddb3c047_SlicingExprModel(_1dd05db0c_Token __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1ddb3c047_SlicingExprModel(void) = default;

	inline bool operator==(_1ddb3c047_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1ddb3c047_SlicingExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_TraitSubIdentExprModel {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_ident = jule::Str();


	_1ddb3c047_TraitSubIdentExprModel(_1dd05db0c_Token __param_token, jule::Any __param_expr, jule::Str __param_ident): _field_token(__param_token), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1ddb3c047_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1ddb3c047_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ddb3c047_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};


struct _1dd05c765_ParamDecl {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1dd05c765_TypeDecl> _field_kind = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Str _field_ident = jule::Str();


	_1dd05c765_ParamDecl(_1dd05db0c_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1dd05c765_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1dd05c765_ParamDecl(void) = default;

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(_1dd05c765_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1dd05c765_ParamDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_FnDecl {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1dd05c765_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd05c765_Directive>>();
	jule::Ptr<_1dd05c765_CommentGroup> _field_doc_comments = jule::Ptr<_1dd05c765_CommentGroup>();
	jule::Ptr<_1dd05c765_ScopeTree> _field_scope = jule::Ptr<_1dd05c765_ScopeTree>();
	jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>();
	jule::Ptr<_1dd05c765_RetTypeDecl> _field_result = jule::Ptr<_1dd05c765_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1dd05c765_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1dd05c765_ParamDecl>>();


	_1dd05c765_FnDecl(_1dd05db0c_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_1dd05c765_Directive>> __param_directives, jule::Ptr<_1dd05c765_CommentGroup> __param_doc_comments, jule::Ptr<_1dd05c765_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> __param_generics, jule::Ptr<_1dd05c765_RetTypeDecl> __param_result, jule::Slice<jule::Ptr<_1dd05c765_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_1dd05c765_FnDecl(void) = default;

	inline jule::Bool _method_is_anon(void);


	inline bool operator==(_1dd05c765_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_doc_comments == _other._field_doc_comments &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_1dd05c765_FnDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_VarDecl {
	jule::Ptr<_1dd05c765_ScopeTree> _field_scope = jule::Ptr<_1dd05c765_ScopeTree>();
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1dd05c765_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd05c765_Directive>>();
	jule::Ptr<_1dd05c765_CommentGroup> _field_doc_comments = jule::Ptr<_1dd05c765_CommentGroup>();
	jule::Ptr<_1dd05c765_TypeDecl> _field_kind = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Ptr<_1dd05c765_Expr> _field_expr = jule::Ptr<_1dd05c765_Expr>();


	_1dd05c765_VarDecl(jule::Ptr<_1dd05c765_ScopeTree> __param_scope, _1dd05db0c_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ptr<_1dd05c765_Directive>> __param_directives, jule::Ptr<_1dd05c765_CommentGroup> __param_doc_comments, jule::Ptr<_1dd05c765_TypeDecl> __param_kind, jule::Ptr<_1dd05c765_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1dd05c765_VarDecl(void) = default;

	inline bool operator==(_1dd05c765_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_doc_comments == _other._field_doc_comments &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dd05c765_VarDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_RetSt {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Ptr<_1dd05c765_Expr> _field_expr = jule::Ptr<_1dd05c765_Expr>();


	_1dd05c765_RetSt(_1dd05db0c_Token __param_token, jule::Ptr<_1dd05c765_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1dd05c765_RetSt(void) = default;

	inline bool operator==(_1dd05c765_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dd05c765_RetSt _other) { return !this->operator==(_other); }


};


struct _1a5e40a26_TypeChecker {
	jule::Ptr<_1c2c46634_Sema> _field_s = jule::Ptr<_1c2c46634_Sema>();
	jule::Trait<_1a6336746_Lookup> _field_lookup = jule::Trait<_1a6336746_Lookup>();
	jule::Ptr<_1a5e40a26_Referencer> _field_referencer = jule::Ptr<_1a5e40a26_Referencer>();
	_1dd05db0c_Token _field_error_token = _1dd05db0c_Token();
	jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1a5e40a26_TypeAlias> _field_owner_alias = jule::Ptr<_1a5e40a26_TypeAlias>();
	jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();


	_1a5e40a26_TypeChecker(jule::Ptr<_1c2c46634_Sema> __param_s, jule::Trait<_1a6336746_Lookup> __param_lookup, jule::Ptr<_1a5e40a26_Referencer> __param_referencer, _1dd05db0c_Token __param_error_token, jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain, jule::Bool __param_dis_builtin, jule::Bool __param_selection, jule::Ptr<_1a5e40a26_TypeAlias> __param_owner_alias, jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> __param_banned_generics, jule::Bool __param_inscatch): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain), _field_dis_builtin(__param_dis_builtin), _field_selection(__param_selection), _field_owner_alias(__param_owner_alias), _field_banned_generics(__param_banned_generics), _field_inscatch(__param_inscatch) {}

	

	_1a5e40a26_TypeChecker(void) = default;

	inline void _method_push_err(_1dd05db0c_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_allow_builtin(void);


	inline void _method_disallow_builtin(void);


	inline jule::Ptr<_1a5e40a26_Prim> _method_build_prim(jule::Ptr<_1dd05c765_IdentTypeDecl>&);


	inline void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ptr<_1dd05c765_IdentTypeDecl>&,jule::Any);


	inline jule::Trait<_1a5e40a26_Kind> _method_from_type_alias(jule::Ptr<_1dd05c765_IdentTypeDecl>&,jule::Ptr<_1a5e40a26_TypeAlias>&);


	inline jule::Ptr<_1de0dbeb9_Enum> _method_from_enum(jule::Ptr<_1dd05c765_IdentTypeDecl>&,jule::Ptr<_1de0dbeb9_Enum>&);


	inline jule::Ptr<_1de043c01_Trait> _method_from_trait(jule::Ptr<_1dd05c765_IdentTypeDecl>&,jule::Ptr<_1de043c01_Trait>&);


	inline jule::Bool _method_check_struct_ins(jule::Ptr<_1dd0be530_StructIns>&,_1dd05db0c_Token&);


	inline void _method_append_used_struct_reference(jule::Ptr<_1dd0be530_Struct>&);


	inline jule::Ptr<_1dd0be530_StructIns> _method_build_struct_instance(jule::Ptr<_1dd05c765_IdentTypeDecl>&,jule::Ptr<_1dd0be530_Struct>&);


	inline jule::Ptr<_1dd0be530_StructIns> _method_from_struct(jule::Ptr<_1dd05c765_IdentTypeDecl>&,jule::Ptr<_1dd0be530_Struct>&);


	inline jule::Trait<_1a5e40a26_Kind> _method_get_def(jule::Trait<_1a6336746_Lookup>,jule::Ptr<_1dd05c765_IdentTypeDecl>&);


	inline jule::Trait<_1a5e40a26_Kind> _method_build_ident(jule::Ptr<_1dd05c765_IdentTypeDecl>);


	inline jule::Ptr<_1a5e40a26_Sptr> _method_build_sptr_from_type(jule::Ptr<_1a5e40a26_TypeKind>&);


	inline jule::Ptr<_1a5e40a26_Sptr> _method_build_sptr(jule::Ptr<_1dd05c765_SptrTypeDecl>);


	inline jule::Ptr<_1a5e40a26_Ptr> _method_build_ptr_from_type(jule::Ptr<_1a5e40a26_TypeKind>&);


	inline jule::Ptr<_1a5e40a26_Ptr> _method_build_ptr(jule::Ptr<_1dd05c765_PtrTypeDecl>);


	inline jule::Ptr<_1a5e40a26_Slc> _method_build_slc(jule::Ptr<_1dd05c765_SlcTypeDecl>);


	inline jule::Ptr<_1a5e40a26_Arr> _method_build_arr(jule::Ptr<_1dd05c765_ArrTypeDecl>);


	inline jule::Ptr<_1a5e40a26_Map> _method_build_map(jule::Ptr<_1dd05c765_MapTypeDecl>);


	inline jule::Ptr<_1a5e40a26_Tuple> _method_build_tuple(jule::Ptr<_1dd05c765_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ptr<_1dded9702_FnIns>&);


	inline jule::Ptr<_1dded9702_FnIns> _method_build_fn(jule::Ptr<_1dd05c765_FnDecl>);


	inline jule::Trait<_1a5e40a26_Kind> _method_build_by_namespace(jule::Ptr<_1dd05c765_NamespaceTypeDecl>);


	inline jule::Ptr<_1a5e40a26_TypeKind> _method_build(jule::Any&);


	inline jule::Ptr<_1a5e40a26_TypeKind> _method_check_decl(jule::Ptr<_1dd05c765_TypeDecl>&);


	inline void _method_check(jule::Ptr<_1a5e40a26_TypeSymbol>&);


	inline bool operator==(_1a5e40a26_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1a5e40a26_TypeChecker _other) { return !this->operator==(_other); }


};


struct _1dd05c765_Iter {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1dd05c765_ScopeTree> _field_scope = jule::Ptr<_1dd05c765_ScopeTree>();


	_1dd05c765_Iter(_1dd05db0c_Token __param_token, jule::Any __param_kind, jule::Ptr<_1dd05c765_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_1dd05c765_Iter(void) = default;

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(_1dd05c765_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1dd05c765_Iter _other) { return !this->operator==(_other); }


};


struct _1dd05c765_WhileKind {
	jule::Ptr<_1dd05c765_Expr> _field_expr = jule::Ptr<_1dd05c765_Expr>();
	jule::Any _field_next = jule::Any();
	_1dd05db0c_Token _field_next_token = _1dd05db0c_Token();


	_1dd05c765_WhileKind(jule::Ptr<_1dd05c765_Expr> __param_expr, jule::Any __param_next, _1dd05db0c_Token __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_1dd05c765_WhileKind(void) = default;

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(_1dd05c765_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_1dd05c765_WhileKind _other) { return !this->operator==(_other); }


};


struct _1dcecd043_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1c2c4607e_Package> _field_main = jule::Ptr<_1c2c4607e_Package>();
	jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>>();
	_1dcebc175_OrderedDefines _field_ordered = _1dcebc175_OrderedDefines();


	_1dcecd043_IR(jule::Str __param_root, jule::Slice<jule::Str> __param_passes, jule::Ptr<_1c2c4607e_Package> __param_main, jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>> __param_used, _1dcebc175_OrderedDefines __param_ordered): _field_root(__param_root), _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_1dcecd043_IR(void) = default;

	static inline std::tuple<jule::Ptr<_1dcecd043_IR>,jule::Slice<_1db678789_Log>> _static_method_build(jule::Str,jule::Int);


	inline void _method_append_structs(jule::Ptr<_1c2c4607e_Package>&,jule::Slice<jule::Ptr<_1dd0be530_Struct>>&);


	inline jule::Slice<jule::Ptr<_1dd0be530_Struct>> _method_get_all_structures(void);


	inline void _method_order(void);


	inline bool operator==(_1dcecd043_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1dcecd043_IR _other) { return !this->operator==(_other); }


};


struct _1dd05c765_RangeKind {
	_1dd05db0c_Token _field_in_token = _1dd05db0c_Token();
	jule::Ptr<_1dd05c765_Expr> _field_expr = jule::Ptr<_1dd05c765_Expr>();
	jule::Ptr<_1dd05c765_VarDecl> _field_key_a = jule::Ptr<_1dd05c765_VarDecl>();
	jule::Ptr<_1dd05c765_VarDecl> _field_key_b = jule::Ptr<_1dd05c765_VarDecl>();


	_1dd05c765_RangeKind(_1dd05db0c_Token __param_in_token, jule::Ptr<_1dd05c765_Expr> __param_expr, jule::Ptr<_1dd05c765_VarDecl> __param_key_a, jule::Ptr<_1dd05c765_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1dd05c765_RangeKind(void) = default;

	inline bool operator==(_1dd05c765_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1dd05c765_RangeKind _other) { return !this->operator==(_other); }


};


struct _1dd05c765_BreakSt {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	_1dd05db0c_Token _field_label = _1dd05db0c_Token();


	_1dd05c765_BreakSt(_1dd05db0c_Token __param_token, _1dd05db0c_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1dd05c765_BreakSt(void) = default;

	inline bool operator==(_1dd05c765_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1dd05c765_BreakSt _other) { return !this->operator==(_other); }


};


struct _1dd05c765_ContSt {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	_1dd05db0c_Token _field_label = _1dd05db0c_Token();


	_1dd05c765_ContSt(_1dd05db0c_Token __param_token, _1dd05db0c_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1dd05c765_ContSt(void) = default;

	inline bool operator==(_1dd05c765_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1dd05c765_ContSt _other) { return !this->operator==(_other); }


};


struct _1dd05c765_If {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Ptr<_1dd05c765_Expr> _field_expr = jule::Ptr<_1dd05c765_Expr>();
	jule::Ptr<_1dd05c765_ScopeTree> _field_scope = jule::Ptr<_1dd05c765_ScopeTree>();


	_1dd05c765_If(_1dd05db0c_Token __param_token, jule::Ptr<_1dd05c765_Expr> __param_expr, jule::Ptr<_1dd05c765_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1dd05c765_If(void) = default;

	inline bool operator==(_1dd05c765_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1dd05c765_If _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_BuiltinPanicCallExprModel {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_expr = jule::Any();


	_1ddb3c047_BuiltinPanicCallExprModel(_1dd05db0c_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1ddb3c047_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1ddb3c047_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ddb3c047_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};


struct _1ddb3c047_BuiltinAssertCallExprModel {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();


	_1ddb3c047_BuiltinAssertCallExprModel(_1dd05db0c_Token __param_token, jule::Any __param_expr, jule::Str __param_log): _field_token(__param_token), _field_expr(__param_expr), _field_log(__param_log) {}

	

	_1ddb3c047_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1ddb3c047_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1ddb3c047_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};


struct _1dd05c765_Else {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Ptr<_1dd05c765_ScopeTree> _field_scope = jule::Ptr<_1dd05c765_ScopeTree>();


	_1dd05c765_Else(_1dd05db0c_Token __param_token, jule::Ptr<_1dd05c765_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_1dd05c765_Else(void) = default;

	inline bool operator==(_1dd05c765_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1dd05c765_Else _other) { return !this->operator==(_other); }


};


struct _1dd05c765_Directive {
	_1dd05db0c_Token _field_tag = _1dd05db0c_Token();
	jule::Slice<_1dd05db0c_Token> _field_args = jule::Slice<_1dd05db0c_Token>();


	_1dd05c765_Directive(_1dd05db0c_Token __param_tag, jule::Slice<_1dd05db0c_Token> __param_args): _field_tag(__param_tag), _field_args(__param_args) {}

	

	_1dd05c765_Directive(void) = default;

	inline bool operator==(_1dd05c765_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1dd05c765_Directive _other) { return !this->operator==(_other); }


};


struct _1dd05c765_TypeAliasDecl {
	jule::Ptr<_1dd05c765_ScopeTree> _field_scope = jule::Ptr<_1dd05c765_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dd05c765_TypeDecl> _field_kind = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Ptr<_1dd05c765_CommentGroup> _field_doc_comments = jule::Ptr<_1dd05c765_CommentGroup>();


	_1dd05c765_TypeAliasDecl(jule::Ptr<_1dd05c765_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _1dd05db0c_Token __param_token, jule::Str __param_ident, jule::Ptr<_1dd05c765_TypeDecl> __param_kind, jule::Ptr<_1dd05c765_CommentGroup> __param_doc_comments): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc_comments(__param_doc_comments) {}

	

	_1dd05c765_TypeAliasDecl(void) = default;

	inline bool operator==(_1dd05c765_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_doc_comments == _other._field_doc_comments;
	}

	inline bool operator!=(_1dd05c765_TypeAliasDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_Case {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Ptr<_1dd05c765_ScopeTree> _field_scope = jule::Ptr<_1dd05c765_ScopeTree>();
	jule::Slice<jule::Ptr<_1dd05c765_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1dd05c765_Expr>>();


	_1dd05c765_Case(_1dd05db0c_Token __param_token, jule::Ptr<_1dd05c765_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1dd05c765_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_1dd05c765_Case(void) = default;

	inline bool operator==(_1dd05c765_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1dd05c765_Case _other) { return !this->operator==(_other); }


};


struct _1dd05c765_MatchCase {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1dd05c765_Expr> _field_expr = jule::Ptr<_1dd05c765_Expr>();
	jule::Slice<jule::Ptr<_1dd05c765_Case>> _field_cases = jule::Slice<jule::Ptr<_1dd05c765_Case>>();
	jule::Ptr<_1dd05c765_Else> _field_default = jule::Ptr<_1dd05c765_Else>();


	_1dd05c765_MatchCase(_1dd05db0c_Token __param_token, jule::Bool __param_type_match, jule::Ptr<_1dd05c765_Expr> __param_expr, jule::Slice<jule::Ptr<_1dd05c765_Case>> __param_cases, jule::Ptr<_1dd05c765_Else> __param_default): _field_token(__param_token), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1dd05c765_MatchCase(void) = default;

	inline bool operator==(_1dd05c765_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1dd05c765_MatchCase _other) { return !this->operator==(_other); }


};


struct _1dd05c765_UseDecl {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<_1dd05db0c_Token> _field_selected = jule::Slice<_1dd05db0c_Token>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();


	_1dd05c765_UseDecl(_1dd05db0c_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_1dd05db0c_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_1dd05c765_UseDecl(void) = default;

	inline bool operator==(_1dd05c765_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_1dd05c765_UseDecl _other) { return !this->operator==(_other); }


};


struct _1a686ecd4_ObjectCoder {
	jule::Ptr<_1dcecd043_IR> _field_ir = jule::Ptr<_1dcecd043_IR>();
	_1a686ecd4_SerializationInfo _field_info = _1a686ecd4_SerializationInfo();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Ptr<_1dcb0cd1b_ExprCoder> _field_ec = jule::Ptr<_1dcb0cd1b_ExprCoder>();
	jule::Ptr<_1dc4e9dbd_ScopeCoder> _field_sc = jule::Ptr<_1dc4e9dbd_ScopeCoder>();


	_1a686ecd4_ObjectCoder(jule::Ptr<_1dcecd043_IR> __param_ir, _1a686ecd4_SerializationInfo __param_info, jule::Str __param_indent_buffer, jule::Ptr<_1dcb0cd1b_ExprCoder> __param_ec, jule::Ptr<_1dc4e9dbd_ScopeCoder> __param_sc): _field_ir(__param_ir), _field_info(__param_info), _field_indent_buffer(__param_indent_buffer), _field_ec(__param_ec), _field_sc(__param_sc) {}

	

	_1a686ecd4_ObjectCoder(void) = default;

	static inline jule::Ptr<_1a686ecd4_ObjectCoder> _static_method_new(jule::Ptr<_1dcecd043_IR>&,_1a686ecd4_SerializationInfo);


	inline void _method_add_indent(void);


	inline void _method_done_indent(void);


	inline jule::Str _method_indent(void);


	inline jule::Str _method_loc_info(_1dd05db0c_Token&);


	inline jule::Str _method_links(void);


	inline jule::Str _method_param_ins(jule::Ptr<_1dded9702_ParamIns>&);


	inline jule::Str _method_param(jule::Ptr<_1dded9702_Param>&);


	inline jule::Str _method_params(jule::Slice<jule::Ptr<_1dded9702_Param>>&);


	inline jule::Str _method_params_ins(jule::Slice<jule::Ptr<_1dded9702_ParamIns>>&);


	inline jule::Str _method_params_decls(jule::Slice<jule::Ptr<_1dded9702_ParamIns>>&);


	inline jule::Str _method_trait_def(jule::Ptr<_1de043c01_Trait>&);


	inline jule::Str _method_traits_tbl(jule::Ptr<_1a943b749_SymbolTable>&);


	inline jule::Str _method_traits_pkg(jule::Ptr<_1c2c4607e_Package>&);


	inline jule::Str _method_traits(void);


	inline jule::Str _method_trait_decl(jule::Ptr<_1de043c01_Trait>&);


	inline jule::Str _method_trait_decls(jule::Ptr<_1c2c4607e_Package>&);


	inline jule::Str _method_structure_plain_decl(jule::Ptr<_1dd0be530_Struct>&);


	inline jule::Str _method_structure_plain_decls(void);


	inline jule::Str _method_structure_traits(jule::Ptr<_1dd0be530_Struct>&);


	inline jule::Str _method_var_init_expr(jule::Ptr<_1c3c3d174_Var>&,jule::Str);


	inline jule::Str _method_var(jule::Ptr<_1c3c3d174_Var>);


	inline jule::Str _method_field_decl(jule::Ptr<_1dd0be530_FieldIns>&);


	inline jule::Str _method_build_structure_self_field_kind(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Str _method_structure_self_field(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Str _method_structure_self_field_init_st(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Str _method_structure_constructor(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Str _method_structure_destructor(jule::Ptr<_1dd0be530_StructIns>&);


	inline void _method_structure_operator_eq(jule::Str&,jule::Str&,jule::Ptr<_1dd0be530_StructIns>&);


	inline void _method_structure_operator_not_eq(jule::Str&,jule::Str&,jule::Ptr<_1dd0be530_StructIns>&);


	inline void _method_structure_operator(jule::Str&,jule::Str&,jule::Ptr<_1dded9702_FnIns>&,jule::Str,jule::Str);


	inline jule::Str _method_structure_operators(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Str _method_structure_derive_defs_decls(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Str _method_structure_ins_decl(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Str _method_structure_decl(jule::Ptr<_1dd0be530_Struct>&);


	inline jule::Str _method_structure_decls(void);


	inline jule::Str _method_func_head(jule::Ptr<_1dded9702_FnIns>&,jule::Bool);


	inline jule::Str _method_func_decl(jule::Ptr<_1dded9702_Fn>&,jule::Bool);


	inline jule::Str _method_func_decls(jule::Ptr<_1c2c4607e_Package>&);


	inline jule::Str _method_decls(void);


	inline jule::Str _method_pkg_globals(jule::Ptr<_1c2c4607e_Package>&,jule::Str&);


	inline jule::Str _method_globals(jule::Str&);


	inline jule::Str _method_func(jule::Ptr<_1dded9702_Fn>&);


	inline jule::Str _method_pkg_funcs(jule::Ptr<_1c2c4607e_Package>&);


	inline jule::Str _method_structure_methods(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Str _method_structure_ostream(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Str _method_structure_derive_defs(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Str _method_structure_ins(jule::Ptr<_1dd0be530_StructIns>&);


	inline jule::Str _method_structure(jule::Ptr<_1dd0be530_Struct>&);


	inline jule::Str _method_structures(void);


	inline jule::Str _method_funcs(void);


	inline void _method_push_init(jule::Ptr<_1c2c4607e_Package>&,jule::Str&);


	inline jule::Str _method_init_caller(jule::Str&);


	inline void _method_append_standard(jule::Str&);


	inline jule::Str _method_serialize(void);


	inline bool operator==(_1a686ecd4_ObjectCoder _other) {
		return 
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1a686ecd4_ObjectCoder _other) { return !this->operator==(_other); }


};


struct _1dd05c765_EnumItemDecl {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dd05c765_Expr> _field_expr = jule::Ptr<_1dd05c765_Expr>();


	_1dd05c765_EnumItemDecl(_1dd05db0c_Token __param_token, jule::Str __param_ident, jule::Ptr<_1dd05c765_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1dd05c765_EnumItemDecl(void) = default;

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(_1dd05c765_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1dd05c765_EnumItemDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_EnumDecl {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dd05c765_TypeDecl> _field_kind = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Slice<jule::Ptr<_1dd05c765_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1dd05c765_EnumItemDecl>>();
	jule::Ptr<_1dd05c765_CommentGroup> _field_doc_comments = jule::Ptr<_1dd05c765_CommentGroup>();


	_1dd05c765_EnumDecl(_1dd05db0c_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1dd05c765_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1dd05c765_EnumItemDecl>> __param_items, jule::Ptr<_1dd05c765_CommentGroup> __param_doc_comments): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc_comments(__param_doc_comments) {}

	

	_1dd05c765_EnumDecl(void) = default;

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(_1dd05c765_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_doc_comments == _other._field_doc_comments;
	}

	inline bool operator!=(_1dd05c765_EnumDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_FieldDecl {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dd05c765_TypeDecl> _field_kind = jule::Ptr<_1dd05c765_TypeDecl>();
	jule::Ptr<_1dd05c765_Expr> _field_default = jule::Ptr<_1dd05c765_Expr>();


	_1dd05c765_FieldDecl(_1dd05db0c_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1dd05c765_TypeDecl> __param_kind, jule::Ptr<_1dd05c765_Expr> __param_default): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1dd05c765_FieldDecl(void) = default;

	inline bool operator==(_1dd05c765_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1dd05c765_FieldDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_StructDecl {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1dd05c765_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1dd05c765_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1dd05c765_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd05c765_Directive>>();
	jule::Ptr<_1dd05c765_CommentGroup> _field_doc_comments = jule::Ptr<_1dd05c765_CommentGroup>();
	jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>();


	_1dd05c765_StructDecl(_1dd05db0c_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_1dd05c765_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1dd05c765_Directive>> __param_directives, jule::Ptr<_1dd05c765_CommentGroup> __param_doc_comments, jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_generics(__param_generics) {}

	

	_1dd05c765_StructDecl(void) = default;

	inline bool operator==(_1dd05c765_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_doc_comments == _other._field_doc_comments &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1dd05c765_StructDecl _other) { return !this->operator==(_other); }


};


struct _1dd05c765_TraitDecl {
	_1dd05db0c_Token _field_token = _1dd05db0c_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Ptr<_1dd05c765_CommentGroup> _field_doc_comments = jule::Ptr<_1dd05c765_CommentGroup>();
	jule::Slice<jule::Ptr<_1dd05c765_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1dd05c765_FnDecl>>();


	_1dd05c765_TraitDecl(_1dd05db0c_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ptr<_1dd05c765_CommentGroup> __param_doc_comments, jule::Slice<jule::Ptr<_1dd05c765_FnDecl>> __param_methods): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_doc_comments(__param_doc_comments), _field_methods(__param_methods) {}

	

	_1dd05c765_TraitDecl(void) = default;

	inline bool operator==(_1dd05c765_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_doc_comments == _other._field_doc_comments &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_1dd05c765_TraitDecl _other) { return !this->operator==(_other); }


};


struct _1dc4768b6_ArgParser {
	_1dc4768b6_FlagSet _field_set = _1dc4768b6_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::Int _field_i = jule::Int();


	_1dc4768b6_ArgParser(_1dc4768b6_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_content, jule::Int __param_i): _field_set(__param_set), _field_args(__param_args), _field_content(__param_content), _field_i(__param_i) {}

	

	_1dc4768b6_ArgParser(void) = default;

	inline std::tuple<jule::I64,jule::Bool> _method_parse_integer_0(jule::Str&,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::Int)>);
	inline std::tuple<jule::U64,jule::Bool> _method_parse_integer_1(jule::Str&,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::Int)>);


	inline jule::Str _method_get_data(void);


	inline jule::VoidExceptional _method_process_flag(jule::Trait<_1dc4768b6_CommonFlag>&);


	inline jule::VoidExceptional _method_single_dash(jule::Str&);


	inline jule::VoidExceptional _method_double_dash(jule::Str&);


	inline jule::VoidExceptional _method_try_arg(void);


	inline jule::VoidExceptional _method_parse(void);


	inline bool operator==(_1dc4768b6_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1dc4768b6_ArgParser _other) { return !this->operator==(_other); }


};


inline jule::I32 _1db6dc017_decode_rune(jule::I32,jule::I32);
inline std::tuple<jule::I32,jule::I32> _1db6dc017_encode_rune(jule::I32);
inline jule::Slice<jule::I32> _1db6dc017_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _1db6dc017_append_rune(jule::Slice<jule::U16>,jule::I32);
inline jule::Slice<jule::U16> _1db6b9e3a_utf16_from_str(jule::Str);
inline jule::Str _1db6b9e3a_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _1db6b9e3a_u16_ptr_to_str(jule::U16*);
inline jule::Int _1db64c3c8_get_last_errno(void);
inline jule::Uintptr _1db653ae9_get_std_handle(jule::Uintptr);
inline jule::Int _1db653ae9_wstat(jule::U16*,struct stat*);
inline jule::Int _1db653ae9__wopen(jule::U16*,jule::Int,jule::Int);
inline jule::U32 _1db653ae9_get_last_error(void);
inline jule::U32 _1db653ae9_get_current_directory(jule::U32,jule::U16*);
inline jule::Bool _1db653ae9_delete_file(jule::U16*);
inline jule::Bool _1db653ae9_create_directory(jule::U16*);
inline jule::Bool _1db653ae9_remove_directory(jule::U16*);
inline _WDIR* _1db653ae9__wopendir(jule::U16*);
inline struct _wdirent* _1db653ae9__wreaddir(_WDIR*);
inline jule::Int _1db653ae9__wclosedir(_WDIR*);
inline jule::U32 _1db653ae9_get_full_path_name(jule::U16*,jule::U32,jule::U16*,jule::U16**);
inline jule::Bool _1db653ae9_get_console_mode(jule::Uintptr,jule::Int&);
inline jule::Bool _1db653ae9_set_console_mode(jule::Uintptr,jule::Int);
inline jule::Bool _1db653ae9_write_console(jule::Uintptr,jule::U16*,jule::Int,jule::Int&,void*);
inline jule::Bool _1db653ae9_read_console(jule::Uintptr,jule::U16*,jule::Int,jule::Int&,void*);
inline jule::Int _1db66e3b7_seek(jule::Int,jule::Int,jule::Int);
inline jule::Int _1db66e3b7_read(jule::Int,void*,jule::Uint);
inline jule::Int _1db66e3b7_close(jule::Int);
inline jule::Int _1db66e3b7_write(jule::Int,void*,jule::Uint);
inline void _1db66e3b7_exit(jule::Int);
inline jule::Int _1db63b85c_get_last_os_error_windows(void);
inline jule::Slice<jule::Str> _1db640cc3_args(void);
inline jule::Exceptional<jule::Str> _1db640cc3_working_dir(void);
inline jule::Exceptional<jule::Str> _1db64756b___getwd(void);
inline void _1db6263a2_push_opt_level(jule::Int);
inline std::tuple<jule::I32,jule::Int> _1db761ba2_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _1db761ba2_decode_last_rune(jule::Slice<jule::U8>);
inline jule::Int _1db761ba2_rune_len(jule::I32);
inline jule::Int _1db761ba2_encode_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1db761ba2_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1db761ba2_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::Int _1db761ba2_rune_count_str(jule::Str);
inline jule::Bool _1db761ba2_rune_start(jule::U8);
inline jule::Bool _1dc4712ea_is_letter(jule::I32);
inline jule::Bool _1dc4e2e71_is16(jule::Slice<_1dc4e2e71_Range16>,jule::U16);
inline jule::Bool _1dc4e2e71_is32(jule::Slice<_1dc4e2e71_Range32>,jule::U32);
inline jule::Bool _1dc4e2e71_is_excluding_latin(jule::Ptr<_1dc4e2e71_RangeTable>,jule::I32);
inline jule::Slice<jule::U8> _1db822405_stobs(jule::Str&);
inline jule::Str _1db822922_repeat(jule::Str,jule::Int);
inline jule::Bool _1db822922__has_prefix(jule::Str&,jule::Str&,jule::Int);
inline jule::Bool _1db822922_has_prefix(jule::Str,jule::Str);
inline jule::Bool _1db822922__has_suffix(jule::Str&,jule::Str&,jule::Int);
inline jule::Bool _1db822922_has_suffix(jule::Str,jule::Str);
inline jule::Int _1db822922_find_at(jule::Str,jule::Str,jule::Int);
inline jule::Int _1db822922_find_last_at(jule::Str,jule::Str,jule::Int);
inline jule::Int _1db822922_find_last(jule::Str,jule::Str);
inline jule::Int _1db822922__find_rune(jule::Slice<jule::U8>&,jule::I32);
inline jule::Int _1db822922_find_last_byte(jule::Str,jule::U8);
inline jule::Int _1db822922_find_any(jule::Str,jule::Str);
inline jule::Slice<jule::Str> _1db822922_split(jule::Str,jule::Str,jule::Int);
inline jule::Bool _1db822922_contains(jule::Str,jule::Str);
inline jule::Bool _1db822922_contains_any(jule::Str,jule::Str);
inline jule::Str _1db822922_replace(jule::Str,jule::Str,jule::Str,jule::Int);
inline void _1db822922__trim_left(jule::Slice<jule::U8>&,jule::Slice<jule::U8>&);
inline jule::Str _1db822922_trim_left(jule::Str,jule::Str);
inline void _1db822922__trim_right(jule::Slice<jule::U8>&,jule::Slice<jule::U8>&);
inline jule::Str _1db822922_trim(jule::Str,jule::Str);
inline jule::Bool _1db7ae0a6_is_path_sep(jule::U8);
inline jule::Bool _1db7ae0a6_is_slash(jule::U8);
inline jule::U8 _1db7ae0a6_to_upper(jule::U8);
inline jule::Int _1db7ae0a6_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _1db7ae0a6_cut_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1db7ae0a6_full_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1db7ae0a6___abs(jule::Str);
inline jule::Str _1db7ae0a6___join(jule::Slice<jule::Str>);
inline jule::Str _1db7b8830_clean(jule::Str);
inline jule::Str _1db7b8830_from_slash(jule::Str);
inline jule::Str _1db7b8830_join(jule::Slice<jule::Str>);
inline jule::Str _1db7b8830_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1db7b8830_abs(jule::Str);
inline jule::Str _1db7b8830_base(jule::Str);
inline jule::Str _1db7b8830_dir(jule::Str);
inline jule::Str _1db7b8830_volume_name(jule::Str);
inline jule::Int _1db67518c_get_last_fs_error(void);
inline jule::Bool _1db72dda0_is_console_handle(jule::Uintptr);
inline jule::Int _1dce5a344_get_last_process_error(void);
inline jule::Slice<wchar_t*> _1dce6156a_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _1dce6156a_str_slice_to_ustr_slice(jule::Slice<jule::Str>);
inline jule::Int _1dce6156a_execvp(jule::Str,jule::Slice<jule::Str>);
inline jule::Int _1dce6156a_execve(jule::Str,jule::Slice<jule::Str>,jule::Slice<jule::Str>);
inline void _1dce863c5_exit(jule::Int);
inline jule::Str _1dce863c5_executable(void);
inline jule::Bool _1db676578_is_std_header_path(jule::Str);
inline jule::Bool _1db676578_is_valid_header_ext(jule::Str);
inline jule::Bool _1db676578_is_valid_cpp_ext(jule::Str);
inline jule::Str _1db678789_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1db678789_arg_to_str(jule::Any);
inline jule::Int _1db678789_find_next_fmt(jule::Str);
inline jule::Str _1db678789_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1dc49aba4_is_top_directive(jule::Str);
inline jule::Bool _1db6462e5_is_windows(jule::Str);
inline jule::Bool _1db6462e5_is_darwin(jule::Str);
inline jule::Bool _1db6462e5_is_linux(jule::Str);
inline jule::Bool _1db6462e5_is_i386(jule::Str);
inline jule::Bool _1db6462e5_is_amd64(jule::Str);
inline jule::Bool _1db6462e5_is_arm64(jule::Str);
inline jule::Bool _1db6462e5_is_unix(jule::Str);
inline jule::Bool _1db6462e5_is_32bit(jule::Str);
inline jule::Bool _1db6462e5_is_64bit(jule::Str);
inline void _1db841039_init(void);
inline jule::Bool _1dd05db0c_is_unary_op(jule::Str);
inline jule::Bool _1dd05db0c_is_bin_op(jule::Str);
inline jule::Bool _1dd05db0c_is_str(jule::Str);
inline jule::Bool _1dd05db0c_is_raw_str(jule::Str);
inline jule::Bool _1dd05db0c_is_rune(jule::Str);
inline jule::Bool _1dd05db0c_is_bool(jule::Str);
inline jule::Bool _1dd05db0c_is_float(jule::Str);
inline jule::Bool _1dd05db0c_is_num(jule::Str);
inline jule::Bool _1dd05db0c_is_ignore_ident(jule::Str);
inline jule::Bool _1dd05db0c_is_anon_ident(jule::Str);
inline jule::Bool _1dd05db0c_is_space(jule::I32);
inline jule::Bool _1dd05db0c_is_letter(jule::I32);
inline jule::Bool _1dd05db0c_is_decimal(jule::U8);
inline jule::Bool _1dd05db0c_is_binary(jule::U8);
inline jule::Bool _1dd05db0c_is_octal(jule::U8);
inline jule::Bool _1dd05db0c_is_hex(jule::U8);
inline jule::Bool _1dd05db0c_is_assign(jule::Uint);
inline jule::Bool _1dd05db0c_is_postfix_op(jule::Str);
inline jule::Bool _1dd05db0c_is_assign_op(jule::Str);
inline jule::Ptr<_1dd05eba7_File> _1dd05eba7_new_file_set(jule::Str);
inline _1db678789_Log _1dd0ed32d_make_err(jule::Int,jule::Int,jule::Ptr<_1dd05eba7_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1dd0ed32d_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _1dd0ed32d_float_fmt_e(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1dd0ed32d_float_fmt_p(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1dd0ed32d_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1dd0ed32d_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1dd0ed32d_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1dd0ed32d_float_num(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1dd0ed32d_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1dd0ed32d_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1dd0ed32d_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _1dd0ed32d_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _1dd0ed32d_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _1dd0ed32d_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _1dd0ed32d_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1dd0ed32d_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1dd0ed32d_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1dd0ed32d_hex_escape(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1dd0ed32d_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1dd0ed32d_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1dd0ed32d_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1dd0ed32d_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_1db678789_Log> _1dd0ed32d_lex(jule::Ptr<_1dd05eba7_File>);
inline jule::Bool _1dd06a0d0_find_module_file(jule::Slice<jule::Ptr<_1db69ceea_DirEntry>>&);
inline jule::Str _1dd06a0d0_find_module_file_deep(jule::Str);
inline jule::Slice<_1db678789_Log> _1dd06a0d0_check_module_file(jule::Str);
inline jule::Int _1dd9bdadd_leading_zeros64(jule::U64);
inline jule::Int _1dd9bdadd_trailing_zeros(jule::Uint);
inline jule::Int _1dd9bdadd_trailing_zeros32(jule::U32);
inline jule::Int _1dd9bdadd_trailing_zeros64(jule::U64);
inline jule::Int _1dd9bdadd_len32(jule::U32);
inline jule::Int _1dd9bdadd_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1dd9bdadd_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _1dd9bdadd_mul64(jule::U64,jule::U64);
inline jule::U32 _1dd50d2ed_f32_bits(jule::F32);
inline jule::F32 _1dd50d2ed_f32_from_bits(jule::U32);
inline jule::U64 _1dd50d2ed_f64_bits(jule::F64);
inline jule::F64 _1dd50d2ed_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::Int> _1dd54d959_frexp(jule::F64);
inline jule::F64 _1dd56d308_nan(void);
inline jule::Bool _1dd56d308_is_nan(jule::F64);
inline jule::F64 _1dd56d308_inf(jule::Int);
inline jule::Bool _1dd56d308_is_inf(jule::F64,jule::Int);
inline std::tuple<jule::F64,jule::Int> _1dd56d308_normalize(jule::F64);
inline jule::F64 _1dd5d93b8_log(jule::F64);
inline jule::F64 _1dd64ad31_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1dd65061b_modf(jule::F64);
inline jule::F64 _1dd6cca83_log2(jule::F64);
inline jule::Str _1dd1ec6b3_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _1dd1ec6b3_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _1dd1ec6b3_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1dd1ec6b3_FloatInfo&);
inline jule::Slice<jule::U8> _1dd1ec6b3_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_1dd1ec6b3_DecimalSlice,jule::Int,jule::U8);
inline void _1dd1ec6b3_round_shortest(_1dd472b47_Decimal&,jule::U64,jule::Int,_1dd1ec6b3_FloatInfo&);
inline jule::Slice<jule::U8> _1dd1ec6b3_fmt_e(jule::Slice<jule::U8>,jule::Bool,_1dd1ec6b3_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _1dd1ec6b3_fmt_f(jule::Slice<jule::U8>,jule::Bool,_1dd1ec6b3_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _1dd1ec6b3_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_1dd1ec6b3_FloatInfo&);
inline jule::Slice<jule::U8> _1dd1ec6b3_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1dd1ec6b3_FloatInfo&);
inline jule::Int _1dd1ec6b3_min(jule::Int,jule::Int);
inline jule::Int _1dd1ec6b3_max(jule::Int,jule::Int);
inline jule::U8 _1dd20559a_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _1dd20559a_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _1dd20559a_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _1dd203e28_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1dd203e28_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _1dd205b2d_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _1dd205b2d_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1dd205b2d_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1dd205b2d_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1dd205b2d_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _1dd205b2d_atof_hex(jule::Str,_1dd1ec6b3_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _1dd205b2d_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1dd205b2d_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1dd205b2d_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _1dd205b2d_parse_float(jule::Str,jule::Int);
inline void _1dd347577_ryu_ftoa_fixed32(_1dd1ec6b3_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _1dd347577_ryu_ftoa_fixed64(_1dd1ec6b3_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _1dd347577_format_decimal(_1dd1ec6b3_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _1dd347577_ryu_ftoa_shortest(_1dd1ec6b3_DecimalSlice&,jule::U64,jule::Int,_1dd1ec6b3_FloatInfo&);
inline jule::Int _1dd347577_mul_by_log2_log10(jule::Int);
inline jule::Int _1dd347577_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1dd347577_compute_bounds(jule::U64,jule::Int,_1dd1ec6b3_FloatInfo&);
inline void _1dd347577_ryu_digits(_1dd1ec6b3_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _1dd347577_ryu_digits32(_1dd1ec6b3_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _1dd347577_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _1dd347577_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _1dd347577_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _1dd347577_divmod1e9(jule::U64);
inline void _1dd472b47_trim(_1dd472b47_Decimal&);
inline void _1dd472b47_right_shift(_1dd472b47_Decimal&,jule::Uint);
inline jule::Bool _1dd472b47_prefix_is_less_than(jule::Array<jule::U8,800>,jule::Int,jule::Str);
inline void _1dd472b47_left_shift(_1dd472b47_Decimal&,jule::Uint);
inline jule::Bool _1dd472b47_should_round_up(_1dd472b47_Decimal&,jule::Int);
inline jule::Str _1dd4c1635_fmt_uint(jule::U64,jule::Int);
inline jule::Str _1dd4c1635_fmt_int(jule::I64,jule::Int);
inline jule::Str _1dd4c1635_itoa(jule::Int);
inline jule::Str _1dd4c1635_small(jule::Int);
inline jule::Bool _1dd4c1635_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1dd4c1635_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _1dd0a6eda_throw(jule::Str);
inline jule::Ptr<_1dd0be6b7_FileInfo> _1dd0be6b7_parse_file(jule::Ptr<_1dd05eba7_File>);
inline std::tuple<jule::Ptr<_1dd05b9c8_Ast>,jule::Slice<_1db678789_Log>> _1dd0be6b7_parse_fileset(jule::Ptr<_1dd05eba7_File>);
inline jule::Ptr<_1dd05c765_ScopeTree> _1dd229ca6_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1dd229ca6_is_st(_1dd05db0c_Token,_1dd05db0c_Token);
inline jule::Bool _1dd229ca6_prev_is_incomplete_expr(jule::Slice<_1dd05db0c_Token>&,jule::Int&);
inline std::tuple<jule::Int,jule::Bool> _1dd229ca6_next_st_pos(jule::Slice<_1dd05db0c_Token>&,jule::Int);
inline std::tuple<jule::Slice<_1dd05db0c_Token>,jule::Bool> _1dd229ca6_skip_st(jule::Int&,jule::Slice<_1dd05db0c_Token>);
inline jule::Slice<jule::Ptr<_1dd229ca6_Stmt>> _1dd229ca6_split_stmts(jule::Slice<_1dd05db0c_Token>&);
inline jule::Ptr<_1ddb659bb_CallData> _1ddb659bb_get_call_data(jule::Slice<_1dd05db0c_Token>&);
inline jule::Slice<_1dd05db0c_Token> _1ddb659bb_get_block_expr(jule::Slice<_1dd05db0c_Token>&);
inline std::tuple<jule::Slice<_1dd05db0c_Token>,jule::Slice<_1dd05db0c_Token>> _1ddb659bb_split_colon(jule::Slice<_1dd05db0c_Token>&);
inline jule::Slice<_1dd05db0c_Token> _1ddb659bb_eliminate_comments(jule::Slice<_1dd05db0c_Token>&);
inline jule::Int _1ddb659bb_find_lowest_prec_op(jule::Slice<_1dd05db0c_Token>&);
inline jule::Ptr<_1dd05c765_IdentExpr> _1ddb659bb_build_ident_expr(_1dd05db0c_Token&);
inline std::tuple<jule::Slice<_1dd05db0c_Token>,jule::Int> _1ddb659bb_get_range_expr_tokens(jule::Slice<_1dd05db0c_Token>&);
inline jule::Bool _1ddb61a2d_check_assign_tokens(jule::Slice<_1dd05db0c_Token>&);
inline _1db678789_Log _1ddb89cdc_make_err(jule::Int,jule::Int,jule::Ptr<_1dd05eba7_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_1dd05db0c_Token> _1ddb89cdc_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_1dd05db0c_Token>&);
inline std::tuple<jule::Slice<_1dd05db0c_Token>,jule::Slice<_1dd05db0c_Token>> _1ddb89cdc_range_last(jule::Slice<_1dd05db0c_Token>&);
inline std::tuple<jule::Slice<jule::Slice<_1dd05db0c_Token>>,jule::Slice<_1db678789_Log>> _1ddb89cdc_parts(jule::Slice<_1dd05db0c_Token>&,jule::Uint,jule::Bool);
inline jule::Str _1ddb89cdc_get_close_kind_of_brace(jule::Str);
inline _1db678789_Log _1ddb89cdc_compiler_err(_1dd05db0c_Token&,jule::Str&,jule::Slice<jule::Any>);
inline void _1ddb89cdc_push_suggestion(_1db678789_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1dd05c765_Comment> _1ddb89cdc_build_comment(_1dd05db0c_Token&);
inline jule::Str _1ddb89cdc_tokstoa(jule::Slice<_1dd05db0c_Token>&);
inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_build_void_type(void);
inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_build_prim_type(_1dd05db0c_Token);
inline std::tuple<jule::Slice<_1dd05db0c_Token>,jule::Int> _1ddc59010_split_map_range(jule::Slice<_1dd05db0c_Token>&,jule::Int&);
inline void _1a64669ca_lshift_unsig(_1a64669ca_Const&,_1a64669ca_Const&);
inline void _1a64669ca_rshift_unsig(_1a64669ca_Const&,_1a64669ca_Const&);
inline jule::Str _1a6468a10_real_kind_of(jule::Str);
inline jule::Int _1a6468a10_bitsize_of(jule::Str);
inline jule::Bool _1a6468a10_check_bit_float(jule::Str,jule::Int);
inline jule::F64 _1a646eebc_min(jule::Str);
inline jule::F64 _1a646eebc_max(jule::Str);
inline jule::Bool _1a6470a8e_is_i8_compatible(jule::Str);
inline jule::Bool _1a6470a8e_is_i16_compatible(jule::Str);
inline jule::Bool _1a6470a8e_is_i32_compatible(jule::Str);
inline jule::Bool _1a6470a8e_is_i64_compatible(jule::Str);
inline jule::Bool _1a6470a8e_is_u8_compatible(jule::Str);
inline jule::Bool _1a6470a8e_is_u16_compatible(jule::Str);
inline jule::Bool _1a6470a8e_is_u32_compatible(jule::Str);
inline jule::Bool _1a6470a8e_is_u64_compatible(jule::Str);
inline jule::Bool _1a6470a8e_is_f32_compatible(jule::Str);
inline jule::Bool _1a6470a8e_is_f64_compatible(jule::Str);
inline jule::Bool _1a6470a8e_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _1a6470a8e_is_i16_greater(jule::Str);
inline jule::Bool _1a6470a8e_is_i32_greater(jule::Str);
inline jule::Bool _1a6470a8e_is_i64_greater(jule::Str);
inline jule::Bool _1a6470a8e_is_u16_greater(jule::Str);
inline jule::Bool _1a6470a8e_is_u32_greater(jule::Str);
inline jule::Bool _1a6470a8e_is_u64_greater(jule::Str);
inline jule::Bool _1a6470a8e_is_f32_greater(jule::Str);
inline jule::Bool _1a6470a8e_is_f64_greater(jule::Str);
inline jule::Bool _1a6470a8e_is_greater(jule::Str,jule::Str);
inline jule::Bool _1a6539949_is_sig_int(jule::Str);
inline jule::Bool _1a6539949_is_unsig_int(jule::Str);
inline jule::Bool _1a6539949_is_int(jule::Str);
inline jule::Bool _1a6539949_is_float(jule::Str);
inline jule::Bool _1a6539949_is_num(jule::Str);
inline jule::Bool _1a65aa3c1_is_ascii(jule::I32);
inline jule::I32 _1a65aa3c1_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1a65aa3c1_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1a65aa3c1_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1a65aa3c1_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1a65aa3c1_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Slice<jule::U8> _1a65aa3c1_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Int _1a665ad9a_find_format_prefix(jule::Slice<jule::U8>&,jule::Int&);
inline jule::Slice<jule::U8> _1a665ad9a_get_format_range(jule::Int&,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1a665ad9a_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1a665ad9a_apply_fmt_by_default(jule::Int&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a665ad9a_apply_fmt(jule::Slice<jule::U8>&,jule::Int&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a665ad9a_format_bytes(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1a665ad9a_format(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1dded9702_kind_uses_generics(jule::Ptr<_1a5e40a26_TypeKind>,jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>&);
inline jule::Bool _1dded9702_parameter_uses_generics(jule::Ptr<_1dded9702_Param>&,jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>&);
inline jule::Str _1dded9779_build_doc(jule::Ptr<_1dd05c765_CommentGroup>);
inline jule::Ptr<_1a5e40a26_TypeSymbol> _1dded9779_build_type(jule::Ptr<_1dd05c765_TypeDecl>);
inline jule::Ptr<_1a94c333b_Value> _1dded9779_build_expr(jule::Ptr<_1dd05c765_Expr>);
inline jule::Ptr<_1a5e40a26_TypeAlias> _1dded9779_build_type_alias(jule::Ptr<_1dd05c765_TypeAliasDecl>);
inline jule::Ptr<_1dd0be530_Field> _1dded9779_build_field(jule::Ptr<_1dd05c765_FieldDecl>);
inline jule::Slice<jule::Ptr<_1dd0be530_Field>> _1dded9779_build_fields(jule::Slice<jule::Ptr<_1dd05c765_FieldDecl>>&);
inline jule::Ptr<_1dd0be530_Struct> _1dded9779_build_struct(jule::Ptr<_1dd05c765_StructDecl>);
inline jule::Ptr<_1dded9702_Param> _1dded9779_build_param(jule::Ptr<_1dd05c765_ParamDecl>);
inline jule::Slice<jule::Ptr<_1dded9702_Param>> _1dded9779_build_params(jule::Slice<jule::Ptr<_1dd05c765_ParamDecl>>&);
inline jule::Ptr<_1dded9702_RetType> _1dded9779_build_ret_type(jule::Ptr<_1dd05c765_RetTypeDecl>);
inline jule::Ptr<_1dded9702_Fn> _1dded9779_build_fn(jule::Ptr<_1dd05c765_FnDecl>);
inline jule::Slice<jule::Ptr<_1dded9702_Fn>> _1dded9779_build_methods(jule::Slice<jule::Ptr<_1dd05c765_FnDecl>>&);
inline jule::Ptr<_1de043c01_Trait> _1dded9779_build_trait(jule::Ptr<_1dd05c765_TraitDecl>);
inline jule::Ptr<_1de0dbeb9_EnumItem> _1dded9779_build_enum_item(jule::Ptr<_1dd05c765_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1de0dbeb9_EnumItem>> _1dded9779_build_enum_items(jule::Slice<jule::Ptr<_1dd05c765_EnumItemDecl>>&);
inline jule::Ptr<_1de0dbeb9_Enum> _1dded9779_build_enum(jule::Ptr<_1dd05c765_EnumDecl>);
inline jule::Ptr<_1c3c3d174_Var> _1dded9779_build_var(jule::Ptr<_1dd05c765_VarDecl>);
inline jule::Slice<jule::Ptr<_1c3c3d174_Var>> _1dded9779_build_vars(jule::Slice<jule::Ptr<_1dd05c765_VarDecl>>);
inline jule::Ptr<_1de0e21cd_Impl> _1dded9779_build_impl(jule::Ptr<_1dd05c765_Impl>);
inline jule::Ptr<_1de0e938e_ScopeChecker> _1de0e938e_new_scope_checker_base(jule::Ptr<_1c2c46634_Sema>&,jule::Ptr<_1dded9702_FnIns>);
inline jule::Ptr<_1de0e938e_ScopeChecker> _1de0e938e_new_scope_checker(jule::Ptr<_1c2c46634_Sema>&,jule::Ptr<_1dded9702_FnIns>);
inline jule::Ptr<_1de0e938e_ScopeLabel> _1de0e938e_find_label_parent(jule::Str,jule::Ptr<_1de0e938e_ScopeChecker>);
inline jule::Bool _1de0e938e_stmt_is_goto_scope(jule::Any&,jule::Ptr<_1de0e938e_Scope>&);
inline jule::Int _1de0e938e_count_match_type(jule::Ptr<_1de0e938e_Match>&,jule::Ptr<_1a5e40a26_TypeKind>&);
inline jule::Slice<jule::Ptr<_1a94c333b_Data>> _1de0e938e_get_datas_from_tuple_data(jule::Ptr<_1a94c333b_Data>&);
inline jule::Slice<jule::Any> _1de0e938e_get_expr_models(jule::Any&);
inline jule::Bool _1de0e938e_check_mut(jule::Ptr<_1c2c46634_Sema>&,jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);
inline jule::Bool _1de0e938e_check_assign(jule::Ptr<_1c2c46634_Sema>&,jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1a94c333b_Data>,_1dd05db0c_Token);
inline jule::Bool _1de0e938e_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1de0e938e_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1de0e938e_st_is_def(jule::Any&);
inline jule::Ptr<_1c3c3d174_Var> _1c2c4607e_find_var_in_package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1a5e40a26_TypeAlias> _1c2c4607e_find_type_alias_in_package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1dd0be530_Struct> _1c2c4607e_find_struct_in_package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1dded9702_Fn> _1c2c4607e_find_fn_in_package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1de043c01_Trait> _1c2c4607e_find_trait_in_package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>&,jule::Str);
inline jule::Ptr<_1de0dbeb9_Enum> _1c2c4607e_find_enum_in_package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>&,jule::Str);
inline jule::Bool _1c2c4607e_is_std_package(jule::Str,jule::Str);
inline jule::Bool _1c2c46634_is_valid_model_for_ref(jule::Any&);
inline _1db678789_Log _1c2c46634_compiler_err(_1dd05db0c_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1c2c46634_imp_is_lookupable(jule::Ptr<_1c2c4607e_ImportInfo>&,jule::Str);
inline jule::Slice<jule::Ptr<_1c3c3d174_Var>> _1c2c46634_build_ret_vars(jule::Ptr<_1dded9702_FnIns>&);
inline jule::Slice<jule::Ptr<_1c3c3d174_Var>> _1c2c46634_build_param_vars(jule::Ptr<_1dded9702_FnIns>&);
inline jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> _1c2c46634_build_generic_type_aliases(jule::Ptr<_1dded9702_FnIns>&);
inline jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_find_file(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>&,jule::Ptr<_1dd05eba7_File>&);
inline std::tuple<jule::Bool,jule::Bool> _1c2c46634_conditional_has_ret(jule::Ptr<_1de0e938e_Conditional>);
inline jule::Bool _1c2c46634_match_has_ret(jule::Ptr<_1de0e938e_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1c2c46634___has_ret(jule::Ptr<_1de0e938e_Scope>);
inline jule::Bool _1c2c46634_has_ret(jule::Ptr<_1de0e938e_Scope>);
inline void _1c2c46634_push_suggestion(_1db678789_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>> _1a93c7a48_get_result_types(jule::Ptr<_1a5e40a26_TypeKind>&);
inline jule::Bool _1a93c7a48_trait_has_reference_receiver(jule::Ptr<_1de043c01_Trait>&);
inline jule::Bool _1a93c7a48_float_assignable(jule::Str,jule::Ptr<_1a94c333b_Data>&);
inline jule::Bool _1a93c7a48_sig_assignable(jule::Str,jule::Ptr<_1a94c333b_Data>&);
inline jule::Bool _1a93c7a48_unsig_assignable(jule::Str,jule::Ptr<_1a94c333b_Data>&);
inline jule::Bool _1a93c7a48_int_assignable(jule::Str,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1dd05c765_Directive> _1a94c333b_find_directive(jule::Slice<jule::Ptr<_1dd05c765_Directive>>&,jule::Str);
inline jule::Any _1a94c333b_find_builtins_import(jule::Str,jule::Ptr<_1c2c4607e_ImportInfo>);
inline void _1a94c333b_make_struct_lit_alloc(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1ddb3c047_StructLitExprModel>&);
inline jule::Ptr<_1c3c3d174_Var> _1a94c333b_build_error_var(jule::Ptr<_1de0e938e_Scope>&,jule::Ptr<_1dd05c765_FnCallExpr>&);
inline jule::Any _1a94c333b_find_builtins_sema(jule::Str,jule::Ptr<_1c2c46634_Sema>);
inline jule::Bool _1a94c333b_is_ok_for_shifting(jule::Ptr<_1a94c333b_Data>&);
inline jule::Bool _1a94c333b_is_instanced_struct(jule::Ptr<_1dd0be530_StructIns>);
inline jule::Bool _1a94c333b_is_ptr_arithmetic_compatible_int(jule::Ptr<_1a94c333b_Data>&);
inline void _1a94c333b_apply_cast_kind_model(jule::Ptr<_1a94c333b_Data>&);
inline void _1a94c333b_apply_cast_kind(jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a94c333b_build_void_data(void);
inline jule::Str _1a94c333b_check_data_for_integer_indexing(jule::Ptr<_1a94c333b_Data>&);
inline void _1a94c333b_apply_cast_model_by_enum(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1de0dbeb9_Enum>);
inline jule::Bool _1a5e40a26_has_directive(jule::Slice<jule::Ptr<_1dd05c765_Directive>>&,jule::Str);
inline jule::Bool _1a5e40a26_can_get_ptr(jule::Ptr<_1a94c333b_Data>&);
inline jule::Bool _1a5e40a26_is_valid_for_sptr_type(jule::Ptr<_1a5e40a26_TypeKind>&);
inline jule::Bool _1a5e40a26_is_valid_for_ref(jule::Ptr<_1a5e40a26_TypeKind>&);
inline jule::Bool _1a5e40a26_is_builtin_str_convertable(jule::Ptr<_1a5e40a26_TypeKind>&);
inline jule::Str _1a5e40a26_build_link_path_by_tokens(jule::Slice<_1dd05db0c_Token>&);
inline jule::Ptr<_1a5e40a26_Prim> _1a5e40a26_build_prim_type(jule::Str);
inline jule::Ptr<_1dd0be530_Struct> _1a5e40a26_get_struct_from_kind(jule::Ptr<_1a5e40a26_TypeKind>);
inline jule::Bool _1a5e40a26_is_prim(jule::Str);
inline std::tuple<jule::Ptr<_1a943b749_SymbolTable>,jule::Slice<_1db678789_Log>> _1a633736d_build_symbols(jule::Ptr<_1dd05b9c8_Ast>&,jule::Trait<_1c2c4607e_Importer>&,jule::Ptr<_1dded9779_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1c2c4607e_Package>,jule::Slice<_1db678789_Log>> _1a633736d___analyze_package(jule::Slice<jule::Ptr<_1dd05b9c8_Ast>>&,jule::Trait<_1c2c4607e_Importer>&,jule::Int&);
inline std::tuple<jule::Ptr<_1c2c4607e_Package>,jule::Slice<_1db678789_Log>> _1a633736d_analyze_package(jule::Slice<jule::Ptr<_1dd05b9c8_Ast>>,jule::Trait<_1c2c4607e_Importer>,jule::Int);
inline jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)> _1a634ca26_find_builtin_caller(jule::U8);
inline jule::Ptr<_1dded9702_FnIns> _1a634ca26_find_builtin_fn(jule::Str);
inline jule::Ptr<_1a5e40a26_TypeAlias> _1a634ca26_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1de043c01_Trait> _1a634ca26_find_builtin_trait(jule::Str);
inline jule::Any _1a634ca26_find_builtin_def(jule::Str);
inline jule::Any _1a634ca26_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1a634ca26_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1a634ca26_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1a634ca26_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_common_plain(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_common(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_common_mut(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_error(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_out(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_outln(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_new(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_panic(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_make(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_append(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_copy(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_clone(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_assert(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_mem_size_of(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_mem_align_of(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_mem_free(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_debug_out(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_debug_outln(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1dcee292b_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1dcee292b_check_arch(jule::Str);
inline jule::Bool _1dcee292b_is_pass_file_annotation(jule::Str);
inline void _1dd014068_set_os_vars(void);
inline void _1dd014068_set_arch_vars(void);
inline void _1dd014068_init_vars(void);
inline jule::Slice<jule::U8> _1dd023275_read_buff(jule::Str);
inline _1db678789_Log _1dd023275_flat_compiler_err(jule::Str);
inline std::tuple<jule::Bool,jule::Slice<_1db678789_Log>> _1dd023275_is_pass_build_directives(jule::Ptr<_1dd05b9c8_Ast>&);
inline void _1dcecd043_push_passes(jule::Ptr<_1c2c4607e_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1dcecd043_get_all_unique_passes(jule::Ptr<_1c2c4607e_Package>&,jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>>);
inline jule::Ptr<_1dd05c765_Directive> _1db67d74a_find_directive(jule::Slice<jule::Ptr<_1dd05c765_Directive>>&,jule::Str);
inline jule::Bool _1db67d74a_has_directive(jule::Slice<jule::Ptr<_1dd05c765_Directive>>&,jule::Str);
inline jule::Bool _1db67d74a_is_exist(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _1db67d74a_is_dead(jule::Any);
inline void _1db67d74a_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _1db67d74a_is_all_references_are_dead(jule::Ptr<_1dded9779_ReferenceStack>);
inline jule::Bool _1db67d74a_is_fn_dead(jule::Ptr<_1dded9702_FnIns>);
inline jule::Bool _1db67d74a_is_var_dead(jule::Ptr<_1c3c3d174_Var>);
inline jule::Bool _1db67d74a_is_struct_dead(jule::Ptr<_1dd0be530_StructIns>);
inline jule::Bool _1db67d74a_is_trait_dead(jule::Ptr<_1de043c01_Trait>);
inline void _1db67d74a_eliminate_dead_functions(jule::Slice<jule::Ptr<_1dded9702_Fn>>&);
inline void _1db67d74a_eliminate_dead_globals(jule::Ptr<_1c2c4607e_Package>&);
inline void _1db67d74a_eliminate_dead_functions_package(jule::Ptr<_1c2c4607e_Package>&);
inline void _1db67d74a_catch_alive_init(jule::Ptr<_1c2c4607e_Package>&);
inline void _1db67d74a_eliminate_package(jule::Ptr<_1c2c4607e_Package>&);
inline void _1db67d74a_eliminate_defines(jule::Ptr<_1dcecd043_IR>&);
inline void _1db71cbb3_eliminate_dead_code_of_scope(jule::Ptr<_1de0e938e_Scope>);
inline void _1db71cbb3_eliminate_scope_functions(jule::Slice<jule::Ptr<_1dded9702_Fn>>&);
inline void _1db71cbb3_eliminate_functions_scope_package(jule::Ptr<_1c2c4607e_Package>&);
inline void _1db71cbb3_eliminate_scope_package(jule::Ptr<_1c2c4607e_Package>&);
inline void _1db71cbb3_eliminate_scopes(jule::Ptr<_1dcecd043_IR>&);
inline jule::U64 _1a69e4ba1_unix(void);
inline jule::U64 _1a69e4ba1_unix_year_to_seconds(jule::U64,jule::Bool&);
inline jule::U64 _1a69e4ba1_unix_month_to_seconds(jule::U64,jule::Bool);
inline jule::Bool _1dc4e9dbd_is_iter_copy_optimizable(jule::Ptr<_1a94c333b_Data>&,jule::Ptr<_1c3c3d174_Var>&);
inline jule::Str _1dcb0cd1b_concat_all_parts(jule::Slice<_1dd05db0c_Token>);
inline std::tuple<jule::Bool,jule::U64> _1dcb0cd1b_check_for_bit_shift_opt(jule::Ptr<_1ddb3c047_OperandExprModel>&,jule::Ptr<_1ddb3c047_OperandExprModel>&);
inline jule::Str _1dcb0cd1b_decompose_common_esq(jule::U8);
inline jule::Str _1dcb0cd1b_sbtoa(jule::U8);
inline jule::Str _1dcb0cd1b_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1dcb0cd1b_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1dcb0cd1b_ftoa(jule::F64,jule::Int);
inline jule::Str _1dcb0cd1b_itoa(jule::I64);
inline jule::Str _1dcb0cd1b_utoa(jule::U64);
inline jule::Bool _1dcb0cd1b_is_forwarded(jule::Ptr<_1de0e938e_Scope>&);
inline jule::Bool _1a686ecd4_is_cpp_header_file(jule::Str);
inline jule::Ptr<_1dd05c765_Directive> _1a696bb06_find_directive(jule::Slice<jule::Ptr<_1dd05c765_Directive>>&,jule::Str);
inline jule::Bool _1a696bb06_has_directive(jule::Slice<jule::Ptr<_1dd05c765_Directive>>&,jule::Str);
inline jule::Bool _1dc4c9760_is_std_package(jule::Str,jule::Str);
inline jule::Bool _1dc4c9760_is_constant_valid_conditional_case(jule::Ptr<_1de0e938e_If>&);
inline jule::Bool _1dc4c9760_is_constant_valid_match_case(jule::Ptr<_1de0e938e_Case>&);
inline jule::Bool _1dc4c9760_is_unreachable_conditional_case(jule::Ptr<_1de0e938e_If>&);
inline jule::Bool _1dc4c9760_is_unreachable_match_case(jule::Ptr<_1de0e938e_Case>&);
inline void _1db59dcca_print_error_message(jule::Str);
inline void _1db59dcca_help(jule::Slice<jule::Str>&);
inline void _1db59dcca_version(jule::Slice<jule::Str>&);
inline void _1db59dcca_tool_distos(void);
inline void _1db59dcca_tool_distarch(void);
inline void _1db59dcca_tool(jule::Slice<jule::Str>&);
inline void _1db59dcca_julenv(jule::Slice<jule::Str>&);
inline void _1db59dcca_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1db59dcca_process_command(jule::Slice<jule::Str>&);
inline void _1db59dcca_show_info(void);
void entry_point(void);
inline void _1db5bc711___init_common(void);
inline void _1db5be0a3___enable_vtp(void);
inline void _1db5be0a3_init(void);
inline void _1db5c40db_write_output(jule::Str,jule::Str);
inline void _1db5c40db_clear_objects(void);
inline void _1db5c40db_compile_ir(jule::Str,jule::Str);
inline void _1db5c40db_do_spell(jule::Str,jule::Str,jule::Str);
inline jule::Bool _1db5c40db_is_cpp_source_file(jule::Str);
inline void _1db5c40db_push_comp_cmd_clang(jule::Str&);
inline void _1db5c40db_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1db5c40db_gen_compile_cmd(jule::Str,jule::Ptr<_1dcecd043_IR>&);
inline jule::Str _1db5c40db_get_compile_path(void);
inline void _1db5c40db_apply_target_independent_optimizations(jule::Ptr<_1dcecd043_IR>&);
inline void _1db5c40db_check_compiler_flag(void);
inline void _1db5c40db_check_target_arch(jule::Str);
inline void _1db5c40db_check_target_os(jule::Str);
inline void _1db5c40db_check_target_flag(jule::Str&);
inline void _1db5c40db_check_opt_flag(jule::Str&);
inline void _1db5c40db_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1db5c40db_check_flags(jule::Slice<jule::Str>&);
inline void _1db5c40db_setup_sema_flags(jule::Int&);
inline jule::Ptr<_1dcecd043_IR> _1db5c40db_build_ir(jule::Slice<jule::Str>&);
inline void _1db5c40db_compile_command(jule::Slice<jule::Str>&);


jule::Uintptr _1db653ae9_STDIN;
jule::Uintptr _1db653ae9_STDOUT;
jule::Uintptr _1db653ae9_STDERR;
jule::Str _1db5be6be_OS;
jule::Str _1db5be6be_ARCH;
jule::Bool _1db6263a2_PRODUCTION;
jule::Bool _1db6263a2_OPT_COPY;
jule::Bool _1db6263a2_OPT_DEADCODE;
jule::Bool _1db6263a2_OPT_APPEND;
jule::Bool _1db6263a2_OPT_MATH;
jule::Bool _1db6263a2_OPT_ACCESS;
jule::Bool _1db6263a2_OPT_INLINE;
jule::Bool _1db6263a2_OPT_PTR;
jule::Bool _1db6263a2_OPT_COND;
jule::Str _1db634b1e_COMPILER;
jule::Str _1db634b1e_COMPILER_PATH;
jule::Str _1db634b1e_CPP_STD;
jule::Bool _1db634b1e_SHADOWING;
jule::Bool _1db634b1e_TRANSPILATION;
jule::Bool _1db634b1e_TEST;
jule::Bool _1db634b1e_RC;
jule::Bool _1db634b1e_SAFETY;
jule::Array<jule::U8,256> _1db761ba2_FIRST;
jule::Array<_1db761ba2_accept_range,16> _1db761ba2_ACCEPT_RANGES;
jule::Ptr<_1dc4e2e71_RangeTable> _1dc4ddcb3__L;
jule::Ptr<_1dc4e2e71_RangeTable> _1dc4ddcb3_LETTER;
jule::Array<jule::U8,256> _1dc4ddcb3__PROPERTIES;
jule::Array<jule::Str,4> _1db676578_CPP_HEADER_EXTS;
jule::Array<jule::Str,3> _1db676578_CPP_EXTS;
jule::Array<jule::Str,1> _1db676578_OBJECTIVE_CPP_EXTS;
jule::Array<jule::Str,3> _1db6462e5_DISTOS;
jule::Array<jule::Str,3> _1db6462e5_DISTARCH;
jule::Str _1db841039_PATH_STDLIB;
jule::Str _1db841039_PATH_EXEC;
jule::Str _1db841039_PATH_WD;
jule::Str _1db841039_PATH_API;
jule::Array<jule::I32,5> _1dd05db0c_SPACES;
jule::Array<jule::Str,6> _1dd05db0c_UNARY_OPS;
jule::Array<jule::Str,12> _1dd05db0c_BIN_OPS;
jule::Array<jule::Str,2> _1dd05db0c_POSTFIX_OPS;
jule::Array<jule::Str,11> _1dd05db0c_ASSING_OPS;
jule::Array<_1dd0ed32d_KindPair,47> _1dd0ed32d_KEYWORDS;
jule::Array<_1dd0ed32d_KindPair,39> _1dd0ed32d_BASIC_OPS;
jule::Array<jule::U8,32> _1dd9bdadd_DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1dd9bdadd_DE_BRUIJN64_TAB;
_1dd1ec6b3_FloatInfo _1dd1ec6b3_F32_INFO;
_1dd1ec6b3_FloatInfo _1dd1ec6b3_F64_INFO;
jule::Array<jule::Array<jule::U64,2>,696> _1dd203e28_DETAILED_POWS_OF_TEN;
jule::Slice<jule::Int> _1dd205b2d_POWTAB;
jule::Slice<jule::F64> _1dd205b2d_F64_POW10;
jule::Slice<jule::F32> _1dd205b2d_F32_POW10;
jule::Array<jule::U64,20> _1dd347577_U64_POW10;
jule::Slice<_1dd472b47_LeftCheat> _1dd472b47_LEFTCHEATS;
jule::Ptr<_1a5e40a26_TypeAlias> _1a634ca26_BUILTIN_TYPE_ALIAS_BYTE;
jule::Ptr<_1a5e40a26_TypeAlias> _1a634ca26_BUILTIN_TYPE_ALIAS_RUNE;
jule::Slice<jule::Str> _1dd014068_VARS;
jule::Slice<jule::Any> _1db67d74a_deads;
jule::Slice<jule::Any> _1db67d74a_checking;
jule::Any _1db67d74a_current;
jule::Any _1db67d74a_main_current;
jule::Array<jule::U64,12> _1a69e4ba1_MDAYS;
jule::Array<jule::Array<jule::Str,2>,5> _1db59dcca_HELP_MAP;
jule::Str _1db5c40db_OUT_DIR;
jule::Str _1db5c40db_OUT_NAME;
jule::Str _1db5c40db_OUT;





std::ostream &operator<<(std::ostream &_Stream, const _1db761ba2_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4e2e71_FoldPair &_Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4e2e71_CaseRange &_Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4e2e71_Range16 &_Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4e2e71_Range32 &_Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4e2e71_RangeTable &_Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1db7b8830_LazyBuff::_method_index(jule::Int _5424_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[_5424_i];
	}
	return (*this)._field_path[_5424_i];
}



inline void _1db7b8830_LazyBuff::_method_append(jule::U8 _6125_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < static_cast<jule::Int>((*this)._field_path.len())) && ((*this)._field_path[(*this)._field_w] == _6125_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::Int>((*this)._field_path.len()));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,(*this)._field_w)));
	}
	(*this)._field_buff[(*this)._field_w]=_6125_c;
	((*this)._field_w)++;
}



inline jule::Str _1db7b8830_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len + (*this)._field_w);
	}
	return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,(*this)._field_w));
}







std::ostream &operator<<(std::ostream &_Stream, const _1db7b8830_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db69ceea_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1db69ceea_DirEntry>>> _1db69ceea_Directory::_static_method_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_1db69ceea_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_1db69ceea_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16_path = _1db6b9e3a_utf16_from_str(_1524_path);
	_WDIR* _1717_dir = _1db653ae9__wopendir((&(_1613_utf16_path[0LL])));
	if (_1717_dir == nullptr) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1db69ceea_DirEntry>>>(_1db67518c_get_last_fs_error());
	}
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _1db653ae9__wreaddir(_1717_dir);
			if (_2217_dirent == nullptr) {
				goto _iter_end_1a73703b6;
			}
			jule::Str _2617_name = _1db6b9e3a_u16_ptr_to_str(((jule::U16*)((*(_2217_dirent)).d_name)));
			jule::Ptr<_1db6a27c4_Status> _2721_stat = ({
				auto except = _1db6a27c4_Status::_static_method_of(_1db7b8830_join(jule::Slice<jule::Str>({_1524_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1db69ceea_DirEntry>>>(except.error);
					return jule::Exceptional<jule::Slice<jule::Ptr<_1db69ceea_DirEntry>>>(except.error);
				} jule::Ptr<_1db6a27c4_Status>();});
			});
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_struct<_1db69ceea_DirEntry>(new( std::nothrow ) _1db69ceea_DirEntry(_2617_name,_2721_stat)));
		}
	_iter_next_1a73703b6:;
	}
	_iter_end_1a73703b6:;
	_1db653ae9__wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1db69ceea_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional _1db69ceea_Directory::_static_method_create(jule::Str _4026_path) {
	jule::Slice<jule::U16> _4513_utf16_path = _1db6b9e3a_utf16_from_str(_4026_path);
	if ((!(_1db653ae9_create_directory((&(_4513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1db67518c_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1db69ceea_Directory::_static_method_remove(jule::Str _5426_path) {
	jule::Slice<jule::U16> _5513_utf16_path = _1db6b9e3a_utf16_from_str(_5426_path);
	if ((!(_1db653ae9_remove_directory((&(_5513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1db67518c_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, const _1db69ceea_Directory &_Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1db6a29e4_File> _1db6a29e4_File::_static_method_new(jule::Uintptr _4523_handle) {
	return jule::new_struct<_1db6a29e4_File>(new( std::nothrow ) _1db6a29e4_File(_4523_handle));
}



inline jule::Exceptional<jule::Ptr<_1db6a29e4_File>> _1db6a29e4_File::_static_method_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_1db6a29e4_File>>(jule::Any(),({
		auto except = _1db6a29e4_File::_static_method_open(_5526_path,static_cast<jule::Int>(770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_1db6a29e4_File>>(except.error);
			return jule::Exceptional<jule::Ptr<_1db6a29e4_File>>(except.error);
		} jule::Ptr<_1db6a29e4_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> _1db6a29e4_File::_static_method_read(jule::Str _6724_path) {
	jule::Ptr<_1db6a27c4_Status> _6813_s = ({
		auto except = _1db6a27c4_Status::_static_method_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1db6a27c4_Status>();});
	});
	if ((!((*(_6813_s))._method_is_reg()))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::Int>(14LL));
	}
	if ((*(_6813_s))._field_size == 0LLU) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	}
	jule::Ptr<_1db6a29e4_File> _7817_f = ({
		auto except = _1db6a29e4_File::_static_method_open(_6724_path,static_cast<jule::Int>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1db6a29e4_File>();});
	});
	__JULE_DEFER({
		({
			auto except = (*(_7817_f))._method_close();
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>((*(_6813_s))._field_size));
	jule::Int _8213_n = ({
		auto except = (*(_7817_f))._method_read(_8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Int();});
	});
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional _1db6a29e4_File::_static_method_write(jule::Str _9125_path,jule::Slice<jule::U8> _9136_data,jule::Int _9150_perm) {
	jule::Ptr<_1db6a29e4_File> _9217_f = ({
		auto except = _1db6a29e4_File::_static_method_open(_9125_path,static_cast<jule::Int>(769LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1db6a29e4_File>();});
	});
	({
		auto except = (*(_9217_f))._method_write(_9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = (*(_9217_f))._method_close();
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::Exceptional<jule::Int> _1db6a29e4_File::_method_seek(jule::Int _10527_offset,jule::Int _10540_origin) {
	jule::Int _10613_pos = _1db66e3b7_seek(static_cast<jule::Int>(static_cast<jule::Int>((*this)._field_handle)),_10527_offset,static_cast<jule::Int>(_10540_origin));
	if (_10613_pos == -1LL) {
		return jule::Exceptional<jule::Int>(_1db67518c_get_last_fs_error());
	}
	return jule::Exceptional<jule::Int>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1db6a29e4_File::_method_close(void) {
	if (_1db66e3b7_close(static_cast<jule::Int>(static_cast<jule::Int>((*this)._field_handle))) == -1LL) {
		return jule::VoidExceptional(_1db67518c_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::Exceptional<jule::Ptr<_1db6a29e4_File>> _1db6a29e4_File::_static_method_open(jule::Str _2124_path,jule::Int _2135_flag,jule::Int _2148_mode) {
	jule::Slice<jule::U16> _2213_utf16_path = _1db6b9e3a_utf16_from_str(_2124_path);
	jule::Int _2313_handle = _1db653ae9__wopen((&(_2213_utf16_path[0LL])),static_cast<jule::Int>(_2135_flag),_2148_mode);
	if (_2313_handle == -1LL) {
		return jule::Exceptional<jule::Ptr<_1db6a29e4_File>>(_1db67518c_get_last_fs_error());
	}
	return jule::Exceptional<jule::Ptr<_1db6a29e4_File>>(jule::Any(),_1db6a29e4_File::_static_method_new(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));
}



inline jule::VoidExceptional _1db6a29e4_File::_static_method_remove(jule::Str _3426_path) {
	jule::Slice<jule::U16> _3513_utf16_path = _1db6b9e3a_utf16_from_str(_3426_path);
	if ((!(_1db653ae9_delete_file((&(_3513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1db67518c_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::Exceptional<jule::Int> _1db6a29e4_File::_method_write(jule::Slice<jule::U8> _4928_buff) {
	jule::Int _4945_n = jule::Int();
	if (_4928_buff.len() == 0LL) {
		_4945_n = 0LL;
		return jule::Exceptional<jule::Int>(jule::Any(),_4945_n);
	}
	if (_1db72dda0_is_console_handle((*this)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16_buff = _1db6b9e3a_utf16_from_str(static_cast<jule::Str>(_4928_buff));
		jule::Bool _5617_ok = _1db653ae9_write_console((*this)._field_handle,(&(_5517_utf16_buff[0LL])),static_cast<jule::Int>(_5517_utf16_buff.len()),_4945_n,nullptr);
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::Int>(_1db67518c_get_last_fs_error());
		}
		return jule::Exceptional<jule::Int>(jule::Any(),_4945_n);
	}
	_4945_n=static_cast<jule::Int>(static_cast<jule::Int>(_1db66e3b7_write(static_cast<jule::Int>(static_cast<jule::Int>((*this)._field_handle)),(&(_4928_buff[0LL])),static_cast<jule::Uint>(static_cast<jule::Uint>(_4928_buff.len())))));
	if (_4945_n == -1LL) {
		return jule::Exceptional<jule::Int>(_1db67518c_get_last_fs_error());
	}
	return jule::Exceptional<jule::Int>(jule::Any(),_4945_n);
}



inline jule::Exceptional<jule::Int> _1db6a29e4_File::_method_read(jule::Slice<jule::U8> _8231_buff) {
	jule::Int _8248_n = jule::Int();
	if (_8231_buff.len() == 0LL) {
		_8248_n = 0LL;
		return jule::Exceptional<jule::Int>(jule::Any(),_8248_n);
	}
	if (_1db72dda0_is_console_handle((*this)._field_handle)) {
		jule::Slice<jule::U16> _8821_codepage = jule::Slice<jule::U16>::alloc(static_cast<jule::Int>(_8231_buff.len()));
		jule::Bool _8917_ok = _1db653ae9_read_console((*this)._field_handle,(&(_8821_codepage[0LL])),static_cast<jule::Int>(_8231_buff.len()),_8248_n,nullptr);
		if ((!(_8917_ok))) {
			return jule::Exceptional<jule::Int>(_1db67518c_get_last_fs_error());
		}
		jule::Slice<jule::I32> _9617_runes = _1db6dc017_decode(_8821_codepage.slice(0LL,_8248_n));
		_8248_n=0LL;
		{
			auto &expr = _9617_runes;
			auto it = expr.begin();
			_iter_begin_1a739394a:;
			if (it != expr.end()) {
				jule::I32 &_1db72dda0_r = *it;
				{
					jule::Int _9921_size = _1db761ba2_rune_len(_1db72dda0_r);
					if ((_8248_n + _9921_size) > static_cast<jule::Int>(_8231_buff.len())) {
						goto _iter_end_1a739394a;
					}
					_1db761ba2_encode_rune(_8231_buff.slice(_8248_n),_1db72dda0_r);
					_8248_n+=_9921_size;
				}
				_iter_next_1a739394a:;
				++it;
				goto _iter_begin_1a739394a;
			}
			_iter_end_1a739394a:;
		}
		return jule::Exceptional<jule::Int>(jule::Any(),_8248_n);
	}
	_8248_n=static_cast<jule::Int>(static_cast<jule::Int>(_1db66e3b7_read(static_cast<jule::Int>(static_cast<jule::Int>((*this)._field_handle)),(&(_8231_buff[0LL])),static_cast<jule::Uint>(static_cast<jule::Uint>(_8231_buff.len())))));
	if (_8248_n == -1LL) {
		return jule::Exceptional<jule::Int>(_1db67518c_get_last_fs_error());
	}
	return jule::Exceptional<jule::Int>(jule::Any(),_8248_n);
}







std::ostream &operator<<(std::ostream &_Stream, const _1db6a29e4_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1db6a27c4_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LLU) == 16384LLU;
}



inline jule::Bool _1db6a27c4_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LLU) == 32768LLU;
}



inline jule::Exceptional<jule::Ptr<_1db6a27c4_Status>> _1db6a27c4_Status::_static_method_of(jule::Str _1222_path) {
	jule::Slice<jule::U16> _1313_utf16_path = _1db6b9e3a_utf16_from_str(_1222_path);
	struct stat _1417_handle = (struct stat){};
	jule::Int _1513_code = _1db653ae9_wstat((&(_1313_utf16_path[0LL])),(&(_1417_handle)));
	if (_1513_code != -1LL) {
		return jule::Exceptional<jule::Ptr<_1db6a27c4_Status>>(jule::Any(),jule::new_struct<_1db6a27c4_Status>(new( std::nothrow ) _1db6a27c4_Status(static_cast<jule::Uint>(static_cast<jule::Uint>(_1417_handle.st_mode)),static_cast<jule::Uint>(static_cast<jule::Uint>(_1417_handle.st_size)))));
	}
	return jule::Exceptional<jule::Ptr<_1db6a27c4_Status>>(_1db67518c_get_last_fs_error());
}







std::ostream &operator<<(std::ostream &_Stream, const _1db6a27c4_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dce5a696_Cmd> _1dce5a696_Cmd::_static_method_new(jule::Str _2023_path) {
	return jule::new_struct<_1dce5a696_Cmd>(new( std::nothrow ) _1dce5a696_Cmd(_2023_path,jule::Slice<jule::Str>(),jule::Slice<jule::Str>()));
}



inline jule::Exceptional<jule::Int> _1dce5a696_Cmd::_method_spawn(void) {
	return jule::Exceptional<jule::Int>(jule::Any(),static_cast<jule::Int>(({
		auto except = (*this)._method___spawn();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Int>(except.error);
			return jule::Exceptional<jule::Int>(except.error);
		} jule::Int();});
	})));
}



inline jule::Exceptional<jule::Int> _1dce5a696_Cmd::_method___spawn(void) {
	jule::Int _5313_pid = ((((*this)._field_env == nullptr)) ? (_1dce6156a_execvp((*this)._field_path,(*this)._field_args)) : (static_cast<jule::Int>(_1dce6156a_execve((*this)._field_path,(*this)._field_args,(*this)._field_env))));
	if (_5313_pid == -1LL) {
		return jule::Exceptional<jule::Int>(_1dce5a344_get_last_process_error());
	}
	jule::Int _6113_status = 0LL;
	if (_cwait(((signed*)((&(_6113_status)))),_5313_pid,0LL) == -1LL) {
		return jule::Exceptional<jule::Int>(_1dce5a344_get_last_process_error());
	}
	return jule::Exceptional<jule::Int>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dce5a696_Cmd &_Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db678789_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1dd05db0c_Token::_method_prec(void) {
	if ((*this)._field_id != static_cast<jule::Uint>(7LLU)) {
		return 0LLU;
	}
	{
		auto &_match_expr{ (*this)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a74561e4:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a7456007:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a745606d:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a7455d5e:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a7455dc5:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1a7455a1d:;
			{
				return 0LLU;
			}
		}
		_match_end_1a7455ac8:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05db0c_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05eba7_File::_method_is_ok(void) {
	({
		auto except = _1db6a27c4_Status::_static_method_of((*this)._field__path);
		if (!except.ok()) {
			return false;
		}
	});
	return true;
}



inline void _1dd05eba7_File::_method_fill(jule::Slice<jule::U8> _2431_data) {
	(*this)._field_data=_2431_data;
}



inline jule::Str _1dd05eba7_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _1dd05eba7_File::_method_dir(void) {
	return _1db7b8830_dir((*this)._field__path);
}



inline jule::Str _1dd05eba7_File::_method_name(void) {
	return _1db7b8830_base((*this)._field__path);
}



inline jule::Uintptr _1dd05eba7_File::_method_addr(void) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*this))))));
}



inline jule::Slice<_1dd05db0c_Token> _1dd05eba7_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



inline jule::Str _1dd05eba7_File::_method_get_row(jule::Int _4426_row) {
	jule::Int _4517_n = 0LL;
	jule::Int _4617_line_start = 0LL;
	jule::Int _4717_i = 0LL;
	for (; _4717_i < static_cast<jule::Int>((*this)._field_data.len()); (_4717_i)++) {
		{
			if ((*this)._field_data[_4717_i] != '\n') {
				goto _iter_next_1a745d43d;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*this)._field_data.slice(_4617_line_start,_4717_i));
			}
			_4617_line_start=static_cast<jule::Int>(_4717_i + 1LL);
		}
	_iter_next_1a745d43d:;
	}
	_iter_end_1a745d43d:;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05eba7_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd0ed32d_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1dd0ed32d_Lex::_method_push_err(jule::Str _45427_fmt,jule::Slice<jule::Any> _45440_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.__push(_1dd0ed32d_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_45427_fmt,_45440_args));
}



inline void _1dd0ed32d_Lex::_method_push_err_tok(_1dd05db0c_Token& _45932_token,jule::Str _45946_fmt) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.__push(_1dd0ed32d_make_err(_45932_token._field_row,_45932_token._field_column,(*this)._field_file,_45946_fmt,jule::Slice<jule::Any>()));
}



inline void _1dd0ed32d_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	while ((*this)._field_pos < static_cast<jule::Int>((*((*this)._field_file))._field_data.len())) {
		{
			_1dd05db0c_Token _46921_token = (*this)._method_token();
			if (_46921_token._field_id != static_cast<jule::Uint>(0LLU)) {
				(*this)._field_tokens = jule::alloc_for_append((*this)._field_tokens,1);(*this)._field_tokens.__push(_46921_token);
			}
		}
	_iter_next_1a7463d4a:;
	}
	_iter_end_1a7463d4a:;
}



inline jule::Str _1dd0ed32d_Lex::_method_id(jule::Slice<jule::U8>& _47822_ln) {
	if (_47822_ln.len() == 0LL) {
		return jule::Str();
	}
	jule::I32 _48214_r;
	jule::Int _48221_i;
	std::tie(_48214_r,_48221_i) = _1db761ba2_decode_rune(_47822_ln);
	if ((_48214_r != '_') && (!(_1dd05db0c_is_letter(_48214_r)))) {
		return jule::Str();
	}
	while (_48221_i < static_cast<jule::Int>(_47822_ln.len())) {
		{
			jule::I32 _48818_r;
			jule::Int _48821_n;
			std::tie(_48818_r,_48821_n) = _1db761ba2_decode_rune(_47822_ln.slice(_48221_i));
			if (((_48818_r != '_') && (!(_1dd05db0c_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_48818_r)))))) && (!(_1dd05db0c_is_letter(_48818_r)))) {
				(*this)._field_pos+=_48221_i;
				return static_cast<jule::Str>(_47822_ln.slice(0LL,_48221_i));
			}
			_48221_i+=_48821_n;
		}
	_iter_next_1a7467436:;
	}
	_iter_end_1a7467436:;
	(*this)._field_pos+=static_cast<jule::Int>(_47822_ln.len());
	return static_cast<jule::Str>(_47822_ln);
}



inline jule::Slice<jule::U8> _1dd0ed32d_Lex::_method_resume(void) {
	jule::Int _50317_i = (*this)._field_pos;
	for (; _50317_i < static_cast<jule::Int>((*((*this)._field_file))._field_data.len()); (_50317_i)++) {
		{
			jule::I32 _50517_r = static_cast<jule::I32>((*((*this)._field_file))._field_data[_50317_i]);
			if (_1dd05db0c_is_space(_50517_r)) {
				
				((*this)._field_pos)++;
				{
					auto &_match_expr{ _50517_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a746c2c6:;
						{
							(*this)._method_new_line();
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1a746c837:;
						{
							(*this)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1a746c21b:;
						{
							((*this)._field_column)++;
						}
					}
					_match_end_1a746c1b6:;
				}
				goto _iter_next_1a746a8ce;
			}
			jule::Int _51721_j = _50317_i;
			for (; _51721_j < static_cast<jule::Int>((*((*this)._field_file))._field_data.len()); (_51721_j)++) {
				{
					if ((*((*this)._field_file))._field_data[_51721_j] == '\n') {
						goto _iter_end_1a746b726;
					}
				}
			_iter_next_1a746b726:;
			}
			_iter_end_1a746b726:;
			return (*((*this)._field_file))._field_data.slice(_50317_i,_51721_j);
		}
	_iter_next_1a746a8ce:;
	}
	_iter_end_1a746a8ce:;
	return nullptr;
}



inline void _1dd0ed32d_Lex::_method_lex_line_comment(_1dd05db0c_Token& _52940_token) {
	jule::Int _53013_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < static_cast<jule::Int>((*((*this)._field_file))._field_data.len()); ((*this)._field_pos)++) {
		{
			jule::U8 _53417_r = (*((*this)._field_file))._field_data[(*this)._field_pos];
			if ((_53417_r == '\n') || (_53417_r == '\r')) {
				if ((*this)._method_is_first_token_of_line()) {
					_52940_token._field_id=static_cast<jule::Uint>(18LLU);
					_52940_token._field_kind=static_cast<jule::Str>((*((*this)._field_file))._field_data.slice(_53013_start,(*this)._field_pos));
				}
				return;
			}
		}
	_iter_next_1a74705d7:;
	}
	_iter_end_1a74705d7:;
	if ((*this)._method_is_first_token_of_line()) {
		_52940_token._field_id=static_cast<jule::Uint>(18LLU);
		_52940_token._field_kind=static_cast<jule::Str>((*((*this)._field_file))._field_data.slice(_53013_start));
	}
}



inline void _1dd0ed32d_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < static_cast<jule::Int>((*((*this)._field_file))._field_data.len()); ((*this)._field_pos)++) {
		{
			jule::U8 _55317_r = (*((*this)._field_file))._field_data[(*this)._field_pos];
			if (_55317_r == '\r') {
				goto _iter_next_1a7474168;
			}
			if (_55317_r == '\n') {
				(*this)._method_new_line();
				goto _iter_next_1a7474168;
			}
			(*this)._field_column+=1LL;
			if (((((*this)._field_pos + 1LL) < static_cast<jule::Int>((*((*this)._field_file))._field_data.len())) && (_55317_r == '*')) && ((*((*this)._field_file))._field_data[(*this)._field_pos + 1LL] == '/')) {
				(*this)._field_column+=2LL;
				(*this)._field_pos+=2LL;
				return;
			}
		}
	_iter_next_1a7474168:;
	}
	_iter_end_1a7474168:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1dd0ed32d_Lex::_method_num(jule::Slice<jule::U8>& _57423_txt) {
	jule::Str _57438_lit = jule::Str();
	if (_57423_txt[0LL] == '_') {
		_57438_lit = jule::Str();
		return _57438_lit;
	}
	_57438_lit=_1dd0ed32d_hex_num(_57423_txt);
	if (_57438_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_57438_lit=_1dd0ed32d_octal_num(_57423_txt);
	if (_57438_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_57438_lit=_1dd0ed32d_binary_num(_57423_txt);
	if (_57438_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_57438_lit=_1dd0ed32d_common_num(_57423_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::Int>(_57438_lit.len());
	return _57438_lit;
}



inline jule::Str _1dd0ed32d_Lex::_method_escape_seq(jule::Slice<jule::U8>& _59630_txt) {
	jule::Str _59717_seq = jule::Str();
	if (_59630_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto &_match_expr{ _59630_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a747e5c4:;
			{
				(*this)._field_pos+=2LL;
				return static_cast<jule::Str>(_59630_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a747e4e7:;
			{
				_59717_seq=_1dd0ed32d_big_unicode_point_escape(_59630_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a747e2e9:;
			{
				_59717_seq=_1dd0ed32d_little_unicode_point_escape(_59630_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a747e360:;
			{
				_59717_seq=_1dd0ed32d_hex_byte_escape(_59630_txt);
			}
		}
		else {
			_case_begin_1a747e195:;
			{
				_59717_seq=_1dd0ed32d_byte_escape(_59630_txt);
			}
		}
		_match_end_1a747e140:;
	}
	_julec_label_end:;
	if (_59717_seq == jule::Str()) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	}
	(*this)._field_pos+=static_cast<jule::Int>(_59717_seq.len());
	return _59717_seq;
}



inline jule::Str _1dd0ed32d_Lex::_method_get_rune(jule::Slice<jule::U8>& _63028_txt,jule::Bool _63041_raw) {
	if ((!(_63041_raw)) && (_63028_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_63028_txt);
	}
	jule::I32 _63514_r;
	jule::Int _63517_n;
	std::tie(_63514_r,_63517_n) = _1db761ba2_decode_rune(_63028_txt);
	(*this)._field_pos+=_63517_n;
	return static_cast<jule::Str>(_63514_r);
}



inline jule::Str _1dd0ed32d_Lex::_method_lex_rune(jule::Slice<jule::U8>& _64028_txt) {
	jule::Str _64117_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _64317_n = 0LL;
	jule::Int _64417_i = 1LL;
	for (; _64417_i < static_cast<jule::Int>(_64028_txt.len()); (_64417_i)++) {
		{
			if (_64028_txt[_64417_i] == '\r') {
				goto _iter_next_1a7486895;
			}
			if (_64028_txt[_64417_i] == '\n') {
				(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*this)._field_pos)++;
				(*this)._method_new_line();
				return jule::Str();
			}
			jule::Slice<jule::U8> _65617_part = _64028_txt.slice(_64417_i);
			jule::Str _65717_r = (*this)._method_get_rune(_65617_part,false);
			_64117_run+=_65717_r;
			(*this)._field_column+=static_cast<jule::Int>(_1db761ba2_rune_count_str(_65717_r));
			if (_65717_r == jule::Str("'", 1)) {
				((*this)._field_pos)++;
				goto _iter_end_1a7486895;
			}
			if (_65717_r.len() > 1LL) {
				_64417_i+=static_cast<jule::Int>(static_cast<jule::Int>(_65717_r.len()) - 1LL);
			}
			(_64317_n)++;
		}
	_iter_next_1a7486895:;
	}
	_iter_end_1a7486895:;
	if (_64317_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if (_64317_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	}
	return _64117_run;
}



inline jule::Str _1dd0ed32d_Lex::_method_lex_str(void) {
	jule::Str _68017_s = jule::Str();
	jule::U8 _68113_mark = (*((*this)._field_file))._field_data[(*this)._field_pos];
	((*this)._field_pos)++;
	jule::Bool _68313_raw = _68113_mark == '`';
	_68017_s+=static_cast<jule::Str>(_68113_mark);
	((*this)._field_column)++;
	while ((*this)._field_pos < static_cast<jule::Int>((*((*this)._field_file))._field_data.len())) {
		{
			jule::U8 _68817_ch = (*((*this)._field_file))._field_data[(*this)._field_pos];
			if (_68817_ch == '\r') {
				goto _iter_next_1a748e0d9;
			}
			if (_68817_ch == '\n') {
				(*this)._method_new_line();
				if ((!(_68313_raw))) {
					(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*this)._field_pos)++;
					return jule::Str();
				}
			}
			jule::Slice<jule::U8> _70021_part = (*((*this)._field_file))._field_data.slice((*this)._field_pos);
			jule::Str _70117_r = (*this)._method_get_rune(_70021_part,_68313_raw);
			_68017_s+=_70117_r;
			(*this)._field_column+=static_cast<jule::Int>(_1db761ba2_rune_count_str(_70117_r));
			if (_68817_ch == _68113_mark) {
				goto _iter_end_1a748e0d9;
			}
		}
	_iter_next_1a748e0d9:;
	}
	_iter_end_1a748e0d9:;
	return _68017_s;
}



inline jule::Bool _1dd0ed32d_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



inline void _1dd0ed32d_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _1dd0ed32d_Lex::_method_is_op(jule::Slice<jule::U8>& _72125_txt,jule::Str _72138_kind,jule::Uint _72149_id,_1dd05db0c_Token& _72167_t) {
	if ((!(_1dd0ed32d_bytes_has_prefix(_72125_txt,_72138_kind)))) {
		return false;
	}
	_72167_t._field_kind=_72138_kind;
	_72167_t._field_id=_72149_id;
	(*this)._field_pos+=static_cast<jule::Int>(_72138_kind.len());
	return true;
}



inline jule::Bool _1dd0ed32d_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _73232_txt,_1dd05db0c_Token& _73250_tok) {
	{
		auto &expr = _1dd0ed32d_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1a7496784:;
		if (it != expr.end()) {
			_1dd0ed32d_KindPair &_1dd0ed32d_pair = *it;
			{
				if ((*this)._method_is_op(_73232_txt,_1dd0ed32d_pair._field_kind,_1dd0ed32d_pair._field_id,_73250_tok)) {
					return true;
				}
			}
			_iter_next_1a7496784:;
			++it;
			goto _iter_begin_1a7496784;
		}
		_iter_end_1a7496784:;
	}
	return false;
}



inline jule::Bool _1dd0ed32d_Lex::_method_lex_id(jule::Slice<jule::U8>& _74226_txt,_1dd05db0c_Token& _74244_t) {
	jule::Str _74313_lex = (*this)._method_id(_74226_txt);
	if (_74313_lex == jule::Str()) {
		return false;
	}
	_74244_t._field_kind=_74313_lex;
	_74244_t._field_id=static_cast<jule::Uint>(2LLU);
	return true;
}



inline jule::Bool _1dd0ed32d_Lex::_method_lex_num(jule::Slice<jule::U8>& _75327_txt,_1dd05db0c_Token& _75345_t) {
	jule::Str _75413_lex = (*this)._method_num(_75327_txt);
	if (_75413_lex == jule::Str()) {
		return false;
	}
	_75345_t._field_kind=_75413_lex;
	_75345_t._field_id=static_cast<jule::Uint>(6LLU);
	return true;
}



inline _1dd05db0c_Token _1dd0ed32d_Lex::_method_token(void) {
	_1dd05db0c_Token _76617_t = _1dd05db0c_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),static_cast<jule::Uint>(0LLU));
	jule::Slice<jule::U8> _76813_txt = (*this)._method_resume();
	if (_76813_txt == nullptr) {
		return _76617_t;
	}
	_76617_t._field_column=(*this)._field_column;
	_76617_t._field_row=(*this)._field_row;
	{
		
		if ((*this)._method_lex_num(_76813_txt,_76617_t)) {
			_case_begin_1a74a3e67:;
		}
		else if (_76813_txt[0LL] == '\'') {
			_case_begin_1a74a3708:;
			{
				_76617_t._field_kind=(*this)._method_lex_rune(_76813_txt);
				_76617_t._field_id=static_cast<jule::Uint>(6LLU);
				return _76617_t;
			}
		}
		else if ((_76813_txt[0LL] == '\"') || (_76813_txt[0LL] == '`')) {
			_case_begin_1a74a2bad:;
			{
				_76617_t._field_kind=(*this)._method_lex_str();
				_76617_t._field_id=static_cast<jule::Uint>(6LLU);
				return _76617_t;
			}
		}
		else if (_1dd0ed32d_bytes_has_prefix(_76813_txt,jule::Str("//", 2))) {
			_case_begin_1a74a2c24:;
			{
				(*this)._method_lex_line_comment(_76617_t);
				return _76617_t;
			}
		}
		else if (_1dd0ed32d_bytes_has_prefix(_76813_txt,jule::Str("/*", 2))) {
			_case_begin_1a74a420e:;
			{
				(*this)._method_lex_range_comment();
				return _76617_t;
			}
		}
		else if ((*this)._method_is_op(_76813_txt,jule::Str("(", 1),static_cast<jule::Uint>(3LLU),_76617_t) || (*this)._method_is_op(_76813_txt,jule::Str(")", 1),static_cast<jule::Uint>(3LLU),_76617_t) || (*this)._method_is_op(_76813_txt,jule::Str("{", 1),static_cast<jule::Uint>(3LLU),_76617_t) || (*this)._method_is_op(_76813_txt,jule::Str("}", 1),static_cast<jule::Uint>(3LLU),_76617_t) || (*this)._method_is_op(_76813_txt,jule::Str("[", 1),static_cast<jule::Uint>(3LLU),_76617_t) || (*this)._method_is_op(_76813_txt,jule::Str("]", 1),static_cast<jule::Uint>(3LLU),_76617_t) || (*this)._method_lex_basic_ops(_76813_txt,_76617_t)) {
			_case_begin_1a74a4275:;
		}
		else if ((*this)._method_lex_id(_76813_txt,_76617_t)) {
			_case_begin_1a74a42db:;
			{
				{
					auto &expr = _1dd0ed32d_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1a74ab29e:;
					if (it != expr.end()) {
						_1dd0ed32d_KindPair &_1dd0ed32d_pair = *it;
						{
							if (_1dd0ed32d_pair._field_kind == _76617_t._field_kind) {
								_76617_t._field_id=_1dd0ed32d_pair._field_id;
								goto _iter_end_1a74ab29e;
							}
						}
						_iter_next_1a74ab29e:;
						++it;
						goto _iter_begin_1a74ab29e;
					}
					_iter_end_1a74ab29e:;
				}
			}
		}
		else {
			_case_begin_1a74a21b8:;
			{
				jule::I32 _81818_r;
				jule::Int _81821_sz;
				std::tie(_81818_r,_81821_sz) = _1db761ba2_decode_rune(_76813_txt);
				(*this)._method_push_err(jule::Str("undefined token: @", 18),jule::Slice<jule::Any>({jule::Any(_81818_r)}));
				((*this)._field_column)++;
				(*this)._field_pos+=_81821_sz;
				return _76617_t;
			}
		}
		_match_end_1a74a2163:;
	}
	(*this)._field_column+=static_cast<jule::Int>(_1db761ba2_rune_count_str(_76617_t._field_kind));
	return _76617_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd0ed32d_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05b9c8_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_SptrTypeDecl &_Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_PtrTypeDecl::_method_is_unsafe(void) {
	return (*this)._field_elem == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_ArrTypeDecl::_method_auto_sized(void) {
	return (*this)._field_size == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base != nullptr;
}



inline jule::Bool _1dd05c765_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd1ec6b3_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd1ec6b3_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd472b47_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd472b47_Decimal::_method_set(jule::Str _23422_s) {
	jule::Bool _23432_ok = jule::Bool();
	jule::Int _23517_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23517_i >= static_cast<jule::Int>(_23422_s.len())) {
		return _23432_ok;
	}
	{
		
		if (_23422_s[_23517_i] == '+') {
			_case_begin_1a79adb69:;
			{
				(_23517_i)++;
			}
		}
		else if (_23422_s[_23517_i] == '-') {
			_case_begin_1a79ae1ca:;
			{
				(*this)._field_neg=true;
				(_23517_i)++;
			}
		}
		_match_end_1a79adad1:;
	}
	jule::Bool _25217_sawdot = false;
	jule::Bool _25317_sawdigits = false;
	for (; _23517_i < static_cast<jule::Int>(_23422_s.len()); (_23517_i)++) {
		{
			{
				
				if (_23422_s[_23517_i] == '_') {
					_case_begin_1a79b11bb:;
					{
						goto _iter_next_1a79ad8d3;
					}
				}
				else if (_23422_s[_23517_i] == '.') {
					_case_begin_1a79b1243:;
					{
						if (_25217_sawdot) {
							return _23432_ok;
						}
						_25217_sawdot=true;
						(*this)._field_dp=(*this)._field_nd;
						goto _iter_next_1a79ad8d3;
					}
				}
				else if (('0' <= _23422_s[_23517_i]) && (_23422_s[_23517_i] <= '9')) {
					_case_begin_1a79b12ba:;
					{
						_25317_sawdigits=true;
						if ((_23422_s[_23517_i] == '0') && ((*this)._field_nd == 0LL)) {
							((*this)._field_dp)--;
							goto _iter_next_1a79ad8d3;
						}
						if ((*this)._field_nd < 800LL) {
							(*this)._field_d[(*this)._field_nd]=_23422_s[_23517_i];
							((*this)._field_nd)++;
						} else if (_23422_s[_23517_i] != '0') {
							(*this)._field_trunc=true;
						}
						goto _iter_next_1a79ad8d3;
					}
				}
				_match_end_1a79b10ab:;
			}
			goto _iter_end_1a79ad8d3;
		}
	_iter_next_1a79ad8d3:;
	}
	_iter_end_1a79ad8d3:;
	if ((!(_25317_sawdigits))) {
		return _23432_ok;
	}
	if ((!(_25217_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23517_i < static_cast<jule::Int>(_23422_s.len())) && (_1dd20559a_lower(_23422_s[_23517_i]) == 'e')) {
		(_23517_i)++;
		if (_23517_i >= static_cast<jule::Int>(_23422_s.len())) {
			return _23432_ok;
		}
		jule::Int _29821_esign = 1LL;
		if (_23422_s[_23517_i] == '+') {
			(_23517_i)++;
		} else if (_23422_s[_23517_i] == '-') {
			(_23517_i)++;
			_29821_esign=-1LL;
		}
		if (((_23517_i >= static_cast<jule::Int>(_23422_s.len())) || (_23422_s[_23517_i] < '0')) || (_23422_s[_23517_i] > '9')) {
			return _23432_ok;
		}
		jule::Int _30821_e = 0LL;
		for (; (_23517_i < static_cast<jule::Int>(_23422_s.len())) && ((('0' <= _23422_s[_23517_i]) && (_23422_s[_23517_i] <= '9')) || (_23422_s[_23517_i] == '_')); (_23517_i)++) {
			{
				if (_23422_s[_23517_i] == '_') {
					goto _iter_next_1a79b838d;
				}
				if (_30821_e < 10000LL) {
					_30821_e=static_cast<jule::Int>(static_cast<jule::Int>(static_cast<jule::Int>(_30821_e * 10LL) + static_cast<jule::Int>(static_cast<jule::Int>(_23422_s[_23517_i]))) - '0');
				}
			}
		_iter_next_1a79b838d:;
		}
		_iter_end_1a79b838d:;
		(*this)._field_dp+=static_cast<jule::Int>(_30821_e * _29821_esign);
	}
	if (_23517_i != static_cast<jule::Int>(_23422_s.len())) {
		return _23432_ok;
	}
	_23432_ok=true;
	return _23432_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1dd472b47_Decimal::_method_float_bits(_1dd1ec6b3_FloatInfo& _32830_flt) {
	jule::U64 _32848_b = jule::U64();
	jule::Bool _32856_overflow = jule::Bool();
	jule::Int _32917_exp = 0LL;
	jule::U64 _33017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_33017_mant=0LLU;
		_32917_exp=_32830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_33017_mant=0LLU;
		_32917_exp=_32830_flt._field_bias;
		goto _julec_label_out;
	}
	_32917_exp=0LL;
	while ((*this)._field_dp > 0LL) {
		{
			jule::Int _35521_n = 0LL;
			if ((*this)._field_dp >= static_cast<jule::Int>(_1dd205b2d_POWTAB.len())) {
				_35521_n=27LL;
			} else {
				_35521_n=_1dd205b2d_POWTAB[(*this)._field_dp];
			}
			(*this)._method_shift(static_cast<jule::Int>((-(_35521_n))));
			_32917_exp+=_35521_n;
		}
	_iter_next_1a79c230e:;
	}
	_iter_end_1a79c230e:;
	while (((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d.__at(0LL) < '5'))) {
		{
			jule::Int _36521_n = 0LL;
			if ((-((*this)._field_dp)) >= static_cast<jule::Int>(_1dd205b2d_POWTAB.len())) {
				_36521_n=27LL;
			} else {
				_36521_n=_1dd205b2d_POWTAB[(-((*this)._field_dp))];
			}
			(*this)._method_shift(_36521_n);
			_32917_exp-=_36521_n;
		}
	_iter_next_1a79c3321:;
	}
	_iter_end_1a79c3321:;
	(_32917_exp)--;
	if (_32917_exp < static_cast<jule::Int>(_32830_flt._field_bias + 1LL)) {
		jule::Int _38217_n = (_32830_flt._field_bias + 1LL) - _32917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_38217_n))));
		_32917_exp+=_38217_n;
	}
	if ((_32917_exp - _32830_flt._field_bias) >= static_cast<jule::Int>(static_cast<jule::Int>((1LL << _32830_flt._field_expbits) - 1LL))) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(static_cast<jule::Int>(1LL + _32830_flt._field_mantbits)));
	_33017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_33017_mant == static_cast<jule::U64>(2LLU << _32830_flt._field_mantbits)) {
		_33017_mant>>=1LLU;
		(_32917_exp)++;
		if ((_32917_exp - _32830_flt._field_bias) >= static_cast<jule::Int>(static_cast<jule::Int>((1LL << _32830_flt._field_expbits) - 1LL))) {
			goto _julec_label_overflow;
		}
	}
	if ((_33017_mant & static_cast<jule::U64>(1LLU << _32830_flt._field_mantbits)) == 0LLU) {
		_32917_exp=_32830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_33017_mant=0LLU;
	_32917_exp=static_cast<jule::Int>(static_cast<jule::Int>(((static_cast<jule::Uint>(1LLU) << _32830_flt._field_expbits) - 1LLU) + static_cast<jule::Uint>(static_cast<jule::Uint>(_32830_flt._field_bias))));
	_32856_overflow=true;
	_julec_label_out:;
	jule::U64 _41817_bits = _33017_mant & static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32830_flt._field_mantbits) - 1LLU);
	_41817_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_32917_exp - _32830_flt._field_bias) & static_cast<jule::Int>(static_cast<jule::Int>((1LL << _32830_flt._field_expbits) - 1LL)))) << _32830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_41817_bits|=static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32830_flt._field_mantbits) << _32830_flt._field_expbits);
	}
	_32848_b = _41817_bits;
	return std::make_tuple(_32848_b,_32856_overflow);
}



inline void _1dd472b47_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>();
	jule::Int _15617_n = 0LL;
	while (_15229_v > 0LLU) {
		{
			jule::U64 _15817_v1 = _15229_v / 10LLU;
			_15229_v-=static_cast<jule::U64>(10LLU * _15817_v1);
			_15317_buf[_15617_n]=static_cast<jule::U8>(static_cast<jule::U8>(_15229_v + '0'));
			(_15617_n)++;
			_15229_v=_15817_v1;
		}
	_iter_next_1a79d1b59:;
	}
	_iter_end_1a79d1b59:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	for (; _15617_n >= 0LL; (_15617_n)--) {
		{
			(*this)._field_d[(*this)._field_nd]=_15317_buf[_15617_n];
			((*this)._field_nd)++;
		}
	_iter_next_1a79d1e34:;
	}
	_iter_end_1a79d1e34:;
	(*this)._field_dp=(*this)._field_nd;
	_1dd472b47_trim((*this));
}



inline void _1dd472b47_Decimal::_method_shift(jule::Int _17728_k) {
	{
		
		if ((*this)._field_nd == 0LL) {
			_case_begin_1a79d4c8e:;
		}
		else if (_17728_k > 0LL) {
			_case_begin_1a79d4d16:;
			{
				while (_17728_k > 60LL) {
					{
						_1dd472b47_left_shift((*this),60LLU);
						_17728_k-=60LL;
					}
				_iter_next_1a79d54a9:;
				}
				_iter_end_1a79d54a9:;
				_1dd472b47_left_shift((*this),static_cast<jule::Uint>(static_cast<jule::Uint>(_17728_k)));
			}
		}
		else if (_17728_k < 0LL) {
			_case_begin_1a79d4d8d:;
			{
				while (_17728_k < -60LL) {
					{
						_1dd472b47_right_shift((*this),60LLU);
						_17728_k+=60LL;
					}
				_iter_next_1a79d6664:;
				}
				_iter_end_1a79d6664:;
				_1dd472b47_right_shift((*this),static_cast<jule::Uint>(static_cast<jule::Uint>((-(_17728_k)))));
			}
		}
		_match_end_1a79d4b7e:;
	}
}



inline void _1dd472b47_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_1dd472b47_trim((*this));
}



inline void _1dd472b47_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	for (; _21217_i >= 0LL; (_21217_i)--) {
		{
			jule::U8 _21417_c = (*this)._field_d[_21217_i];
			if (_21417_c < '9') {
				((*this)._field_d[_21217_i])++;
				(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
				return;
			}
		}
	_iter_next_1a79da734:;
	}
	_iter_end_1a79da734:;
	(*this)._field_d.__at(0LL)='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _1dd472b47_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_1dd472b47_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _1dd472b47_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	for (; (_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd); (_25017_i)++) {
		{
			_25117_n=static_cast<jule::U64>(static_cast<jule::U64>(_25117_n * 10LLU) + static_cast<jule::U64>(static_cast<jule::U64>((*this)._field_d[_25017_i] - '0')));
		}
	_iter_next_1a79de727:;
	}
	_iter_end_1a79de727:;
	for (; _25017_i < (*this)._field_dp; (_25017_i)++) {
		{
			_25117_n*=10LLU;
		}
	_iter_next_1a79e19d2:;
	}
	_iter_end_1a79e19d2:;
	if (_1dd472b47_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd472b47_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline void _1dd0ba905_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void _1dd0ba905_AnsiEscape::_static_method_print(jule::Str _2025_escape,jule::Str _2038_text) {
	jule::out(_2025_escape);
	jule::out(_2038_text);
	_1dd0ba905_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd0ba905_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void _1dd0bac02_Logger::_static_method_log_flat(_1db678789_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void _1dd0bac02_Logger::_static_method_log_error(_1db678789_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	_1dd0ba905_AnsiEscape::_static_method_reset();
	if (_1930_l._field_path.len() != 0LL) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	}
	if ((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL)) {
		jule::out(jule::Str(":", 1));
		jule::out(_1dd4c1635_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1dd4c1635_itoa(_1930_l._field_column));
	}
	if (_1930_l._field_line.len() != 0LL) {
		jule::Str _3621_line = _1db822922_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));
		jule::Int _3721_offset = (_1930_l._field_line.len() - static_cast<jule::Int>(_3621_line.len())) + 1LL;
		jule::Int _3821_old_len = _3621_line.len();
		_3621_line=_1db822922_trim_left(_3621_line,jule::Str("\t", 1));
		if (_3821_old_len != static_cast<jule::Int>(_3621_line.len())) {
			_3721_offset+=static_cast<jule::Int>(static_cast<jule::Int>(_3821_old_len - static_cast<jule::Int>(_3621_line.len())) << 3LLU);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1dd4c1635_itoa(_1930_l._field_row);
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1db822922_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1db822922_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_1930_l._field_column - _3721_offset)));
		jule::out(jule::Str("^", 1));
		if (_1930_l._field_suggestion.len() != 0LL) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1db822922_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			_1dd0ba905_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void _1dd0bac02_Logger::_static_method_log(_1db678789_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::Int>(0LL)) {
			_case_begin_1a7bbb519:;
			{
				_1dd0bac02_Logger::_static_method_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::Int>(1LL)) {
			_case_begin_1a7bbb580:;
			{
				_1dd0bac02_Logger::_static_method_log_error(_6524_l);
			}
		}
		_match_end_1a7bbb4b4:;
	}
}



inline void _1dd0bac02_Logger::_static_method_print_logs(jule::Slice<_1db678789_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1a7bbc31c:;
		if (it != expr.end()) {
			_1db678789_Log &_1dd0bac02_l = *it;
			{
				_1dd0bac02_Logger::_static_method_log(_1dd0bac02_l);
			}
			_iter_next_1a7bbc31c:;
			++it;
			goto _iter_begin_1a7bbc31c;
		}
		_iter_end_1a7bbc31c:;
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_1dd4c1635_itoa(static_cast<jule::Int>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd0bac02_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd0be6b7_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd0be6b7_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd229ca6_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1dd229ca6_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _1dd229ca6_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _1dd229ca6_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= static_cast<jule::Int>((*this)._field_stmts.len());
}



inline jule::Bool _1dd229ca6_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= static_cast<jule::Int>((*this)._field_stmts.len());
}



inline void _1dd229ca6_ScopeParser::_method_push_err(_1dd05db0c_Token _17827_token,jule::Str _17841_fmt) {
	(*((*this)._field_p))._method_push_err(_17827_token,_17841_fmt,jule::Slice<jule::Any>());
}



inline void _1dd229ca6_ScopeParser::_method_push_suggestion(jule::Str _18134_fmt,jule::Slice<jule::Any> _18147_args) {
	(*((*this)._field_p))._method_push_suggestion(_18134_fmt,_18147_args);
}



inline void _1dd229ca6_ScopeParser::_method_insert_as_next(jule::Slice<_1dd05db0c_Token>& _18538_tokens) {
	(*this)._field_stmts=jule::append((*this)._field_stmts.slice(0LL,(*this)._field_pos + 1LL),(*this)._field_stmts.slice((*this)._field_pos));
	(*this)._field_stmts[(*this)._field_pos + 1LL]=jule::new_struct<_1dd229ca6_Stmt>(new( std::nothrow ) _1dd229ca6_Stmt(_18538_tokens,jule::Bool()));
}



inline jule::Ptr<_1dd229ca6_Stmt> _1dd229ca6_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stmts[(*this)._field_pos];
}



inline jule::Ptr<_1dd05c765_ScopeTree> _1dd229ca6_ScopeParser::_method_build_scope(jule::Slice<_1dd05db0c_Token>& _19535_tokens) {
	jule::Ptr<_1dd05c765_ScopeTree> _19617_s = _1dd229ca6_new_scope();
	(*(_19617_s))._field_parent=(*this)._field_s;
	_1dd229ca6_ScopeParser _19817_ssp = _1dd229ca6_ScopeParser((*this)._field_p,jule::Ptr<_1dd05c765_ScopeTree>(),jule::Slice<jule::Ptr<_1dd229ca6_Stmt>>(),jule::Int());
	_19817_ssp._method_build(_19535_tokens,_19617_s);
	return _19617_s;
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_var_st(jule::Slice<_1dd05db0c_Token>& _20536_tokens) {
	jule::Ptr<_1dd05c765_VarDecl> _20617_v = (*((*this)._field_p))._method_build_var(_20536_tokens);
	(*(_20617_v))._field_scope=(*this)._field_s;
	return jule::Any(_20617_v);
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_ret_st(jule::Slice<_1dd05db0c_Token> _21135_tokens) {
	jule::Ptr<_1dd05c765_RetSt> _21217_st = jule::new_struct<_1dd05c765_RetSt>(new( std::nothrow ) _1dd05c765_RetSt(_21135_tokens[0LL],jule::Ptr<_1dd05c765_Expr>()));
	if (_21135_tokens.len() > 1LL) {
		_21135_tokens=_21135_tokens.slice(1LL);
		(*(_21217_st))._field_expr=(*((*this)._field_p))._method_build_expr(_21135_tokens);
	}
	return jule::Any(_21217_st);
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_while_next_iter(jule::Ptr<_1dd229ca6_Stmt>& _22245_s) {
	jule::Ptr<_1dd05c765_Iter> _22317_it = jule::new_struct<_1dd05c765_Iter>(new( std::nothrow ) _1dd05c765_Iter((*(_22245_s))._field_tokens[0LL],jule::Any(),jule::Ptr<_1dd05c765_ScopeTree>()));
	jule::Slice<_1dd05db0c_Token> _22617_tokens = (*(_22245_s))._field_tokens.slice(1LL);
	jule::Ptr<_1dd05c765_WhileKind> _22717_kind = jule::new_struct<_1dd05c765_WhileKind>(new( std::nothrow ) _1dd05c765_WhileKind());
	if (_22617_tokens.len() > 0LL) {
		(*(_22717_kind))._field_expr=(*((*this)._field_p))._method_build_expr(_22617_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err((*(_22317_it))._field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_22617_tokens=(*((*this)._method_next()))._field_tokens;
	jule::Slice<_1dd05db0c_Token> _23917_st_tokens = _1ddb659bb_get_block_expr(_22617_tokens);
	if (_23917_st_tokens.len() > 0LL) {
		jule::Ptr<_1dd229ca6_Stmt> _24121_stmt = jule::new_struct<_1dd229ca6_Stmt>(new( std::nothrow ) _1dd229ca6_Stmt(_23917_st_tokens,(*(_22245_s))._field_terminated));
		(*(_22717_kind))._field_next_token=_23917_st_tokens[0LL];
		(*(_22717_kind))._field_next=(*this)._method_build_st(_24121_stmt);
	}
	jule::Int _24917_i = _23917_st_tokens.len();
	jule::Slice<_1dd05db0c_Token> _25017_block_tokens = _1ddb89cdc_range(_24917_i,jule::Str("{", 1),jule::Str("}", 1),_22617_tokens);
	if (_25017_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err((*(_22317_it))._field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_24917_i < static_cast<jule::Int>(_22617_tokens.len())) {
		(*this)._method_push_err(_22617_tokens[_24917_i],jule::Str("invalid syntax", 14));
	}
	(*(_22317_it))._field_scope=(*this)._method_build_scope(_25017_block_tokens);
	(*(_22317_it))._field_kind=jule::Any(_22717_kind);
	return jule::Any(_22317_it);
}



inline jule::Ptr<_1dd05c765_WhileKind> _1dd229ca6_ScopeParser::_method_build_while_iter_kind(jule::Slice<_1dd05db0c_Token>& _26745_tokens) {
	return jule::new_struct<_1dd05c765_WhileKind>(new( std::nothrow ) _1dd05c765_WhileKind((*((*this)._field_p))._method_build_expr(_26745_tokens),jule::Any(),_1dd05db0c_Token()));
}



inline jule::Slice<jule::Slice<_1dd05db0c_Token>> _1dd229ca6_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_1dd05db0c_Token>& _27350_toks) {
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _27418_vars;
	jule::Slice<_1db678789_Log> _27424_errs;
	std::tie(_27418_vars,_27424_errs) = _1ddb89cdc_parts(_27350_toks,static_cast<jule::Uint>(8LLU),true);
	(*((*this)._field_p))._field_errors=jule::append((*((*this)._field_p))._field_errors,_27424_errs);
	return _27418_vars;
}



inline jule::Ptr<_1dd05c765_VarDecl> _1dd229ca6_ScopeParser::_method_build_range_kind_key(jule::Slice<_1dd05db0c_Token>& _27944_tokens) {
	if (_27944_tokens.len() == 0LL) {
		return nullptr;
	}
	jule::Ptr<_1dd05c765_VarDecl> _28317_key = jule::new_struct<_1dd05c765_VarDecl>(new( std::nothrow ) _1dd05c765_VarDecl(jule::Ptr<_1dd05c765_ScopeTree>(),_27944_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1dd05c765_Directive>>(),jule::Ptr<_1dd05c765_CommentGroup>(),jule::Ptr<_1dd05c765_TypeDecl>(),jule::Ptr<_1dd05c765_Expr>()));
	if ((*(_28317_key))._field_token._field_id == static_cast<jule::Uint>(36LLU)) {
		(*(_28317_key))._field_mutable=true;
		if (_27944_tokens.len() == 1LL) {
			(*this)._method_push_err((*(_28317_key))._field_token,jule::Str("invalid syntax", 14));
		}
		(*(_28317_key))._field_token=_27944_tokens[1LL];
	} else if (_27944_tokens.len() > 1LL) {
		(*this)._method_push_err(_27944_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if ((*(_28317_key))._field_token._field_id != static_cast<jule::Uint>(2LLU)) {
		(*this)._method_push_err((*(_28317_key))._field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	(*(_28317_key))._field_ident=(*(_28317_key))._field_token._field_kind;
	return _28317_key;
}



inline jule::Slice<jule::Ptr<_1dd05c765_VarDecl>> _1dd229ca6_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_1dd05db0c_Token>>& _30445_parts) {
	jule::Slice<jule::Ptr<_1dd05c765_VarDecl>> _30517_keys = nullptr;
	{
		auto &expr = _30445_parts;
		auto it = expr.begin();
		_iter_begin_1a7c3e2d4:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1dd229ca6_tokens = *it;
			{
				_30517_keys = jule::alloc_for_append(_30517_keys,1);_30517_keys.__push((*this)._method_build_range_kind_key(_1dd229ca6_tokens));
			}
			_iter_next_1a7c3e2d4:;
			++it;
			goto _iter_begin_1a7c3e2d4;
		}
		_iter_end_1a7c3e2d4:;
	}
	return _30517_keys;
}



inline void _1dd229ca6_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ptr<_1dd05c765_RangeKind>& _31251_rng,jule::Slice<_1dd05db0c_Token>& _31273_tokens) {
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _31317_key_tokens = (*this)._method_get_range_kind_keys_tokens(_31273_tokens);
	if (_31317_key_tokens.len() == 0LL) {
		return;
	}
	if (_31317_key_tokens.len() > 2LL) {
		(*this)._method_push_err((*(_31251_rng))._field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ptr<_1dd05c765_VarDecl>> _32017_keys = (*this)._method_build_range_kind_keys(_31317_key_tokens);
	(*(_31251_rng))._field_key_a=_32017_keys[0LL];
	if (_32017_keys.len() > 1LL) {
		(*(_31251_rng))._field_key_b=_32017_keys[1LL];
	}
}



inline void _1dd229ca6_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ptr<_1dd05c765_RangeKind>& _32754_rng,jule::Slice<_1dd05db0c_Token>& _32776_tokens) {
	jule::Int _32817_i = 0LL;
	jule::Slice<_1dd05db0c_Token> _32917_rang = _1ddb89cdc_range(_32817_i,jule::Str("(", 1),jule::Str(")", 1),_32776_tokens);
	if (_32817_i < static_cast<jule::Int>(_32776_tokens.len())) {
		(*this)._method_push_err((*(_32754_rng))._field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_32754_rng,_32917_rang);
}



inline void _1dd229ca6_ScopeParser::_method_setup_range_kind_keys(jule::Ptr<_1dd05c765_RangeKind>& _33645_rng,jule::Slice<_1dd05db0c_Token>& _33667_tokens) {
	if (_33667_tokens[0LL]._field_id == static_cast<jule::Uint>(3LLU)) {
		if (_33667_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_33667_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_33645_rng,_33667_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_33645_rng,_33667_tokens);
}



inline jule::Ptr<_1dd05c765_RangeKind> _1dd229ca6_ScopeParser::_method_build_range_iter_kind(jule::Slice<_1dd05db0c_Token>& _34845_var_tokens,jule::Slice<_1dd05db0c_Token>& _34914_expr_tokens,_1dd05db0c_Token& _34941_in_token) {
	jule::Ptr<_1dd05c765_RangeKind> _35017_rng = jule::new_struct<_1dd05c765_RangeKind>(new( std::nothrow ) _1dd05c765_RangeKind(_34941_in_token,jule::Ptr<_1dd05c765_Expr>(),jule::Ptr<_1dd05c765_VarDecl>(),jule::Ptr<_1dd05c765_VarDecl>()));
	if (_34914_expr_tokens.len() == 0LL) {
		(*this)._method_push_err((*(_35017_rng))._field_in_token,jule::Str("expression missing", 18));
		return _35017_rng;
	}
	(*(_35017_rng))._field_expr=(*((*this)._field_p))._method_build_expr(_34914_expr_tokens);
	if (_34845_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_35017_rng,_34845_var_tokens);
	}
	return _35017_rng;
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_common_iter_kind(jule::Slice<_1dd05db0c_Token>& _36446_tokens,_1dd05db0c_Token& _36464_err_tok) {
	jule::Int _36517_brace_n = 0LL;
	{
		auto &expr = _36446_tokens;
		auto it = expr.begin();
		_iter_begin_1a7c4d59b:;
		if (it != expr.end()) {
			jule::Int _1dd229ca6_i = it - expr.begin();
			_1dd05db0c_Token _1dd229ca6_tok = *it;
			{
				if (_1dd229ca6_tok._field_id == static_cast<jule::Uint>(3LLU)) {
					{
						auto &_match_expr{ _1dd229ca6_tok._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a7c4eb1e:;
							{
								(_36517_brace_n)++;
								goto _iter_next_1a7c4d59b;
							}
						}
						else {
							_case_begin_1a7c4e327:;
							{
								(_36517_brace_n)--;
							}
						}
						_match_end_1a7c4e39e:;
					}
				}
				if (_36517_brace_n != 0LL) {
					goto _iter_next_1a7c4d59b;
				}
				{
					auto &_match_expr{ _1dd229ca6_tok._field_id };
					
					if (_match_expr == static_cast<jule::Uint>(15LLU)) {
						_case_begin_1a7c5046b:;
						{
							jule::Slice<_1dd05db0c_Token> _38425_decl_tokens = _36446_tokens.slice(0LL,_1dd229ca6_i);
							jule::Slice<_1dd05db0c_Token> _38525_expr_tokens = _36446_tokens.slice(_1dd229ca6_i + 1LL);
							return jule::Any((*this)._method_build_range_iter_kind(_38425_decl_tokens,_38525_expr_tokens,_1dd229ca6_tok));
						}
					}
					_match_end_1a7c502b2:;
				}
			}
			_iter_next_1a7c4d59b:;
			++it;
			_1dd229ca6_i++;
			goto _iter_begin_1a7c4d59b;
		}
		_iter_end_1a7c4d59b:;
	}
	return jule::Any((*this)._method_build_while_iter_kind(_36446_tokens));
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_common_iter(jule::Slice<_1dd05db0c_Token> _39240_tokens) {
	jule::Ptr<_1dd05c765_Iter> _39317_it = jule::new_struct<_1dd05c765_Iter>(new( std::nothrow ) _1dd05c765_Iter(_39240_tokens[0LL],jule::Any(),jule::Ptr<_1dd05c765_ScopeTree>()));
	_39240_tokens=_39240_tokens.slice(1LL);
	if (_39240_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err((*(_39317_it))._field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	jule::Slice<_1dd05db0c_Token> _40317_expr_tokens = _1ddb659bb_get_block_expr(_39240_tokens);
	if (_40317_expr_tokens.len() > 0LL) {
		(*(_39317_it))._field_kind=(*this)._method_build_common_iter_kind(_40317_expr_tokens,(*(_39317_it))._field_token);
	}
	jule::Int _40717_i = _40317_expr_tokens.len();
	jule::Slice<_1dd05db0c_Token> _40817_scope_tokens = _1ddb89cdc_range(_40717_i,jule::Str("{", 1),jule::Str("}", 1),_39240_tokens);
	if (_40817_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err((*(_39317_it))._field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_40717_i < static_cast<jule::Int>(_39240_tokens.len())) {
		(*this)._method_push_err(_39240_tokens[_40717_i],jule::Str("invalid syntax", 14));
	}
	(*(_39317_it))._field_scope=(*this)._method_build_scope(_40817_scope_tokens);
	return jule::Any(_39317_it);
}



inline jule::Any _1dd229ca6_ScopeParser::_method_buid_iter_st(jule::Ptr<_1dd229ca6_Stmt>& _42236_st) {
	if ((*(_42236_st))._field_terminated) {
		return (*this)._method_build_while_next_iter(_42236_st);
	}
	return (*this)._method_build_common_iter((*(_42236_st))._field_tokens);
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_break_st(jule::Slice<_1dd05db0c_Token>& _42938_tokens) {
	jule::Ptr<_1dd05c765_BreakSt> _43017_brk = jule::new_struct<_1dd05c765_BreakSt>(new( std::nothrow ) _1dd05c765_BreakSt(_42938_tokens[0LL],_1dd05db0c_Token()));
	if (_42938_tokens.len() > 1LL) {
		if (_42938_tokens[1LL]._field_id != static_cast<jule::Uint>(2LLU)) {
			(*this)._method_push_err(_42938_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			(*(_43017_brk))._field_label=_42938_tokens[1LL];
			if (_42938_tokens.len() > 2LL) {
				(*this)._method_push_err(_42938_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_43017_brk);
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_cont_st(jule::Slice<_1dd05db0c_Token>& _44737_tokens) {
	jule::Ptr<_1dd05c765_ContSt> _44817_cont = jule::new_struct<_1dd05c765_ContSt>(new( std::nothrow ) _1dd05c765_ContSt(_44737_tokens[0LL],_1dd05db0c_Token()));
	if (_44737_tokens.len() > 1LL) {
		if (_44737_tokens[1LL]._field_id != static_cast<jule::Uint>(2LLU)) {
			(*this)._method_push_err(_44737_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			(*(_44817_cont))._field_label=_44737_tokens[1LL];
			if (_44737_tokens.len() > 2LL) {
				(*this)._method_push_err(_44737_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44817_cont);
}



inline jule::Ptr<_1dd05c765_If> _1dd229ca6_ScopeParser::_method_build_if(jule::Slice<_1dd05db0c_Token>& _46532_tokens) {
	jule::Ptr<_1dd05c765_If> _46617_model = jule::new_struct<_1dd05c765_If>(new( std::nothrow ) _1dd05c765_If(_46532_tokens[0LL],jule::Ptr<_1dd05c765_Expr>(),jule::Ptr<_1dd05c765_ScopeTree>()));
	_46532_tokens=_46532_tokens.slice(1LL);
	jule::Slice<_1dd05db0c_Token> _47017_expr_tokens = _1ddb659bb_get_block_expr(_46532_tokens);
	jule::Int _47117_i = 0LL;
	if (_47017_expr_tokens.len() == 0LL) {
		(*this)._method_push_err((*(_46617_model))._field_token,jule::Str("expression missing", 18));
	} else {
		_47117_i=static_cast<jule::Int>(_47017_expr_tokens.len());
	}
	jule::Slice<_1dd05db0c_Token> _47717_scope_tokens = _1ddb89cdc_range(_47117_i,jule::Str("{", 1),jule::Str("}", 1),_46532_tokens);
	if (_47717_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err((*(_46617_model))._field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_47117_i < static_cast<jule::Int>(_46532_tokens.len())) {
		if (_46532_tokens[_47117_i]._field_id == static_cast<jule::Uint>(17LLU)) {
			_46532_tokens=_46532_tokens.slice(_47117_i);
		} else {
			(*this)._method_push_err(_46532_tokens[_47117_i],jule::Str("invalid syntax", 14));
			_46532_tokens=nullptr;
		}
	}
	(*(_46617_model))._field_expr=(*((*this)._field_p))._method_build_expr(_47017_expr_tokens);
	(*(_46617_model))._field_scope=(*this)._method_build_scope(_47717_scope_tokens);
	return _46617_model;
}



inline jule::Ptr<_1dd05c765_Else> _1dd229ca6_ScopeParser::_method_build_else(jule::Slice<_1dd05db0c_Token>& _49734_tokens) {
	jule::Ptr<_1dd05c765_Else> _49817_els = jule::new_struct<_1dd05c765_Else>(new( std::nothrow ) _1dd05c765_Else(_49734_tokens[0LL],jule::Ptr<_1dd05c765_ScopeTree>()));
	_49734_tokens=_49734_tokens.slice(1LL);
	jule::Int _50217_i = 0LL;
	jule::Slice<_1dd05db0c_Token> _50317_scope_tokens = _1ddb89cdc_range(_50217_i,jule::Str("{", 1),jule::Str("}", 1),_49734_tokens);
	if (_50317_scope_tokens == nullptr) {
		if (_50217_i < static_cast<jule::Int>(_49734_tokens.len())) {
			(*this)._method_push_err((*(_49817_els))._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err((*(_49817_els))._field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	if (_50217_i < static_cast<jule::Int>(_49734_tokens.len())) {
		(*this)._method_push_err(_49734_tokens[_50217_i],jule::Str("invalid syntax", 14));
	}
	(*(_49817_els))._field_scope=(*this)._method_build_scope(_50317_scope_tokens);
	return _49817_els;
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_if_else_chain(jule::Slice<_1dd05db0c_Token> _52142_tokens) {
	jule::Ptr<_1dd05c765_Conditional> _52217_chain = jule::new_struct<_1dd05c765_Conditional>(new( std::nothrow ) _1dd05c765_Conditional((*this)._method_build_if(_52142_tokens),jule::Slice<jule::Ptr<_1dd05c765_If>>(),jule::Ptr<_1dd05c765_Else>()));
	if ((*(_52217_chain))._field_head == nullptr) {
		return jule::Any(nullptr);
	}
	while (_52142_tokens.len() != 0LL) {
		{
			if (_52142_tokens[0LL]._field_id != static_cast<jule::Uint>(17LLU)) {
				goto _iter_end_1a7c71aec;
			}
			if ((_52142_tokens.len() > 1LL) && (_52142_tokens[1LL]._field_id == static_cast<jule::Uint>(16LLU))) {
				_52142_tokens=_52142_tokens.slice(1LL);
				jule::Ptr<_1dd05c765_If> _53425_elif = (*this)._method_build_if(_52142_tokens);
				(*(_52217_chain))._field_tail = jule::alloc_for_append((*(_52217_chain))._field_tail,1);(*(_52217_chain))._field_tail.__push(_53425_elif);
				goto _iter_next_1a7c71aec;
			}
			(*(_52217_chain))._field_default=(*this)._method_build_else(_52142_tokens);
			goto _iter_end_1a7c71aec;
		}
	_iter_next_1a7c71aec:;
	}
	_iter_end_1a7c71aec:;
	return jule::Any(_52217_chain);
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_comment_st(_1dd05db0c_Token& _54436_token) {
	return jule::Any(_1ddb89cdc_build_comment(_54436_token));
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_co_call_st(jule::Slice<_1dd05db0c_Token> _54839_tokens) {
	jule::Ptr<_1dd05c765_CoExpr> _54917_c = jule::new_struct<_1dd05c765_CoExpr>(new( std::nothrow ) _1dd05c765_CoExpr(_54839_tokens[0LL],jule::Ptr<_1dd05c765_Expr>()));
	_54839_tokens=_54839_tokens.slice(1LL);
	(*(_54917_c))._field_expr=(*((*this)._field_p))._method_build_expr(_54839_tokens);
	return jule::Any(_54917_c);
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_goto_st(jule::Slice<_1dd05db0c_Token>& _55737_tokens) {
	jule::Ptr<_1dd05c765_GotoSt> _55817_gt = jule::new_struct<_1dd05c765_GotoSt>(new( std::nothrow ) _1dd05c765_GotoSt(_55737_tokens[0LL],_1dd05db0c_Token()));
	if (_55737_tokens.len() == 1LL) {
		(*this)._method_push_err((*(_55817_gt))._field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_55737_tokens.len() > 2LL) {
		(*this)._method_push_err(_55737_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_1dd05db0c_Token _56717_ident_token = _55737_tokens[1LL];
	if (_56717_ident_token._field_id != static_cast<jule::Uint>(2LLU)) {
		(*this)._method_push_err(_56717_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_55817_gt);
	}
	(*(_55817_gt))._field_label=_56717_ident_token;
	return jule::Any(_55817_gt);
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_fall_st(jule::Slice<_1dd05db0c_Token>& _57737_tokens) {
	jule::Ptr<_1dd05c765_FallSt> _57817_fll = jule::new_struct<_1dd05c765_FallSt>(new( std::nothrow ) _1dd05c765_FallSt(_57737_tokens[0LL]));
	if (_57737_tokens.len() > 1LL) {
		(*this)._method_push_err(_57737_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_57817_fll);
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_type_alias_st(jule::Slice<_1dd05db0c_Token>& _58743_tokens) {
	jule::Ptr<_1dd05c765_TypeAliasDecl> _58817_tad = (*((*this)._field_p))._method_build_type_alias_decl(_58743_tokens);
	(*(_58817_tad))._field_scope=(*this)._field_s;
	return jule::Any(_58817_tad);
}



inline void _1dd229ca6_ScopeParser::_method_push_case_expr(jule::Slice<_1dd05db0c_Token> _59337_tokens,_1dd05db0c_Token _59358_token,jule::Bool _5949_type_match,jule::Slice<jule::Ptr<_1dd05c765_Expr>>& _59432_exprs) {
	if (_59337_tokens.len() == 0LL) {
		return;
	}
	if (_5949_type_match) {
		jule::Int _60021_i = 0LL;
		jule::Ptr<_1dd05c765_TypeDecl> _60122_t;
		jule::Bool _60125_ok;
		std::tie(_60122_t,_60125_ok) = (*((*this)._field_p))._method_build_type(_59337_tokens,(&(_60021_i)),true);
		if (_60125_ok) {
			_59432_exprs = jule::alloc_for_append(_59432_exprs,1);_59432_exprs.__push(jule::new_struct<_1dd05c765_Expr>(new( std::nothrow ) _1dd05c765_Expr(_59358_token,jule::Any(_60122_t))));
			if (_60021_i < static_cast<jule::Int>(_59337_tokens.len())) {
				(*this)._method_push_err(_59337_tokens[_60021_i],jule::Str("invalid syntax", 14));
			}
		}
		return;
	}
	_59432_exprs = jule::alloc_for_append(_59432_exprs,1);_59432_exprs.__push((*((*this)._field_p))._method_build_expr(_59337_tokens));
}



inline jule::Slice<jule::Ptr<_1dd05c765_Expr>> _1dd229ca6_ScopeParser::_method_build_case_exprs(jule::Slice<_1dd05db0c_Token>& _61640_tokens,jule::Bool _61657_type_match) {
	jule::Slice<jule::Ptr<_1dd05c765_Expr>> _61717_exprs = jule::Slice<jule::Ptr<_1dd05c765_Expr>>::alloc(0LL,1LL);
	jule::Int _61917_brace_n = 0LL;
	jule::Int _62017_j = 0LL;
	{
		auto &expr = _61640_tokens;
		auto it = expr.begin();
		_iter_begin_1a7c8753b:;
		if (it != expr.end()) {
			jule::Int _1dd229ca6_i = it - expr.begin();
			_1dd05db0c_Token _1dd229ca6_tok = *it;
			{
				if (_1dd229ca6_tok._field_id == static_cast<jule::Uint>(3LLU)) {
					{
						auto &_match_expr{ _1dd229ca6_tok._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1a7c88a15:;
							{
								(_61917_brace_n)++;
							}
						}
						else {
							_case_begin_1a7c8821d:;
							{
								(_61917_brace_n)--;
							}
						}
						_match_end_1a7c88295:;
					}
					goto _iter_next_1a7c8753b;
				} else if (_61917_brace_n != 0LL) {
					goto _iter_next_1a7c8753b;
				}
				{
					
					if ((_1dd229ca6_tok._field_id == static_cast<jule::Uint>(7LLU)) && (_1dd229ca6_tok._field_kind == jule::Str("|", 1))) {
						_case_begin_1a7c88d12:;
						{
							jule::Slice<_1dd05db0c_Token> _63821_expr_tokens = _61640_tokens.slice(_62017_j,_1dd229ca6_i);
							if (_63821_expr_tokens.len() == 0LL) {
								(*this)._method_push_err(_1dd229ca6_tok,jule::Str("expression missing", 18));
							} else {
								(*this)._method_push_case_expr(_61640_tokens.slice(_62017_j,_1dd229ca6_i),_1dd229ca6_tok,_61657_type_match,_61717_exprs);
							}
							_62017_j=static_cast<jule::Int>(_1dd229ca6_i + 1LL);
						}
					}
					else if (_1dd229ca6_tok._field_id == static_cast<jule::Uint>(11LLU)) {
						_case_begin_1a7c892da:;
						{
							(*this)._method_push_case_expr(_61640_tokens.slice(_62017_j,_1dd229ca6_i),_1dd229ca6_tok,_61657_type_match,_61717_exprs);
							_61640_tokens=_61640_tokens.slice(_1dd229ca6_i + 1LL);
							return _61717_exprs;
						}
					}
					_match_end_1a7c8862a:;
				}
			}
			_iter_next_1a7c8753b:;
			++it;
			_1dd229ca6_i++;
			goto _iter_begin_1a7c8753b;
		}
		_iter_end_1a7c8753b:;
	}
	(*this)._method_push_err(_61640_tokens[0LL],jule::Str("invalid syntax", 14));
	_61640_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1dd05c765_ScopeTree> _1dd229ca6_ScopeParser::_method_build_case_scope(jule::Slice<_1dd05db0c_Token>& _65740_tokens) {
	jule::Int _65817_n = 0LL;
	for (;;) {
		{
			jule::Int _66021_i = 0LL;
			jule::Slice<_1dd05db0c_Token> _66122_next;
			std::tie(_66122_next,std::ignore) = _1dd229ca6_skip_st(_66021_i,_65740_tokens.slice(_65817_n));
			if (_66122_next.len() == 0LL) {
				goto _iter_end_1a7c8deb0;
			}
			_1dd05db0c_Token _66517_tok = _66122_next[0LL];
			if ((_66517_tok._field_id != static_cast<jule::Uint>(7LLU)) || (_66517_tok._field_kind != jule::Str("|", 1))) {
				_65817_n+=_66021_i;
				goto _iter_next_1a7c8deb0;
			}
			jule::Slice<_1dd05db0c_Token> _67021_scope_tokens = _65740_tokens.slice(0LL,_65817_n);
			jule::Ptr<_1dd05c765_ScopeTree> _67121_scope = (*this)._method_build_scope(_67021_scope_tokens);
			_65740_tokens=_65740_tokens.slice(_65817_n);
			return _67121_scope;
		}
	_iter_next_1a7c8deb0:;
	}
	_iter_end_1a7c8deb0:;
	jule::Ptr<_1dd05c765_ScopeTree> _67517_scope = (*this)._method_build_scope(_65740_tokens);
	_65740_tokens=nullptr;
	return _67517_scope;
}



inline std::tuple<jule::Ptr<_1dd05c765_Case>,jule::Bool> _1dd229ca6_ScopeParser::_method_build_case(jule::Slice<_1dd05db0c_Token>& _68034_tokens,jule::Bool _68051_type_match) {
	jule::Ptr<_1dd05c765_Case> _68117_c = jule::new_struct<_1dd05c765_Case>(new( std::nothrow ) _1dd05c765_Case(_68034_tokens[0LL],jule::Ptr<_1dd05c765_ScopeTree>(),jule::Slice<jule::Ptr<_1dd05c765_Expr>>()));
	_68034_tokens=_68034_tokens.slice(1LL);
	(*(_68117_c))._field_exprs=(*this)._method_build_case_exprs(_68034_tokens,_68051_type_match);
	(*(_68117_c))._field_scope=(*this)._method_build_case_scope(_68034_tokens);
	jule::Bool _68713_is_default = (*(_68117_c))._field_exprs.len() == 0LL;
	return std::make_tuple(_68117_c,_68713_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1dd05c765_Case>>,jule::Ptr<_1dd05c765_Else>> _1dd229ca6_ScopeParser::_method_build_cases(jule::Slice<_1dd05db0c_Token> _69134_tokens,jule::Bool _69151_type_match) {
	jule::Slice<jule::Ptr<_1dd05c765_Case>> _69217_cases = nullptr;
	jule::Ptr<_1dd05c765_Else> _69317_def = nullptr;
	jule::Bool _69417_def_not_last = false;
	while (_69134_tokens.len() > 0LL) {
		{
			_1dd05db0c_Token _69621_tok = _69134_tokens[0LL];
			if (_69621_tok._field_id == static_cast<jule::Uint>(18LLU)) {
				_69134_tokens=_69134_tokens.slice(1LL);
				goto _iter_next_1a7c97095;
			}
			if ((_69621_tok._field_id != static_cast<jule::Uint>(7LLU)) || (_69621_tok._field_kind != jule::Str("|", 1))) {
				(*this)._method_push_err(_69621_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1a7c97095;
			}
			jule::Ptr<_1dd05c765_Case> _70722_c;
			jule::Bool _70725_is_default;
			std::tie(_70722_c,_70725_is_default) = (*this)._method_build_case(_69134_tokens,_69151_type_match);
			if (_70725_is_default) {
				(*(_70722_c))._field_token=_69621_tok;
				if (_69317_def == nullptr) {
					_69317_def=jule::new_struct<_1dd05c765_Else>(new( std::nothrow ) _1dd05c765_Else((*(_70722_c))._field_token,(*(_70722_c))._field_scope));
				} else {
					(*this)._method_push_err(_69621_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_69417_def_not_last=_69417_def_not_last || (_69317_def != nullptr);
				_69217_cases = jule::alloc_for_append(_69217_cases,1);_69217_cases.__push(_70722_c);
			}
		}
	_iter_next_1a7c97095:;
	}
	_iter_end_1a7c97095:;
	if (_69417_def_not_last) {
		(*this)._method_push_err((*(_69317_def))._field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_69217_cases,_69317_def);
}



inline jule::Ptr<_1dd05c765_MatchCase> _1dd229ca6_ScopeParser::_method_build_match_case(jule::Slice<_1dd05db0c_Token> _73139_tokens) {
	jule::Ptr<_1dd05c765_MatchCase> _73217_m = jule::new_struct<_1dd05c765_MatchCase>(new( std::nothrow ) _1dd05c765_MatchCase(_73139_tokens[0LL],jule::Bool(),jule::Ptr<_1dd05c765_Expr>(),jule::Slice<jule::Ptr<_1dd05c765_Case>>(),jule::Ptr<_1dd05c765_Else>()));
	_73139_tokens=_73139_tokens.slice(1LL);
	if ((_73139_tokens.len() > 0LL) && (_73139_tokens[0LL]._field_id == static_cast<jule::Uint>(10LLU))) {
		(*(_73217_m))._field_type_match=true;
		_73139_tokens=_73139_tokens.slice(1LL);
	}
	jule::Slice<_1dd05db0c_Token> _74217_expr_tokens = _1ddb659bb_get_block_expr(_73139_tokens);
	if (_74217_expr_tokens.len() > 0LL) {
		(*(_73217_m))._field_expr=(*((*this)._field_p))._method_build_expr(_74217_expr_tokens);
	} else if ((*(_73217_m))._field_type_match) {
		(*this)._method_push_err((*(_73217_m))._field_token,jule::Str("expression missing", 18));
	}
	jule::Int _74917_i = _74217_expr_tokens.len();
	jule::Slice<_1dd05db0c_Token> _75017_block_toks = _1ddb89cdc_range(_74917_i,jule::Str("{", 1),jule::Str("}", 1),_73139_tokens);
	if (_75017_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err((*(_73217_m))._field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie((*(_73217_m))._field_cases,(*(_73217_m))._field_default) = (*this)._method_build_cases(_75017_block_toks,(*(_73217_m))._field_type_match);
	return _73217_m;
}



inline jule::Ptr<_1dd05c765_ScopeTree> _1dd229ca6_ScopeParser::_method_build_scope_st(jule::Slice<_1dd05db0c_Token> _76237_tokens) {
	jule::Bool _76317_is_unsafe = false;
	jule::Bool _76417_is_deferred = false;
	_1dd05db0c_Token _76517_token = _76237_tokens[0LL];
	if (_76517_token._field_id == static_cast<jule::Uint>(35LLU)) {
		_76317_is_unsafe=true;
		_76237_tokens=_76237_tokens.slice(1LL);
		if (_76237_tokens.len() == 0LL) {
			(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		_76517_token=_76237_tokens[0LL];
		if (_76517_token._field_id == static_cast<jule::Uint>(37LLU)) {
			_76417_is_deferred=true;
			_76237_tokens=_76237_tokens.slice(1LL);
			if (_76237_tokens.len() == 0LL) {
				(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
	} else if (_76517_token._field_id == static_cast<jule::Uint>(37LLU)) {
		_76417_is_deferred=true;
		_76237_tokens=_76237_tokens.slice(1LL);
		if (_76237_tokens.len() == 0LL) {
			(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
	}
	jule::Int _79117_i = 0LL;
	jule::Slice<_1dd05db0c_Token> _79217_scope_tokens = _1ddb89cdc_range(_79117_i,jule::Str("{", 1),jule::Str("}", 1),_76237_tokens);
	if (_79217_scope_tokens == nullptr) {
		(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if (_79117_i < static_cast<jule::Int>(_76237_tokens.len())) {
		(*this)._method_push_err(_76237_tokens[_79117_i],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_1dd05c765_ScopeTree> _79917_scope = (*this)._method_build_scope(_79217_scope_tokens);
	(*(_79917_scope))._field_unsafety=_76317_is_unsafe;
	(*(_79917_scope))._field_deferred=_76417_is_deferred;
	return _79917_scope;
}



inline jule::Ptr<_1dd05c765_LabelSt> _1dd229ca6_ScopeParser::_method_build_label_st(jule::Slice<_1dd05db0c_Token>& _80538_tokens) {
	jule::Ptr<_1dd05c765_LabelSt> _80617_lbl = jule::new_struct<_1dd05c765_LabelSt>(new( std::nothrow ) _1dd05c765_LabelSt(_80538_tokens[0LL],_80538_tokens[0LL]._field_kind));
	if (_80538_tokens.len() > 2LL) {
		_80538_tokens=_80538_tokens.slice(2LL);
		(*this)._method_insert_as_next(_80538_tokens);
	}
	return _80617_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1dd229ca6_ScopeParser::_method_build_id_st(jule::Slice<_1dd05db0c_Token>& _82035_tokens) {
	jule::Bool _82064_ok = jule::Bool();
	if (_82035_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_82064_ok);
	}
	_1dd05db0c_Token _82517_token = _82035_tokens[1LL];
	{
		auto &_match_expr{ _82517_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(11LLU)) {
			_case_begin_1a7cb1ed3:;
			{
				_82064_ok = true;
				return std::make_tuple(jule::Any((*this)._method_build_label_st(_82035_tokens)),_82064_ok);
			}
		}
		_match_end_1a7cb1554:;
	}
	return std::make_tuple(jule::Any(),_82064_ok);
}



inline jule::Ptr<_1ddb61a2d_AssignInfo> _1dd229ca6_ScopeParser::_method_build_assign_info(jule::Slice<_1dd05db0c_Token>& _83441_tokens) {
	jule::Ptr<_1ddb61a2d_AssignInfo> _83517_info = jule::new_struct<_1ddb61a2d_AssignInfo>(new( std::nothrow ) _1ddb61a2d_AssignInfo(jule::Slice<_1dd05db0c_Token>(),jule::Slice<_1dd05db0c_Token>(),_1dd05db0c_Token(),true));
	jule::Int _83817_brace_n = 0LL;
	{
		auto &expr = _83441_tokens;
		auto it = expr.begin();
		_iter_begin_1a7cb42e3:;
		if (it != expr.end()) {
			jule::Int _1dd229ca6_i = it - expr.begin();
			_1dd05db0c_Token _1dd229ca6_token = *it;
			{
				if (_1dd229ca6_token._field_id == static_cast<jule::Uint>(3LLU)) {
					{
						auto &_match_expr{ _1dd229ca6_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a7cb58aa:;
							{
								(_83817_brace_n)++;
							}
						}
						else {
							_case_begin_1a7cb50b3:;
							{
								(_83817_brace_n)--;
							}
						}
						_match_end_1a7cb513a:;
					}
				}
				{
					
					if (_83817_brace_n > 0LL) {
						_case_begin_1a7cb5b74:;
						{
							goto _iter_next_1a7cb42e3;
						}
					}
					else if (_1dd229ca6_token._field_id != static_cast<jule::Uint>(7LLU)) {
						_case_begin_1a7cb5bda:;
						{
							goto _iter_next_1a7cb42e3;
						}
					}
					else if ((!(_1dd05db0c_is_assign_op(_1dd229ca6_token._field_kind)))) {
						_case_begin_1a7cb5c51:;
						{
							goto _iter_next_1a7cb42e3;
						}
					}
					_match_end_1a7cb54d1:;
				}
				(*(_83517_info))._field_l=_83441_tokens.slice(0LL,_1dd229ca6_i);
				if ((*(_83517_info))._field_l.len() == 0LL) {
					(*(_83517_info))._field_ok=false;
				}
				(*(_83517_info))._field_setter=_1dd229ca6_token;
				if ((_1dd229ca6_i + 1LL) >= static_cast<jule::Int>(_83441_tokens.len())) {
					(*(_83517_info))._field_r=nullptr;
					(*(_83517_info))._field_ok=_1dd05db0c_is_postfix_op((*(_83517_info))._field_setter._field_kind);
					goto _iter_end_1a7cb42e3;
				}
				(*(_83517_info))._field_r=_83441_tokens.slice(_1dd229ca6_i + 1LL);
				if (_1dd05db0c_is_postfix_op((*(_83517_info))._field_setter._field_kind)) {
					if ((*(_83517_info))._field_r.len() > 0LL) {
						(*this)._method_push_err((*(_83517_info))._field_r[0LL],jule::Str("invalid syntax", 14));
						(*(_83517_info))._field_r=nullptr;
					}
				}
				goto _iter_end_1a7cb42e3;
			}
			_iter_next_1a7cb42e3:;
			++it;
			_1dd229ca6_i++;
			goto _iter_begin_1a7cb42e3;
		}
		_iter_end_1a7cb42e3:;
	}
	return _83517_info;
}



inline jule::Ptr<_1dd05c765_AssignLeft> _1dd229ca6_ScopeParser::_method_build_assign_l(jule::Slice<_1dd05db0c_Token>& _88138_tokens) {
	jule::Ptr<_1dd05c765_AssignLeft> _88217_l = jule::new_struct<_1dd05c765_AssignLeft>(new( std::nothrow ) _1dd05c765_AssignLeft(_88138_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ptr<_1dd05c765_Expr>()));
	if (_88138_tokens[0LL]._field_id == static_cast<jule::Uint>(2LLU)) {
		(*(_88217_l))._field_ident=(*(_88217_l))._field_token._field_kind;
	}
	(*(_88217_l))._field_expr=(*((*this)._field_p))._method_build_expr(_88138_tokens);
	return _88217_l;
}



inline jule::Slice<jule::Ptr<_1dd05c765_AssignLeft>> _1dd229ca6_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_1dd05db0c_Token>>& _89439_parts) {
	jule::Slice<jule::Ptr<_1dd05c765_AssignLeft>> _89517_lefts = nullptr;
	{
		auto &expr = _89439_parts;
		auto it = expr.begin();
		_iter_begin_1a7cbe551:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1dd229ca6_part = *it;
			{
				jule::Ptr<_1dd05c765_AssignLeft> _89721_l = (*this)._method_build_assign_l(_1dd229ca6_part);
				_89517_lefts = jule::alloc_for_append(_89517_lefts,1);_89517_lefts.__push(_89721_l);
			}
			_iter_next_1a7cbe551:;
			++it;
			goto _iter_begin_1a7cbe551;
		}
		_iter_end_1a7cbe551:;
	}
	return _89517_lefts;
}



inline std::tuple<jule::Ptr<_1dd05c765_AssignSt>,jule::Bool> _1dd229ca6_ScopeParser::_method_build_plain_assign(jule::Slice<_1dd05db0c_Token>& _90442_tokens) {
	jule::Ptr<_1ddb61a2d_AssignInfo> _90517_info = (*this)._method_build_assign_info(_90442_tokens);
	if ((!((*(_90517_info))._field_ok))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1dd05c765_AssignSt> _91017_assign = jule::new_struct<_1dd05c765_AssignSt>(new( std::nothrow ) _1dd05c765_AssignSt(jule::Bool(),(*(_90517_info))._field_setter,jule::Slice<jule::Ptr<_1dd05c765_AssignLeft>>(),jule::Ptr<_1dd05c765_Expr>()));
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _91418_parts;
	jule::Slice<_1db678789_Log> _91425_errs;
	std::tie(_91418_parts,_91425_errs) = _1ddb89cdc_parts((*(_90517_info))._field_l,static_cast<jule::Uint>(8LLU),true);
	if (_91425_errs.len() > 0LL) {
		(*((*this)._field_p))._field_errors=jule::append((*((*this)._field_p))._field_errors,_91425_errs);
		return std::make_tuple(nullptr,false);
	}
	(*(_91017_assign))._field_left=(*this)._method_build_assign_ls(_91418_parts);
	if ((*(_90517_info))._field_r != nullptr) {
		(*(_91017_assign))._field_right=(*((*this)._field_p))._method_build_expr((*(_90517_info))._field_r);
	}
	return std::make_tuple(_91017_assign,true);
}



inline std::tuple<jule::Ptr<_1dd05c765_AssignSt>,jule::Bool> _1dd229ca6_ScopeParser::_method_build_decl_assign(jule::Slice<_1dd05db0c_Token> _92840_tokens) {
	if (_92840_tokens.len() < 1LL) {
		return std::make_tuple(nullptr,false);
	}
	_92840_tokens=_92840_tokens.slice(1LL);
	_1dd05db0c_Token _93417_token = _92840_tokens[0LL];
	if ((_93417_token._field_id != static_cast<jule::Uint>(3LLU)) || (_93417_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1dd05c765_AssignSt> _93917_assign = jule::new_struct<_1dd05c765_AssignSt>(new( std::nothrow ) _1dd05c765_AssignSt(true,_1dd05db0c_Token(),jule::Slice<jule::Ptr<_1dd05c765_AssignLeft>>(),jule::Ptr<_1dd05c765_Expr>()));
	jule::Int _94317_i = 0LL;
	jule::Slice<_1dd05db0c_Token> _94417_rang = _1ddb89cdc_range(_94317_i,jule::Str("(", 1),jule::Str(")", 1),_92840_tokens);
	if (_94417_rang == nullptr) {
		(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if ((_94317_i + 1LL) < static_cast<jule::Int>(_92840_tokens.len())) {
		(*(_93917_assign))._field_setter=_92840_tokens[_94317_i];
		(_94317_i)++;
		jule::Slice<_1dd05db0c_Token> _95121_expr_tokens = _92840_tokens.slice(_94317_i);
		(*(_93917_assign))._field_right=(*((*this)._field_p))._method_build_expr(_95121_expr_tokens);
	}
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _95618_parts;
	jule::Slice<_1db678789_Log> _95625_errs;
	std::tie(_95618_parts,_95625_errs) = _1ddb89cdc_parts(_94417_rang,static_cast<jule::Uint>(8LLU),true);
	if (_95625_errs.len() > 0LL) {
		(*((*this)._field_p))._field_errors=jule::append((*((*this)._field_p))._field_errors,_95625_errs);
		return std::make_tuple(nullptr,false);
	}
	{
		auto &expr = _95618_parts;
		auto it = expr.begin();
		_iter_begin_1a7ccc73a:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1dd229ca6_part = *it;
			{
				jule::Bool _96321_is_mut = false;
				jule::Bool _96421_is_ref = false;
				_93417_token=_1dd229ca6_part[0LL];
				if (_93417_token._field_id == static_cast<jule::Uint>(36LLU)) {
					_96321_is_mut=true;
					_1dd229ca6_part=_1dd229ca6_part.slice(1LL);
					if (_1dd229ca6_part.len() == 0LL) {
						(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1a7ccc73a;
					}
				}
				if ((_1dd229ca6_part[0LL]._field_id == static_cast<jule::Uint>(7LLU)) && (_1dd229ca6_part[0LL]._field_kind == jule::Str("&", 1))) {
					_96421_is_ref=true;
					_1dd229ca6_part=_1dd229ca6_part.slice(1LL);
					if (_1dd229ca6_part.len() == 0LL) {
						(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1a7ccc73a;
					}
				}
				if (((_1dd229ca6_part[0LL]._field_id != static_cast<jule::Uint>(2LLU)) && (_1dd229ca6_part[0LL]._field_id != static_cast<jule::Uint>(3LLU))) && (_1dd229ca6_part[0LL]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1a7ccc73a;
				}
				jule::Ptr<_1dd05c765_AssignLeft> _99221_l = (*this)._method_build_assign_l(_1dd229ca6_part);
				(*(_99221_l))._field_mutable=_96321_is_mut;
				(*(_99221_l))._field_reference=_96421_is_ref;
				(*(_93917_assign))._field_left = jule::alloc_for_append((*(_93917_assign))._field_left,1);(*(_93917_assign))._field_left.__push(_99221_l);
			}
			_iter_next_1a7ccc73a:;
			++it;
			goto _iter_begin_1a7ccc73a;
		}
		_iter_end_1a7ccc73a:;
	}
	return std::make_tuple(_93917_assign,true);
}



inline std::tuple<jule::Ptr<_1dd05c765_AssignSt>,jule::Bool> _1dd229ca6_ScopeParser::_method_build_assign_st(jule::Slice<_1dd05db0c_Token>& _100139_tokens) {
	jule::Ptr<_1dd05c765_AssignSt> _100158_st = jule::Ptr<_1dd05c765_AssignSt>();
	jule::Bool _100173_ok = jule::Bool();
	if ((!(_1ddb61a2d_check_assign_tokens(_100139_tokens)))) {
		_100158_st = nullptr;
		_100173_ok = false;
		return std::make_tuple(_100158_st,_100173_ok);
	}
	{
		auto &_match_expr{ _100139_tokens[0LL]._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(34LLU)) {
			_case_begin_1a7cd7833:;
			{
				std::tie(_100158_st,_100173_ok) = (*this)._method_build_decl_assign(_100139_tokens);
			}
		}
		else {
			_case_begin_1a7cd6d2c:;
			{
				std::tie(_100158_st,_100173_ok) = (*this)._method_build_plain_assign(_100139_tokens);
			}
		}
		_match_end_1a7cd748c:;
	}
	return std::make_tuple(_100158_st,_100173_ok);
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_use_expr(jule::Slice<_1dd05db0c_Token>& _101438_tokens) {
	if (_101438_tokens.len() == 1LL) {
		(*this)._method_push_err(_101438_tokens[0LL],jule::Str("expression missing", 18));
		return jule::Any(nullptr);
	}
	jule::Ptr<_1dd05c765_UseExpr> _102017_ue = jule::new_struct<_1dd05c765_UseExpr>(new( std::nothrow ) _1dd05c765_UseExpr(_101438_tokens[0LL],jule::Ptr<_1dd05c765_Expr>()));
	_101438_tokens=_101438_tokens.slice(1LL);
	(*(_102017_ue))._field_expr=(*((*this)._field_p))._method_build_expr(_101438_tokens);
	return jule::Any(_102017_ue);
}



inline jule::Any _1dd229ca6_ScopeParser::_method_build_st(jule::Ptr<_1dd229ca6_Stmt>& _102932_st) {
	_1dd05db0c_Token _103017_token = (*(_102932_st))._field_tokens[0LL];
	if (_103017_token._field_id == static_cast<jule::Uint>(2LLU)) {
		jule::Any _103222_s;
		jule::Bool _103225_ok;
		std::tie(_103222_s,_103225_ok) = (*this)._method_build_id_st((*(_102932_st))._field_tokens);
		if (_103225_ok) {
			return _103222_s;
		}
	}
	jule::Ptr<_1dd05c765_AssignSt> _103818_s;
	jule::Bool _103821_ok;
	std::tie(_103818_s,_103821_ok) = (*this)._method_build_assign_st((*(_102932_st))._field_tokens);
	if (_103821_ok) {
		return jule::Any(_103818_s);
	}
	{
		auto &_match_expr{ _103017_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(19LLU)) {
			_case_begin_1a7ce5016:;
			{
				return (*this)._method_build_use_expr((*(_102932_st))._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(38LLU) || _match_expr == static_cast<jule::Uint>(9LLU) || _match_expr == static_cast<jule::Uint>(34LLU) || _match_expr == static_cast<jule::Uint>(36LLU)) {
			_case_begin_1a7ce383e:;
			{
				return (*this)._method_build_var_st((*(_102932_st))._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(4LLU)) {
			_case_begin_1a7ce4ae8:;
			{
				return (*this)._method_build_ret_st((*(_102932_st))._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(12LLU)) {
			_case_begin_1a7ce4b5e:;
			{
				return (*this)._method_buid_iter_st(_102932_st);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(13LLU)) {
			_case_begin_1a7ce47a7:;
			{
				return (*this)._method_build_break_st((*(_102932_st))._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(14LLU)) {
			_case_begin_1a7ce481d:;
			{
				return (*this)._method_build_cont_st((*(_102932_st))._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(16LLU)) {
			_case_begin_1a7ce4884:;
			{
				return (*this)._method_build_if_else_chain((*(_102932_st))._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(18LLU)) {
			_case_begin_1a7ce48ea:;
			{
				return (*this)._method_build_comment_st(_103017_token);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(26LLU)) {
			_case_begin_1a7ce4961:;
			{
				return (*this)._method_build_co_call_st((*(_102932_st))._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(22LLU)) {
			_case_begin_1a7ce50c1:;
			{
				return (*this)._method_build_goto_st((*(_102932_st))._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(32LLU)) {
			_case_begin_1a7ce5137:;
			{
				return (*this)._method_build_fall_st((*(_102932_st))._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(10LLU)) {
			_case_begin_1a7ce519d:;
			{
				return (*this)._method_build_type_alias_st((*(_102932_st))._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(27LLU)) {
			_case_begin_1a7ce5214:;
			{
				return jule::Any((*this)._method_build_match_case((*(_102932_st))._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(35LLU) || _match_expr == static_cast<jule::Uint>(37LLU)) {
			_case_begin_1a7ce527a:;
			{
				return jule::Any((*this)._method_build_scope_st((*(_102932_st))._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(3LLU)) {
			_case_begin_1a7ce52e1:;
			{
				if (_103017_token._field_kind == jule::Str("{", 1)) {
					return jule::Any((*this)._method_build_scope_st((*(_102932_st))._field_tokens));
				}
			}
		}
		else {
			_case_begin_1a7ce2ba1:;
			{
				jule::Ptr<_1dd05c765_Expr> _109921_expr = (*((*this)._field_p))._method_build_expr((*(_102932_st))._field_tokens);
				if (_109921_expr != nullptr) {
					return jule::Any(_109921_expr);
				}
			}
		}
		_match_end_1a7ce3d4a:;
	}
	(*this)._method_push_err(_103017_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _1dd229ca6_ScopeParser::_method_build(jule::Slice<_1dd05db0c_Token>& _110929_tokens,jule::Ptr<_1dd05c765_ScopeTree>& _110951_s) {
	if (_110951_s == nullptr) {
		return;
	}
	(*this)._field_stmts=_1dd229ca6_split_stmts(_110929_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_110951_s;
	while ((!((*this)._method_is_last_st())) && (!((*this)._method_finished()))) {
		{
			jule::Ptr<_1dd229ca6_Stmt> _111821_st = (*this)._method_next();
			jule::Any _111921_data = (*this)._method_build_st(_111821_st);
			if (_111921_data != jule::Any(nullptr)) {
				(*((*this)._field_s))._field_stmts = jule::alloc_for_append((*((*this)._field_s))._field_stmts,1);(*((*this)._field_s))._field_stmts.__push(_111921_data);
			}
			if ((*this)._method_stopped()) {
				goto _iter_end_1a7ced86b;
			}
		}
	_iter_next_1a7ced86b:;
	}
	_iter_end_1a7ced86b:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd229ca6_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb659bb_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1ddb659bb_ExprBuilder::_method_push_err(_1dd05db0c_Token _24227_token,jule::Str _24241_fmt,jule::Slice<jule::Any> _24254_args) {
	(*((*this)._field_p))._method_push_err(_24227_token,_24241_fmt,_24254_args);
}



inline void _1ddb659bb_ExprBuilder::_method_push_suggestion(jule::Str _24734_fmt,jule::Slice<jule::Any> _24747_args) {
	(*((*this)._field_p))._method_push_suggestion(_24734_fmt,_24747_args);
}



inline jule::Ptr<_1dd05c765_TupleExpr> _1ddb659bb_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_1dd05db0c_Token>>& _25135_parts) {
	jule::Ptr<_1dd05c765_TupleExpr> _25217_tuple = jule::new_struct<_1dd05c765_TupleExpr>(new( std::nothrow ) _1dd05c765_TupleExpr(jule::Slice<jule::Ptr<_1dd05c765_Expr>>::alloc(0LL,static_cast<jule::Int>(_25135_parts.len()))));
	{
		auto &expr = _25135_parts;
		auto it = expr.begin();
		_iter_begin_1a7d05686:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1ddb659bb_part = *it;
			{
				(*(_25217_tuple))._field_expr = jule::alloc_for_append((*(_25217_tuple))._field_expr,1);(*(_25217_tuple))._field_expr.__push((*this)._method_build_from_tokens(_1ddb659bb_part));
			}
			_iter_next_1a7d05686:;
			++it;
			goto _iter_begin_1a7d05686;
		}
		_iter_end_1a7d05686:;
	}
	return _25217_tuple;
}



inline jule::Ptr<_1dd05c765_LitExpr> _1ddb659bb_ExprBuilder::_method_build_lit(_1dd05db0c_Token _26128_token) {
	return jule::new_struct<_1dd05c765_LitExpr>(new( std::nothrow ) _1dd05c765_LitExpr(_26128_token,_26128_token._field_kind));
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddb659bb_ExprBuilder::_method_build_primitive_type(_1dd05db0c_Token& _26840_token) {
	return _1ddc59010_build_prim_type(_26840_token);
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_single(_1dd05db0c_Token _27235_token) {
	{
		auto &_match_expr{ _27235_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(6LLU)) {
			_case_begin_1a7d090a2:;
			{
				return jule::Any((*this)._method_build_lit(_27235_token));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(7LLU)) {
			_case_begin_1a7d09118:;
			{
				if (_27235_token._field_kind == jule::Str("...", 3)) {
					return jule::Any(jule::new_struct<_1dd05c765_VariadicExpr>(new( std::nothrow ) _1dd05c765_VariadicExpr(_27235_token,jule::Any())));
				}
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(2LLU) || _match_expr == static_cast<jule::Uint>(28LLU) || _match_expr == static_cast<jule::Uint>(40LLU)) {
			_case_begin_1a7d091b2:;
			{
				return jule::Any(_1ddb659bb_build_ident_expr(_27235_token));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(1LLU)) {
			_case_begin_1a7d09228:;
			{
				return jule::Any((*this)._method_build_primitive_type(_27235_token));
			}
		}
		_match_end_1a7d08ea3:;
	}
	(*this)._method_push_err(_27235_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1dd05c765_IdentExpr> _1ddb659bb_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_1dd05db0c_Token>& _29646_tokens) {
	if (_29646_tokens[0LL]._field_id != static_cast<jule::Uint>(31LLU)) {
		return nullptr;
	} else if (_29646_tokens[1LL]._field_id != static_cast<jule::Uint>(20LLU)) {
		(*this)._method_push_err(_29646_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1dd05db0c_Token _30417_token = _29646_tokens[2LL];
	if (_30417_token._field_id != static_cast<jule::Uint>(2LLU)) {
		(*this)._method_push_err(_29646_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1dd05c765_IdentExpr> _31017_expr = _1ddb659bb_build_ident_expr(_30417_token);
	(*(_31017_expr))._field_cpp_linked=true;
	return _31017_expr;
}



inline jule::Ptr<_1dd05c765_UnaryExpr> _1ddb659bb_ExprBuilder::_method_build_unary(jule::Slice<_1dd05db0c_Token> _31534_tokens) {
	_1dd05db0c_Token _31617_op = _31534_tokens[0LL];
	if (_31534_tokens.len() == 1LL) {
		(*this)._method_push_err(_31617_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1dd05db0c_is_unary_op(_31617_op._field_kind)))) {
		(*this)._method_push_err(_31617_op,jule::Str("operator @ is not unary", 23),jule::Slice<jule::Any>({jule::Any(_31617_op._field_kind)}));
		return nullptr;
	}
	_31534_tokens=_31534_tokens.slice(1LL);
	return jule::new_struct<_1dd05c765_UnaryExpr>(new( std::nothrow ) _1dd05c765_UnaryExpr(_31617_op,(*this)._method_build(_31534_tokens)));
}



inline jule::Ptr<_1dd05c765_SubIdentExpr> _1ddb659bb_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_1dd05db0c_Token> _33642_tokens) {
	jule::Int _33717_i = _33642_tokens.len() - 1LL;
	_1dd05db0c_Token _33817_ident_token = _33642_tokens[_33717_i];
	(_33717_i)--;
	_33642_tokens=_33642_tokens.slice(0LL,_33717_i);
	if (_33642_tokens.len() == 0LL) {
		(*this)._method_push_err(_33817_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1dd05c765_SubIdentExpr>(new( std::nothrow ) _1dd05c765_SubIdentExpr(jule::Bool(),(*this)._method_build(_33642_tokens),_33817_ident_token));
}



inline jule::Ptr<_1dd05c765_NsSelectionExpr> _1ddb659bb_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_1dd05db0c_Token>& _35142_tokens) {
	jule::Ptr<_1dd05c765_NsSelectionExpr> _35217_ns = jule::new_struct<_1dd05c765_NsSelectionExpr>(new( std::nothrow ) _1dd05c765_NsSelectionExpr());
	{
		auto &expr = _35142_tokens;
		auto it = expr.begin();
		_iter_begin_1a7d189c9:;
		if (it != expr.end()) {
			jule::Int _1ddb659bb_i = it - expr.begin();
			_1dd05db0c_Token _1ddb659bb_token = *it;
			{
				if ((_1ddb659bb_i % 2LL) == 0LL) {
					if (_1ddb659bb_token._field_id != static_cast<jule::Uint>(2LLU)) {
						(*this)._method_push_err(_1ddb659bb_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					}
					(*(_35217_ns))._field_ns = jule::alloc_for_append((*(_35217_ns))._field_ns,1);(*(_35217_ns))._field_ns.__push(_1ddb659bb_token);
				} else if (_1ddb659bb_token._field_id != static_cast<jule::Uint>(23LLU)) {
					(*this)._method_push_err(_1ddb659bb_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				}
			}
			_iter_next_1a7d189c9:;
			++it;
			_1ddb659bb_i++;
			goto _iter_begin_1a7d189c9;
		}
		_iter_end_1a7d189c9:;
	}
	(*(_35217_ns))._field_ident=(*(_35217_ns))._field_ns[(*(_35217_ns))._field_ns.len() - 1LL];
	(*(_35217_ns))._field_ns=(*(_35217_ns))._field_ns.slice(0LL,(*(_35217_ns))._field_ns.len() - 1LL);
	return _35217_ns;
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddb659bb_ExprBuilder::_method_build_type(jule::Slice<_1dd05db0c_Token>& _37034_tokens) {
	jule::Int _37117_i = 0LL;
	jule::Ptr<_1dd05c765_TypeDecl> _37218_t;
	jule::Bool _37221_ok;
	std::tie(_37218_t,_37221_ok) = (*((*this)._field_p))._method_build_type(_37034_tokens,(&(_37117_i)),false);
	if ((!(_37221_ok))) {
		(*this)._method_push_err(_37034_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_37117_i < static_cast<jule::Int>(_37034_tokens.len())) {
		(*this)._method_push_err(_37034_tokens[_37117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _37218_t;
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_sub_ident(jule::Slice<_1dd05db0c_Token>& _38439_tokens) {
	jule::Int _38513_i = _38439_tokens.len() - 2LL;
	_1dd05db0c_Token _38613_token = _38439_tokens[_38513_i];
	{
		auto &_match_expr{ _38613_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(20LLU)) {
			_case_begin_1a7d22d35:;
			{
				return jule::Any((*this)._method_build_obj_sub_ident(_38439_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(23LLU)) {
			_case_begin_1a7d22dce:;
			{
				return jule::Any((*this)._method_build_ns_sub_ident(_38439_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(3LLU)) {
			_case_begin_1a7d22e45:;
			{
				if (_38613_token._field_kind == jule::Str("]", 1)) {
					return jule::Any((*this)._method_build_type(_38439_tokens));
				}
			}
		}
		_match_end_1a7d22c8b:;
	}
	(*this)._method_push_err(_38613_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1dd05c765_VariadicExpr> _1ddb659bb_ExprBuilder::_method_build_variadic(jule::Slice<_1dd05db0c_Token> _40537_tokens) {
	_1dd05db0c_Token _40617_token = _40537_tokens[_40537_tokens.len() - 1LL];
	_40537_tokens=_40537_tokens.slice(0LL,_40537_tokens.len() - 1LL);
	return jule::new_struct<_1dd05c765_VariadicExpr>(new( std::nothrow ) _1dd05c765_VariadicExpr(_40617_token,(*this)._method_build(_40537_tokens)));
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_op_right(jule::Slice<_1dd05db0c_Token>& _41438_tokens) {
	_1dd05db0c_Token _41517_token = _41438_tokens[_41438_tokens.len() - 1LL];
	{
		auto &_match_expr{ _41517_token._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a7d28203:;
			{
				_41438_tokens=_41438_tokens.slice(0LL,_41438_tokens.len() - 1LL);
				jule::Any _41921_d = (*this)._method_build(_41438_tokens);
				if (_41921_d == jule::Any(nullptr)) {
					return jule::Any(nullptr);
				}
				{
					auto &_match_expr{ _41921_d };
					
					if (_match_expr.type_is<jule::Ptr<_1dd05c765_FnCallExpr>>()) {
						_case_begin_1a7d29c82:;
						{
							(*(_41921_d.operator jule::Ptr<_1dd05c765_FnCallExpr>()))._field_exception=jule::new_struct<_1dd05c765_ScopeTree>(new( std::nothrow ) _1dd05c765_ScopeTree(jule::Ptr<_1dd05c765_ScopeTree>(),jule::Bool(),true,jule::Slice<jule::Any>()));
							return _41921_d;
						}
					}
					_match_end_1a7d29886:;
				}
			}
		}
		else if (_match_expr == jule::Str("...", 3)) {
			_case_begin_1a7d28269:;
			{
				return jule::Any((*this)._method_build_variadic(_41438_tokens));
			}
		}
		_match_end_1a7d2819d:;
	}
	(*this)._method_push_err(_41517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_between_parentheses(jule::Slice<_1dd05db0c_Token> _43948_tokens) {
	_1dd05db0c_Token _44013_token = _43948_tokens[0LL];
	_43948_tokens=_43948_tokens.slice(1LL,_43948_tokens.len() - 1LL);
	if (_43948_tokens.len() == 0LL) {
		(*this)._method_push_err(_44013_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_43948_tokens);
}



inline jule::Ptr<_1dd05c765_CastExpr> _1ddb659bb_ExprBuilder::_method_try_build_cast(jule::Slice<_1dd05db0c_Token>& _45038_tokens) {
	jule::Int _45117_range_n = 0LL;
	{
		auto &expr = _45038_tokens;
		auto it = expr.begin();
		_iter_begin_1a7d2eb00:;
		if (it != expr.end()) {
			jule::Int _1ddb659bb_i = it - expr.begin();
			_1dd05db0c_Token _1ddb659bb_token = *it;
			{
				if (_1ddb659bb_token._field_id == static_cast<jule::Uint>(3LLU)) {
					{
						auto &_match_expr{ _1ddb659bb_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a7d31173:;
							{
								(_45117_range_n)++;
								goto _iter_next_1a7d2eb00;
							}
						}
						else {
							_case_begin_1a7d3087b:;
							{
								(_45117_range_n)--;
							}
						}
						_match_end_1a7d30903:;
					}
				}
				if (_45117_range_n > 0LL) {
					goto _iter_next_1a7d2eb00;
				} else if ((_1ddb659bb_i + 1LL) == static_cast<jule::Int>(_45038_tokens.len())) {
					return nullptr;
				}
				jule::Slice<_1dd05db0c_Token> _47221_type_tokens = _45038_tokens.slice(0LL,_1ddb659bb_i + 1LL);
				jule::Slice<_1dd05db0c_Token> _47321_expr_tokens = _45038_tokens.slice(_1ddb659bb_i + 1LL);
				if (_47321_expr_tokens.len() == 0LL) {
					return nullptr;
				}
				_1dd05db0c_Token _48017_tok = _47321_expr_tokens[0LL];
				if ((_48017_tok._field_id != static_cast<jule::Uint>(3LLU)) || (_48017_tok._field_kind != jule::Str("(", 1))) {
					return nullptr;
				}
				jule::Ptr<_1dd05c765_CastExpr> _48521_cast = jule::new_struct<_1dd05c765_CastExpr>(new( std::nothrow ) _1dd05c765_CastExpr());
				if (_47321_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_47321_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				}
				if (_47221_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_47221_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_47221_type_tokens=_47221_type_tokens.slice(1LL,_47221_type_tokens.len() - 1LL);
					jule::Int _49925_type_index = 0LL;
					jule::Ptr<_1dd05c765_TypeDecl> _50026_t;
					jule::Bool _50029_ok;
					std::tie(_50026_t,_50029_ok) = (*((*this)._field_p))._method_build_type(_47221_type_tokens,(&(_49925_type_index)),true);
					if (_50029_ok && (_49925_type_index < static_cast<jule::Int>(_47221_type_tokens.len()))) {
						(*this)._method_push_err(_47221_type_tokens[_49925_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_50029_ok))) {
						return _48521_cast;
					}
					(*(_48521_cast))._field_kind=_50026_t;
					if (_47321_expr_tokens.len() > 2LL) {
						jule::Int _51029_j = 0LL;
						_1ddb89cdc_range(_51029_j,jule::Str("(", 1),jule::Str(")", 1),_47321_expr_tokens);
						if (_51029_j < static_cast<jule::Int>(_47321_expr_tokens.len())) {
							return nullptr;
						}
						_47321_expr_tokens=_47321_expr_tokens.slice(0LL,_51029_j);
						(*(_48521_cast))._field_expr=(*this)._method_build(_47321_expr_tokens);
					}
				}
				return _48521_cast;
			}
			_iter_next_1a7d2eb00:;
			++it;
			_1ddb659bb_i++;
			goto _iter_begin_1a7d2eb00;
		}
		_iter_end_1a7d2eb00:;
	}
	return nullptr;
}



inline void _1ddb659bb_ExprBuilder::_method_push_arg(jule::Slice<jule::Ptr<_1dd05c765_Expr>>& _52532_args,jule::Slice<_1dd05db0c_Token> _52551_tokens,_1dd05db0c_Token _52568_err_token) {
	if (_52551_tokens.len() == 0LL) {
		(*this)._method_push_err(_52568_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_52532_args = jule::alloc_for_append(_52532_args,1);_52532_args.__push((*this)._method_build_from_tokens(_52551_tokens));
}



inline jule::Slice<jule::Ptr<_1dd05c765_Expr>> _1ddb659bb_ExprBuilder::_method_build_args(jule::Slice<_1dd05db0c_Token> _53433_tokens) {
	if (_53433_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1dd05c765_Expr>> _54017_args = nullptr;
	jule::Int _54117_last = 0LL;
	jule::Int _54217_range_n = 0LL;
	_53433_tokens=_53433_tokens.slice(1LL,_53433_tokens.len() - 1LL);
	{
		auto &expr = _53433_tokens;
		auto it = expr.begin();
		_iter_begin_1a7d40616:;
		if (it != expr.end()) {
			jule::Int _1ddb659bb_i = it - expr.begin();
			_1dd05db0c_Token _1ddb659bb_token = *it;
			{
				if (_1ddb659bb_token._field_id == static_cast<jule::Uint>(3LLU)) {
					{
						auto &_match_expr{ _1ddb659bb_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a7d42409:;
							{
								(_54217_range_n)++;
							}
						}
						else {
							_case_begin_1a7d41b12:;
							{
								(_54217_range_n)--;
							}
						}
						_match_end_1a7d41b89:;
					}
				}
				if ((_54217_range_n > 0LL) || (_1ddb659bb_token._field_id != static_cast<jule::Uint>(8LLU))) {
					goto _iter_next_1a7d40616;
				}
				(*this)._method_push_arg(_54017_args,_53433_tokens.slice(_54117_last,_1ddb659bb_i),_1ddb659bb_token);
				_54117_last=static_cast<jule::Int>(_1ddb659bb_i + 1LL);
			}
			_iter_next_1a7d40616:;
			++it;
			_1ddb659bb_i++;
			goto _iter_begin_1a7d40616;
		}
		_iter_end_1a7d40616:;
	}
	if (_54117_last < static_cast<jule::Int>(_53433_tokens.len())) {
		if (_54117_last == 0LL) {
			if (_53433_tokens.len() > 0LL) {
				(*this)._method_push_arg(_54017_args,_53433_tokens.slice(_54117_last),_53433_tokens[_54117_last]);
			}
		} else {
			(*this)._method_push_arg(_54017_args,_53433_tokens.slice(_54117_last),_53433_tokens[_54117_last - 1LL]);
		}
	}
	return _54017_args;
}



inline jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> _1ddb659bb_ExprBuilder::_method_build_call_generics(jule::Slice<_1dd05db0c_Token> _57742_tokens) {
	if (_57742_tokens.len() == 0LL) {
		return nullptr;
	}
	_57742_tokens=_57742_tokens.slice(1LL,_57742_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _58318_parts;
	jule::Slice<_1db678789_Log> _58325_errs;
	std::tie(_58318_parts,_58325_errs) = _1ddb89cdc_parts(_57742_tokens,static_cast<jule::Uint>(8LLU),true);
	jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> _58417_generics = jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>::alloc(0LL,static_cast<jule::Int>(_58318_parts.len()));
	(*((*this)._field_p))._field_errors=jule::append((*((*this)._field_p))._field_errors,_58325_errs);
	{
		auto &expr = _58318_parts;
		auto it = expr.begin();
		_iter_begin_1a7d477b6:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1ddb659bb_part = *it;
			{
				if (_1ddb659bb_part.len() == 0LL) {
					goto _iter_next_1a7d477b6;
				}
				jule::Int _59021_j = 0LL;
				jule::Ptr<_1dd05c765_TypeDecl> _59122_generic;
				std::tie(_59122_generic,std::ignore) = (*((*this)._field_p))._method_build_type(_1ddb659bb_part,(&(_59021_j)),true);
				if (_59021_j < static_cast<jule::Int>(_1ddb659bb_part.len())) {
					(*this)._method_push_err(_1ddb659bb_part[_59021_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_58417_generics = jule::alloc_for_append(_58417_generics,1);_58417_generics.__push(_59122_generic);
			}
			_iter_next_1a7d477b6:;
			++it;
			goto _iter_begin_1a7d477b6;
		}
		_iter_end_1a7d477b6:;
	}
	return _58417_generics;
}



inline jule::Ptr<_1dd05c765_FnCallExpr> _1ddb659bb_ExprBuilder::_method_build_fn_call(_1dd05db0c_Token& _60137_token,jule::Ptr<_1ddb659bb_CallData>& _60156_data) {
	return jule::new_struct<_1dd05c765_FnCallExpr>(new( std::nothrow ) _1dd05c765_FnCallExpr(_60137_token,(*this)._method_build_from_tokens((*(_60156_data))._field_expr_tokens),(*this)._method_build_call_generics((*(_60156_data))._field_generics_tokens),(*this)._method_build_args((*(_60156_data))._field_args_tokens),jule::Ptr<_1dd05c765_ScopeTree>()));
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_parentheses_range(jule::Slice<_1dd05db0c_Token>& _61047_tokens) {
	_1dd05db0c_Token _61117_token = _61047_tokens[0LL];
	{
		auto &_match_expr{ _61117_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(3LLU)) {
			_case_begin_1a7d4e1d5:;
			{
				{
					auto &_match_expr{ _61117_token._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a7d4ea10:;
						{
							jule::Ptr<_1dd05c765_CastExpr> _61625_expr = (*this)._method_try_build_cast(_61047_tokens);
							if (_61625_expr != nullptr) {
								return jule::Any(_61625_expr);
							}
						}
					}
					_match_end_1a7d4e977:;
				}
			}
		}
		_match_end_1a7d4e01a:;
	}
	jule::Ptr<_1ddb659bb_CallData> _62317_data = _1ddb659bb_get_call_data(_61047_tokens);
	if ((*(_62317_data))._field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses((*(_62317_data))._field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_61117_token,_62317_data));
}



inline jule::Ptr<_1dd05c765_UnsafeExpr> _1ddb659bb_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_1dd05db0c_Token> _63440_tokens) {
	_1dd05db0c_Token _63517_token = _63440_tokens[0LL];
	_63440_tokens=_63440_tokens.slice(1LL);
	jule::Int _63717_i = 0LL;
	jule::Slice<_1dd05db0c_Token> _63817_range_tokens = _1ddb89cdc_range(_63717_i,jule::Str("{", 1),jule::Str("}", 1),_63440_tokens);
	if (_63817_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_63440_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1dd05c765_UnsafeExpr>(new( std::nothrow ) _1dd05c765_UnsafeExpr(_63517_token,(*((*this)._method_build_from_tokens(_63817_range_tokens)))._field_kind));
}



inline jule::Ptr<_1dd05c765_FnDecl> _1ddb659bb_ExprBuilder::_method_build_anon_fn(jule::Slice<_1dd05db0c_Token>& _64937_tokens) {
	jule::Ptr<_1dd05c765_FnDecl> _65017_f = (*((*this)._field_p))._method_build_fn(_64937_tokens,false,false);
	if ((!((*(_65017_f))._method_is_anon()))) {
		(*this)._method_push_err((*(_65017_f))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	}
	return _65017_f;
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_unsafe(jule::Slice<_1dd05db0c_Token>& _65836_tokens) {
	{
		auto &_match_expr{ _65836_tokens[1LL]._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(33LLU)) {
			_case_begin_1a7d59366:;
			{
				return jule::Any((*this)._method_build_anon_fn(_65836_tokens));
			}
		}
		else {
			_case_begin_1a7d5884e:;
			{
				return jule::Any((*this)._method_build_unsafe_expr(_65836_tokens));
			}
		}
		_match_end_1a7d58c28:;
	}
}



inline void _1ddb659bb_ExprBuilder::_method_push_range_lit_part(jule::Slice<_1dd05db0c_Token> _66942_part,_1dd05db0c_Token _6709_error_token,jule::Slice<jule::Slice<_1dd05db0c_Token>>& _67034_parts) {
	if (_66942_part.len() == 0LL) {
		(*this)._method_push_err(_6709_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_67034_parts = jule::alloc_for_append(_67034_parts,1);_67034_parts.__push(_66942_part);
}



inline jule::Slice<jule::Slice<_1dd05db0c_Token>> _1ddb659bb_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_1dd05db0c_Token> _68053_tokens) {
	if (_68053_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _68617_parts = nullptr;
	jule::Int _68817_last = 0LL;
	jule::Int _68917_range_n = 0LL;
	_68053_tokens=_68053_tokens.slice(1LL,_68053_tokens.len() - 1LL);
	{
		auto &expr = _68053_tokens;
		auto it = expr.begin();
		_iter_begin_1a7d5dc72:;
		if (it != expr.end()) {
			jule::Int _1ddb659bb_i = it - expr.begin();
			_1dd05db0c_Token _1ddb659bb_token = *it;
			{
				if (_1ddb659bb_token._field_id == static_cast<jule::Uint>(3LLU)) {
					{
						auto &_match_expr{ _1ddb659bb_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a7d60a65:;
							{
								(_68917_range_n)++;
							}
						}
						else {
							_case_begin_1a7d6026d:;
							{
								(_68917_range_n)--;
							}
						}
						_match_end_1a7d602e5:;
					}
				}
				if ((_68917_range_n > 0LL) || (_1ddb659bb_token._field_id != static_cast<jule::Uint>(8LLU))) {
					goto _iter_next_1a7d5dc72;
				}
				(*this)._method_push_range_lit_part(_68053_tokens.slice(_68817_last,_1ddb659bb_i),_1ddb659bb_token,_68617_parts);
				_68817_last=static_cast<jule::Int>(_1ddb659bb_i + 1LL);
			}
			_iter_next_1a7d5dc72:;
			++it;
			_1ddb659bb_i++;
			goto _iter_begin_1a7d5dc72;
		}
		_iter_end_1a7d5dc72:;
	}
	if (_68817_last < static_cast<jule::Int>(_68053_tokens.len())) {
		if (_68817_last == 0LL) {
			if (_68053_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_68053_tokens.slice(_68817_last),_68053_tokens[_68817_last],_68617_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_68053_tokens.slice(_68817_last),_68053_tokens[_68817_last - 1LL],_68617_parts);
		}
	}
	return _68617_parts;
}



inline jule::Ptr<_1dd05c765_FieldExprPair> _1ddb659bb_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_1dd05db0c_Token> _72344_tokens) {
	if ((_72344_tokens.len() - 2LL) == 0LL) {
		(*this)._method_push_err(_72344_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1dd05c765_FieldExprPair> _72817_pair = jule::new_struct<_1dd05c765_FieldExprPair>(new( std::nothrow ) _1dd05c765_FieldExprPair(_72344_tokens[0LL],jule::Any()));
	_72344_tokens=_72344_tokens.slice(2LL);
	(*(_72817_pair))._field_expr=(*((*this)._method_build_from_tokens(_72344_tokens)))._field_kind;
	return _72817_pair;
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_1dd05db0c_Token>& _73645_tokens) {
	_1dd05db0c_Token _73717_token = _73645_tokens[0LL];
	if (_73717_token._field_id == static_cast<jule::Uint>(2LLU)) {
		if (_73645_tokens.len() > 1LL) {
			_73717_token=_73645_tokens[1LL];
			if (_73717_token._field_id == static_cast<jule::Uint>(11LLU)) {
				return jule::Any((*this)._method_build_field_expr_pair(_73645_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_73645_tokens));
}



inline jule::Slice<jule::Any> _1ddb659bb_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_1dd05db0c_Token>& _74946_tokens) {
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _75017_parts = (*this)._method_get_brace_range_lit_expr_parts(_74946_tokens);
	if (_75017_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _75517_pairs = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(_75017_parts.len()));
	{
		auto &expr = _75017_parts;
		auto it = expr.begin();
		_iter_begin_1a7d6b3cd:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1ddb659bb_part = *it;
			{
				_75517_pairs = jule::alloc_for_append(_75517_pairs,1);_75517_pairs.__push((*this)._method_build_struct_lit_expr(_1ddb659bb_part));
			}
			_iter_next_1a7d6b3cd:;
			++it;
			goto _iter_begin_1a7d6b3cd;
		}
		_iter_end_1a7d6b3cd:;
	}
	return _75517_pairs;
}



inline jule::Ptr<_1dd05c765_StructLit> _1ddb659bb_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_1dd05db0c_Token> _76249_tokens) {
	jule::Int _76317_i = 0LL;
	jule::Ptr<_1dd05c765_TypeDecl> _76418_t;
	jule::Bool _76421_ok;
	std::tie(_76418_t,_76421_ok) = (*((*this)._field_p))._method_build_type(_76249_tokens,(&(_76317_i)),true);
	if ((!(_76421_ok))) {
		return nullptr;
	} else if (_76317_i >= static_cast<jule::Int>(_76249_tokens.len())) {
		(*this)._method_push_err(_76249_tokens[_76317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_76249_tokens=_76249_tokens.slice(_76317_i);
	_1dd05db0c_Token _77313_token = _76249_tokens[0LL];
	if ((_77313_token._field_id != static_cast<jule::Uint>(3LLU)) || (_77313_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_77313_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1dd05c765_StructLit>(new( std::nothrow ) _1dd05c765_StructLit(_76418_t,(*this)._method_build_struct_lit_exprs(_76249_tokens)));
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_1dd05db0c_Token>& _78544_tokens) {
	jule::Slice<_1dd05db0c_Token> _78618_l;
	jule::Slice<_1dd05db0c_Token> _78625_r;
	std::tie(_78618_l,_78625_r) = _1ddb659bb_split_colon(_78544_tokens);
	if (_78618_l != nullptr) {
		return jule::Any(jule::new_struct<_1dd05c765_KeyValPair>(new( std::nothrow ) _1dd05c765_KeyValPair((*((*this)._method_build_from_tokens(_78618_l)))._field_kind,(*((*this)._method_build_from_tokens(_78625_r)))._field_kind,_78544_tokens[_78618_l.len()])));
	}
	return jule::Any((*this)._method_build_from_tokens(_78544_tokens));
}



inline jule::Ptr<_1dd05c765_BraceLit> _1ddb659bb_ExprBuilder::_method_build_brace_lit(jule::Slice<_1dd05db0c_Token>& _79839_tokens) {
	jule::Ptr<_1dd05c765_BraceLit> _79917_lit = jule::new_struct<_1dd05c765_BraceLit>(new( std::nothrow ) _1dd05c765_BraceLit(_79839_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _80317_parts = (*this)._method_get_brace_range_lit_expr_parts(_79839_tokens);
	if (_80317_parts == nullptr) {
		return _79917_lit;
	}
	(*(_79917_lit))._field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(_80317_parts.len()));
	{
		auto &expr = _80317_parts;
		auto it = expr.begin();
		_iter_begin_1a7d76130:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1ddb659bb_part = *it;
			{
				(*(_79917_lit))._field_exprs = jule::alloc_for_append((*(_79917_lit))._field_exprs,1);(*(_79917_lit))._field_exprs.__push((*this)._method_build_brace_lit_part(_1ddb659bb_part));
			}
			_iter_next_1a7d76130:;
			++it;
			goto _iter_begin_1a7d76130;
		}
		_iter_end_1a7d76130:;
	}
	return _79917_lit;
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_brace_range(jule::Slice<_1dd05db0c_Token>& _81641_tokens) {
	jule::Slice<_1dd05db0c_Token> _81718_expr_tokens;
	jule::Int _81731_range_n;
	std::tie(_81718_expr_tokens,_81731_range_n) = _1ddb659bb_get_range_expr_tokens(_81641_tokens);
	{
		
		if (_81718_expr_tokens.len() == 0LL) {
			_case_begin_1a7d7882a:;
			{
				return jule::Any((*this)._method_build_brace_lit(_81641_tokens));
			}
		}
		else if (_81731_range_n > 0LL) {
			_case_begin_1a7d78891:;
			{
				(*this)._method_push_err(_81641_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a7d78792:;
	}
	_1dd05db0c_Token _82913_else_token = _81718_expr_tokens[_81718_expr_tokens.len() - 1LL];
	if (_81718_expr_tokens[_81718_expr_tokens.len() - 1LL]._field_id == static_cast<jule::Uint>(17LLU)) {
		_81718_expr_tokens=_81718_expr_tokens.slice(0LL,_81718_expr_tokens.len() - 1LL);
		jule::Any _83221_d = (*this)._method_build(_81718_expr_tokens);
		if (_83221_d == jule::Any(nullptr)) {
			return jule::Any(nullptr);
		}
		{
			auto &_match_expr{ _83221_d };
			
			if (_match_expr.type_is<jule::Ptr<_1dd05c765_FnCallExpr>>()) {
				_case_begin_1a7d7c037:;
				{
					_81641_tokens=_81641_tokens.slice(_81718_expr_tokens.len() + 1LL);
					jule::Int _83925_i = 0LL;
					jule::Slice<_1dd05db0c_Token> _84025_range_tokens = _1ddb89cdc_range(_83925_i,jule::Str("{", 1),jule::Str("}", 1),_81641_tokens);
					jule::Ptr<_1dd05c765_FnCallExpr> _84125_model = _83221_d.operator jule::Ptr<_1dd05c765_FnCallExpr>();
					if ((*(_84125_model))._method_ignored()) {
						(*this)._method_push_err(_82913_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						(*this)._method_push_suggestion(jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					}
					(*(_84125_model))._field_exception=(*((*this)._field_p))._method_build_scope(_84025_range_tokens);
					return _83221_d;
				}
			}
			else {
				_case_begin_1a7d7c2ce:;
				{
					(*this)._method_push_err(_81718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return jule::Any(nullptr);
				}
			}
			_match_end_1a7d7bdd3:;
		}
	}
	{
		auto &_match_expr{ _81718_expr_tokens[0LL]._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(35LLU)) {
			_case_begin_1a7d82c63:;
			{
				return (*this)._method_build_unsafe(_81641_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(33LLU)) {
			_case_begin_1a7d82b42:;
			{
				return jule::Any((*this)._method_build_anon_fn(_81641_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(2LLU) || _match_expr == static_cast<jule::Uint>(31LLU)) {
			_case_begin_1a7d82ba8:;
			{
				return jule::Any((*this)._method_build_typed_struct_literal(_81641_tokens));
			}
		}
		else {
			_case_begin_1a7d786b5:;
			{
				(*this)._method_push_err(_81718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a7d81cea:;
	}
}



inline jule::Slice<jule::Slice<_1dd05db0c_Token>> _1ddb659bb_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_1dd05db0c_Token> _87343_tokens) {
	_87343_tokens=_87343_tokens.slice(1LL,_87343_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _87518_parts;
	jule::Slice<_1db678789_Log> _87525_errors;
	std::tie(_87518_parts,_87525_errors) = _1ddb89cdc_parts(_87343_tokens,static_cast<jule::Uint>(8LLU),true);
	(*((*this)._field_p))._field_errors=jule::append((*((*this)._field_p))._field_errors,_87525_errors);
	return _87518_parts;
}



inline jule::Ptr<_1dd05c765_SliceExpr> _1ddb659bb_ExprBuilder::_method_build_slice(jule::Slice<_1dd05db0c_Token> _88034_tokens) {
	jule::Ptr<_1dd05c765_SliceExpr> _88117_slc = jule::new_struct<_1dd05c765_SliceExpr>(new( std::nothrow ) _1dd05c765_SliceExpr(_88034_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _88517_parts = (*this)._method_get_enumerable_parts(_88034_tokens);
	if (_88517_parts.len() == 0LL) {
		return _88117_slc;
	}
	(*(_88117_slc))._field_elems=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(_88517_parts.len()));
	{
		auto &expr = _88517_parts;
		auto it = expr.begin();
		_iter_begin_1a7d88cd0:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1ddb659bb_p = *it;
			{
				(*(_88117_slc))._field_elems = jule::alloc_for_append((*(_88117_slc))._field_elems,1);(*(_88117_slc))._field_elems.__push((*((*this)._method_build_from_tokens(_1ddb659bb_p)))._field_kind);
			}
			_iter_next_1a7d88cd0:;
			++it;
			goto _iter_begin_1a7d88cd0;
		}
		_iter_end_1a7d88cd0:;
	}
	return _88117_slc;
}



inline jule::Ptr<_1dd05c765_IndexingExpr> _1ddb659bb_ExprBuilder::_method_build_indexing(jule::Slice<_1dd05db0c_Token> _89837_expr_tokens,jule::Slice<_1dd05db0c_Token> _89913_tokens,_1dd05db0c_Token _89934_error_token) {
	_89913_tokens=_89913_tokens.slice(1LL,_89913_tokens.len() - 1LL);
	return jule::new_struct<_1dd05c765_IndexingExpr>(new( std::nothrow ) _1dd05c765_IndexingExpr(_89934_error_token,(*((*this)._method_build_from_tokens(_89837_expr_tokens)))._field_kind,(*((*this)._method_build_from_tokens(_89913_tokens)))._field_kind));
}



inline jule::Ptr<_1dd05c765_SlicingExpr> _1ddb659bb_ExprBuilder::_method_build_slicing(jule::Slice<_1dd05db0c_Token>& _90837_expr_tokens,jule::Slice<_1dd05db0c_Token>& _90864_slicing_tokens,jule::Int& _90910_colon,_1dd05db0c_Token& _90927_error_token) {
	jule::Ptr<_1dd05c765_SlicingExpr> _91017_slc = jule::new_struct<_1dd05c765_SlicingExpr>(new( std::nothrow ) _1dd05c765_SlicingExpr(_90927_error_token,(*((*this)._method_build_from_tokens(_90837_expr_tokens)))._field_kind,jule::Any(),jule::Any()));
	jule::Slice<_1dd05db0c_Token> _91517_start_expr_tokens = _90864_slicing_tokens.slice(0LL,_90910_colon);
	if (_91517_start_expr_tokens.len() > 0LL) {
		(*(_91017_slc))._field_start=(*((*this)._method_build_from_tokens(_91517_start_expr_tokens)))._field_kind;
	}
	jule::Slice<_1dd05db0c_Token> _92017_to_expr_tokens = _90864_slicing_tokens.slice(_90910_colon + 1LL);
	if (_92017_to_expr_tokens.len() > 0LL) {
		(*(_91017_slc))._field_to=(*((*this)._method_build_from_tokens(_92017_to_expr_tokens)))._field_kind;
	}
	return _91017_slc;
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_bracket_range(jule::Slice<_1dd05db0c_Token> _92842_tokens) {
	_1dd05db0c_Token _92917_error_token = _92842_tokens[0LL];
	jule::Slice<_1dd05db0c_Token> _93018_expr_tokens;
	jule::Int _93031_range_n;
	std::tie(_93018_expr_tokens,_93031_range_n) = _1ddb659bb_get_range_expr_tokens(_92842_tokens);
	{
		
		if (_93018_expr_tokens.len() == 0LL) {
			_case_begin_1a7d92613:;
			{
				return jule::Any((*this)._method_build_slice(_92842_tokens));
			}
		}
		else if ((_93018_expr_tokens.len() == 0LL) || (_93031_range_n > 0LL)) {
			_case_begin_1a7d9268a:;
			{
				(*this)._method_push_err(_92917_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a7d92558:;
	}
	_92842_tokens=_92842_tokens.slice(_93018_expr_tokens.len());
	jule::Int _94917_i = 0LL;
	jule::Slice<_1dd05db0c_Token> _95018_slicing_tokens;
	jule::Int _95034_colon;
	std::tie(_95018_slicing_tokens,_95034_colon) = _1ddc59010_split_map_range(_92842_tokens,_94917_i);
	if (_95034_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_93018_expr_tokens,_95018_slicing_tokens,_95034_colon,_92917_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_93018_expr_tokens,_92842_tokens,_92917_error_token));
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_ternary(jule::Slice<_1dd05db0c_Token> _95736_tokens) {
	jule::Ptr<_1dd05c765_TernaryExpr> _95817_ter = jule::new_struct<_1dd05c765_TernaryExpr>(new( std::nothrow ) _1dd05c765_TernaryExpr());
	(*(_95817_ter))._field_token=_95736_tokens[0LL];
	_95736_tokens=_95736_tokens.slice(1LL);
	jule::Slice<_1dd05db0c_Token> _96217_expr_tokens = _1ddb659bb_get_block_expr(_95736_tokens);
	if (_96217_expr_tokens.len() == 0LL) {
		(*this)._method_push_err((*(_95817_ter))._field_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	(*(_95817_ter))._field_condition=(*this)._method_build_kind(_96217_expr_tokens);
	jule::Int _96917_i = _96217_expr_tokens.len();
	jule::Slice<_1dd05db0c_Token> _97017_true_expr = _1ddb89cdc_range(_96917_i,jule::Str("{", 1),jule::Str("}", 1),_95736_tokens);
	if (_97017_true_expr == nullptr) {
		(*this)._method_push_err((*(_95817_ter))._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_95817_ter);
	} else if (_97017_true_expr.len() == 0LL) {
		(*this)._method_push_err(_95736_tokens[_96217_expr_tokens.len()],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_96917_i >= static_cast<jule::Int>(_95736_tokens.len())) {
		(*this)._method_push_err((*(_95817_ter))._field_token,jule::Str("else block missed for ternary operator", 38),jule::Slice<jule::Any>());
		return jule::Any(_95817_ter);
	}
	_1dd05db0c_Token _98413_else_token = _95736_tokens[_96917_i];
	if (_98413_else_token._field_id != static_cast<jule::Uint>(17LLU)) {
		(*this)._method_push_err(_98413_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("else keyword expected for else block of ternary operator", 56),jule::Slice<jule::Any>());
		return jule::Any(_95817_ter);
	}
	(_96917_i)++;
	jule::Int _99213_j = _96917_i;
	jule::Slice<_1dd05db0c_Token> _99317_false_expr = _1ddb89cdc_range(_96917_i,jule::Str("{", 1),jule::Str("}", 1),_95736_tokens);
	if (_99317_false_expr == nullptr) {
		(*this)._method_push_err(_98413_else_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_95817_ter);
	} else if (_99317_false_expr.len() == 0LL) {
		(*this)._method_push_err(_95736_tokens[_99213_j],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_96917_i < static_cast<jule::Int>(_95736_tokens.len())) {
		(*this)._method_push_err(_95736_tokens[_96917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	(*(_95817_ter))._field_true_expr=(*this)._method_build_kind(_97017_true_expr);
	(*(_95817_ter))._field_false_expr=(*this)._method_build_kind(_99317_false_expr);
	return jule::Any(_95817_ter);
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_data(jule::Slice<_1dd05db0c_Token>& _101234_tokens) {
	{
		auto _match_expr{ _101234_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a7da41e6:;
			{
				return jule::Any(nullptr);
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a7da425c:;
			{
				return (*this)._method_build_single(_101234_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a7da42c3:;
			{
				if (_101234_tokens[0LL]._field_id == static_cast<jule::Uint>(31LLU)) {
					return jule::Any((*this)._method_build_cpp_linked_ident(_101234_tokens));
				}
			}
		}
		_match_end_1a7da403c:;
	}
	_1dd05db0c_Token _102617_token = _101234_tokens[0LL];
	{
		auto &_match_expr{ _102617_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(16LLU)) {
			_case_begin_1a7da658e:;
			{
				return (*this)._method_build_ternary(_101234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(7LLU)) {
			_case_begin_1a7da6605:;
			{
				if ((_101234_tokens.len() > 1LL) && (_102617_token._field_kind == jule::Str("*", 1))) {
					_102617_token=_101234_tokens[1LL];
					if ((_102617_token._field_id == static_cast<jule::Uint>(1LLU)) || (_102617_token._field_id == static_cast<jule::Uint>(35LLU))) {
						return jule::Any((*this)._method_build_type(_101234_tokens));
					}
				}
				return jule::Any((*this)._method_build_unary(_101234_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(3LLU)) {
			_case_begin_1a7da666b:;
			{
				if (_101234_tokens.len() < 3LL) {
					goto _match_end_1a7da5824;
				}
				if (_101234_tokens.len() > 3LL) {
					_1dd05db0c_Token _104921_t = _101234_tokens[_101234_tokens.len() - 1LL];
					if ((_104921_t._field_id == static_cast<jule::Uint>(3LLU)) && (_104921_t._field_kind == jule::Str(")", 1))) {
						goto _match_end_1a7da5824;
					}
				}
				_1dd05db0c_Token _105517_next = _101234_tokens[1LL];
				if ((_105517_next._field_id != static_cast<jule::Uint>(3LLU)) || (_105517_next._field_kind != jule::Str("]", 1))) {
					goto _match_end_1a7da5824;
				}
				return jule::Any((*this)._method_build_type(_101234_tokens));
			}
		}
		_match_end_1a7da5824:;
	}
	_102617_token=_101234_tokens[_101234_tokens.len() - 1LL];
	{
		auto &_match_expr{ _102617_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(2LLU)) {
			_case_begin_1a7dac92a:;
			{
				return (*this)._method_build_sub_ident(_101234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(1LLU)) {
			_case_begin_1a7dac991:;
			{
				return jule::Any((*this)._method_build_type(_101234_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(7LLU)) {
			_case_begin_1a7daca07:;
			{
				return (*this)._method_build_op_right(_101234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(3LLU)) {
			_case_begin_1a7daca7e:;
			{
				{
					auto &_match_expr{ _102617_token._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a7dae6b8:;
						{
							return (*this)._method_build_parentheses_range(_101234_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a7dae72e:;
						{
							return (*this)._method_build_brace_range(_101234_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a7dae7c8:;
						{
							return (*this)._method_build_bracket_range(_101234_tokens);
						}
					}
					_match_end_1a7dae663:;
				}
			}
		}
		_match_end_1a7dac8c5:;
	}
	(*this)._method_push_err(_102617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1dd05c765_BinopExpr> _1ddb659bb_ExprBuilder::_method_build_binop(jule::Slice<_1dd05db0c_Token>& _109235_tokens,jule::Int _109252_i) {
	jule::Slice<_1dd05db0c_Token> _109317_left_tokens = _109235_tokens.slice(0LL,_109252_i);
	jule::Slice<_1dd05db0c_Token> _109417_right_tokens = _109235_tokens.slice(_109252_i + 1LL);
	if (_109317_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_109235_tokens[_109252_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_109417_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_109235_tokens[_109252_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1dd05c765_BinopExpr>(new( std::nothrow ) _1dd05c765_BinopExpr((*this)._method_build(_109317_left_tokens),(*this)._method_build(_109417_right_tokens),_109235_tokens[_109252_i]));
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build(jule::Slice<_1dd05db0c_Token>& _111529_tokens) {
	jule::Int _111613_i = _1ddb659bb_find_lowest_prec_op(_111529_tokens);
	if (_111613_i == -1LL) {
		return (*this)._method_build_data(_111529_tokens);
	}
	return jule::Any((*this)._method_build_binop(_111529_tokens,_111613_i));
}



inline jule::Any _1ddb659bb_ExprBuilder::_method_build_kind(jule::Slice<_1dd05db0c_Token>& _112334_tokens) {
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _112418_parts;
	jule::Slice<_1db678789_Log> _112425_errors;
	std::tie(_112418_parts,_112425_errors) = _1ddb89cdc_parts(_112334_tokens,static_cast<jule::Uint>(8LLU),true);
	if (_112425_errors != nullptr) {
		(*((*this)._field_p))._field_errors=jule::append((*((*this)._field_p))._field_errors,_112425_errors);
		return jule::Any(nullptr);
	} else if (_112418_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_112418_parts));
	}
	return (*this)._method_build(_112334_tokens);
}



inline jule::Ptr<_1dd05c765_Expr> _1ddb659bb_ExprBuilder::_method_build_from_tokens(jule::Slice<_1dd05db0c_Token> _113440_tokens) {
	_113440_tokens=_1ddb659bb_eliminate_comments(_113440_tokens);
	if (_113440_tokens.len() == 0LL) {
		return nullptr;
	}
	return jule::new_struct<_1dd05c765_Expr>(new( std::nothrow ) _1dd05c765_Expr(_113440_tokens[0LL],(*this)._method_build_kind(_113440_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb659bb_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _1ddb89cdc_Parser::_method_stop(void) {
	(*this)._field_ast=nullptr;
}



inline jule::Bool _1ddb89cdc_Parser::_method_stopped(void) {
	return (*this)._field_ast == nullptr;
}



inline void _1ddb89cdc_Parser::_method_push_err(_1dd05db0c_Token _24027_token,jule::Str _24041_fmt,jule::Slice<jule::Any> _24054_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.__push(_1ddb89cdc_compiler_err(_24027_token,_24041_fmt,_24054_args));
}



inline void _1ddb89cdc_Parser::_method_push_suggestion(jule::Str _24534_fmt,jule::Slice<jule::Any> _24547_args) {
	{
		_1ddb89cdc_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_24534_fmt,_24547_args);
	}
}



inline jule::Ptr<_1dd05c765_Expr> _1ddb89cdc_Parser::_method_build_expr(jule::Slice<_1dd05db0c_Token>& _24935_tokens) {
	jule::Ptr<_1ddb659bb_ExprBuilder> _25017_ep = jule::new_struct<_1ddb659bb_ExprBuilder>(new( std::nothrow ) _1ddb659bb_ExprBuilder(this->self));
	jule::Ptr<_1dd05c765_Expr> _25117_expr = (*(_25017_ep))._method_build_from_tokens(_24935_tokens);
	return _25117_expr;
}



inline jule::Ptr<_1dd05c765_Directive> _1ddb89cdc_Parser::_method_build_directive(jule::Slice<_1dd05db0c_Token> _25538_tokens) {
	if (_25538_tokens.len() == 1LL) {
		(*this)._method_push_err(_25538_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_25538_tokens[1LL]._field_column != static_cast<jule::Int>(_25538_tokens[0LL]._field_column + 1LL)) {
		(*this)._method_push_err(_25538_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1dd05c765_Directive>(new( std::nothrow ) _1dd05c765_Directive(_25538_tokens[1LL],_25538_tokens.slice(2LL)));
}



inline void _1ddb89cdc_Parser::_method_push_directive(jule::Ptr<_1dd05c765_Directive> _27237_d) {
	if (_27237_d == nullptr) {
		return;
	}
	{
		auto &expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_1a7dc4d82:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Directive> _1ddb89cdc_pd = *it;
			{
				if ((*(_27237_d))._field_tag._field_kind == (*(_1ddb89cdc_pd))._field_tag._field_kind) {
					return;
				}
			}
			_iter_next_1a7dc4d82:;
			++it;
			goto _iter_begin_1a7dc4d82;
		}
		_iter_end_1a7dc4d82:;
	}
	(*this)._field_directives = jule::alloc_for_append((*this)._field_directives,1);(*this)._field_directives.__push(_27237_d);
}



inline jule::Ptr<_1dd05c765_ScopeTree> _1ddb89cdc_Parser::_method_build_scope(jule::Slice<_1dd05db0c_Token>& _28636_tokens) {
	jule::Ptr<_1dd05c765_ScopeTree> _28717_s = _1dd229ca6_new_scope();
	_1dd229ca6_ScopeParser _28817_sp = _1dd229ca6_ScopeParser(this->self,jule::Ptr<_1dd05c765_ScopeTree>(),jule::Slice<jule::Ptr<_1dd229ca6_Stmt>>(),jule::Int());
	_28817_sp._method_build(_28636_tokens,_28717_s);
	return _28717_s;
}



inline std::tuple<jule::Ptr<_1dd05c765_TypeDecl>,jule::Bool> _1ddb89cdc_Parser::_method___build_type(jule::Slice<_1dd05db0c_Token>& _29544_tokens,jule::Int* _29613_i,jule::Bool _29622_err) {
	_1ddc59010_TypeBuilder _29717_tb = _1ddc59010_TypeBuilder(this->self,_29544_tokens,_29613_i,_29622_err);
	jule::Ptr<_1dd05c765_TypeDecl> _30318_decl;
	jule::Bool _30324_ok;
	std::tie(_30318_decl,_30324_ok) = _29717_tb._method_build();
	return std::make_tuple(_30318_decl,_30324_ok);
}



inline std::tuple<jule::Ptr<_1dd05c765_TypeDecl>,jule::Bool> _1ddb89cdc_Parser::_method_build_type(jule::Slice<_1dd05db0c_Token>& _30842_tokens,jule::Int* _30913_i,jule::Bool _30922_err) {
	_1dd05db0c_Token _31013_token = _30842_tokens[(*(_30913_i))];
	jule::Ptr<_1dd05c765_TypeDecl> _31118_t;
	jule::Bool _31121_ok;
	std::tie(_31118_t,_31121_ok) = (*(this->self))._method___build_type(_30842_tokens,_30913_i,_30922_err);
	if (_30922_err && (!(_31121_ok))) {
		(*(this->self))._method_push_err(_31013_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	}
	return std::make_tuple(_31118_t,_31121_ok);
}



inline jule::Ptr<_1dd05c765_TypeAliasDecl> _1ddb89cdc_Parser::_method_build_type_alias_decl(jule::Slice<_1dd05db0c_Token>& _31846_tokens) {
	jule::Int _31917_i = 1LL;
	if (_31917_i >= static_cast<jule::Int>(_31846_tokens.len())) {
		(*(this->self))._method_push_err(_31846_tokens[_31917_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1dd05c765_TypeAliasDecl> _32417_tad = jule::new_struct<_1dd05c765_TypeAliasDecl>(new( std::nothrow ) _1dd05c765_TypeAliasDecl(jule::Ptr<_1dd05c765_ScopeTree>(),jule::Bool(),jule::Bool(),_31846_tokens[1LL],_31846_tokens[1LL]._field_kind,jule::Ptr<_1dd05c765_TypeDecl>(),jule::Ptr<_1dd05c765_CommentGroup>()));
	_1dd05db0c_Token _32817_token = _31846_tokens[_31917_i];
	if (_32817_token._field_id != static_cast<jule::Uint>(2LLU)) {
		(*(this->self))._method_push_err(_32817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_31917_i)++;
	if (_31917_i >= static_cast<jule::Int>(_31846_tokens.len())) {
		(*(this->self))._method_push_err(_31846_tokens[_31917_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _32417_tad;
	}
	_32817_token=_31846_tokens[_31917_i];
	if (_32817_token._field_id != static_cast<jule::Uint>(11LLU)) {
		(*(this->self))._method_push_err(_31846_tokens[_31917_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _32417_tad;
	}
	(_31917_i)++;
	if (_31917_i >= static_cast<jule::Int>(_31846_tokens.len())) {
		(*(this->self))._method_push_err(_31846_tokens[_31917_i - 1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _32417_tad;
	}
	jule::Ptr<_1dd05c765_TypeDecl> _34918_t;
	jule::Bool _34921_ok;
	std::tie(_34918_t,_34921_ok) = (*(this->self))._method_build_type(_31846_tokens,(&(_31917_i)),true);
	(*(_32417_tad))._field_kind=_34918_t;
	if (_34921_ok && (_31917_i < static_cast<jule::Int>(_31846_tokens.len()))) {
		(*(this->self))._method_push_err(_31846_tokens[_31917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _32417_tad;
}



inline void _1ddb89cdc_Parser::_method_build_var_type_and_expr(jule::Ptr<_1dd05c765_VarDecl>& _35748_v,jule::Slice<_1dd05db0c_Token>& _35766_tokens) {
	jule::Int _35817_i = 0LL;
	_1dd05db0c_Token _35917_tok = _35766_tokens[_35817_i];
	if (_35917_tok._field_id == static_cast<jule::Uint>(11LLU)) {
		(_35817_i)++;
		if ((_35817_i >= static_cast<jule::Int>(_35766_tokens.len())) || ((_35766_tokens[_35817_i]._field_id == static_cast<jule::Uint>(7LLU)) && (_35766_tokens[_35817_i]._field_kind == jule::Str("=", 1)))) {
			(*(this->self))._method_push_err(_35917_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;
		}
		jule::Ptr<_1dd05c765_TypeDecl> _36722_t;
		jule::Bool _36725_ok;
		std::tie(_36722_t,_36725_ok) = (*(this->self))._method_build_type(_35766_tokens,(&(_35817_i)),true);
		if (_36725_ok) {
			(*(_35748_v))._field_kind=_36722_t;
			if (_35817_i >= static_cast<jule::Int>(_35766_tokens.len())) {
				return;
			}
			_35917_tok=_35766_tokens[_35817_i];
		}
	}
	if (_35917_tok._field_id == static_cast<jule::Uint>(7LLU)) {
		if (_35917_tok._field_kind != jule::Str("=", 1)) {
			(*(this->self))._method_push_err(_35917_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		jule::Slice<_1dd05db0c_Token> _38221_expr_tokens = _35766_tokens.slice(_35817_i + 1LL);
		if (_38221_expr_tokens.len() == 0LL) {
			(*(this->self))._method_push_err(_35917_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;
		}
		(*(_35748_v))._field_expr=(*(this->self))._method_build_expr(_38221_expr_tokens);
	} else {
		(*(this->self))._method_push_err(_35917_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1ddb89cdc_Parser::_method_build_var_common(jule::Ptr<_1dd05c765_VarDecl>& _39341_v,jule::Slice<_1dd05db0c_Token> _39358_tokens) {
	(*(_39341_v))._field_token=_39358_tokens[0LL];
	if ((*(_39341_v))._field_token._field_id != static_cast<jule::Uint>(2LLU)) {
		(*(this->self))._method_push_err((*(_39341_v))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	(*(_39341_v))._field_ident=(*(_39341_v))._field_token._field_kind;
	(*(_39341_v))._field_kind=nullptr;
	if (_39358_tokens.len() > 1LL) {
		_39358_tokens=_39358_tokens.slice(1LL);
		(*(this->self))._method_build_var_type_and_expr(_39341_v,_39358_tokens);
	}
}



inline void _1ddb89cdc_Parser::_method_build_var_begin(jule::Ptr<_1dd05c765_VarDecl>& _40839_v,jule::Ptr<jule::Int> _40856_i,jule::Slice<_1dd05db0c_Token>& _40866_tokens) {
	_1dd05db0c_Token _40913_tok = _40866_tokens[(*(_40856_i))];
	{
		auto &_match_expr{ _40913_tok._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(38LLU)) {
			_case_begin_1a7de61d3:;
			{
				(*(_40839_v))._field_statically=true;
				goto _case_begin_1a7de5842;
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(34LLU)) {
			_case_begin_1a7de5842:;
			{
				((*(_40856_i)))++;
				if ((*(_40856_i)) >= static_cast<jule::Int>(_40866_tokens.len())) {
					(*this)._method_push_err(_40913_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				if (_40866_tokens[(*(_40856_i))]._field_id == static_cast<jule::Uint>(36LLU)) {
					(*(_40839_v))._field_mutable=true;
					((*(_40856_i)))++;
				}
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(9LLU)) {
			_case_begin_1a7de58a8:;
			{
				((*(_40856_i)))++;
				(*(_40839_v))._field_constant=true;
			}
		}
		else {
			_case_begin_1a7de5116:;
			{
				(*this)._method_push_err(_40913_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1a7de54bd:;
	}
	if ((*(_40856_i)) >= static_cast<jule::Int>(_40866_tokens.len())) {
		(*this)._method_push_err(_40913_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1dd05c765_VarDecl> _1ddb89cdc_Parser::_method_build_var(jule::Slice<_1dd05db0c_Token> _44233_tokens) {
	jule::Ptr<jule::Int> _44317_i = jule::new_ptr<jule::Int>(0LL);
	jule::Ptr<_1dd05c765_VarDecl> _44417_v = jule::new_struct<_1dd05c765_VarDecl>(new( std::nothrow ) _1dd05c765_VarDecl(jule::Ptr<_1dd05c765_ScopeTree>(),_44233_tokens[(*(_44317_i))],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1dd05c765_Directive>>(),jule::Ptr<_1dd05c765_CommentGroup>(),jule::Ptr<_1dd05c765_TypeDecl>(),jule::Ptr<_1dd05c765_Expr>()));
	(*(this->self))._method_build_var_begin(_44417_v,_44317_i,_44233_tokens);
	if ((*(_44317_i)) >= static_cast<jule::Int>(_44233_tokens.len())) {
		return nullptr;
	}
	_44233_tokens=_44233_tokens.slice((*(_44317_i)));
	if ((_44233_tokens[0LL]._field_id == static_cast<jule::Uint>(7LLU)) && (_44233_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		(*(_44417_v))._field_reference=true;
		if (_44233_tokens.len() == 1LL) {
			return nullptr;
		}
		_44233_tokens=_44233_tokens.slice(1LL);
	}
	(*(this->self))._method_build_var_common(_44417_v,_44233_tokens);
	return _44417_v;
}



inline jule::Ptr<_1dd05c765_GenericDecl> _1ddb89cdc_Parser::_method_build_generic(jule::Slice<_1dd05db0c_Token>& _46437_tokens) {
	if (_46437_tokens.len() > 1LL) {
		(*this)._method_push_err(_46437_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1dd05c765_GenericDecl> _46817_g = jule::new_struct<_1dd05c765_GenericDecl>(new( std::nothrow ) _1dd05c765_GenericDecl(_46437_tokens[0LL],jule::Str()));
	if ((*(_46817_g))._field_token._field_id != static_cast<jule::Uint>(2LLU)) {
		(*this)._method_push_err((*(_46817_g))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(*(_46817_g))._field_ident=(*(_46817_g))._field_token._field_kind;
	return _46817_g;
}



inline jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> _1ddb89cdc_Parser::_method_build_generics(jule::Slice<_1dd05db0c_Token>& _47938_tokens,_1dd05db0c_Token& _47956_error_token) {
	if (_47938_tokens.len() == 0LL) {
		(*this)._method_push_err(_47956_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _48518_parts;
	jule::Slice<_1db678789_Log> _48525_errors;
	std::tie(_48518_parts,_48525_errors) = _1ddb89cdc_parts(_47938_tokens,static_cast<jule::Uint>(8LLU),true);
	if (_48525_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_48525_errors);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> _49117_generics = jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>::alloc(0LL,static_cast<jule::Int>(_48518_parts.len()));
	{
		auto &expr = _48518_parts;
		auto it = expr.begin();
		_iter_begin_1a7e05e6d:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1ddb89cdc_part = *it;
			{
				_49117_generics = jule::alloc_for_append(_49117_generics,1);_49117_generics.__push((*this)._method_build_generic(_1ddb89cdc_part));
			}
			_iter_next_1a7e05e6d:;
			++it;
			goto _iter_begin_1a7e05e6d;
		}
		_iter_end_1a7e05e6d:;
	}
	return _49117_generics;
}



inline jule::Ptr<_1dd05c765_ParamDecl> _1ddb89cdc_Parser::_method_build_self_param(jule::Slice<_1dd05db0c_Token> _49939_tokens) {
	if (_49939_tokens.len() == 0LL) {
		return nullptr;
	}
	jule::Ptr<_1dd05c765_ParamDecl> _50417_param = jule::new_struct<_1dd05c765_ParamDecl>(new( std::nothrow ) _1dd05c765_ParamDecl());
	jule::Int _50717_i = 0LL;
	if (_49939_tokens[_50717_i]._field_id == static_cast<jule::Uint>(36LLU)) {
		(*(_50417_param))._field_mutable=true;
		(_50717_i)++;
		if (_50717_i >= static_cast<jule::Int>(_49939_tokens.len())) {
			(*this)._method_push_err(_49939_tokens[_50717_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_49939_tokens[_50717_i]._field_kind == jule::Str("&", 1)) {
		(*(_50417_param))._field_ident=jule::Str("&", 1);
		(_50717_i)++;
		if (_50717_i >= static_cast<jule::Int>(_49939_tokens.len())) {
			(*this)._method_push_err(_49939_tokens[_50717_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_49939_tokens[_50717_i]._field_id == static_cast<jule::Uint>(28LLU)) {
		(*(_50417_param))._field_ident+=jule::Str("self", 4);
		(*(_50417_param))._field_token=_49939_tokens[_50717_i];
		(_50717_i)++;
		if (_50717_i < static_cast<jule::Int>(_49939_tokens.len())) {
			(*this)._method_push_err(_49939_tokens[_50717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	}
	return _50417_param;
}



inline void _1ddb89cdc_Parser::_method_param_type_begin(jule::Ptr<_1dd05c765_ParamDecl>& _53840_param,jule::Int& _53864_i,jule::Slice<_1dd05db0c_Token>& _53873_tokens) {
	for (; _53864_i < static_cast<jule::Int>(_53873_tokens.len()); (_53864_i)++) {
		{
			_1dd05db0c_Token _54017_token = _53873_tokens[_53864_i];
			if (_54017_token._field_id != static_cast<jule::Uint>(7LLU)) {
				return;
			} else if (_54017_token._field_kind != jule::Str("...", 3)) {
				return;
			}
			if ((*(_53840_param))._field_variadic) {
				(*this)._method_push_err(_54017_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1a7e0e21d;
			}
			(*(_53840_param))._field_variadic=true;
		}
	_iter_next_1a7e0e21d:;
	}
	_iter_end_1a7e0e21d:;
}



inline void _1ddb89cdc_Parser::_method_build_param_type(jule::Ptr<_1dd05c765_ParamDecl>& _55541_param,jule::Slice<_1dd05db0c_Token>& _55565_tokens) {
	jule::Int _55617_i = 0LL;
	(*(this->self))._method_param_type_begin(_55541_param,_55617_i,_55565_tokens);
	if (_55617_i >= static_cast<jule::Int>(_55565_tokens.len())) {
		return;
	}
	std::tie((*(_55541_param))._field_kind,std::ignore) = (*(this->self))._method_build_type(_55565_tokens,(&(_55617_i)),true);
	if (_55617_i < static_cast<jule::Int>(_55565_tokens.len())) {
		(*(this->self))._method_push_err(_55565_tokens[_55617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1ddb89cdc_Parser::_method_param_body_id(jule::Ptr<_1dd05c765_ParamDecl> _56832_param,_1dd05db0c_Token _56851_token) {
	if (_1dd05db0c_is_ignore_ident(_56851_token._field_kind)) {
		(*(_56832_param))._field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	(*(_56832_param))._field_ident=_56851_token._field_kind;
}



inline void _1ddb89cdc_Parser::_method_build_param_body(jule::Ptr<_1dd05c765_ParamDecl>& _57641_param,jule::Ptr<jule::Int> _57664_i,jule::Slice<_1dd05db0c_Token> _57677_tokens) {
	(*(this->self))._method_param_body_id(_57641_param,_57677_tokens[(*(_57664_i))]);
	_1dd05db0c_Token _57817_tok = _57677_tokens[(*(_57664_i))];
	if (((*(_57664_i)) + 1LL) >= static_cast<jule::Int>(_57677_tokens.len())) {
		return;
	} else if (((_57677_tokens.len() - (*(_57664_i))) - 1LL) < 2LL) {
		(*(this->self))._method_push_err(_57817_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;
	}
	_57817_tok=_57677_tokens[(*(_57664_i)) + 1LL];
	if (_57817_tok._field_id != static_cast<jule::Uint>(11LLU)) {
		(*(this->self))._method_build_param_type(_57641_param,_57677_tokens);
		return;
	}
	_57677_tokens=_57677_tokens.slice((*(_57664_i)) + 2LL);
	(*(this->self))._method_build_param_type(_57641_param,_57677_tokens);
}



inline jule::Ptr<_1dd05c765_ParamDecl> _1ddb89cdc_Parser::_method_build_param(jule::Slice<_1dd05db0c_Token> _59735_tokens) {
	jule::Ptr<_1dd05c765_ParamDecl> _59817_param = jule::new_struct<_1dd05c765_ParamDecl>(new( std::nothrow ) _1dd05c765_ParamDecl(_59735_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1dd05c765_TypeDecl>(),jule::Str()));
	if ((*(_59817_param))._field_token._field_id == static_cast<jule::Uint>(36LLU)) {
		(*(_59817_param))._field_mutable=true;
		if (_59735_tokens.len() == 1LL) {
			(*(this->self))._method_push_err(_59735_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_59735_tokens=_59735_tokens.slice(1LL);
		(*(_59817_param))._field_token=_59735_tokens[0LL];
	}
	if (_59735_tokens.len() >= 3LL) {
		if (((*(_59817_param))._field_token._field_id == static_cast<jule::Uint>(7LLU)) && ((*(_59817_param))._field_token._field_kind == jule::Str("&", 1))) {
			if (_59735_tokens.len() == 1LL) {
				(*(this->self))._method_push_err(_59735_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
			if ((_59735_tokens[1LL]._field_id == static_cast<jule::Uint>(2LLU)) && (_59735_tokens[2LL]._field_id == static_cast<jule::Uint>(11LLU))) {
				(*(_59817_param))._field_reference=true;
				_59735_tokens=_59735_tokens.slice(1LL);
				(*(_59817_param))._field_token=_59735_tokens[0LL];
			}
		}
	}
	if ((*(_59817_param))._field_token._field_id != static_cast<jule::Uint>(2LLU)) {
		(*(_59817_param))._field_ident=jule::Str("<anonymous>", 11);
		(*(this->self))._method_build_param_type(_59817_param,_59735_tokens);
	} else {
		jule::Ptr<jule::Int> _63421_i = jule::new_ptr<jule::Int>(0LL);
		(*(this->self))._method_build_param_body(_59817_param,_63421_i,_59735_tokens);
	}
	return _59817_param;
}



inline void _1ddb89cdc_Parser::_method_check_params(jule::Slice<jule::Ptr<_1dd05c765_ParamDecl>>& _64136_params) {
	{
		auto &expr = _64136_params;
		auto it = expr.begin();
		_iter_begin_1a7e25773:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_ParamDecl> _1ddb89cdc_param = *it;
			{
				if ((*(_1ddb89cdc_param))._method_is_self() || ((*(_1ddb89cdc_param))._field_kind != nullptr)) {
					goto _iter_next_1a7e25773;
				}
				if ((*(_1ddb89cdc_param))._field_token._field_id == static_cast<jule::Uint>(0LLU)) {
					(*this)._method_push_err((*(_1ddb89cdc_param))._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					(*(_1ddb89cdc_param))._field_kind=jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl((*(_1ddb89cdc_param))._field_token,jule::Any(jule::new_struct<_1dd05c765_IdentTypeDecl>(new( std::nothrow ) _1dd05c765_IdentTypeDecl((*(_1ddb89cdc_param))._field_token,(*(_1ddb89cdc_param))._field_token._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>())))));
					(*(_1ddb89cdc_param))._field_ident=jule::Str("<anonymous>", 11);
					(*(_1ddb89cdc_param))._field_token=_1dd05db0c_Token();
				}
			}
			_iter_next_1a7e25773:;
			++it;
			goto _iter_begin_1a7e25773;
		}
		_iter_end_1a7e25773:;
	}
}



inline jule::Slice<jule::Ptr<_1dd05c765_ParamDecl>> _1ddb89cdc_Parser::_method_build_params(jule::Slice<_1dd05db0c_Token>& _66237_tokens,jule::Bool _66254_method) {
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _66318_parts;
	jule::Slice<_1db678789_Log> _66325_errs;
	std::tie(_66318_parts,_66325_errs) = _1ddb89cdc_parts(_66237_tokens,static_cast<jule::Uint>(8LLU),true);
	(*(this->self))._field_errors=jule::append((*(this->self))._field_errors,_66325_errs);
	if (_66318_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1dd05c765_ParamDecl>> _66917_params = nullptr;
	if (_66254_method && (_66318_parts.len() > 0LL)) {
		jule::Ptr<_1dd05c765_ParamDecl> _67121_param = (*(this->self))._method_build_self_param(_66318_parts[0LL]);
		if ((_67121_param != nullptr) && (*(_67121_param))._method_is_self()) {
			_66917_params = jule::alloc_for_append(_66917_params,1);_66917_params.__push(_67121_param);
			_66318_parts=_66318_parts.slice(1LL);
		}
	}
	{
		auto &expr = _66318_parts;
		auto it = expr.begin();
		_iter_begin_1a7e2d627:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1ddb89cdc_part = *it;
			{
				jule::Ptr<_1dd05c765_ParamDecl> _67921_param = (*(this->self))._method_build_param(_1ddb89cdc_part);
				if (_67921_param != nullptr) {
					_66917_params = jule::alloc_for_append(_66917_params,1);_66917_params.__push(_67921_param);
				}
			}
			_iter_next_1a7e2d627:;
			++it;
			goto _iter_begin_1a7e2d627;
		}
		_iter_end_1a7e2d627:;
	}
	(*(this->self))._method_check_params(_66917_params);
	return _66917_params;
}



inline std::tuple<jule::Ptr<_1dd05c765_RetTypeDecl>,jule::Bool> _1ddb89cdc_Parser::_method_build_multi_ret_type(jule::Slice<_1dd05db0c_Token>& _68945_tokens,jule::Int& _68967_i) {
	jule::Ptr<_1dd05c765_RetTypeDecl> _68977_t = jule::Ptr<_1dd05c765_RetTypeDecl>();
	jule::Bool _68994_ok = jule::Bool();
	_68977_t=jule::new_struct<_1dd05c765_RetTypeDecl>(new( std::nothrow ) _1dd05c765_RetTypeDecl());
	(_68967_i)++;
	if (_68967_i >= static_cast<jule::Int>(_68945_tokens.len())) {
		(_68967_i)--;
		std::tie((*(_68977_t))._field_kind,_68994_ok) = (*(this->self))._method_build_type(_68945_tokens,(&(_68967_i)),false);
		return std::make_tuple(_68977_t,_68994_ok);
	}
	(_68967_i)--;
	jule::Slice<_1dd05db0c_Token> _69917_range_tokens = _1ddb89cdc_range(_68967_i,jule::Str("(", 1),jule::Str(")", 1),_68945_tokens);
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _70118_parts;
	jule::Slice<_1db678789_Log> _70125_errs;
	std::tie(_70118_parts,_70125_errs) = _1ddb89cdc_parts(_69917_range_tokens,static_cast<jule::Uint>(8LLU),true);
	(*(this->self))._field_errors=jule::append((*(this->self))._field_errors,_70125_errs);
	if (_70118_parts.len() == 0LL) {
		return std::make_tuple(_68977_t,_68994_ok);
	}
	jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> _70717_types = jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>::alloc(0LL,static_cast<jule::Int>(_70118_parts.len()));
	(*(_68977_t))._field_idents=jule::Slice<_1dd05db0c_Token>::alloc(0LL,static_cast<jule::Int>(_70118_parts.len()));
	{
		auto &expr = _70118_parts;
		auto it = expr.begin();
		_iter_begin_1a7e34ee1:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1ddb89cdc_part = *it;
			{
				_1dd05db0c_Token _71021_token = _1ddb89cdc_part[0LL];
				jule::Int _71121_offset = 0LL;
				if (_1ddb89cdc_part.len() > 1LL) {
					_71021_token=_1ddb89cdc_part[1LL];
					if (_71021_token._field_id == static_cast<jule::Uint>(11LLU)) {
						_71121_offset=2LL;
						if (_1ddb89cdc_part.len() < 3LL) {
							(*(this->self))._method_push_err(_71021_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1a7e34ee1;
						}
					}
				}
				_71021_token=_1ddb89cdc_part[0LL];
				if (_71121_offset == 2LL) {
					if (_71021_token._field_id != static_cast<jule::Uint>(2LLU)) {
					}
					(*(_68977_t))._field_idents = jule::alloc_for_append((*(_68977_t))._field_idents,1);(*(_68977_t))._field_idents.__push(_71021_token);
				} else {
					_71021_token._field_kind=jule::Str("_", 1);
					(*(_68977_t))._field_idents = jule::alloc_for_append((*(_68977_t))._field_idents,1);(*(_68977_t))._field_idents.__push(_71021_token);
				}
				jule::Ptr<_1dd05c765_TypeDecl> _73622_t;
				std::tie(_73622_t,std::ignore) = (*(this->self))._method_build_type(_1ddb89cdc_part,(&(_71121_offset)),true);
				if (_71121_offset < static_cast<jule::Int>(_1ddb89cdc_part.len())) {
					(*(this->self))._method_push_err(_1ddb89cdc_part[_71121_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_70717_types = jule::alloc_for_append(_70717_types,1);_70717_types.__push(_73622_t);
			}
			_iter_next_1a7e34ee1:;
			++it;
			goto _iter_begin_1a7e34ee1;
		}
		_iter_end_1a7e34ee1:;
	}
	if (_70717_types.len() > 1LL) {
		(*(_68977_t))._field_kind=jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_68945_tokens[0LL],jule::Any(jule::new_struct<_1dd05c765_TupleTypeDecl>(new( std::nothrow ) _1dd05c765_TupleTypeDecl(_70717_types)))));
	} else {
		(*(_68977_t))._field_kind=_70717_types[0LL];
	}
	_68994_ok=true;
	return std::make_tuple(_68977_t,_68994_ok);
}



inline std::tuple<jule::Ptr<_1dd05c765_RetTypeDecl>,jule::Bool> _1ddb89cdc_Parser::_method_build_ret_type(jule::Slice<_1dd05db0c_Token>& _75939_tokens,jule::Int& _75961_i) {
	jule::Ptr<_1dd05c765_RetTypeDecl> _75971_t = jule::Ptr<_1dd05c765_RetTypeDecl>();
	jule::Bool _75988_ok = jule::Bool();
	_75971_t=jule::new_struct<_1dd05c765_RetTypeDecl>(new( std::nothrow ) _1dd05c765_RetTypeDecl());
	if (_75961_i >= static_cast<jule::Int>(_75939_tokens.len())) {
		return std::make_tuple(_75971_t,_75988_ok);
	}
	_1dd05db0c_Token _76517_token = _75939_tokens[_75961_i];
	{
		auto &_match_expr{ _76517_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(3LLU)) {
			_case_begin_1a7e40518:;
			{
				if (_76517_token._field_kind == jule::Str("{", 1)) {
					return std::make_tuple(_75971_t,_75988_ok);
				}
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(7LLU)) {
			_case_begin_1a7e4057e:;
			{
				if (_76517_token._field_kind == jule::Str("=", 1)) {
					return std::make_tuple(_75971_t,_75988_ok);
				}
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(11LLU)) {
			_case_begin_1a7e40606:;
			{
				if ((_75961_i + 1LL) >= static_cast<jule::Int>(_75939_tokens.len())) {
					(*(this->self))._method_push_err(_76517_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_75971_t,_75988_ok);
				}
				(_75961_i)++;
				_76517_token=_75939_tokens[_75961_i];
				if (_76517_token._field_id == static_cast<jule::Uint>(3LLU)) {
					{
						auto &_match_expr{ _76517_token._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1a7e43483:;
							{
								jule::Ptr<_1dd05c765_RetTypeDecl> _78830_decl;
								jule::Bool _78836_ok;
								std::tie(_78830_decl,_78836_ok) = (*(this->self))._method_build_multi_ret_type(_75939_tokens,_75961_i);
								_75971_t = _78830_decl;
								_75988_ok = _78836_ok;
								return std::make_tuple(_75971_t,_75988_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1a7e434e9:;
							{
								(*(this->self))._method_push_err(_76517_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_75971_t,_75988_ok);
							}
						}
						_match_end_1a7e433ea:;
					}
				}
				std::tie((*(_75971_t))._field_kind,_75988_ok) = (*(this->self))._method_build_type(_75939_tokens,(&(_75961_i)),true);
				return std::make_tuple(_75971_t,_75988_ok);
			}
		}
		_match_end_1a7e404b3:;
	}
	(_75961_i)++;
	(*(this->self))._method_push_err(_76517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_75971_t,_75988_ok);
}



inline jule::Ptr<_1dd05c765_FnDecl> _1ddb89cdc_Parser::_method_build_fn_prototype(jule::Slice<_1dd05db0c_Token>& _80743_tokens,jule::Int& _80765_i,jule::Bool _80773_method) {
	jule::Ptr<_1dd05c765_FnDecl> _80817_f = jule::new_struct<_1dd05c765_FnDecl>(new( std::nothrow ) _1dd05c765_FnDecl(_80743_tokens[_80765_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_1dd05c765_Directive>>(),jule::Ptr<_1dd05c765_CommentGroup>(),jule::Ptr<_1dd05c765_ScopeTree>(),jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>(),jule::Ptr<_1dd05c765_RetTypeDecl>(),jule::Slice<jule::Ptr<_1dd05c765_ParamDecl>>()));
	if ((*(_80817_f))._field_token._field_id == static_cast<jule::Uint>(38LLU)) {
		(*(_80817_f))._field_statically=true;
		(_80765_i)++;
		if (_80765_i >= static_cast<jule::Int>(_80743_tokens.len())) {
			(*(this->self))._method_push_err((*(_80817_f))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(*(_80817_f))._field_token=_80743_tokens[_80765_i];
	}
	if ((*(_80817_f))._field_token._field_id == static_cast<jule::Uint>(35LLU)) {
		(*(_80817_f))._field_unsafety=true;
		(_80765_i)++;
		if (_80765_i >= static_cast<jule::Int>(_80743_tokens.len())) {
			(*(this->self))._method_push_err((*(_80817_f))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(*(_80817_f))._field_token=_80743_tokens[_80765_i];
	}
	(_80765_i)++;
	if (_80765_i >= static_cast<jule::Int>(_80743_tokens.len())) {
		(*(this->self))._method_push_err((*(_80817_f))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1dd05db0c_Token _84113_tok = _80743_tokens[_80765_i];
	if (_84113_tok._field_id == static_cast<jule::Uint>(2LLU)) {
		(_80765_i)++;
		if (_80765_i >= static_cast<jule::Int>(_80743_tokens.len())) {
			(*(this->self))._method_push_err((*(_80817_f))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(*(_80817_f))._field_ident=_84113_tok._field_kind;
	} else {
		(*(_80817_f))._field_ident=jule::Str("<anonymous>", 11);
	}
	_1dd05db0c_Token _85313_error_token = _80743_tokens[_80765_i];
	jule::Slice<_1dd05db0c_Token> _85417_generics_tokens = _1ddb89cdc_range(_80765_i,jule::Str("[", 1),jule::Str("]", 1),_80743_tokens);
	if (_85417_generics_tokens != nullptr) {
		(*(_80817_f))._field_generics=(*(this->self))._method_build_generics(_85417_generics_tokens,_85313_error_token);
	}
	if (_80743_tokens[_80765_i]._field_kind != jule::Str("(", 1)) {
		(*(this->self))._method_push_err(_80743_tokens[_80765_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_1dd05db0c_Token> _86417_params_toks = _1ddb89cdc_range(_80765_i,jule::Str("(", 1),jule::Str(")", 1),_80743_tokens);
	if (_86417_params_toks.len() > 0LL) {
		(*(_80817_f))._field_params=(*(this->self))._method_build_params(_86417_params_toks,_80773_method);
	}
	if (_80765_i < static_cast<jule::Int>(_80743_tokens.len())) {
		_1dd05db0c_Token _87017_token = _80743_tokens[_80765_i];
		if ((_87017_token._field_id == static_cast<jule::Uint>(7LLU)) && (_87017_token._field_kind == jule::Str("!", 1))) {
			(*(_80817_f))._field_exceptional=true;
			(_80765_i)++;
		}
	}
	std::tie((*(_80817_f))._field_result,std::ignore) = (*(this->self))._method_build_ret_type(_80743_tokens,_80765_i);
	return _80817_f;
}



inline jule::Ptr<_1dd05c765_FnDecl> _1ddb89cdc_Parser::_method_build_fn(jule::Slice<_1dd05db0c_Token>& _88333_tokens,jule::Bool _88350_method,jule::Bool _88364_prototype) {
	jule::Int _88417_i = 0LL;
	jule::Ptr<_1dd05c765_FnDecl> _88517_f = (*(this->self))._method_build_fn_prototype(_88333_tokens,_88417_i,_88350_method);
	if (_88364_prototype) {
		if (_88417_i < static_cast<jule::Int>(_88333_tokens.len())) {
			(*(this->self))._method_push_err(_88333_tokens[_88417_i + 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		return _88517_f;
	} else if (_88517_f == nullptr) {
		return _88517_f;
	}
	if (_88417_i >= static_cast<jule::Int>(_88333_tokens.len())) {
		(*(this->self))._method_stop();
		(*(this->self))._method_push_err((*(_88517_f))._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_1dd05db0c_Token> _90117_block_tokens = _1ddb89cdc_range(_88417_i,jule::Str("{", 1),jule::Str("}", 1),_88333_tokens);
	if (_90117_block_tokens != nullptr) {
		(*(_88517_f))._field_scope=(*(this->self))._method_build_scope(_90117_block_tokens);
		(*((*(_88517_f))._field_scope))._field_unsafety=(*(_88517_f))._field_unsafety;
		if (_88417_i < static_cast<jule::Int>(_88333_tokens.len())) {
			(*(this->self))._method_push_err(_88333_tokens[_88417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	} else {
		(*(this->self))._method_stop();
		(*(this->self))._method_push_err((*(_88517_f))._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _88517_f;
}



inline jule::Slice<_1dd05db0c_Token> _1ddb89cdc_Parser::_method_get_use_decl_selectors(jule::Slice<_1dd05db0c_Token> _91745_tokens) {
	jule::Int _91817_i = 0LL;
	_91745_tokens=_1ddb89cdc_range(_91817_i,jule::Str("{", 1),jule::Str("}", 1),_91745_tokens);
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _92018_parts;
	jule::Slice<_1db678789_Log> _92025_errs;
	std::tie(_92018_parts,_92025_errs) = _1ddb89cdc_parts(_91745_tokens,static_cast<jule::Uint>(8LLU),true);
	if (_92025_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_92025_errs);
		return nullptr;
	}
	jule::Slice<_1dd05db0c_Token> _92617_selectors = jule::Slice<_1dd05db0c_Token>::alloc(0LL,static_cast<jule::Int>(_92018_parts.len()));
	{
		auto &expr = _92018_parts;
		auto it = expr.begin();
		_iter_begin_1a7e65e78:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1ddb89cdc_part = *it;
			{
				if (_1ddb89cdc_part.len() > 1LL) {
					(*this)._method_push_err(_1ddb89cdc_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_1dd05db0c_Token _93121_tok = _1ddb89cdc_part[0LL];
				if ((_93121_tok._field_id != static_cast<jule::Uint>(2LLU)) && (_93121_tok._field_id != static_cast<jule::Uint>(28LLU))) {
					(*this)._method_push_err(_93121_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1a7e65e78;
				}
				_92617_selectors = jule::alloc_for_append(_92617_selectors,1);_92617_selectors.__push(_93121_tok);
			}
			_iter_next_1a7e65e78:;
			++it;
			goto _iter_begin_1a7e65e78;
		}
		_iter_end_1a7e65e78:;
	}
	return _92617_selectors;
}



inline void _1ddb89cdc_Parser::_method_build_cpp_use_decl(jule::Ptr<_1dd05c765_UseDecl>& _94242_decl,jule::Slice<_1dd05db0c_Token>& _94259_tokens) {
	if (_94259_tokens.len() > 1LL) {
		(*this)._method_push_err(_94259_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_1dd05db0c_Token _94613_token = _94259_tokens[0LL];
	if ((_94613_token._field_id != static_cast<jule::Uint>(6LLU)) || ((_94613_token._field_kind[0LL] != '`') && (_94613_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_94613_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	(*(_94242_decl))._field_cpp_linked=true;
	(*(_94242_decl))._field_link_path=_94613_token._field_kind.slice(1LL,_94613_token._field_kind.len() - 1LL);
	if ((!(_1db676578_is_std_header_path((*(_94242_decl))._field_link_path)))) {
		(*(_94242_decl))._field_link_path=_1db7b8830_join(jule::Slice<jule::Str>({(*(_94613_token._field_file))._method_dir(),(*(_94242_decl))._field_link_path}));
	}
}



inline void _1ddb89cdc_Parser::_method_build_std_use_decl(jule::Ptr<_1dd05c765_UseDecl>& _95842_decl,jule::Slice<_1dd05db0c_Token> _95862_tokens) {
	(*(_95842_decl))._field_std=true;
	_1dd05db0c_Token _96117_token = _95862_tokens[0LL];
	if (_95862_tokens.len() < 3LL) {
		(*this)._method_push_err(_96117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_95862_tokens=_95862_tokens.slice(2LL);
	_96117_token=_95862_tokens[_95862_tokens.len() - 1LL];
	{
		auto &_match_expr{ _96117_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(23LLU)) {
			_case_begin_1a7e7232a:;
			{
				(*this)._method_push_err(_96117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(3LLU)) {
			_case_begin_1a7e72391:;
			{
				if (_96117_token._field_kind != jule::Str("}", 1)) {
					(*this)._method_push_err(_96117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<_1dd05db0c_Token> _97921_selectors = nullptr;
				std::tie(_95862_tokens,_97921_selectors) = _1ddb89cdc_range_last(_95862_tokens);
				(*(_95842_decl))._field_selected=(*this)._method_get_use_decl_selectors(_97921_selectors);
				if (_95862_tokens.len() == 0LL) {
					(*this)._method_push_err(_96117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_96117_token=_95862_tokens[_95862_tokens.len() - 1LL];
				if (_96117_token._field_id != static_cast<jule::Uint>(23LLU)) {
					(*this)._method_push_err(_96117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_95862_tokens=_95862_tokens.slice(0LL,_95862_tokens.len() - 1LL);
				if (_95862_tokens.len() == 0LL) {
					(*this)._method_push_err(_96117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(7LLU)) {
			_case_begin_1a7e72407:;
			{
				if (_96117_token._field_kind != jule::Str("*", 1)) {
					(*this)._method_push_err(_96117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_95862_tokens=_95862_tokens.slice(0LL,_95862_tokens.len() - 1LL);
				if (_95862_tokens.len() == 0LL) {
					(*this)._method_push_err(_96117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_96117_token=_95862_tokens[_95862_tokens.len() - 1LL];
				if (_96117_token._field_id != static_cast<jule::Uint>(23LLU)) {
					(*this)._method_push_err(_96117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_95862_tokens=_95862_tokens.slice(0LL,_95862_tokens.len() - 1LL);
				if (_95862_tokens.len() == 0LL) {
					(*this)._method_push_err(_96117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				(*(_95842_decl))._field_full=true;
			}
		}
		_match_end_1a7e722c5:;
	}
	(*(_95842_decl))._field_link_path=jule::Str("std::", 5) + _1ddb89cdc_tokstoa(_95862_tokens);
}



inline void _1ddb89cdc_Parser::_method_build_ident_use_decl(jule::Ptr<_1dd05c765_UseDecl>& _102244_decl,jule::Slice<_1dd05db0c_Token> _102264_tokens) {
	(*(_102244_decl))._field_std=false;
	_1dd05db0c_Token _102517_token = _102264_tokens[_102264_tokens.len() - 1LL];
	{
		auto &_match_expr{ _102517_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(23LLU)) {
			_case_begin_1a7e7dbe9:;
			{
				(*this)._method_push_err(_102517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(3LLU)) {
			_case_begin_1a7e7dc71:;
			{
				if (_102517_token._field_kind != jule::Str("}", 1)) {
					(*this)._method_push_err(_102517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<_1dd05db0c_Token> _103721_selectors = nullptr;
				std::tie(_102264_tokens,_103721_selectors) = _1ddb89cdc_range_last(_102264_tokens);
				(*(_102244_decl))._field_selected=(*this)._method_get_use_decl_selectors(_103721_selectors);
				if (_102264_tokens.len() == 0LL) {
					(*this)._method_push_err(_102517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_102517_token=_102264_tokens[_102264_tokens.len() - 1LL];
				if (_102517_token._field_id != static_cast<jule::Uint>(23LLU)) {
					(*this)._method_push_err(_102517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_102264_tokens=_102264_tokens.slice(0LL,_102264_tokens.len() - 1LL);
				if (_102264_tokens.len() == 0LL) {
					(*this)._method_push_err(_102517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(7LLU)) {
			_case_begin_1a7e7dcd7:;
			{
				if (_102517_token._field_kind != jule::Str("*", 1)) {
					(*this)._method_push_err(_102517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_102264_tokens=_102264_tokens.slice(0LL,_102264_tokens.len() - 1LL);
				if (_102264_tokens.len() == 0LL) {
					(*this)._method_push_err(_102517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_102517_token=_102264_tokens[_102264_tokens.len() - 1LL];
				if (_102517_token._field_id != static_cast<jule::Uint>(23LLU)) {
					(*this)._method_push_err(_102517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_102264_tokens=_102264_tokens.slice(0LL,_102264_tokens.len() - 1LL);
				if (_102264_tokens.len() == 0LL) {
					(*this)._method_push_err(_102517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				(*(_102244_decl))._field_full=true;
			}
		}
		_match_end_1a7e7db50:;
	}
	(*(_102244_decl))._field_link_path=_1ddb89cdc_tokstoa(_102264_tokens);
}



inline void _1ddb89cdc_Parser::_method_parse_use_decl(jule::Ptr<_1dd05c765_UseDecl>& _108738_decl,jule::Slice<_1dd05db0c_Token> _108758_tokens) {
	if ((*(_108738_decl))._field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_108738_decl,_108758_tokens);
		return;
	}
	_1dd05db0c_Token _109317_token = _108758_tokens[0LL];
	if (_109317_token._field_id != static_cast<jule::Uint>(2LLU)) {
		(*this)._method_push_err(_109317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	if ((_108758_tokens.len() > 2LL) && (_108758_tokens[1LL]._field_id == static_cast<jule::Uint>(12LLU))) {
		(*(_108738_decl))._field_alias=_109317_token._field_kind;
		if (_108758_tokens[2LL]._field_id != static_cast<jule::Uint>(2LLU)) {
			(*this)._method_push_err(_109317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;
		}
		_108758_tokens=_108758_tokens.slice(2LL);
		_109317_token=_108758_tokens[0LL];
	}
	
	{
		
		if (_109317_token._field_kind == jule::Str("std", 3)) {
			_case_begin_1a7e8ea40:;
			{
				(*this)._method_build_std_use_decl(_108738_decl,_108758_tokens);
			}
		}
		else {
			_case_begin_1a7e8e27b:;
			{
				(*this)._method_build_ident_use_decl(_108738_decl,_108758_tokens);
			}
		}
		_match_end_1a7e8e204:;
	}
}



inline jule::Ptr<_1dd05c765_UseDecl> _1ddb89cdc_Parser::_method_build_use_decl(jule::Slice<_1dd05db0c_Token> _112237_tokens,jule::Bool _112254_cpp_linked) {
	jule::Ptr<_1dd05c765_UseDecl> _112317_decl = jule::new_struct<_1dd05c765_UseDecl>(new( std::nothrow ) _1dd05c765_UseDecl(_112237_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_1dd05db0c_Token>(),_112254_cpp_linked,jule::Bool()));
	if (_112237_tokens.len() < 2LL) {
		(*this)._method_push_err((*(_112317_decl))._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	}
	_112237_tokens=_112237_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_112317_decl,_112237_tokens);
	return _112317_decl;
}



inline jule::Ptr<_1dd05c765_Expr> _1ddb89cdc_Parser::_method_build_enum_item_expr(jule::Ptr<jule::Int> _113644_i,jule::Slice<_1dd05db0c_Token>& _113658_tokens) {
	jule::Int _113717_brace_n = 0LL;
	jule::Int _113813_expr_start = (*(_113644_i));
	for (; (*(_113644_i)) < static_cast<jule::Int>(_113658_tokens.len()); ((*(_113644_i)))++) {
		{
			_1dd05db0c_Token _114017_t = _113658_tokens[(*(_113644_i))];
			if (_114017_t._field_id == static_cast<jule::Uint>(3LLU)) {
				{
					auto &_match_expr{ _114017_t._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a7e95c33:;
						{
							(_113717_brace_n)++;
							goto _iter_next_1a7e9446d;
						}
					}
					else {
						_case_begin_1a7e9543b:;
						{
							(_113717_brace_n)--;
						}
					}
					_match_end_1a7e954b3:;
				}
			}
			if (_113717_brace_n > 0LL) {
				goto _iter_next_1a7e9446d;
			}
			if ((_114017_t._field_id == static_cast<jule::Uint>(8LLU)) || (((*(_113644_i)) + 1LL) >= static_cast<jule::Int>(_113658_tokens.len()))) {
				jule::Slice<_1dd05db0c_Token> _115925_expr_tokens = nullptr;
				if (_114017_t._field_id == static_cast<jule::Uint>(8LLU)) {
					_115925_expr_tokens=_113658_tokens.slice(_113813_expr_start,(*(_113644_i)));
				} else {
					_115925_expr_tokens=_113658_tokens.slice(_113813_expr_start);
				}
				return (*(this->self))._method_build_expr(_115925_expr_tokens);
			}
		}
	_iter_next_1a7e9446d:;
	}
	_iter_end_1a7e9446d:;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1dd05c765_EnumItemDecl>> _1ddb89cdc_Parser::_method_build_enum_items(jule::Slice<_1dd05db0c_Token>& _117141_tokens) {
	jule::Slice<jule::Ptr<_1dd05c765_EnumItemDecl>> _117217_items = jule::Slice<jule::Ptr<_1dd05c765_EnumItemDecl>>::alloc(0LL,1LL);
	jule::Ptr<jule::Int> _117317_i = jule::new_ptr<jule::Int>(0LL);
	for (; (*(_117317_i)) < static_cast<jule::Int>(_117141_tokens.len()); ((*(_117317_i)))++) {
		{
			_1dd05db0c_Token _117521_t = _117141_tokens[(*(_117317_i))];
			if (_117521_t._field_id == static_cast<jule::Uint>(18LLU)) {
				goto _iter_next_1a7e9a0ab;
			}
			jule::Ptr<_1dd05c765_EnumItemDecl> _118021_item = jule::new_struct<_1dd05c765_EnumItemDecl>(new( std::nothrow ) _1dd05c765_EnumItemDecl());
			(*(_118021_item))._field_token=_117521_t;
			if ((*(_118021_item))._field_token._field_id != static_cast<jule::Uint>(2LLU)) {
				(*(this->self))._method_push_err((*(_118021_item))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				(*(this->self))._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			}
			(*(_118021_item))._field_ident=(*(_118021_item))._field_token._field_kind;
			if ((((*(_117317_i)) + 1LL) >= static_cast<jule::Int>(_117141_tokens.len())) || (_117141_tokens[(*(_117317_i)) + 1LL]._field_id == static_cast<jule::Uint>(8LLU))) {
				if (((*(_117317_i)) + 1LL) < static_cast<jule::Int>(_117141_tokens.len())) {
					((*(_117317_i)))++;
				}
				_117217_items = jule::alloc_for_append(_117217_items,1);_117217_items.__push(_118021_item);
				goto _iter_next_1a7e9a0ab;
			}
			((*(_117317_i)))++;
			_117521_t=_117141_tokens[(*(_117317_i))];
			((*(_117317_i)))++;
			if ((_117521_t._field_id != static_cast<jule::Uint>(7LLU)) || (_117521_t._field_kind != jule::Str("=", 1))) {
				(*(this->self))._method_push_err(_117521_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				(*(this->self))._method_push_suggestion(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_1a7e9a0ab;
			}
			if (((*(_117317_i)) >= static_cast<jule::Int>(_117141_tokens.len())) || (_117141_tokens[(*(_117317_i))]._field_id == static_cast<jule::Uint>(8LLU))) {
				(*(this->self))._method_push_err(_117521_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1a7e9a0ab;
			}
			(*(_118021_item))._field_expr=(*(this->self))._method_build_enum_item_expr(_117317_i,_117141_tokens);
			_117217_items = jule::alloc_for_append(_117217_items,1);_117217_items.__push(_118021_item);
		}
	_iter_next_1a7e9a0ab:;
	}
	_iter_end_1a7e9a0ab:;
	return _117217_items;
}



inline jule::Ptr<_1dd05c765_EnumDecl> _1ddb89cdc_Parser::_method_build_enum_decl(jule::Slice<_1dd05db0c_Token>& _121240_tokens) {
	if ((_121240_tokens.len() < 2LL) || (_121240_tokens.len() < 3LL)) {
		(*(this->self))._method_push_err(_121240_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1dd05c765_EnumDecl> _121717_e = jule::new_struct<_1dd05c765_EnumDecl>(new( std::nothrow ) _1dd05c765_EnumDecl(_121240_tokens[1LL],jule::Bool(),jule::Str(),jule::Ptr<_1dd05c765_TypeDecl>(),jule::Slice<jule::Ptr<_1dd05c765_EnumItemDecl>>(),jule::Ptr<_1dd05c765_CommentGroup>()));
	if ((*(_121717_e))._field_token._field_id != static_cast<jule::Uint>(2LLU)) {
		(*(this->self))._method_push_err((*(_121717_e))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(*(_121717_e))._field_ident=(*(_121717_e))._field_token._field_kind;
	jule::Int _122517_i = 2LL;
	if (_121240_tokens[_122517_i]._field_id == static_cast<jule::Uint>(11LLU)) {
		(_122517_i)++;
		if (_122517_i >= static_cast<jule::Int>(_121240_tokens.len())) {
			(*(this->self))._method_push_err(_121240_tokens[_122517_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _121717_e;
		}
		std::tie((*(_121717_e))._field_kind,std::ignore) = (*(this->self))._method_build_type(_121240_tokens,(&(_122517_i)),true);
		if (_122517_i >= static_cast<jule::Int>(_121240_tokens.len())) {
			(*(this->self))._method_stop();
			(*(this->self))._method_push_err((*(_121717_e))._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			(*(this->self))._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _121717_e;
		}
	} else {
		(*(_121717_e))._field_kind=nullptr;
	}
	jule::Slice<_1dd05db0c_Token> _124217_item_tokens = _1ddb89cdc_range(_122517_i,jule::Str("{", 1),jule::Str("}", 1),_121240_tokens);
	if (_124217_item_tokens == nullptr) {
		(*(this->self))._method_stop();
		(*(this->self))._method_push_err((*(_121717_e))._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _121717_e;
	} else if (_122517_i < static_cast<jule::Int>(_121240_tokens.len())) {
		(*(this->self))._method_push_err(_121240_tokens[_122517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	(*(_121717_e))._field_items=(*(this->self))._method_build_enum_items(_124217_item_tokens);
	return _121717_e;
}



inline jule::Ptr<_1dd05c765_FieldDecl> _1ddb89cdc_Parser::_method_build_field(jule::Slice<_1dd05db0c_Token> _125535_tokens) {
	jule::Ptr<_1dd05c765_FieldDecl> _125617_f = jule::new_struct<_1dd05c765_FieldDecl>(new( std::nothrow ) _1dd05c765_FieldDecl());
	(*(_125617_f))._field_public=_125535_tokens[0LL]._field_id == static_cast<jule::Uint>(21LLU);
	if ((*(_125617_f))._field_public) {
		if (_125535_tokens.len() == 1LL) {
			(*(this->self))._method_push_err(_125535_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_125535_tokens=_125535_tokens.slice(1LL);
	}
	(*(_125617_f))._field_mutable=_125535_tokens[0LL]._field_id == static_cast<jule::Uint>(36LLU);
	if ((*(_125617_f))._field_mutable) {
		if (_125535_tokens.len() == 1LL) {
			(*(this->self))._method_push_err(_125535_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_125535_tokens=_125535_tokens.slice(1LL);
	}
	(*(_125617_f))._field_token=_125535_tokens[0LL];
	if ((*(_125617_f))._field_token._field_id != static_cast<jule::Uint>(2LLU)) {
		(*(this->self))._method_push_err((*(_125617_f))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	(*(_125617_f))._field_ident=(*(_125617_f))._field_token._field_kind;
	if (_125535_tokens.len() == 1LL) {
		(*(this->self))._method_push_err(_125535_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_125535_tokens[1LL]._field_id != static_cast<jule::Uint>(11LLU)) {
		(*(this->self))._method_push_err(_125535_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	_125535_tokens=_125535_tokens.slice(2LL);
	jule::Int _129317_i = 0LL;
	std::tie((*(_125617_f))._field_kind,std::ignore) = (*(this->self))._method_build_type(_125535_tokens,(&(_129317_i)),true);
	if (_129317_i < static_cast<jule::Int>(_125535_tokens.len())) {
		_1dd05db0c_Token _129617_token = _125535_tokens[_129317_i];
		if ((_129617_token._field_id != static_cast<jule::Uint>(7LLU)) || (_129617_token._field_kind != jule::Str("=", 1))) {
			(*(this->self))._method_push_err(_125535_tokens[_129317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_129317_i)++;
		if (_129317_i >= static_cast<jule::Int>(_125535_tokens.len())) {
			(*(this->self))._method_push_err(_129617_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		}
		_125535_tokens=_125535_tokens.slice(_129317_i);
		(*(_125617_f))._field_default=(*(this->self))._method_build_expr(_125535_tokens);
	}
	return _125617_f;
}



inline jule::Slice<jule::Ptr<_1dd05c765_FieldDecl>> _1ddb89cdc_Parser::_method_build_struct_decl_fields(jule::Slice<_1dd05db0c_Token> _131348_tokens) {
	jule::Slice<jule::Ptr<_1dd05c765_FieldDecl>> _131417_fields = nullptr;
	jule::Slice<jule::Ptr<_1dd229ca6_Stmt>> _131517_stmts = _1dd229ca6_split_stmts(_131348_tokens);
	{
		auto &expr = _131517_stmts;
		auto it = expr.begin();
		_iter_begin_1a7ebebe6:;
		if (it != expr.end()) {
			jule::Ptr<_1dd229ca6_Stmt> _1ddb89cdc_stmt = *it;
			{
				_131348_tokens=(*(_1ddb89cdc_stmt))._field_tokens;
				if (_131348_tokens[0LL]._field_id == static_cast<jule::Uint>(18LLU)) {
					goto _iter_next_1a7ebebe6;
				}
				jule::Ptr<_1dd05c765_FieldDecl> _132121_f = (*(this->self))._method_build_field(_131348_tokens);
				_131417_fields = jule::alloc_for_append(_131417_fields,1);_131417_fields.__push(_132121_f);
			}
			_iter_next_1a7ebebe6:;
			++it;
			goto _iter_begin_1a7ebebe6;
		}
		_iter_end_1a7ebebe6:;
	}
	return _131417_fields;
}



inline jule::Ptr<_1dd05c765_StructDecl> _1ddb89cdc_Parser::_method_build_struct_decl(jule::Slice<_1dd05db0c_Token>& _132742_tokens) {
	if (_132742_tokens.len() < 3LL) {
		(*(this->self))._method_push_err(_132742_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Int _133317_i = 1LL;
	jule::Ptr<_1dd05c765_StructDecl> _133417_s = jule::new_struct<_1dd05c765_StructDecl>(new( std::nothrow ) _1dd05c765_StructDecl(_132742_tokens[_133317_i],jule::Str(),jule::Slice<jule::Ptr<_1dd05c765_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1dd05c765_Directive>>(),jule::Ptr<_1dd05c765_CommentGroup>(),jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>()));
	if ((*(_133417_s))._field_token._field_id != static_cast<jule::Uint>(2LLU)) {
		(*(this->self))._method_push_err((*(_133417_s))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_133317_i)++;
	if (_133317_i >= static_cast<jule::Int>(_132742_tokens.len())) {
		(*(this->self))._method_push_err(_132742_tokens[_133317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _133417_s;
	}
	(*(_133417_s))._field_ident=(*(_133417_s))._field_token._field_kind;
	_1dd05db0c_Token _134813_error_token = _132742_tokens[_133317_i];
	jule::Slice<_1dd05db0c_Token> _134917_generics_tokens = _1ddb89cdc_range(_133317_i,jule::Str("[", 1),jule::Str("]", 1),_132742_tokens);
	if (_134917_generics_tokens != nullptr) {
		(*(_133417_s))._field_generics=(*(this->self))._method_build_generics(_134917_generics_tokens,_134813_error_token);
	}
	if (_133317_i >= static_cast<jule::Int>(_132742_tokens.len())) {
		(*(this->self))._method_push_err(_132742_tokens[_133317_i - 1LL],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_s;
	}
	jule::Slice<_1dd05db0c_Token> _135917_body_tokens = _1ddb89cdc_range(_133317_i,jule::Str("{", 1),jule::Str("}", 1),_132742_tokens);
	if (_135917_body_tokens == nullptr) {
		(*(this->self))._method_stop();
		(*(this->self))._method_push_err((*(_133417_s))._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_s;
	}
	if (_133317_i < static_cast<jule::Int>(_132742_tokens.len())) {
		(*(this->self))._method_push_err(_132742_tokens[_133317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	(*(_133417_s))._field_fields=(*(this->self))._method_build_struct_decl_fields(_135917_body_tokens);
	return _133417_s;
}



inline void _1ddb89cdc_Parser::_method_check_method_receiver(jule::Ptr<_1dd05c765_FnDecl>& _137341_f) {
	if ((*(_137341_f))._field_statically) {
		if (((*(_137341_f))._field_params.len() > 0LL) && (*((*(_137341_f))._field_params[0LL]))._method_is_self()) {
			(*this)._method_push_err((*(_137341_f))._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		}
		return;
	}
	if ((*(_137341_f))._field_params.len() == 0LL) {
		(*this)._method_push_err((*(_137341_f))._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1dd05c765_ParamDecl> _138613_param = (*(_137341_f))._field_params[0LL];
	if ((!((*(_138613_param))._method_is_self()))) {
		(*this)._method_push_err((*(_137341_f))._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
}



inline jule::Slice<jule::Ptr<_1dd05c765_FnDecl>> _1ddb89cdc_Parser::_method_build_trait_methods(jule::Slice<_1dd05db0c_Token> _139343_tokens) {
	jule::Slice<jule::Ptr<_1dd05c765_FnDecl>> _139417_methods = nullptr;
	jule::Slice<jule::Ptr<_1dd229ca6_Stmt>> _139517_stmts = _1dd229ca6_split_stmts(_139343_tokens);
	{
		auto &expr = _139517_stmts;
		auto it = expr.begin();
		_iter_begin_1a7ed380e:;
		if (it != expr.end()) {
			jule::Ptr<_1dd229ca6_Stmt> _1ddb89cdc_stmt = *it;
			{
				_139343_tokens=_1ddb659bb_eliminate_comments((*(_1ddb89cdc_stmt))._field_tokens);
				if (_139343_tokens.len() == 0LL) {
					goto _iter_next_1a7ed380e;
				}
				jule::Bool _140221_is_pub = false;
				if (_139343_tokens[0LL]._field_id == static_cast<jule::Uint>(21LLU)) {
					_140221_is_pub=true;
					if (_139343_tokens.len() == 1LL) {
						(*(this->self))._method_push_err(_139343_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1a7ed380e;
					}
					_139343_tokens=_139343_tokens.slice(1LL);
				}
				jule::Ptr<_1dd05c765_FnDecl> _141221_f = (*(this->self))._method_build_fn(_139343_tokens,true,true);
				if (_141221_f != nullptr) {
					if ((*(_141221_f))._method_is_anon()) {
						(*(this->self))._method_push_err((*(_141221_f))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
					(*(this->self))._method_check_method_receiver(_141221_f);
					if ((*(_141221_f))._field_generics.len() > 0LL) {
						(*(this->self))._method_push_err((*(_141221_f))._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					}
					(*(_141221_f))._field_public=_140221_is_pub;
					_139417_methods = jule::alloc_for_append(_139417_methods,1);_139417_methods.__push(_141221_f);
				}
			}
			_iter_next_1a7ed380e:;
			++it;
			goto _iter_begin_1a7ed380e;
		}
		_iter_end_1a7ed380e:;
	}
	return _139417_methods;
}



inline jule::Ptr<_1dd05c765_TraitDecl> _1ddb89cdc_Parser::_method_build_trait_decl(jule::Slice<_1dd05db0c_Token>& _142841_tokens) {
	if (_142841_tokens.len() < 3LL) {
		(*(this->self))._method_push_err(_142841_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1dd05c765_TraitDecl> _143317_t = jule::new_struct<_1dd05c765_TraitDecl>(new( std::nothrow ) _1dd05c765_TraitDecl(_142841_tokens[1LL],jule::Str(),jule::Bool(),jule::Ptr<_1dd05c765_CommentGroup>(),jule::Slice<jule::Ptr<_1dd05c765_FnDecl>>()));
	if ((*(_143317_t))._field_token._field_id != static_cast<jule::Uint>(2LLU)) {
		(*(this->self))._method_push_err((*(_143317_t))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(*(_143317_t))._field_ident=(*(_143317_t))._field_token._field_kind;
	jule::Int _144117_i = 2LL;
	jule::Slice<_1dd05db0c_Token> _144217_body_tokens = _1ddb89cdc_range(_144117_i,jule::Str("{", 1),jule::Str("}", 1),_142841_tokens);
	if (_144217_body_tokens == nullptr) {
		(*(this->self))._method_stop();
		(*(this->self))._method_push_err((*(_143317_t))._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_144117_i < static_cast<jule::Int>(_142841_tokens.len())) {
		(*(this->self))._method_push_err(_142841_tokens[_144117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	(*(_143317_t))._field_methods=(*(this->self))._method_build_trait_methods(_144217_body_tokens);
	return _143317_t;
}



inline jule::Ptr<_1dd05c765_FnDecl> _1ddb89cdc_Parser::_method_build_cpp_link_fn(jule::Slice<_1dd05db0c_Token> _145641_tokens) {
	_145641_tokens=_145641_tokens.slice(1LL);
	jule::Ptr<_1dd05c765_FnDecl> _145817_f = (*(this->self))._method_build_fn(_145641_tokens,false,true);
	if (_145817_f != nullptr) {
		if ((*(_145817_f))._method_is_anon()) {
			(*(this->self))._method_push_err((*(_145817_f))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		(*(_145817_f))._field_cpp_linked=true;
	}
	return _145817_f;
}



inline jule::Ptr<_1dd05c765_VarDecl> _1ddb89cdc_Parser::_method_build_cpp_link_var(jule::Slice<_1dd05db0c_Token> _146842_tokens) {
	_146842_tokens=_146842_tokens.slice(1LL);
	jule::Ptr<_1dd05c765_VarDecl> _147017_v = (*(this->self))._method_build_var(_146842_tokens);
	if (_147017_v != nullptr) {
		(*(_147017_v))._field_cpp_linked=true;
		if ((*(_147017_v))._field_expr != nullptr) {
			(*(this->self))._method_push_err((*(_147017_v))._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		}
	}
	return _147017_v;
}



inline jule::Ptr<_1dd05c765_StructDecl> _1ddb89cdc_Parser::_method_build_cpp_link_struct(jule::Slice<_1dd05db0c_Token> _148045_tokens) {
	_148045_tokens=_148045_tokens.slice(1LL);
	jule::Ptr<_1dd05c765_StructDecl> _148217_s = (*(this->self))._method_build_struct_decl(_148045_tokens);
	if (_148217_s != nullptr) {
		(*(_148217_s))._field_cpp_linked=true;
	}
	return _148217_s;
}



inline jule::Ptr<_1dd05c765_TypeAliasDecl> _1ddb89cdc_Parser::_method_build_cpp_link_type_alias(jule::Slice<_1dd05db0c_Token> _148949_tokens) {
	_148949_tokens=_148949_tokens.slice(1LL);
	jule::Ptr<_1dd05c765_TypeAliasDecl> _149117_t = (*(this->self))._method_build_type_alias_decl(_148949_tokens);
	if (_149117_t != nullptr) {
		(*(_149117_t))._field_cpp_linked=true;
	}
	return _149117_t;
}



inline jule::Ptr<_1dd05c765_UseDecl> _1ddb89cdc_Parser::_method_build_cpp_link_use(jule::Slice<_1dd05db0c_Token> _149842_tokens) {
	if (_149842_tokens.len() == 1LL) {
		(*(this->self))._method_push_err(_149842_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_149842_tokens=_149842_tokens.slice(1LL);
	
	return (*(this->self))._method_build_use_decl(_149842_tokens,true);
}



inline jule::Any _1ddb89cdc_Parser::_method_build_cpp_link(jule::Slice<_1dd05db0c_Token>& _150939_tokens) {
	_1dd05db0c_Token _151017_token = _150939_tokens[0LL];
	if (_150939_tokens.len() == 1LL) {
		(*(this->self))._method_push_err(_151017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	_151017_token=_150939_tokens[1LL];
	{
		auto &_match_expr{ _151017_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(19LLU)) {
			_case_begin_1a80009b3:;
			{
				return jule::Any((*(this->self))._method_build_cpp_link_use(_150939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(33LLU) || _match_expr == static_cast<jule::Uint>(35LLU)) {
			_case_begin_1a8000a29:;
			{
				return jule::Any((*(this->self))._method_build_cpp_link_fn(_150939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(9LLU) || _match_expr == static_cast<jule::Uint>(34LLU)) {
			_case_begin_1a8000a90:;
			{
				return jule::Any((*(this->self))._method_build_cpp_link_var(_150939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(25LLU)) {
			_case_begin_1a8000b06:;
			{
				return jule::Any((*(this->self))._method_build_cpp_link_struct(_150939_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(10LLU)) {
			_case_begin_1a8001398:;
			{
				return jule::Any((*(this->self))._method_build_cpp_link_type_alias(_150939_tokens));
			}
		}
		else {
			_case_begin_1a7eee7c5:;
			{
				(*(this->self))._method_push_err(_151017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a80007b5:;
	}
	return jule::Any(nullptr);
}



inline jule::Ptr<_1dd05c765_FnDecl> _1ddb89cdc_Parser::_method_get_method(jule::Slice<_1dd05db0c_Token>& _154035_tokens) {
	jule::Int _154117_i = 0LL;
	_1dd05db0c_Token _154217_token = _154035_tokens[_154117_i];
	if (_154217_token._field_id == static_cast<jule::Uint>(38LLU)) {
		if ((_154117_i + 1LL) >= static_cast<jule::Int>(_154035_tokens.len())) {
			(*(this->self))._method_push_err(_154217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_154117_i)++;
		_154217_token=_154035_tokens[_154117_i];
	}
	if (_154217_token._field_id == static_cast<jule::Uint>(35LLU)) {
		if ((_154117_i + 1LL) >= static_cast<jule::Int>(_154035_tokens.len())) {
			(*(this->self))._method_push_err(_154217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_154117_i)++;
		_154217_token=_154035_tokens[_154117_i];
	}
	if (_154217_token._field_id != static_cast<jule::Uint>(33LLU)) {
		(*(this->self))._method_push_err(_154217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1dd05c765_FnDecl> _156617_f = (*(this->self))._method_build_fn(_154035_tokens,true,false);
	if ((_156617_f != nullptr) && (*(_156617_f))._method_is_anon()) {
		(*(this->self))._method_push_err((*(_156617_f))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _156617_f;
}



inline void _1ddb89cdc_Parser::_method_parse_impl_body(jule::Ptr<_1dd05c765_Impl>& _157340_ipl,jule::Slice<_1dd05db0c_Token>& _157357_tokens) {
	jule::Slice<jule::Ptr<_1dd229ca6_Stmt>> _157417_stmts = _1dd229ca6_split_stmts(_157357_tokens);
	{
		auto &expr = _157417_stmts;
		auto it = expr.begin();
		_iter_begin_1a800bdba:;
		if (it != expr.end()) {
			jule::Ptr<_1dd229ca6_Stmt> _1ddb89cdc_stmt = *it;
			{
				_157357_tokens=(*(_1ddb89cdc_stmt))._field_tokens;
				_1dd05db0c_Token _157721_token = _157357_tokens[0LL];
				jule::Bool _157821_is_pub = false;
				{
					auto &_match_expr{ _157721_token._field_id };
					
					if (_match_expr == static_cast<jule::Uint>(18LLU)) {
						_case_begin_1a800d33e:;
						{
							goto _iter_next_1a800bdba;
						}
					}
					else if (_match_expr == static_cast<jule::Uint>(39LLU)) {
						_case_begin_1a800d3a5:;
						{
							(*(this->self))._method_push_directive((*(this->self))._method_build_directive(_157357_tokens));
							goto _iter_next_1a800bdba;
						}
					}
					else if (_match_expr == static_cast<jule::Uint>(21LLU)) {
						_case_begin_1a800d42c:;
						{
							_157821_is_pub=true;
							if (_157357_tokens.len() == 1LL) {
								(*(this->self))._method_push_err(_157357_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1a800bdba;
							}
							_157357_tokens=_157357_tokens.slice(1LL);
							if (_157357_tokens.len() > 0LL) {
								_157721_token=_157357_tokens[0LL];
							}
						}
					}
					_match_end_1a800d2d9:;
				}
				{
					auto &_match_expr{ _157721_token._field_id };
					
					if (_match_expr == static_cast<jule::Uint>(9LLU)) {
						_case_begin_1a8011111:;
						{
							jule::Ptr<_1dd05c765_VarDecl> _160225_v = (*(this->self))._method_build_var(_157357_tokens);
							if (_160225_v != nullptr) {
								(*(_160225_v))._field_public=_157821_is_pub;
								(*(_157340_ipl))._field_statics = jule::alloc_for_append((*(_157340_ipl))._field_statics,1);(*(_157340_ipl))._field_statics.__push(_160225_v);
							}
						}
					}
					else if (_match_expr == static_cast<jule::Uint>(38LLU) || _match_expr == static_cast<jule::Uint>(33LLU) || _match_expr == static_cast<jule::Uint>(35LLU)) {
						_case_begin_1a800e86d:;
						{
							jule::Ptr<_1dd05c765_FnDecl> _161125_f = (*(this->self))._method_get_method(_157357_tokens);
							if (_161125_f != nullptr) {
								(*(this->self))._method_check_method_receiver(_161125_f);
								(*(this->self))._method_apply_fn_meta(_161125_f,_157821_is_pub);
								(*(_157340_ipl))._field_methods = jule::alloc_for_append((*(_157340_ipl))._field_methods,1);(*(_157340_ipl))._field_methods.__push(_161125_f);
							}
						}
					}
					else {
						_case_begin_1a800d4a4:;
						{
							(*(this->self))._method_push_err(_157721_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1a800bdba;
						}
					}
					_match_end_1a8011232:;
				}
			}
			_iter_next_1a800bdba:;
			++it;
			goto _iter_begin_1a800bdba;
		}
		_iter_end_1a800bdba:;
	}
}



inline jule::Ptr<_1dd05c765_Impl> _1ddb89cdc_Parser::_method_build_impl(jule::Slice<_1dd05db0c_Token> _162534_tokens) {
	_1dd05db0c_Token _162617_token = _162534_tokens[0LL];
	if (_162534_tokens.len() < 2LL) {
		(*(this->self))._method_push_err(_162617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Int _163217_i = 1LL;
	jule::Ptr<_1dd05c765_TypeDecl> _163418_base;
	jule::Bool _163428_ok;
	std::tie(_163418_base,_163428_ok) = (*(this->self))._method_build_type(_162534_tokens,(&(_163217_i)),true);
	if ((!(_163428_ok))) {
		return nullptr;
	}
	if (_163217_i >= static_cast<jule::Int>(_162534_tokens.len())) {
		(*(this->self))._method_push_err(_162617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1dd05c765_Impl> _164317_ipl = jule::new_struct<_1dd05c765_Impl>(new( std::nothrow ) _1dd05c765_Impl(_163418_base,jule::Ptr<_1dd05c765_TypeDecl>(),jule::Slice<jule::Ptr<_1dd05c765_FnDecl>>(),jule::Slice<jule::Ptr<_1dd05c765_VarDecl>>()));
	_162617_token=_162534_tokens[_163217_i];
	if (_162617_token._field_id != static_cast<jule::Uint>(12LLU)) {
		if ((_162617_token._field_id == static_cast<jule::Uint>(3LLU)) && (_162617_token._field_kind == jule::Str("{", 1))) {
			std::tie((*(_164317_ipl))._field_base,(*(_164317_ipl))._field_dest) = std::make_tuple((*(_164317_ipl))._field_dest,(*(_164317_ipl))._field_base);
			goto _julec_label_body;
		}
		(*(this->self))._method_stop();
		(*(this->self))._method_push_err(_162617_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	(_163217_i)++;
	if (_163217_i >= static_cast<jule::Int>(_162534_tokens.len())) {
		(*(this->self))._method_stop();
		(*(this->self))._method_push_err(_162617_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie((*(_164317_ipl))._field_dest,_163428_ok) = (*(this->self))._method_build_type(_162534_tokens,(&(_163217_i)),true);
	if ((!(_163428_ok))) {
		return nullptr;
	}
	if (_163217_i >= static_cast<jule::Int>(_162534_tokens.len())) {
		(*(this->self))._method_stop();
		(*(this->self))._method_push_err(_162617_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_body:;
	jule::Slice<_1dd05db0c_Token> _168317_body_tokens = _1ddb89cdc_range(_163217_i,jule::Str("{", 1),jule::Str("}", 1),_162534_tokens);
	if (_168317_body_tokens == nullptr) {
		(*(this->self))._method_stop();
		(*(this->self))._method_push_err(_162617_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_163217_i < static_cast<jule::Int>(_162534_tokens.len())) {
		(*(this->self))._method_push_err(_162534_tokens[_163217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	(*(this->self))._method_parse_impl_body(_164317_ipl,_168317_body_tokens);
	return _164317_ipl;
}



inline jule::Any _1ddb89cdc_Parser::_method_build_node_data(jule::Slice<_1dd05db0c_Token>& _169740_tokens) {
	_1dd05db0c_Token _169817_token = _169740_tokens[0LL];
	{
		auto &_match_expr{ _169817_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(19LLU)) {
			_case_begin_1a8027325:;
			{
				
				return jule::Any((*(this->self))._method_build_use_decl(_169740_tokens,false));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(33LLU) || _match_expr == static_cast<jule::Uint>(35LLU)) {
			_case_begin_1a80267b9:;
			{
				jule::Ptr<_1dd05c765_FnDecl> _170621_f = (*(this->self))._method_build_fn(_169740_tokens,false,false);
				if (_170621_f != nullptr) {
					(*(_170621_f))._field_global=true;
					if ((*(_170621_f))._method_is_anon()) {
						(*(this->self))._method_push_err((*(_170621_f))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
				}
				return jule::Any(_170621_f);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(34LLU) || _match_expr == static_cast<jule::Uint>(9LLU) || _match_expr == static_cast<jule::Uint>(36LLU) || _match_expr == static_cast<jule::Uint>(38LLU)) {
			_case_begin_1a8026830:;
			{
				return jule::Any((*(this->self))._method_build_var(_169740_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(10LLU)) {
			_case_begin_1a8026896:;
			{
				return jule::Any((*(this->self))._method_build_type_alias_decl(_169740_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(24LLU)) {
			_case_begin_1a802690c:;
			{
				return jule::Any((*(this->self))._method_build_enum_decl(_169740_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(25LLU)) {
			_case_begin_1a8026973:;
			{
				return jule::Any((*(this->self))._method_build_struct_decl(_169740_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(29LLU)) {
			_case_begin_1a80275bc:;
			{
				return jule::Any((*(this->self))._method_build_trait_decl(_169740_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(30LLU)) {
			_case_begin_1a8027633:;
			{
				return jule::Any((*(this->self))._method_build_impl(_169740_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(31LLU)) {
			_case_begin_1a8027699:;
			{
				return (*(this->self))._method_build_cpp_link(_169740_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(39LLU)) {
			_case_begin_1a8027710:;
			{
				return jule::Any((*(this->self))._method_build_directive(_169740_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(18LLU)) {
			_case_begin_1a8027776:;
			{
				return jule::Any(_1ddb89cdc_build_comment(_169817_token));
			}
		}
		else {
			_case_begin_1a8026038:;
			{
				(*(this->self))._method_push_err(_169817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a8026445:;
	}
}



inline void _1ddb89cdc_Parser::_method_check_comment_group(_1dd05c765_Node& _175139_node) {
	if ((*this)._field_comment_group == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _175139_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_Comment>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_Directive>>()) {
			_case_begin_1a8030d89:;
		}
		else {
			_case_begin_1a8031098:;
			{
				(*this)._field_comment_group=nullptr;
			}
		}
		_match_end_1a80309b0:;
	}
}



inline void _1ddb89cdc_Parser::_method_check_directive(_1dd05c765_Node& _176535_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _176535_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_Directive>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_Comment>>()) {
			_case_begin_1a8032de1:;
		}
		else {
			_case_begin_1a803274d:;
			{
				if ((*this)._field_directives.len() != 0LL) {
					(*this)._method_push_err((*((*this)._field_directives[0LL]))._field_tag,jule::Str("this directive is out of scope, cant assign to any define", 57),jule::Slice<jule::Any>());
				}
				(*this)._field_directives=nullptr;
			}
		}
		_match_end_1a8032165:;
	}
}



inline void _1ddb89cdc_Parser::_method_apply_fn_meta(jule::Ptr<_1dd05c765_FnDecl>& _178337_f,jule::Bool _178349_is_pub) {
	(*(_178337_f))._field_public=_178349_is_pub;
	(*(_178337_f))._field_directives=(*this)._field_directives;
	(*this)._field_directives=nullptr;
	(*(_178337_f))._field_doc_comments=(*this)._field_comment_group;
	(*this)._field_comment_group=nullptr;
}



inline void _1ddb89cdc_Parser::_method_apply_meta(_1dd05c765_Node& _179134_node,jule::Bool _179146_is_pub) {
	{
		auto &_match_expr{ _179134_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_VarDecl>>()) {
			_case_begin_1a8036466:;
			{
				jule::Ptr<_1dd05c765_VarDecl> _179421_v = _179134_node._field_data.operator jule::Ptr<_1dd05c765_VarDecl>();
				if (_179421_v == nullptr) {
					return;
				}
				(*(_179421_v))._field_public=_179146_is_pub;
				(*(_179421_v))._field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
				(*(_179421_v))._field_directives=(*this)._field_directives;
				(*this)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_FnDecl>>()) {
			_case_begin_1a80364cc:;
			{
				jule::Ptr<_1dd05c765_FnDecl> _180721_f = _179134_node._field_data.operator jule::Ptr<_1dd05c765_FnDecl>();
				if (_180721_f == nullptr) {
					return;
				}
				(*this)._method_apply_fn_meta(_180721_f,_179146_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_TypeAliasDecl>>()) {
			_case_begin_1a8036543:;
			{
				jule::Ptr<_1dd05c765_TypeAliasDecl> _181521_tad = _179134_node._field_data.operator jule::Ptr<_1dd05c765_TypeAliasDecl>();
				if (_181521_tad == nullptr) {
					return;
				}
				(*(_181521_tad))._field_public=_179146_is_pub;
				(*(_181521_tad))._field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_EnumDecl>>()) {
			_case_begin_1a80365a9:;
			{
				jule::Ptr<_1dd05c765_EnumDecl> _182421_ed = _179134_node._field_data.operator jule::Ptr<_1dd05c765_EnumDecl>();
				if (_182421_ed == nullptr) {
					return;
				}
				(*(_182421_ed))._field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
				(*(_182421_ed))._field_public=_179146_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_StructDecl>>()) {
			_case_begin_1a80366a8:;
			{
				jule::Ptr<_1dd05c765_StructDecl> _183321_sd = _179134_node._field_data.operator jule::Ptr<_1dd05c765_StructDecl>();
				if (_183321_sd == nullptr) {
					return;
				}
				(*(_183321_sd))._field_directives=(*this)._field_directives;
				(*this)._field_directives=nullptr;
				(*(_183321_sd))._field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
				(*(_183321_sd))._field_public=_179146_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_TraitDecl>>()) {
			_case_begin_1a803671e:;
			{
				jule::Ptr<_1dd05c765_TraitDecl> _184421_td = _179134_node._field_data.operator jule::Ptr<_1dd05c765_TraitDecl>();
				if (_184421_td == nullptr) {
					return;
				}
				(*(_184421_td))._field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
				(*(_184421_td))._field_public=_179146_is_pub;
			}
		}
		else {
			_case_begin_1a8036279:;
			{
				if (_179146_is_pub) {
					(*this)._method_push_err(_179134_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_1a8036224:;
	}
}



inline void _1ddb89cdc_Parser::_method_check_use_decl(_1dd05c765_Node& _185934_node) {
	{
		auto &_match_expr{ _185934_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_UseDecl>>()) {
			_case_begin_1a80411b8:;
		}
		else {
			_case_begin_1a803b46b:;
			{
				return;
			}
		}
		_match_end_1a80372e1:;
	}
	if ((*((*this)._field_ast))._field_decls.len() > 0LL) {
		(*this)._method_push_err(_185934_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	}
}



inline std::tuple<jule::Bool,jule::Any> _1ddb89cdc_Parser::_method_build_general_scope_node_data(jule::Slice<_1dd05db0c_Token> _187453_st) {
	jule::Bool _187468_is_pub = jule::Bool();
	jule::Any _187482_data = jule::Any();
	if (_187453_st[0LL]._field_id == static_cast<jule::Uint>(21LLU)) {
		_187468_is_pub=true;
		_187453_st=_187453_st.slice(1LL);
		if (_187453_st.len() == 0LL) {
			(*(this->self))._method_push_err(_187453_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_187468_is_pub,_187482_data);
		}
	}
	_187482_data=(*(this->self))._method_build_node_data(_187453_st);
	return std::make_tuple(_187468_is_pub,_187482_data);
}



inline _1dd05c765_Node _1ddb89cdc_Parser::_method_parse_node(jule::Slice<_1dd05db0c_Token>& _188935_st) {
	_1dd05c765_Node _189017_node = _1dd05c765_Node(_188935_st[0LL],jule::Any());
	jule::Bool _189414_is_pub;
	jule::Any _189426_data;
	std::tie(_189414_is_pub,_189426_data) = (*(this->self))._method_build_general_scope_node_data(_188935_st);
	if (_189426_data == jule::Any(nullptr)) {
		return _189017_node;
	}
	_189017_node._field_data=_189426_data;
	(*(this->self))._method_apply_meta(_189017_node,_189414_is_pub);
	(*(this->self))._method_check_comment_group(_189017_node);
	(*(this->self))._method_check_directive(_189017_node);
	(*(this->self))._method_check_use_decl(_189017_node);
	return _189017_node;
}



inline void _1ddb89cdc_Parser::_method_append_node(jule::Slice<_1dd05db0c_Token>& _190836_st) {
	if (_190836_st.len() == 0LL) {
		return;
	}
	_1dd05c765_Node _191317_node = (*(this->self))._method_parse_node(_190836_st);
	if ((_191317_node._field_data == jule::Any(nullptr)) || (*(this->self))._method_stopped()) {
		return;
	}
	{
		
		if (_191317_node._method_is_directive()) {
			_case_begin_1a804b778:;
			{
				(*(this->self))._method_push_directive(_191317_node._field_data.operator jule::Ptr<_1dd05c765_Directive>());
			}
		}
		else if (_191317_node._method_is_use_decl()) {
			_case_begin_1a804b7de:;
			{
				(*((*(this->self))._field_ast))._field_use_decls = jule::alloc_for_append((*((*(this->self))._field_ast))._field_use_decls,1);(*((*(this->self))._field_ast))._field_use_decls.__push(_191317_node._field_data.operator jule::Ptr<_1dd05c765_UseDecl>());
			}
		}
		else if (_191317_node._method_is_decl()) {
			_case_begin_1a804b855:;
			{
				(*((*(this->self))._field_ast))._field_decls = jule::alloc_for_append((*((*(this->self))._field_ast))._field_decls,1);(*((*(this->self))._field_ast))._field_decls.__push(_191317_node);
			}
		}
		else if (_191317_node._method_is_comment()) {
			_case_begin_1a804b8bb:;
			{
				if ((*(this->self))._field_comment_group == nullptr) {
					(*(this->self))._field_comment_group=jule::new_struct<_1dd05c765_CommentGroup>(new( std::nothrow ) _1dd05c765_CommentGroup());
				}
				(*((*(this->self))._field_comment_group))._field_comments = jule::alloc_for_append((*((*(this->self))._field_comment_group))._field_comments,1);(*((*(this->self))._field_comment_group))._field_comments.__push(_191317_node._field_data.operator jule::Ptr<_1dd05c765_Comment>());
			}
		}
		else if (_191317_node._method_is_impl()) {
			_case_begin_1a804c306:;
			{
				(*((*(this->self))._field_ast))._field_impls = jule::alloc_for_append((*((*(this->self))._field_ast))._field_impls,1);(*((*(this->self))._field_ast))._field_impls.__push(_191317_node._field_data.operator jule::Ptr<_1dd05c765_Impl>());
			}
		}
		else {
			_case_begin_1a804b624:;
			{
				(*(this->self))._method_push_err(_191317_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a804b5ad:;
	}
}



inline void _1ddb89cdc_Parser::_method_remove_range(jule::Int _194331_i,jule::Str _194339_kind,jule::Slice<_1dd05db0c_Token>& _194351_tokens,jule::Slice<jule::Int>& _194373_ranges) {
	jule::Str _194413_close = _1ddb89cdc_get_close_kind_of_brace(_194339_kind);
	for (; _194331_i >= 0LL; (_194331_i)--) {
		{
			_1dd05db0c_Token _194617_tok = _194351_tokens[_194373_ranges[_194331_i]];
			if (_194617_tok._field_kind != _194413_close) {
				goto _iter_next_1a8053681;
			}
			_194373_ranges=jule::append(_194373_ranges.slice(0LL,_194331_i),_194373_ranges.slice(_194331_i + 1LL));
			goto _iter_end_1a8053681;
		}
	_iter_next_1a8053681:;
	}
	_iter_end_1a8053681:;
}



inline void _1ddb89cdc_Parser::_method_push_wrong_order_close_err(_1dd05db0c_Token& _195646_t,jule::Slice<_1dd05db0c_Token>& _195657_tokens,jule::Slice<jule::Int>& _195675_ranges) {
	{
		auto &_match_expr{ _195657_tokens[_195675_ranges[_195675_ranges.len() - 1LL]]._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1a80563a9:;
			{
				(*this)._method_push_err(_195646_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1a8056420:;
			{
				(*this)._method_push_err(_195646_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1a8056486:;
			{
				(*this)._method_push_err(_195646_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8056321:;
	}
}



inline void _1ddb89cdc_Parser::_method_push_range_close(_1dd05db0c_Token _196435_t,jule::Str _196445_left,jule::Slice<_1dd05db0c_Token>& _196457_tokens,jule::Slice<jule::Int>& _196479_ranges) {
	jule::Int _196513_n = _196479_ranges.len();
	if (_196513_n == 0LL) {
		{
			auto &_match_expr{ _196435_t._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1a8059c5e:;
				{
					(*this)._method_push_err(_196435_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1a8059cc5:;
				{
					(*this)._method_push_err(_196435_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1a8059d3b:;
				{
					(*this)._method_push_err(_196435_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1a8059bd7:;
		}
		return;
	} else if (_196457_tokens[_196479_ranges[_196513_n - 1LL]]._field_kind != _196445_left) {
		(*this)._method_push_wrong_order_close_err(_196435_t,_196457_tokens,_196479_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::Int>(_196513_n - 1LL),_196435_t._field_kind,_196457_tokens,_196479_ranges);
}



inline void _1ddb89cdc_Parser::_method_check_ranges(jule::Slice<_1dd05db0c_Token>& _197932_tokens) {
	jule::Slice<jule::Int> _198017_ranges = nullptr;
	{
		auto &expr = _197932_tokens;
		auto it = expr.begin();
		_iter_begin_1a805dc63:;
		if (it != expr.end()) {
			jule::Int _1ddb89cdc_i = it - expr.begin();
			_1dd05db0c_Token &_1ddb89cdc_token = *it;
			{
				if (_1ddb89cdc_token._field_id != static_cast<jule::Uint>(3LLU)) {
					goto _iter_next_1a805dc63;
				}
				{
					auto &_match_expr{ _1ddb89cdc_token._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1a805e714:;
						{
							_198017_ranges = jule::alloc_for_append(_198017_ranges,1);_198017_ranges.__push(_1ddb89cdc_i);
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a805ed0d:;
						{
							(*this)._method_push_range_close(_1ddb89cdc_token,jule::Str("(", 1),_197932_tokens,_198017_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a805ed74:;
						{
							(*this)._method_push_range_close(_1ddb89cdc_token,jule::Str("{", 1),_197932_tokens,_198017_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a805edda:;
						{
							(*this)._method_push_range_close(_1ddb89cdc_token,jule::Str("[", 1),_197932_tokens,_198017_ranges);
						}
					}
					_match_end_1a805e626:;
				}
			}
			_iter_next_1a805dc63:;
			++it;
			_1ddb89cdc_i++;
			goto _iter_begin_1a805dc63;
		}
		_iter_end_1a805dc63:;
	}
	{
		auto &expr = _198017_ranges;
		auto it = expr.begin();
		_iter_begin_1a8062140:;
		if (it != expr.end()) {
			jule::Int _1ddb89cdc_i = *it;
			{
				_1dd05db0c_Token _200517_token = _197932_tokens[_1ddb89cdc_i];
				{
					auto &_match_expr{ _200517_token._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a8062d22:;
						{
							(*this)._method_push_err(_200517_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1a8062d88:;
						{
							(*this)._method_push_err(_200517_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a8062e10:;
						{
							(*this)._method_push_err(_200517_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1a8062cbc:;
				}
			}
			_iter_next_1a8062140:;
			++it;
			goto _iter_begin_1a8062140;
		}
		_iter_end_1a8062140:;
	}
}



inline void _1ddb89cdc_Parser::_method_parse(jule::Ptr<_1dd05eba7_File>& _201430_f) {
	(*(this->self))._field_ast=jule::new_struct<_1dd05b9c8_Ast>(new( std::nothrow ) _1dd05b9c8_Ast(_201430_f,jule::Slice<jule::Ptr<_1dd05c765_Directive>>(),jule::Slice<jule::Ptr<_1dd05c765_UseDecl>>(),jule::Slice<jule::Ptr<_1dd05c765_Impl>>(),jule::Slice<_1dd05c765_Node>()));
	jule::Slice<_1dd05db0c_Token> _201917_tokens = (*(_201430_f))._method_tokens();
	(*(this->self))._method_check_ranges(_201917_tokens);
	if ((*(this->self))._field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ptr<_1dd229ca6_Stmt>> _202517_stmts = _1dd229ca6_split_stmts(_201917_tokens);
	jule::Int _202817_i = 0LL;
	_julec_label_iter:;
	for (; _202817_i < static_cast<jule::Int>(_202517_stmts.len()); (_202817_i)++) {
		{
			jule::Ptr<_1dd229ca6_Stmt> _203121_stmt = _202517_stmts[_202817_i];
			if ((*(_203121_stmt))._field_tokens.len() == 0LL) {
				return;
			}
			jule::Any _203625_data;
			std::tie(std::ignore,_203625_data) = (*(this->self))._method_build_general_scope_node_data((*(_203121_stmt))._field_tokens);
			if (_203625_data == jule::Any(nullptr)) {
				goto _iter_end_1a8066c38;
			}
			if ((*(this->self))._method_stopped()) {
				return;
			}
			{
				auto &_match_expr{ _203625_data };
				
				if (_match_expr.type_is<jule::Ptr<_1dd05c765_Directive>>()) {
					_case_begin_1a8069785:;
					{
						jule::Ptr<_1dd05c765_Directive> _204725_d = _203625_data.operator jule::Ptr<_1dd05c765_Directive>();
						if ((_204725_d != nullptr) && _1dc49aba4_is_top_directive((*(_204725_d))._field_tag._field_kind)) {
							(*((*(this->self))._field_ast))._field_top_directives = jule::alloc_for_append((*((*(this->self))._field_ast))._field_top_directives,1);(*((*(this->self))._field_ast))._field_top_directives.__push(_204725_d);
						} else {
							goto _iter_end_1a8066c38;
						}
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1dd05c765_Comment>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_CommentGroup>>()) {
					_case_begin_1a80697eb:;
				}
				else {
					_case_begin_1a8069587:;
					{
						goto _iter_end_1a8066c38;
					}
				}
				_match_end_1a8069345:;
			}
		}
	_iter_next_1a8066c38:;
	}
	_iter_end_1a8066c38:;
	(*(this->self))._field_errors=nullptr;
	for (; _202817_i < static_cast<jule::Int>(_202517_stmts.len()); (_202817_i)++) {
		{
			jule::Ptr<_1dd229ca6_Stmt> _206721_stmt = _202517_stmts[_202817_i];
			(*(this->self))._method_append_node((*(_206721_stmt))._field_tokens);
			if ((*(this->self))._method_stopped()) {
				goto _iter_end_1a806b204;
			}
		}
	_iter_next_1a806b204:;
	}
	_iter_end_1a806b204:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb89cdc_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1ddc59010_TypeBuilder::_method_push_err(_1dd05db0c_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*((*this)._field_p))._method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>());
	}
}



inline void _1ddc59010_TypeBuilder::_method_push_suggestion(jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*this)._field_err) {
		(*((*this)._field_p))._method_push_suggestion(_8534_fmt,_8547_args);
	}
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_build_prim(void) {
	jule::Ptr<_1dd05c765_TypeDecl> _9217_t = _1ddc59010_build_prim_type((*this)._field_tokens[(*((*this)._field_i))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_build_namespace(void) {
	jule::Ptr<_1dd05c765_TypeDecl> _9817_t = jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl((*this)._field_tokens[(*((*this)._field_i))],jule::Any()));
	jule::Ptr<_1dd05c765_NamespaceTypeDecl> _10217_nst = jule::new_struct<_1dd05c765_NamespaceTypeDecl>(new( std::nothrow ) _1dd05c765_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	for (; (*((*this)._field_i)) < static_cast<jule::Int>((*this)._field_tokens.len()); ((*((*this)._field_i)))++) {
		{
			_1dd05db0c_Token _10521_token = (*this)._field_tokens[(*((*this)._field_i))];
			if ((_10317_n % 2LL) == 0LL) {
				if (_10521_token._field_id != static_cast<jule::Uint>(2LLU)) {
					(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				}
				(*(_10217_nst))._field_idents = jule::alloc_for_append((*(_10217_nst))._field_idents,1);(*(_10217_nst))._field_idents.__push(_10521_token);
			} else if (_10521_token._field_id != static_cast<jule::Uint>(23LLU)) {
				goto _iter_end_1a8072eec;
			}
			(_10317_n)++;
		}
	_iter_next_1a8072eec:;
	}
	_iter_end_1a8072eec:;
	(*(_10217_nst))._field_idents=(*(_10217_nst))._field_idents.slice(0LL,(*(_10217_nst))._field_idents.len() - 1LL);
	((*((*this)._field_i)))--;
	(*(_10217_nst))._field_kind=(*((*this)._method_build_ident()))._field_kind.operator jule::Ptr<_1dd05c765_IdentTypeDecl>();
	(*(_9817_t))._field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> _1ddc59010_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= static_cast<jule::Int>((*this)._field_tokens.len())) {
		return nullptr;
	}
	_1dd05db0c_Token _13113_token = (*this)._field_tokens[(*((*this)._field_i))];
	if ((_13113_token._field_id != static_cast<jule::Uint>(3LLU)) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>::alloc(0LL,static_cast<jule::Int>(_13617_parts.len()));
	{
		auto &expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_1a807c424:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1ddc59010_part = *it;
			{
				jule::Int _14421_j = 0LL;
				jule::Ptr<_1dd05c765_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*((*this)._field_p))._method_build_type(_1ddc59010_part,(&(_14421_j)),true);
				if (_14421_j < static_cast<jule::Int>(_1ddc59010_part.len())) {
					(*this)._method_push_err(_1ddc59010_part[_14421_j],jule::Str("invalid syntax", 14));
				}
				_14217_types = jule::alloc_for_append(_14217_types,1);_14217_types.__push(_14522_t);
			}
			_iter_next_1a807c424:;
			++it;
			goto _iter_begin_1a807c424;
		}
		_iter_end_1a807c424:;
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_1dd05db0c_Token>> _1ddc59010_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	for (; (*((*this)._field_i)) < static_cast<jule::Int>((*this)._field_tokens.len()); ((*((*this)._field_i)))++) {
		{
			_1dd05db0c_Token _15817_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (_15817_token._field_id == static_cast<jule::Uint>(3LLU)) {
				{
					auto &_match_expr{ _15817_token._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a8081307:;
						{
							(_15617_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a808137e:;
						{
							(_15617_range_n)--;
						}
					}
					_match_end_1a80810d7:;
				}
			}
			if (_15617_range_n == 0LL) {
				((*((*this)._field_i)))++;
				goto _iter_end_1a807da74;
			}
		}
	_iter_next_1a807da74:;
	}
	_iter_end_1a807da74:;
	jule::Slice<_1dd05db0c_Token> _17017_tokens = (*this)._field_tokens.slice(_15513_first + 1LL,(*((*this)._field_i)) - 1LL);
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _17118_parts;
	jule::Slice<_1db678789_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _1ddb89cdc_parts(_17017_tokens,static_cast<jule::Uint>(8LLU),true);
	if ((*this)._field_err) {
		(*((*this)._field_p))._field_errors=jule::append((*((*this)._field_p))._field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < static_cast<jule::Int>((*this)._field_tokens.len())) && ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id == static_cast<jule::Uint>(23LLU))) {
		return (*this)._method_build_namespace();
	}
	_1dd05db0c_Token _18217_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ptr<_1dd05c765_IdentTypeDecl> _18317_it = jule::new_struct<_1dd05c765_IdentTypeDecl>(new( std::nothrow ) _1dd05c765_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>()));
	((*((*this)._field_i)))++;
	(*(_18317_it))._field_generics=(*this)._method_build_generics();
	return jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= static_cast<jule::Int>((*this)._field_tokens.len())) || ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id != static_cast<jule::Uint>(20LLU))) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	}
	(*((*this)._field_i))+=2LL;
	jule::Ptr<_1dd05c765_TypeDecl> _20217_t = (*this)._method_build_ident();
	(*((*(_20217_t))._field_kind.operator jule::Ptr<_1dd05c765_IdentTypeDecl>()))._field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_build_fn(void) {
	_1dd05db0c_Token _20817_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ptr<_1dd05c765_FnDecl> _20917_f = (*((*this)._field_p))._method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if (_20917_f == nullptr) {
		return nullptr;
	}
	if ((!((*(_20917_f))._method_is_anon()))) {
		(*this)._method_push_err((*(_20917_f))._field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_build_ptr(void) {
	_1dd05db0c_Token _22317_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= static_cast<jule::Int>((*this)._field_tokens.len())) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[(*((*this)._field_i))]._field_id == static_cast<jule::Uint>(35LLU)) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1dd05c765_PtrTypeDecl>(new( std::nothrow ) _1dd05c765_PtrTypeDecl(nullptr)))));
	}
	jule::Ptr<_1dd05c765_TypeDecl> _24017_elem = (*this)._method_step();
	if (_24017_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1dd05c765_PtrTypeDecl>(new( std::nothrow ) _1dd05c765_PtrTypeDecl(_24017_elem)))));
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_build_sptr(void) {
	_1dd05db0c_Token _25417_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= static_cast<jule::Int>((*this)._field_tokens.len())) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	jule::Ptr<_1dd05c765_TypeDecl> _26117_elem = (*this)._method_step();
	if (_26117_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_25417_token,jule::Any(jule::new_struct<_1dd05c765_SptrTypeDecl>(new( std::nothrow ) _1dd05c765_SptrTypeDecl(_26117_elem)))));
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_build_op(void) {
	_1dd05db0c_Token _27517_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto &_match_expr{ _27517_token._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a8096b14:;
			{
				return (*this)._method_build_ptr();
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a80964a4:;
			{
				return (*this)._method_build_sptr();
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a809651a:;
			{
				return jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_1dd05db0c_Token(),jule::Any(jule::new_struct<_1dd05c765_SptrTypeDecl>(new( std::nothrow ) _1dd05c765_SptrTypeDecl((*this)._method_build_sptr())))));
			}
		}
		else {
			_case_begin_1a8095c01:;
			{
				(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1a8096361:;
	}
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_build_slc(void) {
	_1dd05db0c_Token _29717_token = (*this)._field_tokens[(*((*this)._field_i))];
	((*((*this)._field_i)))++;
	jule::Ptr<_1dd05c765_TypeDecl> _29917_elem = (*this)._method_step();
	if (_29917_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_29717_token,jule::Any(jule::new_struct<_1dd05c765_SlcTypeDecl>(new( std::nothrow ) _1dd05c765_SlcTypeDecl(_29917_elem)))));
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= static_cast<jule::Int>((*this)._field_tokens.len())) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i)) - 1LL],jule::Str("type missing", 12));
		return nullptr;
	}
	jule::Int _32013_expr_delta = (*((*this)._field_i));
	jule::Ptr<_1dd05c765_TypeDecl> _32217_elem = (*this)._method_step();
	if (_32217_elem == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1dd05c765_ArrTypeDecl> _32717_arrt = jule::new_struct<_1dd05c765_ArrTypeDecl>(new( std::nothrow ) _1dd05c765_ArrTypeDecl(_32217_elem,jule::Ptr<_1dd05c765_Expr>()));
	jule::Slice<_1dd05db0c_Token> _33117_expr_tokens = (*this)._field_tokens.slice(0LL,_32013_expr_delta);
	std::tie(std::ignore,_33117_expr_tokens) = _1ddb89cdc_range_last(_33117_expr_tokens);
	_33117_expr_tokens=_33117_expr_tokens.slice(1LL,_33117_expr_tokens.len() - 1LL);
	_1dd05db0c_Token _33417_token = _33117_expr_tokens[0LL];
	if (((_33117_expr_tokens.len() == 1LL) && (_33417_token._field_id == static_cast<jule::Uint>(7LLU))) && (_33417_token._field_kind == jule::Str("...", 3))) {
	} else {
		(*(_32717_arrt))._field_size=(*((*this)._field_p))._method_build_expr(_33117_expr_tokens);
	}
	return jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_33417_token,jule::Any(_32717_arrt)));
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_build_map(jule::Int _34728_colon,jule::Slice<_1dd05db0c_Token>& _34745_tokens) {
	_1dd05db0c_Token _34817_colon_token = (*this)._field_tokens[_34728_colon];
	if ((_34728_colon == 0LL) || ((_34728_colon + 1LL) >= static_cast<jule::Int>(_34745_tokens.len()))) {
		(*this)._method_push_err(_34817_colon_token,jule::Str("type missing", 12));
		return nullptr;
	}
	jule::Slice<_1dd05db0c_Token> _35317_key_tokens = _34745_tokens.slice(0LL,_34728_colon);
	jule::Slice<_1dd05db0c_Token> _35417_val_tokens = _34745_tokens.slice(_34728_colon + 1LL);
	jule::Ptr<_1dd05c765_MapTypeDecl> _35517_mapt = jule::new_struct<_1dd05c765_MapTypeDecl>(new( std::nothrow ) _1dd05c765_MapTypeDecl());
	jule::Int _35717_j = 0LL;
	jule::Ptr<_1dd05c765_TypeDecl> _35818_keyt;
	jule::Bool _35828_ok;
	std::tie(_35818_keyt,_35828_ok) = (*((*this)._field_p))._method_build_type(_35317_key_tokens,(&(_35717_j)),(*this)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < static_cast<jule::Int>(_35317_key_tokens.len())) {
		(*this)._method_push_err(_35317_key_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	(*(_35517_mapt))._field_key=_35818_keyt;
	_35717_j=0LL;
	jule::Ptr<_1dd05c765_TypeDecl> _36718_valt;
	std::tie(_36718_valt,_35828_ok) = (*((*this)._field_p))._method_build_type(_35417_val_tokens,(&(_35717_j)),(*this)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < static_cast<jule::Int>(_35417_val_tokens.len())) {
		(*this)._method_push_err(_35417_val_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	(*(_35517_mapt))._field_val=_36718_valt;
	return jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_34817_colon_token,jule::Any(_35517_mapt)));
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_build_enumerable(void) {
	_1dd05db0c_Token _38217_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((((*((*this)._field_i)) + 2LL) >= static_cast<jule::Int>((*this)._field_tokens.len())) || (_38217_token._field_id != static_cast<jule::Uint>(3LLU))) || (_38217_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_38217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	_38217_token=(*this)._field_tokens[(*((*this)._field_i))];
	if ((_38217_token._field_id == static_cast<jule::Uint>(3LLU)) && (_38217_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_1dd05db0c_Token> _39618_map_tokens;
	jule::Int _39630_colon;
	std::tie(_39618_map_tokens,_39630_colon) = _1ddc59010_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39630_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39630_colon,_39618_map_tokens);
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_TypeBuilder::_method_step(void) {
	_1dd05db0c_Token _40513_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto &_match_expr{ _40513_token._field_id };
		
		if (_match_expr == static_cast<jule::Uint>(1LLU)) {
			_case_begin_1a80b4060:;
			{
				return (*this)._method_build_prim();
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(2LLU)) {
			_case_begin_1a80b40c6:;
			{
				return (*this)._method_build_ident();
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(31LLU)) {
			_case_begin_1a80b4abb:;
			{
				return (*this)._method_build_cpp_link();
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(33LLU)) {
			_case_begin_1a80b4b32:;
			{
				return (*this)._method_build_fn();
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(7LLU)) {
			_case_begin_1a80b4b98:;
			{
				return (*this)._method_build_op();
			}
		}
		else if (_match_expr == static_cast<jule::Uint>(3LLU)) {
			_case_begin_1a80b4c0e:;
			{
				return (*this)._method_build_enumerable();
			}
		}
		else {
			_case_begin_1a80b2ec6:;
			{
				((*((*this)._field_i)))++;
				(*this)._method_push_err(_40513_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1a80b3d95:;
	}
}



inline std::tuple<jule::Ptr<_1dd05c765_TypeDecl>,jule::Bool> _1ddc59010_TypeBuilder::_method_build(void) {
	jule::Bool _43444_ok = jule::Bool();
	jule::Ptr<_1dd05c765_TypeDecl> _43517_root = (*this)._method_step();
	if (_43517_root == nullptr) {
		_43444_ok = false;
		return std::make_tuple(_1ddc59010_build_void_type(),_43444_ok);
	}
	_43444_ok = true;
	return std::make_tuple(_43517_root,_43444_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddc59010_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a64669ca_Const> _1a64669ca_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_1a64669ca_Const>(new( std::nothrow ) _1a64669ca_Const(jule::Any(_1327_x)));
}



inline jule::Ptr<_1a64669ca_Const> _1a64669ca_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_1a64669ca_Const>(new( std::nothrow ) _1a64669ca_Const(jule::Any(_1527_x)));
}



inline jule::Ptr<_1a64669ca_Const> _1a64669ca_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_1a64669ca_Const>(new( std::nothrow ) _1a64669ca_Const(jule::Any(_1728_x)));
}



inline jule::Ptr<_1a64669ca_Const> _1a64669ca_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_1a64669ca_Const>(new( std::nothrow ) _1a64669ca_Const(jule::Any(_1927_x)));
}



inline jule::Ptr<_1a64669ca_Const> _1a64669ca_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_1a64669ca_Const>(new( std::nothrow ) _1a64669ca_Const(jule::Any(_2127_x)));
}



inline jule::Ptr<_1a64669ca_Const> _1a64669ca_Const::_static_method_new_nil(void) {
	return jule::new_struct<_1a64669ca_Const>(new( std::nothrow ) _1a64669ca_Const(jule::Any(nullptr)));
}



inline jule::I64 _1a64669ca_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return static_cast<jule::I64>((*this)._field_data.operator jule::I64());
}



inline jule::U64 _1a64669ca_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LLU;
	}
	return static_cast<jule::U64>((*this)._field_data.operator jule::U64());
}



inline jule::Bool _1a64669ca_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _1a64669ca_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str();
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _1a64669ca_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return static_cast<jule::F64>((*this)._field_data.operator jule::F64());
}



inline jule::I64 _1a64669ca_Const::_method_as_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a8134bd5:;
			{
				return static_cast<jule::I64>((*this)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a8134c4b:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*this)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a8134e7c:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*this)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1a81347a6:;
			{
				return 0LL;
			}
		}
		_match_end_1a8134685:;
	}
}



inline jule::U64 _1a64669ca_Const::_method_as_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a8136ae9:;
			{
				return static_cast<jule::U64>((*this)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a8136b60:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*this)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a8136d91:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*this)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1a81366ba:;
			{
				return 0LLU;
			}
		}
		_match_end_1a8136368:;
	}
}



inline jule::F64 _1a64669ca_Const::_method_as_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a8138a0d:;
			{
				return static_cast<jule::F64>((*this)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a8138a74:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*this)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a8138ca5:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*this)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1a81385ce:;
			{
				return 0LL;
			}
		}
		_match_end_1a813827c:;
	}
}



inline void _1a64669ca_Const::_method_set_i64(jule::I64 _13030_x) {
	(*this)._field_data=jule::Any(_13030_x);
}



inline void _1a64669ca_Const::_method_set_u64(jule::U64 _13230_x) {
	(*this)._field_data=jule::Any(_13230_x);
}



inline void _1a64669ca_Const::_method_set_bool(jule::Bool _13431_x) {
	(*this)._field_data=jule::Any(_13431_x);
}



inline void _1a64669ca_Const::_method_set_str(jule::Str _13630_x) {
	(*this)._field_data=jule::Any(_13630_x);
}



inline void _1a64669ca_Const::_method_set_f64(jule::F64 _13830_x) {
	(*this)._field_data=jule::Any(_13830_x);
}



inline void _1a64669ca_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline jule::Bool _1a64669ca_Const::_method_is_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a813e1ea:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a813e393:;
			{
				return false;
			}
		}
		_match_end_1a813e272:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_is_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a813ee21:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a813ebbd:;
			{
				return false;
			}
		}
		_match_end_1a813eeed:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_is_bool(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1a81408e4:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a8140691:;
			{
				return false;
			}
		}
		_match_end_1a81409c1:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_is_str(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a81413b7:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a8141164:;
			{
				return false;
			}
		}
		_match_end_1a8141494:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_is_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a8141d8a:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a8141b37:;
			{
				return false;
			}
		}
		_match_end_1a8141e67:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_is_nil(void) {
	return (*this)._field_data == jule::Any(nullptr);
}



inline jule::Bool _1a64669ca_Const::_method_are_same_types(_1a64669ca_Const _19033_x) {
	{
		
		if ((*this)._method_is_i64() == _19033_x._method_is_i64()) {
			_case_begin_1a81440e0:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_u64() == _19033_x._method_is_u64()) {
			_case_begin_1a8143991:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_f64() == _19033_x._method_is_f64()) {
			_case_begin_1a8143a07:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_bool() == _19033_x._method_is_bool()) {
			_case_begin_1a8143a6d:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_str() == _19033_x._method_is_str()) {
			_case_begin_1a8143ad4:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_nil() == _19033_x._method_is_nil()) {
			_case_begin_1a8143cb0:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a814383c:;
			{
				return false;
			}
		}
		_match_end_1a8143771:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_and(_1a64669ca_Const _21522_x) {
	{
		
		if ((*this)._method_is_bool() && _21522_x._method_is_bool()) {
			_case_begin_1a8147830:;
			{
				return (*this)._method_read_bool() && _21522_x._method_read_bool();
			}
		}
		else {
			_case_begin_1a81470d2:;
			{
				return false;
			}
		}
		_match_end_1a8147016:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_or(_1a64669ca_Const _22621_x) {
	{
		
		if ((*this)._method_is_bool() && _22621_x._method_is_bool()) {
			_case_begin_1a8149205:;
			{
				return (*this)._method_read_bool() || _22621_x._method_read_bool();
			}
		}
		else {
			_case_begin_1a81489a7:;
			{
				return false;
			}
		}
		_match_end_1a81488db:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_eq(_1a64669ca_Const _23721_x) {
	{
		
		if ((*this)._method_is_nil()) {
			_case_begin_1a814aa75:;
			{
				return _23721_x._method_is_nil();
			}
		}
		else if ((*this)._method_is_bool()) {
			_case_begin_1a814a426:;
			{
				return _23721_x._method_is_bool() && ((*this)._method_read_bool() == _23721_x._method_read_bool());
			}
		}
		else if ((*this)._method_is_str()) {
			_case_begin_1a814a48c:;
			{
				return _23721_x._method_is_str() && ((*this)._method_read_str() == _23721_x._method_read_str());
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_1a814a503:;
			{
				return (*this)._method_read_i64() == static_cast<jule::I64>(_23721_x._method_as_i64());
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a814a569:;
			{
				return (*this)._method_read_u64() == static_cast<jule::U64>(_23721_x._method_as_u64());
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_1a814a745:;
			{
				return (*this)._method_read_f64() == static_cast<jule::F64>(_23721_x._method_as_f64());
			}
		}
		else {
			_case_begin_1a814a2c2:;
			{
				return false;
			}
		}
		_match_end_1a814a206:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_lt(_1a64669ca_Const _26421_x) {
	{
		
		if ((*this)._method_is_str()) {
			_case_begin_1a815045e:;
			{
				return _26421_x._method_is_str() && ((*this)._method_read_str() < _26421_x._method_read_str());
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_1a81504c5:;
			{
				return (*this)._method_read_i64() < static_cast<jule::I64>(_26421_x._method_as_i64());
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a814ed43:;
			{
				return (*this)._method_read_u64() < static_cast<jule::U64>(_26421_x._method_as_u64());
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_1a814edba:;
			{
				return (*this)._method_read_f64() < static_cast<jule::F64>(_26421_x._method_as_f64());
			}
		}
		else {
			_case_begin_1a814ebcd:;
			{
				return false;
			}
		}
		_match_end_1a814eb12:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_lt_eq(_1a64669ca_Const _28724_x) {
	{
		
		if ((*this)._method_is_str()) {
			_case_begin_1a8153891:;
			{
				return _28724_x._method_is_str() && ((*this)._method_read_str() <= _28724_x._method_read_str());
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_1a8153907:;
			{
				return (*this)._method_read_i64() <= static_cast<jule::I64>(_28724_x._method_as_i64());
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a8153275:;
			{
				return (*this)._method_read_u64() <= static_cast<jule::U64>(_28724_x._method_as_u64());
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_1a81532ec:;
			{
				return (*this)._method_read_f64() <= static_cast<jule::F64>(_28724_x._method_as_f64());
			}
		}
		else {
			_case_begin_1a8153110:;
			{
				return false;
			}
		}
		_match_end_1a81493ae:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_gt(_1a64669ca_Const _31021_x) {
	{
		
		if ((*this)._method_is_str()) {
			_case_begin_1a8156ec1:;
			{
				return _31021_x._method_is_str() && ((*this)._method_read_str() > _31021_x._method_read_str());
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_1a8157037:;
			{
				return (*this)._method_read_i64() > static_cast<jule::I64>(_31021_x._method_as_i64());
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a81568a5:;
			{
				return (*this)._method_read_u64() > static_cast<jule::U64>(_31021_x._method_as_u64());
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_1a815692c:;
			{
				return (*this)._method_read_f64() > static_cast<jule::F64>(_31021_x._method_as_f64());
			}
		}
		else {
			_case_begin_1a8156740:;
			{
				return false;
			}
		}
		_match_end_1a8150690:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_gt_eq(_1a64669ca_Const _33324_x) {
	{
		
		if ((*this)._method_is_str()) {
			_case_begin_1a815a403:;
			{
				return _33324_x._method_is_str() && ((*this)._method_read_str() >= _33324_x._method_read_str());
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_1a815a469:;
			{
				return (*this)._method_read_i64() >= static_cast<jule::I64>(_33324_x._method_as_i64());
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a8159cd7:;
			{
				return (*this)._method_read_u64() >= static_cast<jule::U64>(_33324_x._method_as_u64());
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_1a8159d5e:;
			{
				return (*this)._method_read_f64() >= static_cast<jule::F64>(_33324_x._method_as_f64());
			}
		}
		else {
			_case_begin_1a8159b72:;
			{
				return false;
			}
		}
		_match_end_1a8153a06:;
	}
}



inline jule::Bool _1a64669ca_Const::_method_add(_1a64669ca_Const _35426_x) {
	{
		
		if ((*this)._method_is_str()) {
			_case_begin_1a815da77:;
			{
				if ((!(_35426_x._method_is_str()))) {
					return false;
				}
				(*this)._method_set_str(((*this)._method_read_str() + _35426_x._method_read_str()));
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_1a815dadd:;
			{
				(*this)._method_set_f64(static_cast<jule::F64>(static_cast<jule::F64>((*this)._method_read_f64()) + static_cast<jule::F64>(_35426_x._method_as_f64())));
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_1a815d45b:;
			{
				if (_35426_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>(static_cast<jule::F64>((*this)._method_as_f64()) + static_cast<jule::F64>(_35426_x._method_read_f64())));
				} else {
					(*this)._method_set_i64(static_cast<jule::I64>(static_cast<jule::I64>((*this)._method_read_i64()) + static_cast<jule::I64>(_35426_x._method_as_i64())));
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a815d4d3:;
			{
				if (_35426_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>(static_cast<jule::F64>((*this)._method_as_f64()) + static_cast<jule::F64>(_35426_x._method_read_f64())));
				} else {
					(*this)._method_set_u64(static_cast<jule::U64>(static_cast<jule::U64>((*this)._method_read_u64()) + static_cast<jule::U64>(_35426_x._method_as_u64())));
				}
			}
		}
		else {
			_case_begin_1a815d2e6:;
			{
				return false;
			}
		}
		_match_end_1a815c8de:;
	}
	return true;
}



inline jule::Bool _1a64669ca_Const::_method_sub(_1a64669ca_Const _38326_x) {
	{
		
		if ((*this)._method_is_f64()) {
			_case_begin_1a8165023:;
			{
				(*this)._method_set_f64(static_cast<jule::F64>(static_cast<jule::F64>((*this)._method_read_f64()) - static_cast<jule::F64>(_38326_x._method_as_f64())));
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_1a8165089:;
			{
				if (_38326_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>(static_cast<jule::F64>((*this)._method_as_f64()) - static_cast<jule::F64>(_38326_x._method_read_f64())));
				} else {
					(*this)._method_set_i64(static_cast<jule::I64>(static_cast<jule::I64>((*this)._method_read_i64()) - static_cast<jule::I64>(_38326_x._method_as_i64())));
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a8164907:;
			{
				if (_38326_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>(static_cast<jule::F64>((*this)._method_as_f64()) - static_cast<jule::F64>(_38326_x._method_read_f64())));
				} else {
					(*this)._method_set_u64(static_cast<jule::U64>(static_cast<jule::U64>((*this)._method_read_u64()) - static_cast<jule::U64>(_38326_x._method_as_u64())));
				}
			}
		}
		else {
			_case_begin_1a81647a3:;
			{
				return false;
			}
		}
		_match_end_1a81646d7:;
	}
	return true;
}



inline jule::Bool _1a64669ca_Const::_method_mul(_1a64669ca_Const _40726_x) {
	{
		
		if ((*this)._method_is_f64()) {
			_case_begin_1a816a633:;
			{
				(*this)._method_set_f64(static_cast<jule::F64>(static_cast<jule::F64>((*this)._method_read_f64()) * static_cast<jule::F64>(_40726_x._method_as_f64())));
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_1a816a699:;
			{
				if (_40726_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>(static_cast<jule::F64>((*this)._method_as_f64()) * static_cast<jule::F64>(_40726_x._method_read_f64())));
				} else {
					(*this)._method_set_i64(static_cast<jule::I64>(static_cast<jule::I64>((*this)._method_read_i64()) * static_cast<jule::I64>(_40726_x._method_as_i64())));
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a816a017:;
			{
				if (_40726_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>(static_cast<jule::F64>((*this)._method_as_f64()) * static_cast<jule::F64>(_40726_x._method_read_f64())));
				} else {
					(*this)._method_set_u64(static_cast<jule::U64>(static_cast<jule::U64>((*this)._method_read_u64()) * static_cast<jule::U64>(_40726_x._method_as_u64())));
				}
			}
		}
		else {
			_case_begin_1a8169db3:;
			{
				return false;
			}
		}
		_match_end_1a8169ce7:;
	}
	return true;
}



inline jule::Bool _1a64669ca_Const::_method_div(_1a64669ca_Const _43526_x) {
	{
		
		if ((*this)._method_is_f64()) {
			_case_begin_1a81709ac:;
			{
				jule::F64 _43817_l = _43526_x._method_as_f64();
				if (_43817_l == 0LL) {
					return false;
				}
				(*this)._method_set_f64(static_cast<jule::F64>(jule::div(static_cast<jule::F64>((*this)._method_read_f64()),_43817_l)));
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_1a8170a23:;
			{
				jule::F64 _44417_l = _43526_x._method_as_f64();
				if (_44417_l == 0LL) {
					return false;
				}
				(*this)._method_set_f64(static_cast<jule::F64>(jule::div(static_cast<jule::F64>((*this)._method_as_f64()),_44417_l)));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a8170391:;
			{
				jule::F64 _45017_l = _43526_x._method_as_f64();
				if (_45017_l == 0LL) {
					return false;
				}
				(*this)._method_set_f64(static_cast<jule::F64>(jule::div(static_cast<jule::F64>((*this)._method_as_f64()),_45017_l)));
			}
		}
		else {
			_case_begin_1a817023c:;
			{
				return false;
			}
		}
		_match_end_1a8170171:;
	}
	return true;
}



inline jule::Bool _1a64669ca_Const::_method_mod(_1a64669ca_Const _46426_x) {
	{
		
		if ((*this)._method_is_i64()) {
			_case_begin_1a817562c:;
			{
				jule::I64 _46717_l = _46426_x._method_as_i64();
				if (_46717_l == 0LL) {
					return false;
				}
				(*this)._method_set_i64(static_cast<jule::I64>(jule::mod(static_cast<jule::I64>((*this)._method_read_i64()),_46717_l)));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a8175693:;
			{
				jule::U64 _47317_l = _46426_x._method_as_u64();
				if (_47317_l == 0LLU) {
					return false;
				}
				(*this)._method_set_u64(static_cast<jule::U64>(jule::mod(static_cast<jule::U64>((*this)._method_read_u64()),_47317_l)));
			}
		}
		else {
			_case_begin_1a8174dbd:;
			{
				return false;
			}
		}
		_match_end_1a8174d02:;
	}
	return true;
}



inline jule::Bool _1a64669ca_Const::_method_bitwise_and(_1a64669ca_Const _48634_x) {
	{
		
		if ((*this)._method_is_i64()) {
			_case_begin_1a8178db1:;
			{
				(*this)._method_set_i64(static_cast<jule::I64>(static_cast<jule::I64>((*this)._method_read_i64()) & static_cast<jule::I64>(_48634_x._method_as_i64())));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a8178e27:;
			{
				(*this)._method_set_u64(static_cast<jule::U64>(static_cast<jule::U64>((*this)._method_read_u64()) & static_cast<jule::U64>(_48634_x._method_as_u64())));
			}
		}
		else {
			_case_begin_1a8178652:;
			{
				return false;
			}
		}
		_match_end_1a8178586:;
	}
	return true;
}



inline jule::Bool _1a64669ca_Const::_method_bitwise_or(_1a64669ca_Const _50033_x) {
	{
		
		if ((*this)._method_is_i64()) {
			_case_begin_1a817b7dc:;
			{
				(*this)._method_set_i64(static_cast<jule::I64>(static_cast<jule::I64>((*this)._method_read_i64()) | static_cast<jule::I64>(_50033_x._method_as_i64())));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a817b853:;
			{
				(*this)._method_set_u64(static_cast<jule::U64>(static_cast<jule::U64>((*this)._method_read_u64()) | static_cast<jule::U64>(_50033_x._method_as_u64())));
			}
		}
		else {
			_case_begin_1a817b07d:;
			{
				return false;
			}
		}
		_match_end_1a817aeb2:;
	}
	return true;
}



inline jule::Bool _1a64669ca_Const::_method_xor(_1a64669ca_Const _51426_x) {
	{
		
		if ((*this)._method_is_i64()) {
			_case_begin_1a817e218:;
			{
				(*this)._method_set_i64(static_cast<jule::I64>(static_cast<jule::I64>((*this)._method_read_i64()) ^ static_cast<jule::I64>(_51426_x._method_as_i64())));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a817e27e:;
			{
				(*this)._method_set_u64(static_cast<jule::U64>(static_cast<jule::U64>((*this)._method_read_u64()) ^ static_cast<jule::U64>(_51426_x._method_as_u64())));
			}
		}
		else {
			_case_begin_1a817d9a9:;
			{
				return false;
			}
		}
		_match_end_1a817d8dd:;
	}
	return true;
}



inline jule::Bool _1a64669ca_Const::_method_lshift(_1a64669ca_Const _52829_x) {
	{
		
		if ((*this)._method_is_i64()) {
			_case_begin_1a8181ea7:;
			{
				jule::I64 _53117_l = (*this)._method_as_i64();
				if (_53117_l < 0LL) {
					jule::U64 _53321_r = _52829_x._method_as_u64();
					(*this)._method_set_i64(static_cast<jule::I64>(_53117_l << _53321_r));
				} else {
					_1a64669ca_lshift_unsig((*this),_52829_x);
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a818201d:;
			{
				_1a64669ca_lshift_unsig((*this),_52829_x);
			}
		}
		else {
			_case_begin_1a8181748:;
			{
				return false;
			}
		}
		_match_end_1a818167c:;
	}
	return true;
}



inline jule::Bool _1a64669ca_Const::_method_rshift(_1a64669ca_Const _54829_x) {
	{
		
		if ((*this)._method_is_i64()) {
			_case_begin_1a81850ed:;
			{
				jule::I64 _55117_l = (*this)._method_as_i64();
				if (_55117_l < 0LL) {
					jule::U64 _55321_r = _54829_x._method_as_u64();
					(*this)._method_set_i64(static_cast<jule::I64>(_55117_l >> _55321_r));
				} else {
					_1a64669ca_rshift_unsig((*this),_54829_x);
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_1a8185164:;
			{
				_1a64669ca_rshift_unsig((*this),_54829_x);
			}
		}
		else {
			_case_begin_1a818488e:;
			{
				return false;
			}
		}
		_match_end_1a81847c3:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a64669ca_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a665a62a_FileStream> _1a665a62a_FileStream::_static_method_new(jule::Ptr<_1db6a29e4_File> _1527_f) {
	return jule::new_struct<_1a665a62a_FileStream>(new( std::nothrow ) _1a665a62a_FileStream(_1527_f));
}



inline jule::Exceptional<jule::Int> _1a665a62a_FileStream::_method_read(jule::Slice<jule::U8> _2431_buff) {
	jule::Int _2448_n = jule::Int();
	_2448_n = static_cast<jule::Int>(({
		auto except = (*((*this)._field_buff))._method_read(_2431_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Int>(except.error);
			return jule::Exceptional<jule::Int>(except.error);
		} jule::Int();});
	}));
	return jule::Exceptional<jule::Int>(jule::Any(),_2448_n);
}



inline jule::Exceptional<jule::Int> _1a665a62a_FileStream::_method_write(jule::Slice<jule::U8> _2828_buff) {
	jule::Int _2845_n = jule::Int();
	_2845_n = static_cast<jule::Int>(({
		auto except = (*((*this)._field_buff))._method_write(_2828_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Int>(except.error);
			return jule::Exceptional<jule::Int>(except.error);
		} jule::Int();});
	}));
	return jule::Exceptional<jule::Int>(jule::Any(),_2845_n);
}



inline jule::Exceptional<jule::Slice<jule::U8>> _1a665a62a_FileStream::_method_read_line(void) {
	
	jule::Slice<jule::U8> _4017_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _4117_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::Int _4317_n = ({
				auto except = (*((*this)._field_buff))._method_read(_4117_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
				} jule::Int();});
			});
			if (_4317_n == 0LL) {
				goto _iter_end_1a8213753;
			}
			jule::U8 _4817_b = _4117_part[0LL];
			_4017_buff = jule::alloc_for_append(_4017_buff,1);_4017_buff.__push(_4817_b);
			if (_4817_b == 10LLU) {
				goto _iter_end_1a8213753;
			}
		}
	_iter_next_1a8213753:;
	}
	_iter_end_1a8213753:;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_4017_buff);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a665a62a_FileStream &_Src) {
	_Stream << "FileStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Int> _1a6666944_ByteStream::_method_read(jule::Slice<jule::U8> _1831_buff) {
	jule::Int _1848_n = jule::Int();
	if ((!((*this)._method_data()))) {
		_1848_n = 0LL;
		return jule::Exceptional<jule::Int>(jule::Any(),_1848_n);
	}
	jule::Int _2313_offset = (*this)._field_buff.len() - (*this)._field_pos;
	if (_2313_offset < static_cast<jule::Int>(_1831_buff.len())) {
		_1848_n=static_cast<jule::Int>(static_cast<jule::Int>(_1831_buff.len()) - _2313_offset);
		copy(_1831_buff,(*this)._field_buff.slice((*this)._field_pos,(*this)._field_pos + _1848_n));
	} else {
		_1848_n=static_cast<jule::Int>(_1831_buff.len());
		copy(_1831_buff,(*this)._field_buff.slice((*this)._field_pos,(*this)._field_pos + _1848_n));
	}
	(*this)._field_pos+=_1848_n;
	return jule::Exceptional<jule::Int>(jule::Any(), _1848_n);
}



inline jule::Exceptional<jule::Int> _1a6666944_ByteStream::_method_write(jule::Slice<jule::U8> _3528_buff) {
	jule::Int _3545_n = jule::Int();
	_3545_n=static_cast<jule::Int>(_3528_buff.len());
	(*this)._field_buff=jule::append((*this)._field_buff,_3528_buff);
	return jule::Exceptional<jule::Int>(jule::Any(), _3545_n);
}



inline jule::Ptr<_1a6666944_ByteStream> _1a6666944_ByteStream::_static_method_new(void) {
	return jule::new_ptr<_1a6666944_ByteStream>();
}



inline jule::Bool _1a6666944_ByteStream::_method_data(void) {
	return (*this)._field_pos < static_cast<jule::Int>((*this)._field_buff.len());
}



inline void _1a6666944_ByteStream::_method_fit(void) {
	if ((!((*this)._method_data()))) {
		(*this)._field_pos=0LL;
		(*this)._field_buff=nullptr;
		return;
	}
	jule::Int _6213_n = (*this)._field_buff.len() - (*this)._field_pos;
	jule::Slice<jule::U8> _6317_buff = jule::Slice<jule::U8>::alloc(_6213_n);
	copy(_6317_buff,(*this)._field_buff.slice((*this)._field_pos));
	(*this)._field_pos=0LL;
	(*this)._field_buff=_6317_buff;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a6666944_ByteStream &_Src) {
	_Stream << "ByteStream{";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a66a95ad_Scanner> _1a66a95ad_Scanner::_static_method_new(jule::Trait<_1a665b3a6_Reader> _1627_r) {
	return jule::new_struct<_1a66a95ad_Scanner>(new( std::nothrow ) _1a66a95ad_Scanner(_1627_r,jule::Slice<jule::U8>()));
}



inline jule::Ptr<_1a66a95ad_Scanner> _1a66a95ad_Scanner::_static_method_newf(jule::Ptr<_1db6a29e4_File> _2428_f) {
	return jule::new_struct<_1a66a95ad_Scanner>(new( std::nothrow ) _1a66a95ad_Scanner(_1a665a62a_FileStream::_static_method_new(_2428_f),jule::Slice<jule::U8>()));
}



inline void _1a66a95ad_Scanner::_method_reset(void) {
	(*this)._field_b=nullptr;
}



inline jule::Slice<jule::U8> _1a66a95ad_Scanner::_method_bytes(void) {
	return (*this)._field_b;
}



inline jule::Str _1a66a95ad_Scanner::_method_text(void) {
	return static_cast<jule::Str>((*this)._field_b);
}



inline jule::Exceptional<jule::Bool> _1a66a95ad_Scanner::_method_scan(void) {
	
	(*this)._method_reset();
	jule::Slice<jule::U8> _5117_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _5217_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::Int _5417_n = ({
				auto except = (*this)._field_r.get()._method_read(_5217_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
				} jule::Int();});
			});
			if (_5417_n == 0LL) {
				goto _iter_end_1a8223c6e;
			}
			jule::U8 _6117_b = _5217_part[0LL];
			if (_6117_b == 10LLU) {
				goto _iter_end_1a8223c6e;
			}
			_5117_buff = jule::alloc_for_append(_5117_buff,1);_5117_buff.__push(_6117_b);
		}
	_iter_next_1a8223c6e:;
	}
	_iter_end_1a8223c6e:;
	(*this)._field_b=_5117_buff;
	return jule::Exceptional<jule::Bool>(jule::Any(),_5217_part[0LL] != 0LLU);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a66a95ad_Scanner &_Src) {
	_Stream << "Scanner{";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "b:" << _Src._field_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd0be530_OperatorMap &_Src) {
	_Stream << "OperatorMap{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd0be530_Operators &_Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd0be530_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_OperandExprModel &_Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_BuiltinErrorCallExprModel &_Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_IntegratedToStrExprModel &_Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_TernaryExprModel &_Src) {
	_Stream << "TernaryExprModel{";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_BackendEmitExprModel &_Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_FreeExprModel &_Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dded9702_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dded9702_ParamIns::_method_to_str(void) {
	jule::Str _18117_s = jule::Str();
	if ((*((*this)._field_decl))._field_mutable) {
		_18117_s+=jule::Str("mut ", 4);
	}
	if ((*((*this)._field_decl))._field_reference) {
		_18117_s+=jule::Str("&_:", 3);
	}
	if ((*((*this)._field_decl))._method_is_self()) {
		if ((*((*this)._field_decl))._method_is_ref()) {
			_18117_s+=jule::Str("&", 1);
		}
		_18117_s+=jule::Str("self", 4);
		return _18117_s;
	}
	if ((*((*this)._field_decl))._field_variadic) {
		_18117_s+=jule::Str("...", 3);
	}
	if ((*this)._field_kind != nullptr) {
		_18117_s+=(*((*this)._field_kind))._method_to_str();
	}
	return _18117_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dded9702_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dded9702_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



inline jule::Bool _1dded9702_FnIns::_method_equals(jule::Ptr<_1a5e40a26_TypeKind> _23626_other) {
	jule::Ptr<_1dded9702_FnIns> _23713_f = (*(_23626_other))._method_fnc();
	if (_23713_f == nullptr) {
		return false;
	}
	if ((*((*(this->self))._field_decl))._field_exceptional != (*((*(_23713_f))._field_decl))._field_exceptional) {
		return false;
	}
	if ((*((*(this->self))._field_decl))._field_unsafety != (*((*(_23713_f))._field_decl))._field_unsafety) {
		return false;
	}
	if ((*(this->self))._field_generics.len() != static_cast<jule::Int>((*(_23713_f))._field_generics.len())) {
		return false;
	}
	if ((*((*(this->self))._field_decl))._method_is_void() != (*((*(_23713_f))._field_decl))._method_is_void()) {
		return false;
	}
	jule::Int _25817_i = 0LL;
	for (; _25817_i < static_cast<jule::Int>((*(this->self))._field_generics.len()); (_25817_i)++) {
		{
			if ((!((*((*(this->self))._field_generics[_25817_i]))._method_equals((*(_23713_f))._field_generics[_25817_i])))) {
				return false;
			}
		}
	_iter_next_1a8414954:;
	}
	_iter_end_1a8414954:;
	jule::Fn<jule::Bool(jule::Ptr<_1dded9702_ParamIns>,jule::Ptr<_1dded9702_ParamIns>)> _26513_check_params = jule::Fn<jule::Bool(jule::Ptr<_1dded9702_ParamIns>,jule::Ptr<_1dded9702_ParamIns>)>([=](jule::Ptr<_1dded9702_ParamIns> _26531_p1,jule::Ptr<_1dded9702_ParamIns> _26546_p2) mutable -> jule::Bool {
		if ((*((*(_26531_p1))._field_decl))._field_mutable != (*((*(_26546_p2))._field_decl))._field_mutable) {
			return false;
		}
		if ((*((*(_26531_p1))._field_decl))._method_is_self()) {
			if ((!((*((*(_26546_p2))._field_decl))._method_is_self()))) {
				return false;
			}
			if ((*((*(_26531_p1))._field_decl))._method_is_ref() != (*((*(_26546_p2))._field_decl))._method_is_ref()) {
				return false;
			}
			return true;
		}
		if ((*((*(_26531_p1))._field_decl))._field_reference != (*((*(_26546_p2))._field_decl))._field_reference) {
			return false;
		}
		if ((*((*(_26531_p1))._field_decl))._field_variadic != (*((*(_26546_p2))._field_decl))._field_variadic) {
			return false;
		}
		return (*((*(_26531_p1))._field_kind))._method_equals((*(_26546_p2))._field_kind);
	});
	_25817_i=0LL;
	for (; _25817_i < static_cast<jule::Int>((*(this->self))._field_params.len()); (_25817_i)++) {
		{
			if ((!(_26513_check_params((*(this->self))._field_params[_25817_i],(*(_23713_f))._field_params[_25817_i])))) {
				return false;
			}
		}
	_iter_next_1a841d9c4:;
	}
	_iter_end_1a841d9c4:;
	if ((!((*((*(this->self))._field_decl))._method_is_void()))) {
		if ((!((*((*(this->self))._field_result))._method_equals((*(_23713_f))._field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1dded9702_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != 0LLU;
}



inline jule::Bool _1dded9702_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (((*this)._field_decl != nullptr) && (*((*this)._field_decl))._method_is_anon());
}



inline jule::Bool _1dded9702_FnIns::_method_same(jule::Ptr<_1dded9702_FnIns> _32223_f) {
	if (((*this)._field_decl != (*(_32223_f))._field_decl) || ((*(_32223_f))._field_generics.len() != static_cast<jule::Int>((*this)._field_generics.len()))) {
		return false;
	}
	{
		auto &expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_1a8423ba5:;
		if (it != expr.end()) {
			jule::Int _1dded9702_i = it - expr.begin();
			jule::Ptr<_1a5e40a26_TypeKind> &_1dded9702_g = *it;
			{
				if ((!((*(_1dded9702_g))._method_equals((*(_32223_f))._field_generics[_1dded9702_i])))) {
					return false;
				}
			}
			_iter_next_1a8423ba5:;
			++it;
			_1dded9702_i++;
			goto _iter_begin_1a8423ba5;
		}
		_iter_end_1a8423ba5:;
	}
	return true;
}



inline jule::Str _1dded9702_FnIns::_method_get_kind_str(jule::Bool _33831_ident) {
	jule::Str _33917_s = jule::Str();
	if ((*((*this)._field_decl))._field_unsafety) {
		_33917_s+=jule::Str("unsafe ", 7);
	}
	_33917_s+=jule::Str("fn", 2);
	if (_33831_ident && ((*this)._field_decl != nullptr)) {
		_33917_s+=jule::Str(" ", 1) + (*((*this)._field_decl))._field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_33917_s+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_1a84272a2:;
			if (it != expr.end()) {
				jule::Int _1dded9702_i = it - expr.begin();
				jule::Ptr<_1a5e40a26_TypeKind> &_1dded9702_t = *it;
				{
					_33917_s+=(*(_1dded9702_t))._method_to_str();
					if ((_1dded9702_i + 1LL) < static_cast<jule::Int>((*this)._field_generics.len())) {
						_33917_s+=jule::Str(",", 1);
					}
				}
				_iter_next_1a84272a2:;
				++it;
				_1dded9702_i++;
				goto _iter_begin_1a84272a2;
			}
			_iter_end_1a84272a2:;
		}
		_33917_s+=jule::Str("]", 1);
	} else if ((*((*this)._field_decl))._field_generics.len() > 0LL) {
		_33917_s+=jule::Str("[", 1);
		{
			auto &expr = (*((*this)._field_decl))._field_generics;
			auto it = expr.begin();
			_iter_begin_1a842922c:;
			if (it != expr.end()) {
				jule::Int _1dded9702_i = it - expr.begin();
				jule::Ptr<_1dd05c765_GenericDecl> &_1dded9702_g = *it;
				{
					_33917_s+=(*(_1dded9702_g))._field_ident;
					if ((_1dded9702_i + 1LL) < static_cast<jule::Int>((*((*this)._field_decl))._field_generics.len())) {
						_33917_s+=jule::Str(",", 1);
					}
				}
				_iter_next_1a842922c:;
				++it;
				_1dded9702_i++;
				goto _iter_begin_1a842922c;
			}
			_iter_end_1a842922c:;
		}
		_33917_s+=jule::Str("]", 1);
	}
	_33917_s+=jule::Str("(", 1);
	jule::Int _37213_n = (*this)._field_params.len();
	if (_37213_n > 0LL) {
		{
			auto &expr = (*this)._field_params;
			auto it = expr.begin();
			_iter_begin_1a842b729:;
			if (it != expr.end()) {
				jule::Ptr<_1dded9702_ParamIns> &_1dded9702_p = *it;
				{
					_33917_s+=(*(_1dded9702_p))._method_to_str();
					_33917_s+=jule::Str(",", 1);
				}
				_iter_next_1a842b729:;
				++it;
				goto _iter_begin_1a842b729;
			}
			_iter_end_1a842b729:;
		}
		_33917_s=_33917_s.slice(0LL,_33917_s.len() - 1LL);
	}
	_33917_s+=jule::Str(")", 1);
	if ((*((*this)._field_decl))._field_exceptional) {
		_33917_s+=jule::Str("!", 1);
	}
	if ((!((*((*this)._field_decl))._method_is_void()))) {
		_33917_s+=jule::Str(":", 1);
		_33917_s+=(*((*this)._field_result))._method_to_str();
	}
	return _33917_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dded9702_FnIns &_Src) {
	_Stream << ((_1dded9702_FnIns)(_Src))._method_to_str();
	return _Stream;
}



inline jule::Ptr<_1dded9779_ReferenceStack> _1dded9779_ReferenceStack::_static_method_new(void) {
	return jule::new_struct<_1dded9779_ReferenceStack>(new( std::nothrow ) _1dded9779_ReferenceStack());
}



inline jule::Int _1dded9779_ReferenceStack::_method_len(void) {
	return static_cast<jule::Int>((*this)._field_buffer.len());
}



inline jule::Any _1dded9779_ReferenceStack::_method_at(jule::Int _5925_i) {
	return (*this)._field_buffer[_5925_i];
}



inline void _1dded9779_ReferenceStack::_method_push(jule::Any _6431_ref) {
	(*this)._field_buffer = jule::alloc_for_append((*this)._field_buffer,1);(*this)._field_buffer.__push(_6431_ref);
}



inline jule::Bool _1dded9779_ReferenceStack::_method_exist_0(jule::Ptr<_1c3c3d174_Var> _6927_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a8a5103a:;
		if (it != expr.end()) {
			jule::Any &_1dded9779_ref = *it;
			{
				if (_1dded9779_ref == jule::Any(_6927_t)) {
					return true;
				}
			}
			_iter_next_1a8a5103a:;
			++it;
			goto _iter_begin_1a8a5103a;
		}
		_iter_end_1a8a5103a:;
	}
	return false;
}

inline jule::Bool _1dded9779_ReferenceStack::_method_exist_1(jule::Ptr<_1dded9702_FnIns> _6927_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a8a58dcd:;
		if (it != expr.end()) {
			jule::Any &_1dded9779_ref = *it;
			{
				if (_1dded9779_ref == jule::Any(_6927_t)) {
					return true;
				}
			}
			_iter_next_1a8a58dcd:;
			++it;
			goto _iter_begin_1a8a58dcd;
		}
		_iter_end_1a8a58dcd:;
	}
	return false;
}

inline jule::Bool _1dded9779_ReferenceStack::_method_exist_2(jule::Ptr<_1dd0be530_StructIns> _6927_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a8a65a55:;
		if (it != expr.end()) {
			jule::Any &_1dded9779_ref = *it;
			{
				if (_1dded9779_ref == jule::Any(_6927_t)) {
					return true;
				}
			}
			_iter_next_1a8a65a55:;
			++it;
			goto _iter_begin_1a8a65a55;
		}
		_iter_end_1a8a65a55:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dded9779_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dded9779_SymbolBuilder> _1dded9779_SymbolBuilder::_method_get_root(void) {
	jule::Ptr<_1dded9779_SymbolBuilder> _30217_root = this->self;
	while ((*(_30217_root))._field_owner != nullptr) {
		{
			_30217_root=(*(_30217_root))._field_owner;
		}
	_iter_next_1a8431850:;
	}
	_iter_end_1a8431850:;
	return _30217_root;
}



inline void _1dded9779_SymbolBuilder::_method_push_err(_1dd05db0c_Token& _30928_token,jule::Str _30942_fmt,jule::Slice<jule::Any> _30955_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.__push(_1c2c46634_compiler_err(_30928_token,true,_30942_fmt,_30955_args));
}



inline void _1dded9779_SymbolBuilder::_method_push_err_text(_1dd05db0c_Token& _31333_token,jule::Str _31347_fmt,jule::Slice<jule::Any> _31360_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.__push(_1c2c46634_compiler_err(_31333_token,false,_31347_fmt,_31360_args));
}



inline void _1dded9779_SymbolBuilder::_method_push_suggestion(jule::Str _31834_fmt,jule::Slice<jule::Any> _31847_args) {
	{
		_1c2c46634_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_31834_fmt,_31847_args);
	}
}



inline jule::Bool _1dded9779_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ptr<_1dd05c765_UseDecl>& _32243_decl) {
	jule::Bool _32261_ok = jule::Bool();
	if (_1db676578_is_std_header_path((*(_32243_decl))._field_link_path)) {
		_32261_ok = true;
		return _32261_ok;
	}
	jule::Str _32713_ext = _1db7b8830_ext((*(_32243_decl))._field_link_path);
	if ((!(_1db676578_is_valid_header_ext(_32713_ext))) && (!(_1db676578_is_valid_cpp_ext(_32713_ext)))) {
		(*this)._method_push_err((*(_32243_decl))._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_32713_ext)}));
		_32261_ok = false;
		return _32261_ok;
	}
	jule::Ptr<_1db6a27c4_Status> _33413_info = ({
		auto except = _1db6a27c4_Status::_static_method_of((*(_32243_decl))._field_link_path);
		(except.ok()) ? (except.result) : ({{
			(*this)._method_push_err((*(_32243_decl))._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any((*(_32243_decl))._field_link_path)}));
			_32261_ok = false;
			return _32261_ok;
			_32261_ok = false;
			return _32261_ok;
		} jule::Ptr<_1db6a27c4_Status>();});
	});
	if ((*(_33413_info))._method_is_dir()) {
		(*this)._method_push_err((*(_32243_decl))._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any((*(_32243_decl))._field_link_path)}));
		_32261_ok = false;
		return _32261_ok;
	}
	_32261_ok = true;
	return _32261_ok;
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1dded9779_SymbolBuilder::_method_build_cpp_header_import(jule::Ptr<_1dd05c765_UseDecl>& _34647_decl) {
	jule::Str _34717_path = (*(_34647_decl))._field_link_path;
	if ((!(_1db676578_is_std_header_path((*(_34647_decl))._field_link_path)))) {
		jule::Bool _35021_ok = (*this)._method_check_cpp_use_decl_path(_34647_decl);
		if ((!(_35021_ok))) {
			return nullptr;
		}
		std::tie(_34717_path,_35021_ok) = _1db7b8830_abs((*(_34647_decl))._field_link_path);
		if ((!(_35021_ok))) {
			(*this)._method_push_err((*(_34647_decl))._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any((*(_34647_decl))._field_link_path)}));
		}
	}
	return jule::new_struct<_1c2c4607e_ImportInfo>(new( std::nothrow ) _1c2c4607e_ImportInfo((*(_34647_decl))._field_token,_34717_path,(*(_34647_decl))._field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_1dd05db0c_Token>(),nullptr,jule::Int()));
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1dded9779_SymbolBuilder::_method_build_std_import(jule::Ptr<_1dd05c765_UseDecl>& _37340_decl) {
	jule::Str _37417_path = (*(_37340_decl))._field_link_path.slice(5LL);
	_37417_path=_1db822922_replace(_37417_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_37417_path=_1db7b8830_join(jule::Slice<jule::Str>({_1db841039_PATH_STDLIB,_37417_path}));
	jule::Bool _37720_ok;
	std::tie(_37417_path,_37720_ok) = _1db7b8830_abs(_37417_path);
	if ((!(_37720_ok))) {
		(*this)._method_push_err((*(_37340_decl))._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any((*(_37340_decl))._field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1db6a27c4_Status> _38413_info = ({
		auto except = _1db6a27c4_Status::_static_method_of(_37417_path);
		(except.ok()) ? (except.result) : ({{
			(*this)._method_push_err((*(_37340_decl))._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any((*(_37340_decl))._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1db6a27c4_Status>();});
	});
	if ((!((*(_38413_info))._method_is_dir()))) {
		(*this)._method_push_err((*(_37340_decl))._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any((*(_37340_decl))._field_link_path)}));
		return nullptr;
	}
	jule::Int _39413_i = _1db822922_find_last((*(_37340_decl))._field_link_path,jule::Str("::", 2)) + 1LL;
	jule::Str _39513_ident = (*(_37340_decl))._field_link_path.slice(_39413_i);
	return jule::new_struct<_1c2c4607e_ImportInfo>(new( std::nothrow ) _1c2c4607e_ImportInfo((*(_37340_decl))._field_token,_37417_path,(*(_37340_decl))._field_link_path,_39513_ident,(*(_37340_decl))._field_alias,jule::Bool(),false,true,(*(_37340_decl))._field_full,jule::Slice<_1dd05db0c_Token>(),jule::new_struct<_1c2c4607e_Package>(new( std::nothrow ) _1c2c4607e_Package(nullptr)),jule::Int()));
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1dded9779_SymbolBuilder::_method_build_ident_import(jule::Ptr<_1dd05c765_UseDecl>& _41243_decl) {
	jule::Str _41313_mod_path = (*(this->self))._field_importer.get()._method_get_mod_path();
	if (_41313_mod_path.len() == 0LL) {
		(*(this->self))._method_push_err((*(_41243_decl))._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Str _42017_path = (*(_41243_decl))._field_link_path;
	_42017_path=_1db822922_replace(_42017_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_42017_path=_1db7b8830_join(jule::Slice<jule::Str>({_41313_mod_path,_42017_path}));
	jule::Bool _42420_ok;
	std::tie(_42017_path,_42420_ok) = _1db7b8830_abs(_42017_path);
	if ((!(_42420_ok))) {
		(*(this->self))._method_push_err((*(_41243_decl))._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any((*(_41243_decl))._field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1db6a27c4_Status> _43113_info = ({
		auto except = _1db6a27c4_Status::_static_method_of(_42017_path);
		(except.ok()) ? (except.result) : ({{
			(*(this->self))._method_push_err((*(_41243_decl))._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any((*(_41243_decl))._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1db6a27c4_Status>();});
	});
	if ((!((*(_43113_info))._method_is_dir()))) {
		(*(this->self))._method_push_err((*(_41243_decl))._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any((*(_41243_decl))._field_link_path)}));
		return nullptr;
	}
	jule::Int _44113_i = _1db822922_find_last((*(_41243_decl))._field_link_path,jule::Str("::", 2)) + 1LL;
	jule::Str _44213_ident = (*(_41243_decl))._field_link_path.slice(_44113_i);
	return jule::new_struct<_1c2c4607e_ImportInfo>(new( std::nothrow ) _1c2c4607e_ImportInfo((*(_41243_decl))._field_token,_42017_path,(*(_41243_decl))._field_link_path,_44213_ident,(*(_41243_decl))._field_alias,jule::Bool(),false,false,(*(_41243_decl))._field_full,jule::Slice<_1dd05db0c_Token>(),jule::new_struct<_1c2c4607e_Package>(new( std::nothrow ) _1c2c4607e_Package(nullptr)),jule::Int()));
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1dded9779_SymbolBuilder::_method_build_import(jule::Ptr<_1dd05c765_UseDecl>& _45937_decl) {
	{
		
		if ((*(_45937_decl))._field_cpp_linked) {
			_case_begin_1a8453971:;
			{
				return (*(this->self))._method_build_cpp_header_import(_45937_decl);
			}
		}
		else if ((*(_45937_decl))._field_std) {
			_case_begin_1a84533ee:;
			{
				return (*(this->self))._method_build_std_import(_45937_decl);
			}
		}
		else {
			_case_begin_1a8452cd3:;
			{
				return (*(this->self))._method_build_ident_import(_45937_decl);
			}
		}
		_match_end_1a8452c17:;
	}
}



inline jule::Bool _1dded9779_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ptr<_1c2c4607e_ImportInfo>& _46744_pkg) {
	jule::Bool _46764_ok = jule::Bool();
	jule::Ptr<_1c2c4607e_ImportInfo> _46913_lpkg = (*((*this)._field_table))._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)>([=](jule::Ptr<_1c2c4607e_ImportInfo> _46949_spkg) mutable -> jule::Bool {
		return (*(_46744_pkg))._field_path == (*(_46949_spkg))._field_path;
	}));
	if (_46913_lpkg == nullptr) {
		_46764_ok = true;
		return _46764_ok;
	}
	(*this)._method_push_err((*(_46744_pkg))._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>({jule::Any((*(_46744_pkg))._field_link_path)}));
	(*this)._method_push_suggestion(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_46764_ok = false;
	return _46764_ok;
}



inline void _1dded9779_SymbolBuilder::_method_impl_import_selections(jule::Ptr<_1c2c4607e_ImportInfo>& _48146_imp,jule::Ptr<_1dd05c765_UseDecl>& _48169_decl) {
	{
		auto &expr = (*(_48169_decl))._field_selected;
		auto it = expr.begin();
		_iter_begin_1a8459889:;
		if (it != expr.end()) {
			_1dd05db0c_Token _1dded9779_ident = *it;
			{
				if ((*(_48146_imp))._method_exist_ident(_1dded9779_ident._field_kind)) {
					(*this)._method_push_err(_1dded9779_ident,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>({jule::Any(_1dded9779_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_1a8459889;
				}
				(*(_48146_imp))._field_selected = jule::alloc_for_append((*(_48146_imp))._field_selected,1);(*(_48146_imp))._field_selected.__push(_1dded9779_ident);
			}
			_iter_next_1a8459889:;
			++it;
			goto _iter_begin_1a8459889;
		}
		_iter_end_1a8459889:;
	}
}



inline jule::Str _1dded9779_SymbolBuilder::_method_get_as_link_path(jule::Str _49340_path) {
	if (_1db822922_has_prefix(_49340_path,_1db841039_PATH_STDLIB)) {
		_49340_path=_49340_path.slice(_1db841039_PATH_STDLIB.len());
		return jule::Str("std", 3) + _1db822922_replace(_49340_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _49914_root;
	std::tie(_49914_root,std::ignore) = _1db7b8830_abs((*(this->self))._field_importer.get()._method_get_mod_path());
	_49340_path=_49340_path.slice(_49914_root.len());
	if (_49340_path[0LL] == 92LLU) {
		_49340_path=_49340_path.slice(1LL);
	}
	return _1db822922_replace(_49340_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1dded9779_SymbolBuilder::_method_push_cycle_error(jule::Ptr<_1dded9779_SymbolBuilder>& _50737_sb,jule::Str _50757_path,jule::Str& _50773_message) {
	
	jule::Str _51013_refers_to = _1db678789_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any((*(this->self))._method_get_as_link_path((*((*((*(_50737_sb))._field_table))._field_file))._method_dir())),jule::Any((*(this->self))._method_get_as_link_path(_50757_path))}));
	_50773_message=((_1db822922_repeat(jule::Str(" ", 1),4LL) + _51013_refers_to) + jule::Str("\n", 1)) + _50773_message;
}



inline void _1dded9779_SymbolBuilder::_method_push_cross_cycle_error(jule::Ptr<_1dded9779_SymbolBuilder>& _51743_target,jule::Ptr<_1c2c4607e_ImportInfo>& _51768_imp,_1dd05db0c_Token& _51787_error_token) {
	jule::Str _51817_message = jule::Str();
	(*(this->self))._method_push_cycle_error(this->self,(*(_51768_imp))._field_path,_51817_message);
	jule::Ptr<_1dded9779_SymbolBuilder> _52217_owner = (*(this->self))._field_owner;
	jule::Ptr<_1dded9779_SymbolBuilder> _52317_old = this->self;
	while ((*(_52217_owner))._field_owner != nullptr) {
		{
			(*(this->self))._method_push_cycle_error((*(_52317_old))._field_owner,(*((*((*(_52317_old))._field_table))._field_file))._method_dir(),_51817_message);
			if ((*(_52217_owner))._field_owner == _51743_target) {
				(*(this->self))._method_push_cycle_error(_51743_target,(*((*((*(_52217_owner))._field_table))._field_file))._method_dir(),_51817_message);
				goto _iter_end_1a8465b3c;
			}
			_52317_old=_52217_owner;
			_52217_owner=(*(_52217_owner))._field_owner;
		}
	_iter_next_1a8465b3c:;
	}
	_iter_end_1a8465b3c:;
	(*(this->self))._method_push_err(_51787_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_51817_message)}));
}



inline jule::Bool _1dded9779_SymbolBuilder::_method_check_import_cycles(jule::Ptr<_1c2c4607e_ImportInfo> _54039_imp,jule::Ptr<_1dd05c765_UseDecl>& _54058_decl) {
	if ((*(_54039_imp))._field_path == (*((*((*(this->self))._field_table))._field_file))._method_dir()) {
		(*(this->self))._method_push_err((*(_54058_decl))._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any((*(this->self))._method_get_as_link_path((*(_54039_imp))._field_path))}));
		return false;
	}
	if ((*(this->self))._field_owner == nullptr) {
		return true;
	}
	if ((*((*((*((*(this->self))._field_owner))._field_table))._field_file))._method_dir() == (*(_54039_imp))._field_path) {
		(*(this->self))._method_push_cross_cycle_error((*(this->self))._field_owner,_54039_imp,(*(_54058_decl))._field_token);
		return false;
	}
	jule::Ptr<_1dded9779_SymbolBuilder> _55517_owner = (*(this->self))._field_owner;
	_julec_label_iter:;
	if ((*((*((*(_55517_owner))._field_table))._field_file))._method_dir() == (*(_54039_imp))._field_path) {
		(*(this->self))._method_push_cross_cycle_error(_55517_owner,_54039_imp,(*(_54058_decl))._field_token);
		return false;
	}
	if ((*(_55517_owner))._field_owner != nullptr) {
		_55517_owner=(*(_55517_owner))._field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline void _1dded9779_SymbolBuilder::_method_check_package_accessibility(jule::Ptr<_1dd05c765_UseDecl>& _57647_decl,jule::Str& _57664_mod,jule::Str& _57675_path) {
	if (((*this)._field_importer.get()._method_get_mod_path() != _57664_mod) && _1db822922_contains(_57675_path,jule::Str("internal", 8))) {
		(*this)._method_push_err((*(_57647_decl))._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	}
}



inline jule::Bool _1dded9779_SymbolBuilder::_method_import_package(jule::Ptr<_1c2c4607e_ImportInfo>& _58239_imp,jule::Ptr<_1dd05c765_UseDecl>& _58262_decl) {
	jule::Bool _58280_ok = jule::Bool();
	if ((*(_58239_imp))._field_cpp_linked) {
		_58280_ok = true;
		return _58280_ok;
	}
	jule::Ptr<_1c2c4607e_ImportInfo> _58717_port = (*(this->self))._field_importer.get()._method_get_import((*(_58239_imp))._field_path);
	if (_58717_port != nullptr) {
		(*(_58239_imp))._field_package=(*(_58717_port))._field_package;
		(*(_58239_imp))._field_duplicate=true;
		jule::Str _59217_old_mod = (*(this->self))._field_importer.get()._method_get_mod_path();
		(*(this->self))._field_importer.get()._method_set_mod_path((*(this->self))._field_importer.get()._method_mod_by_id((*(_58239_imp))._field_mod_id));
		(*(this->self))._method_check_package_accessibility(_58262_decl,_59217_old_mod,(*(_58717_port))._field_path);
		(*(this->self))._field_importer.get()._method_set_mod_path(_59217_old_mod);
	} else {
		if ((!((*(this->self))._method_check_import_cycles(_58239_imp,_58262_decl)))) {
			_58280_ok = false;
			return _58280_ok;
		}
		jule::Str _60117_old_mod = (*(this->self))._field_importer.get()._method_get_mod_path();
		__JULE_DEFER({
			(*(this->self))._field_importer.get()._method_set_mod_path(_60117_old_mod);
		});
		if ((*(_58239_imp))._field_std) {
			(*(this->self))._field_importer.get()._method_set_mod_path(_1db841039_PATH_STDLIB);
		}
		jule::Slice<jule::Ptr<_1dd05b9c8_Ast>> _60622_asts;
		jule::Slice<_1db678789_Log> _60628_errors;
		std::tie(_60622_asts,_60628_errors) = (*(this->self))._field_importer.get()._method_import_package((*(_58239_imp))._field_path,(!((*(_58239_imp))._field_std)));
		if (_60628_errors.len() > 0LL) {
			(*(this->self))._field_errors=jule::append((*(this->self))._field_errors,_60628_errors);
			_58280_ok = false;
			return _58280_ok;
		}
		(*(this->self))._method_check_package_accessibility(_58262_decl,_60117_old_mod,(*(_58239_imp))._field_path);
		{
			auto &expr = _60622_asts;
			auto it = expr.begin();
			_iter_begin_1a847be2d:;
			if (it != expr.end()) {
				jule::Ptr<_1dd05b9c8_Ast> _1dded9779_ast = *it;
				{
					jule::Ptr<_1a943b749_SymbolTable> _61526_table;
					jule::Slice<_1db678789_Log> _61533_errors;
					std::tie(_61526_table,_61533_errors) = _1a633736d_build_symbols(_1dded9779_ast,(*(this->self))._field_importer,this->self);
					if (_61533_errors.len() > 0LL) {
						(*(this->self))._field_errors=jule::append((*(this->self))._field_errors,_61533_errors);
						(*(this->self))._method_push_err_text((*(_58239_imp))._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any((*(_58239_imp))._field_link_path)}));
						_58280_ok = false;
						return _58280_ok;
					}
					(*((*(_58239_imp))._field_package))._field_files = jule::alloc_for_append((*((*(_58239_imp))._field_package))._field_files,1);(*((*(_58239_imp))._field_package))._field_files.__push(_61526_table);
				}
				_iter_next_1a847be2d:;
				++it;
				goto _iter_begin_1a847be2d;
			}
			_iter_end_1a847be2d:;
		}
	}
	(*(this->self))._method_impl_import_selections(_58239_imp,_58262_decl);
	_58280_ok = true;
	return _58280_ok;
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1dded9779_SymbolBuilder::_method_import_use_decl(jule::Ptr<_1dd05c765_UseDecl>& _63340_decl) {
	jule::Ptr<_1c2c4607e_ImportInfo> _63417_imp = (*(this->self))._method_build_import(_63340_decl);
	if (_63417_imp == nullptr) {
		return nullptr;
	}
	jule::Bool _64017_ok = (*(this->self))._method_check_duplicate_use_decl(_63417_imp);
	if ((!(_64017_ok))) {
		return nullptr;
	}
	_64017_ok=(*(this->self))._method_import_package(_63417_imp,_63340_decl);
	(*((*(this->self))._field_table))._field_imports = jule::alloc_for_append((*((*(this->self))._field_table))._field_imports,1);(*((*(this->self))._field_table))._field_imports.__push(_63417_imp);
	if (_64017_ok) {
		(*(this->self))._field_importer.get()._method_imported(_63417_imp);
		return _63417_imp;
	}
	return nullptr;
}



inline void _1dded9779_SymbolBuilder::_method_import_use_decls(void) {
	{
		auto &expr = (*((*(this->self))._field_ast))._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1a8485772:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_UseDecl> _1dded9779_decl = *it;
			{
				(*(this->self))._method_import_use_decl(_1dded9779_decl);
				if ((*(this->self))._field_errors.len() > 0LL) {
					goto _iter_end_1a8485772;
				}
			}
			_iter_next_1a8485772:;
			++it;
			goto _iter_begin_1a8485772;
		}
		_iter_end_1a8485772:;
	}
}



inline void _1dded9779_SymbolBuilder::_method_append_decl(_1dd05c765_Node& _66535_decl) {
	{
		auto &_match_expr{ _66535_decl._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_TypeAliasDecl>>()) {
			_case_begin_1a8487521:;
			{
				jule::Ptr<_1a5e40a26_TypeAlias> _66821_ta = _1dded9779_build_type_alias(_66535_decl._field_data.operator jule::Ptr<_1dd05c765_TypeAliasDecl>());
				(*((*this)._field_table))._field_type_aliases = jule::alloc_for_append((*((*this)._field_table))._field_type_aliases,1);(*((*this)._field_table))._field_type_aliases.__push(_66821_ta);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_StructDecl>>()) {
			_case_begin_1a84871e1:;
			{
				jule::Ptr<_1dd0be530_Struct> _67221_srct = _1dded9779_build_struct(_66535_decl._field_data.operator jule::Ptr<_1dd05c765_StructDecl>());
				(*((*this)._field_table))._field_structs = jule::alloc_for_append((*((*this)._field_table))._field_structs,1);(*((*this)._field_table))._field_structs.__push(_67221_srct);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_FnDecl>>()) {
			_case_begin_1a8487257:;
			{
				jule::Ptr<_1dded9702_Fn> _67621_f = _1dded9779_build_fn(_66535_decl._field_data.operator jule::Ptr<_1dd05c765_FnDecl>());
				(*((*this)._field_table))._field_funcs = jule::alloc_for_append((*((*this)._field_table))._field_funcs,1);(*((*this)._field_table))._field_funcs.__push(_67621_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_TraitDecl>>()) {
			_case_begin_1a84872bd:;
			{
				jule::Ptr<_1de043c01_Trait> _68021_t = _1dded9779_build_trait(_66535_decl._field_data.operator jule::Ptr<_1dd05c765_TraitDecl>());
				(*((*this)._field_table))._field_traits = jule::alloc_for_append((*((*this)._field_table))._field_traits,1);(*((*this)._field_table))._field_traits.__push(_68021_t);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_VarDecl>>()) {
			_case_begin_1a8487345:;
			{
				jule::Ptr<_1c3c3d174_Var> _68421_v = _1dded9779_build_var(_66535_decl._field_data.operator jule::Ptr<_1dd05c765_VarDecl>());
				(*((*this)._field_table))._field_vars = jule::alloc_for_append((*((*this)._field_table))._field_vars,1);(*((*this)._field_table))._field_vars.__push(_68421_v);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_EnumDecl>>()) {
			_case_begin_1a8487b09:;
			{
				jule::Ptr<_1de0dbeb9_Enum> _68821_e = _1dded9779_build_enum(_66535_decl._field_data.operator jule::Ptr<_1dd05c765_EnumDecl>());
				(*((*this)._field_table))._field_enums = jule::alloc_for_append((*((*this)._field_table))._field_enums,1);(*((*this)._field_table))._field_enums.__push(_68821_e);
			}
		}
		else {
			_case_begin_1a848708c:;
			{
				(*this)._method_push_err(_66535_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8486ed2:;
	}
}



inline void _1dded9779_SymbolBuilder::_method_append_decls(void) {
	{
		auto &expr = (*((*this)._field_ast))._field_decls;
		auto it = expr.begin();
		_iter_begin_1a848e5d3:;
		if (it != expr.end()) {
			_1dd05c765_Node _1dded9779_decl = *it;
			{
				(*this)._method_append_decl(_1dded9779_decl);
			}
			_iter_next_1a848e5d3:;
			++it;
			goto _iter_begin_1a848e5d3;
		}
		_iter_end_1a848e5d3:;
	}
}



inline void _1dded9779_SymbolBuilder::_method_append_impls(void) {
	(*((*this)._field_table))._field_impls=jule::Slice<jule::Ptr<_1de0e21cd_Impl>>::alloc(0LL,static_cast<jule::Int>((*((*this)._field_ast))._field_impls.len()));
	{
		auto &expr = (*((*this)._field_ast))._field_impls;
		auto it = expr.begin();
		_iter_begin_1a8490bbc:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Impl> _1dded9779_decl = *it;
			{
				(*((*this)._field_table))._field_impls = jule::alloc_for_append((*((*this)._field_table))._field_impls,1);(*((*this)._field_table))._field_impls.__push(_1dded9779_build_impl(_1dded9779_decl));
			}
			_iter_next_1a8490bbc:;
			++it;
			goto _iter_begin_1a8490bbc;
		}
		_iter_end_1a8490bbc:;
	}
}



inline void _1dded9779_SymbolBuilder::_method_push_directive_pass(jule::Ptr<_1dd05c765_Directive>& _70943_d) {
	if ((*(_70943_d))._field_args.len() == 0LL) {
		(*this)._method_push_err((*(_70943_d))._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if ((*(_70943_d))._field_args.len() > 1LL) {
		_1dd05db0c_Token _71417_arg = (*(_70943_d))._field_args[1LL];
		(*this)._method_push_err(_71417_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	_1dd05db0c_Token _71813_arg = (*(_70943_d))._field_args[0LL];
	if (_71813_arg._field_id != static_cast<jule::Uint>(6LLU)) {
		(*this)._method_push_err(_71813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_71813_arg._field_kind[0LL] != '\"') {
		(*this)._method_push_err(_71813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	(*((*this)._field_table))._field_passes = jule::alloc_for_append((*((*this)._field_table))._field_passes,1);(*((*this)._field_table))._field_passes.__push(_1dded9779_Pass((*(_70943_d))._field_tag,_71813_arg._field_kind.slice(1LL,_71813_arg._field_kind.len() - 1LL)));
}



inline void _1dded9779_SymbolBuilder::_method_append_top_directives(void) {
	{
		auto &expr = (*((*this)._field_ast))._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1a8497454:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Directive> _1dded9779_d = *it;
			{
				{
					auto &_match_expr{ (*(_1dded9779_d))._field_tag._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1a8498d07:;
						{
							(*this)._method_push_directive_pass(_1dded9779_d);
						}
					}
					_match_end_1a8498c80:;
				}
			}
			_iter_next_1a8497454:;
			++it;
			goto _iter_begin_1a8497454;
		}
		_iter_end_1a8497454:;
	}
}



inline void _1dded9779_SymbolBuilder::_method_build(void) {
	(*(this->self))._field_table=jule::new_struct<_1a943b749_SymbolTable>(new( std::nothrow ) _1a943b749_SymbolTable((*((*(this->self))._field_ast))._field_file,jule::Slice<_1dded9779_Pass>(),jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>>(),jule::Slice<jule::Ptr<_1c3c3d174_Var>>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Slice<jule::Ptr<_1dd0be530_Struct>>(),jule::Slice<jule::Ptr<_1dded9702_Fn>>(),jule::Slice<jule::Ptr<_1de043c01_Trait>>(),jule::Slice<jule::Ptr<_1de0dbeb9_Enum>>(),jule::Slice<jule::Ptr<_1de0e21cd_Impl>>()));
	(*(this->self))._method_append_top_directives();
	(*(this->self))._method_import_use_decls();
	if ((*(this->self))._field_errors.len() > 0LL) {
		return;
	}
	(*(this->self))._method_append_decls();
	if ((*(this->self))._field_errors.len() > 0LL) {
		return;
	}
	(*(this->self))._method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _1dded9779_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1de0e21cd_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base != nullptr;
}



inline jule::Bool _1de0e21cd_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e21cd_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1de0e938e_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1de0e938e_Match::_method_is_generic_type_match(void) {
	return ((*this)._field_type_match && ((*this)._field_expr != nullptr)) && (*((*((*this)._field_expr))._field_kind))._field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1de0e938e_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1de0e938e_ScopeChecker::_method_find_package(jule::Str _41535_ident) {
	return (*((*this)._field_s))._method_find_package(_41535_ident);
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1de0e938e_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)> _42537_selector) {
	return (*((*this)._field_s))._method_select_package(_42537_selector);
}



inline jule::Ptr<_1c3c3d174_Var> _1de0e938e_ScopeChecker::_method_find_var(jule::Str _43631_ident,jule::Bool _43643_cpp_linked) {
	
	jule::Ptr<_1c3c3d174_Var> _43917_v = (*((*this)._field_table))._method___find_var(_43631_ident,_43643_cpp_linked,true);
	if (_43917_v != nullptr) {
		return _43917_v;
	}
	jule::Ptr<_1de0e938e_ScopeChecker> _44417_parent = (*this)._field_parent;
	while (_44417_parent != nullptr) {
		{
			_43917_v=(*((*(_44417_parent))._field_table))._method___find_var(_43631_ident,_43643_cpp_linked,true);
			if (_43917_v != nullptr) {
				return _43917_v;
			}
			_44417_parent=(*(_44417_parent))._field_parent;
		}
	_iter_next_1a84ae02b:;
	}
	_iter_end_1a84ae02b:;
	return (*((*this)._field_s))._method_find_var(_43631_ident,_43643_cpp_linked);
}



inline jule::Ptr<_1a5e40a26_TypeAlias> _1de0e938e_ScopeChecker::_method_find_type_alias(jule::Str _46338_ident,jule::Bool _46350_cpp_linked) {
	
	jule::Ptr<_1a5e40a26_TypeAlias> _46617_ta = (*((*this)._field_table))._method___find_type_alias(_46338_ident,_46350_cpp_linked,true);
	if (_46617_ta != nullptr) {
		return _46617_ta;
	}
	jule::Ptr<_1de0e938e_ScopeChecker> _47117_parent = (*this)._field_parent;
	while (_47117_parent != nullptr) {
		{
			_46617_ta=(*((*(_47117_parent))._field_table))._method___find_type_alias(_46338_ident,_46350_cpp_linked,true);
			if (_46617_ta != nullptr) {
				return _46617_ta;
			}
			_47117_parent=(*(_47117_parent))._field_parent;
		}
	_iter_next_1a84b36d4:;
	}
	_iter_end_1a84b36d4:;
	return (*((*this)._field_s))._method_find_type_alias(_46338_ident,_46350_cpp_linked);
}



inline jule::Ptr<_1dd0be530_Struct> _1de0e938e_ScopeChecker::_method_find_struct(jule::Str _48834_ident,jule::Bool _48846_cpp_linked) {
	return (*((*this)._field_s))._method_find_struct(_48834_ident,_48846_cpp_linked);
}



inline jule::Ptr<_1dded9702_Fn> _1de0e938e_ScopeChecker::_method_find_fn(jule::Str _49730_ident,jule::Bool _49742_cpp_linked) {
	return (*((*this)._field_s))._method_find_fn(_49730_ident,_49742_cpp_linked);
}



inline jule::Ptr<_1de043c01_Trait> _1de0e938e_ScopeChecker::_method_find_trait(jule::Str _50633_ident) {
	return (*((*this)._field_s))._method_find_trait(_50633_ident);
}



inline jule::Ptr<_1de0dbeb9_Enum> _1de0e938e_ScopeChecker::_method_find_enum(jule::Str _51532_ident) {
	return (*((*this)._field_s))._method_find_enum(_51532_ident);
}



inline jule::Bool _1de0e938e_ScopeChecker::_method_is_unsafe(void) {
	jule::Ptr<_1de0e938e_ScopeChecker> _52317_scope = this->self;
	_julec_label_iter:;
	if ((*((*(_52317_scope))._field_scope))._field_unsafety) {
		return true;
	}
	if ((*(_52317_scope))._field_parent != nullptr) {
		_52317_scope=(*(_52317_scope))._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1de0e938e_ScopeChecker::_method_is_root(void) {
	return ((*this)._field_parent == nullptr) || ((*this)._field_owner != nullptr);
}



inline void _1de0e938e_ScopeChecker::_method_stop(void) {
	(*this)._field_i=-1LL;
}



inline jule::Bool _1de0e938e_ScopeChecker::_method_stopped(void) {
	return (*this)._field_i == -1LL;
}



inline jule::Bool _1de0e938e_ScopeChecker::_method_is_deferred(void) {
	jule::Ptr<_1de0e938e_ScopeChecker> _55617_scope = this->self;
	_julec_label_iter:;
	if ((*((*(_55617_scope))._field_scope))._field_deferred) {
		return true;
	}
	if ((*(_55617_scope))._field_parent != nullptr) {
		_55617_scope=(*(_55617_scope))._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1de0e938e_ScopeChecker> _1de0e938e_ScopeChecker::_method_get_root(void) {
	jule::Ptr<_1de0e938e_ScopeChecker> _57417_root = this->self;
	while (((*(_57417_root))._field_parent != nullptr) && ((*(_57417_root))._field_owner == nullptr)) {
		{
			_57417_root=(*(_57417_root))._field_parent;
		}
	_iter_next_1a84c2ea7:;
	}
	_iter_end_1a84c2ea7:;
	return _57417_root;
}



inline jule::Ptr<_1de0e938e_ScopeChecker> _1de0e938e_ScopeChecker::_method_get_hard_root(void) {
	jule::Ptr<_1de0e938e_ScopeChecker> _58417_root = this->self;
	while ((*(_58417_root))._field_parent != nullptr) {
		{
			_58417_root=(*(_58417_root))._field_parent;
		}
	_iter_next_1a84c47b1:;
	}
	_iter_end_1a84c47b1:;
	return _58417_root;
}



inline jule::Ptr<_1de0e938e_Label> _1de0e938e_ScopeChecker::_method_find_label(jule::Str _59429_ident) {
	{
		auto &expr = (*((*this)._field_scope))._field_stmts;
		auto it = expr.begin();
		_iter_begin_1a84cac6d:;
		if (it != expr.end()) {
			jule::Any _1de0e938e_st = *it;
			{
				{
					auto &_match_expr{ _1de0e938e_st };
					
					if (_match_expr.type_is<jule::Ptr<_1de0e938e_Label>>()) {
						_case_begin_1a84cb4bb:;
						{
							jule::Ptr<_1de0e938e_Label> _59825_label = _1de0e938e_st.operator jule::Ptr<_1de0e938e_Label>();
							if ((*(_59825_label))._field_ident == _59429_ident) {
								return _59825_label;
							}
						}
					}
					_match_end_1a84cb345:;
				}
			}
			_iter_next_1a84cac6d:;
			++it;
			goto _iter_begin_1a84cac6d;
		}
		_iter_end_1a84cac6d:;
	}
	return nullptr;
}



inline jule::Ptr<_1de0e938e_ScopeLabel> _1de0e938e_ScopeChecker::_method_find_label_scope(jule::Str _61036_ident) {
	jule::Ptr<_1de0e938e_ScopeLabel> _61117_label = (*(this->self))._method_find_label_all(_61036_ident);
	if ((_61117_label != nullptr) && ((*(_61117_label))._field_scope == this->self)) {
		return _61117_label;
	}
	return nullptr;
}



inline jule::Ptr<_1de0e938e_ScopeLabel> _1de0e938e_ScopeChecker::_method_find_label_all(jule::Str _62233_ident) {
	{
		auto &expr = (*((*this)._field_labels));
		auto it = expr.begin();
		_iter_begin_1a84ce832:;
		if (it != expr.end()) {
			jule::Ptr<_1de0e938e_ScopeLabel> _1de0e938e_lbl = *it;
			{
				if ((*((*(_1de0e938e_lbl))._field_label))._field_ident == _62233_ident) {
					return _1de0e938e_lbl;
				}
			}
			_iter_next_1a84ce832:;
			++it;
			goto _iter_begin_1a84ce832;
		}
		_iter_end_1a84ce832:;
	}
	return nullptr;
}



inline jule::Bool _1de0e938e_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _63438_itself,jule::Str _63455_ident) {
	jule::Ptr<_1c3c3d174_Var> _63513_v = (*this)._method_find_var(_63455_ident,false);
	if ((_63513_v != nullptr) && (static_cast<jule::Uintptr>(_63513_v) != _63438_itself)) {
		if ((*(_63513_v))._field_scope == nullptr) {
			return false;
		}
		return ((*(_63513_v))._field_scope == (*this)._field_scope) || (!((*((*this)._field_s))._method_is_flag(static_cast<jule::Int>(1LL))));
	}
	jule::Ptr<_1a5e40a26_TypeAlias> _64313_ta = (*this)._method_find_type_alias(_63455_ident,false);
	if ((_64313_ta != nullptr) && (static_cast<jule::Uintptr>(_64313_ta) != _63438_itself)) {
		if ((*(_64313_ta))._field_scope == nullptr) {
			return false;
		}
		return ((*(_64313_ta))._field_scope == (*this)._field_tree) || (!((*((*this)._field_s))._method_is_flag(static_cast<jule::Int>(1LL))));
	}
	return false;
}



inline void _1de0e938e_ScopeChecker::_method_check_var_decl(jule::Ptr<_1dd05c765_VarDecl> _65438_decl) {
	jule::Ptr<_1c3c3d174_Var> _65517_v = _1dded9779_build_var(_65438_decl);
	(*(_65517_v))._field_scope=(*(this->self))._field_scope;
	__JULE_DEFER({
		(*((*(this->self))._field_table))._field_vars = jule::alloc_for_append((*((*(this->self))._field_table))._field_vars,1);(*((*(this->self))._field_table))._field_vars.__push(_65517_v);
		(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_65517_v));
	});
	if ((*(this->self))._method_is_duplicated_ident(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_65517_v)),(*(_65517_v))._field_ident)) {
		(*((*(this->self))._field_s))._method_push_err((*(_65517_v))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_65517_v))._field_ident)}));
		(*((*(this->self))._field_s))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		(*(this->self))._method_stop();
		return;
	}
	(*((*(this->self))._field_s))._method_check_var_decl(_65517_v,this->self);
	if ((!((*(_65517_v))._method_is_type_inferred())) && (((*(_65517_v))._field_kind == nullptr) || ((*((*(_65517_v))._field_kind))._field_kind == nullptr))) {
		return;
	}
	(*((*(this->self))._field_s))._method_check_type_var(_65517_v,this->self);
}



inline void _1de0e938e_ScopeChecker::_method_check_type_alias_decl(jule::Ptr<_1dd05c765_TypeAliasDecl> _67845_decl) {
	jule::Ptr<_1a5e40a26_TypeAlias> _67917_ta = _1dded9779_build_type_alias(_67845_decl);
	if ((*(this->self))._method_is_duplicated_ident(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_67917_ta)),(*(_67917_ta))._field_ident)) {
		(*((*(this->self))._field_s))._method_push_err((*(_67917_ta))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_67917_ta))._field_ident)}));
		(*((*(this->self))._field_s))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		(*(this->self))._method_stop();
		return;
	}
	(*((*(this->self))._field_s))._method_check_type_alias_decl(_67917_ta,this->self);
	(*((*(this->self))._field_table))._field_type_aliases = jule::alloc_for_append((*((*(this->self))._field_table))._field_type_aliases,1);(*((*(this->self))._field_table))._field_type_aliases.__push(_67917_ta);
	if ((*((*(_67917_ta))._field_kind))._field_kind == nullptr) {
		(*(this->self))._method_stop();
	}
}



inline jule::Ptr<_1de0e938e_Scope> _1de0e938e_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_1de0e938e_Scope>(new( std::nothrow ) _1de0e938e_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _1de0e938e_ScopeChecker::_method_check_child_ssc(jule::Ptr<_1dd05c765_ScopeTree>& _70240_tree,jule::Ptr<_1de0e938e_Scope>& _70263_s,jule::Ptr<_1de0e938e_ScopeChecker>& _70279_ssc) {
	(*(_70279_ssc))._field_parent=this->self;
	(*(_70279_ssc))._method_check(_70240_tree,_70263_s);
}



inline jule::Ptr<_1de0e938e_Scope> _1de0e938e_ScopeChecker::_method_check_child_sc(jule::Ptr<_1dd05c765_ScopeTree>& _70739_tree,jule::Ptr<_1de0e938e_ScopeChecker>& _70762_ssc) {
	jule::Ptr<_1de0e938e_Scope> _70817_s = (*(this->self))._method_get_child();
	(*(this->self))._method_check_child_ssc(_70739_tree,_70817_s,_70762_ssc);
	return _70817_s;
}



inline jule::Ptr<_1de0e938e_Scope> _1de0e938e_ScopeChecker::_method_check_child(jule::Ptr<_1dd05c765_ScopeTree>& _71336_tree) {
	jule::Ptr<_1de0e938e_ScopeChecker> _71417_ssc = (*(this->self))._method_new_child_checker();
	return (*(this->self))._method_check_child_sc(_71336_tree,_71417_ssc);
}



inline void _1de0e938e_ScopeChecker::_method_check_anon_scope(jule::Ptr<_1dd05c765_ScopeTree> _71840_tree) {
	jule::Ptr<_1de0e938e_Scope> _71917_s = (*(this->self))._method_check_child(_71840_tree);
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_71917_s));
}



inline void _1de0e938e_ScopeChecker::_method_process_error_call(jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel>& _72343_m,_1dd05db0c_Token _72374_err) {
	if ((*(this->self))._method_is_deferred()) {
		(*((*(this->self))._field_s))._method_push_err(_72374_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1de0e938e_ScopeChecker> _72817_root = (*(this->self))._method_get_root();
	if ((!((*((*((*(_72817_root))._field_owner))._field_decl))._field_exceptional))) {
		(*((*(this->self))._field_s))._method_push_err(_72374_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		(*((*(this->self))._field_s))._method_push_suggestion(jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	}
	(*(_72343_m))._field_func=(*(_72817_root))._field_owner;
}



inline void _1de0e938e_ScopeChecker::_method_check_expr(jule::Ptr<_1dd05c765_Expr> _73634_expr) {
	jule::Ptr<_1a94c333b_Eval> _73717_eval = (*((*(this->self))._field_s))._method_eval(this->self);
	(*(_73717_eval))._field_ignored=true;
	jule::Ptr<_1a94c333b_Data> _73917_d = (*(_73717_eval))._method_eval_expr(_73634_expr);
	if (_73917_d == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*(_73917_d))._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel>>()) {
			_case_begin_1a85031a2:;
			{
				jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel> _74621_m = (*(_73917_d))._field_model.operator jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel>();
				(*(this->self))._method_process_error_call(_74621_m,(*(_73634_expr))._field_token);
				(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_73917_d));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ddb3c047_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1ddb3c047_FnCallExprModel>>()) {
			_case_begin_1a850358c:;
			{
				(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_73917_d));
			}
		}
		else {
			_case_begin_1a850302b:;
			{
				(*((*(this->self))._field_s))._method_push_err((*(_73634_expr))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8502ec6:;
	}
}



inline void _1de0e938e_ScopeChecker::_method_check_co_expr(jule::Ptr<_1dd05c765_CoExpr> _76637_expr) {
	jule::Ptr<_1a94c333b_Eval> _76717_eval = (*((*(this->self))._field_s))._method_eval(this->self);
	(*(_76717_eval))._field_ignored=true;
	jule::Ptr<_1a94c333b_Data> _76917_d = (*(_76717_eval))._method_eval_expr((*(_76637_expr))._field_expr);
	if (_76917_d == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*(_76917_d))._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ddb3c047_FnCallExprModel>>()) {
			_case_begin_1a850a96d:;
			{
				jule::Ptr<_1ddb3c047_FnCallExprModel> _77621_model = (*(_76917_d))._field_model.operator jule::Ptr<_1ddb3c047_FnCallExprModel>();
				if ((*((*((*(_77621_model))._field_func))._field_decl))._field_exceptional) {
					(*((*(this->self))._field_s))._method_push_err((*(_76637_expr))._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					(*((*(this->self))._field_s))._method_push_suggestion(jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				}
				(*(_77621_model))._field_is_co=true;
				(*(_76717_eval))._method_check_fn_of_concurrent_call((*(_77621_model))._field_func,(*((*(_76637_expr))._field_expr))._field_token);
				(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_76917_d));
			}
		}
		else {
			_case_begin_1a85096c5:;
			{
				(*((*(this->self))._field_s))._method_push_err((*(_76637_expr))._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1a8509670:;
	}
}



inline jule::Ptr<_1de0e938e_If> _1de0e938e_ScopeChecker::_method_check_if(jule::Ptr<_1dd05c765_If> _79232_i) {
	jule::Ptr<_1de0e938e_Scope> _79317_s = (*(this->self))._method_check_child((*(_79232_i))._field_scope);
	jule::Ptr<_1a94c333b_Data> _79517_d = (*((*((*(this->self))._field_s))._method_eval(this->self)))._method_eval_expr((*(_79232_i))._field_expr);
	if (_79517_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1a5e40a26_Prim> _80017_prim = (*((*(_79517_d))._field_kind))._method_prim();
	if ((_80017_prim == nullptr) || (!((*(_80017_prim))._method_is_bool()))) {
		(*((*(this->self))._field_s))._method_push_err((*((*(_79232_i))._field_expr))._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1de0e938e_If>(new( std::nothrow ) _1de0e938e_If((*(_79517_d))._field_model,_79317_s));
}



inline jule::Ptr<_1de0e938e_Else> _1de0e938e_ScopeChecker::_method_check_else(jule::Ptr<_1dd05c765_Else> _81234_e) {
	return jule::new_struct<_1de0e938e_Else>(new( std::nothrow ) _1de0e938e_Else((*(this->self))._method_check_child((*(_81234_e))._field_scope)));
}



inline void _1de0e938e_ScopeChecker::_method_check_conditional(jule::Ptr<_1dd05c765_Conditional> _81841_conditional) {
	jule::Ptr<_1de0e938e_Conditional> _81917_c = jule::new_struct<_1de0e938e_Conditional>(new( std::nothrow ) _1de0e938e_Conditional());
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_81917_c));
	(*(_81917_c))._field_elifs=jule::Slice<jule::Ptr<_1de0e938e_If>>::alloc(0LL,static_cast<jule::Int>((*(_81841_conditional))._field_tail.len() + 1LL));
	(*(_81917_c))._field_elifs = jule::alloc_for_append((*(_81917_c))._field_elifs,1);(*(_81917_c))._field_elifs.__push((*(this->self))._method_check_if((*(_81841_conditional))._field_head));
	{
		auto &expr = (*(_81841_conditional))._field_tail;
		auto it = expr.begin();
		_iter_begin_1a8518d11:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_If> _1de0e938e_elif = *it;
			{
				(*(_81917_c))._field_elifs = jule::alloc_for_append((*(_81917_c))._field_elifs,1);(*(_81917_c))._field_elifs.__push((*(this->self))._method_check_if(_1de0e938e_elif));
			}
			_iter_next_1a8518d11:;
			++it;
			goto _iter_begin_1a8518d11;
		}
		_iter_end_1a8518d11:;
	}
	if ((*(_81841_conditional))._field_default != nullptr) {
		(*(_81917_c))._field_default=(*(this->self))._method_check_else((*(_81841_conditional))._field_default);
	}
}



inline jule::Ptr<_1de0e938e_Scope> _1de0e938e_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _83439_it,jule::Ptr<_1dd05c765_ScopeTree> _83456_tree,jule::Ptr<_1de0e938e_ScopeChecker> _83478_ssc) {
	(*(_83478_ssc))._field_it=_83439_it;
	return (*(this->self))._method_check_child_sc(_83456_tree,_83478_ssc);
}



inline jule::Ptr<_1de0e938e_Scope> _1de0e938e_ScopeChecker::_method_check_iter_scope(jule::Uintptr _83936_it,jule::Ptr<_1dd05c765_ScopeTree>& _83954_tree) {
	jule::Ptr<_1de0e938e_ScopeChecker> _84017_ssc = (*(this->self))._method_new_child_checker();
	return (*(this->self))._method_check_iter_scope_sc(_83936_it,_83954_tree,_84017_ssc);
}



inline void _1de0e938e_ScopeChecker::_method_check_inf_iter(jule::Ptr<_1dd05c765_Iter>& _84439_it) {
	jule::Ptr<_1de0e938e_InfIter> _84517_kind = jule::new_struct<_1de0e938e_InfIter>(new( std::nothrow ) _1de0e938e_InfIter());
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_84517_kind));
	(*(_84517_kind))._field_scope=(*(this->self))._method_check_iter_scope(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_84517_kind)),(*(_84439_it))._field_scope);
}



inline void _1de0e938e_ScopeChecker::_method_check_while_iter(jule::Ptr<_1dd05c765_Iter>& _85241_it) {
	jule::Ptr<_1dd05c765_WhileKind> _85317_wh = (*(_85241_it))._field_kind.operator jule::Ptr<_1dd05c765_WhileKind>();
	if (((*(_85317_wh))._field_expr == nullptr) && ((*(_85317_wh))._field_next == jule::Any(nullptr))) {
		(*(this->self))._method_check_inf_iter(_85241_it);
		return;
	}
	jule::Ptr<_1de0e938e_WhileIter> _85917_kind = jule::new_struct<_1de0e938e_WhileIter>(new( std::nothrow ) _1de0e938e_WhileIter());
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_85917_kind));
	(*(_85917_kind))._field_scope=(*(this->self))._method_check_iter_scope(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_85917_kind)),(*(_85241_it))._field_scope);
	if ((*(_85317_wh))._field_expr != nullptr) {
		jule::Ptr<_1a94c333b_Data> _86621_d = (*((*((*(this->self))._field_s))._method_eval(this->self)))._method_eval_expr((*(_85317_wh))._field_expr);
		if (_86621_d == nullptr) {
			return;
		}
		jule::Ptr<_1a5e40a26_Prim> _87117_prim = (*((*(_86621_d))._field_kind))._method_prim();
		if (_87117_prim == nullptr) {
			(*((*(this->self))._field_s))._method_push_err((*(_85241_it))._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		if ((!((*(_87117_prim))._method_is_bool()))) {
			(*((*(this->self))._field_s))._method_push_err((*(_85241_it))._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		(*(_85917_kind))._field_expr=(*(_86621_d))._field_model;
	}
	if ((*(_85317_wh))._method_is_while_next()) {
		if ((!(_1de0e938e_is_valid_ast_st_for_next_st((*(_85317_wh))._field_next)))) {
			(*((*(this->self))._field_s))._method_push_err((*(_85317_wh))._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;
		}
		jule::Int _89117_n = (*((*(this->self))._field_scope))._field_stmts.len();
		(*(this->self))._method_check_node((*(_85317_wh))._field_next);
		if (_89117_n < static_cast<jule::Int>((*((*(this->self))._field_scope))._field_stmts.len())) {
			jule::Any _89425_st = (*((*(this->self))._field_scope))._field_stmts[_89117_n];
			(*((*(this->self))._field_scope))._field_stmts=(*((*(this->self))._field_scope))._field_stmts.slice(0LL,_89117_n);
			if ((!(_1de0e938e_is_valid_st_for_next_st(_89425_st)))) {
				(*((*(this->self))._field_s))._method_push_err((*(_85317_wh))._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			}
			(*(_85917_kind))._field_next=_89425_st;
		}
	}
}



inline void _1de0e938e_ScopeChecker::_method_check_range_iter(jule::Ptr<_1dd05c765_Iter>& _90541_it) {
	jule::Ptr<_1dd05c765_RangeKind> _90617_rang = (*(_90541_it))._field_kind.operator jule::Ptr<_1dd05c765_RangeKind>();
	jule::Ptr<_1a94c333b_Data> _90817_d = (*((*((*(this->self))._field_s))._method_eval(this->self)))._method_eval_expr((*(_90617_rang))._field_expr);
	if (_90817_d == nullptr) {
		return;
	}
	jule::Ptr<_1de0e938e_RangeIter> _91317_kind = jule::new_struct<_1de0e938e_RangeIter>(new( std::nothrow ) _1de0e938e_RangeIter(_90817_d,jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1c3c3d174_Var>(),jule::Ptr<_1c3c3d174_Var>()));
	_1a93c7a48_RangeChecker _91717_rc = _1a93c7a48_RangeChecker(this->self,_90617_rang,_91317_kind,_90817_d);
	jule::Bool _92313_ok = _91717_rc._method_check();
	if ((!(_92313_ok))) {
		return;
	}
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_91317_kind));
	jule::Ptr<_1de0e938e_ScopeChecker> _93017_ssc = (*(this->self))._method_new_child_checker();
	if ((*(_91317_kind))._field_key_a != nullptr) {
		if ((!((*((*(this->self))._field_s))._method_is_flag(static_cast<jule::Int>(1LL)))) && (*(this->self))._method_is_duplicated_ident(0LLU,(*((*(_91317_kind))._field_key_a))._field_ident)) {
			(*((*(this->self))._field_s))._method_push_err((*((*(_91317_kind))._field_key_a))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*((*(_91317_kind))._field_key_a))._field_ident)}));
			(*((*(this->self))._field_s))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		(*((*(_93017_ssc))._field_table))._field_vars = jule::alloc_for_append((*((*(_93017_ssc))._field_table))._field_vars,1);(*((*(_93017_ssc))._field_table))._field_vars.__push((*(_91317_kind))._field_key_a);
	}
	if ((*(_91317_kind))._field_key_b != nullptr) {
		if ((!((*((*(this->self))._field_s))._method_is_flag(static_cast<jule::Int>(1LL)))) && (*(this->self))._method_is_duplicated_ident(0LLU,(*((*(_91317_kind))._field_key_b))._field_ident)) {
			(*((*(this->self))._field_s))._method_push_err((*((*(_91317_kind))._field_key_b))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*((*(_91317_kind))._field_key_b))._field_ident)}));
			(*((*(this->self))._field_s))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		(*((*(_93017_ssc))._field_table))._field_vars = jule::alloc_for_append((*((*(_93017_ssc))._field_table))._field_vars,1);(*((*(_93017_ssc))._field_table))._field_vars.__push((*(_91317_kind))._field_key_b);
	}
	(*(_91317_kind))._field_scope=(*(this->self))._method_check_iter_scope_sc(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_91317_kind)),(*(_90541_it))._field_scope,_93017_ssc);
}



inline void _1de0e938e_ScopeChecker::_method_check_iter(jule::Ptr<_1dd05c765_Iter> _95134_it) {
	if ((*(_95134_it))._method_is_inf()) {
		(*(this->self))._method_check_inf_iter(_95134_it);
		return;
	}
	{
		auto &_match_expr{ (*(_95134_it))._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_WhileKind>>()) {
			_case_begin_1a853bcac:;
			{
				(*(this->self))._method_check_while_iter(_95134_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_RangeKind>>()) {
			_case_begin_1a853c373:;
			{
				(*(this->self))._method_check_range_iter(_95134_it);
			}
		}
		else {
			_case_begin_1a853c1ec:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1a853c197:;
	}
}



inline jule::Bool _1de0e938e_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _96442_it) {
	jule::Ptr<_1de0e938e_ScopeChecker> _96517_scope = this->self;
	_julec_label_iter:;
	if ((*(_96517_scope))._field_it == _96442_it) {
		return true;
	}
	if ((*(_96517_scope))._field_parent != nullptr) {
		_96517_scope=(*(_96517_scope))._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1de0e938e_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _98043_ptr) {
	jule::Ptr<_1de0e938e_ScopeChecker> _98117_scope = this->self;
	_julec_label_iter:;
	if ((*(_98117_scope))._field_it == _98043_ptr) {
		return true;
	}
	if ((*(_98117_scope))._field_cse != 0LLU) {
		jule::Uintptr _98917_mtch = static_cast<jule::Uintptr>((*(((_1de0e938e_Case*)((*(_98117_scope))._field_cse))))._field_owner);
		if (_98917_mtch == _98043_ptr) {
			return true;
		}
	}
	if ((*(_98117_scope))._field_parent != nullptr) {
		_98117_scope=(*(_98117_scope))._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1de0e938e_ContSt> _1de0e938e_ScopeChecker::_method_check_cont_valid_scope(jule::Ptr<_1dd05c765_ContSt> _100342_c) {
	if ((*(this->self))._method_is_deferred()) {
		(*((*(this->self))._field_s))._method_push_err((*(_100342_c))._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((*(_100342_c))._field_label._field_id != static_cast<jule::Uint>(0LLU)) {
		return jule::new_struct<_1de0e938e_ContSt>(new( std::nothrow ) _1de0e938e_ContSt());
	}
	jule::Ptr<_1de0e938e_ScopeChecker> _101317_scope = this->self;
	_julec_label_iter:;
	{
		
		if ((((*(_101317_scope))._field_it == 0LLU) && ((*(_101317_scope))._field_parent != nullptr)) && ((*(_101317_scope))._field_owner == nullptr)) {
			_case_begin_1a85469ba:;
			{
				_101317_scope=(*(_101317_scope))._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((*(_101317_scope))._field_it != 0LLU) {
			_case_begin_1a8546a42:;
			{
				return jule::new_struct<_1de0e938e_ContSt>(new( std::nothrow ) _1de0e938e_ContSt((*(_101317_scope))._field_it));
			}
		}
		_match_end_1a8546910:;
	}
	(*((*(this->self))._field_s))._method_push_err((*(_100342_c))._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1de0e938e_ScopeChecker::_method_check_cont(jule::Ptr<_1dd05c765_ContSt> _102830_c) {
	jule::Ptr<_1de0e938e_ContSt> _102917_cont = (*(this->self))._method_check_cont_valid_scope(_102830_c);
	if (_102917_cont == nullptr) {
		return;
	}
	if ((*(_102830_c))._field_label._field_id != static_cast<jule::Uint>(0LLU)) {
		jule::Ptr<_1de0e938e_ScopeLabel> _103521_label = _1de0e938e_find_label_parent((*(_102830_c))._field_label._field_kind,(*(this->self))._field_parent);
		if (_103521_label == nullptr) {
			(*((*(this->self))._field_s))._method_push_err((*(_102830_c))._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any((*(_102830_c))._field_label._field_kind)}));
			return;
		}
		(*(_103521_label))._field_used=true;
		if (((*(_103521_label))._field_pos + 1LL) >= static_cast<jule::Int>((*((*((*(_103521_label))._field_scope))._field_scope))._field_stmts.len())) {
			(*((*(this->self))._field_s))._method_push_err((*(_102830_c))._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any((*(_102830_c))._field_label._field_kind)}));
			return;
		}
		jule::Int _104817_i = (*(_103521_label))._field_pos + 1LL;
		if (_104817_i >= static_cast<jule::Int>((*((*((*(_103521_label))._field_scope))._field_scope))._field_stmts.len())) {
			(*((*(this->self))._field_s))._method_push_err((*(_102830_c))._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _105225_st = (*((*((*(_103521_label))._field_scope))._field_scope))._field_stmts[_104817_i];
			{
				auto &_match_expr{ _105225_st };
				
				if (_match_expr.type_is<jule::Ptr<_1de0e938e_InfIter>>()) {
					_case_begin_1a8550452:;
					{
						(*(_102917_cont))._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_105225_st.operator jule::Ptr<_1de0e938e_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1de0e938e_RangeIter>>()) {
					_case_begin_1a8552685:;
					{
						(*(_102917_cont))._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_105225_st.operator jule::Ptr<_1de0e938e_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1de0e938e_WhileIter>>()) {
					_case_begin_1a85526eb:;
					{
						(*(_102917_cont))._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_105225_st.operator jule::Ptr<_1de0e938e_WhileIter>()));
					}
				}
				else {
					_case_begin_1a8552476:;
					{
						(*((*(this->self))._field_s))._method_push_err((*(_102830_c))._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any((*(_102830_c))._field_label._field_kind)}));
					}
				}
				_match_end_1a8552421:;
			}
		}
	}
	if ((*(_102917_cont))._field_it != 0LLU) {
		if ((!((*(this->self))._method_check_valid_cont_label((*(_102917_cont))._field_it)))) {
			(*((*(this->self))._field_s))._method_push_err((*(_102830_c))._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any((*(_102830_c))._field_label._field_kind)}));
		}
	}
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_102917_cont));
}



inline void _1de0e938e_ScopeChecker::_method_check_label(jule::Ptr<_1dd05c765_LabelSt> _107135_l) {
	if ((*(this->self))._method_find_label((*(_107135_l))._field_ident) != nullptr) {
		(*((*(this->self))._field_s))._method_push_err((*(_107135_l))._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any((*(_107135_l))._field_ident)}));
		return;
	}
	jule::Ptr<_1de0e938e_Label> _107717_label = jule::new_struct<_1de0e938e_Label>(new( std::nothrow ) _1de0e938e_Label((*(_107135_l))._field_ident));
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_107717_label));
	(*((*(this->self))._field_labels))=jule::append((*((*(this->self))._field_labels)),jule::Slice<jule::Ptr<_1de0e938e_ScopeLabel>>({jule::new_struct<_1de0e938e_ScopeLabel>(new( std::nothrow ) _1de0e938e_ScopeLabel((*(_107135_l))._field_token,_107717_label,static_cast<jule::Int>(static_cast<jule::Int>((*((*(this->self))._field_scope))._field_stmts.len()) - 1LL),this->self,jule::Bool()))}));
}



inline void _1de0e938e_ScopeChecker::_method_push_goto(jule::Ptr<_1dd05c765_GotoSt> _109033_gt) {
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(jule::new_struct<_1de0e938e_GotoSt>(new( std::nothrow ) _1de0e938e_GotoSt((*(_109033_gt))._field_label._field_kind))));
	(*((*(this->self))._field_gotos))=jule::append((*((*(this->self))._field_gotos)),jule::Slice<jule::Ptr<_1de0e938e_ScopeGoto>>({jule::new_struct<_1de0e938e_ScopeGoto>(new( std::nothrow ) _1de0e938e_ScopeGoto(_109033_gt,this->self,static_cast<jule::Int>(static_cast<jule::Int>((*((*(this->self))._field_scope))._field_stmts.len()) - 1LL)))}));
}



inline void _1de0e938e_ScopeChecker::_method_check_postfix(jule::Ptr<_1dd05c765_AssignSt> _110237_a) {
	if ((*(_110237_a))._field_left.len() > 1LL) {
		(*((*(this->self))._field_s))._method_push_err((*(_110237_a))._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1dd05c765_Expr> _110817_expr = (*((*(_110237_a))._field_left[0LL]))._field_expr;
	jule::Ptr<_1a94c333b_Data> _110917_d = (*((*((*(this->self))._field_s))._method_eval(this->self)))._method_eval_expr(_110817_expr);
	if (_110917_d == nullptr) {
		return;
	}
	_1de0e938e_check_assign((*(this->self))._field_s,_110917_d,nullptr,(*(_110237_a))._field_setter);
	if ((*((*(_110917_d))._field_kind))._method_ptr() != nullptr) {
		jule::Ptr<_1a5e40a26_Ptr> _111721_ptr = (*((*(_110917_d))._field_kind))._method_ptr();
		if ((*(_111721_ptr))._method_is_unsafe()) {
			(*((*(this->self))._field_s))._method_push_err((*(_110237_a))._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*(_110237_a))._field_setter._field_kind),jule::Any((*((*(_110917_d))._field_kind))._method_to_str())}));
			return;
		}
	} else {
		if (((*((*(_110917_d))._field_kind))._method_prim() == nullptr) || (!(_1a6539949_is_num((*((*((*(_110917_d))._field_kind))._method_prim()))._field_kind)))) {
			(*((*(this->self))._field_s))._method_push_err((*(_110237_a))._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*(_110237_a))._field_setter._field_kind),jule::Any((*((*(_110917_d))._field_kind))._method_to_str())}));
			return;
		}
	}
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(jule::new_struct<_1de0e938e_Postfix>(new( std::nothrow ) _1de0e938e_Postfix((*(_110917_d))._field_model,(*(_110237_a))._field_setter._field_kind))));
}



inline jule::Bool _1de0e938e_ScopeChecker::_method_is_new_assign_ident(jule::Str _113538_ident) {
	if (_1dd05db0c_is_ignore_ident(_113538_ident) || (_113538_ident == jule::Str())) {
		return false;
	}
	return (*((*this)._field_table))._method_def_by_ident(_113538_ident,false) == jule::Any(nullptr);
}



inline jule::Bool _1de0e938e_ScopeChecker::_method_check_structure_assign_op(jule::Ptr<_1dd0be530_StructIns>& _114346_s,jule::Ptr<_1dd05c765_AssignSt>& _114366_a) {
	{
		auto &_match_expr{ (*(_114366_a))._field_setter._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a856c97a:;
			{
				return (*(_114346_s))._field_operators._field_add_assign != nullptr;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a856c2e8:;
			{
				return (*(_114346_s))._field_operators._field_sub_assign != nullptr;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a856c35e:;
			{
				return (*(_114346_s))._field_operators._field_div_assign != nullptr;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a856c3d6:;
			{
				return (*(_114346_s))._field_operators._field_mul_assign != nullptr;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a856c606:;
			{
				return (*(_114346_s))._field_operators._field_mod_assign != nullptr;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a856c66c:;
			{
				return (*(_114346_s))._field_operators._field_shl_assign != nullptr;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a856c6d3:;
			{
				return (*(_114346_s))._field_operators._field_shr_assign != nullptr;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a856c749:;
			{
				return (*(_114346_s))._field_operators._field_bit_or_assign != nullptr;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a856c7b0:;
			{
				return (*(_114346_s))._field_operators._field_bit_and_assign != nullptr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a856c9e1:;
			{
				return (*(_114346_s))._field_operators._field_bit_xor_assign != nullptr;
			}
		}
		else {
			_case_begin_1a856bda8:;
			{
				return false;
			}
		}
		_match_end_1a856c194:;
	}
}



inline void _1de0e938e_ScopeChecker::_method_check_single_assign(jule::Ptr<_1dd05c765_AssignSt>& _117044_a) {
	jule::Ptr<_1a94c333b_Data> _117117_l = nullptr;
	if ((!(_1dd05db0c_is_ignore_ident((*((*(_117044_a))._field_left[0LL]))._field_ident)))) {
		jule::Ptr<_1dd05c765_Expr> _117421_expr = (*((*(_117044_a))._field_left[0LL]))._field_expr;
		_117117_l=(*((*((*(this->self))._field_s))._method_eval(this->self)))._method_eval_expr(_117421_expr);
		if (_117117_l == nullptr) {
			return;
		}
	}
	jule::Ptr<_1a94c333b_Eval> _118117_eval = (((_117117_l != nullptr)) ? ((*((*(this->self))._field_s))._method_evalp(this->self,(*(_117117_l))._field_kind)) : ((*((*(this->self))._field_s))._method_eval(this->self)));
	jule::Ptr<_1a94c333b_Data> _118617_r = (*(_118117_eval))._method_eval_expr((*(_117044_a))._field_right);
	if (_118617_r == nullptr) {
		return;
	}
	if (_117117_l == nullptr) {
		if ((*((*(_118617_r))._field_kind))._method_void()) {
			(*((*(this->self))._field_s))._method_push_err((*((*(_117044_a))._field_right))._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_118617_r));
		return;
	}
	if ((!(_1de0e938e_check_assign((*(this->self))._field_s,_117117_l,_118617_r,(*(_117044_a))._field_setter)))) {
		return;
	}
	if ((*((*(_118617_r))._field_kind))._method_tup() != nullptr) {
		(*((*(this->self))._field_s))._method_push_err((*(_117044_a))._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;
	}
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(jule::new_struct<_1de0e938e_Assign>(new( std::nothrow ) _1de0e938e_Assign(jule::new_struct<_1ddb3c047_OperandExprModel>(new( std::nothrow ) _1ddb3c047_OperandExprModel((*(_117117_l))._field_kind,(*(_117117_l))._field_model)),jule::new_struct<_1ddb3c047_OperandExprModel>(new( std::nothrow ) _1ddb3c047_OperandExprModel((*(_118617_r))._field_kind,(*(_118617_r))._field_model)),(*(_117044_a))._field_setter))));
	if ((*(_117044_a))._field_setter._field_kind != jule::Str("=", 1)) {
		(*(_117044_a))._field_setter._field_kind=(*(_117044_a))._field_setter._field_kind.slice(0LL,(*(_117044_a))._field_setter._field_kind.len() - 1LL);
		_1a94c333b_BinaryEval _122421_solver = _1a94c333b_BinaryEval::_static_method_new(jule::new_struct_ptr<_1a94c333b_Eval>(new( std::nothrow ) _1a94c333b_Eval((*(this->self))._field_s,this->self,jule::Ptr<_1a5e40a26_TypeKind>(),(*(this->self))._method_is_unsafe(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1c3c3d174_Var>(),jule::Ptr<_1dd0be530_FieldIns>())),(*(_117044_a))._field_setter);
		jule::Ptr<_1dd0be530_StructIns> _123021_strct = (*((*(_117117_l))._field_kind))._method_strct();
		if (_123021_strct != nullptr) {
			if ((!((*(this->self))._method_check_structure_assign_op(_123021_strct,_117044_a)))) {
				(*((*(this->self))._field_s))._method_push_err((*(_117044_a))._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(((*(_117044_a))._field_setter._field_kind + jule::Str("=", 1))),jule::Any((*(_123021_strct))._method_to_str())}));
				return;
			}
			_122421_solver._field_l=_117117_l;
			_122421_solver._field_r=_118617_r;
			if ((!(_122421_solver._method_check_type_compatibility()))) {
				return;
			}
			return;
		}
		_118617_r=_122421_solver._method_solve_explicit(_117117_l,_118617_r);
		if (_118617_r == nullptr) {
			return;
		}
		(*(_117044_a))._field_setter._field_kind+=jule::Str("=", 1);
		return;
	}
	_1a93c7a48_AssignTypeChecker _125217_checker = _1a93c7a48_AssignTypeChecker((*(this->self))._field_s,(*(_117117_l))._field_kind,_118617_r,(*(_117044_a))._field_setter);
	_125217_checker._method_check();
}



inline void _1de0e938e_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ptr<_1de0e938e_MultiAssign> _126157_st,jule::Ptr<_1dd05c765_AssignSt> _126213_a,jule::Ptr<_1dd05c765_AssignLeft> _126231_lexpr,jule::Ptr<_1a94c333b_Data> _126255_l,jule::Ptr<_1a94c333b_Data> _126269_r) {
	if (_1dd05db0c_is_ignore_ident((*(_126231_lexpr))._field_ident)) {
		if ((*((*(_126269_r))._field_kind))._method_void()) {
			(*((*this)._field_s))._method_push_err((*((*(_126213_a))._field_right))._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		(*(_126157_st))._field_l = jule::alloc_for_append((*(_126157_st))._field_l,1);(*(_126157_st))._field_l.__push(jule::Any(nullptr));
		return;
	}
	if ((*(_126213_a))._field_declarative && (*this)._method_is_new_assign_ident((*(_126231_lexpr))._field_ident)) {
		jule::Ptr<_1c3c3d174_Var> _127421_v = jule::new_struct<_1c3c3d174_Var>(new( std::nothrow ) _1c3c3d174_Var((*this)._field_scope,(*(_126231_lexpr))._field_token,(*(_126231_lexpr))._field_ident,jule::Bool(),jule::Bool(),(*(_126231_lexpr))._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),(*(_126231_lexpr))._field_reference,jule::Str(),jule::Ptr<_1a5e40a26_TypeSymbol>(),jule::new_struct<_1a94c333b_Value>(new( std::nothrow ) _1a94c333b_Value((*(_126213_a))._field_right,_126269_r)),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Slice<jule::Ptr<_1dd05c765_Directive>>(),jule::Ptr<_1c3c3d174_IterRelation>(),jule::Slice<jule::Ptr<_1c3c3d174_Var>>()));
		(*((*this)._field_s))._method_check_var(_127421_v);
		(*(_126157_st))._field_l = jule::alloc_for_append((*(_126157_st))._field_l,1);(*(_126157_st))._field_l.__push(jule::Any(_127421_v));
		(*((*this)._field_table))._field_vars = jule::alloc_for_append((*((*this)._field_table))._field_vars,1);(*((*this)._field_table))._field_vars.__push(_127421_v);
		(*((*this)._field_scope))._field_stmts = jule::alloc_for_append((*((*this)._field_scope))._field_stmts,1);(*((*this)._field_scope))._field_stmts.__push(jule::Any(_127421_v));
		return;
	}
	if ((*(_126231_lexpr))._field_mutable || (*(_126231_lexpr))._field_reference) {
		(*((*this)._field_s))._method_push_err((*(_126231_lexpr))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_126231_lexpr))._field_ident)}));
		(*((*this)._field_s))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((!(_1de0e938e_check_assign((*this)._field_s,_126255_l,_126269_r,(*(_126213_a))._field_setter)))) {
		return;
	}
	
	(*((*this)._field_s))._method_check_validity_for_init_expr((*(_126255_l))._field_mutable,false,(*(_126255_l))._field_kind,_126269_r,(*(_126213_a))._field_setter);
	_1a93c7a48_AssignTypeChecker _130917_checker = _1a93c7a48_AssignTypeChecker((*this)._field_s,(*(_126255_l))._field_kind,_126269_r,(*(_126213_a))._field_setter);
	_130917_checker._method_check();
	(*(_126157_st))._field_l = jule::alloc_for_append((*(_126157_st))._field_l,1);(*(_126157_st))._field_l.__push((*(_126255_l))._field_model);
}



inline void _1de0e938e_ScopeChecker::_method_check_ret_multi_assign(jule::Ptr<_1dd05c765_AssignSt>& _132047_a) {
	jule::Ptr<_1a94c333b_Data> _132117_rd = (*((*((*(this->self))._field_s))._method_eval(this->self)))._method_eval_expr((*(_132047_a))._field_right);
	if (_132117_rd == nullptr) {
		return;
	}
	jule::Slice<jule::Ptr<_1a94c333b_Data>> _132617_r = _1de0e938e_get_datas_from_tuple_data(_132117_rd);
	{
		
		if ((*(_132047_a))._field_left.len() > static_cast<jule::Int>(_132617_r.len())) {
			_case_begin_1a85945c8:;
			{
				(*((*(this->self))._field_s))._method_push_err((*(_132047_a))._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if ((*(_132047_a))._field_left.len() < static_cast<jule::Int>(_132617_r.len())) {
			_case_begin_1a8594650:;
			{
				(*((*(this->self))._field_s))._method_push_err((*(_132047_a))._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1a859452e:;
	}
	jule::Ptr<_1de0e938e_MultiAssign> _133817_st = jule::new_struct<_1de0e938e_MultiAssign>(new( std::nothrow ) _1de0e938e_MultiAssign(jule::Slice<jule::Any>(),(*(_132117_rd))._field_model));
	if ((*((*(_132117_rd))._field_kind))._method_tup() == nullptr) {
		(*(_133817_st))._field_r=jule::Any(jule::new_struct<_1ddb3c047_TupleExprModel>(new( std::nothrow ) _1ddb3c047_TupleExprModel(_132617_r)));
	}
	{
		auto &expr = (*(_132047_a))._field_left;
		auto it = expr.begin();
		_iter_begin_1a8598412:;
		if (it != expr.end()) {
			jule::Int _1de0e938e_i = it - expr.begin();
			{
				jule::Ptr<_1dd05c765_AssignLeft> _134721_lexpr = (*(_132047_a))._field_left[_1de0e938e_i];
				jule::Ptr<_1a94c333b_Data> _134821_l = nullptr;
				if ((!(_1dd05db0c_is_ignore_ident((*(_134721_lexpr))._field_ident))) && ((!((*(_132047_a))._field_declarative)) || (!((*(this->self))._method_is_new_assign_ident((*(_134721_lexpr))._field_ident))))) {
					_134821_l=(*((*((*(this->self))._field_s))._method_eval(this->self)))._method_eval_expr((*(_134721_lexpr))._field_expr);
					if (_134821_l == nullptr) {
						goto _iter_next_1a8598412;
					}
				}
				(*(this->self))._method___process_end_part_of_multi_assign(_133817_st,_132047_a,_134721_lexpr,_134821_l,_132617_r[_1de0e938e_i]);
			}
			_iter_next_1a8598412:;
			++it;
			_1de0e938e_i++;
			goto _iter_begin_1a8598412;
		}
		_iter_end_1a8598412:;
	}
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_133817_st));
}



inline void _1de0e938e_ScopeChecker::_method_check_multi_assign(jule::Ptr<_1dd05c765_AssignSt>& _136443_a) {
	{
		auto &_match_expr{ (*((*(_136443_a))._field_right))._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_FnCallExpr>>()) {
			_case_begin_1a859d5d2:;
			{
				(*(this->self))._method_check_ret_multi_assign(_136443_a);
				return;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_UnsafeExpr>>()) {
			_case_begin_1a859d648:;
			{
				{
					auto &_match_expr{ (*((*((*(_136443_a))._field_right))._field_kind.operator jule::Ptr<_1dd05c765_UnsafeExpr>()))._field_expr };
					
					if (_match_expr.type_is<jule::Ptr<_1dd05c765_FnCallExpr>>()) {
						_case_begin_1a859ec54:;
						{
							(*(this->self))._method_check_ret_multi_assign(_136443_a);
							return;
						}
					}
					_match_end_1a859ebcc:;
				}
			}
		}
		_match_end_1a859d549:;
	}
	jule::Slice<jule::Any> _137717_right = _1de0e938e_get_expr_models((*((*(_136443_a))._field_right))._field_kind);
	{
		
		if ((*(_136443_a))._field_left.len() > static_cast<jule::Int>(_137717_right.len())) {
			_case_begin_1a85a0c22:;
			{
				(*((*(this->self))._field_s))._method_push_err((*(_136443_a))._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if ((*(_136443_a))._field_left.len() < static_cast<jule::Int>(_137717_right.len())) {
			_case_begin_1a85a0c88:;
			{
				(*((*(this->self))._field_s))._method_push_err((*(_136443_a))._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1a85a0b12:;
	}
	jule::Ptr<_1ddb3c047_TupleExprModel> _138817_right_tuple = jule::new_struct<_1ddb3c047_TupleExprModel>(new( std::nothrow ) _1ddb3c047_TupleExprModel());
	jule::Ptr<_1de0e938e_MultiAssign> _139017_st = jule::new_struct<_1de0e938e_MultiAssign>(new( std::nothrow ) _1de0e938e_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_138817_right_tuple)));
	{
		auto &expr = (*(_136443_a))._field_left;
		auto it = expr.begin();
		_iter_begin_1a85a41a9:;
		if (it != expr.end()) {
			jule::Int _1de0e938e_i = it - expr.begin();
			{
				jule::Ptr<_1dd05c765_AssignLeft> _139521_lexpr = (*(_136443_a))._field_left[_1de0e938e_i];
				jule::Ptr<_1a94c333b_Data> _139621_l = nullptr;
				if ((!(_1dd05db0c_is_ignore_ident((*(_139521_lexpr))._field_ident))) && ((!((*(_136443_a))._field_declarative)) || (!((*(this->self))._method_is_new_assign_ident((*(_139521_lexpr))._field_ident))))) {
					_139621_l=(*((*((*(this->self))._field_s))._method_eval(this->self)))._method_eval_expr((*(_139521_lexpr))._field_expr);
					if (_139621_l == nullptr) {
						goto _iter_next_1a85a41a9;
					}
				}
				jule::Ptr<_1dd05c765_Expr> _140621_expr = jule::new_struct<_1dd05c765_Expr>(new( std::nothrow ) _1dd05c765_Expr((*((*(_136443_a))._field_right))._field_token,_137717_right[_1de0e938e_i]));
				jule::Ptr<_1a94c333b_Eval> _140721_eval = (((_139621_l != nullptr)) ? ((*((*(this->self))._field_s))._method_evalp(this->self,(*(_139621_l))._field_kind)) : ((*((*(this->self))._field_s))._method_eval(this->self)));
				jule::Ptr<_1a94c333b_Data> _141221_r = (*(_140721_eval))._method_eval_expr(_140621_expr);
				if (_141221_r == nullptr) {
					goto _iter_next_1a85a41a9;
				}
				(*(_138817_right_tuple))._field_datas = jule::alloc_for_append((*(_138817_right_tuple))._field_datas,1);(*(_138817_right_tuple))._field_datas.__push(_141221_r);
				(*(this->self))._method___process_end_part_of_multi_assign(_139017_st,_136443_a,_139521_lexpr,_139621_l,_141221_r);
			}
			_iter_next_1a85a41a9:;
			++it;
			_1de0e938e_i++;
			goto _iter_begin_1a85a41a9;
		}
		_iter_end_1a85a41a9:;
	}
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_139017_st));
}



inline void _1de0e938e_ScopeChecker::_method_check_assign_st(jule::Ptr<_1dd05c765_AssignSt> _142539_a) {
	if (_1dd05db0c_is_postfix_op((*(_142539_a))._field_setter._field_kind)) {
		(*(this->self))._method_check_postfix(_142539_a);
		return;
	}
	if (((*(_142539_a))._field_left.len() == 1LL) && (!((*(_142539_a))._field_declarative))) {
		(*(this->self))._method_check_single_assign(_142539_a);
		return;
	}
	(*(this->self))._method_check_multi_assign(_142539_a);
}



inline jule::Ptr<_1de0e938e_Scope> _1de0e938e_ScopeChecker::_method_check_case_scope(jule::Ptr<_1de0e938e_Case>& _143937_c,jule::Ptr<_1dd05c765_ScopeTree>& _143952_tree) {
	jule::Ptr<_1de0e938e_ScopeChecker> _144017_ssc = (*(this->self))._method_new_child_checker();
	(*(_144017_ssc))._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_143937_c));
	return (*(this->self))._method_check_child_sc(_143952_tree,_144017_ssc);
}



inline jule::Ptr<_1de0e938e_Case> _1de0e938e_ScopeChecker::_method_check_case(jule::Ptr<_1de0e938e_Match> _144534_m,jule::Int _144545_i,jule::Ptr<_1dd05c765_Case> _144557_c,jule::Ptr<_1a94c333b_Data> _144587_expr) {
	jule::Ptr<_1de0e938e_Case> _144617__case = (*(_144534_m))._field_cases[_144545_i];
	(*(_144617__case))._field_exprs=jule::Slice<jule::Ptr<_1a94c333b_Data>>::alloc(0LL,static_cast<jule::Int>((*(_144557_c))._field_exprs.len()));
	jule::Bool _144817_generic_matched = false;
	jule::Ptr<_1a94c333b_Eval> _144917_eval = (*((*(this->self))._field_s))._method_eval(this->self);
	{
		auto &expr = (*(_144557_c))._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a85b3cbd:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Expr> _1de0e938e_e = *it;
			{
				jule::Ptr<_1a94c333b_Data> _145121_d = (*(_144917_eval))._method_eval_expr_kind((*(_1de0e938e_e))._field_kind);
				if (_145121_d == nullptr) {
					goto _iter_next_1a85b3cbd;
				}
				if ((*(_144534_m))._field_type_match) {
					(*(_144617__case))._field_exprs = jule::alloc_for_append((*(_144617__case))._field_exprs,1);(*(_144617__case))._field_exprs.__push(_145121_d);
					if (_1de0e938e_count_match_type(_144534_m,(*(_145121_d))._field_kind) > 1LL) {
						(*((*(this->self))._field_s))._method_push_err((*(_1de0e938e_e))._field_token,jule::Str("duplicated case: type @ is already checked", 42),jule::Slice<jule::Any>({jule::Any((*((*(_145121_d))._field_kind))._method_to_str())}));
					}
					if ((*((*(_144587_expr))._field_kind))._field_generic) {
						_144817_generic_matched=_144817_generic_matched || (*((*(_144587_expr))._field_kind))._method_equals((*(_145121_d))._field_kind);
					} else {
						jule::Ptr<_1de043c01_Trait> _146325_trt = (*((*(_144587_expr))._field_kind))._method_trt();
						if (_146325_trt != nullptr) {
							(*((*(this->self))._field_s))._method_check_type_compatibility((*(_144587_expr))._field_kind,(*(_145121_d))._field_kind,(*(_1de0e938e_e))._field_token);
						}
					}
					goto _iter_next_1a85b3cbd;
				}
				if ((*(_145121_d))._field_decl) {
					(*((*(this->self))._field_s))._method_push_err((*(_1de0e938e_e))._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					(*((*(this->self))._field_s))._method_push_suggestion(jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1a85b3cbd;
				}
				(*(_144617__case))._field_exprs = jule::alloc_for_append((*(_144617__case))._field_exprs,1);(*(_144617__case))._field_exprs.__push(_145121_d);
				_1a93c7a48_AssignTypeChecker _148021_checker = _1a93c7a48_AssignTypeChecker((*(this->self))._field_s,(*(_144587_expr))._field_kind,_145121_d,(*(_1de0e938e_e))._field_token);
				_148021_checker._method_check();
			}
			_iter_next_1a85b3cbd:;
			++it;
			goto _iter_begin_1a85b3cbd;
		}
		_iter_end_1a85b3cbd:;
	}
	if (((!((*(_144534_m))._field_type_match)) || (!((*((*(_144587_expr))._field_kind))._field_generic))) || _144817_generic_matched) {
		(*(_144617__case))._field_scope=(*(this->self))._method_check_case_scope(_144617__case,(*(_144557_c))._field_scope);
	}
	return _144617__case;
}



inline void _1de0e938e_ScopeChecker::_method_check_cases(jule::Ptr<_1dd05c765_MatchCase>& _149436_m,jule::Ptr<_1de0e938e_Match> _149455_rm,jule::Ptr<_1a94c333b_Data> _149471_expr) {
	(*(_149455_rm))._field_cases=jule::Slice<jule::Ptr<_1de0e938e_Case>>::alloc(0LL,static_cast<jule::Int>((*(_149436_m))._field_cases.len()));
	{
		auto &expr = (*(_149436_m))._field_cases;
		auto it = expr.begin();
		_iter_begin_1a85c003d:;
		if (it != expr.end()) {
			jule::Int _1de0e938e_i = it - expr.begin();
			{
				jule::Ptr<_1de0e938e_Case> _149721__case = jule::new_struct<_1de0e938e_Case>(new( std::nothrow ) _1de0e938e_Case(_149455_rm,jule::Ptr<_1de0e938e_Scope>(),jule::Slice<jule::Ptr<_1a94c333b_Data>>(),jule::Ptr<_1de0e938e_Case>()));
				if (_1de0e938e_i > 0LL) {
					(*((*(_149455_rm))._field_cases[_1de0e938e_i - 1LL]))._field_next=_149721__case;
				}
				(*(_149455_rm))._field_cases = jule::alloc_for_append((*(_149455_rm))._field_cases,1);(*(_149455_rm))._field_cases.__push(_149721__case);
			}
			_iter_next_1a85c003d:;
			++it;
			_1de0e938e_i++;
			goto _iter_begin_1a85c003d;
		}
		_iter_end_1a85c003d:;
	}
	if (((*(_149455_rm))._field_default != nullptr) && ((*(_149436_m))._field_cases.len() > 0LL)) {
		(*((*(_149455_rm))._field_cases[(*(_149455_rm))._field_cases.len() - 1LL]))._field_next=(*(_149455_rm))._field_default;
	}
	{
		auto &expr = (*(_149436_m))._field_cases;
		auto it = expr.begin();
		_iter_begin_1a85c3d66:;
		if (it != expr.end()) {
			jule::Int _1de0e938e_i = it - expr.begin();
			jule::Ptr<_1dd05c765_Case> _1de0e938e_c = *it;
			{
				(*(this->self))._method_check_case(_149455_rm,_1de0e938e_i,_1de0e938e_c,_149471_expr);
			}
			_iter_next_1a85c3d66:;
			++it;
			_1de0e938e_i++;
			goto _iter_begin_1a85c3d66;
		}
		_iter_end_1a85c3d66:;
	}
}



inline jule::Ptr<_1de0e938e_Case> _1de0e938e_ScopeChecker::_method_check_default(jule::Ptr<_1de0e938e_Match> _151537_m,jule::Ptr<_1dd05c765_Else> _151552_d) {
	jule::Ptr<_1de0e938e_Case> _151617_def = jule::new_struct<_1de0e938e_Case>(new( std::nothrow ) _1de0e938e_Case(_151537_m,jule::Ptr<_1de0e938e_Scope>(),jule::Slice<jule::Ptr<_1a94c333b_Data>>(),jule::Ptr<_1de0e938e_Case>()));
	(*(_151617_def))._field_scope=(*(this->self))._method_check_case_scope(_151617_def,(*(_151552_d))._field_scope);
	return _151617_def;
}



inline void _1de0e938e_ScopeChecker::_method_check_comptime_panic(jule::Ptr<_1de0e938e_Scope>& _152340_s,_1dd05db0c_Token _152351_error_token) {
	if ((*(_152340_s))._field_stmts.len() != 1LL) {
		return;
	}
	jule::Any _152813_stmt = (*(_152340_s))._field_stmts[0LL];
	{
		auto &_match_expr{ _152813_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a94c333b_Data>>()) {
			_case_begin_1a85c850d:;
			{
				jule::Ptr<_1a94c333b_Data> _153117_d = _152813_stmt.operator jule::Ptr<_1a94c333b_Data>();
				{
					auto &_match_expr{ (*(_153117_d))._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinPanicCallExprModel>>()) {
						_case_begin_1a85c93dd:;
						{
							jule::Ptr<_1ddb3c047_BuiltinPanicCallExprModel> _153421_m = (*(_153117_d))._field_model.operator jule::Ptr<_1ddb3c047_BuiltinPanicCallExprModel>();
							{
								auto &_match_expr{ (*(_153421_m))._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1a64669ca_Const>>()) {
									_case_begin_1a85ca433:;
									{
										jule::Ptr<_1a64669ca_Const> _153725_c = (*(_153421_m))._field_expr.operator jule::Ptr<_1a64669ca_Const>();
										if ((*(_153725_c))._method_is_str()) {
											(*((*this)._field_s))._method_push_err(_152351_error_token,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any((*(_153725_c))._method_read_str())}));
										}
									}
								}
								_match_end_1a85ca3cd:;
							}
						}
					}
					_match_end_1a85c9355:;
				}
			}
		}
		_match_end_1a85c84a8:;
	}
}



inline void _1de0e938e_ScopeChecker::_method_push_type_match(jule::Ptr<_1de0e938e_Match> _154639_tm,jule::Ptr<_1dd05c765_MatchCase>& _154652_m) {
	if ((*((*((*(_154639_tm))._field_expr))._field_kind))._field_generic) {
		{
			auto &expr = (*(_154639_tm))._field_cases;
			auto it = expr.begin();
			_iter_begin_1a85cca2e:;
			if (it != expr.end()) {
				jule::Int _1de0e938e_i = it - expr.begin();
				jule::Ptr<_1de0e938e_Case> _1de0e938e_c = *it;
				{
					if ((*(_1de0e938e_c))._field_scope != nullptr) {
						(*(_154639_tm))._field_cases=nullptr;
						(*(_154639_tm))._field_default=_1de0e938e_c;
						(*(this->self))._method_check_comptime_panic((*(_1de0e938e_c))._field_scope,(*((*(_154652_m))._field_cases[_1de0e938e_i]))._field_token);
						goto _julec_label_push;
					}
				}
				_iter_next_1a85cca2e:;
				++it;
				_1de0e938e_i++;
				goto _iter_begin_1a85cca2e;
			}
			_iter_end_1a85cca2e:;
		}
		if ((*(_154639_tm))._field_default != nullptr) {
			(*(this->self))._method_check_comptime_panic((*((*(_154639_tm))._field_default))._field_scope,(*((*(_154652_m))._field_default))._field_token);
		}
		(*(_154639_tm))._field_cases=nullptr;
	}
	_julec_label_push:;
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_154639_tm));
}



inline void _1de0e938e_ScopeChecker::_method_check_type_match(jule::Ptr<_1dd05c765_MatchCase>& _156841_m) {
	jule::Ptr<_1a94c333b_Data> _156917_d = (*((*((*(this->self))._field_s))._method_eval(this->self)))._method_eval((*(_156841_m))._field_expr);
	if (_156917_d == nullptr) {
		return;
	}
	if ((!((*((*(_156917_d))._field_kind))._field_generic)) && (!((((*((*(_156917_d))._field_kind))._method_prim() != nullptr) && (*((*((*(_156917_d))._field_kind))._method_prim()))._method_is_any()) || ((*((*(_156917_d))._field_kind))._method_trt() != nullptr)))) {
		(*((*(this->self))._field_s))._method_push_err((*((*(_156841_m))._field_expr))._field_token,jule::Str("type-match must be have <any>, <trait> or <generic> typed expression", 68),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1de0e938e_Match> _158017_tm = jule::new_struct<_1de0e938e_Match>(new( std::nothrow ) _1de0e938e_Match(_156917_d,true,jule::Slice<jule::Ptr<_1de0e938e_Case>>(),jule::Ptr<_1de0e938e_Case>()));
	if ((*(_156841_m))._field_default != nullptr) {
		(*(_158017_tm))._field_default=(*(this->self))._method_check_default(_158017_tm,(*(_156841_m))._field_default);
	}
	(*(this->self))._method_check_cases(_156841_m,_158017_tm,_156917_d);
	(*(this->self))._method_push_type_match(_158017_tm,_156841_m);
}



inline void _1de0e938e_ScopeChecker::_method_check_common_match(jule::Ptr<_1dd05c765_MatchCase>& _159243_m) {
	jule::Ptr<_1a94c333b_Data> _159317_d = nullptr;
	if ((*(_159243_m))._field_expr == nullptr) {
		_159317_d=jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a64669ca_Const::_static_method_new_bool(true)));
		(*(_159317_d))._field_model=jule::Any((*(_159317_d))._field_constant);
	} else {
		_159317_d=(*((*((*(this->self))._field_s))._method_eval(this->self)))._method_eval_expr((*(_159243_m))._field_expr);
		if (_159317_d == nullptr) {
			return;
		}
	}
	jule::Ptr<_1de0e938e_Match> _160717_mc = jule::new_struct<_1de0e938e_Match>(new( std::nothrow ) _1de0e938e_Match(_159317_d,jule::Bool(),jule::Slice<jule::Ptr<_1de0e938e_Case>>(),jule::Ptr<_1de0e938e_Case>()));
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_160717_mc));
	if ((*(_159243_m))._field_default != nullptr) {
		(*(_160717_mc))._field_default=(*(this->self))._method_check_default(_160717_mc,(*(_159243_m))._field_default);
	}
	(*(this->self))._method_check_cases(_159243_m,_160717_mc,_159317_d);
}



inline void _1de0e938e_ScopeChecker::_method_check_match(jule::Ptr<_1dd05c765_MatchCase> _161935_m) {
	if ((*(_161935_m))._field_type_match) {
		(*(this->self))._method_check_type_match(_161935_m);
		return;
	}
	(*(this->self))._method_check_common_match(_161935_m);
}



inline void _1de0e938e_ScopeChecker::_method_check_fall(jule::Ptr<_1dd05c765_FallSt> _162730_f) {
	if ((((*(this->self))._field_cse == 0LLU) || (((*((*(this->self))._field_scope))._field_stmts.len() + 1LL) < static_cast<jule::Int>((*((*(this->self))._field_scope))._field_stmts.len()))) || (*(this->self))._method_is_deferred()) {
		(*((*(this->self))._field_s))._method_push_err((*(_162730_f))._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;
	}
	_1de0e938e_Case* _163517__case = ((_1de0e938e_Case*)((*(this->self))._field_cse));
	if ((*(_163517__case))._field_next == nullptr) {
		(*((*(this->self))._field_s))._method_push_err((*(_162730_f))._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		(*((*(this->self))._field_s))._method_push_suggestion(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;
	}
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(jule::new_struct<_1de0e938e_FallSt>(new( std::nothrow ) _1de0e938e_FallSt(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_163517__case))._field_next)))))));
}



inline jule::Ptr<_1de0e938e_BreakSt> _1de0e938e_ScopeChecker::_method_check_break_with_label(jule::Ptr<_1dd05c765_BreakSt> _164742_b) {
	jule::Ptr<_1de0e938e_BreakSt> _164817_brk = (*(this->self))._method_check_plain_break(_164742_b);
	if (_164817_brk == nullptr) {
		return nullptr;
	}
	(*(_164817_brk))._field_it=0LLU;
	(*(_164817_brk))._field_mtch=0LLU;
	jule::Ptr<_1de0e938e_ScopeLabel> _165817_label = _1de0e938e_find_label_parent((*(_164742_b))._field_label._field_kind,(*(this->self))._field_parent);
	if (_165817_label == nullptr) {
		(*((*(this->self))._field_s))._method_push_err((*(_164742_b))._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any((*(_164742_b))._field_label._field_kind)}));
		return nullptr;
	}
	(*(_165817_label))._field_used=true;
	if (((*(_165817_label))._field_pos + 1LL) >= static_cast<jule::Int>((*((*((*(_165817_label))._field_scope))._field_scope))._field_stmts.len())) {
		(*((*(this->self))._field_s))._method_push_err((*(_164742_b))._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any((*(_164742_b))._field_label._field_kind)}));
		return nullptr;
	}
	jule::Int _167113_i = (*(_165817_label))._field_pos + 1LL;
	if (_167113_i >= static_cast<jule::Int>((*((*((*(_165817_label))._field_scope))._field_scope))._field_stmts.len())) {
		(*((*(this->self))._field_s))._method_push_err((*(_164742_b))._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any((*(_164742_b))._field_label._field_kind)}));
	} else {
		jule::Any _167521_st = (*((*((*(_165817_label))._field_scope))._field_scope))._field_stmts[_167113_i];
		{
			auto &_match_expr{ _167521_st };
			
			if (_match_expr.type_is<jule::Ptr<_1de0e938e_InfIter>>()) {
				_case_begin_1a85ee9eb:;
				{
					(*(_164817_brk))._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167521_st.operator jule::Ptr<_1de0e938e_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1de0e938e_RangeIter>>()) {
				_case_begin_1a8600a41:;
				{
					(*(_164817_brk))._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167521_st.operator jule::Ptr<_1de0e938e_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1de0e938e_WhileIter>>()) {
				_case_begin_1a8600aa7:;
				{
					(*(_164817_brk))._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167521_st.operator jule::Ptr<_1de0e938e_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Match>>()) {
				_case_begin_1a8600b1d:;
				{
					(*(_164817_brk))._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167521_st.operator jule::Ptr<_1de0e938e_Match>()));
				}
			}
			else {
				_case_begin_1a8600832:;
				{
					(*((*(this->self))._field_s))._method_push_err((*(_164742_b))._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any((*(_164742_b))._field_label._field_kind)}));
				}
			}
			_match_end_1a86007cc:;
		}
	}
	if ((*(_164817_brk))._field_it != 0LLU) {
		if ((!((*(this->self))._method_check_valid_break_label((*(_164817_brk))._field_it)))) {
			(*((*(this->self))._field_s))._method_push_err((*(_164742_b))._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any((*(_164742_b))._field_label._field_kind)}));
		}
	}
	if ((*(_164817_brk))._field_mtch != 0LLU) {
		if ((!((*(this->self))._method_check_valid_break_label((*(_164817_brk))._field_mtch)))) {
			(*((*(this->self))._field_s))._method_push_err((*(_164742_b))._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any((*(_164742_b))._field_label._field_kind)}));
		}
	}
	return _164817_brk;
}



inline jule::Ptr<_1de0e938e_BreakSt> _1de0e938e_ScopeChecker::_method_check_plain_break(jule::Ptr<_1dd05c765_BreakSt> _170037_b) {
	if ((*(this->self))._method_is_deferred()) {
		(*((*(this->self))._field_s))._method_push_err((*(_170037_b))._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1de0e938e_ScopeChecker> _170617_scope = this->self;
	_julec_label_iter:;
	{
		
		if (((((*(_170617_scope))._field_it == 0LLU) && ((*(_170617_scope))._field_cse == 0LLU)) && ((*(_170617_scope))._field_parent != nullptr)) && ((*(_170617_scope))._field_owner == nullptr)) {
			_case_begin_1a86088b2:;
			{
				_170617_scope=(*(_170617_scope))._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((*(_170617_scope))._field_it != 0LLU) {
			_case_begin_1a8608939:;
			{
				return jule::new_struct<_1de0e938e_BreakSt>(new( std::nothrow ) _1de0e938e_BreakSt((*(_170617_scope))._field_it,jule::Uintptr()));
			}
		}
		else if ((*(_170617_scope))._field_cse != 0LLU) {
			_case_begin_1a86089b1:;
			{
				return jule::new_struct<_1de0e938e_BreakSt>(new( std::nothrow ) _1de0e938e_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(((_1de0e938e_Case*)((*(_170617_scope))._field_cse))))._field_owner)))));
			}
		}
		_match_end_1a86087e6:;
	}
	(*((*(this->self))._field_s))._method_push_err((*(_170037_b))._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1de0e938e_ScopeChecker::_method_check_break(jule::Ptr<_1dd05c765_BreakSt> _172431_b) {
	if ((*(_172431_b))._field_label._field_id != static_cast<jule::Uint>(0LLU)) {
		jule::Ptr<_1de0e938e_BreakSt> _172621_brk = (*(this->self))._method_check_break_with_label(_172431_b);
		(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_172621_brk));
		return;
	}
	jule::Ptr<_1de0e938e_BreakSt> _173117_brk = (*(this->self))._method_check_plain_break(_172431_b);
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_173117_brk));
}



inline void _1de0e938e_ScopeChecker::_method_check_ret(jule::Ptr<_1dd05c765_RetSt> _173533_r) {
	if ((*(this->self))._method_is_deferred()) {
		(*((*(this->self))._field_s))._method_push_err((*(_173533_r))._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1de0e938e_RetSt> _174017_rt = jule::new_struct<_1de0e938e_RetSt>(new( std::nothrow ) _1de0e938e_RetSt((*((*(this->self))._method_get_root()))._field_owner,jule::Slice<jule::Ptr<_1c3c3d174_Var>>(),jule::Any()));
	(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_174017_rt));
	jule::Ptr<_1a93c7a48_RetTypeChecker> _174517_rtc = jule::new_struct<_1a93c7a48_RetTypeChecker>(new( std::nothrow ) _1a93c7a48_RetTypeChecker(this->self,(*(_174017_rt))._field_func,jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dd05c765_Expr>>(),jule::Slice<jule::Ptr<_1c3c3d174_Var>>(),(*(_173533_r))._field_token,jule::Any()));
	jule::Bool _175013_ok = (*(_174517_rtc))._method_check((*(_173533_r))._field_expr);
	if ((!(_175013_ok))) {
		return;
	}
	if (((*(_173533_r))._field_expr == nullptr) && ((*(_174517_rtc))._field_vars.len() == 0LL)) {
		return;
	}
	(*(_174017_rt))._field_vars=(*(_174517_rtc))._field_vars;
	if ((*(_173533_r))._field_expr != nullptr) {
		(*(_174017_rt))._field_expr=(*(_174517_rtc))._field_model;
	}
}



inline void _1de0e938e_ScopeChecker::_method_check_use_expr(jule::Ptr<_1dd05c765_UseExpr> _176634_ue) {
	if ((*(this->self))._field_result == nullptr) {
		(*((*(this->self))._field_s))._method_push_err((*(_176634_ue))._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;
	}
	if ((*(this->self))._method_is_deferred()) {
		(*((*(this->self))._field_s))._method_push_err((*(_176634_ue))._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	}
	if (((*(this->self))._field_i + 1LL) < static_cast<jule::Int>((*((*(this->self))._field_tree))._field_stmts.len())) {
		(*((*(this->self))._field_s))._method_push_err((*(_176634_ue))._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	}
}



inline void _1de0e938e_ScopeChecker::_method_check_node(jule::Any& _178335_node) {
	{
		auto &_match_expr{ _178335_node };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_Comment>>()) {
			_case_begin_1a861b870:;
			{
				goto _match_end_1a861b496;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_ScopeTree>>()) {
			_case_begin_1a861bc8d:;
			{
				(*(this->self))._method_check_anon_scope(_178335_node.operator jule::Ptr<_1dd05c765_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_VarDecl>>()) {
			_case_begin_1a861b41e:;
			{
				(*(this->self))._method_check_var_decl(_178335_node.operator jule::Ptr<_1dd05c765_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_TypeAliasDecl>>()) {
			_case_begin_1a861b96e:;
			{
				(*(this->self))._method_check_type_alias_decl(_178335_node.operator jule::Ptr<_1dd05c765_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_Expr>>()) {
			_case_begin_1a861b9d5:;
			{
				(*(this->self))._method_check_expr(_178335_node.operator jule::Ptr<_1dd05c765_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_CoExpr>>()) {
			_case_begin_1a861ba4b:;
			{
				(*(this->self))._method_check_co_expr(_178335_node.operator jule::Ptr<_1dd05c765_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_Conditional>>()) {
			_case_begin_1a861bab2:;
			{
				(*(this->self))._method_check_conditional(_178335_node.operator jule::Ptr<_1dd05c765_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_Iter>>()) {
			_case_begin_1a861bb28:;
			{
				(*(this->self))._method_check_iter(_178335_node.operator jule::Ptr<_1dd05c765_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_ContSt>>()) {
			_case_begin_1a861be7a:;
			{
				(*(this->self))._method_check_cont(_178335_node.operator jule::Ptr<_1dd05c765_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_LabelSt>>()) {
			_case_begin_1a861bee1:;
			{
				(*(this->self))._method_check_label(_178335_node.operator jule::Ptr<_1dd05c765_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_GotoSt>>()) {
			_case_begin_1a861c057:;
			{
				(*(this->self))._method_push_goto(_178335_node.operator jule::Ptr<_1dd05c765_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_AssignSt>>()) {
			_case_begin_1a861c0bd:;
			{
				(*(this->self))._method_check_assign_st(_178335_node.operator jule::Ptr<_1dd05c765_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_MatchCase>>()) {
			_case_begin_1a861c145:;
			{
				(*(this->self))._method_check_match(_178335_node.operator jule::Ptr<_1dd05c765_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_FallSt>>()) {
			_case_begin_1a861c1bc:;
			{
				(*(this->self))._method_check_fall(_178335_node.operator jule::Ptr<_1dd05c765_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_BreakSt>>()) {
			_case_begin_1a861c244:;
			{
				(*(this->self))._method_check_break(_178335_node.operator jule::Ptr<_1dd05c765_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_RetSt>>()) {
			_case_begin_1a861c2bb:;
			{
				(*(this->self))._method_check_ret(_178335_node.operator jule::Ptr<_1dd05c765_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_UseExpr>>()) {
			_case_begin_1a861c343:;
			{
				(*(this->self))._method_check_use_expr(_178335_node.operator jule::Ptr<_1dd05c765_UseExpr>());
			}
		}
		else {
			_case_begin_1a861b4eb:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1a861b496:;
	}
}



inline void _1de0e938e_ScopeChecker::_method_check_result(void) {
	jule::Any _180717_stmt = (*((*(this->self))._field_tree))._field_stmts[(*((*(this->self))._field_tree))._field_stmts.len() - 1LL];
	{
		auto &_match_expr{ _180717_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_UseExpr>>()) {
			_case_begin_1a8628edc:;
			{
				jule::Ptr<_1dd05c765_UseExpr> _181021_ue = _180717_stmt.operator jule::Ptr<_1dd05c765_UseExpr>();
				jule::Ptr<_1a94c333b_Data> _181121_d = (*((*((*(this->self))._field_s))._method_eval(this->self)))._method_eval_expr((*(_181021_ue))._field_expr);
				if (_181121_d == nullptr) {
					return;
				}
				(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_181121_d));
				jule::Ptr<_1a93c7a48_RetTypeChecker> _181821_rtc = jule::new_struct<_1a93c7a48_RetTypeChecker>(new( std::nothrow ) _1a93c7a48_RetTypeChecker(this->self,jule::Ptr<_1dded9702_FnIns>(),_1a93c7a48_get_result_types((*(this->self))._field_result),jule::Slice<jule::Ptr<_1dd05c765_Expr>>(),jule::Slice<jule::Ptr<_1c3c3d174_Var>>(),(*((*(_181021_ue))._field_expr))._field_token,jule::Any()));
				(*(_181821_rtc))._method_check((*(_181021_ue))._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_Expr>>()) {
			_case_begin_1a8629240:;
			{
				jule::Ptr<_1dd05c765_Expr> _182621_expr = _180717_stmt.operator jule::Ptr<_1dd05c765_Expr>();
				jule::Ptr<_1a94c333b_Data> _182721_d = (*((*((*(this->self))._field_s))._method_eval(this->self)))._method_eval_expr(_182621_expr);
				if (_182721_d == nullptr) {
					return;
				}
				(*((*(this->self))._field_scope))._field_stmts = jule::alloc_for_append((*((*(this->self))._field_scope))._field_stmts,1);(*((*(this->self))._field_scope))._field_stmts.__push(jule::Any(_182721_d));
				{
					auto &_match_expr{ (*(_182721_d))._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel>>()) {
						_case_begin_1a862e762:;
						{
							jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel> _183625_m = (*(_182721_d))._field_model.operator jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel>();
							(*(this->self))._method_process_error_call(_183625_m,(*(_182621_expr))._field_token);
						}
					}
					else {
						_case_begin_1a862e564:;
						{
							return;
						}
					}
					_match_end_1a862e50e:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_ContSt>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_RetSt>>()) {
			_case_begin_1a86292a6:;
			{
				(*(this->self))._method_check_node(_180717_stmt);
			}
		}
		else {
			_case_begin_1a8628805:;
			{
				(*(this->self))._method_check_node(_180717_stmt);
				return;
			}
		}
		_match_end_1a86287a0:;
	}
	(*(this->self))._field_result=nullptr;
}



inline void _1de0e938e_ScopeChecker::_method_check_tree(void) {
	(*(this->self))._field_i=0LL;
	for (; (*(this->self))._field_i < static_cast<jule::Int>((*((*(this->self))._field_tree))._field_stmts.len()); ((*(this->self))._field_i)++) {
		{
			jule::Any _186121_stmt = (*((*(this->self))._field_tree))._field_stmts[(*(this->self))._field_i];
			(*(this->self))._method_check_node(_186121_stmt);
			if ((*(this->self))._method_stopped()) {
				return;
			}
		}
	_iter_next_1a86372c5:;
	}
	_iter_end_1a86372c5:;
	if (((*(this->self))._field_result != nullptr) && ((*((*(this->self))._field_tree))._field_stmts.len() != 0LL)) {
		(*(this->self))._method_check_result();
	}
}



inline void _1de0e938e_ScopeChecker::_method_check_goto(jule::Ptr<_1de0e938e_ScopeGoto>& _187234_gt,jule::Ptr<_1de0e938e_ScopeLabel>& _187255_label) {
	jule::Ptr<_1de0e938e_ScopeChecker> _187317_gtsc = (*(_187234_gt))._field_scope;
	while (((*(_187317_gtsc))._field_child_index - 1LL) > (*((*(_187255_label))._field_scope))._field_child_index) {
		{
			_187317_gtsc=(*(_187317_gtsc))._field_parent;
		}
	_iter_next_1a863b32e:;
	}
	_iter_end_1a863b32e:;
	jule::Int _187817_n = 0LL;
	if ((*(_187317_gtsc))._field_scope == (*((*(_187255_label))._field_scope))._field_scope) {
		if ((*(_187234_gt))._field_pos > (*(_187255_label))._field_pos) {
			return;
		}
		_187817_n=(*(_187234_gt))._field_pos;
	}
	jule::Int _189117_i = (*(_187255_label))._field_pos - 1LL;
	if (_187817_n == 0LL) {
		{
			auto &expr = (*((*((*(_187255_label))._field_scope))._field_scope))._field_stmts;
			auto it = expr.begin();
			_iter_begin_1a863e50d:;
			if (it != expr.end()) {
				jule::Int _1de0e938e_j = it - expr.begin();
				jule::Any _1de0e938e_stmt = *it;
				{
					if (_1de0e938e_stmt_is_goto_scope(_1de0e938e_stmt,(*(_187317_gtsc))._field_scope)) {
						_187817_n=_1de0e938e_j;
						goto _iter_end_1a863e50d;
					}
				}
				_iter_next_1a863e50d:;
				++it;
				_1de0e938e_j++;
				goto _iter_begin_1a863e50d;
			}
			_iter_end_1a863e50d:;
		}
	}
	for (; _189117_i >= _187817_n; (_189117_i)--) {
		{
			jule::Any _190421_stmt = (*((*((*(_187255_label))._field_scope))._field_scope))._field_stmts[_189117_i];
			if (_1de0e938e_st_is_def(_190421_stmt)) {
				(*((*this)._field_s))._method_push_err((*((*(_187234_gt))._field_gt))._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any((*((*(_187234_gt))._field_gt))._field_label._field_kind)}));
				return;
			}
		}
	_iter_next_1a863ea5d:;
	}
	_iter_end_1a863ea5d:;
}



inline void _1de0e938e_ScopeChecker::_method_check_gotos(void) {
	{
		auto &expr = (*((*this)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1a86429c8:;
		if (it != expr.end()) {
			jule::Ptr<_1de0e938e_ScopeGoto> _1de0e938e_gt = *it;
			{
				jule::Ptr<_1de0e938e_ScopeLabel> _191421_label = (*this)._method_find_label_all((*((*(_1de0e938e_gt))._field_gt))._field_label._field_kind);
				if (_191421_label == nullptr) {
					(*((*this)._field_s))._method_push_err((*((*(_1de0e938e_gt))._field_gt))._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any((*((*(_1de0e938e_gt))._field_gt))._field_label._field_kind)}));
					goto _iter_next_1a86429c8;
				}
				(*(_191421_label))._field_used=true;
				(*this)._method_check_goto(_1de0e938e_gt,_191421_label);
			}
			_iter_next_1a86429c8:;
			++it;
			goto _iter_begin_1a86429c8;
		}
		_iter_end_1a86429c8:;
	}
}



inline void _1de0e938e_ScopeChecker::_method_check_labels(void) {
	{
		auto &expr = (*((*this)._field_labels));
		auto it = expr.begin();
		_iter_begin_1a8645932:;
		if (it != expr.end()) {
			jule::Ptr<_1de0e938e_ScopeLabel> _1de0e938e_l = *it;
			{
				if ((!((*(_1de0e938e_l))._field_used))) {
					(*((*this)._field_s))._method_push_err((*(_1de0e938e_l))._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any((*((*(_1de0e938e_l))._field_label))._field_ident)}));
				}
			}
			_iter_next_1a8645932:;
			++it;
			goto _iter_begin_1a8645932;
		}
		_iter_end_1a8645932:;
	}
}



inline void _1de0e938e_ScopeChecker::_method_check_vars(void) {
	{
		auto &expr = (*((*this)._field_table))._field_vars;
		auto it = expr.begin();
		_iter_begin_1a8647615:;
		if (it != expr.end()) {
			jule::Ptr<_1c3c3d174_Var> _1de0e938e_v = *it;
			{
				if ((((!((*(_1de0e938e_v))._field_used)) && (!(_1dd05db0c_is_ignore_ident((*(_1de0e938e_v))._field_ident)))) && (!(_1dd05db0c_is_anon_ident((*(_1de0e938e_v))._field_ident)))) && ((*(_1de0e938e_v))._field_ident != jule::Str("self", 4))) {
					(*((*this)._field_s))._method_push_err((*(_1de0e938e_v))._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any((*(_1de0e938e_v))._field_ident)}));
				}
			}
			_iter_next_1a8647615:;
			++it;
			goto _iter_begin_1a8647615;
		}
		_iter_end_1a8647615:;
	}
}



inline void _1de0e938e_ScopeChecker::_method_check_aliases(void) {
	{
		auto &expr = (*((*this)._field_table))._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a864a272:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e40a26_TypeAlias> _1de0e938e_a = *it;
			{
				if (((!((*(_1de0e938e_a))._field_used)) && (!(_1dd05db0c_is_ignore_ident((*(_1de0e938e_a))._field_ident)))) && (!(_1dd05db0c_is_anon_ident((*(_1de0e938e_a))._field_ident)))) {
					(*((*this)._field_s))._method_push_err((*(_1de0e938e_a))._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any((*(_1de0e938e_a))._field_ident)}));
				}
			}
			_iter_next_1a864a272:;
			++it;
			goto _iter_begin_1a864a272;
		}
		_iter_end_1a864a272:;
	}
}



inline void _1de0e938e_ScopeChecker::_method_check(jule::Ptr<_1dd05c765_ScopeTree>& _195030_tree,jule::Ptr<_1de0e938e_Scope>& _195053_s) {
	(*(_195053_s))._field_deferred=(*(_195030_tree))._field_deferred;
	(*(_195053_s))._field_unsafety=(*(_195030_tree))._field_unsafety;
	jule::Int _195413_errors = (*((*(this->self))._field_s))._field_errors.len();
	(*(this->self))._field_tree=_195030_tree;
	(*(this->self))._field_scope=_195053_s;
	(*(this->self))._method_check_tree();
	if (_195413_errors == static_cast<jule::Int>((*((*(this->self))._field_s))._field_errors.len())) {
		(*(this->self))._method_check_vars();
		(*(this->self))._method_check_aliases();
		if ((*(this->self))._method_is_root()) {
			(*(this->self))._method_check_gotos();
			(*(this->self))._method_check_labels();
		}
	}
}



inline jule::Ptr<_1de0e938e_ScopeChecker> _1de0e938e_ScopeChecker::_method_new_child_checker(void) {
	jule::Ptr<_1de0e938e_ScopeChecker> _197417_base = _1de0e938e_new_scope_checker_base((*(this->self))._field_s,nullptr);
	(*(_197417_base))._field_parent=this->self;
	(*(_197417_base))._field_labels=(*(this->self))._field_labels;
	(*(_197417_base))._field_gotos=(*(this->self))._field_gotos;
	(*(_197417_base))._field_child_index=static_cast<jule::Int>((*(this->self))._field_child_index + 1LL);
	return _197417_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1de353939_DirectiveChecker::_method_check_cdef(jule::Ptr<_1dd05c765_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dded9702_Fn>>()) {
			_case_begin_1a8653896:;
			{
				if ((*((*this)._field_o.operator jule::Ptr<_1dded9702_Fn>()))._field_cpp_linked) {
					goto _match_end_1a865391d;
				}
				goto _case_begin_1a8653973;
			}
		}
		else {
			_case_begin_1a8653973:;
			{
				(*((*this)._field_s))._method_push_err((*(_1630_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any((*(_1630_d))._field_tag._field_kind)}));
			}
		}
		_match_end_1a865391d:;
	}
	if ((*(_1630_d))._field_args.len() > 0LL) {
		(*((*this)._field_s))._method_push_err((*(_1630_d))._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1de353939_DirectiveChecker::_method_check_typedef(jule::Ptr<_1dd05c765_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
			_case_begin_1a8656b74:;
			{
				if ((*((*this)._field_o.operator jule::Ptr<_1dd0be530_Struct>()))._field_cpp_linked) {
					goto _match_end_1a8656beb;
				}
				goto _case_begin_1a8656c51;
			}
		}
		else {
			_case_begin_1a8656c51:;
			{
				(*((*this)._field_s))._method_push_err((*(_3233_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any((*(_3233_d))._field_tag._field_kind)}));
			}
		}
		_match_end_1a8656beb:;
	}
	if ((*(_3233_d))._field_args.len() > 0LL) {
		(*((*this)._field_s))._method_push_err((*(_3233_d))._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1de353939_DirectiveChecker::_method_check_derive(jule::Ptr<_1dd05c765_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
			_case_begin_1a865a194:;
			{
				if ((!((*((*this)._field_o.operator jule::Ptr<_1dd0be530_Struct>()))._field_cpp_linked))) {
					goto _match_end_1a865a21b;
				}
				goto _case_begin_1a865a271;
			}
		}
		else {
			_case_begin_1a865a271:;
			{
				(*((*this)._field_s))._method_push_err((*(_4832_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a865a21b:;
	}
	if ((*(_4832_d))._field_args.len() == 0LL) {
		(*((*this)._field_s))._method_push_err((*(_4832_d))._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		(*((*this)._field_s))._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	} else if ((*(_4832_d))._field_args.len() > 1LL) {
		(*((*this)._field_s))._method_push_err((*(_4832_d))._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	{
		auto &_match_expr{ (*(_4832_d))._field_args[0LL]._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1a865e891:;
		}
		else {
			_case_begin_1a865e53e:;
			{
				(*((*this)._field_s))._method_push_err((*(_4832_d))._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any((*(_4832_d))._field_args[0LL]._field_kind)}));
			}
		}
		_match_end_1a865e4c8:;
	}
}



inline void _1de353939_DirectiveChecker::_method_check_namespace(jule::Ptr<_1dd05c765_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
			_case_begin_1a8661365:;
			{
				if ((!((*((*this)._field_o.operator jule::Ptr<_1dd0be530_Struct>()))._field_cpp_linked))) {
					(*((*this)._field_s))._method_push_err((*(_7439_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any((*(_7439_d))._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dded9702_Fn>>()) {
			_case_begin_1a86616ea:;
			{
				if ((!((*((*this)._field_o.operator jule::Ptr<_1dded9702_Fn>()))._field_cpp_linked))) {
					(*((*this)._field_s))._method_push_err((*(_7439_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any((*(_7439_d))._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
			_case_begin_1a8661761:;
			{
				if ((!((*((*this)._field_o.operator jule::Ptr<_1c3c3d174_Var>()))._field_cpp_linked))) {
					(*((*this)._field_s))._method_push_err((*(_7439_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any((*(_7439_d))._field_tag._field_kind)}));
				}
			}
		}
		else {
			_case_begin_1a8661442:;
			{
				(*((*this)._field_s))._method_push_err((*(_7439_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any((*(_7439_d))._field_tag._field_kind)}));
			}
		}
		_match_end_1a86613dc:;
	}
	if ((*(_7439_d))._field_args.len() == 0LL) {
		(*((*this)._field_s))._method_push_err((*(_7439_d))._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if ((*(_7439_d))._field_args.len() > 1LL) {
		(*((*this)._field_s))._method_push_err((*(_7439_d))._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	_1dd05db0c_Token _10213_arg = (*(_7439_d))._field_args[0LL];
	if (_10213_arg._field_id != static_cast<jule::Uint>(6LLU)) {
		(*((*this)._field_s))._method_push_err(_10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_10213_arg._field_kind[0LL] != '\"') {
		(*((*this)._field_s))._method_push_err(_10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	(*(_7439_d))._field_args[0LL]._field_kind=_10213_arg._field_kind.slice(1LL,_10213_arg._field_kind.len() - 1LL);
	{
		auto &_match_expr{ (*this)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
			_case_begin_1a866ac76:;
			{
				if (_1a94c333b_find_directive((*((*this)._field_d)),jule::Str("typedef", 7)) == nullptr) {
					jule::Ptr<_1dd05c765_Directive> _11925_typedef = jule::new_struct<_1dd05c765_Directive>(new( std::nothrow ) _1dd05c765_Directive((*(_7439_d))._field_tag,jule::Slice<_1dd05db0c_Token>()));
					(*(_11925_typedef))._field_tag._field_kind=jule::Str("typedef", 7);
					(*((*this)._field_d))=jule::append((*((*this)._field_d)),jule::Slice<jule::Ptr<_1dd05c765_Directive>>({_11925_typedef}));
				}
			}
		}
		_match_end_1a866a4c3:;
	}
}



inline void _1de353939_DirectiveChecker::_method_check_deprecated(jule::Ptr<_1dd05c765_Directive>& _12840_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
			_case_begin_1a866da48:;
			{
				if ((*((*this)._field_o.operator jule::Ptr<_1dd0be530_Struct>()))._field_cpp_linked) {
					(*((*this)._field_s))._method_push_err((*(_12840_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any((*(_12840_d))._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dded9702_Fn>>()) {
			_case_begin_1a866ddbc:;
			{
				if ((*((*this)._field_o.operator jule::Ptr<_1dded9702_Fn>()))._field_cpp_linked) {
					(*((*this)._field_s))._method_push_err((*(_12840_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any((*(_12840_d))._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
			_case_begin_1a866de33:;
			{
				if ((*((*this)._field_o.operator jule::Ptr<_1c3c3d174_Var>()))._field_cpp_linked) {
					(*((*this)._field_s))._method_push_err((*(_12840_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any((*(_12840_d))._field_tag._field_kind)}));
				}
			}
		}
		else {
			_case_begin_1a866db25:;
			{
				(*((*this)._field_s))._method_push_err((*(_12840_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any((*(_12840_d))._field_tag._field_kind)}));
			}
		}
		_match_end_1a866dac0:;
	}
	if ((*(_12840_d))._field_args.len() == 0LL) {
		return;
	}
	if ((*(_12840_d))._field_args.len() > 1LL) {
		(*((*this)._field_s))._method_push_err((*(_12840_d))._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	_1dd05db0c_Token _15613_arg = (*(_12840_d))._field_args[0LL];
	if (_15613_arg._field_id != static_cast<jule::Uint>(6LLU)) {
		(*((*this)._field_s))._method_push_err(_15613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_15613_arg._field_kind[0LL] != '\"') {
		(*((*this)._field_s))._method_push_err(_15613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	(*(_12840_d))._field_args[0LL]._field_kind=_15613_arg._field_kind.slice(1LL,_15613_arg._field_kind.len() - 1LL);
}



inline void _1de353939_DirectiveChecker::_method_check_test(jule::Ptr<_1dd05c765_Directive>& _17031_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1dded9702_Fn>>()) {
			_case_begin_1a86787cd:;
			{
				jule::Ptr<_1dded9702_Fn> _17317_f = (*this)._field_o.operator jule::Ptr<_1dded9702_Fn>();
				if (((!((*(_17317_f))._field_cpp_linked)) && (!((*(_17317_f))._method_is_init()))) && (!((*(_17317_f))._method_is_entry_point()))) {
					goto _match_end_1a8678855;
				}
				if ((*(_17317_f))._method_is_method()) {
					(*((*this)._field_s))._method_push_err((*(_17317_f))._field_token,jule::Str("you cannot declarate test methods", 33),jule::Slice<jule::Any>());
					goto _match_end_1a8678855;
				}
				goto _case_begin_1a86788aa;
			}
		}
		else {
			_case_begin_1a86788aa:;
			{
				(*((*this)._field_s))._method_push_err((*(_17031_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any((*(_17031_d))._field_tag._field_kind)}));
			}
		}
		_match_end_1a8678855:;
	}
	if ((*(_17031_d))._field_args.len() > 0LL) {
		(*((*this)._field_s))._method_push_err((*(_17031_d))._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1de353939_DirectiveChecker::_method_check_directive(jule::Ptr<_1dd05c765_Directive>& _19139_d) {
	{
		auto &_match_expr{ (*(_19139_d))._field_tag._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1a867db24:;
			{
				(*this)._method_check_cdef(_19139_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1a867db8a:;
			{
				(*this)._method_check_typedef(_19139_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1a867dc01:;
			{
				(*this)._method_check_derive(_19139_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1a867dc67:;
			{
				(*this)._method_check_namespace(_19139_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1a867eaae:;
			{
				(*this)._method_check_deprecated(_19139_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1a867eb25:;
			{
				(*this)._method_check_test(_19139_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1a867eb8b:;
			{
				(*((*this)._field_s))._method_push_err((*(_19139_d))._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any((*(_19139_d))._field_tag._field_kind)}));
			}
		}
		else {
			_case_begin_1a867d6c3:;
			{
				(*((*this)._field_s))._method_push_err((*(_19139_d))._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any((*(_19139_d))._field_tag._field_kind)}));
			}
		}
		_match_end_1a867d98c:;
	}
}



inline void _1de353939_DirectiveChecker::_method_check(void) {
	{
		auto &expr = (*((*this)._field_d));
		auto it = expr.begin();
		_iter_begin_1a868393c:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Directive> _1de353939_d = *it;
			{
				(*this)._method_check_directive(_1de353939_d);
			}
			_iter_next_1a868393c:;
			++it;
			goto _iter_begin_1a868393c;
		}
		_iter_end_1a868393c:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1de353939_DirectiveChecker &_Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1c2c4607e_Package::_method_find_package(jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1c2c4607e_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1c3c3d174_Var> _1c2c4607e_Package::_method_find_var(jule::Str _28731_ident,jule::Bool _28743_cpp_linked) {
	return _1c2c4607e_find_var_in_package((*this)._field_files,_28731_ident,_28743_cpp_linked);
}



inline jule::Ptr<_1a5e40a26_TypeAlias> _1c2c4607e_Package::_method_find_type_alias(jule::Str _29338_ident,jule::Bool _29350_cpp_linked) {
	return _1c2c4607e_find_type_alias_in_package((*this)._field_files,_29338_ident,_29350_cpp_linked);
}



inline jule::Ptr<_1dd0be530_Struct> _1c2c4607e_Package::_method_find_struct(jule::Str _29934_ident,jule::Bool _29946_cpp_linked) {
	return _1c2c4607e_find_struct_in_package((*this)._field_files,_29934_ident,_29946_cpp_linked);
}



inline jule::Ptr<_1dded9702_Fn> _1c2c4607e_Package::_method_find_fn(jule::Str _30530_ident,jule::Bool _30542_cpp_linked) {
	return _1c2c4607e_find_fn_in_package((*this)._field_files,_30530_ident,_30542_cpp_linked);
}



inline jule::Ptr<_1de043c01_Trait> _1c2c4607e_Package::_method_find_trait(jule::Str _31133_ident) {
	return _1c2c4607e_find_trait_in_package((*this)._field_files,_31133_ident);
}



inline jule::Ptr<_1de0dbeb9_Enum> _1c2c4607e_Package::_method_find_enum(jule::Str _31732_ident) {
	return _1c2c4607e_find_enum_in_package((*this)._field_files,_31732_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _1c2c4607e_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1c2c46634_Sema::_method_find_package(jule::Str _35735_ident) {
	return (*((*this)._field_file))._method_find_package(_35735_ident);
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1c2c46634_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)> _36737_selector) {
	return (*((*this)._field_file))._method_select_package(_36737_selector);
}



inline jule::Ptr<_1c3c3d174_Var> _1c2c46634_Sema::_method_find_var(jule::Str _37731_ident,jule::Bool _37743_cpp_linked) {
	jule::Ptr<_1c3c3d174_Var> _37917_v = _1c2c4607e_find_var_in_package((*this)._field_files,_37731_ident,_37743_cpp_linked);
	if (_37917_v != nullptr) {
		return _37917_v;
	}
	{
		auto &expr = (*((*this)._field_file))._field_imports;
		auto it = expr.begin();
		_iter_begin_1a869dccb:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1c2c46634_imp = *it;
			{
				if ((!(_1c2c46634_imp_is_lookupable(_1c2c46634_imp,_37731_ident)))) {
					goto _iter_next_1a869dccb;
				}
				_37917_v=(*(_1c2c46634_imp))._method_find_var(_37731_ident,_37743_cpp_linked);
				if ((_37917_v != nullptr) && (*this)._method_is_accessible_define((*(_37917_v))._field_public,(*(_37917_v))._field_token)) {
					return _37917_v;
				}
			}
			_iter_next_1a869dccb:;
			++it;
			goto _iter_begin_1a869dccb;
		}
		_iter_end_1a869dccb:;
	}
	return nullptr;
}



inline jule::Ptr<_1a5e40a26_TypeAlias> _1c2c46634_Sema::_method_find_type_alias(jule::Str _40438_ident,jule::Bool _40450_cpp_linked) {
	jule::Ptr<_1a5e40a26_TypeAlias> _40617_ta = _1c2c4607e_find_type_alias_in_package((*this)._field_files,_40438_ident,_40450_cpp_linked);
	if (_40617_ta != nullptr) {
		return _40617_ta;
	}
	{
		auto &expr = (*((*this)._field_file))._field_imports;
		auto it = expr.begin();
		_iter_begin_1a86a253d:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1c2c46634_imp = *it;
			{
				if ((!(_1c2c46634_imp_is_lookupable(_1c2c46634_imp,_40438_ident)))) {
					goto _iter_next_1a86a253d;
				}
				_40617_ta=(*(_1c2c46634_imp))._method_find_type_alias(_40438_ident,_40450_cpp_linked);
				if ((_40617_ta != nullptr) && (*this)._method_is_accessible_define((*(_40617_ta))._field_public,(*(_40617_ta))._field_token)) {
					return _40617_ta;
				}
			}
			_iter_next_1a86a253d:;
			++it;
			goto _iter_begin_1a86a253d;
		}
		_iter_end_1a86a253d:;
	}
	return nullptr;
}



inline jule::Ptr<_1dd0be530_Struct> _1c2c46634_Sema::_method_find_struct(jule::Str _43134_ident,jule::Bool _43146_cpp_linked) {
	jule::Ptr<_1dd0be530_Struct> _43317_s = _1c2c4607e_find_struct_in_package((*this)._field_files,_43134_ident,_43146_cpp_linked);
	if (_43317_s != nullptr) {
		return _43317_s;
	}
	{
		auto &expr = (*((*this)._field_file))._field_imports;
		auto it = expr.begin();
		_iter_begin_1a86a5684:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1c2c46634_imp = *it;
			{
				if ((!(_1c2c46634_imp_is_lookupable(_1c2c46634_imp,_43134_ident)))) {
					goto _iter_next_1a86a5684;
				}
				_43317_s=(*(_1c2c46634_imp))._method_find_struct(_43134_ident,_43146_cpp_linked);
				if ((_43317_s != nullptr) && (*this)._method_is_accessible_define((*(_43317_s))._field_public,(*(_43317_s))._field_token)) {
					return _43317_s;
				}
			}
			_iter_next_1a86a5684:;
			++it;
			goto _iter_begin_1a86a5684;
		}
		_iter_end_1a86a5684:;
	}
	return nullptr;
}



inline jule::Ptr<_1dded9702_Fn> _1c2c46634_Sema::_method_find_fn(jule::Str _45830_ident,jule::Bool _45842_cpp_linked) {
	jule::Ptr<_1dded9702_Fn> _46017_f = _1c2c4607e_find_fn_in_package((*this)._field_files,_45830_ident,_45842_cpp_linked);
	if (_46017_f != nullptr) {
		return _46017_f;
	}
	{
		auto &expr = (*((*this)._field_file))._field_imports;
		auto it = expr.begin();
		_iter_begin_1a86a8885:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1c2c46634_imp = *it;
			{
				if ((!(_1c2c46634_imp_is_lookupable(_1c2c46634_imp,_45830_ident)))) {
					goto _iter_next_1a86a8885;
				}
				_46017_f=(*(_1c2c46634_imp))._method_find_fn(_45830_ident,_45842_cpp_linked);
				if ((_46017_f != nullptr) && (*this)._method_is_accessible_define((*(_46017_f))._field_public,(*(_46017_f))._field_token)) {
					return _46017_f;
				}
			}
			_iter_next_1a86a8885:;
			++it;
			goto _iter_begin_1a86a8885;
		}
		_iter_end_1a86a8885:;
	}
	return nullptr;
}



inline jule::Ptr<_1de043c01_Trait> _1c2c46634_Sema::_method_find_trait(jule::Str _48533_ident) {
	jule::Ptr<_1de043c01_Trait> _48717_t = _1c2c4607e_find_trait_in_package((*this)._field_files,_48533_ident);
	if (_48717_t != nullptr) {
		return _48717_t;
	}
	{
		auto &expr = (*((*this)._field_file))._field_imports;
		auto it = expr.begin();
		_iter_begin_1a86abdc7:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1c2c46634_imp = *it;
			{
				if ((!(_1c2c46634_imp_is_lookupable(_1c2c46634_imp,_48533_ident)))) {
					goto _iter_next_1a86abdc7;
				}
				_48717_t=(*(_1c2c46634_imp))._method_find_trait(_48533_ident);
				if ((_48717_t != nullptr) && (*this)._method_is_accessible_define((*(_48717_t))._field_public,(*(_48717_t))._field_token)) {
					return _48717_t;
				}
			}
			_iter_next_1a86abdc7:;
			++it;
			goto _iter_begin_1a86abdc7;
		}
		_iter_end_1a86abdc7:;
	}
	return nullptr;
}



inline jule::Ptr<_1de0dbeb9_Enum> _1c2c46634_Sema::_method_find_enum(jule::Str _51232_ident) {
	jule::Ptr<_1de0dbeb9_Enum> _51417_e = _1c2c4607e_find_enum_in_package((*this)._field_files,_51232_ident);
	if (_51417_e != nullptr) {
		return _51417_e;
	}
	{
		auto &expr = (*((*this)._field_file))._field_imports;
		auto it = expr.begin();
		_iter_begin_1a86aeb99:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1c2c46634_imp = *it;
			{
				if ((!(_1c2c46634_imp_is_lookupable(_1c2c46634_imp,_51232_ident)))) {
					goto _iter_next_1a86aeb99;
				}
				_51417_e=(*(_1c2c46634_imp))._method_find_enum(_51232_ident);
				if ((_51417_e != nullptr) && (*this)._method_is_accessible_define((*(_51417_e))._field_public,(*(_51417_e))._field_token)) {
					return _51417_e;
				}
			}
			_iter_next_1a86aeb99:;
			++it;
			goto _iter_begin_1a86aeb99;
		}
		_iter_end_1a86aeb99:;
	}
	return nullptr;
}



inline jule::Bool _1c2c46634_Sema::_method_is_flag(jule::Int _53622_flags) {
	return ((*this)._field_flags & _53622_flags) == _53622_flags;
}



inline void _1c2c46634_Sema::_method_set_current_file(jule::Ptr<_1a943b749_SymbolTable> _53839_f) {
	(*this)._field_file=_53839_f;
}



inline void _1c2c46634_Sema::_method_push_err(_1dd05db0c_Token _54027_token,jule::Str _54041_fmt,jule::Slice<jule::Any> _54054_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.__push(_1c2c46634_compiler_err(_54027_token,true,_54041_fmt,_54054_args));
}



inline void _1c2c46634_Sema::_method_push_suggestion(jule::Str _54534_fmt,jule::Slice<jule::Any> _54547_args) {
	{
		_1c2c46634_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_54534_fmt,_54547_args);
	}
}



inline jule::Bool _1c2c46634_Sema::_method_is_accessible_define(jule::Bool _55035_public,_1dd05db0c_Token _55049_token) {
	return (_55035_public || (_55049_token._field_file == nullptr)) || ((*((*((*this)._field_file))._field_file))._method_dir() == (*(_55049_token._field_file))._method_dir());
}



inline jule::Bool _1c2c46634_Sema::_method_is_duplicated_ident(jule::Uintptr _55734_itself,jule::Str _55751_ident,jule::Bool _55763_cpp_linked) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_1a86b7c90:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> &_1c2c46634_f = *it;
			{
				if ((*(_1c2c46634_f))._method_is_duplicated_ident(_55734_itself,_55751_ident,_55763_cpp_linked)) {
					return true;
				}
				{
					auto &expr = (*(_1c2c46634_f))._field_imports;
					auto it = expr.begin();
					_iter_begin_1a86b94de:;
					if (it != expr.end()) {
						jule::Ptr<_1c2c4607e_ImportInfo> &_1c2c46634_imp = *it;
						{
							{
								auto &expr = (*(_1c2c46634_imp))._field_selected;
								auto it = expr.begin();
								_iter_begin_1a86b9d08:;
								if (it != expr.end()) {
									_1dd05db0c_Token &_1c2c46634_selected = *it;
									{
										if (_1c2c46634_selected._field_kind == _55751_ident) {
											return true;
										}
									}
									_iter_next_1a86b9d08:;
									++it;
									goto _iter_begin_1a86b9d08;
								}
								_iter_end_1a86b9d08:;
							}
						}
						_iter_next_1a86b94de:;
						++it;
						goto _iter_begin_1a86b94de;
					}
					_iter_end_1a86b94de:;
				}
			}
			_iter_next_1a86b7c90:;
			++it;
			goto _iter_begin_1a86b7c90;
		}
		_iter_end_1a86b7c90:;
	}
	return false;
}



inline void _1c2c46634_Sema::_method_check_directives(jule::Slice<jule::Ptr<_1dd05c765_Directive>>& _57441_d,jule::Any _57467_o) {
	_1de353939_DirectiveChecker _57517_dc = _1de353939_DirectiveChecker(this->self,((jule::Ptr<jule::Slice<jule::Ptr<_1dd05c765_Directive>>>)((&(_57441_d)))),_57467_o);
	_57517_dc._method_check();
}



inline jule::Bool _1c2c46634_Sema::_method_check_generic_quantity(jule::Int _58341_required,jule::Int _58356_given,_1dd05db0c_Token _58368_token) {
	jule::Bool _58384_ok = jule::Bool();
	{
		
		if ((_58341_required == 0LL) && (_58356_given > 0LL)) {
			_case_begin_1a86bd823:;
			{
				(*this)._method_push_err(_58368_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_58384_ok = false;
				return _58384_ok;
			}
		}
		else if ((_58341_required > 0LL) && (_58356_given == 0LL)) {
			_case_begin_1a86bd8de:;
			{
				(*this)._method_push_err(_58368_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_58384_ok = false;
				return _58384_ok;
			}
		}
		else if (_58341_required < _58356_given) {
			_case_begin_1a86bd955:;
			{
				(*this)._method_push_err(_58368_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_58384_ok = false;
				return _58384_ok;
			}
		}
		else if (_58341_required > _58356_given) {
			_case_begin_1a86bd603:;
			{
				(*this)._method_push_err(_58368_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_58384_ok = false;
				return _58384_ok;
			}
		}
		else {
			_case_begin_1a86bd180:;
			{
				_58384_ok = true;
				return _58384_ok;
			}
		}
		_match_end_1a86bd0b4:;
	}
}



inline jule::Bool _1c2c46634_Sema::_method_is_duplicated_import_selection(jule::Uintptr _60245_itself,jule::Str _60262_ident) {
	{
		auto &expr = (*((*this)._field_file))._field_imports;
		auto it = expr.begin();
		_iter_begin_1a86c278e:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> &_1c2c46634_imp = *it;
			{
				if (static_cast<jule::Uintptr>(_1c2c46634_imp) == _60245_itself) {
					goto _iter_end_1a86c278e;
				}
				if ((*(_1c2c46634_imp))._method_exist_ident(_60262_ident)) {
					return true;
				}
			}
			_iter_next_1a86c278e:;
			++it;
			goto _iter_begin_1a86c278e;
		}
		_iter_end_1a86c278e:;
	}
	return false;
}



inline jule::Any _1c2c46634_Sema::_method_get_import_def(jule::Str _61729_ident,jule::Ptr<_1c2c4607e_ImportInfo>& _61746_imp) {
	if (_1a634ca26_find_package_builtin_def((*(_61746_imp))._field_link_path,_61729_ident) != jule::Any(nullptr)) {
		return jule::Any(true);
	}
	{
		auto &expr = (*((*(_61746_imp))._field_package))._field_files;
		auto it = expr.begin();
		_iter_begin_1a86c530d:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_f = *it;
			{
				
				jule::Any _62421_def = (*(_1c2c46634_f))._method_def_by_ident(_61729_ident,false);
				if (_62421_def != jule::Any(nullptr)) {
					return _62421_def;
				}
			}
			_iter_next_1a86c530d:;
			++it;
			goto _iter_begin_1a86c530d;
		}
		_iter_end_1a86c530d:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1c2c46634_Sema::_method_check_import_selections(jule::Ptr<_1c2c4607e_ImportInfo>& _63347_imp) {
	jule::Bool _63367_ok = jule::Bool();
	_63367_ok=true;
	{
		auto &expr = (*(_63347_imp))._field_selected;
		auto it = expr.begin();
		_iter_begin_1a86c7761:;
		if (it != expr.end()) {
			_1dd05db0c_Token _1c2c46634_ident = *it;
			{
				if (_1c2c46634_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_1a86c7761;
				}
				if ((*this)._method_is_duplicated_import_selection(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_63347_imp)),_1c2c46634_ident._field_kind)) {
					(*this)._method_push_err(_1c2c46634_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1c2c46634_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_63367_ok=false;
					goto _iter_next_1a86c7761;
				}
				jule::Any _64721_def = (*this)._method_get_import_def(_1c2c46634_ident._field_kind,_63347_imp);
				{
					auto &_match_expr{ _64721_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1a86ca148:;
						{
							goto _iter_next_1a86c7761;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
						_case_begin_1a86ca577:;
						{
							jule::Ptr<_1c3c3d174_Var> _65425_v = _64721_def.operator jule::Ptr<_1c3c3d174_Var>();
							if ((*this)._method_is_accessible_define((*(_65425_v))._field_public,(*(_65425_v))._field_token)) {
								goto _iter_next_1a86c7761;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a5e40a26_TypeAlias>>()) {
						_case_begin_1a86ca5dd:;
						{
							jule::Ptr<_1a5e40a26_TypeAlias> _66025_ta = _64721_def.operator jule::Ptr<_1a5e40a26_TypeAlias>();
							if ((*this)._method_is_accessible_define((*(_66025_ta))._field_public,(*(_66025_ta))._field_token)) {
								goto _iter_next_1a86c7761;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
						_case_begin_1a86cb1e3:;
						{
							jule::Ptr<_1dd0be530_Struct> _66625_strct = _64721_def.operator jule::Ptr<_1dd0be530_Struct>();
							if ((*this)._method_is_accessible_define((*(_66625_strct))._field_public,(*(_66625_strct))._field_token)) {
								goto _iter_next_1a86c7761;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1de043c01_Trait>>()) {
						_case_begin_1a86cb259:;
						{
							jule::Ptr<_1de043c01_Trait> _67225_t = _64721_def.operator jule::Ptr<_1de043c01_Trait>();
							if ((*this)._method_is_accessible_define((*(_67225_t))._field_public,(*(_67225_t))._field_token)) {
								goto _iter_next_1a86c7761;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1de0dbeb9_Enum>>()) {
						_case_begin_1a86cb2c0:;
						{
							jule::Ptr<_1de0dbeb9_Enum> _67825_e = _64721_def.operator jule::Ptr<_1de0dbeb9_Enum>();
							if ((*this)._method_is_accessible_define((*(_67825_e))._field_public,(*(_67825_e))._field_token)) {
								goto _iter_next_1a86c7761;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1dded9702_Fn>>()) {
						_case_begin_1a86cb336:;
						{
							jule::Ptr<_1dded9702_Fn> _68425_f = _64721_def.operator jule::Ptr<_1dded9702_Fn>();
							if ((*this)._method_is_accessible_define((*(_68425_f))._field_public,(*(_68425_f))._field_token)) {
								goto _iter_next_1a86c7761;
							}
						}
					}
					else {
						_case_begin_1a86ca2e1:;
						{
							(*this)._method_push_err(_1c2c46634_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_1c2c46634_ident._field_kind)}));
							_63367_ok=false;
							goto _iter_next_1a86c7761;
						}
					}
					_match_end_1a86ca28b:;
				}
				(*this)._method_push_err(_1c2c46634_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_1c2c46634_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_63367_ok=false;
			}
			_iter_next_1a86c7761:;
			++it;
			goto _iter_begin_1a86c7761;
		}
		_iter_end_1a86c7761:;
	}
	return _63367_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_is_use_alias_duplication(jule::Ptr<_1c2c4607e_ImportInfo>& _70244_imp) {
	if ((*(_70244_imp))._field_alias.len() == 0LL) {
		return false;
	}
	{
		auto &expr = (*((*this)._field_file))._field_imports;
		auto it = expr.begin();
		_iter_begin_1a86d431c:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1c2c46634_imp2 = *it;
			{
				if (_1c2c46634_imp2 == _70244_imp) {
					goto _iter_end_1a86d431c;
				}
				if ((*(_1c2c46634_imp2))._field_alias == (*(_70244_imp))._field_alias) {
					return true;
				}
				if (((*(_1c2c46634_imp2))._field_ident == (*(_1c2c46634_imp2))._field_link_path) && ((*(_1c2c46634_imp2))._field_ident == (*(_70244_imp))._field_alias)) {
					return true;
				}
			}
			_iter_next_1a86d431c:;
			++it;
			goto _iter_begin_1a86d431c;
		}
		_iter_end_1a86d431c:;
	}
	return false;
}



inline jule::Bool _1c2c46634_Sema::_method_check_import(jule::Ptr<_1c2c4607e_ImportInfo>& _72336_imp) {
	if ((*(_72336_imp))._field_cpp_linked || ((*((*(_72336_imp))._field_package))._field_files.len() == 0LL)) {
		return true;
	}
	if ((*this)._method_is_use_alias_duplication(_72336_imp)) {
		(*this)._method_push_err((*(_72336_imp))._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>({jule::Any((*(_72336_imp))._field_alias)}));
		(*this)._method_push_suggestion(jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	}
	if ((!((*(_72336_imp))._field_duplicate))) {
		jule::Ptr<_1c2c46634_Sema> _73421_sema = jule::new_struct_ptr<_1c2c46634_Sema>(new( std::nothrow ) _1c2c46634_Sema(jule::Slice<_1db678789_Log>(),jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>(),jule::Ptr<_1a943b749_SymbolTable>(),(*this)._field_flags));
		(*(_73421_sema))._method_check((*((*(_72336_imp))._field_package))._field_files);
		if ((*(_73421_sema))._field_errors.len() != 0LL) {
			(*this)._field_errors=jule::append((*this)._field_errors,(*(_73421_sema))._field_errors);
			(*(_73421_sema))._field_errors=nullptr;
			return false;
		}
	}
	return (*this)._method_check_import_selections(_72336_imp);
}



inline void _1c2c46634_Sema::_method_check_imports(void) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_1a86db9ea:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_file = *it;
			{
				(*this)._method_set_current_file(_1c2c46634_file);
				{
					auto &expr = (*(_1c2c46634_file))._field_imports;
					auto it = expr.begin();
					_iter_begin_1a86dc80e:;
					if (it != expr.end()) {
						jule::Ptr<_1c2c4607e_ImportInfo> _1c2c46634_imp = *it;
						{
							jule::Bool _75221_ok = (*this)._method_check_import(_1c2c46634_imp);
							if ((!(_75221_ok))) {
								(*this)._method_push_err((*(_1c2c46634_imp))._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any((*(_1c2c46634_imp))._field_link_path)}));
								return;
							}
						}
						_iter_next_1a86dc80e:;
						++it;
						goto _iter_begin_1a86dc80e;
					}
					_iter_end_1a86dc80e:;
				}
			}
			_iter_next_1a86db9ea:;
			++it;
			goto _iter_begin_1a86db9ea;
		}
		_iter_end_1a86db9ea:;
	}
}



inline void _1c2c46634_Sema::_method_impl_file_impls(void) {
	{
		auto &expr = (*((*(this->self))._field_file))._field_impls;
		auto it = expr.begin();
		_iter_begin_1a86de547:;
		if (it != expr.end()) {
			jule::Ptr<_1de0e21cd_Impl> _1c2c46634_imp = *it;
			{
				(*(this->self))._method_impl_impl(_1c2c46634_imp);
			}
			_iter_next_1a86de547:;
			++it;
			goto _iter_begin_1a86de547;
		}
		_iter_end_1a86de547:;
	}
}



inline void _1c2c46634_Sema::_method_impl_impls(void) {
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a86e09dd:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_file = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_file);
				(*(this->self))._method_impl_file_impls();
			}
			_iter_next_1a86e09dd:;
			++it;
			goto _iter_begin_1a86e09dd;
		}
		_iter_end_1a86e09dd:;
	}
}



inline void _1c2c46634_Sema::_method_check_enums(void) {
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a86e1e95:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_file = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_file);
				(*(this->self))._method_check_enum_decls();
			}
			_iter_next_1a86e1e95:;
			++it;
			goto _iter_begin_1a86e1e95;
		}
		_iter_end_1a86e1e95:;
	}
}



inline jule::Bool _1c2c46634_Sema::_method_check_type_with_refers(jule::Ptr<_1a5e40a26_TypeSymbol>& _78547_t,jule::Trait<_1a6336746_Lookup> _78613_l,jule::Ptr<_1a5e40a26_Referencer> _78628_referencer) {
	jule::Bool _78655_ok = jule::Bool();
	if ((*(_78547_t))._method_checked()) {
		_78655_ok = true;
		return _78655_ok;
	}
	_1a5e40a26_TypeChecker _79017_tc = _1a5e40a26_TypeChecker(this->self,_78613_l,_78628_referencer,_1dd05db0c_Token(),jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeAlias>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool());
	if ((_78628_referencer != nullptr) && ((*(_78628_referencer))._field_refs != nullptr)) {
		_79017_tc._field_owner_alias=(*(_78628_referencer))._field_owner.operator jule::Ptr<_1a5e40a26_TypeAlias>();
	}
	_79017_tc._method_check(_78547_t);
	_78655_ok = (*(_78547_t))._method_checked();
	return _78655_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_type(jule::Ptr<_1a5e40a26_TypeSymbol>& _80935_t,jule::Trait<_1a6336746_Lookup> _80955_l) {
	return (*(this->self))._method_check_type_with_refers(_80935_t,_80955_l,nullptr);
}



inline jule::Ptr<_1a5e40a26_TypeKind> _1c2c46634_Sema::_method_build_type_with_generics(jule::Ptr<_1dd05c765_TypeDecl>& _81549_t,jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> _81613_generics) {
	jule::Ptr<_1a5e40a26_TypeChecker> _81717_tc = jule::new_struct<_1a5e40a26_TypeChecker>(new( std::nothrow ) _1a5e40a26_TypeChecker(this->self,this->self,jule::Ptr<_1a5e40a26_Referencer>(),_1dd05db0c_Token(),jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>(),_81613_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeAlias>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool()));
	return (*(_81717_tc))._method_check_decl(_81549_t);
}



inline jule::Ptr<_1a5e40a26_TypeKind> _1c2c46634_Sema::_method_build_type(jule::Ptr<_1dd05c765_TypeDecl>& _82635_t) {
	return (*(this->self))._method_build_type_with_generics(_82635_t,nullptr);
}



inline jule::Ptr<_1a5e40a26_TypeKind> _1c2c46634_Sema::_method_select_type(jule::Ptr<_1dd05c765_TypeDecl>& _83136_t) {
	jule::Ptr<_1a5e40a26_TypeChecker> _83217_tc = jule::new_struct<_1a5e40a26_TypeChecker>(new( std::nothrow ) _1a5e40a26_TypeChecker(this->self,this->self,jule::Ptr<_1a5e40a26_Referencer>(),_1dd05db0c_Token(),jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool(),jule::Bool(),true,jule::Ptr<_1a5e40a26_TypeAlias>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool()));
	return (*(_83217_tc))._method_check_decl(_83136_t);
}



inline jule::Ptr<_1a94c333b_Eval> _1c2c46634_Sema::_method_evalpd(jule::Trait<_1a6336746_Lookup> _84230_l,jule::Ptr<_1a5e40a26_TypeKind> _84245_p,jule::Ptr<_1c3c3d174_Var> _84263_owner) {
	jule::Ptr<_1a94c333b_Eval> _84317_e = jule::new_struct_ptr<_1a94c333b_Eval>(new( std::nothrow ) _1a94c333b_Eval(this->self,_84230_l,jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_84263_owner,jule::Ptr<_1dd0be530_FieldIns>()));
	{
		auto &_match_expr{ _84230_l };
		
		if (_match_expr.type_is<jule::Ptr<_1de0e938e_ScopeChecker>>()) {
			_case_begin_1a86ee579:;
			{
				(*(_84317_e))._field_unsafety=(*(_84230_l.operator jule::Ptr<_1de0e938e_ScopeChecker>()))._method_is_unsafe();
			}
		}
		_match_end_1a86ee524:;
	}
	(*(_84317_e))._field_prefix=_84245_p;
	return _84317_e;
}



inline jule::Ptr<_1a94c333b_Eval> _1c2c46634_Sema::_method_evalp(jule::Trait<_1a6336746_Lookup> _86029_l,jule::Ptr<_1a5e40a26_TypeKind> _86044_p) {
	return (*(this->self))._method_evalpd(_86029_l,_86044_p,nullptr);
}



inline jule::Ptr<_1a94c333b_Eval> _1c2c46634_Sema::_method_eval(jule::Trait<_1a6336746_Lookup> _86528_l) {
	return (*(this->self))._method_evalp(_86528_l,nullptr);
}



inline void _1c2c46634_Sema::_method_check_assign_type(jule::Bool _86937_dest_is_ref,jule::Ptr<_1a5e40a26_TypeKind>& _86961_dest,jule::Ptr<_1a94c333b_Data>& _87014_d,_1dd05db0c_Token _87028_error_token) {
	if ((*(_87014_d))._field_decl) {
		(*(this->self))._method_push_err(_87028_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	if (_86937_dest_is_ref) {
		if ((!((*(_86961_dest))._method_equals((*(_87014_d))._field_kind)))) {
			(*(this->self))._method_push_err(_87028_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any((*(_86961_dest))._method_to_str()),jule::Any((*((*(_87014_d))._field_kind))._method_to_str())}));
		}
	} else {
		jule::Ptr<_1a93c7a48_AssignTypeChecker> _88421_atc = jule::new_struct<_1a93c7a48_AssignTypeChecker>(new( std::nothrow ) _1a93c7a48_AssignTypeChecker(this->self,_86961_dest,_87014_d,_87028_error_token));
		jule::Bool _89017_ok = (*(_88421_atc))._method_check();
		if ((!(_89017_ok))) {
			return;
		}
	}
	if ((!((*(_87014_d))._method_is_const())) || ((*(_86961_dest))._method_prim() == nullptr)) {
		return;
	}
	jule::Str _90017_kind = (*((*(_86961_dest))._method_prim()))._field_kind;
	{
		
		if (_1a6539949_is_sig_int(_90017_kind)) {
			_case_begin_1a8708176:;
			{
				(*((*(_87014_d))._field_constant))._method_set_i64(static_cast<jule::I64>((*((*(_87014_d))._field_constant))._method_as_i64()));
			}
		}
		else if (_1a6539949_is_unsig_int(_90017_kind)) {
			_case_begin_1a87081dc:;
			{
				(*((*(_87014_d))._field_constant))._method_set_u64(static_cast<jule::U64>((*((*(_87014_d))._field_constant))._method_as_u64()));
			}
		}
		else if (_1a6539949_is_float(_90017_kind)) {
			_case_begin_1a8708253:;
			{
				(*((*(_87014_d))._field_constant))._method_set_f64(static_cast<jule::F64>((*((*(_87014_d))._field_constant))._method_as_f64()));
			}
		}
		_match_end_1a8708088:;
	}
}



inline jule::Bool _1c2c46634_Sema::_method_check_type_compatibility(jule::Ptr<_1a5e40a26_TypeKind>& _90949_dest,jule::Ptr<_1a5e40a26_TypeKind>& _91014_src,_1dd05db0c_Token& _91035_error_token) {
	if (_91014_src == nullptr) {
		(*(this->self))._method_push_err(_91035_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any((*(_90949_dest))._method_to_str()),jule::Any((*(_91014_src))._method_to_str())}));
		return false;
	}
	if ((*(_91014_src))._method_tup() != nullptr) {
		(*(this->self))._method_push_err(_91035_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any((*(_90949_dest))._method_to_str()),jule::Any((*(_91014_src))._method_to_str())}));
		return false;
	}
	_1a93c7a48_TypeCompatibilityChecker _92417_tcc = _1a93c7a48_TypeCompatibilityChecker(this->self,_90949_dest,_91014_src,_91035_error_token);
	if (_92417_tcc._method_check()) {
		return true;
	}
	(*(this->self))._method_push_err(_91035_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any((*(_90949_dest))._method_to_str()),jule::Any((*(_91014_src))._method_to_str())}));
	return false;
}



inline jule::Ptr<_1a5e40a26_TypeKind> _1c2c46634_Sema::_method_build_non_generic_type_kind(jule::Ptr<_1dd05c765_TypeDecl>& _94552_ast,jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>& _94614_generics) {
	jule::Ptr<_1a5e40a26_TypeChecker> _94717_tc = jule::new_struct<_1a5e40a26_TypeChecker>(new( std::nothrow ) _1a5e40a26_TypeChecker(this->self,this->self,jule::Ptr<_1a5e40a26_Referencer>(),_1dd05db0c_Token(),_94614_generics,jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeAlias>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool()));
	return (*(_94717_tc))._method_check_decl(_94552_ast);
}



inline void _1c2c46634_Sema::_method_build_fn_non_generic_type_kinds(jule::Ptr<_1dded9702_FnIns>& _95556_f) {
	jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> _95617_generics = nullptr;
	if ((*((*(_95556_f))._field_decl))._method_is_method()) {
		_95617_generics=jule::append((*((*(_95556_f))._field_decl))._field_generics,(*((*((*(_95556_f))._field_decl))._field_owner))._field_generics);
	} else {
		_95617_generics=(*((*(_95556_f))._field_decl))._field_generics;
	}
	{
		auto &expr = (*(_95556_f))._field_params;
		auto it = expr.begin();
		_iter_begin_1a8713cb9:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_ParamIns> _1c2c46634_p = *it;
			{
				if ((!((*((*(_1c2c46634_p))._field_decl))._method_is_self()))) {
					(*(_1c2c46634_p))._field_kind=(*(this->self))._method_build_non_generic_type_kind((*((*((*(_1c2c46634_p))._field_decl))._field_kind))._field_decl,_95617_generics);
				}
			}
			_iter_next_1a8713cb9:;
			++it;
			goto _iter_begin_1a8713cb9;
		}
		_iter_end_1a8713cb9:;
	}
	if ((!((*((*(_95556_f))._field_decl))._method_is_void()))) {
		(*(_95556_f))._field_result=(*(this->self))._method_build_non_generic_type_kind((*((*((*((*(_95556_f))._field_decl))._field_result))._field_kind))._field_decl,_95617_generics);
	}
}



inline jule::Ptr<_1dded9702_FnIns> _1c2c46634_Sema::_method_get_trait_check_fn_kind(jule::Ptr<_1dded9702_Fn>& _97348_f) {
	jule::Ptr<_1dded9702_FnIns> _97417_ins = (*(_97348_f))._method_instance_force();
	(*(this->self))._method_build_fn_non_generic_type_kinds(_97417_ins);
	return _97417_ins;
}



inline jule::Bool _1c2c46634_Sema::_method_reload_fn_ins_types(jule::Ptr<_1dded9702_FnIns>& _97944_f) {
	jule::Bool _97957_ok = jule::Bool();
	if ((*(_97944_f))._method_is_builtin() || (*(_97944_f))._method_is_anon()) {
		_97957_ok = true;
		return _97957_ok;
	}
	jule::Ptr<_1c2c46634_Sema> _98417_sema = (*((*(_97944_f))._field_decl))._field_sema;
	jule::Ptr<_1a943b749_SymbolTable> _98617_old = (*((*((*(_97944_f))._field_decl))._field_sema))._field_file;
	__JULE_DEFER({
		(*((*((*(_97944_f))._field_decl))._field_sema))._method_set_current_file(_98617_old);
	});
	jule::Ptr<_1a943b749_SymbolTable> _98817_file = _1c2c46634_find_file((*((*((*(_97944_f))._field_decl))._field_sema))._field_files,(*((*(_97944_f))._field_decl))._field_token._field_file);
	if (_98817_file != nullptr) {
		(*((*((*(_97944_f))._field_decl))._field_sema))._method_set_current_file(_98817_file);
	}
	jule::Int _99317_size = (*(_97944_f))._field_generics.len();
	if (((*(_97944_f))._field_decl != nullptr) && ((*((*(_97944_f))._field_decl))._field_owner != nullptr)) {
		_99317_size+=static_cast<jule::Int>((*((*((*(_97944_f))._field_decl))._field_owner))._field_generics.len());
	}
	jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> _99817_generics = jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>::alloc(0LL,_99317_size);
	{
		auto &expr = (*(_97944_f))._field_generics;
		auto it = expr.begin();
		_iter_begin_1a8720820:;
		if (it != expr.end()) {
			jule::Int _1c2c46634_i = it - expr.begin();
			jule::Ptr<_1a5e40a26_TypeKind> _1c2c46634_g = *it;
			{
				_99817_generics = jule::alloc_for_append(_99817_generics,1);_99817_generics.__push(jule::new_struct<_1a5e40a26_TypeAlias>(new( std::nothrow ) _1a5e40a26_TypeAlias(jule::Ptr<_1dd05c765_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1dd05db0c_Token(),(*((*((*(_97944_f))._field_decl))._field_generics[_1c2c46634_i]))._field_ident,jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),_1c2c46634_g)),jule::Str(),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>())));
			}
			_iter_next_1a8720820:;
			++it;
			_1c2c46634_i++;
			goto _iter_begin_1a8720820;
		}
		_iter_end_1a8720820:;
	}
	if (((*(_97944_f))._field_decl != nullptr) && ((*((*(_97944_f))._field_decl))._field_owner != nullptr)) {
		jule::Ptr<_1dd0be530_StructIns> _101021_owner = (*(_97944_f))._field_owner;
		{
			auto &expr = (*(_101021_owner))._field_generics;
			auto it = expr.begin();
			_iter_begin_1a8721aa7:;
			if (it != expr.end()) {
				jule::Int _1c2c46634_i = it - expr.begin();
				jule::Ptr<_1a5e40a26_TypeKind> _1c2c46634_g = *it;
				{
					_99817_generics = jule::alloc_for_append(_99817_generics,1);_99817_generics.__push(jule::new_struct<_1a5e40a26_TypeAlias>(new( std::nothrow ) _1a5e40a26_TypeAlias(jule::Ptr<_1dd05c765_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1dd05db0c_Token(),(*((*((*(_101021_owner))._field_decl))._field_generics[_1c2c46634_i]))._field_ident,jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),_1c2c46634_g)),jule::Str(),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>())));
				}
				_iter_next_1a8721aa7:;
				++it;
				_1c2c46634_i++;
				goto _iter_begin_1a8721aa7;
			}
			_iter_end_1a8721aa7:;
		}
	}
	_97957_ok=true;
	{
		auto &expr = (*(_97944_f))._field_params;
		auto it = expr.begin();
		_iter_begin_1a87238bc:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_ParamIns> _1c2c46634_p = *it;
			{
				if ((!((*((*(_1c2c46634_p))._field_decl))._method_is_self()))) {
					(*(_1c2c46634_p))._field_kind=(*(_98417_sema))._method_build_type_with_generics((*((*((*(_1c2c46634_p))._field_decl))._field_kind))._field_decl,_99817_generics);
					if ((*(_1c2c46634_p))._field_kind != nullptr) {
						(*((*(_1c2c46634_p))._field_kind))._field_variadic=(*((*(_1c2c46634_p))._field_decl))._field_variadic;
						if ((*((*(_1c2c46634_p))._field_decl))._field_reference && (!(_1a5e40a26_is_valid_for_ref((*(_1c2c46634_p))._field_kind)))) {
							(*(this->self))._method_push_err((*((*(_1c2c46634_p))._field_decl))._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any((*((*(_1c2c46634_p))._field_kind))._method_to_str())}));
						}
					} else {
						_97957_ok=false;
					}
				}
			}
			_iter_next_1a87238bc:;
			++it;
			goto _iter_begin_1a87238bc;
		}
		_iter_end_1a87238bc:;
	}
	if ((!((*((*(_97944_f))._field_decl))._method_is_void()))) {
		(*(_97944_f))._field_result=(*(_98417_sema))._method_build_type_with_generics((*((*((*((*(_97944_f))._field_decl))._field_result))._field_kind))._field_decl,_99817_generics);
		_97957_ok=((*(_97944_f))._field_result != nullptr) && _97957_ok;
	}
	if (_98417_sema != this->self) {
		(*(this->self))._field_errors=jule::append((*(this->self))._field_errors,(*(_98417_sema))._field_errors);
		(*(_98417_sema))._field_errors=nullptr;
	}
	return _97957_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_ref_validity_for_init_expr(jule::Bool _104952_left_mut,jule::Ptr<_1a94c333b_Data>& _104973_d,_1dd05db0c_Token& _104988_error_token) {
	{
		auto &_match_expr{ (*(_104973_d))._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
			_case_begin_1a872ce8c:;
			{
				goto _match_end_1a872c0e0;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_TraitSubIdentExprModel>>()) {
			_case_begin_1a872d003:;
			{
				jule::Ptr<_1ddb3c047_TraitSubIdentExprModel> _105421_model = (*(_104973_d))._field_model.operator jule::Ptr<_1ddb3c047_TraitSubIdentExprModel>();
				if ((!(_1c2c46634_is_valid_model_for_ref((*(_105421_model))._field_expr)))) {
					(*(this->self))._method_push_err(_104988_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any((*(_105421_model))._field_ident)}));
					return false;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_StructSubIdentExprModel>>()) {
			_case_begin_1a872c2dd:;
			{
				jule::Ptr<_1ddb3c047_StructSubIdentExprModel> _106021_model = (*(_104973_d))._field_model.operator jule::Ptr<_1ddb3c047_StructSubIdentExprModel>();
				if ((!(_1c2c46634_is_valid_model_for_ref((*(_106021_model))._field_expr)))) {
					(*(this->self))._method_push_err(_104988_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any((*((*((*(_106021_model))._field_field))._field_decl))._field_ident)}));
					return false;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1ddb3c047_CommonSubIdentExprModel>>()) {
			_case_begin_1a872c354:;
			{
				(*(this->self))._method_push_err(_104988_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_UnaryExprModel>>()) {
			_case_begin_1a872c3ba:;
			{
				jule::Ptr<_1ddb3c047_UnaryExprModel> _107021_unary = (*(_104973_d))._field_model.operator jule::Ptr<_1ddb3c047_UnaryExprModel>();
				if ((*(_107021_unary))._field_op._field_kind == jule::Str("*", 1)) {
					if ((!(_1c2c46634_is_valid_model_for_ref((*(_104973_d))._field_model)))) {
						(*(this->self))._method_push_err(_104988_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					}
					goto _match_end_1a872c0e0;
				}
				goto _case_begin_1a872c189;
			}
		}
		else {
			_case_begin_1a872c189:;
			{
				(*(this->self))._method_push_err(_104988_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1a872c0e0:;
	}
	if (_104952_left_mut && (!((*(_104973_d))._field_mutable))) {
		(*(this->self))._method_push_err(_104988_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	}
	return true;
}



inline jule::Bool _1c2c46634_Sema::_method_check_validity_for_init_expr(jule::Bool _109148_left_mut,jule::Bool _109164_left_ref,jule::Ptr<_1a5e40a26_TypeKind>& _109210_left_kind,jule::Ptr<_1a94c333b_Data>& _109237_d,_1dd05db0c_Token& _109252_error_token) {
	if ((_109148_left_mut && (!((*(_109237_d))._field_mutable))) && (*((*(_109237_d))._field_kind))._method_mutable()) {
		(*(this->self))._method_push_err(_109252_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>());
		return false;
	}
	if (_109164_left_ref) {
		if ((!((*(this->self))._method_check_ref_validity_for_init_expr(_109148_left_mut,_109237_d,_109252_error_token)))) {
			return false;
		}
	}
	jule::Ptr<_1a93c7a48_AssignTypeChecker> _110317_atc = jule::new_struct<_1a93c7a48_AssignTypeChecker>(new( std::nothrow ) _1a93c7a48_AssignTypeChecker(this->self,jule::Ptr<_1a5e40a26_TypeKind>(),_109237_d,_109252_error_token));
	return (*(_110317_atc))._method_check_validity();
}



inline jule::Bool _1c2c46634_Sema::_method_check_type_alias_decl_kind(jule::Ptr<_1a5e40a26_TypeAlias>& _111151_ta,jule::Trait<_1a6336746_Lookup> _111171_l) {
	jule::Bool _111184_ok = jule::Bool();
	jule::Ptr<_1a943b749_SymbolTable> _111217_old = (*(this->self))._field_file;
	__JULE_DEFER({
		(*(this->self))._method_set_current_file(_111217_old);
	});
	jule::Ptr<_1a943b749_SymbolTable> _111617_file = _1c2c46634_find_file((*(this->self))._field_files,(*(_111151_ta))._field_token._field_file);
	if (_111617_file != nullptr) {
		(*(this->self))._method_set_current_file(_111617_file);
	}
	_111184_ok=(*(this->self))._method_check_type_with_refers((*(_111151_ta))._field_kind,_111171_l,jule::new_struct<_1a5e40a26_Referencer>(new( std::nothrow ) _1a5e40a26_Referencer((*(_111151_ta))._field_ident,jule::Any(_111151_ta),(&((*(_111151_ta))._field_refers)))));
	if ((_111184_ok && ((*((*((*(_111151_ta))._field_kind))._field_kind))._method_arr() != nullptr)) && (*((*((*((*(_111151_ta))._field_kind))._field_kind))._method_arr()))._field_auto) {
		(*(this->self))._method_push_err((*((*((*(_111151_ta))._field_kind))._field_decl))._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_111184_ok=false;
	}
	return _111184_ok;
}



inline void _1c2c46634_Sema::_method_check_type_alias_decl(jule::Ptr<_1a5e40a26_TypeAlias>& _113246_ta,jule::Trait<_1a6336746_Lookup> _113266_l) {
	if (_1dd05db0c_is_ignore_ident((*(_113246_ta))._field_ident)) {
		(*(this->self))._method_push_err((*(_113246_ta))._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	(*(this->self))._method_check_type_alias_decl_kind(_113246_ta,_113266_l);
}



inline void _1c2c46634_Sema::_method_check_type_alias_decl_dup(jule::Ptr<_1a5e40a26_TypeAlias>& _114050_ta) {
	if ((*(this->self))._method_is_duplicated_ident(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_114050_ta)),(*(_114050_ta))._field_ident,(*(_114050_ta))._field_cpp_linked)) {
		(*(this->self))._method_push_err((*(_114050_ta))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_114050_ta))._field_ident)}));
		(*(this->self))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	(*(this->self))._method_check_type_alias_decl_kind(_114050_ta,this->self);
}



inline jule::Bool _1c2c46634_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _114944_ok = jule::Bool();
	{
		auto &expr = (*((*(this->self))._field_file))._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a87451e6:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e40a26_TypeAlias> _1c2c46634_ta = *it;
			{
				(*(this->self))._method_check_type_alias_decl_dup(_1c2c46634_ta);
				if ((*(this->self))._field_errors.len() > 0LL) {
					_114944_ok = false;
					return _114944_ok;
				}
			}
			_iter_next_1a87451e6:;
			++it;
			goto _iter_begin_1a87451e6;
		}
		_iter_end_1a87451e6:;
	}
	_114944_ok = true;
	return _114944_ok;
}



inline void _1c2c46634_Sema::_method_check_enum_items_dup(jule::Ptr<_1de0dbeb9_Enum> _116139_e) {
	{
		auto &expr = (*(_116139_e))._field_items;
		auto it = expr.begin();
		_iter_begin_1a8746da7:;
		if (it != expr.end()) {
			jule::Ptr<_1de0dbeb9_EnumItem> &_1c2c46634_item = *it;
			{
				if (_1dd05db0c_is_ignore_ident((*(_1c2c46634_item))._field_ident)) {
					(*this)._method_push_err((*(_1c2c46634_item))._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = (*(_116139_e))._field_items;
						auto it = expr.begin();
						_iter_begin_1a874876b:;
						if (it != expr.end()) {
							jule::Ptr<_1de0dbeb9_EnumItem> &_1c2c46634_citem = *it;
							{
								if (_1c2c46634_item == _1c2c46634_citem) {
									goto _iter_end_1a874876b;
								} else if ((*(_1c2c46634_item))._field_ident == (*(_1c2c46634_citem))._field_ident) {
									(*this)._method_push_err((*(_1c2c46634_item))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_1c2c46634_item))._field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1a874876b;
								}
							}
							_iter_next_1a874876b:;
							++it;
							goto _iter_begin_1a874876b;
						}
						_iter_end_1a874876b:;
					}
				}
			}
			_iter_next_1a8746da7:;
			++it;
			goto _iter_begin_1a8746da7;
		}
		_iter_end_1a8746da7:;
	}
}



inline void _1c2c46634_Sema::_method_check_enum_items_str(jule::Ptr<_1de0dbeb9_Enum>& _117945_e) {
	{
		auto &expr = (*(_117945_e))._field_items;
		auto it = expr.begin();
		_iter_begin_1a874a8d3:;
		if (it != expr.end()) {
			jule::Ptr<_1de0dbeb9_EnumItem> _1c2c46634_item = *it;
			{
				if ((*(_1c2c46634_item))._method_auto_expr()) {
					(*(_1c2c46634_item))._field_value=jule::new_struct<_1a94c333b_Value>(new( std::nothrow ) _1a94c333b_Value(jule::Ptr<_1dd05c765_Expr>(),jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a64669ca_Const::_static_method_new_str((*(_1c2c46634_item))._field_ident)))));
					(*((*((*(_1c2c46634_item))._field_value))._field_data))._field_model=jule::Any((*((*((*(_1c2c46634_item))._field_value))._field_data))._field_constant);
				} else {
					jule::Ptr<_1a94c333b_Data> _118925_d = (*((*(this->self))._method_eval(this->self)))._method_eval_expr((*((*(_1c2c46634_item))._field_value))._field_expr);
					if (_118925_d == nullptr) {
						goto _iter_next_1a874a8d3;
					}
					if ((!((*(_118925_d))._method_is_const()))) {
						(*(this->self))._method_push_err((*((*((*(_1c2c46634_item))._field_value))._field_expr))._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					(*(this->self))._method_check_assign_type(false,(*((*(_117945_e))._field_kind))._field_kind,_118925_d,(*(_1c2c46634_item))._field_token);
					(*((*(_1c2c46634_item))._field_value))._field_data=_118925_d;
				}
			}
			_iter_next_1a874a8d3:;
			++it;
			goto _iter_begin_1a874a8d3;
		}
		_iter_end_1a874a8d3:;
	}
}



inline void _1c2c46634_Sema::_method_check_enum_items_int(jule::Ptr<_1de0dbeb9_Enum>& _120445_e) {
	jule::Ptr<_1a5e40a26_Prim> _120513_prim = (*((*((*(_120445_e))._field_kind))._field_kind))._method_prim();
	jule::U64 _120617_max = static_cast<jule::U64>(_1a646eebc_max((*(_120513_prim))._method_to_str()));
	{
		auto &expr = (*(_120445_e))._field_items;
		auto it = expr.begin();
		_iter_begin_1a8752ba4:;
		if (it != expr.end()) {
			jule::Int _1c2c46634_i = it - expr.begin();
			jule::Ptr<_1de0dbeb9_EnumItem> _1c2c46634_item = *it;
			{
				if (_120617_max == 0LLU) {
					(*(this->self))._method_push_err((*(_1c2c46634_item))._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_120617_max)--;
				}
				if ((*(_1c2c46634_item))._method_auto_expr()) {
					(*(_1c2c46634_item))._field_value=jule::new_struct<_1a94c333b_Value>(new( std::nothrow ) _1a94c333b_Value(jule::Ptr<_1dd05c765_Expr>(),jule::new_ptr<_1a94c333b_Data>()));
					{
						
						if (_1a6539949_is_sig_int((*(_120513_prim))._method_to_str())) {
							_case_begin_1a87554c0:;
							{
								(*((*((*(_1c2c46634_item))._field_value))._field_data))._field_constant=_1a64669ca_Const::_static_method_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_120617_max - static_cast<jule::U64>(_120617_max - static_cast<jule::U64>(static_cast<jule::U64>(_1c2c46634_i))))));
							}
						}
						else {
							_case_begin_1a875503b:;
							{
								(*((*((*(_1c2c46634_item))._field_value))._field_data))._field_constant=_1a64669ca_Const::_static_method_new_u64(static_cast<jule::U64>(_120617_max - static_cast<jule::U64>(_120617_max - static_cast<jule::U64>(static_cast<jule::U64>(_1c2c46634_i)))));
							}
						}
						_match_end_1a8754ed6:;
					}
					(*((*((*(_1c2c46634_item))._field_value))._field_data))._field_model=jule::Any((*((*((*(_1c2c46634_item))._field_value))._field_data))._field_constant);
				} else {
					jule::Ptr<_1a94c333b_Data> _122525_d = (*((*(this->self))._method_eval(this->self)))._method_eval_expr((*((*(_1c2c46634_item))._field_value))._field_expr);
					if (_122525_d == nullptr) {
						goto _iter_next_1a8752ba4;
					}
					if ((!((*(_122525_d))._method_is_const()))) {
						(*(this->self))._method_push_err((*((*((*(_1c2c46634_item))._field_value))._field_expr))._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					(*(this->self))._method_check_assign_type(false,(*((*(_120445_e))._field_kind))._field_kind,_122525_d,(*(_1c2c46634_item))._field_token);
					(*((*(_1c2c46634_item))._field_value))._field_data=_122525_d;
				}
			}
			_iter_next_1a8752ba4:;
			++it;
			_1c2c46634_i++;
			goto _iter_begin_1a8752ba4;
		}
		_iter_end_1a8752ba4:;
	}
}



inline void _1c2c46634_Sema::_method_check_enum_decl(jule::Ptr<_1de0dbeb9_Enum>& _124040_e) {
	if (_1dd05db0c_is_ignore_ident((*(_124040_e))._field_ident)) {
		(*(this->self))._method_push_err((*(_124040_e))._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if ((*(this->self))._method_is_duplicated_ident(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_124040_e)),(*(_124040_e))._field_ident,false)) {
		(*(this->self))._method_push_err((*(_124040_e))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_124040_e))._field_ident)}));
		(*(this->self))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((*(_124040_e))._field_items.len() == 0LL) {
		(*(this->self))._method_push_err((*(_124040_e))._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>({jule::Any((*(_124040_e))._field_ident)}));
	}
	(*(this->self))._method_check_enum_items_dup(_124040_e);
	if ((*(_124040_e))._field_kind != nullptr) {
		if ((!((*(this->self))._method_check_type((*(_124040_e))._field_kind,this->self)))) {
			return;
		}
	} else {
		(*(_124040_e))._field_kind=jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ptr<_1a5e40a26_Prim> _126717_t = (*((*((*(_124040_e))._field_kind))._field_kind))._method_prim();
	if (_126717_t == nullptr) {
		(*(this->self))._method_push_err((*(_124040_e))._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;
	}
	{
		
		if ((*(_126717_t))._method_is_str()) {
			_case_begin_1a8763d6e:;
			{
				(*(this->self))._method_check_enum_items_str(_124040_e);
			}
		}
		else if (_1a6539949_is_int((*(_126717_t))._method_to_str())) {
			_case_begin_1a8763dd5:;
			{
				(*(this->self))._method_check_enum_items_int(_124040_e);
			}
		}
		else {
			_case_begin_1a8763038:;
			{
				(*(this->self))._method_push_err((*(_124040_e))._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8762ea0:;
	}
}



inline jule::Bool _1c2c46634_Sema::_method_check_enum_decls(void) {
	jule::Bool _128738_ok = jule::Bool();
	{
		auto &expr = (*((*(this->self))._field_file))._field_enums;
		auto it = expr.begin();
		_iter_begin_1a8766888:;
		if (it != expr.end()) {
			jule::Ptr<_1de0dbeb9_Enum> _1c2c46634_e = *it;
			{
				(*(this->self))._method_check_enum_decl(_1c2c46634_e);
				if ((*(this->self))._field_errors.len() > 0LL) {
					_128738_ok = false;
					return _128738_ok;
				}
			}
			_iter_next_1a8766888:;
			++it;
			goto _iter_begin_1a8766888;
		}
		_iter_end_1a8766888:;
	}
	_128738_ok = true;
	return _128738_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_decl_generics(jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>& _129939_generics) {
	jule::Bool _129972_ok = jule::Bool();
	_129972_ok=true;
	{
		auto &expr = _129939_generics;
		auto it = expr.begin();
		_iter_begin_1a8768846:;
		if (it != expr.end()) {
			jule::Int _1c2c46634_i = it - expr.begin();
			jule::Ptr<_1dd05c765_GenericDecl> &_1c2c46634_g = *it;
			{
				if (_1dd05db0c_is_ignore_ident((*(_1c2c46634_g))._field_ident)) {
					(*this)._method_push_err((*(_1c2c46634_g))._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_129972_ok=false;
					goto _iter_next_1a8768846;
				}
				_julec_label_duplication_lookup:;
				{
					auto &expr = _129939_generics;
					auto it = expr.begin();
					_iter_begin_1a876a56d:;
					if (it != expr.end()) {
						jule::Int _1c2c46634_j = it - expr.begin();
						jule::Ptr<_1dd05c765_GenericDecl> &_1c2c46634_ct = *it;
						{
							{
								
								if (_1c2c46634_j >= _1c2c46634_i) {
									_case_begin_1a876b11d:;
									{
										goto _iter_end_1a876a56d;
									}
								}
								else if ((*(_1c2c46634_g))._field_ident == (*(_1c2c46634_ct))._field_ident) {
									_case_begin_1a876b195:;
									{
										(*this)._method_push_err((*(_1c2c46634_g))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_1c2c46634_g))._field_ident)}));
										(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_129972_ok=false;
										goto _iter_end_1a876a56d;
									}
								}
								_match_end_1a876b01e:;
							}
						}
						_iter_next_1a876a56d:;
						++it;
						_1c2c46634_j++;
						goto _iter_begin_1a876a56d;
					}
					_iter_end_1a876a56d:;
				}
			}
			_iter_next_1a8768846:;
			++it;
			_1c2c46634_i++;
			goto _iter_begin_1a8768846;
		}
		_iter_end_1a8768846:;
	}
	return _129972_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_fn_decl_params_dup(jule::Ptr<_1dded9702_Fn>& _132744_f) {
	jule::Bool _132754_ok = jule::Bool();
	_132754_ok=true;
	_julec_label_check:;
	{
		auto &expr = (*(_132744_f))._field_params;
		auto it = expr.begin();
		_iter_begin_1a876e4b7:;
		if (it != expr.end()) {
			jule::Int _1c2c46634_i = it - expr.begin();
			jule::Ptr<_1dded9702_Param> &_1c2c46634_p = *it;
			{
				{
					auto &expr = (*(_132744_f))._field_generics;
					auto it = expr.begin();
					_iter_begin_1a8770034:;
					if (it != expr.end()) {
						jule::Ptr<_1dd05c765_GenericDecl> &_1c2c46634_g = *it;
						{
							if ((*(_1c2c46634_p))._field_ident == (*(_1c2c46634_g))._field_ident) {
								_132754_ok=false;
								(*this)._method_push_err((*(_1c2c46634_p))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_1c2c46634_p))._field_ident)}));
								(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1a876e4b7;
							}
						}
						_iter_next_1a8770034:;
						++it;
						goto _iter_begin_1a8770034;
					}
					_iter_end_1a8770034:;
				}
				_julec_label_params_lookup:;
				{
					auto &expr = (*(_132744_f))._field_params;
					auto it = expr.begin();
					_iter_begin_1a87702ba:;
					if (it != expr.end()) {
						jule::Int _1c2c46634_j = it - expr.begin();
						jule::Ptr<_1dded9702_Param> &_1c2c46634_jp = *it;
						{
							{
								
								if (_1c2c46634_j >= _1c2c46634_i) {
									_case_begin_1a87729a4:;
									{
										goto _iter_end_1a87702ba;
									}
								}
								else if (_1dd05db0c_is_anon_ident((*(_1c2c46634_p))._field_ident) || _1dd05db0c_is_anon_ident((*(_1c2c46634_jp))._field_ident)) {
									_case_begin_1a8772a2b:;
									{
										goto _iter_end_1a87702ba;
									}
								}
								else if ((*(_1c2c46634_p))._field_ident == (*(_1c2c46634_jp))._field_ident) {
									_case_begin_1a8772aa3:;
									{
										_132754_ok=false;
										(*this)._method_push_err((*(_1c2c46634_p))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_1c2c46634_p))._field_ident)}));
										(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1a876e4b7;
									}
								}
								_match_end_1a8772894:;
							}
						}
						_iter_next_1a87702ba:;
						++it;
						_1c2c46634_j++;
						goto _iter_begin_1a87702ba;
					}
					_iter_end_1a87702ba:;
				}
			}
			_iter_next_1a876e4b7:;
			++it;
			_1c2c46634_i++;
			goto _iter_begin_1a876e4b7;
		}
		_iter_end_1a876e4b7:;
	}
	return _132754_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_fn_decl_result_dup(jule::Ptr<_1dded9702_Fn>& _136344_f) {
	jule::Bool _136354_ok = jule::Bool();
	_136354_ok=true;
	if ((*(_136344_f))._method_is_void()) {
		return _136354_ok;
	}
	{
		auto &expr = (*((*(_136344_f))._field_result))._field_idents;
		auto it = expr.begin();
		_iter_begin_1a8776b2e:;
		if (it != expr.end()) {
			jule::Int _1c2c46634_i = it - expr.begin();
			_1dd05db0c_Token &_1c2c46634_v = *it;
			{
				if (_1dd05db0c_is_ignore_ident(_1c2c46634_v._field_kind)) {
					goto _iter_next_1a8776b2e;
				}
				{
					auto &expr = (*(_136344_f))._field_generics;
					auto it = expr.begin();
					_iter_begin_1a8777b52:;
					if (it != expr.end()) {
						jule::Ptr<_1dd05c765_GenericDecl> &_1c2c46634_g = *it;
						{
							if (_1c2c46634_v._field_kind == (*(_1c2c46634_g))._field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_1a8777b52:;
						++it;
						goto _iter_begin_1a8777b52;
					}
					_iter_end_1a8777b52:;
				}
				{
					auto &expr = (*(_136344_f))._field_params;
					auto it = expr.begin();
					_iter_begin_1a8778ca7:;
					if (it != expr.end()) {
						jule::Ptr<_1dded9702_Param> &_1c2c46634_p = *it;
						{
							if (_1c2c46634_v._field_kind == (*(_1c2c46634_p))._field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_1a8778ca7:;
						++it;
						goto _iter_begin_1a8778ca7;
					}
					_iter_end_1a8778ca7:;
				}
				_julec_label_itself_lookup:;
				{
					auto &expr = (*((*(_136344_f))._field_result))._field_idents;
					auto it = expr.begin();
					_iter_begin_1a877a13d:;
					if (it != expr.end()) {
						jule::Int _1c2c46634_j = it - expr.begin();
						_1dd05db0c_Token &_1c2c46634_jv = *it;
						{
							{
								
								if (_1c2c46634_j >= _1c2c46634_i) {
									_case_begin_1a877ab55:;
									{
										goto _iter_end_1a877a13d;
									}
								}
								else if (_1c2c46634_jv._field_kind == _1c2c46634_v._field_kind) {
									_case_begin_1a877abcc:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1a877aa56:;
							}
						}
						_iter_next_1a877a13d:;
						++it;
						_1c2c46634_j++;
						goto _iter_begin_1a877a13d;
					}
					_iter_end_1a877a13d:;
				}
				goto _iter_next_1a8776b2e;
				_julec_label_exist:;
				(*this)._method_push_err(_1c2c46634_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1c2c46634_v._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_136354_ok=false;
			}
			_iter_next_1a8776b2e:;
			++it;
			_1c2c46634_i++;
			goto _iter_begin_1a8776b2e;
		}
		_iter_end_1a8776b2e:;
	}
	return _136354_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_fn_decl_types(jule::Ptr<_1dded9702_Fn>& _141244_f) {
	jule::Bool _141254_ok = jule::Bool();
	_141254_ok=true;
	jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>> _141517_generics = (*(_141244_f))._field_generics;
	if (((*(_141244_f))._field_owner != nullptr) && ((*((*(_141244_f))._field_owner))._field_generics.len() != 0LL)) {
		_141517_generics=jule::append(_141517_generics,(*((*(_141244_f))._field_owner))._field_generics);
	}
	{
		auto &expr = (*(_141244_f))._field_params;
		auto it = expr.begin();
		_iter_begin_1a87809d4:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Param> _1c2c46634_p = *it;
			{
				if ((!((*(_1c2c46634_p))._method_is_self()))) {
					jule::Ptr<_1a5e40a26_TypeKind> _142225_kind = (*(this->self))._method_build_non_generic_type_kind((*((*(_1c2c46634_p))._field_kind))._field_decl,_141517_generics);
					_141254_ok=_141254_ok && (_142225_kind != nullptr);
					(*((*(_1c2c46634_p))._field_kind))._field_kind=_142225_kind;
				}
			}
			_iter_next_1a87809d4:;
			++it;
			goto _iter_begin_1a87809d4;
		}
		_iter_end_1a87809d4:;
	}
	if ((!((*(_141244_f))._method_is_void()))) {
		jule::Ptr<_1a5e40a26_TypeKind> _142921_kind = (*(this->self))._method_build_non_generic_type_kind((*((*((*(_141244_f))._field_result))._field_kind))._field_decl,_141517_generics);
		_141254_ok=_141254_ok && (_142921_kind != nullptr);
		(*((*((*(_141244_f))._field_result))._field_kind))._field_kind=_142921_kind;
	}
	return _141254_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_fn_decl_prototype(jule::Ptr<_1dded9702_Fn>& _143948_f) {
	jule::Bool _143958_ok = jule::Bool();
	if ((*(_143948_f))._field_exceptional && (*(_143948_f))._field_cpp_linked) {
		(*(this->self))._method_push_err((*(_143948_f))._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		_143958_ok = false;
		return _143958_ok;
	}
	if ((*(_143948_f))._field_exceptional) {
		if ((*(_143948_f))._method_is_entry_point()) {
			(*(this->self))._method_push_err((*(_143948_f))._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if ((*(_143948_f))._method_is_init()) {
			(*(this->self))._method_push_err((*(_143948_f))._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		}
	}
	{
		
		if ((!((*(this->self))._method_check_decl_generics((*(_143948_f))._field_generics)))) {
			_case_begin_1a878849d:;
			{
				_143958_ok = false;
				return _143958_ok;
			}
		}
		else if ((!((*(this->self))._method_check_fn_decl_params_dup(_143948_f)))) {
			_case_begin_1a8788569:;
			{
				_143958_ok = false;
				return _143958_ok;
			}
		}
		else if ((!((*(this->self))._method_check_fn_decl_result_dup(_143948_f)))) {
			_case_begin_1a87885d0:;
			{
				_143958_ok = false;
				return _143958_ok;
			}
		}
		else if ((!((*(this->self))._method_check_fn_decl_types(_143948_f)))) {
			_case_begin_1a878827d:;
			{
				_143958_ok = false;
				return _143958_ok;
			}
		}
		else {
			_case_begin_1a8786325:;
			{
				_143958_ok = true;
				return _143958_ok;
			}
		}
		_match_end_1a8786215:;
	}
}



inline void _1c2c46634_Sema::_method_check_trait_decl_method(jule::Ptr<_1dded9702_Fn>& _146248_f) {
	if (_1dd05db0c_is_ignore_ident((*(_146248_f))._field_ident)) {
		(*(this->self))._method_push_err((*(_146248_f))._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	(*(this->self))._method_check_fn_decl_prototype(_146248_f);
	(*(_146248_f))._field_sema=this->self;
}



inline void _1c2c46634_Sema::_method_check_trait_decl_methods(jule::Ptr<_1de043c01_Trait>& _147149_t) {
	{
		auto &expr = (*(_147149_t))._field_methods;
		auto it = expr.begin();
		_iter_begin_1a8792ac3:;
		if (it != expr.end()) {
			jule::Int _1c2c46634_i = it - expr.begin();
			jule::Ptr<_1dded9702_Fn> _1c2c46634_f = *it;
			{
				(*(this->self))._method_check_trait_decl_method(_1c2c46634_f);
				(*(_147149_t))._field_mutable=(*(_147149_t))._field_mutable || (*((*(_1c2c46634_f))._field_params[0LL]))._field_mutable;
				if ((*(this->self))._field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &expr = (*(_147149_t))._field_methods;
					auto it = expr.begin();
					_iter_begin_1a8794e7c:;
					if (it != expr.end()) {
						jule::Int _1c2c46634_j = it - expr.begin();
						jule::Ptr<_1dded9702_Fn> _1c2c46634_jf = *it;
						{
							{
								
								if (_1c2c46634_j >= _1c2c46634_i) {
									_case_begin_1a8795994:;
									{
										goto _iter_end_1a8794e7c;
									}
								}
								else if ((*(_1c2c46634_f))._field_ident == (*(_1c2c46634_jf))._field_ident) {
									_case_begin_1a8795a1b:;
									{
										(*(this->self))._method_push_err((*(_1c2c46634_f))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_1c2c46634_f))._field_ident)}));
										(*(this->self))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1a8794e7c;
									}
								}
								_match_end_1a8795895:;
							}
						}
						_iter_next_1a8794e7c:;
						++it;
						_1c2c46634_j++;
						goto _iter_begin_1a8794e7c;
					}
					_iter_end_1a8794e7c:;
				}
			}
			_iter_next_1a8792ac3:;
			++it;
			_1c2c46634_i++;
			goto _iter_begin_1a8792ac3;
		}
		_iter_end_1a8792ac3:;
	}
}



inline void _1c2c46634_Sema::_method_check_trait_decl(jule::Ptr<_1de043c01_Trait>& _150341_t) {
	if (_1dd05db0c_is_ignore_ident((*(_150341_t))._field_ident)) {
		(*(this->self))._method_push_err((*(_150341_t))._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if ((*(this->self))._method_is_duplicated_ident(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_150341_t)),(*(_150341_t))._field_ident,false)) {
		(*(this->self))._method_push_err((*(_150341_t))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_150341_t))._field_ident)}));
		(*(this->self))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	(*(this->self))._method_check_trait_decl_methods(_150341_t);
}



inline jule::Bool _1c2c46634_Sema::_method_check_trait_decls(void) {
	jule::Bool _151539_ok = jule::Bool();
	{
		auto &expr = (*((*(this->self))._field_file))._field_traits;
		auto it = expr.begin();
		_iter_begin_1a879c10a:;
		if (it != expr.end()) {
			jule::Ptr<_1de043c01_Trait> _1c2c46634_t = *it;
			{
				(*(this->self))._method_check_trait_decl(_1c2c46634_t);
				if ((*(this->self))._field_errors.len() > 0LL) {
					_151539_ok = false;
					return _151539_ok;
				}
			}
			_iter_next_1a879c10a:;
			++it;
			goto _iter_begin_1a879c10a;
		}
		_iter_end_1a879c10a:;
	}
	_151539_ok = true;
	return _151539_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_trait_impl_methods(jule::Ptr<_1de043c01_Trait>& _152748_base,jule::Ptr<_1de0e21cd_Impl>& _152763_ipl) {
	jule::Bool _152777_ok = jule::Bool();
	_152777_ok=true;
	{
		auto &expr = (*(_152763_ipl))._field_methods;
		auto it = expr.begin();
		_iter_begin_1a879e739:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> &_1c2c46634_f = *it;
			{
				if ((*(_152748_base))._method_find_method((*(_1c2c46634_f))._field_ident) == nullptr) {
					(*this)._method_push_err((*(_1c2c46634_f))._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>({jule::Any((*(_152748_base))._field_ident),jule::Any((*(_1c2c46634_f))._field_ident)}));
					_152777_ok=false;
				}
			}
			_iter_next_1a879e739:;
			++it;
			goto _iter_begin_1a879e739;
		}
		_iter_end_1a879e739:;
	}
	return _152777_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_impl_to_struct(jule::Ptr<_1dd0be530_Struct>& _153839_dest,jule::Ptr<_1de0e21cd_Impl>& _153859_ipl) {
	jule::Bool _153873_ok = jule::Bool();
	_153873_ok=true;
	{
		auto &expr = (*(_153859_ipl))._field_methods;
		auto it = expr.begin();
		_iter_begin_1a87a284c:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1c2c46634_f = *it;
			{
				if (((*(_153839_dest))._method_find_method((*(_1c2c46634_f))._field_ident,(*(_1c2c46634_f))._field_statically) != nullptr) || ((*(_153839_dest))._method_find_field((*(_1c2c46634_f))._field_ident) != nullptr)) {
					(*(this->self))._method_push_err((*(_1c2c46634_f))._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any((*(_153839_dest))._field_ident),jule::Any((*(_1c2c46634_f))._field_ident)}));
					_153873_ok=false;
					goto _iter_next_1a87a284c;
				}
				if (((*(_153839_dest))._field_generics.len() > 0LL) && ((*(_1c2c46634_f))._field_generics.len() > 0LL)) {
					{
						auto &expr = (*(_1c2c46634_f))._field_generics;
						auto it = expr.begin();
						_iter_begin_1a87a59a4:;
						if (it != expr.end()) {
							jule::Ptr<_1dd05c765_GenericDecl> _1c2c46634_fg = *it;
							{
								{
									auto &expr = (*(_153839_dest))._field_generics;
									auto it = expr.begin();
									_iter_begin_1a87a628a:;
									if (it != expr.end()) {
										jule::Ptr<_1dd05c765_GenericDecl> _1c2c46634_dg = *it;
										{
											if ((*(_1c2c46634_fg))._field_ident == (*(_1c2c46634_dg))._field_ident) {
												(*(this->self))._method_push_err((*(_1c2c46634_fg))._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_153873_ok=false;
											}
										}
										_iter_next_1a87a628a:;
										++it;
										goto _iter_begin_1a87a628a;
									}
									_iter_end_1a87a628a:;
								}
							}
							_iter_next_1a87a59a4:;
							++it;
							goto _iter_begin_1a87a59a4;
						}
						_iter_end_1a87a59a4:;
					}
				}
				(*(this->self))._method_check_directives((*(_1c2c46634_f))._field_directives,jule::Any(_1c2c46634_f));
				(*(_1c2c46634_f))._field_sema=this->self;
				(*(_1c2c46634_f))._field_owner=_153839_dest;
				(*(_153839_dest))._field_methods = jule::alloc_for_append((*(_153839_dest))._field_methods,1);(*(_153839_dest))._field_methods.__push(_1c2c46634_f);
			}
			_iter_next_1a87a284c:;
			++it;
			goto _iter_begin_1a87a284c;
		}
		_iter_end_1a87a284c:;
	}
	{
		auto &expr = (*(_153859_ipl))._field_statics;
		auto it = expr.begin();
		_iter_begin_1a87a8bb6:;
		if (it != expr.end()) {
			jule::Ptr<_1c3c3d174_Var> _1c2c46634_v = *it;
			{
				
				if (((*(_153839_dest))._method_find_method((*(_1c2c46634_v))._field_ident,true) != nullptr) || ((*(_153839_dest))._method_find_static((*(_1c2c46634_v))._field_ident) != nullptr)) {
					(*(this->self))._method_push_err((*(_1c2c46634_v))._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any((*(_153839_dest))._field_ident),jule::Any((*(_1c2c46634_v))._field_ident)}));
					_153873_ok=false;
					goto _iter_next_1a87a8bb6;
				}
				(*(this->self))._method_check_var_decl(_1c2c46634_v,this->self);
				(*(this->self))._method_check_type_var(_1c2c46634_v,this->self);
				(*(_153839_dest))._field_statics = jule::alloc_for_append((*(_153839_dest))._field_statics,1);(*(_153839_dest))._field_statics.__push(_1c2c46634_v);
			}
			_iter_next_1a87a8bb6:;
			++it;
			goto _iter_begin_1a87a8bb6;
		}
		_iter_end_1a87a8bb6:;
	}
	return _153873_ok;
}



inline void _1c2c46634_Sema::_method_impl_trait(jule::Ptr<_1de0e21cd_Impl>& _158335_decl) {
	jule::Ptr<_1a5e40a26_TypeKind> _158417_base_t = (*(this->self))._method_select_type((*(_158335_decl))._field_base);
	if (_158417_base_t == nullptr) {
		return;
	}
	jule::Ptr<_1de043c01_Trait> _158817_base = (*(_158417_base_t))._method_trt();
	if (_158817_base == nullptr) {
		(*(this->self))._method_push_err((*((*(_158335_decl))._field_base))._field_token,jule::Str("invalid base type for impl", 26),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a5e40a26_TypeKind> _159517_dest_t = (*(this->self))._method_select_type((*(_158335_decl))._field_dest);
	if (_159517_dest_t == nullptr) {
		return;
	}
	jule::Ptr<_1dd0be530_StructIns> _159917_dest_s = (*(_159517_dest_t))._method_strct();
	if (_159917_dest_s == nullptr) {
		(*(this->self))._method_push_err((*((*(_158335_decl))._field_dest))._field_token,jule::Str("invalid destination type for impl", 33),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1dd0be530_Struct> _160617_dest = (*(_159917_dest_s))._field_decl;
	if ((*((*(_160617_dest))._field_token._field_file))._method_dir() != (*((*((*(this->self))._field_file))._field_file))._method_dir()) {
		(*(this->self))._method_push_err((*((*(_158335_decl))._field_dest))._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	(*(_158817_base))._field_implemented = jule::alloc_for_append((*(_158817_base))._field_implemented,1);(*(_158817_base))._field_implemented.__push(_160617_dest);
	(*(_160617_dest))._field_implements = jule::alloc_for_append((*(_160617_dest))._field_implements,1);(*(_160617_dest))._field_implements.__push(_158817_base);
	if ((*(_158335_decl))._field_statics.len() > 0LL) {
		(*(this->self))._method_push_err((*((*(_158335_decl))._field_statics[0LL]))._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	}
	{
		
		if ((!((*(this->self))._method_check_trait_impl_methods(_158817_base,_158335_decl)))) {
			_case_begin_1a87b6bb3:;
			{
				return;
			}
		}
		else if ((!((*(this->self))._method_impl_to_struct(_160617_dest,_158335_decl)))) {
			_case_begin_1a87b6e5a:;
			{
				return;
			}
		}
		_match_end_1a87b5101:;
	}
}



inline void _1c2c46634_Sema::_method_impl_struct(jule::Ptr<_1de0e21cd_Impl>& _162636_decl) {
	jule::Ptr<_1a5e40a26_TypeKind> _162717_dest_t = (*(this->self))._method_select_type((*(_162636_decl))._field_dest);
	if (_162717_dest_t == nullptr) {
		return;
	}
	jule::Ptr<_1dd0be530_StructIns> _163117_dest_s = (*(_162717_dest_t))._method_strct();
	if (_163117_dest_s == nullptr) {
		(*(this->self))._method_push_err((*((*(_162636_decl))._field_dest))._field_token,jule::Str("invalid destination type for impl", 33),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1dd0be530_Struct> _163817_dest = (*(_163117_dest_s))._field_decl;
	if ((*((*(_163817_dest))._field_token._field_file))._method_dir() != (*((*((*(this->self))._field_file))._field_file))._method_dir()) {
		(*(this->self))._method_push_err((*((*(_162636_decl))._field_dest))._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	{
		
		if ((!((*(this->self))._method_impl_to_struct(_163817_dest,_162636_decl)))) {
			_case_begin_1a87bc78a:;
			{
				return;
			}
		}
		_match_end_1a87bbd83:;
	}
}



inline void _1c2c46634_Sema::_method_impl_impl(jule::Ptr<_1de0e21cd_Impl>& _165134_decl) {
	{
		
		if ((*(_165134_decl))._method_is_trait_impl()) {
			_case_begin_1a87bd8ce:;
			{
				(*(this->self))._method_impl_trait(_165134_decl);
			}
		}
		else if ((*(_165134_decl))._method_is_struct_impl()) {
			_case_begin_1a87bd956:;
			{
				(*(this->self))._method_impl_struct(_165134_decl);
			}
		}
		_match_end_1a87bd7d0:;
	}
}



inline void _1c2c46634_Sema::_method_check_var_decl(jule::Ptr<_1c3c3d174_Var>& _166039_decl,jule::Trait<_1a6336746_Lookup> _166055_l) {
	if (_1dd05db0c_is_ignore_ident((*(_166039_decl))._field_ident)) {
		(*(this->self))._method_push_err((*(_166039_decl))._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	if ((*(_166039_decl))._method_is_type_inferred()) {
		if ((!((*(_166039_decl))._method_is_initialized()))) {
			(*(this->self))._method_push_err((*(_166039_decl))._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		}
	} else {
		(*(this->self))._method_check_type((*(_166039_decl))._field_kind,_166055_l);
	}
	if ((*(_166039_decl))._field_constant && (*(_166039_decl))._field_reference) {
		(*(this->self))._method_push_err((*(_166039_decl))._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	}
	if ((!((*(_166039_decl))._method_is_initialized()))) {
		if ((*(_166039_decl))._field_constant) {
			(*(this->self))._method_push_err((*(_166039_decl))._field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>());
		}
		if ((*(_166039_decl))._field_statically) {
			(*(this->self))._method_push_err((*(_166039_decl))._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		}
		if ((*(_166039_decl))._field_reference) {
			(*(this->self))._method_push_err((*(_166039_decl))._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		}
	}
}



inline void _1c2c46634_Sema::_method_check_global_var_decl(jule::Ptr<_1c3c3d174_Var>& _169446_decl) {
	if ((*(this->self))._method_is_duplicated_ident(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_169446_decl)),(*(_169446_decl))._field_ident,(*(_169446_decl))._field_cpp_linked)) {
		(*(this->self))._method_push_err((*(_169446_decl))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_169446_decl))._field_ident)}));
		(*(this->self))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((*(_169446_decl))._field_cpp_linked && (*(_169446_decl))._field_constant) {
		(*(this->self))._method_push_err((*(_169446_decl))._field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>());
	}
	if (((!((*(_169446_decl))._field_cpp_linked)) && (!((*(_169446_decl))._field_constant))) && (!((*(_169446_decl))._field_statically))) {
		(*(this->self))._method_push_err((*(_169446_decl))._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		(*(this->self))._method_push_suggestion(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	}
	(*(this->self))._method_check_directives((*(_169446_decl))._field_directives,jule::Any(_169446_decl));
	(*(this->self))._method_check_var_decl(_169446_decl,this->self);
}



inline jule::Bool _1c2c46634_Sema::_method_check_global_decls(void) {
	jule::Bool _171340_ok = jule::Bool();
	{
		auto &expr = (*((*(this->self))._field_file))._field_vars;
		auto it = expr.begin();
		_iter_begin_1a87cd1e6:;
		if (it != expr.end()) {
			jule::Ptr<_1c3c3d174_Var> _1c2c46634_decl = *it;
			{
				(*(this->self))._method_check_global_var_decl(_1c2c46634_decl);
				if ((*(this->self))._field_errors.len() > 0LL) {
					_171340_ok = false;
					return _171340_ok;
				}
			}
			_iter_next_1a87cd1e6:;
			++it;
			goto _iter_begin_1a87cd1e6;
		}
		_iter_end_1a87cd1e6:;
	}
	_171340_ok = true;
	return _171340_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_struct_trait_impl(jule::Ptr<_1dd0be530_Struct>& _172548_strct,jule::Ptr<_1de043c01_Trait>& _172569_trt) {
	jule::Bool _172584_ok = jule::Bool();
	{
		auto &expr = (*(_172569_trt))._field_methods;
		auto it = expr.begin();
		_iter_begin_1a87d067c:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1c2c46634_tf = *it;
			{
				jule::Bool _172721_exist = false;
				jule::Ptr<_1dded9702_Fn> _172821_sf = (*(_172548_strct))._method_find_method((*(_1c2c46634_tf))._field_ident,(*(_1c2c46634_tf))._field_statically);
				jule::Ptr<_1dded9702_FnIns> _172917_tf_k = (*(this->self))._method_get_trait_check_fn_kind(_1c2c46634_tf);
				if (_172821_sf != nullptr) {
					jule::Ptr<_1dded9702_FnIns> _173125_sf_k = (*(this->self))._method_get_trait_check_fn_kind(_172821_sf);
					_172721_exist=(((*((*(_172917_tf_k))._field_decl))._field_public == (*((*(_173125_sf_k))._field_decl))._field_public) && ((*((*(_172917_tf_k))._field_decl))._field_ident == (*((*(_173125_sf_k))._field_decl))._field_ident)) && (*(_172917_tf_k))._method_equals(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_173125_sf_k)));
				}
				if (_172721_exist) {
					jule::Ptr<_1dd05c765_Directive> _173921_d = _1a94c333b_find_directive((*(_172821_sf))._field_directives,jule::Str("deprecated", 10));
					if (_173921_d != nullptr) {
						(*(this->self))._method_push_err((*(_173921_d))._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					}
					_172584_ok=false;
				} else {
					
					jule::Str _174625_s = (*(_172917_tf_k))._method_get_kind_str(true);
					if ((*(_1c2c46634_tf))._field_public) {
						_174625_s=jule::Str("pub ", 4) + _174625_s;
					}
					(*(this->self))._method_push_err((*(_172548_strct))._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>({jule::Any((*(_172569_trt))._field_ident),jule::Any(_174625_s)}));
					_172584_ok=false;
				}
			}
			_iter_next_1a87d067c:;
			++it;
			goto _iter_begin_1a87d067c;
		}
		_iter_end_1a87d067c:;
	}
	return _172584_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_struct_impls(jule::Ptr<_1dd0be530_Struct>& _175743_s) {
	jule::Bool _175757_ok = jule::Bool();
	_175757_ok=true;
	{
		auto &expr = (*(_175743_s))._field_implements;
		auto it = expr.begin();
		_iter_begin_1a87d8d39:;
		if (it != expr.end()) {
			jule::Ptr<_1de043c01_Trait> _1c2c46634_trt = *it;
			{
				_175757_ok=(*(this->self))._method_check_struct_trait_impl(_175743_s,_1c2c46634_trt) && _175757_ok;
			}
			_iter_next_1a87d8d39:;
			++it;
			goto _iter_begin_1a87d8d39;
		}
		_iter_end_1a87d8d39:;
	}
	return _175757_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_struct_fields(jule::Ptr<_1dd0be530_Struct>& _176544_st) {
	jule::Bool _176559_ok = jule::Bool();
	_176559_ok=true;
	jule::Ptr<_1a5e40a26_TypeChecker> _176817_tc = jule::new_struct<_1a5e40a26_TypeChecker>(new( std::nothrow ) _1a5e40a26_TypeChecker(this->self,this->self,jule::new_struct<_1a5e40a26_Referencer>(new( std::nothrow ) _1a5e40a26_Referencer((*(_176544_st))._field_ident,jule::Any(_176544_st),nullptr)),_1dd05db0c_Token(),(*(_176544_st))._field_generics,jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeAlias>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool()));
	jule::Int _177813_n = (*(_176544_st))._field_instances.len();
	{
		auto &expr = (*(_176544_st))._field_fields;
		auto it = expr.begin();
		_iter_begin_1a87dbc2c:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Field> _1c2c46634_f = *it;
			{
				(*(_1c2c46634_f))._field_owner=_176544_st;
				(*((*(_1c2c46634_f))._field_kind))._field_kind=(*(_176817_tc))._method_check_decl((*((*(_1c2c46634_f))._field_kind))._field_decl);
				_176559_ok=((*((*(_1c2c46634_f))._field_kind))._field_kind != nullptr) && _176559_ok;
				{
					auto &expr = (*(_176544_st))._field_fields;
					auto it = expr.begin();
					_iter_begin_1a87ddab9:;
					if (it != expr.end()) {
						jule::Ptr<_1dd0be530_Field> _1c2c46634_cf = *it;
						{
							if (_1c2c46634_f == _1c2c46634_cf) {
								goto _iter_end_1a87ddab9;
							} else if ((*(_1c2c46634_f))._field_ident == (*(_1c2c46634_cf))._field_ident) {
								(*(this->self))._method_push_err((*(_1c2c46634_f))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_1c2c46634_f))._field_ident)}));
								(*(this->self))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_176559_ok=false;
							}
						}
						_iter_next_1a87ddab9:;
						++it;
						goto _iter_begin_1a87ddab9;
					}
					_iter_end_1a87ddab9:;
				}
			}
			_iter_next_1a87dbc2c:;
			++it;
			goto _iter_begin_1a87dbc2c;
		}
		_iter_end_1a87dbc2c:;
	}
	if (_176559_ok && (_177813_n != static_cast<jule::Int>((*(_176544_st))._field_instances.len()))) {
		(*(_176817_tc))._field_referencer=nullptr;
		(*(_176544_st))._field_instances=(*(_176544_st))._field_instances.slice(0LL,_177813_n);
		{
			auto &expr = (*(_176544_st))._field_fields;
			auto it = expr.begin();
			_iter_begin_1a87e12e7:;
			if (it != expr.end()) {
				jule::Ptr<_1dd0be530_Field> _1c2c46634_f = *it;
				{
					(*((*(_1c2c46634_f))._field_kind))._field_kind=(*(_176817_tc))._method_check_decl((*((*(_1c2c46634_f))._field_kind))._field_decl);
				}
				_iter_next_1a87e12e7:;
				++it;
				goto _iter_begin_1a87e12e7;
			}
			_iter_end_1a87e12e7:;
		}
	}
	return _176559_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_struct_decl_methods(jule::Ptr<_1dd0be530_Struct>& _180750_s) {
	jule::Bool _180764_ok = jule::Bool();
	{
		auto &expr = (*(_180750_s))._field_methods;
		auto it = expr.begin();
		_iter_begin_1a87e3805:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1c2c46634_m = *it;
			{
				if ((!((*(this->self))._method_check_fn_decl_types(_1c2c46634_m)))) {
					_180764_ok = false;
					return _180764_ok;
				}
				{
					auto &_match_expr{ (*(_1c2c46634_m))._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1a87e4509:;
						{
							(*(_180750_s))._field_operators._field_eq=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1a87e487d:;
						{
							(*(_180750_s))._field_operators._field_gt=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1a87e4b25:;
						{
							(*(_180750_s))._field_operators._field_gt_eq=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1a87e4b8b:;
						{
							(*(_180750_s))._field_operators._field_lt=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1a87e4c13:;
						{
							(*(_180750_s))._field_operators._field_lt_eq=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1a87e4c8a:;
						{
							(*(_180750_s))._field_operators._field_shl=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1a87e4d12:;
						{
							(*(_180750_s))._field_operators._field_shr=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1a87e4d89:;
						{
							(*(_180750_s))._field_operators._field_add=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1a87e4e11:;
						{
							(*(_180750_s))._field_operators._field_sub=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1a87e4e88:;
						{
							(*(_180750_s))._field_operators._field_div=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1a87e5010:;
						{
							(*(_180750_s))._field_operators._field_mul=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1a87e5087:;
						{
							(*(_180750_s))._field_operators._field_mod=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1a87e510e:;
						{
							(*(_180750_s))._field_operators._field_bit_and=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1a87e5186:;
						{
							(*(_180750_s))._field_operators._field_bit_or=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1a87e520d:;
						{
							(*(_180750_s))._field_operators._field_bit_xor=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1a87e5285:;
						{
							(*(_180750_s))._field_operators._field_neg=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1a87e530c:;
						{
							(*(_180750_s))._field_operators._field_pos=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1a87e5384:;
						{
							(*(_180750_s))._field_operators._field_bit_not=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1a87e540b:;
						{
							(*(_180750_s))._field_operators._field_add_assign=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1a87e5483:;
						{
							(*(_180750_s))._field_operators._field_sub_assign=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1a87e550a:;
						{
							(*(_180750_s))._field_operators._field_div_assign=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1a87e5582:;
						{
							(*(_180750_s))._field_operators._field_mul_assign=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1a87e5609:;
						{
							(*(_180750_s))._field_operators._field_mod_assign=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1a87e5681:;
						{
							(*(_180750_s))._field_operators._field_shl_assign=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1a87e5708:;
						{
							(*(_180750_s))._field_operators._field_shr_assign=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1a87e5780:;
						{
							(*(_180750_s))._field_operators._field_bit_or_assign=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1a87e5807:;
						{
							(*(_180750_s))._field_operators._field_bit_and_assign=_1c2c46634_m;
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1a87e587e:;
						{
							(*(_180750_s))._field_operators._field_bit_xor_assign=_1c2c46634_m;
						}
					}
					_match_end_1a87e4828:;
				}
			}
			_iter_next_1a87e3805:;
			++it;
			goto _iter_begin_1a87e3805;
		}
		_iter_end_1a87e3805:;
	}
	_180764_ok = true;
	return _180764_ok;
}



inline void _1c2c46634_Sema::_method_check_struct_decl(jule::Ptr<_1dd0be530_Struct>& _187442_s) {
	if (_1dd05db0c_is_ignore_ident((*(_187442_s))._field_ident)) {
		(*(this->self))._method_push_err((*(_187442_s))._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if ((*(this->self))._method_is_duplicated_ident(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_187442_s)),(*(_187442_s))._field_ident,(*(_187442_s))._field_cpp_linked)) {
		(*(this->self))._method_push_err((*(_187442_s))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_187442_s))._field_ident)}));
		(*(this->self))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	(*(this->self))._method_check_directives((*(_187442_s))._field_directives,jule::Any(_187442_s));
	(*(_187442_s))._field_sema=this->self;
	{
		
		if ((!((*(this->self))._method_check_decl_generics((*(_187442_s))._field_generics)))) {
			_case_begin_1a88045a2:;
			{
				return;
			}
		}
		else if ((!((*(this->self))._method_check_struct_fields(_187442_s)))) {
			_case_begin_1a8804618:;
			{
				return;
			}
		}
		else if ((!((*(this->self))._method_check_struct_decl_methods(_187442_s)))) {
			_case_begin_1a880467e:;
			{
				return;
			}
		}
		else if ((!((*(this->self))._method_check_struct_impls(_187442_s)))) {
			_case_begin_1a8804706:;
			{
				return;
			}
		}
		_match_end_1a880126e:;
	}
}



inline jule::Bool _1c2c46634_Sema::_method_check_struct_decls(void) {
	jule::Bool _189440_ok = jule::Bool();
	{
		auto &expr = (*((*(this->self))._field_file))._field_structs;
		auto it = expr.begin();
		_iter_begin_1a88071ba:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> _1c2c46634_s = *it;
			{
				(*(this->self))._method_check_struct_decl(_1c2c46634_s);
				if ((*(this->self))._field_errors.len() > 0LL) {
					_189440_ok = false;
					return _189440_ok;
				}
			}
			_iter_next_1a88071ba:;
			++it;
			goto _iter_begin_1a88071ba;
		}
		_iter_end_1a88071ba:;
	}
	_189440_ok = true;
	return _189440_ok;
}



inline void _1c2c46634_Sema::_method_check_fn_decl(jule::Ptr<_1dded9702_Fn>& _190738_f) {
	if (_1dd05db0c_is_ignore_ident((*(_190738_f))._field_ident)) {
		(*(this->self))._method_push_err((*(_190738_f))._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if ((*(this->self))._method_is_duplicated_ident(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_190738_f)),(*(_190738_f))._field_ident,(*(_190738_f))._field_cpp_linked)) {
		(*(this->self))._method_push_err((*(_190738_f))._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any((*(_190738_f))._field_ident)}));
		(*(this->self))._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	(*(this->self))._method_check_directives((*(_190738_f))._field_directives,jule::Any(_190738_f));
	(*(_190738_f))._field_sema=this->self;
	(*(this->self))._method_check_fn_decl_prototype(_190738_f);
}



inline jule::Bool _1c2c46634_Sema::_method_check_fn_decls(void) {
	jule::Bool _192236_ok = jule::Bool();
	{
		auto &expr = (*((*(this->self))._field_file))._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a880d2ae:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1c2c46634_f = *it;
			{
				(*(this->self))._method_check_fn_decl(_1c2c46634_f);
				if ((*(this->self))._field_errors.len() > 0LL) {
					_192236_ok = false;
					return _192236_ok;
				}
			}
			_iter_next_1a880d2ae:;
			++it;
			goto _iter_begin_1a880d2ae;
		}
		_iter_end_1a880d2ae:;
	}
	_192236_ok = true;
	return _192236_ok;
}



inline void _1c2c46634_Sema::_method_push_cycle_error(jule::Ptr<_1dd0be530_Struct>& _193432_st1,jule::Ptr<_1dd0be530_Struct>& _193447_st2,jule::Str& _193466_message) {
	
	jule::Str _193713_refers_to = _1db678789_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any((*(_193432_st1))._field_ident),jule::Any((*(_193447_st2))._field_ident)}));
	_193466_message=((_1db822922_repeat(jule::Str(" ", 1),4LL) + _193713_refers_to) + jule::Str("\n", 1)) + _193466_message;
}



inline jule::Bool _1c2c46634_Sema::_method_check_cross_cycle(jule::Ptr<_1dd0be530_Struct>& _194133_st1,jule::Ptr<_1dd0be530_Struct>& _194148_st2,jule::Str& _194167_message) {
	{
		auto &expr = (*(_194148_st2))._field_uses;
		auto it = expr.begin();
		_iter_begin_1a8812ea6:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> &_1c2c46634_u = *it;
			{
				if (_1c2c46634_u == _194133_st1) {
					(*this)._method_push_cycle_error(_194148_st2,_1c2c46634_u,_194167_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_194133_st1,_1c2c46634_u,_194167_message)))) {
					(*this)._method_push_cycle_error(_194148_st2,_1c2c46634_u,_194167_message);
					return false;
				}
			}
			_iter_next_1a8812ea6:;
			++it;
			goto _iter_begin_1a8812ea6;
		}
		_iter_end_1a8812ea6:;
	}
	return true;
}



inline jule::Bool _1c2c46634_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _195753_derive,jule::Ptr<_1dd0be530_Struct>& _195767_st1,jule::Ptr<_1a5e40a26_TypeKind>& _195786_k) {
	jule::Bool _1957102_ok = jule::Bool();
	jule::Ptr<_1dd0be530_Struct> _195817_st2 = _1a5e40a26_get_struct_from_kind(_195786_k);
	if (_195817_st2 == nullptr) {
		_1957102_ok = true;
		return _1957102_ok;
	}
	if (_195767_st1 == _195817_st2) {
		(*this)._method_push_err((*(_195767_st1))._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>({jule::Any(_195753_derive),jule::Any((*(_195767_st1))._field_ident)}));
		_1957102_ok = false;
		return _1957102_ok;
	}
	jule::Str _197017_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_195767_st1,_195817_st2,_197017_message)))) {
		jule::Str _197321_err_msg = _197017_message;
		_197017_message=jule::Str();
		(*this)._method_push_cycle_error(_195767_st1,_195817_st2,_197017_message);
		_197321_err_msg=_197321_err_msg + _197017_message;
		(*this)._method_push_err((*(_195767_st1))._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>({jule::Any(_195753_derive),jule::Any(_197321_err_msg)}));
		_1957102_ok = false;
		return _1957102_ok;
	}
	_1957102_ok = true;
	return _1957102_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_struct_ins_derive_clone(jule::Ptr<_1dd0be530_StructIns> _198452_st) {
	jule::Bool _198470_ok = jule::Bool();
	if ((!((*((*(_198452_st))._field_decl))._method_is_derives(jule::Str("Clone", 5))))) {
		_198470_ok = true;
		return _198470_ok;
	}
	{
		auto &expr = (*(_198452_st))._field_fields;
		auto it = expr.begin();
		_iter_begin_1a881b432:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_FieldIns> _1c2c46634_f = *it;
			{
				if (((*(_1c2c46634_f))._field_kind == nullptr) || (!((*((*(_1c2c46634_f))._field_kind))._method_mutable()))) {
					goto _iter_next_1a881b432;
				}
				if ((!((*((*(_1c2c46634_f))._field_kind))._method_supports_cloning()))) {
					(*this)._method_push_err((*((*(_198452_st))._field_decl))._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>({jule::Any((*((*(_1c2c46634_f))._field_kind))._method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_198470_ok = false;
					return _198470_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),(*(_198452_st))._field_decl,(*(_1c2c46634_f))._field_kind)))) {
					_198470_ok = false;
					return _198470_ok;
				}
			}
			_iter_next_1a881b432:;
			++it;
			goto _iter_begin_1a881b432;
		}
		_iter_end_1a881b432:;
	}
	_198470_ok = true;
	return _198470_ok;
}



inline jule::Bool _1c2c46634_Sema::_method_check_struct_derive_clone(jule::Ptr<_1dd0be530_Struct>& _200749_st) {
	return (*this)._method_check_struct_ins_derive_clone((*(_200749_st))._method_instance());
}



inline jule::Bool _1c2c46634_Sema::_method_check_file_derives(void) {
	jule::Bool _201139_ok = jule::Bool();
	{
		auto &expr = (*((*this)._field_file))._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8821756:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> _1c2c46634_st = *it;
			{
				_201139_ok=(*this)._method_check_struct_derive_clone(_1c2c46634_st);
				if ((!(_201139_ok))) {
					goto _iter_end_1a8821756;
				}
			}
			_iter_next_1a8821756:;
			++it;
			goto _iter_begin_1a8821756;
		}
		_iter_end_1a8821756:;
	}
	return _201139_ok;
}



inline void _1c2c46634_Sema::_method_check_package_derives(void) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_1a8822878:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_f = *it;
			{
				(*this)._method_set_current_file(_1c2c46634_f);
				jule::Bool _202617_ok = (*this)._method_check_file_derives();
				if ((!(_202617_ok))) {
					return;
				}
			}
			_iter_next_1a8822878:;
			++it;
			goto _iter_begin_1a8822878;
		}
		_iter_end_1a8822878:;
	}
}



inline void _1c2c46634_Sema::_method_check_package_decls(void) {
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a8824193:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_f = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_f);
				if ((!((*(this->self))._method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_1a8824193:;
			++it;
			goto _iter_begin_1a8824193;
		}
		_iter_end_1a8824193:;
	}
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a88254b3:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_f = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_f);
				if ((!((*(this->self))._method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_1a88254b3:;
			++it;
			goto _iter_begin_1a88254b3;
		}
		_iter_end_1a88254b3:;
	}
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a8826508:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_f = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_f);
				if ((!((*(this->self))._method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_1a8826508:;
			++it;
			goto _iter_begin_1a8826508;
		}
		_iter_end_1a8826508:;
	}
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a8827592:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_f = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_f);
				if ((!((*(this->self))._method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_1a8827592:;
			++it;
			goto _iter_begin_1a8827592;
		}
		_iter_end_1a8827592:;
	}
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a88285d7:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_f = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_f);
				if ((!((*(this->self))._method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_1a88285d7:;
			++it;
			goto _iter_begin_1a88285d7;
		}
		_iter_end_1a88285d7:;
	}
	(*(this->self))._method_check_package_derives();
}



inline void _1c2c46634_Sema::_method_check_data_for_type_inference(jule::Ptr<_1a94c333b_Data>& _207449_d,_1dd05db0c_Token& _207460_err_token) {
	{
		
		if ((*(_207449_d))._method_is_nil()) {
			_case_begin_1a882a573:;
			{
				(*this)._method_push_err(_207460_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if ((*(_207449_d))._method_is_void()) {
			_case_begin_1a882a5ea:;
			{
				(*this)._method_push_err(_207460_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if ((*((*(_207449_d))._field_kind))._field_variadic) {
			_case_begin_1a882a672:;
			{
				(*this)._method_push_err(_207460_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a882a485:;
	}
}



inline void _1c2c46634_Sema::_method_check_var(jule::Ptr<_1c3c3d174_Var>& _208534_v) {
	if ((*(_208534_v))._field_cpp_linked) {
		return;
	}
	if ((*(_208534_v))._method_is_type_inferred()) {
		(*(_208534_v))._field_kind=jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),(*((*((*(_208534_v))._field_value))._field_data))._field_kind));
		(*(this->self))._method_check_data_for_type_inference((*((*(_208534_v))._field_value))._field_data,(*((*((*(_208534_v))._field_value))._field_expr))._field_token);
	} else {
		jule::Ptr<_1a5e40a26_Arr> _209621_arr = (*((*((*(_208534_v))._field_kind))._field_kind))._method_arr();
		if (_209621_arr != nullptr) {
			if ((*(_209621_arr))._field_auto) {
				jule::Ptr<_1a5e40a26_Arr> _209925_data_arr = (*((*((*((*(_208534_v))._field_value))._field_data))._field_kind))._method_arr();
				if (_209925_data_arr != nullptr) {
					(*(_209621_arr))._field_n=(*(_209925_data_arr))._field_n;
				}
			}
		}
		(*(this->self))._method_check_assign_type((*(_208534_v))._field_reference,(*((*(_208534_v))._field_kind))._field_kind,(*((*(_208534_v))._field_value))._field_data,(*((*((*(_208534_v))._field_value))._field_expr))._field_token);
	}
	if ((*(_208534_v))._field_reference && (!(_1a5e40a26_is_valid_for_ref((*((*(_208534_v))._field_kind))._field_kind)))) {
		(*(this->self))._method_push_err((*(_208534_v))._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any((*((*((*(_208534_v))._field_kind))._field_kind))._method_to_str())}));
	}
	(*(this->self))._method_check_validity_for_init_expr((*(_208534_v))._field_mutable,(*(_208534_v))._field_reference,(*((*(_208534_v))._field_kind))._field_kind,(*((*(_208534_v))._field_value))._field_data,(*((*((*(_208534_v))._field_value))._field_expr))._field_token);
	if ((*(_208534_v))._field_constant) {
		if ((!((*((*((*(_208534_v))._field_value))._field_data))._method_is_const()))) {
			(*(this->self))._method_push_err((*((*((*(_208534_v))._field_value))._field_expr))._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		}
	} else {
		(*((*((*(_208534_v))._field_value))._field_data))._field_constant=nullptr;
	}
	if ((*((*((*(_208534_v))._field_kind))._field_kind))._method_tup() != nullptr) {
		(*((*(_208534_v))._field_kind))._field_kind=nullptr;
	}
}



inline void _1c2c46634_Sema::_method_check_type_var(jule::Ptr<_1c3c3d174_Var>& _213439_decl,jule::Trait<_1a6336746_Lookup> _213455_l) {
	if ((*(_213439_decl))._field_cpp_linked || (!((*(_213439_decl))._method_is_initialized()))) {
		return;
	}
	jule::Ptr<_1a94c333b_Eval> _213917_eval = ((((*(_213439_decl))._field_kind != nullptr)) ? ((*(this->self))._method_evalpd(_213455_l,(*((*(_213439_decl))._field_kind))._field_kind,_213439_decl)) : ((*(this->self))._method_evalpd(_213455_l,nullptr,_213439_decl)));
	(*(_213917_eval))._field_immutable=(!((*(_213439_decl))._field_mutable));
	(*((*(_213439_decl))._field_value))._field_data=(*(_213917_eval))._method_eval_expr((*((*(_213439_decl))._field_value))._field_expr);
	if ((*((*(_213439_decl))._field_value))._field_data == nullptr) {
		return;
	}
	(*(this->self))._method_check_var(_213439_decl);
}



inline void _1c2c46634_Sema::_method_check_global_types(void) {
	{
		auto &expr = (*((*(this->self))._field_file))._field_vars;
		auto it = expr.begin();
		_iter_begin_1a883d91b:;
		if (it != expr.end()) {
			jule::Ptr<_1c3c3d174_Var> _1c2c46634_decl = *it;
			{
				if (((*(_1c2c46634_decl))._method_is_initialized() && ((*((*(_1c2c46634_decl))._field_value))._field_data == nullptr)) || ((*(_1c2c46634_decl))._method_is_type_inferred() && ((*((*(_1c2c46634_decl))._field_kind))._field_kind == nullptr))) {
					(*(this->self))._method_check_type_var(_1c2c46634_decl,this->self);
				}
			}
			_iter_next_1a883d91b:;
			++it;
			goto _iter_begin_1a883d91b;
		}
		_iter_end_1a883d91b:;
	}
}



inline jule::Ptr<_1dded9702_FnIns> _1c2c46634_Sema::_method_ready_to_check_fn(jule::Ptr<_1dd0be530_StructIns>& _216542_s,jule::Ptr<_1dded9702_Fn>& _216562_f) {
	jule::Ptr<_1dded9702_FnIns> _216617_ins = (*(_216562_f))._method_instance();
	if ((*(_216562_f))._field_instances.len() != 0LL) {
		return _216617_ins;
	}
	(*(_216617_ins))._field_owner=_216542_s;
	(*(_216562_f))._method_append_instance(_216617_ins);
	(*(this->self))._method_reload_fn_ins_types(_216617_ins);
	(*(_216617_ins))._field_reloaded=true;
	return _216617_ins;
}



inline void _1c2c46634_Sema::_method_check_type_method(jule::Ptr<_1dd0be530_StructIns>& _217742_s,jule::Ptr<_1dded9702_Fn>& _217762_f) {
	if ((*(_217762_f))._field_cpp_linked) {
		return;
	}
	if ((*(_217762_f))._field_generics.len() > 0LL) {
		return;
	}
	(*(this->self))._method_ready_to_check_fn(_217742_s,_217762_f);
	{
		auto &expr = (*(_217762_f))._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8845538:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_FnIns> _1c2c46634_ins = *it;
			{
				if ((*((*(_1c2c46634_ins))._field_scope))._field_stmts.len() > 0LL) {
					goto _iter_next_1a8845538;
				}
				(*(this->self))._method_check_fn_ins(_1c2c46634_ins);
			}
			_iter_next_1a8845538:;
			++it;
			goto _iter_begin_1a8845538;
		}
		_iter_end_1a8845538:;
	}
}



inline void _1c2c46634_Sema::_method_check_field_defaults(jule::Ptr<_1dd0be530_StructIns>& _219745_ins) {
	jule::Ptr<_1a94c333b_Eval> _219817_eval = (*(this->self))._method_eval(this->self);
	{
		auto &expr = (*(_219745_ins))._field_fields;
		auto it = expr.begin();
		_iter_begin_1a8847bbc:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_FieldIns> _1c2c46634_f = *it;
			{
				if ((*((*(_1c2c46634_f))._field_decl))._field_default == nullptr) {
					goto _iter_next_1a8847bbc;
				}
				(*(_219817_eval))._field_prefix=(*(_1c2c46634_f))._field_kind;
				(*(_219817_eval))._field_field=_1c2c46634_f;
				(*(_1c2c46634_f))._field_default=(*(_219817_eval))._method_eval_expr((*((*(_1c2c46634_f))._field_decl))._field_default);
				if ((*(_1c2c46634_f))._field_default == nullptr) {
					goto _iter_next_1a8847bbc;
				}
				
				(*(this->self))._method_check_assign_type(false,(*(_1c2c46634_f))._field_kind,(*(_1c2c46634_f))._field_default,(*((*((*(_1c2c46634_f))._field_decl))._field_default))._field_token);
			}
			_iter_next_1a8847bbc:;
			++it;
			goto _iter_begin_1a8847bbc;
		}
		_iter_end_1a8847bbc:;
	}
}



inline jule::Ptr<_1dded9702_FnIns> _1c2c46634_Sema::_method_check_struct_ins_op(jule::Ptr<_1dd0be530_StructIns>& _221944_s,jule::Ptr<_1dded9702_Fn>& _221964_f,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)> _221972_p) {
	if (_221964_f == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1dded9702_FnIns> _222317_ins = (*(this->self))._method_ready_to_check_fn(_221944_s,_221964_f);
	return ((_221972_p(_221964_f)) ? (_222317_ins) : (nullptr));
}



inline void _1c2c46634_Sema::_method_check_struct_ins(jule::Ptr<_1dd0be530_StructIns>& _222741_s) {
	(*(this->self))._method_check_field_defaults(_222741_s);
	{
		auto &expr = (*(_222741_s))._field_methods;
		auto it = expr.begin();
		_iter_begin_1a884eac5:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1c2c46634_f = *it;
			{
				(*(this->self))._method_check_type_method(_222741_s,_1c2c46634_f);
			}
			_iter_next_1a884eac5:;
			++it;
			goto _iter_begin_1a884eac5;
		}
		_iter_end_1a884eac5:;
	}
}



inline void _1c2c46634_Sema::_method_check_type_struct(jule::Ptr<_1dd0be530_Struct>& _223442_s) {
	if ((*(_223442_s))._field_cpp_linked) {
		return;
	}
	if ((*(_223442_s))._field_generics.len() > 0LL) {
		return;
	}
	if ((*(_223442_s))._field_instances.len() == 0LL) {
		jule::Ptr<_1dd0be530_StructIns> _224521_ins = (*(_223442_s))._method_instance();
		(*(_224521_ins))._field_checked=true;
		(*(_223442_s))._method_append_instance(_224521_ins);
	}
	{
		auto &expr = (*(_223442_s))._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8853018:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_StructIns> _1c2c46634_ins = *it;
			{
				(*(this->self))._method_check_struct_ins(_1c2c46634_ins);
			}
			_iter_next_1a8853018:;
			++it;
			goto _iter_begin_1a8853018;
		}
		_iter_end_1a8853018:;
	}
}



inline void _1c2c46634_Sema::_method_check_struct_types(void) {
	{
		auto &expr = (*((*(this->self))._field_file))._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8854206:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> _1c2c46634_s = *it;
			{
				(*(this->self))._method_check_type_struct(_1c2c46634_s);
			}
			_iter_next_1a8854206:;
			++it;
			goto _iter_begin_1a8854206;
		}
		_iter_end_1a8854206:;
	}
}



inline void _1c2c46634_Sema::_method_check_struct_ins_operators(jule::Ptr<_1dd0be530_StructIns> _226150_s) {
	(*(_226150_s))._field_operators._field_eq=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_eq,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _226278_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_eq(_226278_f);
	}));
	(*(_226150_s))._field_operators._field_gt=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_gt,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _226378_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_gt(_226378_f);
	}));
	(*(_226150_s))._field_operators._field_gt_eq=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_gt_eq,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _226484_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_gt_eq(_226484_f);
	}));
	(*(_226150_s))._field_operators._field_lt=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_lt,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _226578_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_lt(_226578_f);
	}));
	(*(_226150_s))._field_operators._field_lt_eq=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_lt_eq,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _226684_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_lt_eq(_226684_f);
	}));
	(*(_226150_s))._field_operators._field_shl=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_shl,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _226780_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_shl(_226780_f);
	}));
	(*(_226150_s))._field_operators._field_shr=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_shr,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _226880_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_shr(_226880_f);
	}));
	(*(_226150_s))._field_operators._field_add=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_add,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _226980_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_add(_226980_f);
	}));
	(*(_226150_s))._field_operators._field_sub=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_sub,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _227080_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_sub(_227080_f);
	}));
	(*(_226150_s))._field_operators._field_div=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_div,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _227180_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_div(_227180_f);
	}));
	(*(_226150_s))._field_operators._field_mul=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_mul,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _227280_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_mul(_227280_f);
	}));
	(*(_226150_s))._field_operators._field_mod=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_mod,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _227380_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_mod(_227380_f);
	}));
	(*(_226150_s))._field_operators._field_bit_and=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_bit_and,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _227488_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_bit_and(_227488_f);
	}));
	(*(_226150_s))._field_operators._field_bit_or=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_bit_or,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _227586_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_bit_or(_227586_f);
	}));
	(*(_226150_s))._field_operators._field_bit_xor=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_bit_xor,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _227688_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_bit_xor(_227688_f);
	}));
	(*(_226150_s))._field_operators._field_neg=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_neg,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _227780_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_neg(_227780_f);
	}));
	(*(_226150_s))._field_operators._field_pos=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_pos,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _227880_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_pos(_227880_f);
	}));
	(*(_226150_s))._field_operators._field_bit_not=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_bit_not,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _227988_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_bit_not(_227988_f);
	}));
	(*(_226150_s))._field_operators._field_add_assign=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_add_assign,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _228094_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_add_assign(_228094_f);
	}));
	(*(_226150_s))._field_operators._field_sub_assign=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_sub_assign,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _228194_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_sub_assign(_228194_f);
	}));
	(*(_226150_s))._field_operators._field_div_assign=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_div_assign,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _228294_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_div_assign(_228294_f);
	}));
	(*(_226150_s))._field_operators._field_mul_assign=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_mul_assign,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _228394_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_mul_assign(_228394_f);
	}));
	(*(_226150_s))._field_operators._field_mod_assign=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_mod_assign,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _228494_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_mod_assign(_228494_f);
	}));
	(*(_226150_s))._field_operators._field_shl_assign=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_shl_assign,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _228594_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_shl_assign(_228594_f);
	}));
	(*(_226150_s))._field_operators._field_shr_assign=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_shr_assign,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _228694_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_shr_assign(_228694_f);
	}));
	(*(_226150_s))._field_operators._field_bit_or_assign=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_bit_or_assign,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _2287100_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_bit_or_assign(_2287100_f);
	}));
	(*(_226150_s))._field_operators._field_bit_and_assign=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_bit_and_assign,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _2288102_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_bit_and_assign(_2288102_f);
	}));
	(*(_226150_s))._field_operators._field_bit_xor_assign=(*(this->self))._method_check_struct_ins_op(_226150_s,(*((*(_226150_s))._field_decl))._field_operators._field_bit_xor_assign,jule::Fn<jule::Bool(jule::Ptr<_1dded9702_Fn>)>([=](jule::Ptr<_1dded9702_Fn> _2289102_f) mutable -> jule::Bool {
		return _1c3c3d350_FuncPattern::_static_method_bit_xor_assign(_2289102_f);
	}));
}



inline void _1c2c46634_Sema::_method_check_type_struct_operators(jule::Ptr<_1dd0be530_Struct>& _229252_s) {
	if ((*(_229252_s))._field_cpp_linked) {
		return;
	}
	if ((*(_229252_s))._field_generics.len() > 0LL) {
		return;
	}
	if ((*(_229252_s))._field_instances.len() == 0LL) {
		jule::Ptr<_1dd0be530_StructIns> _230321_ins = (*(_229252_s))._method_instance();
		(*(_230321_ins))._field_checked=true;
		(*(_229252_s))._method_append_instance(_230321_ins);
	}
	(*(this->self))._method_check_struct_ins_operators((*(_229252_s))._field_instances[0LL]);
}



inline void _1c2c46634_Sema::_method_check_struct_types_operators(void) {
	{
		auto &expr = (*((*(this->self))._field_file))._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8892530:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> _1c2c46634_s = *it;
			{
				(*(this->self))._method_check_type_struct_operators(_1c2c46634_s);
			}
			_iter_next_1a8892530:;
			++it;
			goto _iter_begin_1a8892530;
		}
		_iter_end_1a8892530:;
	}
}



inline void _1c2c46634_Sema::_method_check_rets(jule::Ptr<_1dded9702_FnIns>& _231734_f) {
	if ((*((*(_231734_f))._field_decl))._method_is_void()) {
		return;
	}
	jule::Bool _232113_ok = _1c2c46634_has_ret((*(_231734_f))._field_scope);
	if ((!(_232113_ok))) {
		(*this)._method_push_err((*((*(_231734_f))._field_decl))._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	}
}



inline void _1c2c46634_Sema::_method_check_fn_ins_sc(jule::Ptr<_1dded9702_FnIns>& _232739_f,jule::Ptr<_1de0e938e_ScopeChecker>& _232755_sc) {
	if ((*((*(_232739_f))._field_decl))._field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ptr<_1c3c3d174_Var>> _233217_vars = _1c2c46634_build_ret_vars(_232739_f);
	(*((*(_232755_sc))._field_table))._field_vars=jule::append((*((*(_232755_sc))._field_table))._field_vars,_233217_vars);
	(*((*(_232755_sc))._field_table))._field_vars=jule::append((*((*(_232755_sc))._field_table))._field_vars,_1c2c46634_build_param_vars(_232739_f));
	(*((*(_232755_sc))._field_table))._field_type_aliases=jule::append((*((*(_232755_sc))._field_table))._field_type_aliases,_1c2c46634_build_generic_type_aliases(_232739_f));
	(*(_232755_sc))._method_check((*((*(_232739_f))._field_decl))._field_scope,(*(_232739_f))._field_scope);
	if (_233217_vars.len() > 0LL) {
		jule::Slice<jule::Any> _234221_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>((*((*(_232739_f))._field_scope))._field_stmts.len() + static_cast<jule::Int>(_233217_vars.len())));
		{
			auto &expr = _233217_vars;
			auto it = expr.begin();
			_iter_begin_1a8899e3e:;
			if (it != expr.end()) {
				jule::Ptr<_1c3c3d174_Var> _1c2c46634_v = *it;
				{
					_234221_stmts = jule::alloc_for_append(_234221_stmts,1);_234221_stmts.__push(jule::Any(_1c2c46634_v));
				}
				_iter_next_1a8899e3e:;
				++it;
				goto _iter_begin_1a8899e3e;
			}
			_iter_end_1a8899e3e:;
		}
		_234221_stmts=jule::append(_234221_stmts,(*((*(_232739_f))._field_scope))._field_stmts);
		(*((*(_232739_f))._field_scope))._field_stmts=_234221_stmts;
	}
	if ((!((*(_232755_sc))._method_stopped()))) {
		(*this)._method_check_rets(_232739_f);
	}
}



inline void _1c2c46634_Sema::_method_check_fn_ins(jule::Ptr<_1dded9702_FnIns>& _235737_f) {
	if ((*((*(_235737_f))._field_decl))._field_cpp_linked) {
		return;
	}
	jule::Ptr<_1a943b749_SymbolTable> _236217_old = (*((*((*(_235737_f))._field_decl))._field_sema))._field_file;
	__JULE_DEFER({
		(*((*((*(_235737_f))._field_decl))._field_sema))._method_set_current_file(_236217_old);
	});
	jule::Ptr<_1a943b749_SymbolTable> _236417_file = _1c2c46634_find_file((*((*((*(_235737_f))._field_decl))._field_sema))._field_files,(*((*(_235737_f))._field_decl))._field_token._field_file);
	if (_236417_file != nullptr) {
		(*((*((*(_235737_f))._field_decl))._field_sema))._method_set_current_file(_236417_file);
	}
	jule::Ptr<_1de0e938e_ScopeChecker> _236917_sc = _1de0e938e_new_scope_checker((*((*(_235737_f))._field_decl))._field_sema,_235737_f);
	(*(this->self))._method_check_fn_ins_sc(_235737_f,_236917_sc);
	if ((*((*(_235737_f))._field_decl))._field_sema != this->self) {
		(*(this->self))._field_errors=jule::append((*(this->self))._field_errors,(*((*((*(_235737_f))._field_decl))._field_sema))._field_errors);
		(*((*((*(_235737_f))._field_decl))._field_sema))._field_errors=nullptr;
	}
}



inline void _1c2c46634_Sema::_method_check_type_fn(jule::Ptr<_1dded9702_Fn>& _237838_f) {
	if ((*(_237838_f))._field_cpp_linked) {
		return;
	}
	if ((*(_237838_f))._field_generics.len() > 0LL) {
		return;
	}
	{
		auto &expr = (*(_237838_f))._field_instances;
		auto it = expr.begin();
		_iter_begin_1a88a409c:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_FnIns> _1c2c46634_ins = *it;
			{
				(*(this->self))._method_check_fn_ins(_1c2c46634_ins);
			}
			_iter_next_1a88a409c:;
			++it;
			goto _iter_begin_1a88a409c;
		}
		_iter_end_1a88a409c:;
	}
}



inline void _1c2c46634_Sema::_method_check_test_fn(jule::Ptr<_1dded9702_FnIns>& _239337_f) {
	if ((*((*(_239337_f))._field_decl))._field_public) {
		(*this)._method_push_err((*((*(_239337_f))._field_decl))._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;
	}
	if (((*(_239337_f))._field_params.len() != 1LL) || ((*(_239337_f))._field_result != nullptr)) {
		(*this)._method_push_err((*((*(_239337_f))._field_decl))._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a5e40a26_Sptr> _240617_sptr = (*((*((*(_239337_f))._field_params[0LL]))._field_kind))._method_sptr();
	if (_240617_sptr == nullptr) {
		(*this)._method_push_err((*((*(_239337_f))._field_decl))._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1dd0be530_StructIns> _241313_s = (*((*(_240617_sptr))._field_elem))._method_strct();
	if ((_241313_s == nullptr) || (!(_1c2c4607e_is_std_package((*((*((*(_241313_s))._field_decl))._field_token._field_file))._method_path(),jule::Str("testing", 7))))) {
		(*this)._method_push_err((*((*(_239337_f))._field_decl))._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
}



inline void _1c2c46634_Sema::_method_precheck_type_fn(jule::Ptr<_1dded9702_Fn>& _242141_f) {
	if ((*(_242141_f))._field_cpp_linked) {
		return;
	}
	if ((*(_242141_f))._field_generics.len() > 0LL) {
		return;
	}
	if ((*(_242141_f))._field_instances.len() == 0LL) {
		jule::Ptr<_1dded9702_FnIns> _243221_ins = (*(_242141_f))._method_instance();
		(*(_242141_f))._field_instances = jule::alloc_for_append((*(_242141_f))._field_instances,1);(*(_242141_f))._field_instances.__push(_243221_ins);
		(*(this->self))._method_reload_fn_ins_types(_243221_ins);
		(*(_243221_ins))._field_reloaded=true;
		if (_1a5e40a26_has_directive((*(_242141_f))._field_directives,jule::Str("test", 4))) {
			(*(this->self))._method_check_test_fn(_243221_ins);
		}
	}
}



inline void _1c2c46634_Sema::_method_precheck_fn_types(void) {
	{
		auto &expr = (*((*(this->self))._field_file))._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a88b1cd0:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1c2c46634_decl = *it;
			{
				(*(this->self))._method_precheck_type_fn(_1c2c46634_decl);
			}
			_iter_next_1a88b1cd0:;
			++it;
			goto _iter_begin_1a88b1cd0;
		}
		_iter_end_1a88b1cd0:;
	}
}



inline void _1c2c46634_Sema::_method_check_fn_types(void) {
	{
		auto &expr = (*((*(this->self))._field_file))._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a88b3045:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1c2c46634_decl = *it;
			{
				(*(this->self))._method_check_type_fn(_1c2c46634_decl);
			}
			_iter_next_1a88b3045:;
			++it;
			goto _iter_begin_1a88b3045;
		}
		_iter_end_1a88b3045:;
	}
}



inline void _1c2c46634_Sema::_method_check_package_types(void) {
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a88b4112:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_f = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_f);
				(*(this->self))._method_check_global_types();
			}
			_iter_next_1a88b4112:;
			++it;
			goto _iter_begin_1a88b4112;
		}
		_iter_end_1a88b4112:;
	}
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a88b4464:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_f = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_f);
				(*(this->self))._method_precheck_fn_types();
			}
			_iter_next_1a88b4464:;
			++it;
			goto _iter_begin_1a88b4464;
		}
		_iter_end_1a88b4464:;
	}
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a88b52bc:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_f = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_f);
				(*(this->self))._method_check_struct_types_operators();
			}
			_iter_next_1a88b52bc:;
			++it;
			goto _iter_begin_1a88b52bc;
		}
		_iter_end_1a88b52bc:;
	}
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a88b6c4c:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_f = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_f);
				(*(this->self))._method_check_struct_types();
			}
			_iter_next_1a88b6c4c:;
			++it;
			goto _iter_begin_1a88b6c4c;
		}
		_iter_end_1a88b6c4c:;
	}
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a88b7038:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_f = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_f);
				(*(this->self))._method_check_fn_types();
			}
			_iter_next_1a88b7038:;
			++it;
			goto _iter_begin_1a88b7038;
		}
		_iter_end_1a88b7038:;
	}
}



inline void _1c2c46634_Sema::_method_set_file_sema_fields(void) {
	{
		auto &expr = (*((*(this->self))._field_file))._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a88b9205:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1c2c46634_f = *it;
			{
				(*(_1c2c46634_f))._field_sema=this->self;
			}
			_iter_next_1a88b9205:;
			++it;
			goto _iter_begin_1a88b9205;
		}
		_iter_end_1a88b9205:;
	}
	{
		auto &expr = (*((*(this->self))._field_file))._field_structs;
		auto it = expr.begin();
		_iter_begin_1a88b958a:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> _1c2c46634_st = *it;
			{
				(*(_1c2c46634_st))._field_sema=this->self;
			}
			_iter_next_1a88b958a:;
			++it;
			goto _iter_begin_1a88b958a;
		}
		_iter_end_1a88b958a:;
	}
}



inline void _1c2c46634_Sema::_method_set_sema_fields(void) {
	{
		auto &expr = (*(this->self))._field_files;
		auto it = expr.begin();
		_iter_begin_1a88ba954:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_file = *it;
			{
				(*(this->self))._method_set_current_file(_1c2c46634_file);
				(*(this->self))._method_set_file_sema_fields();
			}
			_iter_next_1a88ba954:;
			++it;
			goto _iter_begin_1a88ba954;
		}
		_iter_end_1a88ba954:;
	}
}



inline void _1c2c46634_Sema::_method_check(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>& _250430_files) {
	(*(this->self))._field_files=_250430_files;
	(*(this->self))._method_check_imports();
	if ((*(this->self))._field_errors.len() != 0LL) {
		return;
	}
	(*(this->self))._method_check_enums();
	if ((*(this->self))._field_errors.len() != 0LL) {
		return;
	}
	(*(this->self))._method_set_sema_fields();
	(*(this->self))._method_impl_impls();
	if ((*(this->self))._field_errors.len() != 0LL) {
		return;
	}
	(*(this->self))._method_check_package_decls();
	if ((*(this->self))._field_errors.len() != 0LL) {
		return;
	}
	(*(this->self))._method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _1c2c46634_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1c3c3d174_IterRelation &_Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_dispose(jule::Ptr<_1dded9702_Fn> _1027_f) {
	return ((((((((((_1027_f != nullptr) && ((*(_1027_f))._field_owner != nullptr)) && ((*(_1027_f))._field_ident == jule::Str("dispose", 7))) && (!((*(_1027_f))._field_statically))) && (!((*(_1027_f))._field_unsafety))) && (*(_1027_f))._field_public) && (*(_1027_f))._method_is_void()) && ((*(_1027_f))._field_generics.len() == 0LL)) && ((*(_1027_f))._field_params.len() == 1LL)) && (*((*(_1027_f))._field_params[0LL]))._field_mutable) && (!((*((*(_1027_f))._field_params[0LL]))._method_is_ref()));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_to_str(jule::Ptr<_1dded9702_Fn> _2526_f) {
	if (((((((((((_2526_f == nullptr) || ((*(_2526_f))._field_owner == nullptr)) || ((*(_2526_f))._field_ident != jule::Str("to_str", 6))) || (*(_2526_f))._field_statically) || (*(_2526_f))._field_unsafety) || (!((*(_2526_f))._field_public))) || (*(_2526_f))._method_is_void()) || ((*(_2526_f))._field_generics.len() != 0LL)) || ((*(_2526_f))._field_params.len() != 1LL)) || (*((*(_2526_f))._field_params[0LL]))._field_mutable) || (*((*(_2526_f))._field_params[0LL]))._method_is_ref()) {
		return false;
	}
	jule::Ptr<_1dded9702_FnIns> _4017_ins = (*(_2526_f))._field_instances[0LL];
	jule::Ptr<_1a5e40a26_Prim> _4113_prim = (*((*(_4017_ins))._field_result))._method_prim();
	if (_4113_prim == nullptr) {
		return false;
	}
	return (*(_4113_prim))._method_is_str();
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_logical(jule::Ptr<_1dded9702_Fn>& _4824_f,jule::Str _4832_ident) {
	if ((((((((((((((_4824_f == nullptr) || ((*(_4824_f))._field_ident != _4832_ident)) || ((*(_4824_f))._field_owner == nullptr)) || ((*(_4824_f))._field_instances.len() == 0LL)) || (*(_4824_f))._field_statically) || (*(_4824_f))._field_unsafety) || (!((*(_4824_f))._field_public))) || (*(_4824_f))._method_is_void()) || ((*(_4824_f))._field_generics.len() != 0LL)) || ((*(_4824_f))._field_params.len() != 2LL)) || (*((*(_4824_f))._field_params[0LL]))._field_mutable) || (*((*(_4824_f))._field_params[0LL]))._method_is_ref()) || (*((*(_4824_f))._field_params[1LL]))._field_mutable) || (*((*(_4824_f))._field_params[1LL]))._field_reference) {
		return false;
	}
	jule::Ptr<_1dded9702_FnIns> _6617_ins = (*(_4824_f))._field_instances[0LL];
	jule::Ptr<_1a5e40a26_Prim> _6713_prim = (*((*(_6617_ins))._field_result))._method_prim();
	if ((_6713_prim == nullptr) || (!((*(_6713_prim))._method_is_bool()))) {
		return false;
	}
	return (*(_6617_ins))._field_owner == (*((*((*(_6617_ins))._field_params[1LL]))._field_kind))._method_strct();
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_eq(jule::Ptr<_1dded9702_Fn> _7522_f) {
	return _1c3c3d350_FuncPattern::_static_method_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_gt(jule::Ptr<_1dded9702_Fn> _8022_f) {
	return _1c3c3d350_FuncPattern::_static_method_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_gt_eq(jule::Ptr<_1dded9702_Fn> _8525_f) {
	return _1c3c3d350_FuncPattern::_static_method_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_lt(jule::Ptr<_1dded9702_Fn> _9022_f) {
	return _1c3c3d350_FuncPattern::_static_method_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_lt_eq(jule::Ptr<_1dded9702_Fn> _9525_f) {
	return _1c3c3d350_FuncPattern::_static_method_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_result(jule::Ptr<_1dded9702_Fn>& _9923_f,jule::Str _9931_ident) {
	if ((((((((((((((_9923_f == nullptr) || ((*(_9923_f))._field_ident != _9931_ident)) || ((*(_9923_f))._field_owner == nullptr)) || ((*(_9923_f))._field_instances.len() == 0LL)) || (*(_9923_f))._field_statically) || (*(_9923_f))._field_unsafety) || (!((*(_9923_f))._field_public))) || (*(_9923_f))._method_is_void()) || ((*(_9923_f))._field_generics.len() != 0LL)) || ((*(_9923_f))._field_params.len() != 2LL)) || (*((*(_9923_f))._field_params[0LL]))._field_mutable) || (*((*(_9923_f))._field_params[0LL]))._method_is_ref()) || (*((*(_9923_f))._field_params[1LL]))._field_mutable) || (*((*(_9923_f))._field_params[1LL]))._field_reference) {
		return false;
	}
	jule::Ptr<_1dded9702_FnIns> _11717_ins = (*(_9923_f))._field_instances[0LL];
	if ((*((*(_11717_ins))._field_result))._method_strct() != (*(_11717_ins))._field_owner) {
		return false;
	}
	return (*(_11717_ins))._field_owner == (*((*((*(_11717_ins))._field_params[1LL]))._field_kind))._method_strct();
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_shl(jule::Ptr<_1dded9702_Fn> _12523_f) {
	return _1c3c3d350_FuncPattern::_static_method_result(_12523_f,jule::Str("shl", 3));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_shr(jule::Ptr<_1dded9702_Fn> _13023_f) {
	return _1c3c3d350_FuncPattern::_static_method_result(_13023_f,jule::Str("shr", 3));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_add(jule::Ptr<_1dded9702_Fn> _13523_f) {
	return _1c3c3d350_FuncPattern::_static_method_result(_13523_f,jule::Str("add", 3));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_sub(jule::Ptr<_1dded9702_Fn> _14023_f) {
	return _1c3c3d350_FuncPattern::_static_method_result(_14023_f,jule::Str("sub", 3));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_div(jule::Ptr<_1dded9702_Fn> _14523_f) {
	return _1c3c3d350_FuncPattern::_static_method_result(_14523_f,jule::Str("div", 3));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_mul(jule::Ptr<_1dded9702_Fn> _15023_f) {
	return _1c3c3d350_FuncPattern::_static_method_result(_15023_f,jule::Str("mul", 3));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_mod(jule::Ptr<_1dded9702_Fn> _15523_f) {
	return _1c3c3d350_FuncPattern::_static_method_result(_15523_f,jule::Str("mod", 3));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_bit_and(jule::Ptr<_1dded9702_Fn> _16027_f) {
	return _1c3c3d350_FuncPattern::_static_method_result(_16027_f,jule::Str("bit_and", 7));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_bit_or(jule::Ptr<_1dded9702_Fn> _16526_f) {
	return _1c3c3d350_FuncPattern::_static_method_result(_16526_f,jule::Str("bit_or", 6));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_bit_xor(jule::Ptr<_1dded9702_Fn> _17027_f) {
	return _1c3c3d350_FuncPattern::_static_method_result(_17027_f,jule::Str("bit_xor", 7));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_unary(jule::Ptr<_1dded9702_Fn>& _17422_f,jule::Str _17430_ident) {
	if ((((((((((((_17422_f == nullptr) || ((*(_17422_f))._field_ident != _17430_ident)) || ((*(_17422_f))._field_owner == nullptr)) || ((*(_17422_f))._field_instances.len() == 0LL)) || (*(_17422_f))._field_statically) || (*(_17422_f))._field_unsafety) || (!((*(_17422_f))._field_public))) || (*(_17422_f))._method_is_void()) || ((*(_17422_f))._field_generics.len() != 0LL)) || ((*(_17422_f))._field_params.len() != 1LL)) || (*((*(_17422_f))._field_params[0LL]))._field_mutable) || (*((*(_17422_f))._field_params[0LL]))._method_is_ref()) {
		return false;
	}
	jule::Ptr<_1dded9702_FnIns> _19017_ins = (*(_17422_f))._field_instances[0LL];
	return (*((*(_19017_ins))._field_result))._method_strct() == (*(_19017_ins))._field_owner;
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_neg(jule::Ptr<_1dded9702_Fn> _19523_f) {
	return _1c3c3d350_FuncPattern::_static_method_unary(_19523_f,jule::Str("neg", 3));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_pos(jule::Ptr<_1dded9702_Fn> _20023_f) {
	return _1c3c3d350_FuncPattern::_static_method_unary(_20023_f,jule::Str("pos", 3));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_bit_not(jule::Ptr<_1dded9702_Fn> _20527_f) {
	return _1c3c3d350_FuncPattern::_static_method_unary(_20527_f,jule::Str("bit_not", 7));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_assign(jule::Ptr<_1dded9702_Fn>& _20923_f,jule::Str _20931_ident) {
	if ((((((((((((((_20923_f == nullptr) || ((*(_20923_f))._field_ident != _20931_ident)) || ((*(_20923_f))._field_owner == nullptr)) || ((*(_20923_f))._field_instances.len() == 0LL)) || (*(_20923_f))._field_statically) || (*(_20923_f))._field_unsafety) || (!((*(_20923_f))._field_public))) || (!((*(_20923_f))._method_is_void()))) || ((*(_20923_f))._field_generics.len() != 0LL)) || ((*(_20923_f))._field_params.len() != 2LL)) || (!((*((*(_20923_f))._field_params[0LL]))._field_mutable))) || (*((*(_20923_f))._field_params[0LL]))._method_is_ref()) || (*((*(_20923_f))._field_params[1LL]))._field_mutable) || (*((*(_20923_f))._field_params[1LL]))._field_reference) {
		return false;
	}
	jule::Ptr<_1dded9702_FnIns> _22717_ins = (*(_20923_f))._field_instances[0LL];
	return (*(_22717_ins))._field_owner == (*((*((*(_22717_ins))._field_params[1LL]))._field_kind))._method_strct();
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_add_assign(jule::Ptr<_1dded9702_Fn> _23230_f) {
	return _1c3c3d350_FuncPattern::_static_method_assign(_23230_f,jule::Str("add_assign", 10));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_sub_assign(jule::Ptr<_1dded9702_Fn> _23730_f) {
	return _1c3c3d350_FuncPattern::_static_method_assign(_23730_f,jule::Str("sub_assign", 10));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_div_assign(jule::Ptr<_1dded9702_Fn> _24230_f) {
	return _1c3c3d350_FuncPattern::_static_method_assign(_24230_f,jule::Str("div_assign", 10));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_mul_assign(jule::Ptr<_1dded9702_Fn> _24730_f) {
	return _1c3c3d350_FuncPattern::_static_method_assign(_24730_f,jule::Str("mul_assign", 10));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_mod_assign(jule::Ptr<_1dded9702_Fn> _25230_f) {
	return _1c3c3d350_FuncPattern::_static_method_assign(_25230_f,jule::Str("mod_assign", 10));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_shl_assign(jule::Ptr<_1dded9702_Fn> _25730_f) {
	return _1c3c3d350_FuncPattern::_static_method_assign(_25730_f,jule::Str("shl_assign", 10));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_shr_assign(jule::Ptr<_1dded9702_Fn> _26230_f) {
	return _1c3c3d350_FuncPattern::_static_method_assign(_26230_f,jule::Str("shr_assign", 10));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_bit_or_assign(jule::Ptr<_1dded9702_Fn> _26733_f) {
	return _1c3c3d350_FuncPattern::_static_method_assign(_26733_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_bit_and_assign(jule::Ptr<_1dded9702_Fn> _27234_f) {
	return _1c3c3d350_FuncPattern::_static_method_assign(_27234_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool _1c3c3d350_FuncPattern::_static_method_bit_xor_assign(jule::Ptr<_1dded9702_Fn> _27734_f) {
	return _1c3c3d350_FuncPattern::_static_method_assign(_27734_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, const _1c3c3d350_FuncPattern &_Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c3c3d174_Var> _1a93c7a48_RangeChecker::_method_build_var(jule::Ptr<_1dd05c765_VarDecl>& _90429_decl) {
	jule::Ptr<_1c3c3d174_Var> _90517_v = _1dded9779_build_var(_90429_decl);
	return _90517_v;
}



inline void _1a93c7a48_RangeChecker::_method_set_size_key(void) {
	if (((*((*this)._field_rang))._field_key_a == nullptr) || _1dd05db0c_is_ignore_ident((*((*((*this)._field_rang))._field_key_a))._field_ident)) {
		return;
	}
	(*((*this)._field_kind))._field_key_a=(*this)._method_build_var((*((*this)._field_rang))._field_key_a);
	(*((*((*this)._field_kind))._field_key_a))._field_kind=jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3))))));
	{
		auto &_match_expr{ (*((*this)._field_d))._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
			_case_begin_1a89ad44d:;
			{
				(*((*((*this)._field_kind))._field_key_a))._field_iter_relation=jule::new_struct<_1c3c3d174_IterRelation>(new( std::nothrow ) _1c3c3d174_IterRelation((*((*this)._field_d))._field_model.operator jule::Ptr<_1c3c3d174_Var>()));
			}
		}
		_match_end_1a89ad3c6:;
	}
}



inline void _1a93c7a48_RangeChecker::_method_check_range_expr_validity(jule::Ptr<_1a94c333b_Data>& _93549_d,jule::Ptr<_1c3c3d174_Var>& _93560_key,jule::Ptr<_1a5e40a26_TypeKind>& _93576_k) {
	jule::Bool _93617__mut = (*(_93560_key))._field_mutable;
	if (_93617__mut && (!((*(_93576_k))._method_mutable()))) {
		_93617__mut=false;
	}
	(*((*((*this)._field_sc))._field_s))._method_check_validity_for_init_expr(_93617__mut,(*(_93560_key))._field_reference,(*((*(_93560_key))._field_kind))._field_kind,_93549_d,(*((*this)._field_rang))._field_in_token);
}



inline void _1a93c7a48_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if (((*((*this)._field_rang))._field_key_b == nullptr) || _1dd05db0c_is_ignore_ident((*((*((*this)._field_rang))._field_key_b))._field_ident)) {
		return;
	}
	jule::Ptr<_1a5e40a26_Slc> _95417_slc = (*((*((*this)._field_d))._field_kind))._method_slc();
	(*((*this)._field_kind))._field_key_b=(*this)._method_build_var((*((*this)._field_rang))._field_key_b);
	(*((*((*this)._field_kind))._field_key_b))._field_kind=jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),(*(_95417_slc))._field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*((*this)._field_kind))._field_key_b,(*(_95417_slc))._field_elem);
}



inline void _1a93c7a48_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if (((*((*this)._field_rang))._field_key_b == nullptr) || _1dd05db0c_is_ignore_ident((*((*((*this)._field_rang))._field_key_b))._field_ident)) {
		return;
	}
	jule::Ptr<_1a5e40a26_Arr> _96717_arr = (*((*((*this)._field_d))._field_kind))._method_arr();
	(*((*this)._field_kind))._field_key_b=(*this)._method_build_var((*((*this)._field_rang))._field_key_b);
	(*((*((*this)._field_kind))._field_key_b))._field_kind=jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),(*(_96717_arr))._field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*((*this)._field_kind))._field_key_b,(*(_96717_arr))._field_elem);
}



inline void _1a93c7a48_RangeChecker::_method_check_map_key_a(void) {
	if (((*((*this)._field_rang))._field_key_a == nullptr) || _1dd05db0c_is_ignore_ident((*((*((*this)._field_rang))._field_key_a))._field_ident)) {
		return;
	}
	jule::Ptr<_1a5e40a26_Map> _97917_m = (*((*((*this)._field_d))._field_kind))._method_map();
	(*((*this)._field_kind))._field_key_a=(*this)._method_build_var((*((*this)._field_rang))._field_key_a);
	(*((*((*this)._field_kind))._field_key_a))._field_kind=jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),(*(_97917_m))._field_key));
	jule::Ptr<_1a94c333b_Data> _98317_d = jule::new_ptr<_1a94c333b_Data>((*((*this)._field_d)));
	(*(_98317_d))._field_kind=(*(_97917_m))._field_key;
	(*this)._method_check_range_expr_validity(_98317_d,(*((*this)._field_kind))._field_key_a,(*(_97917_m))._field_key);
}



inline void _1a93c7a48_RangeChecker::_method_check_map_key_b(void) {
	if (((*((*this)._field_rang))._field_key_b == nullptr) || _1dd05db0c_is_ignore_ident((*((*((*this)._field_rang))._field_key_b))._field_ident)) {
		return;
	}
	jule::Ptr<_1a5e40a26_Map> _99417_m = (*((*((*this)._field_d))._field_kind))._method_map();
	(*((*this)._field_kind))._field_key_b=(*this)._method_build_var((*((*this)._field_rang))._field_key_b);
	(*((*((*this)._field_kind))._field_key_b))._field_kind=jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),(*(_99417_m))._field_val));
	jule::Ptr<_1a94c333b_Data> _99817_d = jule::new_ptr<_1a94c333b_Data>((*((*this)._field_d)));
	(*(_99817_d))._field_kind=(*(_99417_m))._field_val;
	(*this)._method_check_range_expr_validity(_99817_d,(*((*this)._field_kind))._field_key_b,(*(_99417_m))._field_val);
}



inline void _1a93c7a48_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _1a93c7a48_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if (((*((*this)._field_rang))._field_key_b == nullptr) || _1dd05db0c_is_ignore_ident((*((*((*this)._field_rang))._field_key_b))._field_ident)) {
		return;
	}
	(*((*this)._field_kind))._field_key_b=(*this)._method_build_var((*((*this)._field_rang))._field_key_b);
	(*((*((*this)._field_kind))._field_key_b))._field_kind=jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _1a93c7a48_RangeChecker::_method_check(void) {
	{
		
		if ((*((*((*this)._field_d))._field_kind))._field_variadic) {
			_case_begin_1a89c6752:;
		}
		else if ((*((*((*this)._field_d))._field_kind))._method_slc() != nullptr) {
			_case_begin_1a89c58e9:;
			{
				(*this)._method_check_slice();
				return true;
			}
		}
		else if ((*((*((*this)._field_d))._field_kind))._method_arr() != nullptr) {
			_case_begin_1a89c5960:;
			{
				(*this)._method_check_array();
				return true;
			}
		}
		else if ((*((*((*this)._field_d))._field_kind))._method_map() != nullptr) {
			_case_begin_1a89c59c6:;
			{
				(*this)._method_check_map();
				return true;
			}
		}
		else {
			_case_begin_1a89c5795:;
			{
				jule::Ptr<_1a5e40a26_Prim> _103717_prim = (*((*((*this)._field_d))._field_kind))._method_prim();
				if ((_103717_prim != nullptr) && (*(_103717_prim))._method_is_str()) {
					(*this)._method_check_str();
					return true;
				}
			}
		}
		_match_end_1a89c56c9:;
	}
	(*((*((*this)._field_sc))._field_s))._method_push_err((*((*this)._field_rang))._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a93c7a48_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1a943b749_SymbolTable::_method_find_package(jule::Str _2535_ident) {
	{
		auto &expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_1a89e222e:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1a943b749_pkg = *it;
			{
				if ((*(_1a943b749_pkg))._field_ident == _2535_ident) {
					return _1a943b749_pkg;
				}
			}
			_iter_next_1a89e222e:;
			++it;
			goto _iter_begin_1a89e222e;
		}
		_iter_end_1a89e222e:;
	}
	return nullptr;
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1a943b749_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)> _3737_selector) {
	if (_3737_selector == nullptr) {
		return nullptr;
	}
	{
		auto &expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_1a89e384b:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1a943b749_pkg = *it;
			{
				if (_3737_selector(_1a943b749_pkg)) {
					return _1a943b749_pkg;
				}
			}
			_iter_next_1a89e384b:;
			++it;
			goto _iter_begin_1a89e384b;
		}
		_iter_end_1a89e384b:;
	}
	return nullptr;
}



inline jule::Ptr<_1c3c3d174_Var> _1a943b749_SymbolTable::_method_find_var(jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return (*this)._method___find_var(_5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_1a5e40a26_TypeAlias> _1a943b749_SymbolTable::_method_find_type_alias(jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return (*this)._method___find_type_alias(_5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_1dd0be530_Struct> _1a943b749_SymbolTable::_method_find_struct(jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_1a89e74cb:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> _1a943b749_s = *it;
			{
				if (((*(_1a943b749_s))._field_ident == _6434_ident) && ((*(_1a943b749_s))._field_cpp_linked == _6446_cpp_linked)) {
					return _1a943b749_s;
				}
			}
			_iter_next_1a89e74cb:;
			++it;
			goto _iter_begin_1a89e74cb;
		}
		_iter_end_1a89e74cb:;
	}
	return nullptr;
}



inline jule::Ptr<_1dded9702_Fn> _1a943b749_SymbolTable::_method_find_fn(jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a89e9159:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1a943b749_f = *it;
			{
				if (((*(_1a943b749_f))._field_ident == _7530_ident) && ((*(_1a943b749_f))._field_cpp_linked == _7542_cpp_linked)) {
					return _1a943b749_f;
				}
			}
			_iter_next_1a89e9159:;
			++it;
			goto _iter_begin_1a89e9159;
		}
		_iter_end_1a89e9159:;
	}
	return nullptr;
}



inline jule::Ptr<_1de043c01_Trait> _1a943b749_SymbolTable::_method_find_trait(jule::Str _8633_ident) {
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_1a89ea90d:;
		if (it != expr.end()) {
			jule::Ptr<_1de043c01_Trait> _1a943b749_t = *it;
			{
				if ((*(_1a943b749_t))._field_ident == _8633_ident) {
					return _1a943b749_t;
				}
			}
			_iter_next_1a89ea90d:;
			++it;
			goto _iter_begin_1a89ea90d;
		}
		_iter_end_1a89ea90d:;
	}
	return nullptr;
}



inline jule::Ptr<_1de0dbeb9_Enum> _1a943b749_SymbolTable::_method_find_enum(jule::Str _9732_ident) {
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_1a89ebd2c:;
		if (it != expr.end()) {
			jule::Ptr<_1de0dbeb9_Enum> _1a943b749_e = *it;
			{
				if ((*(_1a943b749_e))._field_ident == _9732_ident) {
					return _1a943b749_e;
				}
			}
			_iter_next_1a89ebd2c:;
			++it;
			goto _iter_begin_1a89ebd2c;
		}
		_iter_end_1a89ebd2c:;
	}
	return nullptr;
}



inline jule::Ptr<_1c3c3d174_Var> _1a943b749_SymbolTable::_method___find_var(jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::Int _11021_i = (*this)._field_vars.len() - 1LL;
		for (; _11021_i >= 0LL; (_11021_i)--) {
			{
				jule::Ptr<_1c3c3d174_Var> _11225_v = (*this)._field_vars[_11021_i];
				if (((*(_11225_v))._field_ident == _10829_ident) && ((*(_11225_v))._field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_1a89edc63:;
		}
		_iter_end_1a89edc63:;
	} else {
		{
			auto &expr = (*this)._field_vars;
			auto it = expr.begin();
			_iter_begin_1a8a00292:;
			if (it != expr.end()) {
				jule::Ptr<_1c3c3d174_Var> _1a943b749_v = *it;
				{
					if (((*(_1a943b749_v))._field_ident == _10829_ident) && ((*(_1a943b749_v))._field_cpp_linked == _10841_cpp_linked)) {
						return _1a943b749_v;
					}
				}
				_iter_next_1a8a00292:;
				++it;
				goto _iter_begin_1a8a00292;
			}
			_iter_end_1a8a00292:;
		}
	}
	return nullptr;
}



inline jule::Ptr<_1a5e40a26_TypeAlias> _1a943b749_SymbolTable::_method___find_type_alias(jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::Int _12921_i = (*this)._field_type_aliases.len() - 1LL;
		for (; _12921_i >= 0LL; (_12921_i)--) {
			{
				jule::Ptr<_1a5e40a26_TypeAlias> _13125_ta = (*this)._field_type_aliases[_12921_i];
				if (((*(_13125_ta))._field_ident == _12736_ident) && ((*(_13125_ta))._field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_1a8a02162:;
		}
		_iter_end_1a8a02162:;
	} else {
		{
			auto &expr = (*this)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1a8a03691:;
			if (it != expr.end()) {
				jule::Ptr<_1a5e40a26_TypeAlias> _1a943b749_ta = *it;
				{
					if (((*(_1a943b749_ta))._field_ident == _12736_ident) && ((*(_1a943b749_ta))._field_cpp_linked == _12748_cpp_linked)) {
						return _1a943b749_ta;
					}
				}
				_iter_next_1a8a03691:;
				++it;
				goto _iter_begin_1a8a03691;
			}
			_iter_end_1a8a03691:;
		}
	}
	return nullptr;
}



inline jule::Any _1a943b749_SymbolTable::_method_def_by_ident(jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_1a8a0363b:;
		if (it != expr.end()) {
			jule::Ptr<_1c3c3d174_Var> _1a943b749_v = *it;
			{
				if (((*(_1a943b749_v))._field_ident == _14831_ident) && ((*(_1a943b749_v))._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1a943b749_v);
				}
			}
			_iter_next_1a8a0363b:;
			++it;
			goto _iter_begin_1a8a0363b;
		}
		_iter_end_1a8a0363b:;
	}
	{
		auto &expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a8a0541d:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e40a26_TypeAlias> _1a943b749_ta = *it;
			{
				if (((*(_1a943b749_ta))._field_ident == _14831_ident) && ((*(_1a943b749_ta))._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1a943b749_ta);
				}
			}
			_iter_next_1a8a0541d:;
			++it;
			goto _iter_begin_1a8a0541d;
		}
		_iter_end_1a8a0541d:;
	}
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8a06595:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> _1a943b749_s = *it;
			{
				if (((*(_1a943b749_s))._field_ident == _14831_ident) && ((*(_1a943b749_s))._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1a943b749_s);
				}
			}
			_iter_next_1a8a06595:;
			++it;
			goto _iter_begin_1a8a06595;
		}
		_iter_end_1a8a06595:;
	}
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a8a07475:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1a943b749_f = *it;
			{
				if (((*(_1a943b749_f))._field_ident == _14831_ident) && ((*(_1a943b749_f))._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1a943b749_f);
				}
			}
			_iter_next_1a8a07475:;
			++it;
			goto _iter_begin_1a8a07475;
		}
		_iter_end_1a8a07475:;
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_1a8a088e9:;
		if (it != expr.end()) {
			jule::Ptr<_1de043c01_Trait> _1a943b749_t = *it;
			{
				if ((*(_1a943b749_t))._field_ident == _14831_ident) {
					return jule::Any(_1a943b749_t);
				}
			}
			_iter_next_1a8a088e9:;
			++it;
			goto _iter_begin_1a8a088e9;
		}
		_iter_end_1a8a088e9:;
	}
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_1a8a0780a:;
		if (it != expr.end()) {
			jule::Ptr<_1de0dbeb9_Enum> _1a943b749_e = *it;
			{
				if ((*(_1a943b749_e))._field_ident == _14831_ident) {
					return jule::Any(_1a943b749_e);
				}
			}
			_iter_next_1a8a0780a:;
			++it;
			goto _iter_begin_1a8a0780a;
		}
		_iter_end_1a8a0780a:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1a943b749_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_1a8a0a742:;
		if (it != expr.end()) {
			jule::Ptr<_1c3c3d174_Var> &_1a943b749_v = *it;
			{
				if (((static_cast<jule::Uintptr>(_1a943b749_v) != _19534_itself) && ((*(_1a943b749_v))._field_ident == _19551_ident)) && ((*(_1a943b749_v))._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1a8a0a742:;
			++it;
			goto _iter_begin_1a8a0a742;
		}
		_iter_end_1a8a0a742:;
	}
	{
		auto &expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a8a0b27b:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e40a26_TypeAlias> &_1a943b749_ta = *it;
			{
				if (((static_cast<jule::Uintptr>(_1a943b749_ta) != _19534_itself) && ((*(_1a943b749_ta))._field_ident == _19551_ident)) && ((*(_1a943b749_ta))._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1a8a0b27b:;
			++it;
			goto _iter_begin_1a8a0b27b;
		}
		_iter_end_1a8a0b27b:;
	}
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8a0ab4e:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> &_1a943b749_s = *it;
			{
				if (((static_cast<jule::Uintptr>(_1a943b749_s) != _19534_itself) && ((*(_1a943b749_s))._field_ident == _19551_ident)) && ((*(_1a943b749_s))._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1a8a0ab4e:;
			++it;
			goto _iter_begin_1a8a0ab4e;
		}
		_iter_end_1a8a0ab4e:;
	}
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a8a0e2c3:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> &_1a943b749_f = *it;
			{
				if (((static_cast<jule::Uintptr>(_1a943b749_f) != _19534_itself) && ((*(_1a943b749_f))._field_ident == _19551_ident)) && ((*(_1a943b749_f))._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1a8a0e2c3:;
			++it;
			goto _iter_begin_1a8a0e2c3;
		}
		_iter_end_1a8a0e2c3:;
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_1a8a10835:;
		if (it != expr.end()) {
			jule::Ptr<_1de043c01_Trait> &_1a943b749_t = *it;
			{
				if ((static_cast<jule::Uintptr>(_1a943b749_t) != _19534_itself) && ((*(_1a943b749_t))._field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_1a8a10835:;
			++it;
			goto _iter_begin_1a8a10835;
		}
		_iter_end_1a8a10835:;
	}
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_1a8a0abe8:;
		if (it != expr.end()) {
			jule::Ptr<_1de0dbeb9_Enum> &_1a943b749_e = *it;
			{
				if ((static_cast<jule::Uintptr>(_1a943b749_e) != _19534_itself) && ((*(_1a943b749_e))._field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_1a8a0abe8:;
			++it;
			goto _iter_begin_1a8a0abe8;
		}
		_iter_end_1a8a0abe8:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a943b749_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a94c333b_Data::_method_is_nil(void) {
	return (*((*this)._field_kind))._method_is_nil();
}



inline jule::Bool _1a94c333b_Data::_method_is_void(void) {
	return (*((*this)._field_kind))._method_void();
}



inline jule::Bool _1a94c333b_Data::_method_is_const(void) {
	return (*this)._field_constant != nullptr;
}



inline jule::Bool _1a94c333b_Data::_method_good_operand(jule::Ptr<_1a94c333b_Data>& _30736_other) {
	return ((((*((*(_30736_other))._field_kind))._method_prim() == nullptr) || (!((*((*((*(_30736_other))._field_kind))._method_prim()))._method_is_any()))) && ((*((*(_30736_other))._field_kind))._method_trt() == nullptr)) && (!((*((*this)._field_kind))._method_is_nil()));
}







std::ostream &operator<<(std::ostream &_Stream, const _1a94c333b_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a94c333b_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1a94c333b_Eval::_method_push_err(_1dd05db0c_Token _33427_token,jule::Str _33441_fmt,jule::Slice<jule::Any> _33454_args) {
	(*((*this)._field_s))._method_push_err(_33427_token,_33441_fmt,_33454_args);
}



inline void _1a94c333b_Eval::_method_push_suggestion(jule::Str _33934_fmt,jule::Slice<jule::Any> _33947_args) {
	(*((*this)._field_s))._method_push_suggestion(_33934_fmt,_33947_args);
}



inline void _1a94c333b_Eval::_method_allow_builtin(void) {
	(*this)._field_dis_builtin=false;
}



inline void _1a94c333b_Eval::_method_disallow_builtin(void) {
	(*this)._field_dis_builtin=true;
}



inline jule::Bool _1a94c333b_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _1a94c333b_Eval::_method_is_global(void) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c46634_Sema>>()) {
			_case_begin_1a8a19c5c:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a8a19e27:;
			{
				return false;
			}
		}
		_match_end_1a8a19dc2:;
	}
}



inline void _1a94c333b_Eval::_method_apply_numeric_prefix(jule::Ptr<_1a94c333b_Data>& _35744_d) {
	if ((((_35744_d == nullptr) || ((*(_35744_d))._field_cast_kind != nullptr)) || (!((*(_35744_d))._method_is_const()))) || ((*((*(_35744_d))._field_kind))._method_prim() == nullptr)) {
		return;
	}
	if (((*this)._field_prefix == nullptr) || ((*((*this)._field_prefix))._method_prim() == nullptr)) {
		return;
	}
	jule::Str _36513_pk = (*((*((*this)._field_prefix))._method_prim()))._field_kind;
	{
		
		if (_1a6539949_is_float(_36513_pk)) {
			_case_begin_1a8a1d953:;
			{
				(*(_35744_d))._field_kind=jule::new_ptr<_1a5e40a26_TypeKind>((*((*this)._field_prefix)));
				(*((*(_35744_d))._field_constant))._method_set_f64(static_cast<jule::F64>((*((*(_35744_d))._field_constant))._method_as_f64()));
			}
		}
		else if (_1a6539949_is_sig_int(_36513_pk)) {
			_case_begin_1a8a1d9ca:;
			{
				if ((!(_1a93c7a48_int_assignable(_36513_pk,_35744_d)))) {
					goto _match_end_1a8a1d887;
				}
				(*(_35744_d))._field_kind=jule::new_ptr<_1a5e40a26_TypeKind>((*((*this)._field_prefix)));
				(*((*(_35744_d))._field_constant))._method_set_i64(static_cast<jule::I64>((*((*(_35744_d))._field_constant))._method_as_i64()));
			}
		}
		else if (_1a6539949_is_unsig_int(_36513_pk)) {
			_case_begin_1a8a1da52:;
			{
				if ((!(_1a93c7a48_int_assignable(_36513_pk,_35744_d)))) {
					goto _match_end_1a8a1d887;
				}
				(*(_35744_d))._field_kind=jule::new_ptr<_1a5e40a26_TypeKind>((*((*this)._field_prefix)));
				(*((*(_35744_d))._field_constant))._method_set_u64(static_cast<jule::U64>((*((*(_35744_d))._field_constant))._method_as_u64()));
			}
		}
		_match_end_1a8a1d887:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_lit_nil(void) {
	jule::Ptr<_1a64669ca_Const> _38917_constant = _1a64669ca_Const::_static_method_new_nil();
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_38917_constant),false,_38917_constant));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_lit_str(jule::Ptr<_1dd05c765_LitExpr>& _40023_l) {
	jule::Str _40117_s = (*(_40023_l))._field_value.slice(1LL,(*(_40023_l))._field_value.len() - 1LL);
	if (_1dd05db0c_is_raw_str((*(_40023_l))._field_value)) {
		_40117_s=_1a65aa3c1_to_raw_str(static_cast<jule::Slice<jule::U8>>(_40117_s));
	} else {
		_40117_s=_1a65aa3c1_to_str(static_cast<jule::Slice<jule::U8>>(_40117_s));
	}
	jule::Ptr<_1a64669ca_Const> _40717_constant = _1a64669ca_Const::_static_method_new_str(_40117_s);
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("str", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_40717_constant),false,_40717_constant));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_lit_bool(jule::Ptr<_1dd05c765_LitExpr>& _42124_l) {
	jule::Ptr<_1a64669ca_Const> _42217_constant = _1a64669ca_Const::_static_method_new_bool(((*(_42124_l))._field_value == jule::Str("true", 4)));
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_42217_constant),false,_42217_constant));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_lit_rune(jule::Ptr<_1dd05c765_LitExpr>& _43524_l) {
	
	
	jule::Str _43913_lt = (*(_43524_l))._field_value.slice(1LL,(*(_43524_l))._field_value.len() - 1LL);
	jule::I32 _44013_r = _1a65aa3c1_to_rune(static_cast<jule::Slice<jule::U8>>(_43913_lt));
	jule::Ptr<_1a94c333b_Data> _44117_data = jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,_1a64669ca_Const::_static_method_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_44013_r)))));
	jule::Bool _44813_is_ascii = _1a65aa3c1_is_ascii(_44013_r);
	if (_44813_is_ascii) {
		(*(_44117_data))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("u8", 2))));
	} else {
		(*(_44117_data))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("i32", 3))));
	}
	(*(_44117_data))._field_model=jule::Any(jule::new_struct<_1ddb3c047_RuneExprModel>(new( std::nothrow ) _1ddb3c047_RuneExprModel(_44013_r)));
	(*(_44117_data))._field_is_rune=true;
	return _44117_data;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_lit_float(jule::Ptr<_1dd05c765_LitExpr>& _46425_l) {
	
	jule::F64 _46714_f;
	std::tie(_46714_f,std::ignore) = _1dd205b2d_parse_float((*(_46425_l))._field_value,64LL);
	jule::Ptr<_1a64669ca_Const> _46817_constant = _1a64669ca_Const::_static_method_new_f64(_46714_f);
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_46817_constant),false,_46817_constant));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_lit_int(jule::Ptr<_1dd05c765_LitExpr>& _48227_l) {
	
	jule::Str _48517_lit = (*(_48227_l))._field_value;
	jule::Int _48617_base = 0LL;
	{
		
		if (_1db822922_has_prefix(_48517_lit,jule::Str("0x", 2))) {
			_case_begin_1a8a3354a:;
			{
				_48517_lit=_48517_lit.slice(2LL);
				_48617_base=16LL;
			}
		}
		else if (_1db822922_has_prefix(_48517_lit,jule::Str("0b", 2))) {
			_case_begin_1a8a335b1:;
			{
				_48517_lit=_48517_lit.slice(2LL);
				_48617_base=2LL;
			}
		}
		else if (_1db822922_has_prefix(_48517_lit,jule::Str("0o", 2))) {
			_case_begin_1a8a33319:;
			{
				_48517_lit=_48517_lit.slice(2LL);
				_48617_base=8LL;
			}
		}
		else if ((_48517_lit[0LL] == '0') && (_48517_lit.len() > 1LL)) {
			_case_begin_1a8a33380:;
			{
				_48517_lit=_48517_lit.slice(1LL);
				_48617_base=8LL;
			}
		}
		else {
			_case_begin_1a8a331b5:;
			{
				_48617_base=10LL;
			}
		}
		_match_end_1a8a3313d:;
	}
	jule::Ptr<_1a94c333b_Data> _50917_d = jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a64669ca_Const>()));
	jule::I64 _51514_sig;
	jule::Int _51519_err;
	std::tie(_51514_sig,_51519_err) = _1dd20559a_parse_int(_48517_lit,_48617_base,64LL);
	if (_51519_err == static_cast<jule::Int>(0LL)) {
		(*(_50917_d))._field_constant=_1a64669ca_Const::_static_method_new_i64(_51514_sig);
		(*(_50917_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3))));
	} else {
		jule::U64 _52218_unsig;
		jule::Int _52225_err;
		std::tie(_52218_unsig,_52225_err) = _1dd20559a_parse_uint(_48517_lit,_48617_base,64LL);
		if (_52225_err != static_cast<jule::Int>(0LL)) {
			(*this)._method_push_err((*(_48227_l))._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
			(*this)._method_push_suggestion(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
		}
		(*(_50917_d))._field_constant=_1a64669ca_Const::_static_method_new_u64(_52218_unsig);
		(*(_50917_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("uint", 4))));
	}
	(*(_50917_d))._field_model=jule::Any((*(_50917_d))._field_constant);
	(*this)._method_apply_numeric_prefix(_50917_d);
	return _50917_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_lit_num(jule::Ptr<_1dd05c765_LitExpr>& _54127_l) {
	{
		
		if (_1dd05db0c_is_float((*(_54127_l))._field_value)) {
			_case_begin_1a8a3cd07:;
			{
				return (*this)._method_lit_float(_54127_l);
			}
		}
		else {
			_case_begin_1a8a3c6db:;
			{
				return (*this)._method_lit_int(_54127_l);
			}
		}
		_match_end_1a8a3c620:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_lit(jule::Ptr<_1dd05c765_LitExpr> _55027_lit) {
	{
		
		if ((*(_55027_lit))._method_is_nil()) {
			_case_begin_1a8a3e952:;
			{
				return (*this)._method_lit_nil();
			}
		}
		else if (_1dd05db0c_is_str((*(_55027_lit))._field_value)) {
			_case_begin_1a8a3e9b8:;
			{
				return (*this)._method_lit_str(_55027_lit);
			}
		}
		else if (_1dd05db0c_is_bool((*(_55027_lit))._field_value)) {
			_case_begin_1a8a3e6bb:;
			{
				return (*this)._method_lit_bool(_55027_lit);
			}
		}
		else if (_1dd05db0c_is_rune((*(_55027_lit))._field_value)) {
			_case_begin_1a8a3e732:;
			{
				return (*this)._method_lit_rune(_55027_lit);
			}
		}
		else if (_1dd05db0c_is_num((*(_55027_lit))._field_value)) {
			_case_begin_1a8a3e798:;
			{
				return (*this)._method_lit_num(_55027_lit);
			}
		}
		else {
			_case_begin_1a8a3e248:;
			{
				return nullptr;
			}
		}
		_match_end_1a8a3e17c:;
	}
}



inline jule::Any _1a94c333b_Eval::_method_find_builtins(jule::Str _56732_ident) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c4607e_ImportInfo>>()) {
			_case_begin_1a8a42b64:;
			{
				jule::Any _57021_def = _1a94c333b_find_builtins_import(_56732_ident,(*this)._field_lookup.operator jule::Ptr<_1c2c4607e_ImportInfo>());
				if (_57021_def != jule::Any(nullptr)) {
					return _57021_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c2c46634_Sema>>()) {
			_case_begin_1a8a42bca:;
			{
				jule::Any _57621_def = _1a94c333b_find_builtins_sema(_56732_ident,(*this)._field_lookup.operator jule::Ptr<_1c2c46634_Sema>());
				if (_57621_def != jule::Any(nullptr)) {
					return _57621_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_ScopeChecker>>()) {
			_case_begin_1a8a42c41:;
			{
				jule::Any _58221_def = _1a94c333b_find_builtins_sema(_56732_ident,(*((*this)._field_lookup.operator jule::Ptr<_1de0e938e_ScopeChecker>()))._field_s);
				if (_58221_def != jule::Any(nullptr)) {
					return _58221_def;
				}
			}
		}
		_match_end_1a8a429aa:;
	}
	return ((jule::Any((*this)._field_dis_builtin)) ? (jule::Any(nullptr)) : (_1a634ca26_find_builtin_def(_56732_ident)));
}



inline jule::Any _1a94c333b_Eval::_method_get_def(jule::Str _59126_ident,jule::Bool _59138_cpp_linked) {
	if ((!(_59138_cpp_linked))) {
		jule::Ptr<_1de0dbeb9_Enum> _59321_enm = (*this)._field_lookup.get()._method_find_enum(_59126_ident);
		if (_59321_enm != nullptr) {
			return jule::Any(_59321_enm);
		}
	}
	jule::Ptr<_1c3c3d174_Var> _59917_v = (*this)._field_lookup.get()._method_find_var(_59126_ident,_59138_cpp_linked);
	if (_59917_v != nullptr) {
		return jule::Any(_59917_v);
	}
	jule::Ptr<_1dded9702_Fn> _60417_f = (*this)._field_lookup.get()._method_find_fn(_59126_ident,_59138_cpp_linked);
	if (_60417_f != nullptr) {
		return jule::Any(_60417_f);
	}
	jule::Ptr<_1dd0be530_Struct> _60917_s = (*this)._field_lookup.get()._method_find_struct(_59126_ident,_59138_cpp_linked);
	if (_60917_s != nullptr) {
		return jule::Any(_60917_s);
	}
	jule::Ptr<_1a5e40a26_TypeAlias> _61417_ta = (*this)._field_lookup.get()._method_find_type_alias(_59126_ident,_59138_cpp_linked);
	if (_61417_ta != nullptr) {
		return jule::Any(_61417_ta);
	}
	return (*this)._method_find_builtins(_59126_ident);
}



inline void _1a94c333b_Eval::_method_push_reference(jule::Ptr<_1dded9779_ReferenceStack>& _62238_references) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1de0e938e_ScopeChecker>>()) {
			_case_begin_1a8a4e1c0:;
			{
				jule::Ptr<_1de0e938e_ScopeChecker> _62521_sc = (*((*this)._field_lookup.operator jule::Ptr<_1de0e938e_ScopeChecker>()))._method_get_root();
				if ((!((*(_62238_references))._method_exist_1((*(_62521_sc))._field_owner)))) {
					(*(_62238_references))._method_push(jule::Any((*(_62521_sc))._field_owner));
				}
			}
		}
		else {
			_case_begin_1a8a4d895:;
			{
				if (((*this)._field_owner != nullptr) && (!((*(_62238_references))._method_exist_0((*this)._field_owner)))) {
					(*(_62238_references))._method_push(jule::Any((*this)._field_owner));
				}
			}
		}
		_match_end_1a8a4d840:;
	}
}



inline void _1a94c333b_Eval::_method_push_reference_to_fn(jule::Ptr<_1dded9702_FnIns>& _63744_f) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1de0e938e_ScopeChecker>>()) {
			_case_begin_1a8a584e8:;
			{
				jule::Ptr<_1de0e938e_ScopeChecker> _64021_sc = (*((*this)._field_lookup.operator jule::Ptr<_1de0e938e_ScopeChecker>()))._method_get_root();
				if ((*((*((*(_64021_sc))._field_owner))._field_decl))._method_is_init() && (!((*((*((*(_64021_sc))._field_owner))._field_references))._method_exist_1(_63744_f)))) {
					(*((*((*(_64021_sc))._field_owner))._field_refers))._method_push(jule::Any(_63744_f));
				}
			}
		}
		_match_end_1a8a4dc08:;
	}
	(*this)._method_push_reference((*(_63744_f))._field_references);
}



inline void _1a94c333b_Eval::_method_push_reference_to_var(jule::Ptr<_1c3c3d174_Var>& _64845_v) {
	if ((*(_64845_v))._field_references == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*this)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1de0e938e_ScopeChecker>>()) {
			_case_begin_1a8a5d982:;
			{
				jule::Ptr<_1de0e938e_ScopeChecker> _65521_sc = (*((*this)._field_lookup.operator jule::Ptr<_1de0e938e_ScopeChecker>()))._method_get_root();
				if ((*((*((*(_65521_sc))._field_owner))._field_decl))._method_is_init() && (!((*((*((*(_65521_sc))._field_owner))._field_references))._method_exist_0(_64845_v)))) {
					(*((*((*(_65521_sc))._field_owner))._field_refers))._method_push(jule::Any(_64845_v));
				}
			}
		}
		_match_end_1a8a5d267:;
	}
	(*this)._method_push_reference((*(_64845_v))._field_references);
}



inline void _1a94c333b_Eval::_method_push_reference_to_struct(jule::Ptr<_1dd0be530_StructIns>& _66448_s) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1de0e938e_ScopeChecker>>()) {
			_case_begin_1a8a6214a:;
			{
				jule::Ptr<_1de0e938e_ScopeChecker> _66721_sc = (*((*this)._field_lookup.operator jule::Ptr<_1de0e938e_ScopeChecker>()))._method_get_root();
				if ((*((*((*(_66721_sc))._field_owner))._field_decl))._method_is_init() && (!((*((*((*(_66721_sc))._field_owner))._field_references))._method_exist_2(_66448_s)))) {
					(*((*((*(_66721_sc))._field_owner))._field_refers))._method_push(jule::Any(_66448_s));
				}
			}
		}
		_match_end_1a8a620d4:;
	}
	(*this)._method_push_reference((*(_66448_s))._field_references);
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method___eval_enum(jule::Ptr<_1de0dbeb9_Enum> _67530_enm) {
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_67530_enm)),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),true,nullptr));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_enum(jule::Ptr<_1de0dbeb9_Enum> _68732_enm,_1dd05db0c_Token _68744_error_token) {
	if ((!((*((*this)._field_s))._method_is_accessible_define((*(_68732_enm))._field_public,(*(_68732_enm))._field_token)))) {
		(*this)._method_push_err(_68744_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any((*(_68732_enm))._field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return (*this)._method___eval_enum(_68732_enm);
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method___eval_struct(jule::Ptr<_1dd0be530_StructIns> _69732_s) {
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_69732_s)),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_69732_s),true,nullptr));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_struct(jule::Ptr<_1dd0be530_StructIns> _71034_s,_1dd05db0c_Token _71049_error_token) {
	if ((!((*((*this)._field_s))._method_is_accessible_define((*((*(_71034_s))._field_decl))._field_public,(*((*(_71034_s))._field_decl))._field_token)))) {
		(*this)._method_push_err(_71049_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any((*((*(_71034_s))._field_decl))._field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	(*this)._method_check_deprecated((*((*(_71034_s))._field_decl))._field_directives,_71049_error_token);
	return (*this)._method___eval_struct(_71034_s);
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_fn_ins(jule::Ptr<_1dded9702_FnIns> _72230_f) {
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_72230_f)),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_72230_f),false,nullptr));
}



inline void _1a94c333b_Eval::_method_check_deprecated(jule::Slice<jule::Ptr<_1dd05c765_Directive>>& _73540_directives,_1dd05db0c_Token _73582_tok) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	jule::Ptr<_1dd05c765_Directive> _74013_d = _1a94c333b_find_directive(_73540_directives,jule::Str("deprecated", 10));
	if (_74013_d != nullptr) {
		if ((*(_74013_d))._field_args.len() == 0LL) {
			(*this)._method_push_err(_73582_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			(*this)._method_push_err(_73582_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any((*(_74013_d))._field_args[0LL]._field_kind)}));
		}
		(*this)._method_push_suggestion(jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_fn(jule::Ptr<_1dded9702_Fn> _75130_f,_1dd05db0c_Token _75138_error_token) {
	if ((!((*((*this)._field_s))._method_is_accessible_define((*(_75130_f))._field_public,(*(_75130_f))._field_token)))) {
		(*this)._method_push_err(_75138_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any((*(_75130_f))._field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	(*this)._method_check_deprecated((*(_75130_f))._field_directives,_75138_error_token);
	jule::Ptr<_1dded9702_FnIns> _76017_ins = (*(_75130_f))._method_instance();
	(*this)._method_push_reference_to_fn(_76017_ins);
	return (*this)._method_eval_fn_ins(_76017_ins);
}



inline void _1a94c333b_Eval::_method_push_illegal_cycle_error(jule::Ptr<_1c3c3d174_Var>& _76544_v1,jule::Ptr<_1c3c3d174_Var>& _76555_v2,jule::Str& _76570_message) {
	
	jule::Str _76813_refers_to = _1db678789_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any((*(_76544_v1))._field_ident),jule::Any((*(_76555_v2))._field_ident)}));
	_76570_message=((_1db822922_repeat(jule::Str(" ", 1),4LL) + _76813_refers_to) + jule::Str("\n", 1)) + _76570_message;
}



inline jule::Bool _1a94c333b_Eval::_method_check_cross_cycle(jule::Ptr<_1c3c3d174_Var>& _77237_v,jule::Str& _77251_message) {
	{
		auto &expr = (*(_77237_v))._field_depends;
		auto it = expr.begin();
		_iter_begin_1a8a7ad78:;
		if (it != expr.end()) {
			jule::Ptr<_1c3c3d174_Var> &_1a94c333b_d = *it;
			{
				if (_1a94c333b_d == (*this)._field_owner) {
					(*this)._method_push_illegal_cycle_error(_77237_v,_1a94c333b_d,_77251_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_1a94c333b_d,_77251_message)))) {
					(*this)._method_push_illegal_cycle_error(_77237_v,_1a94c333b_d,_77251_message);
					return false;
				}
			}
			_iter_next_1a8a7ad78:;
			++it;
			goto _iter_begin_1a8a7ad78;
		}
		_iter_end_1a8a7ad78:;
	}
	return true;
}



inline jule::Bool _1a94c333b_Eval::_method_check_illegal_cycles(jule::Ptr<_1c3c3d174_Var>& _79144_v,_1dd05db0c_Token _79153_decl_token) {
	jule::Bool _79174_ok = jule::Bool();
	if ((*this)._field_owner == nullptr) {
		_79174_ok = true;
		return _79174_ok;
	}
	if ((*this)._field_owner == _79144_v) {
		(*this)._method_push_err((*((*this)._field_owner))._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*((*this)._field_owner))._field_ident)}));
		_79174_ok = false;
		return _79174_ok;
	}
	jule::Str _80317_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_79144_v,_80317_message)))) {
		jule::Str _80621_err_msg = _80317_message;
		_80317_message=jule::Str();
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_79144_v,_80317_message);
		_80621_err_msg=_80621_err_msg + _80317_message;
		(*this)._method_push_err(_79153_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_80621_err_msg)}));
		_79174_ok = false;
		return _79174_ok;
	}
	(*((*this)._field_owner))._field_depends = jule::alloc_for_append((*((*this)._field_owner))._field_depends,1);(*((*this)._field_owner))._field_depends.__push(_79144_v);
	_79174_ok = true;
	return _79174_ok;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_var(jule::Ptr<_1c3c3d174_Var> _81831_v,_1dd05db0c_Token _81840_error_token) {
	if ((!((*((*this)._field_s))._method_is_accessible_define((*(_81831_v))._field_public,(*(_81831_v))._field_token)))) {
		(*this)._method_push_err(_81840_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any((*(_81831_v))._field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	(*this)._method_check_deprecated((*(_81831_v))._field_directives,_81840_error_token);
	(*(_81831_v))._field_used=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c46634_Sema>>()) {
			_case_begin_1a8a85899:;
			{
				jule::Bool _83217_ok = (*this)._method_check_illegal_cycles(_81831_v,_81840_error_token);
				if ((!(_83217_ok))) {
					return nullptr;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_ScopeChecker>>()) {
			_case_begin_1a8a85910:;
			{
				if ((!((*(_81831_v))._field_reference)) || (*this)._method_is_unsafe()) {
					goto _match_end_1a8a85569;
				}
				jule::Ptr<_1de0e938e_ScopeChecker> _84221_s = (*this)._field_lookup.operator jule::Ptr<_1de0e938e_ScopeChecker>();
				while (((*(_84221_s))._field_owner == nullptr) && ((*(_84221_s))._field_parent != nullptr)) {
					{
						_84221_s=(*(_84221_s))._field_parent;
					}
				_iter_next_1a8a87a00:;
				}
				_iter_end_1a8a87a00:;
				if ((((*(_84221_s))._field_owner != nullptr) && (*((*(_84221_s))._field_owner))._field_anon) && ((*(_81831_v))._field_scope != (*((*(_84221_s))._field_owner))._field_scope)) {
					(*this)._method_push_err(_81840_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>({jule::Any((*(_81831_v))._field_ident)}));
				}
			}
		}
		_match_end_1a8a85569:;
	}
	(*this)._method_push_reference_to_var(_81831_v);
	if ((!((*(_81831_v))._field_cpp_linked)) && (((*(_81831_v))._field_value == nullptr) || ((*((*(_81831_v))._field_value))._field_data == nullptr))) {
		if ((*(_81831_v))._field_constant) {
			(*((*this)._field_s))._method_check_type_var(_81831_v,(*this)._field_s);
			if ((*((*(_81831_v))._field_value))._field_data == nullptr) {
				return nullptr;
			}
		}
	}
	if (((*(_81831_v))._field_kind == nullptr) || ((*((*(_81831_v))._field_kind))._field_kind == nullptr)) {
		if ((*(_81831_v))._field_scope != nullptr) {
			return nullptr;
		}
		(*((*this)._field_s))._method_check_type_var(_81831_v,(*this)._field_lookup);
		if (((*(_81831_v))._field_kind == nullptr) || ((*((*(_81831_v))._field_kind))._field_kind == nullptr)) {
			return nullptr;
		}
	}
	jule::Ptr<_1a94c333b_Data> _88217_d = jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data((*((*(_81831_v))._field_kind))._field_kind,jule::Ptr<_1a5e40a26_TypeKind>(),(*(_81831_v))._field_mutable,(*(_81831_v))._field_reference,(!((*(_81831_v))._field_constant)),jule::Bool(),jule::Any(_81831_v),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
	if (((!((*(_81831_v))._field_cpp_linked)) && (*(_81831_v))._method_is_initialized()) && ((*((*(_81831_v))._field_value))._field_data != nullptr)) {
		(*(_88217_d))._field_is_rune=(*((*((*(_81831_v))._field_value))._field_data))._field_is_rune;
	}
	if ((*(_81831_v))._field_constant && ((*((*((*(_81831_v))._field_value))._field_data))._field_constant != nullptr)) {
		(*(_88217_d))._field_constant=jule::new_ptr<_1a64669ca_Const>((*((*((*((*(_81831_v))._field_value))._field_data))._field_constant)));
		(*(_88217_d))._field_model=jule::Any((*(_88217_d))._field_constant);
	}
	if ((*(_88217_d))._method_is_const()) {
		(*this)._method_apply_numeric_prefix(_88217_d);
	}
	return _88217_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_type_alias(jule::Ptr<_1a5e40a26_TypeAlias> _90638_ta,_1dd05db0c_Token _90654_error_token) {
	if ((!((*((*this)._field_s))._method_is_accessible_define((*(_90638_ta))._field_public,(*(_90638_ta))._field_token)))) {
		(*this)._method_push_err(_90654_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any((*(_90638_ta))._field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	(*(_90638_ta))._field_used=true;
	jule::Trait<_1a5e40a26_Kind> _91517_kind = (*((*((*(_90638_ta))._field_kind))._field_kind))._field_kind;
	{
		auto &_match_expr{ _91517_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dd0be530_StructIns>>()) {
			_case_begin_1a8a97559:;
			{
				return (*this)._method___eval_struct(_91517_kind.operator jule::Ptr<_1dd0be530_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0dbeb9_Enum>>()) {
			_case_begin_1a8a975c0:;
			{
				return (*this)._method___eval_enum(_91517_kind.operator jule::Ptr<_1de0dbeb9_Enum>());
			}
		}
		else {
			_case_begin_1a8a97339:;
			{
				jule::Ptr<_1a94c333b_Data> _92221_d = jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind((((*(_90638_ta))._field_cpp_linked) ? ((*(_90638_ta))._field_ident) : ((*((*((*(_90638_ta))._field_kind))._field_kind))._field_cpp_ident)),(*(_90638_ta))._field_generic,jule::Bool(),(*((*((*(_90638_ta))._field_kind))._field_kind))._field_kind)),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ptr<_1a64669ca_Const>()));
				(*(_92221_d))._field_model=jule::Any((*(_92221_d))._field_kind);
				return _92221_d;
			}
		}
		_match_end_1a8a972d4:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_def(jule::Any _93531_def,_1dd05db0c_Token _93541_ident) {
	{
		auto &_match_expr{ _93531_def };
		
		if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
			_case_begin_1a8a9bddd:;
			{
				return (*this)._method_eval_var(_93531_def.operator jule::Ptr<_1c3c3d174_Var>(),_93541_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0dbeb9_Enum>>()) {
			_case_begin_1a8a9b140:;
			{
				return (*this)._method_eval_enum(_93531_def.operator jule::Ptr<_1de0dbeb9_Enum>(),_93541_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
			_case_begin_1a8a9b1a6:;
			{
				return (*this)._method_eval_struct((*(_93531_def.operator jule::Ptr<_1dd0be530_Struct>()))._method_instance(),_93541_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dded9702_Fn>>()) {
			_case_begin_1a8a9b21c:;
			{
				return (*this)._method_eval_fn(_93531_def.operator jule::Ptr<_1dded9702_Fn>(),_93541_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dded9702_FnIns>>()) {
			_case_begin_1a8a9b283:;
			{
				return (*this)._method_eval_fn_ins(_93531_def.operator jule::Ptr<_1dded9702_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5e40a26_TypeAlias>>()) {
			_case_begin_1a8a9bb79:;
			{
				return (*this)._method_eval_type_alias(_93531_def.operator jule::Ptr<_1a5e40a26_TypeAlias>(),_93541_ident);
			}
		}
		else {
			_case_begin_1a8a9aedb:;
			{
				(*this)._method_push_err(_93541_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_93541_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8a9aded:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_ident(jule::Ptr<_1dd05c765_IdentExpr> _95529_ident) {
	jule::Any _95617_def = (*this)._method_get_def((*(_95529_ident))._field_ident,(*(_95529_ident))._field_cpp_linked);
	return (*this)._method_eval_def(_95617_def,(*(_95529_ident))._field_token);
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_unary(jule::Ptr<_1dd05c765_UnaryExpr> _96034_u) {
	_1a94c333b_UnaryEval _96117_unary = _1a94c333b_UnaryEval::_static_method_new(this->self);
	return _96117_unary._method_eval(_96034_u);
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_variadic(jule::Ptr<_1dd05c765_VariadicExpr> _96537_v) {
	if ((*(_96537_v))._field_expr == jule::Any(nullptr)) {
		(*(this->self))._method_push_err((*(_96537_v))._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a5e40a26_TypeKind> _97117_prefix = (*(this->self))._field_prefix;
	(*(this->self))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(this->self))._field_prefix=_97117_prefix;
	});
	jule::Ptr<_1a94c333b_Data> _97517_d = (*(this->self))._method_eval_expr_kind((*(_96537_v))._field_expr);
	if (_97517_d == nullptr) {
		return nullptr;
	}
	if ((!((*((*(_97517_d))._field_kind))._method_variadicable()))) {
		(*(this->self))._method_push_err((*(_96537_v))._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>({jule::Any((*((*(_97517_d))._field_kind))._method_to_str())}));
		return nullptr;
	}
	jule::Ptr<_1a5e40a26_Slc> _98513_slc = (*((*(_97517_d))._field_kind))._method_slc();
	(*(_97517_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind((*((*(_98513_slc))._field_elem))._field_cpp_ident,(*((*(_98513_slc))._field_elem))._field_generic,true,(*((*(_98513_slc))._field_elem))._field_kind));
	return _97517_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_unsafe(jule::Ptr<_1dd05c765_UnsafeExpr> _99535_u) {
	jule::Bool _99613_unsafety = (*(this->self))._field_unsafety;
	(*(this->self))._field_unsafety=true;
	jule::Ptr<_1a94c333b_Data> _99917_d = (*(this->self))._method_eval_expr_kind((*(_99535_u))._field_expr);
	(*(this->self))._field_unsafety=_99613_unsafety;
	return _99917_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_arr(jule::Ptr<_1dd05c765_SliceExpr> _100632_s) {
	jule::Ptr<_1a5e40a26_Arr> _100817_pt = (*((*(this->self))._field_prefix))._method_arr();
	jule::Ptr<_1a5e40a26_Arr> _101017_arr = jule::new_struct_ptr<_1a5e40a26_Arr>(new( std::nothrow ) _1a5e40a26_Arr(false,0LL,(*(_100817_pt))._field_elem));
	jule::Bool _101617_filled = false;
	if ((*(_100632_s))._field_elems.len() == 2LL) {
		{
			auto &_match_expr{ (*(_100632_s))._field_elems[1LL] };
			
			if (_match_expr.type_is<jule::Ptr<_1dd05c765_VariadicExpr>>()) {
				_case_begin_1a8aae593:;
				{
					if ((*((*(_100632_s))._field_elems[1LL].operator jule::Ptr<_1dd05c765_VariadicExpr>()))._field_expr != jule::Any(nullptr)) {
						goto _match_end_1a8aae53d;
					}
					if ((*(_100817_pt))._field_auto) {
						(*(this->self))._method_push_err((*(_100632_s))._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					}
					_101617_filled=true;
					(*(_100632_s))._field_elems=(*(_100632_s))._field_elems.slice(0LL,1LL);
				}
			}
			_match_end_1a8aae53d:;
		}
	}
	(*(_101017_arr))._field_n=static_cast<jule::Int>((*(_100632_s))._field_elems.len());
	if ((!((*(_100817_pt))._field_auto))) {
		if ((*(_101017_arr))._field_n > (*(_100817_pt))._field_n) {
			(*(this->self))._method_push_err((*(_100632_s))._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((*(_101017_arr))._field_n < (*(_100817_pt))._field_n) {
			(*(_101017_arr))._field_n=(*(_100817_pt))._field_n;
		}
	}
	jule::Ptr<_1ddb3c047_ArrayExprModel> _104517_model = jule::new_struct<_1ddb3c047_ArrayExprModel>(new( std::nothrow ) _1ddb3c047_ArrayExprModel(_101017_arr,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(((_101617_filled) ? (2LL) : (static_cast<jule::Int>((*(_100632_s))._field_elems.len())))))));
	jule::Ptr<_1a5e40a26_TypeKind> _105017_prefix = (*(this->self))._field_prefix;
	(*(this->self))._field_prefix=(*(_101017_arr))._field_elem;
	{
		auto &expr = (*(_100632_s))._field_elems;
		auto it = expr.begin();
		_iter_begin_1a8ab5544:;
		if (it != expr.end()) {
			jule::Any _1a94c333b_elem = *it;
			{
				jule::Ptr<_1a94c333b_Data> _105321_d = (*(this->self))._method_eval_expr_kind(_1a94c333b_elem);
				if (_105321_d == nullptr) {
					goto _iter_next_1a8ab5544;
				}
				(*((*(this->self))._field_s))._method_check_assign_type(false,(*(_101017_arr))._field_elem,_105321_d,(*(_100632_s))._field_token);
				(*(_104517_model))._field_elems = jule::alloc_for_append((*(_104517_model))._field_elems,1);(*(_104517_model))._field_elems.__push((*(_105321_d))._field_model);
			}
			_iter_next_1a8ab5544:;
			++it;
			goto _iter_begin_1a8ab5544;
		}
		_iter_end_1a8ab5544:;
	}
	(*(this->self))._field_prefix=_105017_prefix;
	if (_101617_filled) {
		(*(_104517_model))._field_elems = jule::alloc_for_append((*(_104517_model))._field_elems,1);(*(_104517_model))._field_elems.__push(jule::Any(nullptr));
	}
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_101017_arr)),jule::Ptr<_1a5e40a26_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_104517_model),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_exp_slc(jule::Ptr<_1dd05c765_SliceExpr> _107736_s,jule::Ptr<_1a5e40a26_TypeKind> _107755_elem_type) {
	jule::Ptr<_1a5e40a26_Slc> _107817_slc = jule::new_struct_ptr<_1a5e40a26_Slc>(new( std::nothrow ) _1a5e40a26_Slc(_107755_elem_type));
	jule::Ptr<_1ddb3c047_SliceExprModel> _108217_model = jule::new_struct<_1ddb3c047_SliceExprModel>(new( std::nothrow ) _1ddb3c047_SliceExprModel(_107755_elem_type,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>((*(_107736_s))._field_elems.len()))));
	jule::Ptr<_1a5e40a26_TypeKind> _108717_prefix = (*(this->self))._field_prefix;
	(*(this->self))._field_prefix=(*(_107817_slc))._field_elem;
	{
		auto &expr = (*(_107736_s))._field_elems;
		auto it = expr.begin();
		_iter_begin_1a8abb44b:;
		if (it != expr.end()) {
			jule::Any _1a94c333b_elem = *it;
			{
				jule::Ptr<_1a94c333b_Data> _109021_d = (*(this->self))._method_eval_expr_kind(_1a94c333b_elem);
				if (_109021_d == nullptr) {
					goto _iter_next_1a8abb44b;
				}
				(*((*(this->self))._field_s))._method_check_assign_type(false,(*(_107817_slc))._field_elem,_109021_d,(*(_107736_s))._field_token);
				(*(_108217_model))._field_elems = jule::alloc_for_append((*(_108217_model))._field_elems,1);(*(_108217_model))._field_elems.__push((*(_109021_d))._field_model);
			}
			_iter_next_1a8abb44b:;
			++it;
			goto _iter_begin_1a8abb44b;
		}
		_iter_end_1a8abb44b:;
	}
	(*(this->self))._field_prefix=_108717_prefix;
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_107817_slc)),jule::Ptr<_1a5e40a26_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_108217_model),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_slice_expr(jule::Ptr<_1dd05c765_SliceExpr> _110939_s) {
	if ((*(this->self))._field_prefix != nullptr) {
		{
			
			if ((*((*(this->self))._field_prefix))._method_arr() != nullptr) {
				_case_begin_1a8ac01ec:;
				{
					return (*(this->self))._method_eval_arr(_110939_s);
				}
			}
			else if ((*((*(this->self))._field_prefix))._method_slc() != nullptr) {
				_case_begin_1a8ac0274:;
				{
					jule::Ptr<_1a5e40a26_Slc> _111625_pt = (*((*(this->self))._field_prefix))._method_slc();
					return (*(this->self))._method_eval_exp_slc(_110939_s,(*(_111625_pt))._field_elem);
				}
			}
			_match_end_1a8ac00ed:;
		}
	}
	jule::Ptr<_1a5e40a26_TypeKind> _112117_prefix = (*(this->self))._field_prefix;
	(*(this->self))._field_prefix=nullptr;
	if ((*(_110939_s))._field_elems.len() == 0LL) {
		(*(this->self))._method_push_err((*(_110939_s))._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a94c333b_Data> _112917_first_elem = (*(this->self))._method_eval_expr_kind((*(_110939_s))._field_elems[0LL]);
	if (_112917_first_elem == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1a94c333b_Data> _113417_d = (*(this->self))._method_eval_exp_slc(_110939_s,(*(_112917_first_elem))._field_kind);
	(*(this->self))._field_prefix=_112117_prefix;
	return _113417_d;
}



inline void _1a94c333b_Eval::_method_check_integer_indexing_by_data(jule::Ptr<_1a94c333b_Data>& _114054_d,_1dd05db0c_Token _114064_token) {
	jule::Str _114113_err_key = _1a94c333b_check_data_for_integer_indexing(_114054_d);
	{
		auto &_match_expr{ _114113_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a8ac716b:;
			{
				return;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1a8ac6d3b:;
			{
				(*this)._method_push_err(_114064_token,_114113_err_key,jule::Slice<jule::Any>({jule::Any((*((*(_114054_d))._field_kind))._method_to_str())}));
			}
		}
		else {
			_case_begin_1a8ac66a9:;
			{
				(*this)._method_push_err(_114064_token,_114113_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8ac6b93:;
	}
}



inline void _1a94c333b_Eval::_method_indexing_ptr(jule::Ptr<_1a94c333b_Data>& _115436_d,jule::Ptr<_1a94c333b_Data>& _115451_index,jule::Ptr<_1dd05c765_IndexingExpr>& _115466_i) {
	(*this)._method_check_integer_indexing_by_data(_115451_index,(*(_115466_i))._field_token);
	jule::Ptr<_1a5e40a26_Ptr> _115717_ptr = (*((*(_115436_d))._field_kind))._method_ptr();
	{
		
		if ((*(_115717_ptr))._method_is_unsafe()) {
			_case_begin_1a8aca3e4:;
			{
				(*this)._method_push_err((*(_115466_i))._field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>());
				return;
			}
		}
		else if ((!((*this)._method_is_unsafe()))) {
			_case_begin_1a8aca45a:;
			{
				(*this)._method_push_err((*(_115466_i))._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8aca2d4:;
	}
	(*(_115436_d))._field_kind=(*(_115717_ptr))._field_elem;
}



inline void _1a94c333b_Eval::_method_indexing_arr(jule::Ptr<_1a94c333b_Data>& _117036_d,jule::Ptr<_1a94c333b_Data>& _117051_index,jule::Ptr<_1dd05c765_IndexingExpr>& _117066_i) {
	jule::Ptr<_1a5e40a26_Arr> _117117_arr = (*((*(_117036_d))._field_kind))._method_arr();
	(*(_117036_d))._field_kind=(*(_117117_arr))._field_elem;
	(*this)._method_check_integer_indexing_by_data(_117051_index,(*(_117066_i))._field_token);
	if ((*(_117051_index))._method_is_const() && ((*((*(_117051_index))._field_constant))._method_as_f64() >= static_cast<jule::F64>(static_cast<jule::F64>((*(_117117_arr))._field_n)))) {
		(*this)._method_push_err((*(_117066_i))._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	}
}



inline void _1a94c333b_Eval::_method_indexing_slc(jule::Ptr<_1a94c333b_Data>& _117936_d,jule::Ptr<_1a94c333b_Data>& _117951_index,jule::Ptr<_1dd05c765_IndexingExpr>& _117966_i) {
	jule::Ptr<_1a5e40a26_Slc> _118017_slc = (*((*(_117936_d))._field_kind))._method_slc();
	(*(_117936_d))._field_kind=(*(_118017_slc))._field_elem;
	(*this)._method_check_integer_indexing_by_data(_117951_index,(*(_117966_i))._field_token);
	if ((!((*(_117951_index))._method_is_const()))) {
		return;
	}
	{
		auto &_match_expr{ (*(_117936_d))._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ddb3c047_SliceExprModel>>()) {
			_case_begin_1a8ad38d6:;
			{
				jule::Ptr<_1ddb3c047_SliceExprModel> _119021_m = (*(_117936_d))._field_model.operator jule::Ptr<_1ddb3c047_SliceExprModel>();
				jule::F64 _119117_indx = (*((*(_117951_index))._field_constant))._method_as_f64();
				if (_119117_indx >= static_cast<jule::F64>(static_cast<jule::F64>((*(_119021_m))._field_elems.len()))) {
					(*this)._method_push_err((*(_117966_i))._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(*(_117936_d))._field_model=(*(_119021_m))._field_elems[static_cast<jule::Int>(static_cast<jule::U64>(_119117_indx))];
					(*(_117936_d))._field_decl=true;
				}
			}
		}
		_match_end_1a8ad382b:;
	}
}



inline void _1a94c333b_Eval::_method_indexing_map(jule::Ptr<_1a94c333b_Data>& _120136_d,jule::Ptr<_1a94c333b_Data>& _120151_index,jule::Ptr<_1dd05c765_IndexingExpr>& _120170_i) {
	if (_120151_index == nullptr) {
		return;
	}
	jule::Ptr<_1a5e40a26_Map> _120617_m = (*((*(_120136_d))._field_kind))._method_map();
	_1a93c7a48_AssignTypeChecker _120717_atc = _1a93c7a48_AssignTypeChecker((*this)._field_s,(*(_120617_m))._field_key,_120151_index,(*(_120170_i))._field_token);
	_120717_atc._method_check();
	(*(_120136_d))._field_kind=(*(_120617_m))._field_val;
}



inline void _1a94c333b_Eval::_method_indexing_str(jule::Ptr<_1a94c333b_Data>& _121836_d,jule::Ptr<_1a94c333b_Data>& _121851_index,jule::Ptr<_1dd05c765_IndexingExpr>& _121866_i) {
	
	(*(_121836_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("u8", 2))));
	if (_121851_index == nullptr) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_121851_index,(*(_121866_i))._field_token);
	if ((!((*(_121851_index))._method_is_const()))) {
		(*(_121836_d))._field_constant=nullptr;
		return;
	}
	if ((*(_121836_d))._method_is_const()) {
		_1dd05db0c_Token _123417_error_token = (*(_121866_i))._field_token;
		jule::I64 _123517_j = (*((*(_121851_index))._field_constant))._method_as_i64();
		jule::Str _123617_s = (*((*(_121836_d))._field_constant))._method_read_str();
		if (static_cast<jule::Int>(_123517_j) >= static_cast<jule::Int>(_123617_s.len())) {
			(*this)._method_push_err(_123417_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			(*((*(_121836_d))._field_constant))._method_set_u64(static_cast<jule::U64>(static_cast<jule::U64>(_123617_s[_123517_j])));
		}
	}
}



inline void _1a94c333b_Eval::_method_to_indexing(jule::Ptr<_1a94c333b_Data>& _124535_d,jule::Ptr<_1a94c333b_Data>& _124550_index,jule::Ptr<_1dd05c765_IndexingExpr>& _124569_i) {
	{
		
		if ((*((*(_124535_d))._field_kind))._method_ptr() != nullptr) {
			_case_begin_1a8ae164c:;
			{
				(*this)._method_indexing_ptr(_124535_d,_124550_index,_124569_i);
				return;
			}
		}
		else if ((*((*(_124535_d))._field_kind))._method_arr() != nullptr) {
			_case_begin_1a8ae16c4:;
			{
				(*this)._method_indexing_arr(_124535_d,_124550_index,_124569_i);
				return;
			}
		}
		else if ((*((*(_124535_d))._field_kind))._method_slc() != nullptr) {
			_case_begin_1a8ae174b:;
			{
				(*this)._method_indexing_slc(_124535_d,_124550_index,_124569_i);
				return;
			}
		}
		else if ((*((*(_124535_d))._field_kind))._method_map() != nullptr) {
			_case_begin_1a8ae17c3:;
			{
				(*this)._method_indexing_map(_124535_d,_124550_index,_124569_i);
				return;
			}
		}
		else if ((*((*(_124535_d))._field_kind))._method_prim() != nullptr) {
			_case_begin_1a8ae184a:;
			{
				jule::Ptr<_1a5e40a26_Prim> _126417_prim = (*((*(_124535_d))._field_kind))._method_prim();
				{
					
					if ((*(_126417_prim))._method_is_str()) {
						_case_begin_1a8ae6795:;
						{
							(*this)._method_indexing_str(_124535_d,_124550_index,_124569_i);
							return;
						}
					}
					_match_end_1a8ae66eb:;
				}
			}
		}
		_match_end_1a8ae151a:;
	}
	(*this)._method_push_err((*(_124569_i))._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>({jule::Any((*((*(_124535_d))._field_kind))._method_to_str())}));
}



inline jule::Bool _1a94c333b_Eval::_method_push_generics_from_index_data(jule::Ptr<_1dd05c765_IdentTypeDecl>& _127554_decl,jule::Ptr<_1dd05c765_IndexingExpr>& _127581_i) {
	{
		auto &_match_expr{ (*(_127581_i))._field_index };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_UnaryExpr>>()) {
			_case_begin_1a8ae9d3c:;
			{
				jule::Ptr<_1a94c333b_Data> _128021_d = (*(this->self))._method_eval_unary((*(_127581_i))._field_index.operator jule::Ptr<_1dd05c765_UnaryExpr>());
				if ((!((*(_128021_d))._field_decl))) {
					(*(this->self))._method_push_err((*(_127581_i))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				}
				(*(_127554_decl))._field_generics = jule::alloc_for_append((*(_127554_decl))._field_generics,1);(*(_127554_decl))._field_generics.__push(jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_1dd05db0c_Token(),jule::Any((*(_128021_d))._field_kind))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_TypeDecl>>()) {
			_case_begin_1a8ae9da3:;
			{
				(*(_127554_decl))._field_generics = jule::alloc_for_append((*(_127554_decl))._field_generics,1);(*(_127554_decl))._field_generics.__push((*(_127581_i))._field_index.operator jule::Ptr<_1dd05c765_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_IdentExpr>>()) {
			_case_begin_1a8ae905b:;
			{
				jule::Ptr<_1dd05c765_IdentExpr> _129121_expr = (*(_127581_i))._field_index.operator jule::Ptr<_1dd05c765_IdentExpr>();
				(*(_127554_decl))._field_generics = jule::alloc_for_append((*(_127554_decl))._field_generics,1);(*(_127554_decl))._field_generics.__push(jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_1dd05db0c_Token(),jule::Any(jule::new_struct<_1dd05c765_IdentTypeDecl>(new( std::nothrow ) _1dd05c765_IdentTypeDecl((*(_129121_expr))._field_token,(*(_129121_expr))._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>()))))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_TupleExpr>>()) {
			_case_begin_1a8ae90c2:;
			{
				{
					auto &expr = (*((*(_127581_i))._field_index.operator jule::Ptr<_1dd05c765_TupleExpr>()))._field_expr;
					auto it = expr.begin();
					_iter_begin_1a8aede62:;
					if (it != expr.end()) {
						jule::Ptr<_1dd05c765_Expr> _1a94c333b_expr = *it;
						{
							{
								auto &_match_expr{ (*(_1a94c333b_expr))._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1dd05c765_TypeDecl>>()) {
									_case_begin_1a8b006b1:;
									{
										(*(_127554_decl))._field_generics = jule::alloc_for_append((*(_127554_decl))._field_generics,1);(*(_127554_decl))._field_generics.__push((*(_1a94c333b_expr))._field_kind.operator jule::Ptr<_1dd05c765_TypeDecl>());
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_1dd05c765_IdentExpr>>()) {
									_case_begin_1a8b00727:;
									{
										jule::Ptr<_1dd05c765_IdentExpr> _130429_expr = (*(_1a94c333b_expr))._field_kind.operator jule::Ptr<_1dd05c765_IdentExpr>();
										(*(_127554_decl))._field_generics = jule::alloc_for_append((*(_127554_decl))._field_generics,1);(*(_127554_decl))._field_generics.__push(jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_1dd05db0c_Token(),jule::Any(jule::new_struct<_1dd05c765_IdentTypeDecl>(new( std::nothrow ) _1dd05c765_IdentTypeDecl((*(_130429_expr))._field_token,(*(_130429_expr))._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>()))))));
									}
								}
								_match_end_1a8b0065b:;
							}
						}
						_iter_next_1a8aede62:;
						++it;
						goto _iter_begin_1a8aede62;
					}
					_iter_end_1a8aede62:;
				}
			}
		}
		else {
			_case_begin_1a8ae8e07:;
			{
				(*(this->self))._method_push_err((*(_127581_i))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1a8ae8d6e:;
	}
	return true;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_ident_decl_from_indexing(jule::Ptr<_1a94c333b_Data>& _132054_d,jule::Ptr<_1dd05c765_IndexingExpr>& _132069_i) {
	jule::Ptr<_1dd05c765_TypeDecl> _132117_tdecl = jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl());
	jule::Ptr<_1dd05c765_IdentTypeDecl> _132217_decl = nullptr;
	{
		auto &_match_expr{ (*(_132069_i))._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_IdentExpr>>()) {
			_case_begin_1a8b04e46:;
			{
				jule::Ptr<_1dd05c765_IdentExpr> _132521_expr = (*(_132069_i))._field_expr.operator jule::Ptr<_1dd05c765_IdentExpr>();
				_132217_decl=jule::new_struct<_1dd05c765_IdentTypeDecl>(new( std::nothrow ) _1dd05c765_IdentTypeDecl((*(_132521_expr))._field_token,(*(_132521_expr))._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>()));
				(*(_132117_tdecl))._field_kind=jule::Any(_132217_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_NsSelectionExpr>>()) {
			_case_begin_1a8b05034:;
			{
				jule::Ptr<_1dd05c765_NsSelectionExpr> _133221_expr = (*(_132069_i))._field_expr.operator jule::Ptr<_1dd05c765_NsSelectionExpr>();
				_132217_decl=jule::new_struct<_1dd05c765_IdentTypeDecl>(new( std::nothrow ) _1dd05c765_IdentTypeDecl((*(_133221_expr))._field_ident,(*(_133221_expr))._field_ident._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>()));
				(*(_132117_tdecl))._field_kind=jule::Any(jule::new_struct<_1dd05c765_NamespaceTypeDecl>(new( std::nothrow ) _1dd05c765_NamespaceTypeDecl((*(_133221_expr))._field_ns,_132217_decl)));
			}
		}
		else {
			_case_begin_1a8b04121:;
			{
				(*(this->self))._method_push_err((*(_132069_i))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a8b04088:;
	}
	if ((!((*(this->self))._method_push_generics_from_index_data(_132217_decl,_132069_i)))) {
		return nullptr;
	}
	return (*(this->self))._method_eval_type(_132117_tdecl);
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_indexing(jule::Ptr<_1dd05c765_IndexingExpr> _135137_i) {
	jule::Ptr<_1a5e40a26_TypeKind> _135217_prefix = (*(this->self))._field_prefix;
	(*(this->self))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(this->self))._field_prefix=_135217_prefix;
	});
	jule::Ptr<_1a94c333b_Data> _135617_d = (*(this->self))._method_eval_expr_kind((*(_135137_i))._field_expr);
	if (_135617_d == nullptr) {
		return nullptr;
	}
	if ((*(_135617_d))._field_decl) {
		return (*(this->self))._method_eval_ident_decl_from_indexing(_135617_d,_135137_i);
	}
	_1a94c333b_Data _136617_old_d = (*(_135617_d));
	jule::Ptr<_1a94c333b_Data> _136817_index = (*(this->self))._method_eval_expr_kind((*(_135137_i))._field_index);
	if (_136817_index == nullptr) {
		return nullptr;
	}
	(*(_135617_d))._field_decl=false;
	(*(this->self))._method_to_indexing(_135617_d,_136817_index,_135137_i);
	if ((*(_135617_d))._method_is_const()) {
		(*(_135617_d))._field_decl=false;
		(*(_135617_d))._field_model=jule::Any((*(_135617_d))._field_constant);
	} else if ((*(_135617_d))._field_decl) {
		(*(_135617_d))._field_decl=false;
	} else {
		(*(_135617_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_IndexingExprModel>(new( std::nothrow ) _1ddb3c047_IndexingExprModel((*(_135137_i))._field_token,jule::new_ptr<_1a94c333b_Data>(_136617_old_d),_136817_index)));
	}
	return _135617_d;
}



inline std::tuple<jule::Ptr<_1a94c333b_Data>,jule::Ptr<_1a94c333b_Data>> _1a94c333b_Eval::_method_eval_slicing_exprs(jule::Ptr<_1dd05c765_SlicingExpr>& _139943_s) {
	jule::Ptr<_1a5e40a26_TypeKind> _140017_prefix = (*(this->self))._field_prefix;
	(*(this->self))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(this->self))._field_prefix=_140017_prefix;
	});
	jule::Ptr<_1a94c333b_Data> _140417_l = nullptr;
	jule::Ptr<_1a94c333b_Data> _140517_r = nullptr;
	if ((*(_139943_s))._field_start != jule::Any(nullptr)) {
		_140417_l=(*(this->self))._method_eval_expr_kind((*(_139943_s))._field_start);
		if (_140417_l != nullptr) {
			(*(this->self))._method_check_integer_indexing_by_data(_140417_l,(*(_139943_s))._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	} else {
		_140417_l=jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1a64669ca_Const::_static_method_new_i64(0LL)));
		(*(_140417_l))._field_model=jule::Any((*(_140417_l))._field_constant);
	}
	if ((*(_139943_s))._field_to != jule::Any(nullptr)) {
		_140517_r=(*(this->self))._method_eval_expr_kind((*(_139943_s))._field_to);
		if (_140517_r != nullptr) {
			(*(this->self))._method_check_integer_indexing_by_data(_140517_r,(*(_139943_s))._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	}
	return std::make_tuple(_140417_l,_140517_r);
}



inline void _1a94c333b_Eval::_method_slicing_arr(jule::Ptr<_1a94c333b_Data>& _143431_d) {
	jule::Ptr<_1a5e40a26_TypeKind> _143517_elem_type = (*((*((*(_143431_d))._field_kind))._method_arr()))._field_elem;
	(*(_143431_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a5e40a26_Slc>(new( std::nothrow ) _1a5e40a26_Slc(_143517_elem_type))));
	(*(_143431_d))._field_lvalue=false;
	(*(_143431_d))._field_mutable=(*(_143431_d))._field_mutable || (!((*(_143517_elem_type))._method_mutable()));
}



inline void _1a94c333b_Eval::_method_slicing_slc(jule::Ptr<_1a94c333b_Data>& _144931_d) {
	(*(_144931_d))._field_lvalue=false;
}



inline void _1a94c333b_Eval::_method_slicing_str(jule::Ptr<_1a94c333b_Data>& _145331_d,jule::Ptr<_1a94c333b_Data>& _145342_l,jule::Ptr<_1a94c333b_Data>& _145353_r) {
	(*(_145331_d))._field_lvalue=false;
	(*(_145331_d))._field_mutable=true;
	if ((!((*(_145331_d))._method_is_const()))) {
		return;
	}
	if ((_145342_l == nullptr) || (_145353_r == nullptr)) {
		(*(_145331_d))._field_constant=nullptr;
		return;
	}
	if ((*(_145342_l))._method_is_const() && (*(_145353_r))._method_is_const()) {
		jule::I64 _146617_left = (*((*(_145342_l))._field_constant))._method_as_i64();
		if (_146617_left < 0LL) {
			return;
		}
		jule::Str _147117_s = (*((*(_145331_d))._field_constant))._method_read_str();
		jule::I64 _147221_right = 0LL;
		if (_145353_r == nullptr) {
			_147221_right=static_cast<jule::I64>(static_cast<jule::I64>(_147117_s.len()));
		} else {
			_147221_right=static_cast<jule::I64>((*((*(_145353_r))._field_constant))._method_as_i64());
		}
		if (_146617_left > _147221_right) {
			return;
		}
		(*((*(_145331_d))._field_constant))._method_set_str(_147117_s.slice(_146617_left,_147221_right));
		(*(_145331_d))._field_decl=true;
	} else {
		(*(_145331_d))._field_constant=nullptr;
	}
}



inline void _1a94c333b_Eval::_method_check_slicing(jule::Ptr<_1a94c333b_Data>& _148937_d,jule::Ptr<_1a94c333b_Data>& _148948_l,jule::Ptr<_1a94c333b_Data>& _148959_r,jule::Ptr<_1dd05c765_SlicingExpr>& _148970_s) {
	{
		
		if ((*((*(_148937_d))._field_kind))._method_arr() != nullptr) {
			_case_begin_1a8b22617:;
			{
				(*this)._method_slicing_arr(_148937_d);
				return;
			}
		}
		else if ((*((*(_148937_d))._field_kind))._method_slc() != nullptr) {
			_case_begin_1a8b2268e:;
			{
				(*this)._method_slicing_slc(_148937_d);
				return;
			}
		}
		else if ((*((*(_148937_d))._field_kind))._method_prim() != nullptr) {
			_case_begin_1a8b22716:;
			{
				jule::Ptr<_1a5e40a26_Prim> _149817_prim = (*((*(_148937_d))._field_kind))._method_prim();
				{
					
					if ((*(_149817_prim))._method_is_str()) {
						_case_begin_1a8b255c6:;
						{
							(*this)._method_slicing_str(_148937_d,_148948_l,_148959_r);
							return;
						}
					}
					_match_end_1a8b2552c:;
				}
			}
		}
		_match_end_1a8b2254b:;
	}
	(*this)._method_push_err((*(_148970_s))._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>({jule::Any((*((*(_148937_d))._field_kind))._method_to_str())}));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_slicing(jule::Ptr<_1dd05c765_SlicingExpr> _150936_s) {
	jule::Ptr<_1a94c333b_Data> _151017_d = (*(this->self))._method_eval_expr_kind((*(_150936_s))._field_expr);
	if (_151017_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1a94c333b_Data> _151518_l;
	jule::Ptr<_1a94c333b_Data> _151525_r;
	std::tie(_151518_l,_151525_r) = (*(this->self))._method_eval_slicing_exprs(_150936_s);
	if (_151518_l == nullptr) {
		return _151017_d;
	}
	(*(_151017_d))._field_decl=false;
	(*(this->self))._method_check_slicing(_151017_d,_151518_l,_151525_r,_150936_s);
	(*(_151017_d))._field_cast_kind=nullptr;
	if ((*(_151017_d))._method_is_const()) {
		(*(_151017_d))._field_decl=false;
		(*(_151017_d))._field_model=jule::Any((*(_151017_d))._field_constant);
	} else if ((*(_151017_d))._field_decl) {
		(*(_151017_d))._field_decl=false;
	} else {
		jule::Ptr<_1ddb3c047_SlicingExprModel> _153421_model = jule::new_struct<_1ddb3c047_SlicingExprModel>(new( std::nothrow ) _1ddb3c047_SlicingExprModel((*(_150936_s))._field_token,(*(_151017_d))._field_model,(*(_151518_l))._field_model,jule::Any()));
		if (_151525_r != nullptr) {
			(*(_153421_model))._field_right=(*(_151525_r))._field_model;
		}
		(*(_151017_d))._field_model=jule::Any(_153421_model);
	}
	return _151017_d;
}



inline void _1a94c333b_Eval::_method_cast_ptr(jule::Ptr<_1a5e40a26_TypeKind> _155031_t,jule::Ptr<_1a94c333b_Data> _155049_d,_1dd05db0c_Token _155059_error_token) {
	jule::Ptr<_1a5e40a26_Sptr> _155113_sptr = (*((*(_155049_d))._field_kind))._method_sptr();
	if (_155113_sptr != nullptr) {
		if ((!((*((*((*(_155031_t))._method_ptr()))._field_elem))._method_equals((*(_155113_sptr))._field_elem)))) {
			(*this)._method_push_err(_155059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any((*((*(_155049_d))._field_kind))._method_to_str()),jule::Any((*(_155031_t))._method_to_str())}));
		}
		return;
	}
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_155059_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a5e40a26_Prim> _156413_prim = (*((*(_155049_d))._field_kind))._method_prim();
	if (((*((*(_155049_d))._field_kind))._method_ptr() == nullptr) && ((_156413_prim == nullptr) || (!(_1a6539949_is_int((*(_156413_prim))._method_to_str()))))) {
		(*this)._method_push_err(_155059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any((*((*(_155049_d))._field_kind))._method_to_str()),jule::Any((*(_155031_t))._method_to_str())}));
	}
	(*(_155049_d))._field_constant=nullptr;
}



inline void _1a94c333b_Eval::_method_cast_struct(jule::Ptr<_1a5e40a26_TypeKind> _157234_t,jule::Ptr<_1a94c333b_Data> _157252_d,_1dd05db0c_Token _157262_error_token) {
	jule::Ptr<_1de043c01_Trait> _157317_tr = (*((*(_157252_d))._field_kind))._method_trt();
	if (_157317_tr == nullptr) {
		(*this)._method_push_err(_157262_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any((*((*(_157252_d))._field_kind))._method_to_str()),jule::Any((*(_157234_t))._method_to_str())}));
		return;
	}
	jule::Ptr<_1dd0be530_StructIns> _157917_s = (*(_157234_t))._method_strct();
	(*this)._method_push_reference_to_struct(_157917_s);
	if ((!((*((*(_157917_s))._field_decl))._method_is_implements(_157317_tr)))) {
		(*this)._method_push_err(_157262_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any((*((*(_157252_d))._field_kind))._method_to_str()),jule::Any((*(_157234_t))._method_to_str())}));
	}
}



inline void _1a94c333b_Eval::_method_cast_ref(jule::Ptr<_1a5e40a26_TypeKind> _158731_t,jule::Ptr<_1a94c333b_Data> _158749_d,_1dd05db0c_Token _158759_error_token) {
	jule::Ptr<_1a5e40a26_Sptr> _158817_sptr = (*(_158731_t))._method_sptr();
	jule::Ptr<_1a5e40a26_Ptr> _159017_ptr = (*((*(_158749_d))._field_kind))._method_ptr();
	if ((_159017_ptr != nullptr) && (*((*(_158817_sptr))._field_elem))._method_equals((*(_159017_ptr))._field_elem)) {
		if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_158759_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		}
		return;
	}
	if ((*((*(_158817_sptr))._field_elem))._method_strct() != nullptr) {
		(*this)._method_cast_struct((*(_158817_sptr))._field_elem,_158749_d,_158759_error_token);
		return;
	}
	(*this)._method_push_err(_158759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any((*((*(_158749_d))._field_kind))._method_to_str()),jule::Any((*(_158731_t))._method_to_str())}));
}



inline void _1a94c333b_Eval::_method_cast_slc(jule::Ptr<_1a5e40a26_TypeKind> _160931_t,jule::Ptr<_1a94c333b_Data> _160949_d,_1dd05db0c_Token _160959_error_token) {
	if ((*((*(_160949_d))._field_kind))._method_enm() != nullptr) {
		if (((*((*((*((*((*(_160949_d))._field_kind))._method_enm()))._field_kind))._field_kind))._method_prim() == nullptr) || (!((*((*((*((*((*((*(_160949_d))._field_kind))._method_enm()))._field_kind))._field_kind))._method_prim()))._method_is_str()))) {
			(*this)._method_push_err(_160959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any((*((*(_160949_d))._field_kind))._method_to_str()),jule::Any((*(_160931_t))._method_to_str())}));
			return;
		}
	} else if (((*((*(_160949_d))._field_kind))._method_prim() == nullptr) || (!((*((*((*(_160949_d))._field_kind))._method_prim()))._method_is_str()))) {
		(*this)._method_push_err(_160959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any((*((*(_160949_d))._field_kind))._method_to_str()),jule::Any((*(_160931_t))._method_to_str())}));
		return;
	}
	_160931_t=(*((*(_160931_t))._method_slc()))._field_elem;
	jule::Ptr<_1a5e40a26_Prim> _162113_prim = (*(_160931_t))._method_prim();
	if ((_162113_prim == nullptr) || ((!((*(_162113_prim))._method_is_u8())) && (!((*(_162113_prim))._method_is_i32())))) {
		(*this)._method_push_err(_160959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any((*((*(_160949_d))._field_kind))._method_to_str()),jule::Any((*(_160931_t))._method_to_str())}));
	}
}



inline void _1a94c333b_Eval::_method_cast_str(jule::Ptr<_1a94c333b_Data> _162731_d,_1dd05db0c_Token _162741_error_token) {
	if ((*((*(_162731_d))._field_kind))._method_enm() != nullptr) {
		jule::Ptr<_1de0dbeb9_Enum> _162921_e = (*((*(_162731_d))._field_kind))._method_enm();
		if (((*((*((*(_162921_e))._field_kind))._field_kind))._method_prim() != nullptr) && (*((*((*((*(_162921_e))._field_kind))._field_kind))._method_prim()))._method_is_str()) {
			return;
		}
	}
	if ((*((*(_162731_d))._field_kind))._method_prim() != nullptr) {
		jule::Ptr<_1a5e40a26_Prim> _163617_prim = (*((*(_162731_d))._field_kind))._method_prim();
		if ((!((*(_163617_prim))._method_is_u8())) && (!((*(_163617_prim))._method_is_i32()))) {
			(*this)._method_push_err(_162741_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any((*((*(_162731_d))._field_kind))._method_to_str())}));
		}
		return;
	}
	if ((*((*(_162731_d))._field_kind))._method_slc() == nullptr) {
		(*this)._method_push_err(_162741_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any((*((*(_162731_d))._field_kind))._method_to_str())}));
		return;
	}
	jule::Ptr<_1a5e40a26_TypeKind> _164817_t = (*((*((*(_162731_d))._field_kind))._method_slc()))._field_elem;
	jule::Ptr<_1a5e40a26_Prim> _164913_prim = (*(_164817_t))._method_prim();
	if ((_164913_prim == nullptr) || ((!((*(_164913_prim))._method_is_u8())) && (!((*(_164913_prim))._method_is_i32())))) {
		(*this)._method_push_err(_162741_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any((*((*(_162731_d))._field_kind))._method_to_str())}));
	}
}



inline void _1a94c333b_Eval::_method_cast_int(jule::Ptr<_1a5e40a26_TypeKind> _165531_t,jule::Ptr<_1a94c333b_Data> _165549_d,_1dd05db0c_Token _165559_error_token) {
	if ((*(_165549_d))._method_is_const()) {
		jule::Ptr<_1a5e40a26_Prim> _165717_prim = (*(_165531_t))._method_prim();
		{
			
			if (_1a6539949_is_sig_int((*(_165717_prim))._field_kind)) {
				_case_begin_1a8b53ca8:;
				{
					(*((*(_165549_d))._field_constant))._method_set_i64(static_cast<jule::I64>((*((*(_165549_d))._field_constant))._method_as_i64()));
				}
			}
			else if (_1a6539949_is_unsig_int((*(_165717_prim))._field_kind)) {
				_case_begin_1a8b53d30:;
				{
					(*((*(_165549_d))._field_constant))._method_set_u64(static_cast<jule::U64>((*((*(_165549_d))._field_constant))._method_as_u64()));
				}
			}
			_match_end_1a8b53bed:;
		}
	}
	if ((*((*(_165549_d))._field_kind))._method_enm() != nullptr) {
		jule::Ptr<_1de0dbeb9_Enum> _166817_e = (*((*(_165549_d))._field_kind))._method_enm();
		if (_1a6539949_is_num((*((*((*(_166817_e))._field_kind))._field_kind))._method_to_str())) {
			return;
		}
	}
	if ((*((*(_165549_d))._field_kind))._method_sptr() != nullptr) {
		jule::Ptr<_1a5e40a26_Prim> _167517_prim = (*(_165531_t))._method_prim();
		if ((!((*(_167517_prim))._method_is_uintptr()))) {
			(*this)._method_push_err(_165559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any((*((*(_165549_d))._field_kind))._method_to_str()),jule::Any((*(_165531_t))._method_to_str())}));
		}
		return;
	}
	if ((*((*(_165549_d))._field_kind))._method_ptr() != nullptr) {
		jule::Ptr<_1a5e40a26_Prim> _168217_prim = (*(_165531_t))._method_prim();
		if ((*(_168217_prim))._method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_165559_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if (((((!((*(_168217_prim))._method_is_i32())) && (!((*(_168217_prim))._method_is_i64()))) && (!((*(_168217_prim))._method_is_u16()))) && (!((*(_168217_prim))._method_is_u32()))) && (!((*(_168217_prim))._method_is_u64()))) {
			(*this)._method_push_err(_165559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any((*((*(_165549_d))._field_kind))._method_to_str()),jule::Any((*(_165531_t))._method_to_str())}));
		}
		return;
	}
	jule::Ptr<_1a5e40a26_Prim> _169313_prim = (*((*(_165549_d))._field_kind))._method_prim();
	if ((_169313_prim != nullptr) && _1a6539949_is_num((*(_169313_prim))._method_to_str())) {
		return;
	}
	(*this)._method_push_err(_165559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any((*((*(_165549_d))._field_kind))._method_to_str()),jule::Any((*(_165531_t))._method_to_str())}));
}



inline void _1a94c333b_Eval::_method_cast_num(jule::Ptr<_1a5e40a26_TypeKind> _170131_t,jule::Ptr<_1a94c333b_Data> _170149_d,_1dd05db0c_Token _170159_error_token) {
	if ((*(_170149_d))._method_is_const()) {
		jule::Ptr<_1a5e40a26_Prim> _170317_prim = (*(_170131_t))._method_prim();
		{
			
			if (_1a6539949_is_float((*(_170317_prim))._field_kind)) {
				_case_begin_1a8b63922:;
				{
					(*((*(_170149_d))._field_constant))._method_set_f64(static_cast<jule::F64>((*((*(_170149_d))._field_constant))._method_as_f64()));
				}
			}
			else if (_1a6539949_is_sig_int((*(_170317_prim))._field_kind)) {
				_case_begin_1a8b63999:;
				{
					(*((*(_170149_d))._field_constant))._method_set_i64(static_cast<jule::I64>((*((*(_170149_d))._field_constant))._method_as_i64()));
				}
			}
			else if (_1a6539949_is_unsig_int((*(_170317_prim))._field_kind)) {
				_case_begin_1a8b63a21:;
				{
					(*((*(_170149_d))._field_constant))._method_set_u64(static_cast<jule::U64>((*((*(_170149_d))._field_constant))._method_as_u64()));
				}
			}
			_match_end_1a8b63856:;
		}
	}
	if ((*((*(_170149_d))._field_kind))._method_enm() != nullptr) {
		jule::Ptr<_1de0dbeb9_Enum> _171717_e = (*((*(_170149_d))._field_kind))._method_enm();
		if (_1a6539949_is_num((*((*((*(_171717_e))._field_kind))._field_kind))._method_to_str())) {
			return;
		}
	}
	jule::Ptr<_1a5e40a26_Prim> _172313_prim = (*((*(_170149_d))._field_kind))._method_prim();
	if ((_172313_prim != nullptr) && _1a6539949_is_num((*(_172313_prim))._method_to_str())) {
		return;
	}
	(*this)._method_push_err(_170159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any((*((*(_170149_d))._field_kind))._method_to_str()),jule::Any((*(_170131_t))._method_to_str())}));
}



inline void _1a94c333b_Eval::_method_cast_prim(jule::Ptr<_1a5e40a26_TypeKind> _173132_t,jule::Ptr<_1a94c333b_Data> _173150_d,_1dd05db0c_Token _173160_error_token) {
	jule::Ptr<_1a5e40a26_Prim> _173213_prim = (*(_173132_t))._method_prim();
	{
		
		if ((*(_173213_prim))._method_is_any()) {
			_case_begin_1a8b6bead:;
		}
		else if ((*(_173213_prim))._method_is_str()) {
			_case_begin_1a8b6bc7c:;
			{
				(*this)._method_cast_str(_173150_d,_173160_error_token);
			}
		}
		else if (_1a6539949_is_int((*(_173213_prim))._method_to_str())) {
			_case_begin_1a8b6bce3:;
			{
				(*this)._method_cast_int(_173132_t,_173150_d,_173160_error_token);
			}
		}
		else if (_1a6539949_is_num((*(_173213_prim))._method_to_str())) {
			_case_begin_1a8b6bd59:;
			{
				(*this)._method_cast_num(_173132_t,_173150_d,_173160_error_token);
			}
		}
		else {
			_case_begin_1a8b6bb28:;
			{
				(*this)._method_push_err(_173160_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any((*(_173132_t))._method_to_str())}));
			}
		}
		_match_end_1a8b6baa1:;
	}
}



inline void _1a94c333b_Eval::_method_cast_constant(jule::Ptr<_1a5e40a26_TypeKind>& _175137_t,jule::Ptr<_1a94c333b_Data>& _175156_d) {
	jule::Ptr<_1a5e40a26_Prim> _175213_prim = (*(_175137_t))._method_prim();
	if ((_175213_prim == nullptr) || (!((*(_175156_d))._method_is_const()))) {
		return;
	}
	{
		
		if (_1a6539949_is_sig_int((*(_175213_prim))._field_kind)) {
			_case_begin_1a8b71be9:;
			{
				(*((*(_175156_d))._field_constant))._method_set_i64(static_cast<jule::I64>((*((*(_175156_d))._field_constant))._method_as_i64()));
			}
		}
		else if (_1a6539949_is_unsig_int((*(_175213_prim))._field_kind)) {
			_case_begin_1a8b71c60:;
			{
				(*((*(_175156_d))._field_constant))._method_set_u64(static_cast<jule::U64>((*((*(_175156_d))._field_constant))._method_as_u64()));
			}
		}
		else if (_1a6539949_is_float((*(_175213_prim))._field_kind)) {
			_case_begin_1a8b71cc6:;
			{
				(*((*(_175156_d))._field_constant))._method_set_f64(static_cast<jule::F64>((*((*(_175156_d))._field_constant))._method_as_f64()));
			}
		}
		_match_end_1a8b71aa6:;
	}
	(*(_175156_d))._field_model=jule::Any((*(_175156_d))._field_constant);
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_cast_by_type_n_data(jule::Ptr<_1a5e40a26_TypeKind> _177147_t,jule::Ptr<_1a94c333b_Data> _177165_d,_1dd05db0c_Token _177179_error_token) {
	if ((_177165_d != nullptr) && (*(_177165_d))._field_decl) {
		(*this)._method_push_err(_177179_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	{
		
		if (((*((*(_177165_d))._field_kind))._method_prim() != nullptr) && (*((*((*(_177165_d))._field_kind))._method_prim()))._method_is_any()) {
			_case_begin_1a8b779be:;
			{
				if ((*(_177147_t))._method_enm() != nullptr) {
					(*this)._method_push_err(_177179_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				}
			}
		}
		else if ((*(_177147_t))._method_ptr() != nullptr) {
			_case_begin_1a8b7778d:;
			{
				(*this)._method_cast_ptr(_177147_t,_177165_d,_177179_error_token);
			}
		}
		else if ((*(_177147_t))._method_sptr() != nullptr) {
			_case_begin_1a8b77804:;
			{
				(*this)._method_cast_ref(_177147_t,_177165_d,_177179_error_token);
			}
		}
		else if ((*(_177147_t))._method_slc() != nullptr) {
			_case_begin_1a8b7786a:;
			{
				(*this)._method_cast_slc(_177147_t,_177165_d,_177179_error_token);
			}
		}
		else if ((*(_177147_t))._method_strct() != nullptr) {
			_case_begin_1a8b778d1:;
			{
				(*this)._method_cast_struct(_177147_t,_177165_d,_177179_error_token);
			}
		}
		else if ((*(_177147_t))._method_prim() != nullptr) {
			_case_begin_1a8b787a0:;
			{
				(*this)._method_cast_prim(_177147_t,_177165_d,_177179_error_token);
			}
		}
		else {
			_case_begin_1a8b77639:;
			{
				(*this)._method_push_err(_177179_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any((*(_177147_t))._method_to_str())}));
				_177165_d=nullptr;
			}
		}
		_match_end_1a8b775c3:;
	}
	if (_177165_d == nullptr) {
		return nullptr;
	}
	(*(_177165_d))._field_mutable=(*(_177165_d))._field_mutable || ((!((*((*(_177165_d))._field_kind))._method_mutable())) && (*(_177147_t))._method_mutable());
	(*(_177165_d))._field_lvalue=false;
	(*(_177165_d))._field_decl=false;
	(*this)._method_cast_constant(_177147_t,_177165_d);
	if (((*((*(_177165_d))._field_kind))._method_enm() == nullptr) || (!((*((*((*((*((*(_177165_d))._field_kind))._method_enm()))._field_kind))._field_kind))._method_equals(_177147_t)))) {
		(*(_177165_d))._field_cast_kind=_177147_t;
		_1a94c333b_apply_cast_kind(_177165_d);
		(*((*(_177165_d))._field_model.operator jule::Ptr<_1ddb3c047_CastingExprModel>()))._field_token=_177179_error_token;
	} else {
		(*(_177165_d))._field_kind=_177147_t;
	}
	return _177165_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_cast(jule::Ptr<_1dd05c765_CastExpr> _182733_c) {
	jule::Ptr<_1a5e40a26_TypeSymbol> _182817_t = _1dded9779_build_type((*(_182733_c))._field_kind);
	jule::Bool _182913_ok = (*((*(this->self))._field_s))._method_check_type(_182817_t,(*(this->self))._field_lookup);
	if ((!(_182913_ok))) {
		return nullptr;
	}
	jule::Ptr<_1a5e40a26_TypeKind> _183417_prefix = (*(this->self))._field_prefix;
	(*(this->self))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(this->self))._field_prefix=_183417_prefix;
	});
	jule::Ptr<_1a94c333b_Data> _183817_d = (*(this->self))._method_eval_expr_kind((*(_182733_c))._field_expr);
	if (_183817_d == nullptr) {
		return nullptr;
	}
	return (*(this->self))._method_eval_cast_by_type_n_data((*(_182817_t))._field_kind,_183817_d,(*((*(_182733_c))._field_kind))._field_token);
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_ns_selection(jule::Ptr<_1dd05c765_NsSelectionExpr> _184636_s) {
	jule::Str _184713_path = _1a5e40a26_build_link_path_by_tokens((*(_184636_s))._field_ns);
	jule::Ptr<_1c2c4607e_ImportInfo> _184817_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)>([=](jule::Ptr<_1c2c4607e_ImportInfo> _184853_imp) mutable -> jule::Bool {
		if (((*(_184636_s))._field_ns.len() == 1LL) && ((*(_184853_imp))._field_alias == _184713_path)) {
			return true;
		}
		return ((*(_184853_imp))._field_link_path == _184713_path) && (*(_184853_imp))._method_is_accessible_via_selection();
	}));
	if (_184817_imp == nullptr) {
		(*this)._method_push_err((*(_184636_s))._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_184713_path)}));
		return nullptr;
	}
	jule::Trait<_1a6336746_Lookup> _186017_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_184817_imp;
	
	(*this)._method_disallow_builtin();
	jule::Any _186517_def = (*this)._method_get_def((*(_184636_s))._field_ident._field_kind,false);
	(*this)._method_allow_builtin();
	(*this)._field_lookup=_186017_lookup;
	jule::Ptr<_1a94c333b_Data> _186917_d = (*this)._method_eval_def(_186517_def,(*(_184636_s))._field_ident);
	return _186917_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_struct_lit_explicit(jule::Ptr<_1dd0be530_StructIns> _187448_s,jule::Slice<jule::Any> _187513_exprs,_1dd05db0c_Token _187536_error_token) {
	jule::Bool _187613_ok = (*((*(this->self))._field_s))._method_check_generic_quantity(static_cast<jule::Int>((*((*(_187448_s))._field_decl))._field_generics.len()),static_cast<jule::Int>((*(_187448_s))._field_generics.len()),_187536_error_token);
	if ((!(_187613_ok))) {
		return nullptr;
	}
	if (((*(this->self))._field_field != nullptr) && ((*((*((*(this->self))._field_field))._field_decl))._field_owner == (*(_187448_s))._field_decl)) {
		(*(this->self))._method_push_err(_187536_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*((*(_187448_s))._field_decl))._field_ident)}));
	}
	(*(this->self))._method_push_reference_to_struct(_187448_s);
	(*(this->self))._method_check_deprecated((*((*(_187448_s))._field_decl))._field_directives,_187536_error_token);
	_1a93c7a48_StructLitChecker _188917_slc = _1a93c7a48_StructLitChecker(this->self,_187536_error_token,_187448_s,jule::Slice<jule::Ptr<_1ddb3c047_StructArgExprModel>>());
	_188917_slc._method_check(_187513_exprs);
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_187448_s)),jule::Ptr<_1a5e40a26_TypeKind>(),(!((*(this->self))._field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_StructLitExprModel>(new( std::nothrow ) _1ddb3c047_StructLitExprModel(_187536_error_token,_187448_s,_188917_slc._field_args))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_struct_lit(jule::Ptr<_1dd05c765_StructLit> _190939_lit) {
	jule::Ptr<_1a5e40a26_TypeSymbol> _191017_t = _1dded9779_build_type((*(_190939_lit))._field_kind);
	jule::Bool _191113_ok = (*((*(this->self))._field_s))._method_check_type(_191017_t,(*(this->self))._field_lookup);
	if ((!(_191113_ok))) {
		return nullptr;
	}
	jule::Ptr<_1dd0be530_StructIns> _191617_s = (*((*(_191017_t))._field_kind))._method_strct();
	if (_191617_s == nullptr) {
		if ((*((*(_191017_t))._field_kind))._method_sptr() != nullptr) {
			_191617_s=(*((*((*((*(_191017_t))._field_kind))._method_sptr()))._field_elem))._method_strct();
			if (_191617_s != nullptr) {
				goto _julec_label_eval;
			}
		}
		(*(this->self))._method_push_err((*((*(_190939_lit))._field_kind))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_eval:;
	jule::Ptr<_1a94c333b_Data> _192917_d = (*(this->self))._method_eval_struct_lit_explicit(_191617_s,(*(_190939_lit))._field_exprs,(*((*(_190939_lit))._field_kind))._field_token);
	if ((*((*(_191017_t))._field_kind))._method_sptr() != nullptr) {
		jule::Ptr<_1ddb3c047_StructLitExprModel> _193121_model = (*(_192917_d))._field_model.operator jule::Ptr<_1ddb3c047_StructLitExprModel>();
		_1a94c333b_make_struct_lit_alloc(_192917_d,_193121_model);
	}
	return _192917_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_type(jule::Ptr<_1dd05c765_TypeDecl> _193732_t) {
	jule::Ptr<_1a5e40a26_TypeSymbol> _193817_tk = _1dded9779_build_type(_193732_t);
	jule::Bool _193913_ok = (*((*this)._field_s))._method_check_type(_193817_tk,(*this)._field_lookup);
	if ((!(_193913_ok))) {
		return nullptr;
	}
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data((*(_193817_tk))._field_kind,jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any((*(_193817_tk))._field_kind),true,jule::Ptr<_1a64669ca_Const>()));
}



inline void _1a94c333b_Eval::_method_call_type_fn(jule::Ptr<_1dd05c765_FnCallExpr>& _195037_fc,jule::Ptr<_1a94c333b_Data>& _195059_d) {
	if ((*(_195037_fc))._field_generics.len() > 0LL) {
		(*(this->self))._method_push_err((*(_195037_fc))._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any((*((*(_195059_d))._field_kind))._method_to_str())}));
	} else if ((*(_195037_fc))._field_args.len() < 1LL) {
		(*(this->self))._method_push_err((*(_195037_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if ((*(_195037_fc))._field_args.len() > 1LL) {
		(*(this->self))._method_push_err((*((*(_195037_fc))._field_args[1LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	if ((*(_195037_fc))._field_args.len() > 0LL) {
		jule::Ptr<_1a5e40a26_TypeKind> _196021_prefix = (*(this->self))._field_prefix;
		(*(this->self))._field_prefix=nullptr;
		jule::Ptr<_1a94c333b_Data> _196221_arg = (*(this->self))._method_eval_expr_kind((*((*(_195037_fc))._field_args[0LL]))._field_kind);
		(*(this->self))._field_prefix=_196021_prefix;
		if (_196221_arg != nullptr) {
			_195059_d=(*(this->self))._method_eval_cast_by_type_n_data((*(_195059_d))._field_kind,_196221_arg,(*((*(_195037_fc))._field_args[0LL]))._field_token);
		}
	}
	if (_195059_d != nullptr) {
		(*(_195059_d))._field_decl=false;
	}
}



inline std::tuple<jule::Bool,jule::Bool> _1a94c333b_Eval::_method_check_fn_call_generics(jule::Ptr<_1dded9702_FnIns> _197545_f,jule::Ptr<_1dd05c765_FnCallExpr> _197613_fc) {
	jule::Bool _197632_ok = jule::Bool();
	jule::Bool _197642_dynamic_annotation = jule::Bool();
	{
		
		if ((((*((*(_197545_f))._field_decl))._field_generics.len() > 0LL) && ((*(_197613_fc))._field_generics.len() == 0LL)) && ((*(_197545_f))._field_params.len() > 0LL)) {
			_case_begin_1a8bab272:;
			{
				_197642_dynamic_annotation=true;
				(*(_197545_f))._field_generics=jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>::alloc(static_cast<jule::Int>((*((*(_197545_f))._field_decl))._field_generics.len()));
				_197632_ok = true;
				_197642_dynamic_annotation = true;
				return std::make_tuple(_197632_ok,_197642_dynamic_annotation);
			}
		}
		else if ((!((*((*this)._field_s))._method_check_generic_quantity(static_cast<jule::Int>((*((*(_197545_f))._field_decl))._field_generics.len()),static_cast<jule::Int>((*(_197613_fc))._field_generics.len()),(*(_197613_fc))._field_token)))) {
			_case_begin_1a8bab2d8:;
			{
				_197632_ok = false;
				_197642_dynamic_annotation = false;
				return std::make_tuple(_197632_ok,_197642_dynamic_annotation);
			}
		}
		else {
			_case_begin_1a8ba9e41:;
			{
				(*(_197545_f))._field_generics=jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>::alloc(0LL,static_cast<jule::Int>((*((*(_197545_f))._field_decl))._field_generics.len()));
				{
					auto &expr = (*(_197613_fc))._field_generics;
					auto it = expr.begin();
					_iter_begin_1a8baa5c3:;
					if (it != expr.end()) {
						jule::Ptr<_1dd05c765_TypeDecl> _1a94c333b_g = *it;
						{
							jule::Ptr<_1a5e40a26_TypeSymbol> _199125_k = _1dded9779_build_type(_1a94c333b_g);
							_197632_ok=(*((*this)._field_s))._method_check_type(_199125_k,(*this)._field_lookup);
							if ((!(_197632_ok))) {
								_197632_ok = false;
								_197642_dynamic_annotation = false;
								return std::make_tuple(_197632_ok,_197642_dynamic_annotation);
							}
							(*(_197545_f))._field_generics = jule::alloc_for_append((*(_197545_f))._field_generics,1);(*(_197545_f))._field_generics.__push((*(_199125_k))._field_kind);
						}
						_iter_next_1a8baa5c3:;
						++it;
						goto _iter_begin_1a8baa5c3;
					}
					_iter_end_1a8baa5c3:;
				}
				_197632_ok = true;
				_197642_dynamic_annotation = false;
				return std::make_tuple(_197632_ok,_197642_dynamic_annotation);
			}
		}
		_match_end_1a8ba9d97:;
	}
}



inline void _1a94c333b_Eval::_method_call_builtin_fn(jule::Ptr<_1dd05c765_FnCallExpr>& _200340_fc,jule::Ptr<_1a94c333b_Data>& _200362_d) {
	_200362_d=_1a634ca26_find_builtin_caller((*((*((*(_200362_d))._field_kind))._method_fnc()))._field_caller)(this->self,_200340_fc,_200362_d);
	if (_200362_d == nullptr) {
		return;
	}
	(*(_200362_d))._field_mutable=true;
}



inline void _1a94c333b_Eval::_method_check_fn_of_concurrent_call(jule::Ptr<_1dded9702_FnIns>& _201247_f,_1dd05db0c_Token _201258_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto &expr = (*(_201247_f))._field_params;
		auto it = expr.begin();
		_iter_begin_1a8bb9abb:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_ParamIns> &_1a94c333b_p = *it;
			{
				if ((*((*(_1a94c333b_p))._field_decl))._field_reference) {
					(*this)._method_push_err(_201258_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;
				}
			}
			_iter_next_1a8bb9abb:;
			++it;
			goto _iter_begin_1a8bb9abb;
		}
		_iter_end_1a8bb9abb:;
	}
}



inline void _1a94c333b_Eval::_method_process_exceptional_handler(jule::Ptr<_1dded9702_FnIns>& _202551_f,jule::Ptr<_1dd05c765_FnCallExpr>& _202567_fc,jule::Ptr<_1a94c333b_Data>& _202589_d) {
	jule::Bool _202613_result_needed = (!((*((*(_202551_f))._field_decl))._method_is_void())) && (!((*this)._field_ignored));
	jule::Ptr<_1de0e938e_ScopeChecker> _202717_csc = nullptr;
	jule::Ptr<_1de0e938e_Scope> _202817_ch = nullptr;
	jule::Ptr<_1ddb3c047_FnCallExprModel> _203017_model = (*(_202589_d))._field_model.operator jule::Ptr<_1ddb3c047_FnCallExprModel>();
	{
		auto &_match_expr{ (*this)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1c2c46634_Sema>>()) {
			_case_begin_1a8bbd718:;
			{
				jule::Ptr<_1c2c46634_Sema> _203421_s = (*this)._field_lookup.operator jule::Ptr<_1c2c46634_Sema>();
				_202717_csc=_1de0e938e_new_scope_checker(_203421_s,nullptr);
				if (_202613_result_needed) {
					(*(_202717_csc))._field_result=(*(_202551_f))._field_result;
				}
				_202817_ch=jule::new_struct<_1de0e938e_Scope>(new( std::nothrow ) _1de0e938e_Scope());
				(*((*(_202717_csc))._field_table))._field_vars = jule::alloc_for_append((*((*(_202717_csc))._field_table))._field_vars,1);(*((*(_202717_csc))._field_table))._field_vars.__push(_1a94c333b_build_error_var(_202817_ch,_202567_fc));
				(*(_202717_csc))._method_check((*(_202567_fc))._field_exception,_202817_ch);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_ScopeChecker>>()) {
			_case_begin_1a8bbd77e:;
			{
				jule::Ptr<_1de0e938e_ScopeChecker> _204421_sc = (*this)._field_lookup.operator jule::Ptr<_1de0e938e_ScopeChecker>();
				_202717_csc=(*(_204421_sc))._method_new_child_checker();
				if (_202613_result_needed) {
					(*(_202717_csc))._field_result=(*(_202551_f))._field_result;
				}
				_202817_ch=(*(_204421_sc))._method_get_child();
				(*((*(_202717_csc))._field_table))._field_vars = jule::alloc_for_append((*((*(_202717_csc))._field_table))._field_vars,1);(*((*(_202717_csc))._field_table))._field_vars.__push(_1a94c333b_build_error_var(_202817_ch,_202567_fc));
				(*(_204421_sc))._method_check_child_ssc((*(_202567_fc))._field_exception,_202817_ch,_202717_csc);
			}
		}
		_match_end_1a8bbd6b3:;
	}
	(*(_203017_model))._field_assigned=_202613_result_needed;
	(*(_203017_model))._field_except=_202817_ch;
	if (_202613_result_needed && ((*(_202717_csc))._field_result != nullptr)) {
		(*this)._method_push_err((*(_202567_fc))._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	}
}



inline void _1a94c333b_Eval::_method_call_fn(jule::Ptr<_1dd05c765_FnCallExpr>& _206232_fc,jule::Ptr<_1a94c333b_Data>& _206254_d) {
	jule::Ptr<_1dded9702_FnIns> _206317_f = (*((*(_206254_d))._field_kind))._method_fnc();
	if ((*(_206317_f))._method_is_builtin()) {
		(*(this->self))._method_call_builtin_fn(_206232_fc,_206254_d);
		return;
	}
	if ((!((*((*(_206317_f))._field_decl))._method_is_method())) && _1a5e40a26_has_directive((*((*(_206317_f))._field_decl))._field_directives,jule::Str("test", 4))) {
		(*(this->self))._method_push_err((*(_206232_fc))._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_206254_d=nullptr;
		return;
	}
	if ((((!((*(_206254_d))._field_mutable)) && (*((*(_206317_f))._field_decl))._method_is_method()) && (!((*((*(_206317_f))._field_decl))._field_statically))) && (*((*((*(_206317_f))._field_decl))._field_params[0LL]))._field_mutable) {
		(*(this->self))._method_push_err((*(_206232_fc))._field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	} else if ((!((*(this->self))._method_is_unsafe())) && (*((*(_206317_f))._field_decl))._field_unsafety) {
		(*(this->self))._method_push_err((*(_206232_fc))._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	jule::Bool _208118_ok;
	jule::Bool _208122_dynamic_annotation;
	std::tie(_208118_ok,_208122_dynamic_annotation) = (*(this->self))._method_check_fn_call_generics(_206317_f,_206232_fc);
	if ((!(_208118_ok))) {
		_206254_d=nullptr;
		return;
	}
	jule::Ptr<_1c2c46634_Sema> _208717_old = (*(this->self))._field_s;
	if ((*((*(_206317_f))._field_decl))._field_owner != nullptr) {
		(*(this->self))._field_s=(*((*((*(_206317_f))._field_decl))._field_owner))._field_sema;
	}
	__JULE_DEFER({
		if (_208717_old != (*(this->self))._field_s) {
			(*(_208717_old))._field_errors=jule::append((*(_208717_old))._field_errors,(*((*(this->self))._field_s))._field_errors);
			(*((*(this->self))._field_s))._field_errors=nullptr;
		}
		(*(this->self))._field_s=_208717_old;
	});
	if ((!(_208122_dynamic_annotation))) {
		if ((!((*(_206317_f))._field_reloaded))) {
			_208118_ok=(*((*(this->self))._field_s))._method_reload_fn_ins_types(_206317_f);
			if ((!(_208118_ok))) {
				_206254_d=nullptr;
				return;
			}
			(*(_206317_f))._field_reloaded=true;
		}
	} else {
		(*((*(this->self))._field_s))._method_build_fn_non_generic_type_kinds(_206317_f);
	}
	_1a93c7a48_FnCallArgChecker _211317_fcac = _1a93c7a48_FnCallArgChecker(this->self,(*(_206232_fc))._field_args,(*(_206232_fc))._field_token,_206317_f,_208122_dynamic_annotation,jule::Slice<jule::Any>());
	if ((*((*(_206317_f))._field_decl))._field_owner != nullptr) {
		std::tie(_208717_old,(*(this->self))._field_s) = std::make_tuple((*(this->self))._field_s,_208717_old);
		_208118_ok=_211317_fcac._method_check();
		std::tie(_208717_old,(*(this->self))._field_s) = std::make_tuple((*(this->self))._field_s,_208717_old);
	} else {
		_208118_ok=_211317_fcac._method_check();
	}
	if ((!(_208118_ok)) && _208122_dynamic_annotation) {
		_206254_d=nullptr;
		return;
	}
	jule::Bool _213314_is_unique_ins;
	jule::Int _213329_pos;
	std::tie(_213314_is_unique_ins,_213329_pos) = (*((*(_206317_f))._field_decl))._method_append_instance(_206317_f);
	if ((!(_213314_is_unique_ins))) {
		_206317_f=(*((*(_206317_f))._field_decl))._field_instances[_213329_pos];
	}
	jule::Any _213817_call_model = (*(_206254_d))._field_model;
	if ((*((*(_206317_f))._field_decl))._method_is_void()) {
		_206254_d=_1a94c333b_build_void_data();
	} else {
		if (_208122_dynamic_annotation) {
			_208118_ok=(*((*(this->self))._field_s))._method_reload_fn_ins_types(_206317_f);
			if ((!(_208118_ok))) {
				_206254_d=nullptr;
				return;
			}
			(*(_206317_f))._field_reloaded=true;
		}
		(*(_206254_d))._field_kind=(*(_206317_f))._field_result;
		(*(_206254_d))._field_lvalue=false;
	}
	(*(_206254_d))._field_mutable=true;
	(*(_206254_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_FnCallExprModel>(new( std::nothrow ) _1ddb3c047_FnCallExprModel((*(_206232_fc))._field_token,_206317_f,jule::Bool(),_213817_call_model,_211317_fcac._field_arg_models,jule::Ptr<_1de0e938e_Scope>(),jule::Bool())));
	if ((*((*(_206317_f))._field_decl))._field_exceptional) {
		{
			
			if ((*(_206232_fc))._method_unhandled()) {
				_case_begin_1a8bd9e3d:;
				{
					(*(this->self))._method_push_err((*(_206232_fc))._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					(*(this->self))._method_push_suggestion(jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if ((*(_206232_fc))._method_ignored()) {
				_case_begin_1a8bd9811:;
			}
			else {
				_case_begin_1a8bd947b:;
				{
					(*(this->self))._method_process_exceptional_handler(_206317_f,_206232_fc,_206254_d);
				}
			}
			_match_end_1a8bd93b0:;
		}
	} else if ((!((*(_206232_fc))._method_unhandled()))) {
		(*(this->self))._method_push_err((*(_206232_fc))._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	}
	if (((*(_206317_f))._field_generics.len() > 0LL) && _213314_is_unique_ins) {
		(*((*(this->self))._field_s))._method_check_fn_ins(_206317_f);
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_fn_call(jule::Ptr<_1dd05c765_FnCallExpr> _218636_fc) {
	jule::Ptr<_1a5e40a26_TypeKind> _218717_prefix = (*(this->self))._field_prefix;
	(*(this->self))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(this->self))._field_prefix=_218717_prefix;
	});
	{
		auto &_match_expr{ (*((*(_218636_fc))._field_expr))._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_IdentExpr>>()) {
			_case_begin_1a8bdeb02:;
			{
				if ((*((*(_218636_fc))._field_expr))._field_token._field_kind == jule::Str("error", 5)) {
					return _1a634ca26_builtin_caller_error(this->self,_218636_fc);
				}
			}
		}
		_match_end_1a8bde65c:;
	}
	jule::Ptr<_1a94c333b_Data> _220017_d = (*(this->self))._method_eval_expr_kind((*((*(_218636_fc))._field_expr))._field_kind);
	if (_220017_d == nullptr) {
		return nullptr;
	}
	if ((*(_220017_d))._field_decl) {
		(*(this->self))._method_call_type_fn(_218636_fc,_220017_d);
		return _220017_d;
	}
	if ((*((*(_220017_d))._field_kind))._method_fnc() == nullptr) {
		(*(this->self))._method_push_err((*(_218636_fc))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	(*(this->self))._method_call_fn(_218636_fc,_220017_d);
	return _220017_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_enum_static(jule::Ptr<_1de0dbeb9_Enum> _221939_enm,_1dd05db0c_Token _221951_ident) {
	jule::Ptr<_1a94c333b_Data> _222017_d = jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_221939_enm)),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a64669ca_Const>()));
	jule::Ptr<_1de0dbeb9_EnumItem> _222917_item = (*(_221939_enm))._method_find_item(_221951_ident._field_kind);
	if (_222917_item == nullptr) {
		(*this)._method_push_err(_221951_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any((*(_221939_enm))._field_ident),jule::Any(_221951_ident._field_kind)}));
	} else {
		(*(_222017_d))._field_constant=jule::new_ptr<_1a64669ca_Const>((*((*((*((*(_222917_item))._field_value))._field_data))._field_constant)));
		(*(_222017_d))._field_model=jule::Any((*(_222017_d))._field_constant);
		_1a94c333b_apply_cast_model_by_enum(_222017_d,_221939_enm);
	}
	return _222017_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_struct_static(jule::Ptr<_1dd0be530_StructIns> _224141_s,_1dd05db0c_Token _224156_ident) {
	jule::Ptr<_1a94c333b_Data> _224217_d = jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a64669ca_Const>()));
	
	jule::Ptr<_1dded9702_Fn> _225017_method = (*(_224141_s))._method_find_method(_224156_ident._field_kind,true);
	if (_225017_method != nullptr) {
		if ((!((*((*this)._field_s))._method_is_accessible_define((*(_225017_method))._field_public,(*(_225017_method))._field_token)))) {
			(*this)._method_push_err(_224156_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_224156_ident._field_kind)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1dded9702_FnIns> _225721_ins = (*(_225017_method))._method_instance();
		(*(_225721_ins))._field_owner=_224141_s;
		(*this)._method_push_reference_to_fn(_225721_ins);
		(*(_224217_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_StructStaticIdentExprModel>(new( std::nothrow ) _1ddb3c047_StructStaticIdentExprModel(_224141_s,(*(_224217_d))._field_model,_225721_ins)));
		(*(_224217_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_225721_ins));
		return _224217_d;
	}
	jule::Ptr<_1c3c3d174_Var> _226917_sttc = (*((*(_224141_s))._field_decl))._method_find_static(_224156_ident._field_kind);
	if (_226917_sttc != nullptr) {
		return (*this)._method_eval_var(_226917_sttc,_224156_ident);
	}
	(*this)._method_push_err(_224156_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any((*((*(_224141_s))._field_decl))._field_ident),jule::Any(_224156_ident._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_trait_sub_ident(jule::Ptr<_1a94c333b_Data> _227843_d,jule::Ptr<_1de043c01_Trait> _227857_trt,_1dd05db0c_Token _227874_ident) {
	jule::Ptr<_1dded9702_Fn> _227917_f = (*(_227857_trt))._method_find_method(_227874_ident._field_kind);
	if (_227917_f == nullptr) {
		(*this)._method_push_err(_227874_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any((*(_227857_trt))._field_ident),jule::Any(_227874_ident._field_kind)}));
		return nullptr;
	}
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),(*(_227917_f))._method_instance())),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_TraitSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_TraitSubIdentExprModel(_227874_ident,(*(_227843_d))._field_model,_227874_ident._field_kind))),false,jule::Ptr<_1a64669ca_Const>()));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_struct_sub_ident(jule::Ptr<_1a94c333b_Data> _229844_d,jule::Ptr<_1dd0be530_StructIns> _229858_s,jule::Ptr<_1dd05c765_SubIdentExpr> _229873_si,jule::Bool _229892_ref) {
	jule::Ptr<_1dd0be530_FieldIns> _229917_f = (*(_229858_s))._method_find_field((*(_229873_si))._field_ident._field_kind);
	if (_229917_f != nullptr) {
		if ((!((*((*this)._field_s))._method_is_accessible_define((*((*(_229917_f))._field_decl))._field_public,(*((*(_229917_f))._field_decl))._field_token)))) {
			(*this)._method_push_err((*(_229873_si))._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any((*((*(_229917_f))._field_decl))._field_ident)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1ddb3c047_StructSubIdentExprModel> _230621_model = jule::new_struct<_1ddb3c047_StructSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_StructSubIdentExprModel((*(_229844_d))._field_model,(*(_229844_d))._field_kind,jule::Ptr<_1dded9702_FnIns>(),_229917_f));
		(*(_229844_d))._field_model=jule::Any(_230621_model);
		(*(_229844_d))._field_kind=(*(_229917_f))._field_kind;
		(*(_229844_d))._field_lvalue=true;
		if ((*((*(_229917_f))._field_decl))._field_mutable && (!((*(_229844_d))._field_mutable))) {
			{
				auto &_match_expr{ (*this)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1de0e938e_ScopeChecker>>()) {
					_case_begin_1a8c09336:;
					{
						jule::Ptr<_1de0e938e_ScopeChecker> _231925_scope = (*((*this)._field_lookup.operator jule::Ptr<_1de0e938e_ScopeChecker>()))._method_get_root();
						(*(_229844_d))._field_mutable=((*(_231925_scope))._field_owner != nullptr) && ((*((*(_231925_scope))._field_owner))._field_owner == _229858_s);
						if ((*(_229844_d))._field_mutable) {
							jule::Ptr<_1c3c3d174_Var> _232233_field = (*(_230621_model))._field_expr.operator jule::Ptr<_1c3c3d174_Var>();
							jule::Ptr<_1c3c3d174_Var> _232333_v = jule::new_struct<_1c3c3d174_Var>(new( std::nothrow ) _1c3c3d174_Var((*(_232233_field))._field_scope,(*(_232233_field))._field_token,(*(_232233_field))._field_ident,(*(_232233_field))._field_cpp_linked,(*(_232233_field))._field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),(*(_232233_field))._field_kind,(*(_232233_field))._field_value,jule::Ptr<_1dded9779_ReferenceStack>(),jule::Slice<jule::Ptr<_1dd05c765_Directive>>(),jule::Ptr<_1c3c3d174_IterRelation>(),jule::Slice<jule::Ptr<_1c3c3d174_Var>>()));
							(*(_232333_v))._field_mutable=true;
							(*(_230621_model))._field_expr=jule::Any(_232333_v);
						}
					}
				}
				_match_end_1a8c09237:;
			}
		}
		return _229844_d;
	}
	
	jule::Ptr<_1dded9702_Fn> _234217_m = (*(_229858_s))._method_find_method((*(_229873_si))._field_ident._field_kind,false);
	if (_234217_m == nullptr) {
		(*this)._method_push_err((*(_229873_si))._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any((*((*(_229858_s))._field_decl))._field_ident),jule::Any((*(_229873_si))._field_ident._field_kind)}));
		return nullptr;
	}
	if ((!((*((*this)._field_s))._method_is_accessible_define((*(_234217_m))._field_public,(*(_234217_m))._field_token)))) {
		(*this)._method_push_err((*(_229873_si))._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any((*(_234217_m))._field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	if ((*((*(_234217_m))._field_params[0LL]))._method_is_ref() && (!(_229892_ref))) {
		(*this)._method_push_err((*(_229873_si))._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	}
	(*this)._method_check_deprecated((*(_234217_m))._field_directives,(*(_229873_si))._field_ident);
	jule::Ptr<_1dded9702_FnIns> _235817_ins = (*(_234217_m))._method_instance();
	(*(_235817_ins))._field_owner=_229858_s;
	(*this)._method_push_reference_to_fn(_235817_ins);
	(*(_229844_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_StructSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_StructSubIdentExprModel((*(_229844_d))._field_model,(*(_229844_d))._field_kind,_235817_ins,jule::Ptr<_1dd0be530_FieldIns>())));
	(*(_229844_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_235817_ins));
	return _229844_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_slice_sub_ident(jule::Ptr<_1a94c333b_Data> _237043_d,_1dd05db0c_Token _237053_ident) {
	{
		auto &_match_expr{ _237053_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a8c17531:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_CommonSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonSubIdentExprModel((*(_237043_d))._field_kind,(*(_237043_d))._field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1a8c17597:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_CommonSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonSubIdentExprModel((*(_237043_d))._field_kind,(*(_237043_d))._field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a8c163ba:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>({jule::new_struct<_1dded9702_ParamIns>(new( std::nothrow ) _1dded9702_ParamIns(jule::new_struct_ptr<_1dded9702_Param>(new( std::nothrow ) _1dded9702_Param(_1dd05db0c_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeSymbol>(),jule::Str("i", 1))),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3)))))),jule::new_struct<_1dded9702_ParamIns>(new( std::nothrow ) _1dded9702_ParamIns(jule::new_struct_ptr<_1dded9702_Param>(new( std::nothrow ) _1dded9702_Param(_1dd05db0c_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeSymbol>(),jule::Str("j", 1))),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3))))))}),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),2LLU,jule::Bool())))),jule::Ptr<_1a5e40a26_TypeKind>(),(*(_237043_d))._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_CommonSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonSubIdentExprModel((*(_237043_d))._field_kind,(*(_237043_d))._field_model,jule::Str("swap", 4)))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else {
			_case_begin_1a8c16002:;
			{
				(*this)._method_push_err(_237053_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any((*((*(_237043_d))._field_kind))._method_to_str()),jule::Any(_237053_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c16178:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_array_sub_ident(jule::Ptr<_1a94c333b_Data> _242943_d,_1dd05db0c_Token _242953_ident) {
	{
		auto &_match_expr{ _242953_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a8c1daba:;
			{
				jule::Ptr<_1a64669ca_Const> _243221_c = _1a64669ca_Const::_static_method_new_i64(static_cast<jule::I64>(static_cast<jule::I64>((*((*((*(_242943_d))._field_kind))._method_arr()))._field_n)));
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_243221_c),jule::Bool(),_243221_c));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a8c1db31:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>({jule::new_struct<_1dded9702_ParamIns>(new( std::nothrow ) _1dded9702_ParamIns(jule::new_struct_ptr<_1dded9702_Param>(new( std::nothrow ) _1dded9702_Param(_1dd05db0c_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeSymbol>(),jule::Str("i", 1))),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3)))))),jule::new_struct<_1dded9702_ParamIns>(new( std::nothrow ) _1dded9702_ParamIns(jule::new_struct_ptr<_1dded9702_Param>(new( std::nothrow ) _1dded9702_Param(_1dd05db0c_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeSymbol>(),jule::Str("j", 1))),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3))))))}),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),2LLU,jule::Bool())))),jule::Ptr<_1a5e40a26_TypeKind>(),(*(_242943_d))._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_CommonSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonSubIdentExprModel((*(_242943_d))._field_kind,(*(_242943_d))._field_model,jule::Str("swap", 4)))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else {
			_case_begin_1a8c1c58b:;
			{
				(*this)._method_push_err(_242953_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any((*((*(_242943_d))._field_kind))._method_to_str()),jule::Any(_242953_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c1c712:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_map_sub_ident(jule::Ptr<_1a94c333b_Data> _247541_d,_1dd05db0c_Token _247551_ident) {
	jule::Ptr<_1a5e40a26_Map> _247617_map_kind = (*((*(_247541_d))._field_kind))._method_map();
	{
		auto &_match_expr{ _247551_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a8c252ec:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_CommonSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonSubIdentExprModel((*(_247541_d))._field_kind,(*(_247541_d))._field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1a8c25099:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),2LLU,jule::Bool())))),jule::Ptr<_1a5e40a26_TypeKind>(),(*(_247541_d))._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_CommonSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonSubIdentExprModel((*(_247541_d))._field_kind,(*(_247541_d))._field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1a8c25110:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a5e40a26_Slc>(new( std::nothrow ) _1a5e40a26_Slc((*(_247617_map_kind))._field_key)))),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),2LLU,jule::Bool())))),jule::Ptr<_1a5e40a26_TypeKind>(),(*(_247541_d))._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_CommonSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonSubIdentExprModel((*(_247541_d))._field_kind,(*(_247541_d))._field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1a8c25176:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a5e40a26_Slc>(new( std::nothrow ) _1a5e40a26_Slc((*(_247617_map_kind))._field_val)))),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),2LLU,jule::Bool())))),jule::Ptr<_1a5e40a26_TypeKind>(),(*(_247541_d))._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_CommonSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonSubIdentExprModel((*(_247541_d))._field_kind,(*(_247541_d))._field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1a8c251dc:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>({jule::new_struct<_1dded9702_ParamIns>(new( std::nothrow ) _1dded9702_ParamIns(jule::new_struct_ptr<_1dded9702_Param>(new( std::nothrow ) _1dded9702_Param(_1dd05db0c_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeSymbol>(),jule::Str("key", 3))),(*(_247617_map_kind))._field_key))}),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),1LLU,jule::Bool())))),jule::Ptr<_1a5e40a26_TypeKind>(),(*(_247541_d))._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_CommonSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonSubIdentExprModel((*(_247541_d))._field_kind,(*(_247541_d))._field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1a8c23cbd:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>({jule::new_struct<_1dded9702_ParamIns>(new( std::nothrow ) _1dded9702_ParamIns(jule::new_struct_ptr<_1dded9702_Param>(new( std::nothrow ) _1dded9702_Param(_1dd05db0c_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeSymbol>(),jule::Str("key", 3))),(*(_247617_map_kind))._field_key))}),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),2LLU,jule::Bool())))),jule::Ptr<_1a5e40a26_TypeKind>(),(*(_247541_d))._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_CommonSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonSubIdentExprModel((*(_247541_d))._field_kind,(*(_247541_d))._field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else {
			_case_begin_1a8c2353c:;
			{
				(*this)._method_push_err(_247551_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any((*(_247617_map_kind))._method_to_str()),jule::Any(_247551_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c23b7a:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_str_sub_ident(jule::Ptr<_1a94c333b_Data> _259841_d,_1dd05db0c_Token _259851_ident) {
	jule::Ptr<_1a5e40a26_TypeKind> _259917_str_kind = jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("str", 3))));
	{
		auto &_match_expr{ _259851_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a8c310a5:;
			{
				jule::Ptr<_1a94c333b_Data> _260221_sd = jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
				if ((*(_259841_d))._method_is_const()) {
					(*(_260221_sd))._field_constant=_1a64669ca_Const::_static_method_new_i64(static_cast<jule::I64>(static_cast<jule::I64>((*((*(_259841_d))._field_constant))._method_read_str().len())));
					(*(_260221_sd))._field_model=jule::Any((*(_260221_sd))._field_constant);
				} else {
					(*(_260221_sd))._field_model=jule::Any(jule::new_struct<_1ddb3c047_CommonSubIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonSubIdentExprModel((*(_259841_d))._field_kind,(*(_259841_d))._field_model,jule::Str("len()", 5))));
				}
				return _260221_sd;
			}
		}
		else {
			_case_begin_1a8c2e56a:;
			{
				(*this)._method_push_err(_259851_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any((*(_259917_str_kind))._method_to_str()),jule::Any(_259851_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c2ed0c:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_int_type_static(_1dd05db0c_Token _262339_ident) {
	
	{
		auto &_match_expr{ _262339_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8c3594a:;
			{
				jule::Ptr<_1a64669ca_Const> _262821_c = _1a64669ca_Const::_static_method_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a646eebc_max(jule::Str("int", 3)))));
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_262821_c),jule::Bool(),_262821_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a8c359b1:;
			{
				jule::Ptr<_1a64669ca_Const> _263621_c = _1a64669ca_Const::_static_method_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a646eebc_min(jule::Str("int", 3)))));
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_263621_c),jule::Bool(),_263621_c));
			}
		}
		else {
			_case_begin_1a8c34592:;
			{
				(*this)._method_push_err(_262339_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_262339_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c348e4:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_uint_type_static(_1dd05db0c_Token _264940_ident) {
	
	{
		auto &_match_expr{ _264940_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8c39dd3:;
			{
				jule::Ptr<_1a64669ca_Const> _265421_c = _1a64669ca_Const::_static_method_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1a646eebc_max(jule::Str("uint", 4)))));
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_265421_c),jule::Bool(),_265421_c));
			}
		}
		else {
			_case_begin_1a8c38a2a:;
			{
				(*this)._method_push_err(_264940_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_264940_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c38d7c:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_i8_type_static(_1dd05db0c_Token _266738_ident) {
	
	
	
	{
		auto &_match_expr{ _266738_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8c3d634:;
			{
				jule::Ptr<_1a64669ca_Const> _267421_c = _1a64669ca_Const::_static_method_new_i64(127LL);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("i8", 2)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_267421_c),jule::Bool(),_267421_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a8c3d69a:;
			{
				jule::Ptr<_1a64669ca_Const> _268221_c = _1a64669ca_Const::_static_method_new_i64(-128LL);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("i8", 2)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_268221_c),jule::Bool(),_268221_c));
			}
		}
		else {
			_case_begin_1a8c3c402:;
			{
				(*this)._method_push_err(_266738_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_266738_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c3c5bc:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_i16_type_static(_1dd05db0c_Token _269539_ident) {
	
	
	
	{
		auto &_match_expr{ _269539_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8c42a34:;
			{
				jule::Ptr<_1a64669ca_Const> _270221_c = _1a64669ca_Const::_static_method_new_i64(32767LL);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("i16", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_270221_c),jule::Bool(),_270221_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a8c42a9a:;
			{
				jule::Ptr<_1a64669ca_Const> _271021_c = _1a64669ca_Const::_static_method_new_i64(-32768LL);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("i16", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_271021_c),jule::Bool(),_271021_c));
			}
		}
		else {
			_case_begin_1a8c41802:;
			{
				(*this)._method_push_err(_269539_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_269539_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c419bc:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_i32_type_static(_1dd05db0c_Token _272339_ident) {
	
	
	
	{
		auto &_match_expr{ _272339_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8c46e34:;
			{
				jule::Ptr<_1a64669ca_Const> _273021_c = _1a64669ca_Const::_static_method_new_i64(2147483647LL);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("i32", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_273021_c),jule::Bool(),_273021_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a8c46e9a:;
			{
				jule::Ptr<_1a64669ca_Const> _273821_c = _1a64669ca_Const::_static_method_new_i64(-2147483648LL);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("i32", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_273821_c),jule::Bool(),_273821_c));
			}
		}
		else {
			_case_begin_1a8c45c02:;
			{
				(*this)._method_push_err(_272339_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_272339_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c45dbc:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_i64_type_static(_1dd05db0c_Token _275139_ident) {
	
	
	
	{
		auto &_match_expr{ _275139_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8c4b29b:;
			{
				jule::Ptr<_1a64669ca_Const> _275821_c = _1a64669ca_Const::_static_method_new_i64(jule::MAX_I64);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_275821_c),jule::Bool(),_275821_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a8c4b312:;
			{
				jule::Ptr<_1a64669ca_Const> _276621_c = _1a64669ca_Const::_static_method_new_i64(jule::MIN_I64);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276621_c),jule::Bool(),_276621_c));
			}
		}
		else {
			_case_begin_1a8c4a19b:;
			{
				(*this)._method_push_err(_275139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_275139_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c4a256:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_u8_type_static(_1dd05db0c_Token _277938_ident) {
	
	
	{
		auto &_match_expr{ _277938_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8c50569:;
			{
				jule::Ptr<_1a64669ca_Const> _278521_c = _1a64669ca_Const::_static_method_new_u64(255LLU);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("u8", 2)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_278521_c),jule::Bool(),_278521_c));
			}
		}
		else {
			_case_begin_1a8c4e4e1:;
			{
				(*this)._method_push_err(_277938_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_277938_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c4e48b:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_u16_type_static(_1dd05db0c_Token _279839_ident) {
	
	
	{
		auto &_match_expr{ _279839_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8c5356c:;
			{
				jule::Ptr<_1a64669ca_Const> _280421_c = _1a64669ca_Const::_static_method_new_u64(65535LLU);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("u16", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_280421_c),jule::Bool(),_280421_c));
			}
		}
		else {
			_case_begin_1a8c524e4:;
			{
				(*this)._method_push_err(_279839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_279839_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c5248e:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_u32_type_static(_1dd05db0c_Token _281739_ident) {
	
	
	{
		auto &_match_expr{ _281739_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8c56570:;
			{
				jule::Ptr<_1a64669ca_Const> _282321_c = _1a64669ca_Const::_static_method_new_u64(4294967295LLU);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("u32", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_282321_c),jule::Bool(),_282321_c));
			}
		}
		else {
			_case_begin_1a8c55508:;
			{
				(*this)._method_push_err(_281739_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_281739_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c554a3:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_u64_type_static(_1dd05db0c_Token _283639_ident) {
	
	
	{
		auto &_match_expr{ _283639_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8c5952e:;
			{
				jule::Ptr<_1a64669ca_Const> _284221_c = _1a64669ca_Const::_static_method_new_u64(jule::MAX_U64);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("u64", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_284221_c),jule::Bool(),_284221_c));
			}
		}
		else {
			_case_begin_1a8c584a6:;
			{
				(*this)._method_push_err(_283639_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_283639_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c58451:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_f32_type_tatic(_1dd05db0c_Token _285538_ident) {
	
	
	
	
	{
		auto &_match_expr{ _285538_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8c5cc08:;
			{
				jule::Ptr<_1a64669ca_Const> _286321_c = _1a64669ca_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_286321_c),jule::Bool(),_286321_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a8c5c9b6:;
			{
				jule::Ptr<_1a64669ca_Const> _287121_c = _1a64669ca_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287121_c),jule::Bool(),_287121_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1a8c5ca2c:;
			{
				jule::Ptr<_1a64669ca_Const> _287921_c = _1a64669ca_Const::_static_method_new_f64(0.00000000000000000000000000000000000000000000140129846432481707);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287921_c),jule::Bool(),_287921_c));
			}
		}
		else {
			_case_begin_1a8c5b652:;
			{
				(*this)._method_push_err(_285538_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_285538_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c5bb4c:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_f64_type_static(_1dd05db0c_Token _289239_ident) {
	
	
	
	
	{
		auto &_match_expr{ _289239_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8c633b2:;
			{
				jule::Ptr<_1a64669ca_Const> _290021_c = _1a64669ca_Const::_static_method_new_f64(jule::MAX_F64);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_290021_c),jule::Bool(),_290021_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a8c63170:;
			{
				jule::Ptr<_1a64669ca_Const> _290821_c = _1a64669ca_Const::_static_method_new_f64(jule::MIN_F64);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_290821_c),jule::Bool(),_290821_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1a8c631d6:;
			{
				jule::Ptr<_1a64669ca_Const> _291621_c = _1a64669ca_Const::_static_method_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_291621_c),jule::Bool(),_291621_c));
			}
		}
		else {
			_case_begin_1a8c62081:;
			{
				(*this)._method_push_err(_289239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_289239_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c62306:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_prim_static(jule::Str _292935_kind,_1dd05db0c_Token _292946_ident) {
	{
		auto &_match_expr{ _292935_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a8c67e99:;
			{
				return (*this)._method_eval_int_type_static(_292946_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a8c68010:;
			{
				return (*this)._method_eval_uint_type_static(_292946_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a8c67cac:;
			{
				return (*this)._method_eval_i8_type_static(_292946_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a8c67d23:;
			{
				return (*this)._method_eval_i16_type_static(_292946_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a8c67d89:;
			{
				return (*this)._method_eval_i32_type_static(_292946_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a8c67e00:;
			{
				return (*this)._method_eval_i64_type_static(_292946_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a8c67174:;
			{
				return (*this)._method_eval_u8_type_static(_292946_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a8c671da:;
			{
				return (*this)._method_eval_u16_type_static(_292946_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a8c67262:;
			{
				return (*this)._method_eval_u32_type_static(_292946_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a8c672d9:;
			{
				return (*this)._method_eval_u64_type_static(_292946_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a8c68098:;
			{
				return (*this)._method_eval_f32_type_tatic(_292946_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a8c6810e:;
			{
				return (*this)._method_eval_f64_type_static(_292946_ident);
			}
		}
		else {
			_case_begin_1a8c66dee:;
			{
				(*this)._method_push_err(_292946_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_292935_kind),jule::Any(_292946_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c63538:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_type_static(jule::Ptr<_1a94c333b_Data> _294939_d,jule::Ptr<_1dd05c765_SubIdentExpr> _294953_si) {
	{
		
		if ((*((*(_294939_d))._field_kind))._method_prim() != nullptr) {
			_case_begin_1a8c6e8eb:;
			{
				return (*this)._method_eval_prim_static((*((*((*(_294939_d))._field_kind))._method_prim()))._method_to_str(),(*(_294953_si))._field_ident);
			}
		}
		else if ((*((*(_294939_d))._field_kind))._method_enm() != nullptr) {
			_case_begin_1a8c6e9d9:;
			{
				return (*this)._method_eval_enum_static((*((*(_294939_d))._field_kind))._method_enm(),(*(_294953_si))._field_ident);
			}
		}
		else if ((*((*(_294939_d))._field_kind))._method_strct() != nullptr) {
			_case_begin_1a8c6ea50:;
			{
				return (*this)._method_eval_struct_static((*((*(_294939_d))._field_kind))._method_strct(),(*(_294953_si))._field_ident);
			}
		}
		else {
			_case_begin_1a8c6d60e:;
			{
				(*this)._method_push_err((*(_294953_si))._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>({jule::Any((*((*(_294939_d))._field_kind))._method_to_str())}));
				return nullptr;
			}
		}
		_match_end_1a8c6d565:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_obj_sub_ident(jule::Ptr<_1a94c333b_Data> _296641_d,jule::Ptr<_1dd05c765_SubIdentExpr> _296655_si) {
	jule::Ptr<_1a5e40a26_TypeKind> _296717_kind = (*(_296641_d))._field_kind;
	if ((*((*(_296641_d))._field_kind))._method_ptr() != nullptr) {
		jule::Ptr<_1a5e40a26_Ptr> _296917_ptr = (*((*(_296641_d))._field_kind))._method_ptr();
		if ((!((*(_296917_ptr))._method_is_unsafe()))) {
			if ((!((*(_296655_si))._field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err((*(_296655_si))._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
			_296717_kind=(*((*((*(_296641_d))._field_kind))._method_ptr()))._field_elem;
			jule::Ptr<_1a94c333b_Data> _297525_model = jule::new_ptr<_1a94c333b_Data>((*(_296641_d)));
			_1dd05db0c_Token _297825_token = (*(_296655_si))._field_ident;
			_297825_token._field_id=static_cast<jule::Uint>(7LLU);
			_297825_token._field_kind=jule::Str("*", 1);
			(*(_296641_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_UnaryExprModel>(new( std::nothrow ) _1ddb3c047_UnaryExprModel(_297525_model,_297825_token)));
		}
	} else if ((*((*(_296641_d))._field_kind))._method_sptr() != nullptr) {
		_296717_kind=(*((*((*(_296641_d))._field_kind))._method_sptr()))._field_elem;
		jule::Ptr<_1a94c333b_Data> _299021_model = jule::new_ptr<_1a94c333b_Data>((*(_296641_d)));
		_1dd05db0c_Token _299121_token = (*(_296655_si))._field_ident;
		_299121_token._field_id=static_cast<jule::Uint>(7LLU);
		_299121_token._field_kind=jule::Str("*", 1);
		(*(_296641_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_UnaryExprModel>(new( std::nothrow ) _1ddb3c047_UnaryExprModel(_299021_model,_299121_token)));
	}
	{
		
		if ((*((*(_296641_d))._field_kind))._method_trt() != nullptr) {
			_case_begin_1a8c7a9b2:;
			{
				return (*this)._method_eval_trait_sub_ident(_296641_d,(*((*(_296641_d))._field_kind))._method_trt(),(*(_296655_si))._field_ident);
			}
		}
		else if ((*(_296717_kind))._method_strct() != nullptr) {
			_case_begin_1a8c7aa28:;
			{
				jule::Ptr<_1dd0be530_StructIns> _300517_s = (*(_296717_kind))._method_strct();
				if (_1a94c333b_is_instanced_struct(_300517_s)) {
					jule::Bool _300725_used_reference_elem = (*((*(_296641_d))._field_kind))._method_sptr() != nullptr;
					return (*this)._method_eval_struct_sub_ident(_296641_d,(*(_296717_kind))._method_strct(),_296655_si,_300725_used_reference_elem);
				}
			}
		}
		else if ((*(_296717_kind))._method_slc() != nullptr) {
			_case_begin_1a8c7aa8e:;
			{
				return (*this)._method_eval_slice_sub_ident(_296641_d,(*(_296655_si))._field_ident);
			}
		}
		else if ((*(_296717_kind))._method_arr() != nullptr) {
			_case_begin_1a8c7ab05:;
			{
				return (*this)._method_eval_array_sub_ident(_296641_d,(*(_296655_si))._field_ident);
			}
		}
		else if ((*(_296717_kind))._method_map() != nullptr) {
			_case_begin_1a8c7ab6b:;
			{
				return (*this)._method_eval_map_sub_ident(_296641_d,(*(_296655_si))._field_ident);
			}
		}
		else if ((*(_296717_kind))._method_prim() != nullptr) {
			_case_begin_1a8c7abd2:;
			{
				jule::Ptr<_1a5e40a26_Prim> _302117_p = (*(_296717_kind))._method_prim();
				{
					auto &_match_expr{ (*(_302117_p))._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1a8c82744:;
						{
							return (*this)._method_eval_str_sub_ident(_296641_d,(*(_296655_si))._field_ident);
						}
					}
					_match_end_1a8c826de:;
				}
			}
		}
		_match_end_1a8c7a6d7:;
	}
	(*this)._method_push_err((*(_296655_si))._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>({jule::Any((*((*(_296641_d))._field_kind))._method_to_str())}));
	return nullptr;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_sub_ident(jule::Ptr<_1dd05c765_SubIdentExpr> _303238_si) {
	jule::Ptr<_1a5e40a26_TypeKind> _303317_prefix = (*(this->self))._field_prefix;
	(*(this->self))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(this->self))._field_prefix=_303317_prefix;
	});
	jule::Ptr<_1a94c333b_Data> _303717_d = (*(this->self))._method_eval_expr_kind((*(_303238_si))._field_expr);
	if (_303717_d == nullptr) {
		return nullptr;
	}
	if ((*(_303717_d))._field_decl) {
		return (*(this->self))._method_eval_type_static(_303717_d,_303238_si);
	}
	return (*(this->self))._method_eval_obj_sub_ident(_303717_d,_303238_si);
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_tuple(jule::Ptr<_1dd05c765_TupleExpr> _304934_tup) {
	jule::Ptr<_1a5e40a26_Tuple> _305017_tup_t = jule::new_struct_ptr<_1a5e40a26_Tuple>(new( std::nothrow ) _1a5e40a26_Tuple());
	(*(_305017_tup_t))._field_types=jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>::alloc(0LL,static_cast<jule::Int>((*(_304934_tup))._field_expr.len()));
	jule::Ptr<_1ddb3c047_TupleExprModel> _305317_model = jule::new_struct<_1ddb3c047_TupleExprModel>(new( std::nothrow ) _1ddb3c047_TupleExprModel(jule::Slice<jule::Ptr<_1a94c333b_Data>>::alloc(0LL,static_cast<jule::Int>((*(_304934_tup))._field_expr.len()))));
	jule::Bool _305717_ok = true;
	{
		auto &expr = (*(_304934_tup))._field_expr;
		auto it = expr.begin();
		_iter_begin_1a8c898c2:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Expr> _1a94c333b_expr = *it;
			{
				jule::Ptr<_1a94c333b_Data> _305921_d = (*(this->self))._method_eval_expr_kind((*(_1a94c333b_expr))._field_kind);
				if (_305921_d == nullptr) {
					_305717_ok=false;
					goto _iter_next_1a8c898c2;
				}
				(*(_305017_tup_t))._field_types = jule::alloc_for_append((*(_305017_tup_t))._field_types,1);(*(_305017_tup_t))._field_types.__push((*(_305921_d))._field_kind);
				(*(_305317_model))._field_datas = jule::alloc_for_append((*(_305317_model))._field_datas,1);(*(_305317_model))._field_datas.__push(_305921_d);
			}
			_iter_next_1a8c898c2:;
			++it;
			goto _iter_begin_1a8c898c2;
		}
		_iter_end_1a8c898c2:;
	}
	if ((!(_305717_ok))) {
		return nullptr;
	}
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_305017_tup_t)),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_305317_model),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_map(jule::Ptr<_1a5e40a26_Map> _307832_m,jule::Ptr<_1dd05c765_BraceLit> _307845_lit) {
	jule::Ptr<_1ddb3c047_MapExprModel> _307917_model = jule::new_struct<_1ddb3c047_MapExprModel>(new( std::nothrow ) _1ddb3c047_MapExprModel((*(_307832_m))._field_key,(*(_307832_m))._field_val,jule::Slice<jule::Ptr<_1ddb3c047_KeyValPairExprModel>>()));
	{
		auto &expr = (*(_307845_lit))._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a8c8dae6:;
		if (it != expr.end()) {
			jule::Any _1a94c333b_expr = *it;
			{
				{
					auto &_match_expr{ _1a94c333b_expr };
					
					if (_match_expr.type_is<jule::Ptr<_1dd05c765_KeyValPair>>()) {
						_case_begin_1a8c8e102:;
					}
					else {
						_case_begin_1a8c8e2cd:;
						{
							(*(this->self))._method_push_err((*(_307845_lit))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1a8c8e179:;
				}
				jule::Ptr<_1dd05c765_KeyValPair> _309421_pair = _1a94c333b_expr.operator jule::Ptr<_1dd05c765_KeyValPair>();
				jule::Ptr<_1a94c333b_Data> _309621_key = (*(this->self))._method_eval_expr_kind((*(_309421_pair))._field_key);
				if (_309621_key == nullptr) {
					return nullptr;
				}
				jule::Ptr<_1a94c333b_Data> _310121_val = (*(this->self))._method_eval_expr_kind((*(_309421_pair))._field_val);
				if (_310121_val == nullptr) {
					return nullptr;
				}
				(*((*(this->self))._field_s))._method_check_assign_type(false,(*(_307832_m))._field_key,_309621_key,(*(_309421_pair))._field_colon);
				(*((*(this->self))._field_s))._method_check_assign_type(false,(*(_307832_m))._field_val,_310121_val,(*(_309421_pair))._field_colon);
				(*(_307917_model))._field_entries = jule::alloc_for_append((*(_307917_model))._field_entries,1);(*(_307917_model))._field_entries.__push(jule::new_struct<_1ddb3c047_KeyValPairExprModel>(new( std::nothrow ) _1ddb3c047_KeyValPairExprModel((*(_309621_key))._field_model,(*(_310121_val))._field_model)));
			}
			_iter_next_1a8c8dae6:;
			++it;
			goto _iter_begin_1a8c8dae6;
		}
		_iter_end_1a8c8dae6:;
	}
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_307832_m)),jule::Ptr<_1a5e40a26_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_307917_model),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_brace_lit(jule::Ptr<_1dd05c765_BraceLit> _312238_lit) {
	{
		
		if ((*(this->self))._field_prefix == nullptr) {
			_case_begin_1a8c95b53:;
			{
				(*(this->self))._method_push_err((*(_312238_lit))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((*((*(this->self))._field_prefix))._method_map() != nullptr) {
			_case_begin_1a8c95c41:;
			{
				return (*(this->self))._method_eval_map((*((*(this->self))._field_prefix))._method_map(),_312238_lit);
			}
		}
		else if ((*((*(this->self))._field_prefix))._method_strct() != nullptr) {
			_case_begin_1a8c95ca7:;
			{
				return (*(this->self))._method_eval_struct_lit_explicit((*((*(this->self))._field_prefix))._method_strct(),(*(_312238_lit))._field_exprs,(*(_312238_lit))._field_token);
			}
		}
		else {
			_case_begin_1a8c94c62:;
			{
				(*(this->self))._method_push_err((*(_312238_lit))._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a8c94b96:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_anon_fn(jule::Ptr<_1dd05c765_FnDecl> _313735_decl) {
	_1a5e40a26_TypeChecker _313817_tc = _1a5e40a26_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ptr<_1a5e40a26_Referencer>(),_1dd05db0c_Token(),jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeAlias>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool());
	jule::Ptr<_1dded9702_FnIns> _314217_ins = _313817_tc._method_build_fn(_313735_decl);
	(*(_314217_ins))._field_anon=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1de0e938e_ScopeChecker>>()) {
			_case_begin_1a8c99d88:;
			{
				jule::Ptr<_1de0e938e_ScopeChecker> _314721_sc = (*this)._field_lookup.operator jule::Ptr<_1de0e938e_ScopeChecker>();
				jule::Ptr<_1de0e938e_ScopeChecker> _314821_scc = (*(_314721_sc))._method_new_child_checker();
				(*(_314821_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1de0e938e_ScopeLabel>>>(nullptr);
				(*(_314821_scc))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1de0e938e_ScopeGoto>>>(nullptr);
				(*(_314821_scc))._field_owner=nullptr;
				(*(_314821_scc))._field_child_index=0LL;
				(*(_314821_scc))._field_it=0LLU;
				(*(_314821_scc))._field_cse=0LLU;
				(*(_314821_scc))._field_owner=_314217_ins;
				(*((*this)._field_s))._method_check_fn_ins_sc(_314217_ins,_314821_scc);
			}
		}
		else {
			_case_begin_1a8c9ae99:;
			{
				(*((*this)._field_s))._method_check_fn_ins(_314217_ins);
			}
		}
		_match_end_1a8c9ab7a:;
	}
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_314217_ins)),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_AnonFnExprModel>(new( std::nothrow ) _1ddb3c047_AnonFnExprModel(_314217_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_binop(jule::Ptr<_1dd05c765_BinopExpr> _317134_op) {
	_1a94c333b_BinaryEval _317217_bs = _1a94c333b_BinaryEval::_static_method_new_plain(this->self);
	if ((*(this->self))._field_prefix != nullptr) {
		jule::Ptr<_1a5e40a26_Prim> _317617_prim = (*((*(this->self))._field_prefix))._method_prim();
		if ((_317617_prim == nullptr) || (!(_1a6539949_is_num((*(_317617_prim))._method_to_str())))) {
			jule::Ptr<_1a5e40a26_TypeKind> _317825_prefix = (*(this->self))._field_prefix;
			(*(this->self))._field_prefix=nullptr;
			__JULE_DEFER({
				(*(this->self))._field_prefix=_317825_prefix;
			});
			return _317217_bs._method_eval(_317134_op);
		}
	}
	return _317217_bs._method_eval(_317134_op);
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_ternary(jule::Ptr<_1dd05c765_TernaryExpr> _318836_ter) {
	jule::Ptr<_1a94c333b_Data> _318917_d = (*(this->self))._method_eval_expr_kind((*(_318836_ter))._field_condition);
	if (_318917_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1a5e40a26_Prim> _319413_prim = (*((*(_318917_d))._field_kind))._method_prim();
	if ((_319413_prim == nullptr) || (!((*(_319413_prim))._method_is_bool()))) {
		(*(this->self))._method_push_err((*(_318836_ter))._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a94c333b_Data> _320017_td = (*(this->self))._method_eval_expr_kind((*(_318836_ter))._field_true_expr);
	if (_320017_td == nullptr) {
		return nullptr;
	}
	(*(this->self))._method_apply_numeric_prefix(_320017_td);
	if ((*((*(_320017_td))._field_kind))._method_void()) {
		(*(this->self))._method_push_err((*(_318836_ter))._field_token,jule::Str("void type cannot used for ternary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a5e40a26_TypeKind> _321117_prefix = (*(this->self))._field_prefix;
	(*(this->self))._field_prefix=(*(_320017_td))._field_kind;
	jule::Ptr<_1a94c333b_Data> _321417_fd = (*(this->self))._method_eval_expr_kind((*(_318836_ter))._field_false_expr);
	(*(this->self))._method_apply_numeric_prefix(_321417_fd);
	(*(this->self))._field_prefix=_321117_prefix;
	if (_321417_fd == nullptr) {
		return nullptr;
	}
	_1a93c7a48_AssignTypeChecker _322217_ac = _1a93c7a48_AssignTypeChecker((*(this->self))._field_s,jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1a94c333b_Data>(),(*(_318836_ter))._field_token);
	if ((*(_320017_td))._method_is_const() && (!((*(_321417_fd))._method_is_const()))) {
		_322217_ac._field_dest=(*(_321417_fd))._field_kind;
		_322217_ac._field_d=_320017_td;
	} else {
		_322217_ac._field_dest=(*(_320017_td))._field_kind;
		_322217_ac._field_d=_321417_fd;
	}
	if ((!(_322217_ac._method_check()))) {
		(*(this->self))._method_push_suggestion(jule::Str("use same or compatible values for ternary expressions", 53),jule::Slice<jule::Any>());
	}
	if ((*(_318917_d))._method_is_const()) {
		if ((*((*(_318917_d))._field_constant))._method_read_bool()) {
			return _320017_td;
		}
		return _321417_fd;
	}
	jule::Ptr<_1a94c333b_Data> _324417_r = jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data());
	(*(_324417_r))._field_kind=_322217_ac._field_dest;
	(*(_324417_r))._field_lvalue=false;
	(*(_324417_r))._field_mutable=(*((*(_324417_r))._field_kind))._method_mutable();
	(*(_324417_r))._field_model=jule::Any(jule::new_struct<_1ddb3c047_TernaryExprModel>(new( std::nothrow ) _1ddb3c047_TernaryExprModel((*(_318917_d))._field_model,(*(_320017_td))._field_model,(*(_321417_fd))._field_model)));
	return _324417_r;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_expr_kind(jule::Any _325638_kind) {
	jule::Ptr<_1a94c333b_Data> _325717_d = nullptr;
	{
		auto &_match_expr{ _325638_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_LitExpr>>()) {
			_case_begin_1a8cb2477:;
			{
				_325717_d=(*(this->self))._method_eval_lit(_325638_kind.operator jule::Ptr<_1dd05c765_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_IdentExpr>>()) {
			_case_begin_1a8cb24dd:;
			{
				_325717_d=(*(this->self))._method_eval_ident(_325638_kind.operator jule::Ptr<_1dd05c765_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_UnaryExpr>>()) {
			_case_begin_1a8cb2554:;
			{
				_325717_d=(*(this->self))._method_eval_unary(_325638_kind.operator jule::Ptr<_1dd05c765_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_VariadicExpr>>()) {
			_case_begin_1a8cb25ba:;
			{
				_325717_d=(*(this->self))._method_eval_variadic(_325638_kind.operator jule::Ptr<_1dd05c765_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_UnsafeExpr>>()) {
			_case_begin_1a8cb2642:;
			{
				_325717_d=(*(this->self))._method_eval_unsafe(_325638_kind.operator jule::Ptr<_1dd05c765_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_SliceExpr>>()) {
			_case_begin_1a8cb26b9:;
			{
				_325717_d=(*(this->self))._method_eval_slice_expr(_325638_kind.operator jule::Ptr<_1dd05c765_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_IndexingExpr>>()) {
			_case_begin_1a8cb2741:;
			{
				_325717_d=(*(this->self))._method_eval_indexing(_325638_kind.operator jule::Ptr<_1dd05c765_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_SlicingExpr>>()) {
			_case_begin_1a8cb27b8:;
			{
				_325717_d=(*(this->self))._method_eval_slicing(_325638_kind.operator jule::Ptr<_1dd05c765_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_CastExpr>>()) {
			_case_begin_1a8cb2840:;
			{
				_325717_d=(*(this->self))._method_eval_cast(_325638_kind.operator jule::Ptr<_1dd05c765_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_NsSelectionExpr>>()) {
			_case_begin_1a8cb28b7:;
			{
				_325717_d=(*(this->self))._method_eval_ns_selection(_325638_kind.operator jule::Ptr<_1dd05c765_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_StructLit>>()) {
			_case_begin_1a8cb293e:;
			{
				_325717_d=(*(this->self))._method_eval_struct_lit(_325638_kind.operator jule::Ptr<_1dd05c765_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_TypeDecl>>()) {
			_case_begin_1a8cb29b6:;
			{
				_325717_d=(*(this->self))._method_eval_type(_325638_kind.operator jule::Ptr<_1dd05c765_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_FnCallExpr>>()) {
			_case_begin_1a8cb2a3d:;
			{
				_325717_d=(*(this->self))._method_eval_fn_call(_325638_kind.operator jule::Ptr<_1dd05c765_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_SubIdentExpr>>()) {
			_case_begin_1a8cb2ab5:;
			{
				_325717_d=(*(this->self))._method_eval_sub_ident(_325638_kind.operator jule::Ptr<_1dd05c765_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_TupleExpr>>()) {
			_case_begin_1a8cb2b3c:;
			{
				_325717_d=(*(this->self))._method_eval_tuple(_325638_kind.operator jule::Ptr<_1dd05c765_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_BraceLit>>()) {
			_case_begin_1a8cb2bb4:;
			{
				_325717_d=(*(this->self))._method_eval_brace_lit(_325638_kind.operator jule::Ptr<_1dd05c765_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_FnDecl>>()) {
			_case_begin_1a8cb2c3b:;
			{
				_325717_d=(*(this->self))._method_eval_anon_fn(_325638_kind.operator jule::Ptr<_1dd05c765_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_BinopExpr>>()) {
			_case_begin_1a8cb2cb3:;
			{
				_325717_d=(*(this->self))._method_eval_binop(_325638_kind.operator jule::Ptr<_1dd05c765_BinopExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_TernaryExpr>>()) {
			_case_begin_1a8cb2d3a:;
			{
				_325717_d=(*(this->self))._method_eval_ternary(_325638_kind.operator jule::Ptr<_1dd05c765_TernaryExpr>());
			}
		}
		_match_end_1a8cb2279:;
	}
	if (_325717_d == nullptr) {
		return nullptr;
	}
	if ((*(_325717_d))._field_kind == nullptr) {
		return _325717_d;
	}
	if ((!((*(_325717_d))._field_decl)) && ((*(this->self))._field_prefix != nullptr)) {
		if (((((((!((*((*(_325717_d))._field_kind))._method_cpp_linked())) && ((*(_325717_d))._field_cast_kind == nullptr)) && (!((*((*(_325717_d))._field_kind))._field_variadic))) && (!((*(_325717_d))._field_lvalue))) && (!((*(_325717_d))._method_is_const()))) && ((*((*(_325717_d))._field_kind))._method_prim() != nullptr)) && _1a6539949_is_num((*((*((*(_325717_d))._field_kind))._method_prim()))._field_kind)) {
			(*(_325717_d))._field_cast_kind=(*(_325717_d))._field_kind;
		}
		_1a94c333b_apply_cast_kind(_325717_d);
		if (((*((*(_325717_d))._field_kind))._method_prim() == nullptr) || (!((*((*((*(_325717_d))._field_kind))._method_prim()))._method_is_any()))) {
			if (((*((*(this->self))._field_prefix))._method_prim() != nullptr) && (*((*((*(this->self))._field_prefix))._method_prim()))._method_is_any()) {
				(*(_325717_d))._field_cast_kind=(*(this->self))._field_prefix;
				_1a94c333b_apply_cast_kind_model(_325717_d);
				(*(_325717_d))._field_cast_kind=nullptr;
			}
		}
	}
	return _325717_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval(jule::Ptr<_1dd05c765_Expr> _333328_expr) {
	jule::Ptr<_1a94c333b_Data> _333417_d = (*(this->self))._method_eval_expr_kind((*(_333328_expr))._field_kind);
	if ((_333417_d == nullptr) || ((*(_333417_d))._field_kind == nullptr)) {
		return nullptr;
	}
	{
		
		if ((*((*(_333417_d))._field_kind))._method_fnc() != nullptr) {
			_case_begin_1a8cc80a3:;
			{
				jule::Ptr<_1dded9702_FnIns> _334121_f = (*((*(_333417_d))._field_kind))._method_fnc();
				if ((*(_334121_f))._method_is_builtin()) {
					goto _match_end_1a8cc7ea4;
				}
				if ((*(_334121_f))._field_generics.len() != static_cast<jule::Int>((*((*(_334121_f))._field_decl))._field_generics.len())) {
					(*((*(this->self))._field_s))._method_push_err((*(_333328_expr))._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				}
				if ((*((*(_334121_f))._field_decl))._method_is_method()) {
					(*((*(this->self))._field_s))._method_push_err((*(_333328_expr))._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_1a8cc7ea4:;
	}
	return _333417_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_Eval::_method_eval_expr(jule::Ptr<_1dd05c765_Expr> _335933_expr) {
	jule::Ptr<_1a94c333b_Data> _336017_d = (*(this->self))._method_eval(_335933_expr);
	{
		
		if (_336017_d == nullptr) {
			_case_begin_1a8cccd66:;
			{
				return nullptr;
			}
		}
		else if ((*(_336017_d))._field_decl) {
			_case_begin_1a8cccdcc:;
			{
				(*(this->self))._method_push_err((*(_335933_expr))._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1a8ccc74a:;
			{
				return _336017_d;
			}
		}
		_match_end_1a8ccc6c3:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a94c333b_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}



inline _1a94c333b_UnaryEval _1a94c333b_UnaryEval::_static_method_new(jule::Ptr<_1a94c333b_Eval> _338023_e) {
	return _1a94c333b_UnaryEval(_338023_e,jule::Ptr<_1a94c333b_Data>(),jule::Ptr<_1dd05c765_UnaryExpr>());
}



inline void _1a94c333b_UnaryEval::_method_minus(void) {
	{
		
		if ((*((*this)._field_d))._field_kind == nullptr) {
			_case_begin_1a8cce84b:;
			{
				(*this)._field_d=nullptr;
				return;
			}
		}
		else if ((*((*((*this)._field_d))._field_kind))._method_prim() != nullptr) {
			_case_begin_1a8cce8c3:;
			{
				if ((!(_1a6539949_is_num((*((*((*this)._field_d))._field_kind))._method_to_str())))) {
					(*this)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((*((*((*this)._field_d))._field_kind))._method_strct() != nullptr) {
			_case_begin_1a8cce94a:;
			{
				if ((*((*((*((*this)._field_d))._field_kind))._method_strct()))._field_operators._field_neg == nullptr) {
					(*this)._field_d=nullptr;
					return;
				}
			}
		}
		_match_end_1a8cce73b:;
	}
	if ((*((*this)._field_d))._method_is_const()) {
		{
			
			if ((*((*((*this)._field_d))._field_constant))._method_is_f64()) {
				_case_begin_1a8cd32bc:;
				{
					(*((*((*this)._field_d))._field_constant))._method_set_f64(static_cast<jule::F64>((-(static_cast<jule::F64>((*((*((*this)._field_d))._field_constant))._method_read_f64())))));
				}
			}
			else if ((*((*((*this)._field_d))._field_constant))._method_is_i64()) {
				_case_begin_1a8cd3333:;
				{
					(*((*((*this)._field_d))._field_constant))._method_set_f64(static_cast<jule::F64>((-(static_cast<jule::F64>((*((*((*this)._field_d))._field_constant))._method_as_f64())))));
				}
			}
			else if ((*((*((*this)._field_d))._field_constant))._method_is_u64()) {
				_case_begin_1a8cd33aa:;
				{
					(*((*((*this)._field_d))._field_constant))._method_set_f64(static_cast<jule::F64>((-(static_cast<jule::F64>((*((*((*this)._field_d))._field_constant))._method_as_f64())))));
				}
			}
			_match_end_1a8cd2299:;
		}
	}
	(*((*this)._field_d))._field_lvalue=false;
	(*((*this)._field_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_UnaryExprModel>(new( std::nothrow ) _1ddb3c047_UnaryExprModel(jule::new_ptr<_1a94c333b_Data>((*((*this)._field_d))),(*((*this)._field_u))._field_op)));
}



inline void _1a94c333b_UnaryEval::_method_plus(void) {
	{
		
		if ((*((*this)._field_d))._field_kind == nullptr) {
			_case_begin_1a8cd8558:;
			{
				(*this)._field_d=nullptr;
				return;
			}
		}
		else if ((*((*((*this)._field_d))._field_kind))._method_prim() != nullptr) {
			_case_begin_1a8cd85d0:;
			{
				if ((!(_1a6539949_is_num((*((*((*this)._field_d))._field_kind))._method_to_str())))) {
					(*this)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((*((*((*this)._field_d))._field_kind))._method_strct() != nullptr) {
			_case_begin_1a8cd8657:;
			{
				if ((*((*((*((*this)._field_d))._field_kind))._method_strct()))._field_operators._field_pos == nullptr) {
					(*this)._field_d=nullptr;
					return;
				}
			}
		}
		_match_end_1a8cd8448:;
	}
	if ((*((*this)._field_d))._method_is_const()) {
		{
			
			if ((*((*((*this)._field_d))._field_constant))._method_is_f64()) {
				_case_begin_1a8cdbec9:;
				{
					(*((*((*this)._field_d))._field_constant))._method_set_f64(static_cast<jule::F64>((+(static_cast<jule::F64>((*((*((*this)._field_d))._field_constant))._method_read_f64())))));
				}
			}
			else if ((*((*((*this)._field_d))._field_constant))._method_is_i64()) {
				_case_begin_1a8cdc040:;
				{
					(*((*((*this)._field_d))._field_constant))._method_set_f64(static_cast<jule::F64>((+(static_cast<jule::F64>((*((*((*this)._field_d))._field_constant))._method_as_f64())))));
				}
			}
			else if ((*((*((*this)._field_d))._field_constant))._method_is_u64()) {
				_case_begin_1a8cdc0b7:;
				{
					(*((*((*this)._field_d))._field_constant))._method_set_f64(static_cast<jule::F64>((+(static_cast<jule::F64>((*((*((*this)._field_d))._field_constant))._method_as_f64())))));
				}
			}
			_match_end_1a8cdaea6:;
		}
	}
	(*((*this)._field_d))._field_lvalue=false;
	(*((*this)._field_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_UnaryExprModel>(new( std::nothrow ) _1ddb3c047_UnaryExprModel(jule::new_ptr<_1a94c333b_Data>((*((*this)._field_d))),(*((*this)._field_u))._field_op)));
}



inline void _1a94c333b_UnaryEval::_method_caret(void) {
	{
		
		if ((*((*this)._field_d))._field_kind == nullptr) {
			_case_begin_1a8ce22a9:;
			{
				(*this)._field_d=nullptr;
				return;
			}
		}
		else if ((*((*((*this)._field_d))._field_kind))._method_prim() != nullptr) {
			_case_begin_1a8ce2331:;
			{
				if ((!(_1a6539949_is_num((*((*((*this)._field_d))._field_kind))._method_to_str())))) {
					(*this)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((*((*((*this)._field_d))._field_kind))._method_strct() != nullptr) {
			_case_begin_1a8ce23a8:;
			{
				if ((*((*((*((*this)._field_d))._field_kind))._method_strct()))._field_operators._field_bit_not == nullptr) {
					(*this)._field_d=nullptr;
					return;
				}
			}
		}
		_match_end_1a8ce2199:;
	}
	if ((*((*this)._field_d))._method_is_const()) {
		{
			
			if ((*((*((*this)._field_d))._field_constant))._method_is_i64()) {
				_case_begin_1a8ce5c19:;
				{
					(*((*((*this)._field_d))._field_constant))._method_set_i64(static_cast<jule::I64>((~(static_cast<jule::I64>((*((*((*this)._field_d))._field_constant))._method_read_i64())))));
				}
			}
			else if ((*((*((*this)._field_d))._field_constant))._method_is_u64()) {
				_case_begin_1a8ce5c80:;
				{
					(*((*((*this)._field_d))._field_constant))._method_set_u64(static_cast<jule::U64>((~(static_cast<jule::U64>((*((*((*this)._field_d))._field_constant))._method_read_u64())))));
				}
			}
			_match_end_1a8ce4c07:;
		}
	}
	(*((*this)._field_d))._field_lvalue=false;
	(*((*this)._field_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_UnaryExprModel>(new( std::nothrow ) _1ddb3c047_UnaryExprModel(jule::new_ptr<_1a94c333b_Data>((*((*this)._field_d))),(*((*this)._field_u))._field_op)));
}



inline void _1a94c333b_UnaryEval::_method_excl(void) {
	jule::Ptr<_1a5e40a26_Prim> _349013_t = (*((*((*this)._field_d))._field_kind))._method_prim();
	if ((_349013_t == nullptr) || (!((*(_349013_t))._method_is_bool()))) {
		(*this)._field_d=nullptr;
		return;
	}
	if ((*((*this)._field_d))._method_is_const()) {
		{
			
			if ((*((*((*this)._field_d))._field_constant))._method_is_bool()) {
				_case_begin_1a8ceb4b1:;
				{
					(*((*((*this)._field_d))._field_constant))._method_set_bool((!((*((*((*this)._field_d))._field_constant))._method_read_bool())));
				}
			}
			_match_end_1a8ceb3c3:;
		}
	}
	(*((*this)._field_d))._field_lvalue=false;
	(*((*this)._field_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_UnaryExprModel>(new( std::nothrow ) _1ddb3c047_UnaryExprModel(jule::new_ptr<_1a94c333b_Data>((*((*this)._field_d))),(*((*this)._field_u))._field_op)));
}



inline void _1a94c333b_UnaryEval::_method_star(void) {
	(*((*this)._field_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_UnaryExprModel>(new( std::nothrow ) _1ddb3c047_UnaryExprModel(jule::new_ptr<_1a94c333b_Data>((*((*this)._field_d))),(*((*this)._field_u))._field_op)));
	{
		
		if ((*((*((*this)._field_d))._field_kind))._method_ptr() != nullptr) {
			_case_begin_1a8ceedbb:;
			{
				if ((!((*((*this)._field_e))._method_is_unsafe()))) {
					(*((*this)._field_e))._method_push_err((*((*this)._field_u))._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				jule::Ptr<_1a5e40a26_Ptr> _352221_t = (*((*((*this)._field_d))._field_kind))._method_ptr();
				if ((*(_352221_t))._method_is_unsafe()) {
					(*this)._field_d=nullptr;
					return;
				}
				(*((*this)._field_d))._field_kind=(*(_352221_t))._field_elem;
			}
		}
		else if ((*((*((*this)._field_d))._field_kind))._method_sptr() != nullptr) {
			_case_begin_1a8ceee32:;
			{
				(*((*this)._field_d))._field_kind=(*((*((*((*this)._field_d))._field_kind))._method_sptr()))._field_elem;
			}
		}
		else {
			_case_begin_1a8cee96a:;
			{
				(*this)._field_d=nullptr;
				return;
			}
		}
		_match_end_1a8cee915:;
	}
	(*((*this)._field_d))._field_constant=nullptr;
	(*((*this)._field_d))._field_lvalue=true;
}



inline void _1a94c333b_UnaryEval::_method_amper(void) {
	{
		auto &_match_expr{ (*((*this)._field_d))._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ddb3c047_StructLitExprModel>>()) {
			_case_begin_1a8d05663:;
			{
				jule::Ptr<_1ddb3c047_StructLitExprModel> _354421_lit = (*((*this)._field_d))._field_model.operator jule::Ptr<_1ddb3c047_StructLitExprModel>();
				_1a94c333b_make_struct_lit_alloc((*this)._field_d,_354421_lit);
			}
		}
		else {
			_case_begin_1a8d04b90:;
			{
				{
					
					if (_1a5e40a26_can_get_ptr((*this)._field_d)) {
						_case_begin_1a8d05575:;
						{
							(*((*this)._field_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a5e40a26_Ptr>(new( std::nothrow ) _1a5e40a26_Ptr((*((*this)._field_d))._field_kind))));
							(*((*this)._field_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_UnaryExprModel>(new( std::nothrow ) _1ddb3c047_UnaryExprModel(jule::new_ptr<_1a94c333b_Data>((*((*this)._field_d))),(*((*this)._field_u))._field_op)));
						}
					}
					else {
						_case_begin_1a8d051e0:;
						{
							(*this)._field_d=nullptr;
						}
					}
					_match_end_1a8d04882:;
				}
			}
		}
		_match_end_1a8d04b3a:;
	}
	if ((*this)._field_d != nullptr) {
		(*((*this)._field_d))._field_constant=nullptr;
		(*((*this)._field_d))._field_lvalue=false;
		(*((*this)._field_d))._field_mutable=true;
	}
}



inline void _1a94c333b_UnaryEval::_method_type_decl(void) {
	_1a5e40a26_TypeChecker _357117_tc = _1a5e40a26_TypeChecker((*((*this)._field_e))._field_s,(*((*this)._field_e))._field_lookup,jule::Ptr<_1a5e40a26_Referencer>(),(*((*this)._field_u))._field_op,jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeAlias>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool());
	{
		auto &_match_expr{ (*((*this)._field_u))._field_op._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a8d0ba87:;
			{
				(*((*this)._field_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_357117_tc._method_build_ptr_from_type((*((*this)._field_d))._field_kind)));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a8d0baed:;
			{
				(*((*this)._field_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_357117_tc._method_build_sptr_from_type((*((*this)._field_d))._field_kind)));
			}
		}
		else {
			_case_begin_1a8d09326:;
			{
				(*((*this)._field_e))._method_push_err((*((*this)._field_u))._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*((*this)._field_u))._field_op._field_kind),jule::Any((*((*((*this)._field_d))._field_kind))._method_to_str())}));
				(*this)._field_d=nullptr;
				return;
			}
		}
		_match_end_1a8d0a0e6:;
	}
	(*((*this)._field_d))._field_decl=true;
}



inline void _1a94c333b_UnaryEval::_method_eval_data(void) {
	{
		auto &_match_expr{ (*((*this)._field_u))._field_op._field_kind };
		
		if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a8d0eeec:;
			{
				jule::Ptr<_1a5e40a26_TypeKind> _359221_prefix = (*((*this)._field_e))._field_prefix;
				(*((*this)._field_e))._field_prefix=nullptr;
				(*this)._field_d=(*((*this)._field_e))._method_eval_expr_kind((*((*this)._field_u))._field_expr);
				(*((*this)._field_e))._field_prefix=_359221_prefix;
			}
		}
		else {
			_case_begin_1a8d0e68e:;
			{
				(*this)._field_d=(*((*this)._field_e))._method_eval_expr_kind((*((*this)._field_u))._field_expr);
			}
		}
		_match_end_1a8d0e9d0:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_UnaryEval::_method_eval(jule::Ptr<_1dd05c765_UnaryExpr> _360127_u) {
	(*this)._field_u=_360127_u;
	(*this)._method_eval_data();
	if ((*this)._field_d == nullptr) {
		return nullptr;
	}
	if ((*((*this)._field_d))._field_decl) {
		(*this)._method_type_decl();
		return (*this)._field_d;
	}
	jule::Ptr<_1a5e40a26_TypeKind> _361217_cast_kind = (*((*this)._field_d))._field_cast_kind;
	jule::Ptr<_1a5e40a26_TypeKind> _361313_kind = (*((*this)._field_d))._field_kind;
	{
		auto &_match_expr{ (*((*this)._field_u))._field_op._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a8d14122:;
			{
				(*this)._method_minus();
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a8d14188:;
			{
				(*this)._method_plus();
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a8d141ee:;
			{
				(*this)._method_caret();
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a8d14265:;
			{
				(*this)._method_excl();
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a8d142cb:;
			{
				(*this)._method_star();
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a8d146a5:;
			{
				(*this)._method_amper();
			}
		}
		else {
			_case_begin_1a8d11e99:;
			{
				(*this)._field_d=nullptr;
			}
		}
		_match_end_1a8d13d69:;
	}
	{
		
		if ((*this)._field_d == nullptr) {
			_case_begin_1a8d161e0:;
			{
				(*((*this)._field_e))._method_push_err((*((*this)._field_u))._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*((*this)._field_u))._field_op._field_kind),jule::Any((*(_361313_kind))._method_to_str())}));
			}
		}
		else if ((*((*this)._field_d))._method_is_const()) {
			_case_begin_1a8d16630:;
			{
				(*((*this)._field_d))._field_model=jule::Any((*((*this)._field_d))._field_constant);
			}
		}
		else if (_361217_cast_kind != nullptr) {
			_case_begin_1a8d166a7:;
			{
				(*((*this)._field_d))._field_cast_kind=_361217_cast_kind;
				_1a94c333b_apply_cast_kind((*this)._field_d);
			}
		}
		_match_end_1a8d16124:;
	}
	return (*this)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a94c333b_UnaryEval &_Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5e40a26_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _7817_kind = jule::Str();
	if ((*this)._field_variadic) {
		_7817_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_cpp_linked()) {
		_7817_kind+=jule::Str("cpp.", 4);
		_7817_kind+=(*this)._field_cpp_ident;
	} else {
		_7817_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _7817_kind;
}



inline jule::Bool _1a5e40a26_TypeKind::_method_equals(jule::Ptr<_1a5e40a26_TypeKind> _9426_other) {
	if ((*(this->self))._method_is_nil()) {
		return (*(_9426_other))._method_is_nil();
	}
	if ((*(this->self))._method_cpp_linked()) {
		return (*(_9426_other))._method_cpp_linked() && ((*(this->self))._field_cpp_ident == (*(_9426_other))._field_cpp_ident);
	}
	return (*(this->self))._field_kind.get()._method_equals(_9426_other);
}



inline jule::Bool _1a5e40a26_TypeKind::_method_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



inline jule::Bool _1a5e40a26_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _1a5e40a26_TypeKind::_method_void(void) {
	jule::Ptr<_1a5e40a26_Prim> _11713_prim = (*this)._method_prim();
	return (_11713_prim != nullptr) && ((*(_11713_prim))._field_kind == jule::Str("void", 4));
}



inline jule::Bool _1a5e40a26_TypeKind::_method_mutable(void) {
	{
		_1a5e40a26_TypeKind* _12421__self = (&((*this)));
		if ((*(_12421__self))._method_strct() != nullptr) {
			return (*((*(_12421__self))._method_strct()))._field_mutable;
		}
		if ((*(_12421__self))._method_trt() != nullptr) {
			return (*((*(_12421__self))._method_trt()))._field_mutable;
		}
		if ((*(_12421__self))._method_prim() != nullptr) {
			jule::Ptr<_1a5e40a26_Prim> _13321_p = (*(_12421__self))._method_prim();
			return (*(_13321_p))._method_is_any();
		}
		if ((*(_12421__self))._method_arr() != nullptr) {
			return (*((*((*(_12421__self))._method_arr()))._field_elem))._method_mutable();
		}
		return (((*(_12421__self))._method_slc() != nullptr) || ((*(_12421__self))._method_ptr() != nullptr)) || ((*(_12421__self))._method_sptr() != nullptr);
	}
}



inline jule::Bool _1a5e40a26_TypeKind::_method_nil_compatible(void) {
	{
		_1a5e40a26_TypeKind* _14821__self = (&((*this)));
		jule::Ptr<_1a5e40a26_Prim> _15017_prim = (*(_14821__self))._method_prim();
		if ((_15017_prim != nullptr) && (*(_15017_prim))._method_is_any()) {
			return true;
		}
		return ((((((*(_14821__self))._method_is_nil() || ((*(_14821__self))._method_fnc() != nullptr)) || ((*(_14821__self))._method_sptr() != nullptr)) || ((*(_14821__self))._method_ptr() != nullptr)) || ((*(_14821__self))._method_trt() != nullptr)) || ((*(_14821__self))._method_slc() != nullptr)) || ((*(_14821__self))._method_map() != nullptr);
	}
}



inline jule::Bool _1a5e40a26_TypeKind::_method_performs_rc(void) {
	{
		_1a5e40a26_TypeKind* _16821__self = (&((*this)));
		return (((*(_16821__self))._method_sptr() != nullptr) || ((*(_16821__self))._method_slc() != nullptr)) || ((*(_16821__self))._method_trt() != nullptr);
	}
}



inline jule::Bool _1a5e40a26_TypeKind::_method_supports_cloning(void) {
	{
		_1a5e40a26_TypeKind* _17621__self = (&((*this)));
		{
			
			if ((*(_17621__self))._method_prim() != nullptr) {
				_case_begin_1a8de6e6e:;
				{
					return (!((*((*(_17621__self))._method_prim()))._method_is_any()));
				}
			}
			else if ((*(_17621__self))._method_enm() != nullptr) {
				_case_begin_1a8de67dc:;
				{
					return true;
				}
			}
			else if ((*(_17621__self))._method_fnc() != nullptr) {
				_case_begin_1a8de6853:;
				{
					return true;
				}
			}
			else if ((*(_17621__self))._method_ptr() != nullptr) {
				_case_begin_1a8de68ca:;
				{
					return true;
				}
			}
			else if ((*(_17621__self))._method_slc() != nullptr) {
				_case_begin_1a8de6952:;
				{
					return (*((*((*(_17621__self))._method_slc()))._field_elem))._method_supports_cloning();
				}
			}
			else if ((*(_17621__self))._method_map() != nullptr) {
				_case_begin_1a8de6b1c:;
				{
					jule::Ptr<_1a5e40a26_Map> _18621_m = (*(_17621__self))._method_map();
					return (*((*(_18621_m))._field_key))._method_supports_cloning() && (*((*(_18621_m))._field_val))._method_supports_cloning();
				}
			}
			else if ((*(_17621__self))._method_arr() != nullptr) {
				_case_begin_1a8de6b94:;
				{
					return (*((*((*(_17621__self))._method_arr()))._field_elem))._method_supports_cloning();
				}
			}
			else if ((*(_17621__self))._method_sptr() != nullptr) {
				_case_begin_1a8de6c1b:;
				{
					return (*((*((*(_17621__self))._method_sptr()))._field_elem))._method_supports_cloning();
				}
			}
			else if ((*(_17621__self))._method_strct() != nullptr) {
				_case_begin_1a8de6c93:;
				{
					jule::Ptr<_1dd0be530_StructIns> _19325_s = (*(_17621__self))._method_strct();
					if ((!((*(_19325_s))._field_mutable))) {
						return true;
					}
					if ((((*(_19325_s))._field_decl == nullptr) || (*((*(_19325_s))._field_decl))._field_cpp_linked) || (!((*((*(_19325_s))._field_decl))._method_is_derives(jule::Str("Clone", 5))))) {
						return false;
					}
					return true;
				}
			}
			else {
				_case_begin_1a8de6688:;
				{
					return false;
				}
			}
			_match_end_1a8de6611:;
		}
	}
}



inline jule::Bool _1a5e40a26_TypeKind::_method_variadicable(void) {
	{
		_1a5e40a26_TypeKind* _21321__self = (&((*this)));
		return (*(_21321__self))._method_slc() != nullptr;
	}
}



inline jule::Ptr<_1a5e40a26_Prim> _1a5e40a26_TypeKind::_method_prim(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5e40a26_Prim>>()) {
			_case_begin_1a8e01ac2:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a5e40a26_Prim>();
			}
		}
		else {
			_case_begin_1a8e0151c:;
			{
				return nullptr;
			}
		}
		_match_end_1a8e014b7:;
	}
}



inline jule::Ptr<_1a5e40a26_Sptr> _1a5e40a26_TypeKind::_method_sptr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5e40a26_Sptr>>()) {
			_case_begin_1a8e01e57:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a5e40a26_Sptr>();
			}
		}
		else {
			_case_begin_1a8e01880:;
			{
				return nullptr;
			}
		}
		_match_end_1a8e0182a:;
	}
}



inline jule::Ptr<_1a5e40a26_Ptr> _1a5e40a26_TypeKind::_method_ptr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5e40a26_Ptr>>()) {
			_case_begin_1a8e0263e:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a5e40a26_Ptr>();
			}
		}
		else {
			_case_begin_1a8e0240d:;
			{
				return nullptr;
			}
		}
		_match_end_1a8e02c27:;
	}
}



inline jule::Ptr<_1de0dbeb9_Enum> _1a5e40a26_TypeKind::_method_enm(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1de0dbeb9_Enum>>()) {
			_case_begin_1a8e04223:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1de0dbeb9_Enum>();
			}
		}
		else {
			_case_begin_1a8e03420:;
			{
				return nullptr;
			}
		}
		_match_end_1a8e033ba:;
	}
}



inline jule::Ptr<_1a5e40a26_Arr> _1a5e40a26_TypeKind::_method_arr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5e40a26_Arr>>()) {
			_case_begin_1a8e04e5a:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a5e40a26_Arr>();
			}
		}
		else {
			_case_begin_1a8e04597:;
			{
				return nullptr;
			}
		}
		_match_end_1a8e04542:;
	}
}



inline jule::Ptr<_1a5e40a26_Slc> _1a5e40a26_TypeKind::_method_slc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5e40a26_Slc>>()) {
			_case_begin_1a8e057da:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a5e40a26_Slc>();
			}
		}
		else {
			_case_begin_1a8e04da0:;
			{
				return nullptr;
			}
		}
		_match_end_1a8e04d4a:;
	}
}



inline jule::Ptr<_1dded9702_FnIns> _1a5e40a26_TypeKind::_method_fnc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dded9702_FnIns>>()) {
			_case_begin_1a8e068c9:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1dded9702_FnIns>();
			}
		}
		else {
			_case_begin_1a8e05ac6:;
			{
				return nullptr;
			}
		}
		_match_end_1a8e05a71:;
	}
}



inline jule::Ptr<_1dd0be530_StructIns> _1a5e40a26_TypeKind::_method_strct(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dd0be530_StructIns>>()) {
			_case_begin_1a8e07611:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1dd0be530_StructIns>();
			}
		}
		else {
			_case_begin_1a8e06c4d:;
			{
				return nullptr;
			}
		}
		_match_end_1a8e06be8:;
	}
}



inline jule::Ptr<_1de043c01_Trait> _1a5e40a26_TypeKind::_method_trt(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1de043c01_Trait>>()) {
			_case_begin_1a8e07501:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1de043c01_Trait>();
			}
		}
		else {
			_case_begin_1a8e072e2:;
			{
				return nullptr;
			}
		}
		_match_end_1a8e07ac8:;
	}
}



inline jule::Ptr<_1a5e40a26_Map> _1a5e40a26_TypeKind::_method_map(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5e40a26_Map>>()) {
			_case_begin_1a8e0826b:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a5e40a26_Map>();
			}
		}
		else {
			_case_begin_1a8e08029:;
			{
				return nullptr;
			}
		}
		_match_end_1a8e08854:;
	}
}



inline jule::Ptr<_1a5e40a26_Tuple> _1a5e40a26_TypeKind::_method_tup(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5e40a26_Tuple>>()) {
			_case_begin_1a8e08ee7:;
			{
				return (*this)._field_kind.operator jule::Ptr<_1a5e40a26_Tuple>();
			}
		}
		else {
			_case_begin_1a8e08cb6:;
			{
				return nullptr;
			}
		}
		_match_end_1a8e095d0:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a5e40a26_TypeKind &_Src) {
	_Stream << ((_1a5e40a26_TypeKind)(_Src))._method_to_str();
	return _Stream;
}



inline jule::Bool _1a5e40a26_TypeSymbol::_method_checked(void) {
	return (*this)._field_kind != nullptr;
}



inline void _1a5e40a26_TypeSymbol::_method_remove_kind(void) {
	(*this)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a5e40a26_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5e40a26_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _1a5e40a26_Prim::_method_equals(jule::Ptr<_1a5e40a26_TypeKind> _33226_other) {
	jule::Ptr<_1a5e40a26_Prim> _33313_prim = (*(_33226_other))._method_prim();
	if (_33313_prim == nullptr) {
		return false;
	}
	return (*(this->self))._field_kind == (*(_33313_prim))._field_kind;
}



inline jule::Bool _1a5e40a26_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _1a5e40a26_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a5e40a26_Prim &_Src) {
	_Stream << ((_1a5e40a26_Prim)(_Src))._method_to_str();
	return _Stream;
}



inline jule::Str _1a5e40a26_Sptr::_method_to_str(void) {
	return jule::Str("&", 1) + (*((*this)._field_elem))._method_to_str();
}



inline jule::Bool _1a5e40a26_Sptr::_method_equals(jule::Ptr<_1a5e40a26_TypeKind> _40126_other) {
	jule::Ptr<_1a5e40a26_Sptr> _40213_sptr = (*(_40126_other))._method_sptr();
	if (_40213_sptr == nullptr) {
		return false;
	}
	return (*((*(this->self))._field_elem))._method_equals((*(_40213_sptr))._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a5e40a26_Sptr &_Src) {
	_Stream << ((_1a5e40a26_Sptr)(_Src))._method_to_str();
	return _Stream;
}



inline jule::Str _1a5e40a26_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*((*this)._field_elem))._method_to_str();
}



inline jule::Bool _1a5e40a26_Slc::_method_equals(jule::Ptr<_1a5e40a26_TypeKind> _42026_other) {
	jule::Ptr<_1a5e40a26_Slc> _42113_slc = (*(_42026_other))._method_slc();
	if (_42113_slc == nullptr) {
		return false;
	}
	return (*((*(this->self))._field_elem))._method_equals((*(_42113_slc))._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a5e40a26_Slc &_Src) {
	_Stream << ((_1a5e40a26_Slc)(_Src))._method_to_str();
	return _Stream;
}



inline jule::Str _1a5e40a26_Tuple::_method_to_str(void) {
	jule::Str _43717_s = jule::Str("(", 1);
	_43717_s+=(*((*this)._field_types[0LL]))._method_to_str();
	{
		auto expr = (*this)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1a8e1bd62:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e40a26_TypeKind> &_1a5e40a26_t = *it;
			{
				_43717_s+=jule::Str(",", 1);
				_43717_s+=(*(_1a5e40a26_t))._method_to_str();
			}
			_iter_next_1a8e1bd62:;
			++it;
			goto _iter_begin_1a8e1bd62;
		}
		_iter_end_1a8e1bd62:;
	}
	_43717_s+=jule::Str(")", 1);
	return _43717_s;
}



inline jule::Bool _1a5e40a26_Tuple::_method_equals(jule::Ptr<_1a5e40a26_TypeKind> _44826_other) {
	jule::Ptr<_1a5e40a26_Tuple> _44913_tup = (*(_44826_other))._method_tup();
	if (_44913_tup == nullptr) {
		return false;
	}
	if ((*(this->self))._field_types.len() != static_cast<jule::Int>((*(_44913_tup))._field_types.len())) {
		return false;
	}
	jule::Int _45817_i = 0LL;
	for (; _45817_i < static_cast<jule::Int>((*(this->self))._field_types.len()); (_45817_i)++) {
		{
			if ((!((*((*(this->self))._field_types[_45817_i]))._method_equals((*(_44913_tup))._field_types[_45817_i])))) {
				return false;
			}
		}
	_iter_next_1a8e1e11c:;
	}
	_iter_end_1a8e1e11c:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a5e40a26_Tuple &_Src) {
	_Stream << ((_1a5e40a26_Tuple)(_Src))._method_to_str();
	return _Stream;
}



inline jule::Str _1a5e40a26_Map::_method_to_str(void) {
	jule::Str _47817_s = jule::Str("[", 1);
	_47817_s+=(*((*this)._field_key))._method_to_str();
	_47817_s+=jule::Str(":", 1);
	_47817_s+=(*((*this)._field_val))._method_to_str();
	_47817_s+=jule::Str("]", 1);
	return _47817_s;
}



inline jule::Bool _1a5e40a26_Map::_method_equals(jule::Ptr<_1a5e40a26_TypeKind> _48726_other) {
	jule::Ptr<_1a5e40a26_Map> _48813_map = (*(_48726_other))._method_map();
	if (_48813_map == nullptr) {
		return false;
	}
	return (*((*(this->self))._field_key))._method_equals((*(_48813_map))._field_key) && (*((*(this->self))._field_val))._method_equals((*(_48813_map))._field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a5e40a26_Map &_Src) {
	_Stream << ((_1a5e40a26_Map)(_Src))._method_to_str();
	return _Stream;
}



inline jule::Str _1a5e40a26_Arr::_method_to_str(void) {
	jule::Str _50617_s = jule::Str("[", 1);
	_50617_s+=_1dd4c1635_itoa((*this)._field_n);
	_50617_s+=jule::Str("]", 1);
	_50617_s+=(*((*this)._field_elem))._method_to_str();
	return _50617_s;
}



inline jule::Bool _1a5e40a26_Arr::_method_equals(jule::Ptr<_1a5e40a26_TypeKind> _51426_other) {
	jule::Ptr<_1a5e40a26_Arr> _51513_arr = (*(_51426_other))._method_arr();
	if (_51513_arr == nullptr) {
		return false;
	}
	return ((*(this->self))._field_n == (*(_51513_arr))._field_n) && (*((*(this->self))._field_elem))._method_equals((*(_51513_arr))._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a5e40a26_Arr &_Src) {
	_Stream << ((_1a5e40a26_Arr)(_Src))._method_to_str();
	return _Stream;
}



inline jule::Str _1a5e40a26_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*((*this)._field_elem))._method_to_str();
}



inline jule::Bool _1a5e40a26_Ptr::_method_equals(jule::Ptr<_1a5e40a26_TypeKind> _53826_other) {
	jule::Ptr<_1a5e40a26_Ptr> _53913_ptr = (*(_53826_other))._method_ptr();
	if (_53913_ptr == nullptr) {
		return false;
	}
	return (*((*(this->self))._field_elem))._method_equals((*(_53913_ptr))._field_elem);
}



inline jule::Bool _1a5e40a26_Ptr::_method_is_unsafe(void) {
	return (*this)._field_elem == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a5e40a26_Ptr &_Src) {
	_Stream << ((_1a5e40a26_Ptr)(_Src))._method_to_str();
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a5e40a26_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1dceea978_DirectiveEval::_method_push_err(_1dd05db0c_Token _2027_t,jule::Str _2037_fmt,jule::Slice<jule::Any> _2050_args) {
	(*this)._field_logs = jule::alloc_for_append((*this)._field_logs,1);(*this)._field_logs.__push(_1db678789_Log(static_cast<jule::Int>(1LL),_2027_t._field_row,_2027_t._field_column,(*(_2027_t._field_file))._method_path(),_1db678789_logf(_2037_fmt,_2050_args),jule::Str(),jule::Str()));
}



inline jule::Slice<jule::Slice<_1dd05db0c_Token>> _1dceea978_DirectiveEval::_method_split_operans(jule::Str _3232_op,jule::Slice<_1dd05db0c_Token>& _3252_tokens) {
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _3317_parts = jule::Slice<jule::Slice<_1dd05db0c_Token>>::alloc(0LL,10LL);
	jule::Int _3517_i = 0LL;
	jule::Int _3617_range_n = 0LL;
	jule::Int _3717_last = 0LL;
	for (; _3517_i < static_cast<jule::Int>(static_cast<jule::Int>(_3252_tokens.len()) - 1LL); (_3517_i)++) {
		{
			_1dd05db0c_Token _3917_b = _3252_tokens[_3517_i];
			if (_3917_b._field_id == static_cast<jule::Uint>(3LLU)) {
				{
					auto &_match_expr{ _3917_b._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a9190bda:;
						{
							(_3617_range_n)++;
							goto _iter_next_1a918ea41;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a9190d1c:;
						{
							(_3617_range_n)--;
						}
					}
					_match_end_1a9190b41:;
				}
			}
			if ((_3617_range_n > 0LL) || (_3917_b._field_id != static_cast<jule::Uint>(7LLU))) {
				goto _iter_next_1a918ea41;
			}
			if (_3917_b._field_kind == _3232_op) {
				_3317_parts = jule::alloc_for_append(_3317_parts,1);_3317_parts.__push(_3252_tokens.slice(_3717_last,_3517_i));
				_3717_last=static_cast<jule::Int>(_3517_i + 1LL);
			}
		}
	_iter_next_1a918ea41:;
	}
	_iter_end_1a918ea41:;
	if (_3717_last < static_cast<jule::Int>(_3252_tokens.len())) {
		_3317_parts = jule::alloc_for_append(_3317_parts,1);_3317_parts.__push(_3252_tokens.slice(_3717_last));
	} else {
		(*this)._method_push_err(_3252_tokens[_3717_last - 1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _3317_parts;
}



inline jule::Bool _1dceea978_DirectiveEval::_method_eval_directive_ident(jule::Str _7335_ident) {
	if (_7335_ident == jule::Str()) {
		return false;
	}
	{
		auto &expr = _1dd014068_VARS;
		auto it = expr.begin();
		_iter_begin_1a9195096:;
		if (it != expr.end()) {
			jule::Str _1dceea978_var = *it;
			{
				if (_1dceea978_var == _7335_ident) {
					return true;
				}
			}
			_iter_next_1a9195096:;
			++it;
			goto _iter_begin_1a9195096;
		}
		_iter_end_1a9195096:;
	}
	return false;
}



inline jule::Bool _1dceea978_DirectiveEval::_method_eval_directive_part(jule::Slice<_1dd05db0c_Token> _8942_part) {
	jule::Bool _9013_logical_not = (_8942_part[0LL]._field_id == static_cast<jule::Uint>(7LLU)) && (_8942_part[0LL]._field_kind == jule::Str("!", 1));
	if (_9013_logical_not) {
		_8942_part=_8942_part.slice(1LL);
	}
	if (_8942_part.len() > 1LL) {
		(*this)._method_push_err(_8942_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _10017_result = (*this)._method_eval_directive_ident(_8942_part[0LL]._field_kind);
	if (_9013_logical_not) {
		_10017_result=(!(_10017_result));
	}
	return _10017_result;
}



inline jule::Bool _1dceea978_DirectiveEval::_method_eval(void) {
	if ((*((*this)._field_d))._field_args.len() == 0LL) {
		(*this)._method_push_err((*((*this)._field_d))._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _11317_result = false;
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _11517_logical_or_parts = (*this)._method_split_operans(jule::Str("||", 2),(*((*this)._field_d))._field_args);
	if (_11517_logical_or_parts == nullptr) {
		return false;
	}
	{
		auto &expr = _11517_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1a919b850:;
		if (it != expr.end()) {
			jule::Slice<_1dd05db0c_Token> _1dceea978_part = *it;
			{
				jule::Bool _12121_and = true;
				jule::Slice<jule::Slice<_1dd05db0c_Token>> _12221_logical_and_parts = (*this)._method_split_operans(jule::Str("&&", 2),_1dceea978_part);
				if (_12221_logical_and_parts == nullptr) {
					return false;
				}
				{
					auto &expr = _12221_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1a919cec2:;
					if (it != expr.end()) {
						jule::Slice<_1dd05db0c_Token> _1dceea978_and_part = *it;
						{
							_1dd05db0c_Token _12821_first = _1dceea978_and_part[0LL];
							if ((_12821_first._field_id == static_cast<jule::Uint>(3LLU)) && (_12821_first._field_kind == jule::Str("(", 1))) {
								_1dd05db0c_Token _13025_end = _1dceea978_and_part[_1dceea978_and_part.len() - 1LL];
								if ((_13025_end._field_id != static_cast<jule::Uint>(3LLU)) || (_13025_end._field_kind != jule::Str(")", 1))) {
									(*this)._method_push_err(_12821_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								}
								_1dceea978_and_part=_1dceea978_and_part.slice(1LL,_1dceea978_and_part.len() - 1LL);
							}
							_12121_and=_12121_and && (*this)._method_eval_directive_part(_1dceea978_and_part);
						}
						_iter_next_1a919cec2:;
						++it;
						goto _iter_begin_1a919cec2;
					}
					_iter_end_1a919cec2:;
				}
				_11317_result=_11317_result || _12121_and;
			}
			_iter_next_1a919b850:;
			++it;
			goto _iter_begin_1a919b850;
		}
		_iter_end_1a919b850:;
	}
	return _11317_result;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dceea978_DirectiveEval &_Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dd023275_PlainImporter> _1dd023275_PlainImporter::_static_method_new(void) {
	return jule::new_struct<_1dd023275_PlainImporter>(new( std::nothrow ) _1dd023275_PlainImporter(jule::Slice<jule::Str>({_1db841039_PATH_STDLIB}),jule::Str(),jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>>()));
}



inline void _1dd023275_PlainImporter::_method_set_mod_path(jule::Str _8235_path) {
	(*this)._field_mod=_8235_path;
}



inline jule::Str _1dd023275_PlainImporter::_method_get_mod_path(void) {
	return (*this)._field_mod;
}



inline jule::Str _1dd023275_PlainImporter::_method_mod_by_id(jule::Int _9028_id) {
	return (*this)._field_mods[_9028_id];
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1dd023275_PlainImporter::_method_get_import(jule::Str _9433_path) {
	{
		auto &expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_1a91a4649:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1dd023275_p = *it;
			{
				if ((*(_1dd023275_p))._field_path == _9433_path) {
					return _1dd023275_p;
				}
			}
			_iter_next_1a91a4649:;
			++it;
			goto _iter_begin_1a91a4649;
		}
		_iter_end_1a91a4649:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1dd05b9c8_Ast>>,jule::Slice<_1db678789_Log>> _1dd023275_PlainImporter::_method_import_package(jule::Str _10437_path,jule::Bool _10448_update_mod) {
	jule::Slice<jule::Ptr<_1db69ceea_DirEntry>> _10517_dirents = ({
		auto except = _1db69ceea_Directory::_static_method_read(_10437_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1db678789_Log>({_1dd023275_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _10437_path))}));
			return std::make_tuple(nullptr,jule::Slice<_1db678789_Log>({_1dd023275_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _10437_path))}));
		} jule::Slice<jule::Ptr<_1db69ceea_DirEntry>>();});
	});
	if (_10448_update_mod) {
		jule::Str _11017_new_mod = _1dd06a0d0_find_module_file_deep(_10437_path);
		if (_11017_new_mod != (*this)._field_mod) {
			(*this)._field_mod=_11017_new_mod;
			jule::Slice<_1db678789_Log> _11325_errs = _1dd06a0d0_check_module_file((*this)._field_mod);
			if (_11325_errs.len() != 0LL) {
				return std::make_tuple(nullptr,_11325_errs);
			}
		}
	}
	jule::Slice<jule::Ptr<_1dd05b9c8_Ast>> _12017_asts = jule::Slice<jule::Ptr<_1dd05b9c8_Ast>>::alloc(0LL,static_cast<jule::Int>(_10517_dirents.len()));
	{
		auto &expr = _10517_dirents;
		auto it = expr.begin();
		_iter_begin_1a91a6d77:;
		if (it != expr.end()) {
			jule::Ptr<_1db69ceea_DirEntry> _1dd023275_dirent = *it;
			{
				if ((*((*(_1dd023275_dirent))._field_stat))._method_is_dir() || (!(_1db822922_has_suffix((*(_1dd023275_dirent))._field_name,jule::Str(".jule", 5))))) {
					goto _iter_next_1a91a6d77;
				}
				jule::Str _12717__path = _1db7b8830_join(jule::Slice<jule::Str>({_10437_path,(*(_1dd023275_dirent))._field_name}));
				jule::Ptr<_1dd05eba7_File> _12821_file = _1dd05eba7_new_file_set(_12717__path);
				(*(_12821_file))._method_fill(_1dd023275_read_buff((*(_12821_file))._method_path()));
				jule::Slice<_1db678789_Log> _13021_errors = _1dd0ed32d_lex(_12821_file);
				if (_13021_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_13021_errors);
				}
				jule::Ptr<_1dd0be6b7_FileInfo> _13521_finfo = _1dd0be6b7_parse_file(_12821_file);
				if ((*(_13521_finfo))._field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,(*(_13521_finfo))._field_errors);
				}
				if ((!(_1dcee292b_is_pass_file_annotation((*(_1dd023275_dirent))._field_name)))) {
					goto _iter_next_1a91a6d77;
				}
				jule::Bool _14518_r;
				jule::Slice<_1db678789_Log> _14525_logs;
				std::tie(_14518_r,_14525_logs) = _1dd023275_is_pass_build_directives((*(_13521_finfo))._field_ast);
				if (_14525_logs.len() > 0LL) {
					return std::make_tuple(nullptr,_14525_logs);
				}
				if ((!(_14518_r))) {
					goto _iter_next_1a91a6d77;
				}
				_12017_asts = jule::alloc_for_append(_12017_asts,1);_12017_asts.__push((*(_13521_finfo))._field_ast);
			}
			_iter_next_1a91a6d77:;
			++it;
			goto _iter_begin_1a91a6d77;
		}
		_iter_end_1a91a6d77:;
	}
	return std::make_tuple(_12017_asts,nullptr);
}



inline void _1dd023275_PlainImporter::_method_imported(jule::Ptr<_1c2c4607e_ImportInfo> _16135_imp) {
	{
		auto &expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_1a91b1d82:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1dd023275_p = *it;
			{
				if (((*(_1dd023275_p))._field_cpp_linked == (*(_16135_imp))._field_cpp_linked) && ((*(_1dd023275_p))._field_link_path == (*(_16135_imp))._field_link_path)) {
					return;
				}
			}
			_iter_next_1a91b1d82:;
			++it;
			goto _iter_begin_1a91b1d82;
		}
		_iter_end_1a91b1d82:;
	}
	if ((*this)._field_mod.len() != 0LL) {
		{
			auto &expr = (*this)._field_mods;
			auto it = expr.begin();
			_iter_begin_1a91b3537:;
			if (it != expr.end()) {
				jule::Int _1dd023275_i = it - expr.begin();
				jule::Str _1dd023275_mod = *it;
				{
					if ((*this)._field_mod == _1dd023275_mod) {
						(*(_16135_imp))._field_mod_id=_1dd023275_i;
						goto _julec_label_setted;
					}
				}
				_iter_next_1a91b3537:;
				++it;
				_1dd023275_i++;
				goto _iter_begin_1a91b3537;
			}
			_iter_end_1a91b3537:;
		}
		(*(_16135_imp))._field_mod_id=static_cast<jule::Int>((*this)._field_mods.len());
		(*this)._field_mods = jule::alloc_for_append((*this)._field_mods,1);(*this)._field_mods.__push((*this)._field_mod);
		_julec_label_setted:;
	}
	(*this)._field_all_packages = jule::alloc_for_append((*this)._field_all_packages,1);(*this)._field_all_packages.__push(_16135_imp);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd023275_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dcebc175_OrderedDefines &_Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dcebc175_DefineOrderer::_static_method_is_common_ordered_0(jule::Slice<jule::Ptr<_1dd0be530_Struct>>& _1737_s,jule::Ptr<_1dd0be530_Struct> _1746_t) {
	jule::Ptr<_1dd0be530_Struct>* _1817_p = (&((*(_1746_t))._field_depends[0LL]));
	jule::Ptr<_1dd0be530_Struct>* _1913_end = _1817_p + static_cast<jule::Int>((*(_1746_t))._field_depends.len());
	{
		auto &expr = _1737_s;
		auto it = expr.begin();
		_iter_begin_1a91e93e7:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> &_1dcebc175_tt = *it;
			{
				{
					if (_1dcebc175_tt == _1746_t) {
						goto _iter_end_1a91e93e7;
					}
					if (((*((*(_1817_p))))._field_cpp_linked || ((*((*(_1817_p))))._field_depends.len() == 0LL)) || (_1dcebc175_tt == (*(_1817_p)))) {
						(_1817_p)++;
						if (_1817_p == _1913_end) {
							return true;
						}
					}
				}
			}
			_iter_next_1a91e93e7:;
			++it;
			goto _iter_begin_1a91e93e7;
		}
		_iter_end_1a91e93e7:;
	}
	return false;
}



inline void _1dcebc175_DefineOrderer::_static_method_order_common_0(jule::Slice<jule::Ptr<_1dd0be530_Struct>>& _3840_s) {
	jule::Int _3917_i = 0LL;
	{
		auto &expr = _3840_s;
		auto it = expr.begin();
		_iter_begin_1a91e339c:;
		if (it != expr.end()) {
			jule::Int _1dcebc175_j = it - expr.begin();
			jule::Ptr<_1dd0be530_Struct> _1dcebc175_t = *it;
			{
				if ((*(_1dcebc175_t))._field_cpp_linked || ((*(_1dcebc175_t))._field_depends.len() == 0LL)) {
					_3840_s.swap(_3917_i,_1dcebc175_j);
					(_3917_i)++;
				}
			}
			_iter_next_1a91e339c:;
			++it;
			_1dcebc175_j++;
			goto _iter_begin_1a91e339c;
		}
		_iter_end_1a91e339c:;
	}
	jule::Int _4717_j = _3917_i;
	for (; _4717_j < static_cast<jule::Int>(_3840_s.len()); (_4717_j)++) {
		{
			jule::Int _4921_k = _3917_i;
			for (; _4921_k < static_cast<jule::Int>(static_cast<jule::Int>(_3840_s.len()) - 1LL); (_4921_k)++) {
				{
					if ((!(_1dcebc175_DefineOrderer::_static_method_is_common_ordered_0(_3840_s,_3840_s[_4921_k])))) {
						_3840_s.swap(_4921_k,static_cast<jule::Int>(_4921_k + 1LL));
					}
				}
			_iter_next_1a91e3b0b:;
			}
			_iter_end_1a91e3b0b:;
		}
	_iter_next_1a91e2c70:;
	}
	_iter_end_1a91e2c70:;
}



inline void _1dcebc175_DefineOrderer::_static_method_order_structures(jule::Slice<jule::Ptr<_1dd0be530_Struct>>& _6041_structs) {
	_1dcebc175_DefineOrderer::_static_method_order_common_0(_6041_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dcebc175_DefineOrderer &_Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1db71cbb3_ScopeDeadCode::_method_optimize_child(jule::Ptr<_1de0e938e_Scope>& _2739_s) {
	jule::Ptr<_1db71cbb3_ScopeDeadCode> _2817_sdc = jule::new_struct_ptr<_1db71cbb3_ScopeDeadCode>(new( std::nothrow ) _1db71cbb3_ScopeDeadCode(this->self,_2739_s,(&((*(_2739_s))._field_stmts)),jule::Int()));
	{
		(*(_2817_sdc))._method_optimize_stmts();
	}
}



inline void _1db71cbb3_ScopeDeadCode::_method_eliminate_followed(void) {
	(*((*this)._field_stmts))=(*((*this)._field_stmts)).slice(0LL,(*this)._field_i + 1LL);
	jule::Ptr<_1db71cbb3_ScopeDeadCode> _3817_parent = (*this)._field_parent;
	while (_3817_parent != nullptr) {
		{
			(*((*(_3817_parent))._field_stmts))=(*((*(_3817_parent))._field_stmts)).slice(0LL,(*(_3817_parent))._field_i + 1LL);
			_3817_parent=(*(_3817_parent))._field_parent;
		}
	_iter_next_1a920e594:;
	}
	_iter_end_1a920e594:;
}



inline void _1db71cbb3_ScopeDeadCode::_method_optimize_stmt(jule::Any _4544_st) {
	{
		auto &_match_expr{ _4544_st };
		
		if (_match_expr.type_is<jule::Ptr<_1de0e938e_Scope>>()) {
			_case_begin_1a92116d9:;
			{
				jule::Ptr<_1de0e938e_Scope> _4821_scope = _4544_st.operator jule::Ptr<_1de0e938e_Scope>();
				if ((*(_4821_scope))._field_deferred) {
					_1db71cbb3_eliminate_dead_code_of_scope(_4821_scope);
				} else {
					(*(this->self))._method_optimize_child(_4821_scope);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a94c333b_Data>>()) {
			_case_begin_1a9211750:;
			{
				{
					auto &_match_expr{ (*(_4544_st.operator jule::Ptr<_1a94c333b_Data>()))._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinPanicCallExprModel>>()) {
						_case_begin_1a9213873:;
						{
							(*(this->self))._method_eliminate_followed();
						}
					}
					_match_end_1a9213741:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_RetSt>>()) {
			_case_begin_1a92117b6:;
			{
				(*(this->self))._method_eliminate_followed();
			}
		}
		_match_end_1a9211640:;
	}
}



inline void _1db71cbb3_ScopeDeadCode::_method_optimize_stmts(void) {
	(*(this->self))._field_i=0LL;
	for (; (*(this->self))._field_i < static_cast<jule::Int>((*((*(this->self))._field_stmts)).len()); ((*(this->self))._field_i)++) {
		{
			(*(this->self))._method_optimize_stmt((*((*(this->self))._field_stmts))[(*(this->self))._field_i]);
		}
	_iter_next_1a9214c1a:;
	}
	_iter_end_1a9214c1a:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1db71cbb3_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1a69e4ba1_AbsTime::_method_unix(void) {
	jule::Bool _5417_leap = false;
	jule::U64 _5517_y = (*this)._field_year - 1900LLU;
	jule::U64 _5617_m = (*this)._field_month - 1LLU;
	if ((_5617_m >= 12LLU) || (_5617_m < 0LLU)) {
		jule::U64 _5821_adj = _5617_m / 12LLU;
		_5617_m = (_5617_m % 12LL);
		if (_5617_m < 0LLU) {
			(_5821_adj)--;
			_5617_m+=12LLU;
		}
		_5517_y+=_5821_adj;
	}
	jule::U64 _6617_t = _1a69e4ba1_unix_year_to_seconds(_5517_y,_5417_leap);
	_6617_t+=static_cast<jule::U64>(_1a69e4ba1_unix_month_to_seconds(_5617_m,_5417_leap));
	_6617_t+=static_cast<jule::U64>(86400LLU * static_cast<jule::U64>((*this)._field_day - 1LLU));
	_6617_t+=static_cast<jule::U64>(3600LLU * (*this)._field_hour);
	_6617_t+=static_cast<jule::U64>(60LLU * (*this)._field_minute);
	_6617_t+=(*this)._field_second;
	return _6617_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a69e4ba1_AbsTime &_Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1a69e4ba1_Time _1a69e4ba1_Time::_static_method_unix(jule::U64 _8924_sec) {
	return _1a69e4ba1_Time(_8924_sec);
}



inline _1a69e4ba1_Time _1a69e4ba1_Time::_static_method_now(void) {
	return _1a69e4ba1_Time::_static_method_unix(static_cast<jule::U64>(_1a69e4ba1_unix()));
}



inline jule::U64 _1a69e4ba1_Time::_method_unix(void) {
	return (*this)._field_sec;
}



inline jule::U64 _1a69e4ba1_Time::_method_day(void) {
	return (*this)._method_abs()._field_day;
}



inline jule::U64 _1a69e4ba1_Time::_method_month(void) {
	return (*this)._method_abs()._field_month;
}



inline jule::U64 _1a69e4ba1_Time::_method_year(void) {
	return (*this)._method_abs()._field_year;
}



inline jule::U64 _1a69e4ba1_Time::_method_second(void) {
	return (*this)._method_abs()._field_second;
}



inline jule::U64 _1a69e4ba1_Time::_method_minute(void) {
	return (*this)._method_abs()._field_minute;
}



inline jule::U64 _1a69e4ba1_Time::_method_hour(void) {
	return (*this)._method_abs()._field_hour;
}



inline _1a69e4ba1_AbsTime _1a69e4ba1_Time::_method_abs(void) {
	jule::U64 _12513_secs = (*this)._field_sec - 951868800LLU;
	jule::U64 _12617_days = _12513_secs / 86400LLU;
	jule::U64 _12717_rem_secs = _12513_secs % 86400LL;
	if (_12717_rem_secs < 0LLU) {
		_12717_rem_secs+=86400LLU;
		(_12617_days)--;
	}
	jule::U64 _13317_qc_cycles = _12617_days / 146097LLU;
	jule::U64 _13417_rem_days = _12617_days % 146097LL;
	if (_13417_rem_days < 0LLU) {
		_13417_rem_days+=146097LLU;
		(_13317_qc_cycles)--;
	}
	jule::U64 _14017_c_cycles = _13417_rem_days / 36524LLU;
	if (_14017_c_cycles == 4LLU) {
		(_14017_c_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14017_c_cycles * 36524LLU);
	jule::U64 _14617_q_cycles = _13417_rem_days / 1461LLU;
	if (_14617_q_cycles == 25LLU) {
		(_14617_q_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14617_q_cycles * 1461LLU);
	jule::U64 _15217_rem_years = _13417_rem_days / 365LLU;
	if (_15217_rem_years == 4LLU) {
		(_15217_rem_years)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_15217_rem_years * 365LLU);
	jule::U64 _15813_leap = static_cast<jule::U64>(((((_15217_rem_years == 0LLU) && ((_14617_q_cycles > 0LLU) || (_14017_c_cycles == 0LLU)))) ? (1LLU) : (0LLU)));
	jule::U64 _15917_y_day = ((_13417_rem_days + 31LLU) + 28LLU) + _15813_leap;
	if (_15917_y_day >= static_cast<jule::U64>(365LLU + _15813_leap)) {
		_15917_y_day-=static_cast<jule::U64>(365LLU + _15813_leap);
	}
	jule::U64 _16417_months = 0LLU;
	for (; _1a69e4ba1_MDAYS[static_cast<jule::Int>(_16417_months)] <= _13417_rem_days; (_16417_months)++) {
		{
			_13417_rem_days-=_1a69e4ba1_MDAYS[static_cast<jule::Int>(_16417_months)];
		}
	_iter_next_1a9270d86:;
	}
	_iter_end_1a9270d86:;
	_1a69e4ba1_AbsTime _16917_t = _1a69e4ba1_AbsTime();
	_16917_t._field_year=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_15217_rem_years + static_cast<jule::U64>(4LLU * _14617_q_cycles)) + static_cast<jule::U64>(100LLU * _14017_c_cycles)) + static_cast<jule::U64>(400LLU * _13317_qc_cycles)) + 100LLU);
	_16917_t._field_month=static_cast<jule::U64>(_16417_months + 2LLU);
	if (_16917_t._field_month >= 12LLU) {
		_16917_t._field_month-=12LLU;
		(_16917_t._field_year)++;
	}
	_16917_t._field_month+=1LLU;
	_16917_t._field_year+=1900LLU;
	_16917_t._field_day=static_cast<jule::U64>(_13417_rem_days + 1LLU);
	_16917_t._field_week_day=static_cast<jule::U64>(static_cast<jule::U64>(3LLU + _12617_days) % 7LL);
	if (_16917_t._field_week_day < 0LLU) {
		_16917_t._field_week_day+=7LLU;
	}
	_16917_t._field_year_day=_15917_y_day;
	_16917_t._field_hour=static_cast<jule::U64>(_12717_rem_secs / 3600LLU);
	_16917_t._field_minute=static_cast<jule::U64>(static_cast<jule::U64>(_12717_rem_secs / 60LLU) % 60LL);
	_16917_t._field_second=static_cast<jule::U64>(_12717_rem_secs % 60LL);
	return _16917_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a69e4ba1_Time &_Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 _1a69e4ba1_Duration::_static_method_nanoseconds(jule::I64 _22231_d) {
	return static_cast<jule::I64>(_22231_d * 1LL);
}



inline jule::I64 _1a69e4ba1_Duration::_static_method_microseconds(jule::I64 _22732_d) {
	return static_cast<jule::I64>(_22732_d * 1000LL);
}



inline jule::I64 _1a69e4ba1_Duration::_static_method_milliseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>(_23232_d * 1000000LL);
}



inline jule::I64 _1a69e4ba1_Duration::_static_method_seconds(jule::I64 _23727_d) {
	return static_cast<jule::I64>(_23727_d * 1000000000LL);
}



inline jule::I64 _1a69e4ba1_Duration::_static_method_minutes(jule::I64 _24227_d) {
	return static_cast<jule::I64>(_24227_d * 60000000000LL);
}



inline jule::I64 _1a69e4ba1_Duration::_static_method_hours(jule::I64 _24725_d) {
	return static_cast<jule::I64>(_24725_d * 3600000000000LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a69e4ba1_Duration &_Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1db71bcb1_TestCoder> _1db71bcb1_TestCoder::_static_method_new(jule::Ptr<_1a686ecd4_ObjectCoder>& _2228_oc) {
	return jule::new_struct<_1db71bcb1_TestCoder>(new( std::nothrow ) _1db71bcb1_TestCoder(_2228_oc));
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1db71bcb1_TestCoder::_method_find_testing_package(void) {
	{
		auto &expr = (*((*((*this)._field_oc))._field_ir))._field_used;
		auto it = expr.begin();
		_iter_begin_1a92c83c7:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1db71bcb1_imp = *it;
			{
				if ((*(_1db71bcb1_imp))._field_link_path == jule::Str("std::testing", 12)) {
					return _1db71bcb1_imp;
				}
			}
			_iter_next_1a92c83c7:;
			++it;
			goto _iter_begin_1a92c83c7;
		}
		_iter_end_1a92c83c7:;
	}
	return nullptr;
}



inline void _1db71bcb1_TestCoder::_method_append_test(jule::Str& _3735_obj,jule::Ptr<_1dded9702_FnIns> _3749_f) {
	_3735_obj+=(*((*this)._field_oc))._method_indent();
	_3735_obj+=jule::Str("_t->_method_reset();\n", 21);
	_3735_obj+=(*((*this)._field_oc))._method_indent();
	_3735_obj+=jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35);
	_3735_obj+=(*((*this)._field_oc))._method_indent();
	_3735_obj+=jule::Str("jule::outln(", 12);
	_3735_obj+=_1dcb0cd1b_cstr_lit(static_cast<jule::Slice<jule::U8>>((*((*(_3749_f))._field_decl))._field_ident));
	_3735_obj+=jule::Str(");\n", 3);
	_3735_obj+=(*((*this)._field_oc))._method_indent();
	_3735_obj+=_1a670d28d_IdentCoder::_static_method_func_ins(_3749_f);
	_3735_obj+=jule::Str("(_t);\n", 6);
	_3735_obj+=(*((*this)._field_oc))._method_indent();
	_3735_obj+=jule::Str("post_test();\n", 13);
}



inline void _1db71bcb1_TestCoder::_method_append_package_tests(jule::Str& _5344_obj,jule::Ptr<_1c2c4607e_Package>& _5359_p) {
	{
		auto &expr = (*(_5359_p))._field_files;
		auto it = expr.begin();
		_iter_begin_1a92ce499:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1db71bcb1_file = *it;
			{
				{
					auto &expr = (*(_1db71bcb1_file))._field_funcs;
					auto it = expr.begin();
					_iter_begin_1a92cec5d:;
					if (it != expr.end()) {
						jule::Ptr<_1dded9702_Fn> _1db71bcb1_f = *it;
						{
							if (_1a696bb06_has_directive((*(_1db71bcb1_f))._field_directives,jule::Str("test", 4))) {
								(*this)._method_append_test(_5344_obj,(*(_1db71bcb1_f))._field_instances[0LL]);
							}
						}
						_iter_next_1a92cec5d:;
						++it;
						goto _iter_begin_1a92cec5d;
					}
					_iter_end_1a92cec5d:;
				}
			}
			_iter_next_1a92ce499:;
			++it;
			goto _iter_begin_1a92ce499;
		}
		_iter_end_1a92ce499:;
	}
}



inline void _1db71bcb1_TestCoder::_method_serialize(jule::Str& _6537_obj) {
	_6537_obj+=jule::Str("\nvoid test_point(void) {\n", 25);
	(*((*this)._field_oc))._method_add_indent();
	_6537_obj+=(*((*this)._field_oc))._method_indent();
	jule::Ptr<_1c2c4607e_ImportInfo> _7017_p = (*this)._method_find_testing_package();
	if (_7017_p == nullptr) {
		_6537_obj+=jule::Str("}", 1);
		(*((*this)._field_oc))._method_done_indent();
		return;
	}
	jule::Ptr<_1dd0be530_StructIns> _8017_t = (*((*(_7017_p))._method_find_struct(jule::Str("T", 1),false)))._field_instances[0LL];
	_6537_obj+=_1a696bb06_TypeCoder::_static_method_as_sptr(_1a696bb06_TypeCoder::_static_method_structure_ins(_8017_t));
	_6537_obj+=jule::Str(" _t = jule::new_struct<", 23);
	_6537_obj+=_1a696bb06_TypeCoder::_static_method_structure_ins(_8017_t);
	_6537_obj+=jule::Str(">(", 2);
	if ((!(_1db6263a2_PRODUCTION))) {
		_6537_obj+=jule::Str("\"/jule/init\", ", 14);
	}
	_6537_obj+=jule::Str("new(std::nothrow) ", 18);
	_6537_obj+=_1a696bb06_TypeCoder::_static_method_structure_ins(_8017_t);
	_6537_obj+=jule::Str(");\n", 3);
	_6537_obj+=(*((*this)._field_oc))._method_indent();
	_6537_obj+=jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47);
	_6537_obj+=(*((*this)._field_oc))._method_indent();
	_6537_obj+=jule::Str("auto post_test = [&](void) {\n", 29);
	(*((*this)._field_oc))._method_add_indent();
	_6537_obj+=(*((*this)._field_oc))._method_indent();
	_6537_obj+=jule::Str("++total;\n", 9);
	_6537_obj+=(*((*this)._field_oc))._method_indent();
	_6537_obj+=jule::Str("if (_t->_method_failed()) { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 84);
	_6537_obj+=(*((*this)._field_oc))._method_indent();
	_6537_obj+=jule::Str("else if (_t->_method_skipped()) { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 92);
	_6537_obj+=(*((*this)._field_oc))._method_indent();
	_6537_obj+=jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53);
	(*((*this)._field_oc))._method_done_indent();
	_6537_obj+=(*((*this)._field_oc))._method_indent();
	_6537_obj+=jule::Str("};\n", 3);
	(*this)._method_append_package_tests(_6537_obj,(*((*((*this)._field_oc))._field_ir))._field_main);
	_6537_obj+=jule::Str("\n\n", 2);
	_6537_obj+=(*((*this)._field_oc))._method_indent();
	_6537_obj+=jule::Str("if (failed != 0) std::exit(1);\n", 31);
	_6537_obj+=(*((*this)._field_oc))._method_indent();
	_6537_obj+=jule::Str("std::cout << std::endl << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 167);
	(*((*this)._field_oc))._method_done_indent();
	_6537_obj+=(*((*this)._field_oc))._method_indent();
	_6537_obj+=jule::Str("}\n", 2);
}







std::ostream &operator<<(std::ostream &_Stream, const _1db71bcb1_TestCoder &_Src) {
	_Stream << "TestCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dc4e9dbd_ScopeCoder> _1dc4e9dbd_ScopeCoder::_static_method_new(jule::Ptr<_1a686ecd4_ObjectCoder>& _4224_oc) {
	return jule::new_struct<_1dc4e9dbd_ScopeCoder>(new( std::nothrow ) _1dc4e9dbd_ScopeCoder(_4224_oc));
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_range_index_iter(jule::Ptr<_1de0e938e_RangeIter>& _4840_it) {
	jule::Str _4913_begin = _1a670d28d_IdentCoder::_static_method_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_4840_it)));
	jule::Str _5013_next = _1a670d28d_IdentCoder::_static_method_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_4840_it)));
	jule::Str _5217_obj = jule::Str("{\n", 2);
	(*((*this)._field_oc))._method_add_indent();
	_5217_obj+=(*((*this)._field_oc))._method_indent();
	_5217_obj+=jule::Str("auto ", 5);
	if (_1db6263a2_OPT_COPY && (*((*(_4840_it))._field_expr))._field_lvalue) {
		_5217_obj+=jule::Str("&", 1);
	}
	_5217_obj+=jule::Str("expr = ", 7);
	_5217_obj+=(*((*((*this)._field_oc))._field_ec))._method_model((*((*(_4840_it))._field_expr))._field_model);
	_5217_obj+=jule::Str(";\n", 2);
	_5217_obj+=(*((*this)._field_oc))._method_indent();
	_5217_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_5217_obj+=(*((*this)._field_oc))._method_indent();
	_5217_obj+=_4913_begin;
	_5217_obj+=jule::Str(":;\n", 3);
	_5217_obj+=(*((*this)._field_oc))._method_indent();
	_5217_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	(*((*this)._field_oc))._method_add_indent();
	_5217_obj+=(*((*this)._field_oc))._method_indent();
	if ((*(_4840_it))._field_key_a != nullptr) {
		_5217_obj+=(*((*this)._field_oc))._method_var_init_expr((*(_4840_it))._field_key_a,jule::Str("it - expr.begin()", 17));
		_5217_obj+=jule::Str("\n", 1);
		_5217_obj+=(*((*this)._field_oc))._method_indent();
	}
	if ((*(_4840_it))._field_key_b != nullptr) {
		if (_1db6263a2_OPT_COPY) {
			(*((*(_4840_it))._field_key_b))._field_reference=_1dc4e9dbd_is_iter_copy_optimizable((*(_4840_it))._field_expr,(*(_4840_it))._field_key_b);
		}
		_5217_obj+=(*((*this)._field_oc))._method_var_init_expr((*(_4840_it))._field_key_b,jule::Str("*it", 3));
		_5217_obj+=jule::Str("\n", 1);
		_5217_obj+=(*((*this)._field_oc))._method_indent();
	}
	_5217_obj+=(*this)._method_scope((*(_4840_it))._field_scope);
	_5217_obj+=jule::Str("\n", 1);
	_5217_obj+=(*((*this)._field_oc))._method_indent();
	_5217_obj+=_5013_next;
	_5217_obj+=jule::Str(":;\n", 3);
	_5217_obj+=(*((*this)._field_oc))._method_indent();
	_5217_obj+=jule::Str("++it;\n", 6);
	_5217_obj+=(*((*this)._field_oc))._method_indent();
	if ((*(_4840_it))._field_key_a != nullptr) {
		_5217_obj+=_1a670d28d_IdentCoder::_static_method_var((*(_4840_it))._field_key_a);
		_5217_obj+=jule::Str("++;\n", 4);
		_5217_obj+=(*((*this)._field_oc))._method_indent();
	}
	_5217_obj+=jule::Str("goto ", 5);
	_5217_obj+=_4913_begin;
	_5217_obj+=jule::Str(";\n", 2);
	(*((*this)._field_oc))._method_done_indent();
	_5217_obj+=(*((*this)._field_oc))._method_indent();
	_5217_obj+=jule::Str("}\n", 2);
	_5217_obj+=(*((*this)._field_oc))._method_indent();
	_5217_obj+=_1a670d28d_IdentCoder::_static_method_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_4840_it)));
	_5217_obj+=jule::Str(":;\n", 3);
	(*((*this)._field_oc))._method_done_indent();
	_5217_obj+=(*((*this)._field_oc))._method_indent();
	_5217_obj+=jule::Str("}", 1);
	return _5217_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_range_hashmap_iter(jule::Ptr<_1de0e938e_RangeIter>& _11842_it) {
	jule::Str _11913_begin = _1a670d28d_IdentCoder::_static_method_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11842_it)));
	jule::Str _12013_next = _1a670d28d_IdentCoder::_static_method_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11842_it)));
	jule::Str _12217_obj = jule::Str("{\n", 2);
	(*((*this)._field_oc))._method_add_indent();
	_12217_obj+=(*((*this)._field_oc))._method_indent();
	_12217_obj+=jule::Str("auto ", 5);
	if (_1db6263a2_OPT_COPY && (*((*(_11842_it))._field_expr))._field_lvalue) {
		_12217_obj+=jule::Str("&", 1);
	}
	_12217_obj+=jule::Str("expr = ", 7);
	_12217_obj+=(*((*((*this)._field_oc))._field_ec))._method_model((*((*(_11842_it))._field_expr))._field_model);
	_12217_obj+=jule::Str(";\n", 2);
	_12217_obj+=(*((*this)._field_oc))._method_indent();
	_12217_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_12217_obj+=(*((*this)._field_oc))._method_indent();
	_12217_obj+=_11913_begin;
	_12217_obj+=jule::Str(":;\n", 3);
	_12217_obj+=(*((*this)._field_oc))._method_indent();
	_12217_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	(*((*this)._field_oc))._method_add_indent();
	_12217_obj+=(*((*this)._field_oc))._method_indent();
	if ((*(_11842_it))._field_key_a != nullptr) {
		if (_1db6263a2_OPT_COPY) {
			(*((*(_11842_it))._field_key_a))._field_reference=_1dc4e9dbd_is_iter_copy_optimizable((*(_11842_it))._field_expr,(*(_11842_it))._field_key_a);
		}
		_12217_obj+=(*((*this)._field_oc))._method_var_init_expr((*(_11842_it))._field_key_a,jule::Str("it->first", 9));
		_12217_obj+=jule::Str("\n", 1);
		_12217_obj+=(*((*this)._field_oc))._method_indent();
	}
	if ((*(_11842_it))._field_key_b != nullptr) {
		if (_1db6263a2_OPT_COPY) {
			(*((*(_11842_it))._field_key_b))._field_reference=_1dc4e9dbd_is_iter_copy_optimizable((*(_11842_it))._field_expr,(*(_11842_it))._field_key_b);
		}
		_12217_obj+=(*((*this)._field_oc))._method_var_init_expr((*(_11842_it))._field_key_b,jule::Str("it->second", 10));
		_12217_obj+=jule::Str("\n", 1);
		_12217_obj+=(*((*this)._field_oc))._method_indent();
	}
	_12217_obj+=(*this)._method_scope((*(_11842_it))._field_scope);
	_12217_obj+=jule::Str("\n", 1);
	_12217_obj+=(*((*this)._field_oc))._method_indent();
	_12217_obj+=_12013_next;
	_12217_obj+=jule::Str(":;\n", 3);
	_12217_obj+=(*((*this)._field_oc))._method_indent();
	_12217_obj+=jule::Str("++it;\n", 6);
	_12217_obj+=(*((*this)._field_oc))._method_indent();
	_12217_obj+=jule::Str("goto ", 5);
	_12217_obj+=_11913_begin;
	_12217_obj+=jule::Str(";\n", 2);
	(*((*this)._field_oc))._method_done_indent();
	_12217_obj+=(*((*this)._field_oc))._method_indent();
	_12217_obj+=jule::Str("}\n", 2);
	_12217_obj+=(*((*this)._field_oc))._method_indent();
	_12217_obj+=_1a670d28d_IdentCoder::_static_method_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11842_it)));
	_12217_obj+=jule::Str(":;\n", 3);
	(*((*this)._field_oc))._method_done_indent();
	_12217_obj+=(*((*this)._field_oc))._method_indent();
	_12217_obj+=jule::Str("}", 1);
	return _12217_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_if_case(jule::Ptr<_1de0e938e_If> _18630_i) {
	jule::Str _18717_obj = jule::Str();
	if ((*(_18630_i))._field_expr != jule::Any(nullptr)) {
		_18717_obj+=jule::Str("if (", 4);
		_18717_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*(_18630_i))._field_expr);
		_18717_obj+=jule::Str(") ", 2);
	}
	_18717_obj+=(*this)._method_scope((*(_18630_i))._field_scope);
	return _18717_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_conditional(jule::Ptr<_1de0e938e_Conditional> _19734_c) {
	jule::Str _19817_obj = jule::Str();
	{
		auto &expr = (*(_19734_c))._field_elifs;
		auto it = expr.begin();
		_iter_begin_1a93125dc:;
		if (it != expr.end()) {
			jule::Ptr<_1de0e938e_If> _1dc4e9dbd_elif = *it;
			{
				if (_1dc4e9dbd_elif == nullptr) {
					goto _iter_next_1a93125dc;
				}
				if (_19817_obj.len() != 0LL) {
					_19817_obj+=jule::Str(" else ", 6);
				}
				_19817_obj+=(*this)._method_if_case(_1dc4e9dbd_elif);
			}
			_iter_next_1a93125dc:;
			++it;
			goto _iter_begin_1a93125dc;
		}
		_iter_end_1a93125dc:;
	}
	if ((*(_19734_c))._field_default != nullptr) {
		if (_19817_obj.len() != 0LL) {
			_19817_obj+=jule::Str(" else ", 6);
		}
		_19817_obj+=(*this)._method_scope((*((*(_19734_c))._field_default))._field_scope);
	}
	return _19817_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_inf_iter(jule::Ptr<_1de0e938e_InfIter> _21731_it) {
	jule::Str _21817_obj = jule::Str("for (;;) {\n", 11);
	(*((*this)._field_oc))._method_add_indent();
	_21817_obj+=(*((*this)._field_oc))._method_indent();
	_21817_obj+=(*this)._method_scope((*(_21731_it))._field_scope);
	(*((*this)._field_oc))._method_done_indent();
	_21817_obj+=jule::Str("\n", 1);
	_21817_obj+=(*((*this)._field_oc))._method_indent();
	_21817_obj+=_1a670d28d_IdentCoder::_static_method_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_21731_it)));
	_21817_obj+=jule::Str(":;\n", 3);
	_21817_obj+=(*((*this)._field_oc))._method_indent();
	_21817_obj+=jule::Str("}\n", 2);
	_21817_obj+=(*((*this)._field_oc))._method_indent();
	_21817_obj+=_1a670d28d_IdentCoder::_static_method_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_21731_it)));
	_21817_obj+=jule::Str(":;", 2);
	return _21817_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_while_iter(jule::Ptr<_1de0e938e_WhileIter> _23833_it) {
	jule::Str _23917_obj = jule::Str();
	if (((*(_23833_it))._field_expr != jule::Any(nullptr)) && ((*(_23833_it))._field_next == jule::Any(nullptr))) {
		_23917_obj+=jule::Str("while (", 7);
		_23917_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*(_23833_it))._field_expr);
		_23917_obj+=jule::Str(") {\n", 4);
	} else {
		_23917_obj+=jule::Str("for (; ", 7);
		if ((*(_23833_it))._field_expr != jule::Any(nullptr)) {
			_23917_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*(_23833_it))._field_expr);
		}
		_23917_obj+=jule::Str("; ", 2);
		if ((*(_23833_it))._field_next != jule::Any(nullptr)) {
			jule::Str _25121_st = (*this)._method_st((*(_23833_it))._field_next);
			_23917_obj+=_25121_st.slice(0LL,_25121_st.len() - 1LL);
		}
		_23917_obj+=jule::Str(") {\n", 4);
	}
	(*((*this)._field_oc))._method_add_indent();
	_23917_obj+=(*((*this)._field_oc))._method_indent();
	_23917_obj+=(*this)._method_scope((*(_23833_it))._field_scope);
	_23917_obj+=jule::Str("\n", 1);
	(*((*this)._field_oc))._method_done_indent();
	_23917_obj+=(*((*this)._field_oc))._method_indent();
	_23917_obj+=_1a670d28d_IdentCoder::_static_method_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23833_it)));
	_23917_obj+=jule::Str(":;\n", 3);
	_23917_obj+=(*((*this)._field_oc))._method_indent();
	_23917_obj+=jule::Str("}\n", 2);
	_23917_obj+=(*((*this)._field_oc))._method_indent();
	_23917_obj+=_1a670d28d_IdentCoder::_static_method_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23833_it)));
	_23917_obj+=jule::Str(":;", 2);
	return _23917_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_range_iter(jule::Ptr<_1de0e938e_RangeIter> _27433_it) {
	{
		
		if ((*((*((*(_27433_it))._field_expr))._field_kind))._method_slc() != nullptr) {
			_case_begin_1a9323ad7:;
			{
				return (*this)._method_range_index_iter(_27433_it);
			}
		}
		else if ((*((*((*(_27433_it))._field_expr))._field_kind))._method_arr() != nullptr) {
			_case_begin_1a932406b:;
			{
				return (*this)._method_range_index_iter(_27433_it);
			}
		}
		else if ((*((*((*(_27433_it))._field_expr))._field_kind))._method_map() != nullptr) {
			_case_begin_1a932393e:;
			{
				return (*this)._method_range_hashmap_iter(_27433_it);
			}
		}
		else {
			_case_begin_1a93234bb:;
			{
				return (*this)._method_range_index_iter(_27433_it);
			}
		}
		_match_end_1a9323400:;
	}
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_cont(jule::Ptr<_1de0e938e_ContSt> _28719_c) {
	jule::Str _28817_obj = jule::Str("goto ", 5);
	_28817_obj+=_1a670d28d_IdentCoder::_static_method_iter_next((*(_28719_c))._field_it);
	_28817_obj+=jule::Str(";", 1);
	return _28817_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_label(jule::Ptr<_1de0e938e_Label> _29420_l) {
	return _1a670d28d_IdentCoder::_static_method_label((*(_29420_l))._field_ident) + jule::Str(":;", 2);
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_goto_st(jule::Ptr<_1de0e938e_GotoSt> _29822_gt) {
	jule::Str _29917_obj = jule::Str("goto ", 5);
	_29917_obj+=_1a670d28d_IdentCoder::_static_method_label((*(_29822_gt))._field_ident);
	_29917_obj+=jule::Str(";", 1);
	return _29917_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_postfix(jule::Ptr<_1de0e938e_Postfix> _30530_p) {
	jule::Str _30617_obj = jule::Str("(", 1);
	_30617_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*(_30530_p))._field_expr);
	_30617_obj+=jule::Str(")", 1);
	_30617_obj+=(*(_30530_p))._field_op;
	_30617_obj+=jule::Str(";", 1);
	return _30617_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_div_by_zero_assign(jule::Ptr<_1de0e938e_Assign> _31441_a) {
	jule::Str _31517_obj = (*((*((*this)._field_oc))._field_ec))._method_expr((*((*(_31441_a))._field_l))._field_model);
	_31517_obj+=jule::Str(" = ", 3);
	_31517_obj+=(*((*((*this)._field_oc))._field_ec))._method_div_by_zero_binary((*(_31441_a))._field_op,(*(_31441_a))._field_l,(*(_31441_a))._field_r);
	_31517_obj+=jule::Str(";", 1);
	return _31517_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_assign(jule::Ptr<_1de0e938e_Assign> _32229_a) {
	{
		auto &_match_expr{ (*(_32229_a))._field_op._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1a9330808:;
			{
				if ((*((*((*(_32229_a))._field_l))._field_kind))._method_strct() == nullptr) {
					return (*this)._method_div_by_zero_assign(_32229_a);
				}
			}
		}
		_match_end_1a933075e:;
	}
	jule::Str _33117_obj = (*((*((*this)._field_oc))._field_ec))._method_expr((*((*(_32229_a))._field_l))._field_model);
	_33117_obj+=(*(_32229_a))._field_op._field_kind;
	if (_1db6263a2_OPT_APPEND) {
		{
			auto &_match_expr{ (*((*(_32229_a))._field_r))._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinAppendCallExprModel>>()) {
				_case_begin_1a93333dd:;
				{
					jule::Ptr<_1ddb3c047_BuiltinAppendCallExprModel> _33625_model = (*((*(_32229_a))._field_r))._field_model.operator jule::Ptr<_1ddb3c047_BuiltinAppendCallExprModel>();
					jule::Str _33722_expr;
					jule::Bool _33728_optimized;
					std::tie(_33722_expr,_33728_optimized) = (*((*((*this)._field_oc))._field_ec))._method_append_call_assign((*((*(_32229_a))._field_l))._field_model,_33625_model);
					if (_33728_optimized) {
						return _33722_expr;
					}
					_33117_obj+=_33722_expr;
				}
			}
			else {
				_case_begin_1a9333003:;
				{
					_33117_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*((*(_32229_a))._field_r))._field_model);
				}
			}
			_match_end_1a9332e9d:;
		}
	} else {
		_33117_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*((*(_32229_a))._field_r))._field_model);
	}
	_33117_obj+=jule::Str(";", 1);
	return _33117_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_multi_assign(jule::Ptr<_1de0e938e_MultiAssign> _35335_a) {
	jule::Str _35417_obj = jule::Str("std::tie(", 9);
	{
		auto &expr = (*(_35335_a))._field_l;
		auto it = expr.begin();
		_iter_begin_1a9337a96:;
		if (it != expr.end()) {
			jule::Any _1dc4e9dbd_l = *it;
			{
				_35417_obj+=(((_1dc4e9dbd_l == jule::Any(nullptr))) ? (jule::Str("std::ignore", 11)) : ((*((*((*this)._field_oc))._field_ec))._method_expr(_1dc4e9dbd_l)));
				_35417_obj+=jule::Str(",", 1);
			}
			_iter_next_1a9337a96:;
			++it;
			goto _iter_begin_1a9337a96;
		}
		_iter_end_1a9337a96:;
	}
	_35417_obj=_35417_obj.slice(0LL,_35417_obj.len() - 1LL);
	_35417_obj+=jule::Str(") = ", 4);
	_35417_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*(_35335_a))._field_r);
	_35417_obj+=jule::Str(";", 1);
	return _35417_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_match_expr(jule::Ptr<_1de0e938e_Match>& _36834_m) {
	if ((!((*((*(_36834_m))._field_expr))._method_is_const()))) {
		return jule::Str("_match_expr", 11);
	}
	if ((!((*((*((*(_36834_m))._field_expr))._field_constant))._method_is_bool())) || (!((*((*((*(_36834_m))._field_expr))._field_constant))._method_read_bool()))) {
		return (*((*((*this)._field_oc))._field_ec))._method_model((*((*(_36834_m))._field_expr))._field_model);
	}
	return jule::Str();
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_case(jule::Ptr<_1de0e938e_Match> _37827_m,jule::Ptr<_1de0e938e_Case> _37842_c) {
	jule::Str _37917_obj = jule::Str();
	if (((*(_37842_c))._field_exprs.len() != 0LL) && (!((*(_37827_m))._method_is_generic_type_match()))) {
		if (((*(_37827_m))._field_cases.len() > 0LL) && ((*(_37827_m))._field_cases[0LL] == _37842_c)) {
			_37917_obj+=jule::Str("if (", 4);
		} else {
			_37917_obj+=jule::Str("else if (", 9);
		}
		{
			auto &expr = (*(_37842_c))._field_exprs;
			auto it = expr.begin();
			_iter_begin_1a9340a16:;
			if (it != expr.end()) {
				jule::Int _1dc4e9dbd_i = it - expr.begin();
				jule::Ptr<_1a94c333b_Data> _1dc4e9dbd_expr = *it;
				{
					{
						
						if ((!((*(_37827_m))._field_type_match))) {
							_case_begin_1a93416c6:;
							{
								jule::Str _39025_case_expr = (*this)._method_match_expr(_37827_m);
								if ((*((*(_37827_m))._field_expr))._method_good_operand(_1dc4e9dbd_expr)) {
									if (_39025_case_expr.len() != 0LL) {
										_37917_obj+=_39025_case_expr;
										_37917_obj+=jule::Str(" == ", 4);
									}
									_37917_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*(_1dc4e9dbd_expr))._field_model);
								} else {
									_37917_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*(_1dc4e9dbd_expr))._field_model);
									if (_39025_case_expr.len() != 0LL) {
										_37917_obj+=jule::Str(" == ", 4);
										_37917_obj+=_39025_case_expr;
									}
								}
							}
						}
						else {
							_case_begin_1a9341253:;
							{
								_37917_obj+=jule::Str("_match_expr", 11);
								_37917_obj+=jule::Str(".type_is<", 9);
								_37917_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*(_1dc4e9dbd_expr))._field_model);
								_37917_obj+=jule::Str(">()", 3);
							}
						}
						_match_end_1a9341187:;
					}
					if ((_1dc4e9dbd_i + 1LL) < static_cast<jule::Int>((*(_37842_c))._field_exprs.len())) {
						_37917_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_1a9340a16:;
				++it;
				_1dc4e9dbd_i++;
				goto _iter_begin_1a9340a16;
			}
			_iter_end_1a9340a16:;
		}
		_37917_obj+=jule::Str(") ", 2);
	} else if (((*(_37827_m))._field_default == _37842_c) && ((*(_37827_m))._field_cases.len() != 0LL)) {
		_37917_obj+=(*((*this)._field_oc))._method_indent();
		_37917_obj+=jule::Str("else ", 5);
	}
	(*((*this)._field_oc))._method_add_indent();
	_37917_obj+=jule::Str("{\n", 2);
	_37917_obj+=(*((*this)._field_oc))._method_indent();
	_37917_obj+=_1a670d28d_IdentCoder::_static_method_case_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37842_c)));
	_37917_obj+=jule::Str(":;\n", 3);
	if ((*((*(_37842_c))._field_scope))._field_stmts.len() > 0LL) {
		_37917_obj+=(*((*this)._field_oc))._method_indent();
		_37917_obj+=(*this)._method_scope((*(_37842_c))._field_scope);
		_37917_obj+=jule::Str("\n", 1);
	}
	(*((*this)._field_oc))._method_done_indent();
	_37917_obj+=(*((*this)._field_oc))._method_indent();
	_37917_obj+=jule::Str("}", 1);
	return _37917_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_match_st(jule::Ptr<_1de0e938e_Match> _44031_m) {
	if (((*(_44031_m))._field_cases.len() == 0LL) && ((*(_44031_m))._field_default == nullptr)) {
		return jule::Str();
	}
	jule::Bool _44513_generic_type_match = (*(_44031_m))._method_is_generic_type_match();
	if (_44513_generic_type_match && (((*(_44031_m))._field_default == nullptr) || ((*((*((*(_44031_m))._field_default))._field_scope))._field_stmts.len() == 0LL))) {
		return jule::Str();
	}
	jule::Str _45017_obj = jule::Str("{\n", 2);
	(*((*this)._field_oc))._method_add_indent();
	_45017_obj+=(*((*this)._field_oc))._method_indent();
	if ((!(_44513_generic_type_match)) && (!((*((*(_44031_m))._field_expr))._method_is_const()))) {
		if ((*((*(_44031_m))._field_expr))._field_lvalue && _1db6263a2_OPT_COPY) {
			_45017_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_45017_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_45017_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*((*(_44031_m))._field_expr))._field_model);
		_45017_obj+=jule::Str(" };\n", 4);
		_45017_obj+=(*((*this)._field_oc))._method_indent();
	}
	if ((*(_44031_m))._field_cases.len() > 0LL) {
		{
			auto &expr = (*(_44031_m))._field_cases;
			auto it = expr.begin();
			_iter_begin_1a935260a:;
			if (it != expr.end()) {
				jule::Ptr<_1de0e938e_Case> _1dc4e9dbd_c = *it;
				{
					if (_1dc4e9dbd_c == nullptr) {
						goto _iter_next_1a935260a;
					}
					_45017_obj+=jule::Str("\n", 1);
					_45017_obj+=(*((*this)._field_oc))._method_indent();
					_45017_obj+=(*this)._method_case(_44031_m,_1dc4e9dbd_c);
				}
				_iter_next_1a935260a:;
				++it;
				goto _iter_begin_1a935260a;
			}
			_iter_end_1a935260a:;
		}
	}
	if ((*(_44031_m))._field_default != nullptr) {
		_45017_obj+=jule::Str("\n", 1);
		_45017_obj+=(*this)._method_case(_44031_m,(*(_44031_m))._field_default);
	}
	_45017_obj+=jule::Str("\n", 1);
	_45017_obj+=(*((*this)._field_oc))._method_indent();
	_45017_obj+=_1a670d28d_IdentCoder::_static_method_match_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44031_m)));
	_45017_obj+=jule::Str(":;", 2);
	_45017_obj+=jule::Str("\n", 1);
	(*((*this)._field_oc))._method_done_indent();
	_45017_obj+=(*((*this)._field_oc))._method_indent();
	_45017_obj+=jule::Str("}", 1);
	return _45017_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_fall_st(jule::Ptr<_1de0e938e_FallSt> _49822_f) {
	jule::Str _49917_obj = jule::Str("goto ", 5);
	_49917_obj+=_1a670d28d_IdentCoder::_static_method_case_begin((*(_49822_f))._field_dest_case);
	_49917_obj+=jule::Str(";", 1);
	return _49917_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_break_st(jule::Ptr<_1de0e938e_BreakSt> _50523_b) {
	jule::Str _50617_obj = jule::Str("goto ", 5);
	if ((*(_50523_b))._field_it != 0LLU) {
		_50617_obj+=_1a670d28d_IdentCoder::_static_method_iter_end((*(_50523_b))._field_it);
	} else {
		_50617_obj+=_1a670d28d_IdentCoder::_static_method_match_end((*(_50523_b))._field_mtch);
	}
	_50617_obj+=jule::Str(";", 1);
	return _50617_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_ret_with_vars(jule::Ptr<_1de0e938e_RetSt> _51636_r) {
	jule::Str _51717_obj = jule::Str();
	{
		auto &expr = (*(_51636_r))._field_vars;
		auto it = expr.begin();
		_iter_begin_1a935abb8:;
		if (it != expr.end()) {
			jule::Ptr<_1c3c3d174_Var> _1dc4e9dbd_v = *it;
			{
				if (_1dd05db0c_is_ignore_ident((*(_1dc4e9dbd_v))._field_ident)) {
					_51717_obj+=(*((*((*this)._field_oc))._field_ec))._method_init_expr((*((*(_1dc4e9dbd_v))._field_kind))._field_kind);
				} else {
					_51717_obj+=_1a670d28d_IdentCoder::_static_method_var(_1dc4e9dbd_v);
				}
				_51717_obj+=jule::Str(",", 1);
			}
			_iter_next_1a935abb8:;
			++it;
			goto _iter_begin_1a935abb8;
		}
		_iter_end_1a935abb8:;
	}
	_51717_obj=_51717_obj.slice(0LL,_51717_obj.len() - 1LL);
	jule::Str _52917_oobj = jule::Str("return ", 7);
	if ((*((*((*(_51636_r))._field_func))._field_decl))._field_exceptional) {
		_52917_oobj+=jule::Str("jule::Exceptional<", 18);
		_52917_oobj+=_1a696bb06_TypeCoder::_static_method_kind((*((*(_51636_r))._field_func))._field_result);
		_52917_oobj+=jule::Str(">(jule::Any(), ", 15);
	}
	if ((*(_51636_r))._field_vars.len() > 1LL) {
		_52917_oobj+=jule::Str("std::make_tuple(", 16);
		_52917_oobj+=_51717_obj;
		_52917_oobj+=jule::Str(")", 1);
	} else {
		_52917_oobj+=_51717_obj;
	}
	if ((*((*((*(_51636_r))._field_func))._field_decl))._field_exceptional) {
		_52917_oobj+=jule::Str(")", 1);
	}
	_52917_oobj+=jule::Str(";", 1);
	return _52917_oobj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_ret_tuple(jule::Ptr<_1de0e938e_RetSt> _55332_r) {
	jule::Slice<jule::Ptr<_1a94c333b_Data>> _55417_datas = (*((*(_55332_r))._field_expr.operator jule::Ptr<_1ddb3c047_TupleExprModel>()))._field_datas;
	jule::Str _55517_obj = jule::Str();
	{
		auto &expr = (*(_55332_r))._field_vars;
		auto it = expr.begin();
		_iter_begin_1a9362bd1:;
		if (it != expr.end()) {
			jule::Int _1dc4e9dbd_i = it - expr.begin();
			jule::Ptr<_1c3c3d174_Var> _1dc4e9dbd_v = *it;
			{
				if (_1dd05db0c_is_ignore_ident((*(_1dc4e9dbd_v))._field_ident)) {
					goto _iter_next_1a9362bd1;
				}
				jule::Any _56121_model = (*(_55417_datas[_1dc4e9dbd_i]))._field_model;
				if (_56121_model == jule::Any(_1dc4e9dbd_v)) {
					goto _iter_next_1a9362bd1;
				}
				jule::Str _56617_ident = _1a670d28d_IdentCoder::_static_method_var(_1dc4e9dbd_v);
				_55517_obj+=_56617_ident;
				_55517_obj+=jule::Str(" = ", 3);
				_55517_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr(_56121_model);
				_55517_obj+=jule::Str(";\n", 2);
				_55517_obj+=(*((*this)._field_oc))._method_indent();
			}
			_iter_next_1a9362bd1:;
			++it;
			_1dc4e9dbd_i++;
			goto _iter_begin_1a9362bd1;
		}
		_iter_end_1a9362bd1:;
	}
	jule::Str _57417_oobj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _55417_datas;
		auto it = expr.begin();
		_iter_begin_1a9361d12:;
		if (it != expr.end()) {
			jule::Int _1dc4e9dbd_i = it - expr.begin();
			jule::Ptr<_1a94c333b_Data> _1dc4e9dbd_d = *it;
			{
				jule::Ptr<_1c3c3d174_Var> _57621_v = (*(_55332_r))._field_vars[_1dc4e9dbd_i];
				if (_1dd05db0c_is_ignore_ident((*(_57621_v))._field_ident)) {
					_57417_oobj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*(_1dc4e9dbd_d))._field_model);
				} else {
					_57417_oobj+=_1a670d28d_IdentCoder::_static_method_var(_57621_v);
				}
				_57417_oobj+=jule::Str(",", 1);
			}
			_iter_next_1a9361d12:;
			++it;
			_1dc4e9dbd_i++;
			goto _iter_begin_1a9361d12;
		}
		_iter_end_1a9361d12:;
	}
	_57417_oobj=_57417_oobj.slice(0LL,_57417_oobj.len() - 1LL);
	_57417_oobj+=jule::Str(")", 1);
	if ((*((*((*(_55332_r))._field_func))._field_decl))._field_exceptional) {
		_55517_obj+=jule::Str("return jule::Exceptional<", 25);
		_55517_obj+=_1a696bb06_TypeCoder::_static_method_kind((*((*(_55332_r))._field_func))._field_result);
		_55517_obj+=jule::Str(">(jule::Any(),", 14);
		_55517_obj+=_57417_oobj;
		_55517_obj+=jule::Str(")", 1);
	} else {
		_55517_obj+=jule::Str("return ", 7);
		_55517_obj+=_57417_oobj;
	}
	_55517_obj+=jule::Str(";", 1);
	return _55517_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_ret_with_exprs(jule::Ptr<_1de0e938e_RetSt> _60337_r) {
	if ((*(_60337_r))._field_vars.len() > 1LL) {
		return (*this)._method_ret_tuple(_60337_r);
	}
	if ((*(_60337_r))._field_vars.len() > 0LL) {
		jule::Ptr<_1c3c3d174_Var> _61021_v = (*(_60337_r))._field_vars[0LL];
		if ((!(_1dd05db0c_is_ignore_ident((*(_61021_v))._field_ident))) && ((*(_60337_r))._field_expr != jule::Any(_61021_v))) {
			jule::Str _61221_ident = _1a670d28d_IdentCoder::_static_method_var(_61021_v);
			jule::Str _61325_obj = _61221_ident;
			_61325_obj+=jule::Str(" = ", 3);
			_61325_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*(_60337_r))._field_expr);
			_61325_obj+=jule::Str(";\n", 2);
			_61325_obj+=(*((*this)._field_oc))._method_indent();
			if ((*((*((*(_60337_r))._field_func))._field_decl))._field_exceptional) {
				_61325_obj+=jule::Str("return jule::Exceptional<", 25);
				_61325_obj+=_1a696bb06_TypeCoder::_static_method_kind((*((*(_60337_r))._field_func))._field_result);
				_61325_obj+=jule::Str(">(jule::Any(),", 14);
				_61325_obj+=_61221_ident;
				_61325_obj+=jule::Str(")", 1);
			} else {
				_61325_obj+=jule::Str("return ", 7);
				_61325_obj+=_61221_ident;
			}
			_61325_obj+=jule::Str(";", 1);
			return _61325_obj;
		}
	}
	if ((*((*((*(_60337_r))._field_func))._field_decl))._field_exceptional) {
		jule::Str _63421_obj = jule::Str("return jule::Exceptional<", 25);
		_63421_obj+=_1a696bb06_TypeCoder::_static_method_kind((*((*(_60337_r))._field_func))._field_result);
		_63421_obj+=jule::Str(">(jule::Any(),", 14);
		_63421_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*(_60337_r))._field_expr);
		_63421_obj+=jule::Str(")", 1);
		_63421_obj+=jule::Str(";", 1);
		return _63421_obj;
	}
	jule::Str _64317_obj = jule::Str("return ", 7);
	_64317_obj+=(*((*((*this)._field_oc))._field_ec))._method_expr((*(_60337_r))._field_expr);
	_64317_obj+=jule::Str(";", 1);
	return _64317_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_ret_st(jule::Ptr<_1de0e938e_RetSt> _64929_r) {
	if (((*(_64929_r))._field_expr == jule::Any(nullptr)) && ((*(_64929_r))._field_vars.len() == 0LL)) {
		if ((*((*((*(_64929_r))._field_func))._field_decl))._field_exceptional) {
			return jule::Str("return jule::VoidExceptional();", 31);
		}
		return jule::Str("return;", 7);
	}
	if ((*(_64929_r))._field_expr == jule::Any(nullptr)) {
		return (*this)._method_ret_with_vars(_64929_r);
	}
	return (*this)._method_ret_with_exprs(_64929_r);
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_ret_with_defaults(jule::Ptr<_1a5e40a26_TypeKind> _66440_result) {
	jule::Str _66517_obj = jule::Str("return ", 7);
	if ((*(_66440_result))._method_tup() != nullptr) {
		_66517_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto &expr = (*((*(_66440_result))._method_tup()))._field_types;
			auto it = expr.begin();
			_iter_begin_1a9378d4b:;
			if (it != expr.end()) {
				jule::Ptr<_1a5e40a26_TypeKind> _1dc4e9dbd_t = *it;
				{
					_66517_obj+=(*((*((*this)._field_oc))._field_ec))._method_init_expr(_1dc4e9dbd_t);
					_66517_obj+=jule::Str(",", 1);
				}
				_iter_next_1a9378d4b:;
				++it;
				goto _iter_begin_1a9378d4b;
			}
			_iter_end_1a9378d4b:;
		}
		_66517_obj=_66517_obj.slice(0LL,_66517_obj.len() - 1LL);
		_66517_obj+=jule::Str(")", 1);
	} else {
		_66517_obj+=(*((*((*this)._field_oc))._field_ec))._method_init_expr(_66440_result);
	}
	_66517_obj+=jule::Str(";", 1);
	return _66517_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_var(jule::Ptr<_1c3c3d174_Var> _68126_v) {
	if ((*(_68126_v))._field_constant) {
		return jule::Str();
	}
	return (*((*this)._field_oc))._method_var(_68126_v);
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_st(jule::Any _68925_st) {
	if (_68925_st == jule::Any(nullptr)) {
		return jule::Str();
	}
	{
		auto &_match_expr{ _68925_st };
		
		if (_match_expr.type_is<jule::Ptr<_1de0e938e_Scope>>()) {
			_case_begin_1a937d1b3:;
			{
				return (*this)._method_scope(_68925_st.operator jule::Ptr<_1de0e938e_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
			_case_begin_1a937d735:;
			{
				return (*this)._method_var(_68925_st.operator jule::Ptr<_1c3c3d174_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a94c333b_Data>>()) {
			_case_begin_1a937d79b:;
			{
				return (*((*((*this)._field_oc))._field_ec))._method_expr(jule::Any(_68925_st.operator jule::Ptr<_1a94c333b_Data>())) + jule::Str(";", 1);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Conditional>>()) {
			_case_begin_1a937d614:;
			{
				return (*this)._method_conditional(_68925_st.operator jule::Ptr<_1de0e938e_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_InfIter>>()) {
			_case_begin_1a937d68b:;
			{
				return (*this)._method_inf_iter(_68925_st.operator jule::Ptr<_1de0e938e_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_WhileIter>>()) {
			_case_begin_1a937d427:;
			{
				return (*this)._method_while_iter(_68925_st.operator jule::Ptr<_1de0e938e_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_RangeIter>>()) {
			_case_begin_1a937d48d:;
			{
				return (*this)._method_range_iter(_68925_st.operator jule::Ptr<_1de0e938e_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_ContSt>>()) {
			_case_begin_1a937d515:;
			{
				return (*this)._method_cont(_68925_st.operator jule::Ptr<_1de0e938e_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Label>>()) {
			_case_begin_1a937d58c:;
			{
				return (*this)._method_label(_68925_st.operator jule::Ptr<_1de0e938e_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_GotoSt>>()) {
			_case_begin_1a937d9bb:;
			{
				return (*this)._method_goto_st(_68925_st.operator jule::Ptr<_1de0e938e_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Postfix>>()) {
			_case_begin_1a937da43:;
			{
				return (*this)._method_postfix(_68925_st.operator jule::Ptr<_1de0e938e_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Assign>>()) {
			_case_begin_1a937daba:;
			{
				return (*this)._method_assign(_68925_st.operator jule::Ptr<_1de0e938e_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_MultiAssign>>()) {
			_case_begin_1a937db42:;
			{
				return (*this)._method_multi_assign(_68925_st.operator jule::Ptr<_1de0e938e_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Match>>()) {
			_case_begin_1a937dbb9:;
			{
				return (*this)._method_match_st(_68925_st.operator jule::Ptr<_1de0e938e_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_FallSt>>()) {
			_case_begin_1a937dc41:;
			{
				return (*this)._method_fall_st(_68925_st.operator jule::Ptr<_1de0e938e_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_BreakSt>>()) {
			_case_begin_1a937dcb8:;
			{
				return (*this)._method_break_st(_68925_st.operator jule::Ptr<_1de0e938e_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_RetSt>>()) {
			_case_begin_1a937dd40:;
			{
				return (*this)._method_ret_st(_68925_st.operator jule::Ptr<_1de0e938e_RetSt>());
			}
		}
		else {
			_case_begin_1a937d0e7:;
			{
				return jule::Str("<unimplemented_stmt>", 20);
			}
		}
		_match_end_1a937d2e5:;
	}
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_scope(jule::Ptr<_1de0e938e_Scope> _73428_s) {
	jule::Str _73517_obj = jule::Str("{\n", 2);
	(*((*this)._field_oc))._method_add_indent();
	{
		auto &expr = (*(_73428_s))._field_stmts;
		auto it = expr.begin();
		_iter_begin_1a9388b19:;
		if (it != expr.end()) {
			jule::Any _1dc4e9dbd_st = *it;
			{
				_73517_obj+=(*((*this)._field_oc))._method_indent();
				_73517_obj+=(*this)._method_st(_1dc4e9dbd_st);
				_73517_obj+=jule::Str("\n", 1);
			}
			_iter_next_1a9388b19:;
			++it;
			goto _iter_begin_1a9388b19;
		}
		_iter_end_1a9388b19:;
	}
	(*((*this)._field_oc))._method_done_indent();
	_73517_obj+=(*((*this)._field_oc))._method_indent();
	_73517_obj+=jule::Str("}", 1);
	if ((*(_73428_s))._field_deferred) {
		_73517_obj=(jule::Str("__JULE_DEFER(", 13) + _73517_obj) + jule::Str(");", 2);
	}
	return _73517_obj;
}



inline jule::Str _1dc4e9dbd_ScopeCoder::_method_func_scope(jule::Ptr<_1dded9702_FnIns> _75633_f) {
	jule::Str _75717_obj = (*this)._method_scope((*(_75633_f))._field_scope);
	if ((*((*(_75633_f))._field_decl))._field_exceptional && (*((*(_75633_f))._field_decl))._method_is_void()) {
		_75717_obj=_75717_obj.slice(0LL,_75717_obj.len() - 2LL) + jule::Str(" return jule::VoidExceptional(); }", 34);
	}
	return _75717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4e9dbd_ScopeCoder &_Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dcb0cd1b_ExprCoder> _1dcb0cd1b_ExprCoder::_static_method_new(jule::Ptr<_1a686ecd4_ObjectCoder>& _8424_oc) {
	return jule::new_struct<_1dcb0cd1b_ExprCoder>(new( std::nothrow ) _1dcb0cd1b_ExprCoder(_8424_oc));
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_string(jule::Ptr<_1a64669ca_Const>& _9022_c) {
	jule::Str _9113_content = (*(_9022_c))._method_read_str();
	if (_9113_content.len() == 0LL) {
		return jule::Str("jule::Str()", 11);
	}
	jule::Slice<jule::U8> _9513_bytes = static_cast<jule::Slice<jule::U8>>(_9113_content);
	jule::Str _9613_len = _1dd4c1635_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_9513_bytes.len())),10LL);
	jule::Str _9713_lit = _1dcb0cd1b_cstr_lit(_9513_bytes);
	return (((jule::Str("jule::Str(", 10) + _9713_lit) + jule::Str(", ", 2)) + _9613_len) + jule::Str(")", 1);
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_boolean(jule::Ptr<_1a64669ca_Const>& _10123_c) {
	return (((*(_10123_c))._method_read_bool()) ? (jule::Str("true", 4)) : (jule::Str("false", 5)));
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_nil_lit(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_ftoa_special_cases(jule::F64& _10934_x) {
	{
		
		if (_1dd56d308_is_nan(_10934_x)) {
			_case_begin_1a9393e10:;
			{
				return jule::Str("NAN", 3);
			}
		}
		else if (_1dd56d308_is_inf(_10934_x,1LL)) {
			_case_begin_1a9393eed:;
			{
				return jule::Str("INFINITY", 8);
			}
		}
		else if (_1dd56d308_is_inf(_10934_x,-1LL)) {
			_case_begin_1a9394064:;
			{
				return jule::Str("-INFINITY", 9);
			}
		}
		else {
			_case_begin_1a93937a0:;
			{
				return jule::Str();
			}
		}
		_match_end_1a93936d4:;
	}
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_float32(jule::Ptr<_1a64669ca_Const>& _12223_c) {
	jule::F64 _12313_x = (*(_12223_c))._method_as_f64();
	jule::Str _12613_f = (*this)._method_ftoa_special_cases(_12313_x);
	if (_12613_f != jule::Str()) {
		return _12613_f;
	}
	{
		
		if (_12313_x == 340282346638528860000000000000000000000.0) {
			_case_begin_1a9507716:;
			{
				return jule::Str("jule::MAX_F32", 13);
			}
		}
		else if (_12313_x == -340282346638528860000000000000000000000.0) {
			_case_begin_1a9396132:;
			{
				return jule::Str("jule::MIN_F32", 13);
			}
		}
		else {
			_case_begin_1a9396594:;
			{
				return _1dcb0cd1b_ftoa(_12313_x,32LL) + jule::Str("f", 1);
			}
		}
		_match_end_1a939653e:;
	}
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_float64(jule::Ptr<_1a64669ca_Const>& _14123_c) {
	jule::F64 _14213_x = (*(_14123_c))._method_as_f64();
	jule::Str _14513_f = (*this)._method_ftoa_special_cases(_14213_x);
	if (_14513_f != jule::Str()) {
		return _14513_f;
	}
	{
		
		if (_14213_x == jule::MAX_F64) {
			_case_begin_1a950a7a2:;
			{
				return jule::Str("jule::MAX_F64", 13);
			}
		}
		else if (_14213_x == jule::MIN_F64) {
			_case_begin_1a950a9a0:;
			{
				return jule::Str("jule::MIN_F64", 13);
			}
		}
		else {
			_case_begin_1a9509dde:;
			{
				return _1dcb0cd1b_ftoa(_14213_x,64LL);
			}
		}
		_match_end_1a9509d89:;
	}
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_constant(jule::Ptr<_1a64669ca_Const> _16127_c,jule::Bool _16138_fx32) {
	{
		
		if ((*(_16127_c))._method_is_str()) {
			_case_begin_1a950c111:;
			{
				return (*this)._method_string(_16127_c);
			}
		}
		else if ((*(_16127_c))._method_is_bool()) {
			_case_begin_1a950c177:;
			{
				return (*this)._method_boolean(_16127_c);
			}
		}
		else if ((*(_16127_c))._method_is_f64()) {
			_case_begin_1a950c1dd:;
			{
				{
					
					if (_16138_fx32) {
						_case_begin_1a950e487:;
						{
							return (*this)._method_float32(_16127_c);
						}
					}
					else {
						_case_begin_1a950dd6b:;
						{
							return (*this)._method_float64(_16127_c);
						}
					}
					_match_end_1a950dca0:;
				}
			}
		}
		else if ((*(_16127_c))._method_is_i64()) {
			_case_begin_1a950c254:;
			{
				return _1dcb0cd1b_itoa(static_cast<jule::I64>((*(_16127_c))._method_read_i64()));
			}
		}
		else if ((*(_16127_c))._method_is_u64()) {
			_case_begin_1a950c430:;
			{
				return _1dcb0cd1b_utoa(static_cast<jule::U64>((*(_16127_c))._method_read_u64()));
			}
		}
		else if ((*(_16127_c))._method_is_nil()) {
			_case_begin_1a950c496:;
			{
				return (*this)._method_nil_lit();
			}
		}
		else {
			_case_begin_1a950beac:;
			{
				return jule::Str("<unimplemented_constant_expression>", 35);
			}
		}
		_match_end_1a950be13:;
	}
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_div_by_zero_binary(_1dd05db0c_Token& _18538_op,jule::Ptr<_1ddb3c047_OperandExprModel>& _18554_l,jule::Ptr<_1ddb3c047_OperandExprModel>& _18581_r) {
	jule::Bool _18617_opt = false;
	if (_1db6263a2_OPT_MATH) {
		{
			auto &_match_expr{ (*(_18581_r))._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1a64669ca_Const>>()) {
				_case_begin_1a9512556:;
				{
					_18617_opt=true;
				}
			}
			_match_end_1a95124bd:;
		}
	}
	jule::Str _19417_op_func = jule::Str();
	{
		auto &_match_expr{ _18538_op._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1a951206c:;
			{
				_19417_op_func=((_18617_opt) ? (jule::Str("/", 1)) : (jule::Str("div", 3)));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1a95120d3:;
			{
				_19417_op_func=((_18617_opt) ? (jule::Str("%", 1)) : (jule::Str("mod", 3)));
			}
		}
		_match_end_1a9512017:;
	}
	jule::Str _20417_obj = jule::Str();
	if (_18617_opt) {
		_20417_obj=jule::Str("(", 1);
		_20417_obj+=(*this)._method_expr((*(_18554_l))._field_model);
		{
			auto &_match_expr{ _18538_op._field_kind };
			
			if (_match_expr == jule::Str("/", 1)) {
				_case_begin_1a9515328:;
				{
					jule::Bool _21022_ok;
					jule::U64 _21026_x;
					std::tie(_21022_ok,_21026_x) = _1dcb0cd1b_check_for_bit_shift_opt(_18554_l,_18581_r);
					if (_21022_ok) {
						_20417_obj+=jule::Str(" >> ", 4);
						_20417_obj+=_1dcb0cd1b_utoa(_21026_x);
						goto _match_end_1a9514e3d;
					}
					goto _case_begin_1a9514e93;
				}
			}
			else {
				_case_begin_1a9514e93:;
				{
					_20417_obj+=jule::Str(" ", 1);
					_20417_obj+=_19417_op_func;
					_20417_obj+=jule::Str(" ", 1);
					_20417_obj+=(*this)._method_expr((*(_18581_r))._field_model);
				}
			}
			_match_end_1a9514e3d:;
		}
		_20417_obj+=jule::Str(")", 1);
	} else {
		_20417_obj=jule::Str("jule::", 6);
		_20417_obj+=_19417_op_func;
		_20417_obj+=jule::Str("(", 1);
		if ((!(_1db6263a2_PRODUCTION))) {
			_20417_obj+=jule::Str("\"", 1);
			_20417_obj+=(*((*this)._field_oc))._method_loc_info(_18538_op);
			_20417_obj+=jule::Str("\",", 2);
		}
		_20417_obj+=(*this)._method_expr((*(_18554_l))._field_model);
		_20417_obj+=jule::Str(",", 1);
		_20417_obj+=(*this)._method_expr((*(_18581_r))._field_model);
		_20417_obj+=jule::Str(")", 1);
	}
	return _20417_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_binary(jule::Ptr<_1ddb3c047_BinopExprModel> _24129_m) {
	{
		auto &_match_expr{ (*(_24129_m))._field_op._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1a951a52b:;
			{
				if ((*((*((*(_24129_m))._field_left))._field_kind))._method_strct() == nullptr) {
					return (*this)._method_div_by_zero_binary((*(_24129_m))._field_op,(*(_24129_m))._field_left,(*(_24129_m))._field_right);
				}
			}
		}
		_match_end_1a951a482:;
	}
	jule::Str _25017_obj = jule::Str("(", 1);
	if (_1db6263a2_OPT_MATH) {
		{
			auto &_match_expr{ (*(_24129_m))._field_op._field_kind };
			
			if (_match_expr == jule::Str("*", 1)) {
				_case_begin_1a951c693:;
				{
					jule::Bool _25422_ok;
					jule::U64 _25426_x;
					std::tie(_25422_ok,_25426_x) = _1dcb0cd1b_check_for_bit_shift_opt((*(_24129_m))._field_left,(*(_24129_m))._field_right);
					if ((!(_25422_ok))) {
						goto _match_end_1a951c62c;
					}
					_25017_obj+=(*this)._method_model((*((*(_24129_m))._field_left))._field_model);
					_25017_obj+=jule::Str(" << ", 4);
					_25017_obj+=_1dcb0cd1b_utoa(_25426_x);
					_25017_obj+=jule::Str(")", 1);
					return _25017_obj;
				}
			}
			_match_end_1a951c62c:;
		}
	}
	_25017_obj+=(*this)._method_model((*((*(_24129_m))._field_left))._field_model);
	_25017_obj+=jule::Str(" ", 1);
	_25017_obj+=(*(_24129_m))._field_op._field_kind;
	_25017_obj+=jule::Str(" ", 1);
	_25017_obj+=(*this)._method_model((*((*(_24129_m))._field_right))._field_model);
	_25017_obj+=jule::Str(")", 1);
	return _25017_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_var(jule::Ptr<_1c3c3d174_Var> _27522_m) {
	if ((*(_27522_m))._field_cpp_linked) {
		jule::Ptr<_1dd05c765_Directive> _27717_d = _1a696bb06_find_directive((*(_27522_m))._field_directives,jule::Str("namespace", 9));
		if (_27717_d != nullptr) {
			jule::Str _27925_obj = _1dcb0cd1b_concat_all_parts((*(_27717_d))._field_args);
			_27925_obj+=jule::Str("::", 2);
			_27925_obj+=_1a670d28d_IdentCoder::_static_method_var(_27522_m);
			return _27925_obj;
		}
	}
	return _1a670d28d_IdentCoder::_static_method_var(_27522_m);
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_structure(jule::Ptr<_1dd0be530_Struct> _28824_m) {
	return _1a696bb06_TypeCoder::_static_method_structure(_28824_m);
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_structure_ins(jule::Ptr<_1dd0be530_StructIns> _29232_m) {
	return _1a696bb06_TypeCoder::_static_method_structure_ins(_29232_m);
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_unary(jule::Ptr<_1ddb3c047_UnaryExprModel> _29628_m) {
	if (_1db6263a2_OPT_PTR && ((*(_29628_m))._field_op._field_kind == jule::Str("*", 1))) {
		{
			auto &_match_expr{ (*((*(_29628_m))._field_expr))._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1ddb3c047_UnaryExprModel>>()) {
				_case_begin_1a9526207:;
				{
					jule::Ptr<_1ddb3c047_UnaryExprModel> _30025_um = (*((*(_29628_m))._field_expr))._field_model.operator jule::Ptr<_1ddb3c047_UnaryExprModel>();
					if ((*(_30025_um))._field_op._field_kind == jule::Str("&", 1)) {
						return (*this)._method_model((*((*(_30025_um))._field_expr))._field_model);
					}
				}
			}
			_match_end_1a9526191:;
		}
	}
	{
		auto &_match_expr{ (*(_29628_m))._field_op._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a9527846:;
			{
				jule::Str _30921_obj = jule::Str("(~(", 3);
				_30921_obj+=(*this)._method_expr((*((*(_29628_m))._field_expr))._field_model);
				_30921_obj+=jule::Str("))", 2);
				return _30921_obj;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a9527ea6:;
			{
				if (_1db6263a2_PRODUCTION || ((*((*((*(_29628_m))._field_expr))._field_kind))._method_sptr() == nullptr)) {
					goto _match_end_1a9525b85;
				}
				jule::Str _31721_obj = (*this)._method_expr((*((*(_29628_m))._field_expr))._field_model);
				_31721_obj+=jule::Str(".get(\"", 6);
				_31721_obj+=(*((*this)._field_oc))._method_loc_info((*(_29628_m))._field_op);
				_31721_obj+=jule::Str("\")", 2);
				return _31721_obj;
			}
		}
		_match_end_1a9525b85:;
	}
	jule::Str _32417_obj = jule::Str("(", 1);
	_32417_obj+=(*(_29628_m))._field_op._field_kind;
	_32417_obj+=jule::Str("(", 1);
	_32417_obj+=(*this)._method_expr((*((*(_29628_m))._field_expr))._field_model);
	_32417_obj+=jule::Str("))", 2);
	return _32417_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_cpp_structure_lit(jule::Ptr<_1ddb3c047_StructLitExprModel> _33240_m) {
	jule::Str _33317_obj = jule::Str("(", 1) + _1a696bb06_TypeCoder::_static_method_structure_ins((*(_33240_m))._field_strct);
	_33317_obj+=jule::Str("){", 2);
	if ((*(_33240_m))._field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &expr = (*((*(_33240_m))._field_strct))._field_fields;
			auto it = expr.begin();
			_iter_begin_1a952e540:;
			if (it != expr.end()) {
				jule::Ptr<_1dd0be530_FieldIns> _1dcb0cd1b_f = *it;
				{
					if ((*((*((*(_33240_m))._field_strct))._field_decl))._field_cpp_linked) {
						{
							auto &expr = (*(_33240_m))._field_args;
							auto it = expr.begin();
							_iter_begin_1a9530200:;
							if (it != expr.end()) {
								jule::Ptr<_1ddb3c047_StructArgExprModel> _1dcb0cd1b_arg = *it;
								{
									if ((*(_1dcb0cd1b_arg))._field_field == _1dcb0cd1b_f) {
										_33317_obj+=jule::Str(".", 1);
										_33317_obj+=_1a670d28d_IdentCoder::_static_method_field((*(_1dcb0cd1b_f))._field_decl);
										_33317_obj+=jule::Str("=", 1);
										_33317_obj+=(*this)._method_expr((*(_1dcb0cd1b_arg))._field_expr);
										_33317_obj+=jule::Str(",", 1);
										goto _iter_next_1a952e540;
									}
								}
								_iter_next_1a9530200:;
								++it;
								goto _iter_begin_1a9530200;
							}
							_iter_end_1a9530200:;
						}
						goto _iter_next_1a952e540;
					}
					_33317_obj+=_1a670d28d_IdentCoder::_static_method_field((*(_1dcb0cd1b_f))._field_decl);
					_33317_obj+=jule::Str(": ", 2);
					{
						auto &expr = (*(_33240_m))._field_args;
						auto it = expr.begin();
						_iter_begin_1a9532b70:;
						if (it != expr.end()) {
							jule::Ptr<_1ddb3c047_StructArgExprModel> _1dcb0cd1b_arg = *it;
							{
								if ((*(_1dcb0cd1b_arg))._field_field == _1dcb0cd1b_f) {
									_33317_obj+=(*this)._method_expr((*(_1dcb0cd1b_arg))._field_expr);
									_33317_obj+=jule::Str(",", 1);
									goto _iter_next_1a952e540;
								}
							}
							_iter_next_1a9532b70:;
							++it;
							goto _iter_begin_1a9532b70;
						}
						_iter_end_1a9532b70:;
					}
					_33317_obj+=(*this)._method_init_expr((*(_1dcb0cd1b_f))._field_kind);
					_33317_obj+=jule::Str(",", 1);
				}
				_iter_next_1a952e540:;
				++it;
				goto _iter_begin_1a952e540;
			}
			_iter_end_1a952e540:;
		}
		_33317_obj=_33317_obj.slice(0LL,_33317_obj.len() - 1LL);
	}
	_33317_obj+=jule::Str("}", 1);
	return _33317_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_structure_lit(jule::Ptr<_1ddb3c047_StructLitExprModel> _36936_m) {
	if ((*((*((*(_36936_m))._field_strct))._field_decl))._field_cpp_linked) {
		return (*this)._method_cpp_structure_lit(_36936_m);
	}
	jule::Str _37417_obj = _1a670d28d_IdentCoder::_static_method_structure_ins((*(_36936_m))._field_strct);
	_37417_obj+=jule::Str("(", 1);
	if ((*(_36936_m))._field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &expr = (*((*(_36936_m))._field_strct))._field_fields;
			auto it = expr.begin();
			_iter_begin_1a9537bb9:;
			if (it != expr.end()) {
				jule::Ptr<_1dd0be530_FieldIns> _1dcb0cd1b_f = *it;
				{
					{
						auto &expr = (*(_36936_m))._field_args;
						auto it = expr.begin();
						_iter_begin_1a953845b:;
						if (it != expr.end()) {
							jule::Ptr<_1ddb3c047_StructArgExprModel> _1dcb0cd1b_arg = *it;
							{
								if ((*(_1dcb0cd1b_arg))._field_field == _1dcb0cd1b_f) {
									_37417_obj+=(*this)._method_expr((*(_1dcb0cd1b_arg))._field_expr);
									_37417_obj+=jule::Str(",", 1);
									goto _iter_next_1a9537bb9;
								}
							}
							_iter_next_1a953845b:;
							++it;
							goto _iter_begin_1a953845b;
						}
						_iter_end_1a953845b:;
					}
					_37417_obj+=(*this)._method_init_expr((*(_1dcb0cd1b_f))._field_kind);
					_37417_obj+=jule::Str(",", 1);
				}
				_iter_next_1a9537bb9:;
				++it;
				goto _iter_begin_1a9537bb9;
			}
			_iter_end_1a9537bb9:;
		}
		_37417_obj=_37417_obj.slice(0LL,_37417_obj.len() - 1LL);
	}
	_37417_obj+=jule::Str(")", 1);
	return _37417_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_alloc_structure(jule::Ptr<_1ddb3c047_AllocStructLitExprModel> _39538_m) {
	jule::Str _39617_obj = jule::Str("jule::new_struct", 16);
	if ((*((*((*((*(_39538_m))._field_lit))._field_strct))._field_decl))._method_has_ref_accessible()) {
		_39617_obj+=jule::Str("_ptr", 4);
	}
	_39617_obj+=jule::Str("<", 1);
	_39617_obj+=_1a670d28d_IdentCoder::_static_method_structure_ins((*((*(_39538_m))._field_lit))._field_strct);
	_39617_obj+=jule::Str(">(", 2);
	if ((!(_1db6263a2_PRODUCTION))) {
		_39617_obj+=jule::Str("\"", 1);
		_39617_obj+=(*((*this)._field_oc))._method_loc_info((*((*(_39538_m))._field_lit))._field_token);
		_39617_obj+=jule::Str("\",", 2);
	}
	_39617_obj+=jule::Str("new( std::nothrow ) ", 20);
	_39617_obj+=(*this)._method_structure_lit((*(_39538_m))._field_lit);
	_39617_obj+=jule::Str(")", 1);
	return _39617_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_casting(jule::Ptr<_1ddb3c047_CastingExprModel> _41430_m) {
	jule::Str _41517_obj = jule::Str();
	{
		
		if (((*((*(_41430_m))._field_kind))._method_prim() != nullptr) && (*((*((*(_41430_m))._field_kind))._method_prim()))._method_is_any()) {
			_case_begin_1a9540e47:;
			{
				_41517_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_41430_m))._field_kind);
				_41517_obj+=jule::Str("(", 1);
				_41517_obj+=(*this)._method_model((*(_41430_m))._field_expr);
				_41517_obj+=jule::Str(")", 1);
			}
		}
		else if ((*((*(_41430_m))._field_expr_kind))._method_ptr() != nullptr || (*((*(_41430_m))._field_kind))._method_ptr() != nullptr) {
			_case_begin_1a95422cd:;
			{
				_41517_obj+=jule::Str("((", 2);
				_41517_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_41430_m))._field_kind);
				_41517_obj+=jule::Str(")(", 2);
				_41517_obj+=(*this)._method_expr((*(_41430_m))._field_expr);
				_41517_obj+=jule::Str("))", 2);
			}
		}
		else if ((*((*(_41430_m))._field_expr_kind))._method_trt() != nullptr || ((*((*(_41430_m))._field_expr_kind))._method_prim() != nullptr) && (*((*((*(_41430_m))._field_expr_kind))._method_prim()))._method_is_any()) {
			_case_begin_1a9542344:;
			{
				_41517_obj+=(*this)._method_model((*(_41430_m))._field_expr);
				_41517_obj+=jule::Str(".", 1);
				if (_1db6263a2_PRODUCTION) {
					_41517_obj+=jule::Str("operator ", 9);
					_41517_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_41430_m))._field_kind);
					_41517_obj+=jule::Str("()", 2);
				} else {
					if (((*((*(_41430_m))._field_expr_kind))._method_trt() != nullptr) && ((*((*(_41430_m))._field_kind))._method_sptr() != nullptr)) {
						_41517_obj+=jule::Str("cast_ptr<", 9);
						_41517_obj+=_1a696bb06_TypeCoder::_static_method_kind((*((*((*(_41430_m))._field_kind))._method_sptr()))._field_elem);
					} else {
						_41517_obj+=jule::Str("cast<", 5);
						_41517_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_41430_m))._field_kind);
					}
					_41517_obj+=jule::Str(">(\"", 3);
					_41517_obj+=(*((*this)._field_oc))._method_loc_info((*(_41430_m))._field_token);
					_41517_obj+=jule::Str("\")", 2);
				}
			}
		}
		else {
			_case_begin_1a9540ab2:;
			{
				_41517_obj+=jule::Str("static_cast<", 12);
				_41517_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_41430_m))._field_kind);
				_41517_obj+=jule::Str(">(", 2);
				_41517_obj+=(*this)._method_expr((*(_41430_m))._field_expr);
				_41517_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1a9540a3a:;
	}
	return _41517_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_args(jule::Slice<jule::Any> _45927_args) {
	if (_45927_args.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _46317_obj = jule::Str();
	{
		auto &expr = _45927_args;
		auto it = expr.begin();
		_iter_begin_1a954cc9a:;
		if (it != expr.end()) {
			jule::Any _1dcb0cd1b_a = *it;
			{
				_46317_obj+=(*this)._method_expr(_1dcb0cd1b_a);
				_46317_obj+=jule::Str(",", 1);
			}
			_iter_next_1a954cc9a:;
			++it;
			goto _iter_begin_1a954cc9a;
		}
		_iter_end_1a954cc9a:;
	}
	_46317_obj=_46317_obj.slice(0LL,_46317_obj.len() - 1LL);
	return _46317_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_model_for_call(jule::Any _47237_expr) {
	{
		auto &_match_expr{ _47237_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1dded9702_FnIns>>()) {
			_case_begin_1a954e5c6:;
			{
				return (*this)._method_func_ins(_47237_expr.operator jule::Ptr<_1dded9702_FnIns>());
			}
		}
		else {
			_case_begin_1a954e6a3:;
			{
				return (*this)._method_model(_47237_expr);
			}
		}
		_match_end_1a954e64d:;
	}
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_pure_func_call(jule::Ptr<_1ddb3c047_FnCallExprModel>& _48138_m) {
	jule::Str _48217_obj = (*this)._method_model_for_call((*(_48138_m))._field_expr);
	if ((!((*((*(_48138_m))._field_func))._method_is_builtin()))) {
		if ((*((*((*(_48138_m))._field_func))._field_decl))._field_cpp_linked && ((*((*(_48138_m))._field_func))._field_generics.len() > 0LL)) {
			if ((!(_1a696bb06_has_directive((*((*((*(_48138_m))._field_func))._field_decl))._field_directives,jule::Str("cdef", 4))))) {
				_48217_obj+=jule::Str("<", 1);
				{
					auto &expr = (*((*(_48138_m))._field_func))._field_generics;
					auto it = expr.begin();
					_iter_begin_1a9552e6a:;
					if (it != expr.end()) {
						jule::Ptr<_1a5e40a26_TypeKind> _1dcb0cd1b_g = *it;
						{
							_48217_obj+=_1a696bb06_TypeCoder::_static_method_kind(_1dcb0cd1b_g);
							_48217_obj+=jule::Str(",", 1);
						}
						_iter_next_1a9552e6a:;
						++it;
						goto _iter_begin_1a9552e6a;
					}
					_iter_end_1a9552e6a:;
				}
				_48217_obj=_48217_obj.slice(0LL,_48217_obj.len() - 1LL);
				_48217_obj+=jule::Str(">", 1);
			}
		}
	}
	if ((!(_1db6263a2_PRODUCTION)) && (*((*(_48138_m))._field_func))._field_anon) {
		{
			auto &_match_expr{ (*(_48138_m))._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1ddb3c047_StructSubIdentExprModel>>()) {
				_case_begin_1a9555c1a:;
				{
					if ((*((*((*((*((*(_48138_m))._field_expr.operator jule::Ptr<_1ddb3c047_StructSubIdentExprModel>()))._field_field))._field_decl))._field_owner))._field_cpp_linked) {
						_48217_obj+=jule::Str("(", 1);
						goto _match_end_1a95557ca;
					}
					goto _case_begin_1a9555863;
				}
			}
			else {
				_case_begin_1a9555863:;
				{
					_48217_obj+=jule::Str(".call(\"", 7);
					_48217_obj+=(*((*this)._field_oc))._method_loc_info((*(_48138_m))._field_token);
					_48217_obj+=jule::Str("\"", 1);
					if ((*(_48138_m))._field_args.len() != 0LL) {
						_48217_obj+=jule::Str(",", 1);
					}
				}
			}
			_match_end_1a95557ca:;
		}
	} else {
		_48217_obj+=jule::Str("(", 1);
	}
	_48217_obj+=(*this)._method_args((*(_48138_m))._field_args);
	_48217_obj+=jule::Str(")", 1);
	if ((*(_48138_m))._field_is_co) {
		_48217_obj=jule::Str("__JULE_CO(", 10) + _48217_obj;
		_48217_obj+=jule::Str(")", 1);
	}
	return _48217_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_func_call(jule::Ptr<_1ddb3c047_FnCallExprModel> _52632_m) {
	if (((*((*(_52632_m))._field_func))._method_is_builtin() || (!((*((*((*(_52632_m))._field_func))._field_decl))._field_exceptional))) || (((*(_52632_m))._field_except != nullptr) && ((*((*(_52632_m))._field_except))._field_stmts.len() == 0LL))) {
		return (*this)._method_pure_func_call(_52632_m);
	}
	jule::Str _53417_obj = jule::Str("({\n", 3);
	(*((*this)._field_oc))._method_add_indent();
	_53417_obj+=(*((*this)._field_oc))._method_indent();
	_53417_obj+=jule::Str("auto except = ", 14);
	_53417_obj+=(*this)._method_pure_func_call(_52632_m);
	_53417_obj+=jule::Str(";\n", 2);
	_53417_obj+=(*((*this)._field_oc))._method_indent();
	if ((*(_52632_m))._field_except != nullptr) {
		if (((*((*(_52632_m))._field_func))._field_result == nullptr) || (!((*(_52632_m))._field_assigned))) {
			_53417_obj+=jule::Str("if (!except.ok()) ", 18);
			_53417_obj+=(*((*((*this)._field_oc))._field_sc))._method_scope((*(_52632_m))._field_except);
			_53417_obj+=jule::Str("\n", 1);
		} else {
			jule::Bool _54721_forwarded = _1dcb0cd1b_is_forwarded((*(_52632_m))._field_except);
			_53417_obj+=jule::Str("(except.ok()) ? (except.result) : (", 35);
			if (_54721_forwarded) {
				_53417_obj+=jule::Str("{", 1);
			}
			_53417_obj+=(*((*((*this)._field_oc))._field_sc))._method_scope((*(_52632_m))._field_except);
			if (_54721_forwarded) {
				_53417_obj+=jule::Str(" ", 1);
				_53417_obj+=(*this)._method_init_expr((*((*(_52632_m))._field_func))._field_result);
				_53417_obj+=jule::Str(";}", 2);
			}
			_53417_obj+=jule::Str(");\n", 3);
		}
		(*((*this)._field_oc))._method_done_indent();
	} else {
		_53417_obj+=jule::Str("if (!except.ok()) jule::panic(jule::Str(\"", 41);
		_53417_obj+=jule::Str("unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 98);
		_53417_obj+=(*((*this)._field_oc))._method_loc_info((*(_52632_m))._field_token);
		_53417_obj+=jule::Str("\"));\n", 5);
		if ((!((*((*((*(_52632_m))._field_func))._field_decl))._method_is_void()))) {
			_53417_obj+=(*((*this)._field_oc))._method_indent();
			_53417_obj+=jule::Str("(except.result);\n", 17);
		}
		(*((*this)._field_oc))._method_done_indent();
	}
	_53417_obj+=(*((*this)._field_oc))._method_indent();
	_53417_obj+=jule::Str("})", 2);
	return _53417_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_slice(jule::Ptr<_1ddb3c047_SliceExprModel> _57828_m) {
	if ((*(_57828_m))._field_elems.len() == 0LL) {
		return _1a696bb06_TypeCoder::_static_method_as_slice((*(_57828_m))._field_elem_kind) + jule::Str("()", 2);
	}
	jule::Str _58217_obj = _1a696bb06_TypeCoder::_static_method_as_slice((*(_57828_m))._field_elem_kind);
	_58217_obj+=jule::Str("({", 2);
	_58217_obj+=(*this)._method_args((*(_57828_m))._field_elems);
	_58217_obj+=jule::Str("})", 2);
	return _58217_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_indexing(jule::Ptr<_1ddb3c047_IndexingExprModel> _58931_m) {
	jule::Str _59017_obj = (*this)._method_model((*((*(_58931_m))._field_expr))._field_model);
	if (_1db6263a2_OPT_ACCESS) {
		jule::Bool _59417_array = (*((*((*(_58931_m))._field_expr))._field_kind))._method_arr() != nullptr;
		if (_59417_array && (*((*(_58931_m))._field_index))._method_is_const()) {
			_59017_obj+=jule::Str(".__at(", 6);
			_59017_obj+=(*this)._method_expr((*((*(_58931_m))._field_index))._field_model);
			_59017_obj+=jule::Str(")", 1);
			return _59017_obj;
		}
		{
			auto &_match_expr{ (*((*(_58931_m))._field_index))._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
				_case_begin_1a956bcca:;
				{
					jule::Ptr<_1c3c3d174_Var> _60621_i = (*((*(_58931_m))._field_index))._field_model.operator jule::Ptr<_1c3c3d174_Var>();
					if ((*(_60621_i))._field_mutable || ((*(_60621_i))._field_iter_relation == nullptr)) {
						goto _match_end_1a956bc53;
					}
					{
						auto &_match_expr{ (*((*(_58931_m))._field_expr))._field_model };
						
						if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
							_case_begin_1a956d89d:;
							{
								jule::Ptr<_1c3c3d174_Var> _61225_r = (*((*(_58931_m))._field_expr))._field_model.operator jule::Ptr<_1c3c3d174_Var>();
								if ((*((*(_60621_i))._field_iter_relation))._field_range == _61225_r) {
									_59017_obj+=jule::Str(".__at(", 6);
									_59017_obj+=(*this)._method_expr((*((*(_58931_m))._field_index))._field_model);
									_59017_obj+=jule::Str(")", 1);
									return _59017_obj;
								}
							}
						}
						_match_end_1a956d826:;
					}
				}
			}
			_match_end_1a956bc53:;
		}
	}
	{
		
		if (_1db6263a2_PRODUCTION || (*((*((*(_58931_m))._field_expr))._field_kind))._method_ptr() != nullptr || (*((*((*(_58931_m))._field_expr))._field_kind))._method_map() != nullptr) {
			_case_begin_1a956c072:;
			{
				_59017_obj+=jule::Str("[", 1);
				_59017_obj+=(*this)._method_expr((*((*(_58931_m))._field_index))._field_model);
				_59017_obj+=jule::Str("]", 1);
			}
		}
		else {
			_case_begin_1a957095a:;
			{
				_59017_obj+=jule::Str(".at(\"", 5);
				_59017_obj+=(*((*this)._field_oc))._method_loc_info((*(_58931_m))._field_token);
				_59017_obj+=jule::Str("\",", 2);
				_59017_obj+=(*this)._method_expr((*((*(_58931_m))._field_index))._field_model);
				_59017_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1a9570b58:;
	}
	return _59017_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_anon_func(jule::Ptr<_1ddb3c047_AnonFnExprModel> _64432_m) {
	jule::Str _64517_obj = _1a696bb06_TypeCoder::_static_method_func((*(_64432_m))._field_func);
	_64517_obj+=jule::Str("([=]", 4);
	_64517_obj+=(*((*this)._field_oc))._method_params_ins((*((*(_64432_m))._field_func))._field_params);
	_64517_obj+=jule::Str(" mutable -> ", 12);
	_64517_obj+=_1a696bb06_TypeCoder::_static_method_func_ins_result((*(_64432_m))._field_func);
	_64517_obj+=jule::Str(" ", 1);
	_64517_obj+=(*((*((*this)._field_oc))._field_sc))._method_func_scope((*(_64432_m))._field_func);
	_64517_obj+=jule::Str(")", 1);
	return _64517_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_map(jule::Ptr<_1ddb3c047_MapExprModel> _65626_m) {
	jule::Str _65717_obj = jule::Str("jule::Map<", 10);
	_65717_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_65626_m))._field_key_kind);
	_65717_obj+=jule::Str(",", 1);
	_65717_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_65626_m))._field_val_kind);
	_65717_obj+=jule::Str(">({", 3);
	if ((*(_65626_m))._field_entries.len() > 0LL) {
		{
			auto &expr = (*(_65626_m))._field_entries;
			auto it = expr.begin();
			_iter_begin_1a9579ac9:;
			if (it != expr.end()) {
				jule::Ptr<_1ddb3c047_KeyValPairExprModel> _1dcb0cd1b_pair = *it;
				{
					jule::Str _66425_pair_obj = jule::Str("{", 1);
					_66425_pair_obj+=(*this)._method_expr((*(_1dcb0cd1b_pair))._field_key);
					_66425_pair_obj+=jule::Str(",", 1);
					_66425_pair_obj+=(*this)._method_expr((*(_1dcb0cd1b_pair))._field_val);
					_66425_pair_obj+=jule::Str("}", 1);
					_65717_obj+=_66425_pair_obj;
					_65717_obj+=jule::Str(",", 1);
				}
				_iter_next_1a9579ac9:;
				++it;
				goto _iter_begin_1a9579ac9;
			}
			_iter_end_1a9579ac9:;
		}
		_65717_obj=_65717_obj.slice(0LL,_65717_obj.len() - 1LL);
	}
	_65717_obj+=jule::Str("})", 2);
	return _65717_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_slicing(jule::Ptr<_1ddb3c047_SlicingExprModel> _67830_m) {
	jule::Str _67917_obj = (*this)._method_model((*(_67830_m))._field_expr);
	_67917_obj+=jule::Str(".slice(", 7);
	if ((!(_1db6263a2_PRODUCTION))) {
		_67917_obj+=jule::Str("\"", 1);
		_67917_obj+=(*((*this)._field_oc))._method_loc_info((*(_67830_m))._field_token);
		_67917_obj+=jule::Str("\",", 2);
	}
	_67917_obj+=(*this)._method_expr((*(_67830_m))._field_left);
	if ((*(_67830_m))._field_right != jule::Any(nullptr)) {
		_67917_obj+=jule::Str(",", 1);
		_67917_obj+=(*this)._method_expr((*(_67830_m))._field_right);
	}
	_67917_obj+=jule::Str(")", 1);
	return _67917_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_trait_sub(jule::Ptr<_1ddb3c047_TraitSubIdentExprModel> _69532_m) {
	jule::Str _69617_obj = (*this)._method_model((*(_69532_m))._field_expr);
	_69617_obj+=jule::Str(".get(", 5);
	if ((!(_1db6263a2_PRODUCTION))) {
		_69617_obj+=jule::Str("\"", 1);
		_69617_obj+=(*((*this)._field_oc))._method_loc_info((*(_69532_m))._field_token);
		_69617_obj+=jule::Str("\"", 1);
	}
	_69617_obj+=jule::Str(")._method_", 10);
	_69617_obj+=(*(_69532_m))._field_ident;
	return _69617_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_structure_sub(jule::Ptr<_1ddb3c047_StructSubIdentExprModel> _70836_m) {
	jule::Str _70917_obj = (*this)._method_model((*(_70836_m))._field_expr);
	_70917_obj+=jule::Str(".", 1);
	if ((*(_70836_m))._field_field != nullptr) {
		_70917_obj+=_1a670d28d_IdentCoder::_static_method_field((*((*(_70836_m))._field_field))._field_decl);
	} else {
		_70917_obj+=_1a670d28d_IdentCoder::_static_method_func_ins((*(_70836_m))._field_method);
	}
	return _70917_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_common_ident(jule::Ptr<_1ddb3c047_CommonIdentExprModel> _71927_m) {
	return (*(_71927_m))._field_ident;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_common_sub(jule::Ptr<_1ddb3c047_CommonSubIdentExprModel> _72333_m) {
	jule::Str _72417_obj = (*this)._method_model((*(_72333_m))._field_expr);
	_72417_obj+=jule::Str(".", 1);
	_72417_obj+=(*(_72333_m))._field_ident;
	return _72417_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_array(jule::Ptr<_1ddb3c047_ArrayExprModel> _73028_m) {
	jule::Str _73117_obj = _1a696bb06_TypeCoder::_static_method_array((*(_73028_m))._field_kind);
	if ((*(_73028_m))._field_elems.len() == 0LL) {
		_73117_obj+=jule::Str("()", 2);
		return _73117_obj;
	}
	if (((*(_73028_m))._field_elems.len() == 2LL) && ((*(_73028_m))._field_elems[1LL] == jule::Any(nullptr))) {
		_73117_obj+=jule::Str("(", 1);
		_73117_obj+=(*this)._method_expr((*(_73028_m))._field_elems[0LL]);
		_73117_obj+=jule::Str(")", 1);
		return _73117_obj;
	}
	_73117_obj+=jule::Str("({", 2);
	_73117_obj+=(*this)._method_args((*(_73028_m))._field_elems);
	_73117_obj+=jule::Str("})", 2);
	return _73117_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_func_ins_common(jule::Ptr<_1dded9702_FnIns> _75334_m) {
	jule::Str _75417_obj = _1a696bb06_TypeCoder::_static_method_func(_75334_m);
	_75417_obj+=jule::Str("(", 1);
	_75417_obj+=(*this)._method_func_ins(_75334_m);
	_75417_obj+=jule::Str(")", 1);
	return _75417_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_func_ins(jule::Ptr<_1dded9702_FnIns> _76227_m) {
	if (((*(_76227_m))._field_decl != nullptr) && (*((*(_76227_m))._field_decl))._field_cpp_linked) {
		jule::Ptr<_1dd05c765_Directive> _76417_d = _1a696bb06_find_directive((*((*(_76227_m))._field_decl))._field_directives,jule::Str("namespace", 9));
		if (_76417_d != nullptr) {
			jule::Str _76625_obj = _1dcb0cd1b_concat_all_parts((*(_76417_d))._field_args);
			_76625_obj+=jule::Str("::", 2);
			_76625_obj+=_1a670d28d_IdentCoder::_static_method_func_ins(_76227_m);
			return _76625_obj;
		}
	}
	return _1a670d28d_IdentCoder::_static_method_func_ins(_76227_m);
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_tuple(jule::Ptr<_1ddb3c047_TupleExprModel> _77528_m) {
	jule::Str _77617_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = (*(_77528_m))._field_datas;
		auto it = expr.begin();
		_iter_begin_1a9592086:;
		if (it != expr.end()) {
			jule::Ptr<_1a94c333b_Data> _1dcb0cd1b_d = *it;
			{
				_77617_obj+=(*this)._method_expr((*(_1dcb0cd1b_d))._field_model);
				_77617_obj+=jule::Str(",", 1);
			}
			_iter_next_1a9592086:;
			++it;
			goto _iter_begin_1a9592086;
		}
		_iter_end_1a9592086:;
	}
	_77617_obj=_77617_obj.slice(0LL,_77617_obj.len() - 1LL);
	_77617_obj+=jule::Str(")", 1);
	return _77617_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_new_call(jule::Ptr<_1ddb3c047_BuiltinNewCallExprModel> _78631_m) {
	jule::Str _78717_obj = jule::Str("jule::new_ptr<", 14);
	_78717_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_78631_m))._field_kind);
	_78717_obj+=jule::Str(">(", 2);
	if ((*(_78631_m))._field_init != jule::Any(nullptr)) {
		_78717_obj+=(*this)._method_expr((*(_78631_m))._field_init);
	}
	_78717_obj+=jule::Str(")", 1);
	return _78717_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_out_call(jule::Ptr<_1ddb3c047_BuiltinOutCallExprModel> _79731_m) {
	if ((*(_79731_m))._field_debug && _1db6263a2_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _80117_obj = jule::Str("jule::out(", 10);
	_80117_obj+=(*this)._method_expr((*(_79731_m))._field_expr);
	_80117_obj+=jule::Str(")", 1);
	return _80117_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_outln_call(jule::Ptr<_1ddb3c047_BuiltinOutlnCallExprModel> _80733_m) {
	if ((*(_80733_m))._field_debug && _1db6263a2_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _81117_obj = jule::Str("jule::outln(", 12);
	_81117_obj+=(*this)._method_expr((*(_80733_m))._field_expr);
	_81117_obj+=jule::Str(")", 1);
	return _81117_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_panic_call(jule::Ptr<_1ddb3c047_BuiltinPanicCallExprModel> _81733_m) {
	jule::Str _81817_obj = jule::Str("jule::panic(", 12);
	_81817_obj+=(*this)._method_expr((*(_81733_m))._field_expr);
	_81817_obj+=jule::Str(" + jule::Str(\"\\nlocation: ", 26);
	_81817_obj+=(*((*this)._field_oc))._method_loc_info((*(_81733_m))._field_token);
	_81817_obj+=jule::Str("\"));", 4);
	return _81817_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_assert_call(jule::Ptr<_1ddb3c047_BuiltinAssertCallExprModel> _82634_m) {
	if (_1db6263a2_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _83017_obj = jule::Str("if (!(", 6);
	_83017_obj+=(*this)._method_expr((*(_82634_m))._field_expr);
	_83017_obj+=jule::Str(")) jule::panic(jule::Str(", 25);
	_83017_obj+=_1dcb0cd1b_cstr_lit(static_cast<jule::Slice<jule::U8>>((*(_82634_m))._field_log));
	_83017_obj+=jule::Str(") + jule::Str(\"\\nlocation: ", 27);
	_83017_obj+=(*((*this)._field_oc))._method_loc_info((*(_82634_m))._field_token);
	_83017_obj+=jule::Str("\"));", 4);
	return _83017_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_error_call(jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel> _84033_m) {
	jule::Str _84117_obj = jule::Str("return ", 7);
	if ((*((*((*(_84033_m))._field_func))._field_decl))._method_is_void()) {
		_84117_obj+=jule::Str("jule::VoidExceptional(", 22);
	} else {
		_84117_obj+=jule::Str("jule::Exceptional<", 18);
		_84117_obj+=_1a696bb06_TypeCoder::_static_method_kind((*((*(_84033_m))._field_func))._field_result);
		_84117_obj+=jule::Str(">(", 2);
	}
	_84117_obj+=(*this)._method_expr((*(_84033_m))._field_err);
	_84117_obj+=jule::Str(")", 1);
	return _84117_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_make_call(jule::Ptr<_1ddb3c047_BuiltinMakeCallExprModel> _85432_m) {
	jule::Str _85517_obj = jule::Str();
	if ((*(_85432_m))._field_len != jule::Any(nullptr)) {
		_85517_obj+=(*this)._method_expr((*(_85432_m))._field_len);
	} else {
		_85517_obj+=jule::Str("0", 1);
	}
	if ((*(_85432_m))._field_cap != jule::Any(nullptr)) {
		_85517_obj+=jule::Str(",", 1) + (*this)._method_expr((*(_85432_m))._field_cap);
	}
	if ((*((*((*((*(_85432_m))._field_kind))._method_slc()))._field_elem))._method_enm() != nullptr) {
		_85517_obj+=jule::Str(",", 1);
		_85517_obj+=(*this)._method_init_expr((*((*((*(_85432_m))._field_kind))._method_slc()))._field_elem);
		if ((*(_85432_m))._field_cap != jule::Any(nullptr)) {
			_85517_obj=(_1a696bb06_TypeCoder::_static_method_kind((*(_85432_m))._field_kind) + jule::Str("::alloc(", 8)) + _85517_obj;
		} else {
			_85517_obj=(_1a696bb06_TypeCoder::_static_method_kind((*(_85432_m))._field_kind) + jule::Str("::alloc_def(", 12)) + _85517_obj;
		}
	} else {
		_85517_obj=(_1a696bb06_TypeCoder::_static_method_kind((*(_85432_m))._field_kind) + jule::Str("::alloc(", 8)) + _85517_obj;
	}
	_85517_obj+=jule::Str(")", 1);
	return _85517_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method___append_call_assign(jule::Str& _88140_dest_expr,jule::Ptr<_1a5e40a26_TypeKind>& _88161_dest_kind,jule::Ptr<_1ddb3c047_SliceExprModel>& _88214_s,jule::Ptr<_1ddb3c047_BuiltinAppendCallExprModel>& _88239_m) {
	jule::Str _88317_obj = _88140_dest_expr;
	_88317_obj+=jule::Str(" = jule::alloc_for_append(", 26);
	_88317_obj+=(*this)._method_model((*(_88239_m))._field_dest);
	_88317_obj+=jule::Str(",", 1);
	_88317_obj+=_1dd4c1635_itoa(static_cast<jule::Int>((*(_88214_s))._field_elems.len()));
	_88317_obj+=jule::Str(");", 2);
	{
		auto &expr = (*(_88214_s))._field_elems;
		auto it = expr.begin();
		_iter_begin_1a95aaa94:;
		if (it != expr.end()) {
			jule::Any _1dcb0cd1b_e = *it;
			{
				_88317_obj+=_88140_dest_expr;
				_88317_obj+=jule::Str(".__push(", 8);
				_88317_obj+=(*this)._method_model(_1dcb0cd1b_e);
				_88317_obj+=jule::Str(");", 2);
			}
			_iter_next_1a95aaa94:;
			++it;
			goto _iter_begin_1a95aaa94;
		}
		_iter_end_1a95aaa94:;
	}
	return _88317_obj;
}



inline std::tuple<jule::Str,jule::Bool> _1dcb0cd1b_ExprCoder::_method_append_call_assign(jule::Any _89941_dest,jule::Ptr<_1ddb3c047_BuiltinAppendCallExprModel> _89962_m) {
	jule::Bool _899101_optimized = jule::Bool();
	{
		auto &_match_expr{ (*(_89962_m))._field_elements };
		
		if (_match_expr.type_is<jule::Ptr<_1ddb3c047_SliceExprModel>>()) {
			_case_begin_1a95ac3ae:;
			{
				{
					auto &_match_expr{ _89941_dest };
					
					if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
						_case_begin_1a95acac9:;
						{
							jule::Ptr<_1ddb3c047_SliceExprModel> _90425_s = (*(_89962_m))._field_elements.operator jule::Ptr<_1ddb3c047_SliceExprModel>();
							jule::Str _90521_dest_expr = (*this)._method_model(_89941_dest);
							jule::Ptr<_1c3c3d174_Var> _90625_dest_var = _89941_dest.operator jule::Ptr<_1c3c3d174_Var>();
							_899101_optimized = true;
							return std::make_tuple((*this)._method___append_call_assign(_90521_dest_expr,(*((*(_90625_dest_var))._field_kind))._field_kind,_90425_s,_89962_m),_899101_optimized);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_StructSubIdentExprModel>>()) {
						_case_begin_1a95acb51:;
						{
							jule::Ptr<_1ddb3c047_SliceExprModel> _90925_s = (*(_89962_m))._field_elements.operator jule::Ptr<_1ddb3c047_SliceExprModel>();
							jule::Str _91021_dest_expr = (*this)._method_model(_89941_dest);
							jule::Ptr<_1dd0be530_FieldIns> _91125_dest_field = (*(_89941_dest.operator jule::Ptr<_1ddb3c047_StructSubIdentExprModel>()))._field_field;
							_899101_optimized = true;
							return std::make_tuple((*this)._method___append_call_assign(_91021_dest_expr,(*(_91125_dest_field))._field_kind,_90925_s,_89962_m),_899101_optimized);
						}
					}
					_match_end_1a95aca1e:;
				}
			}
		}
		_match_end_1a95ac315:;
	}
	_899101_optimized = false;
	return std::make_tuple((*this)._method_append_call(_89962_m),_899101_optimized);
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_append_call(jule::Ptr<_1ddb3c047_BuiltinAppendCallExprModel> _91834_m) {
	jule::Str _91917_obj = jule::Str("jule::append(", 13);
	_91917_obj+=(*this)._method_model((*(_91834_m))._field_dest);
	_91917_obj+=jule::Str(",", 1);
	_91917_obj+=(*this)._method_model((*(_91834_m))._field_elements);
	_91917_obj+=jule::Str(")", 1);
	return _91917_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_clone_call(jule::Ptr<_1ddb3c047_BuiltinCloneCallExprModel> _92733_m) {
	jule::Str _92817_obj = jule::Str("jule::clone(", 12);
	_92817_obj+=(*this)._method_model((*(_92733_m))._field_expr);
	_92817_obj+=jule::Str(")", 1);
	return _92817_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_sizeof(jule::Ptr<_1ddb3c047_SizeofExprModel> _93429_m) {
	jule::Str _93517_obj = jule::Str("sizeof(", 7);
	_93517_obj+=(*this)._method_expr((*(_93429_m))._field_expr);
	_93517_obj+=jule::Str(")", 1);
	return _93517_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_alignof(jule::Ptr<_1ddb3c047_AlignofExprModel> _94130_m) {
	jule::Str _94217_obj = jule::Str("alignof(", 8);
	_94217_obj+=(*this)._method_expr((*(_94130_m))._field_expr);
	_94217_obj+=jule::Str(")", 1);
	return _94217_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_rune_lit(jule::Ptr<_1ddb3c047_RuneExprModel> _94823_m) {
	if ((*(_94823_m))._field_code <= 127LL) {
		jule::Str _95021_b = _1dcb0cd1b_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>((*(_94823_m))._field_code)));
		if (_95021_b == jule::Str("'", 1)) {
			_95021_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _95021_b) + jule::Str("'", 1);
	}
	return _1dcb0cd1b_itoa(static_cast<jule::I64>(static_cast<jule::I64>((*(_94823_m))._field_code)));
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_structure_static(jule::Ptr<_1ddb3c047_StructStaticIdentExprModel> _95935_m) {
	jule::Str _96017_obj = _1a670d28d_IdentCoder::_static_method_structure_ins((*(_95935_m))._field_structure);
	_96017_obj+=jule::Str("::", 2);
	_96017_obj+=_1a670d28d_IdentCoder::_static_method_func_ins((*(_95935_m))._field_method);
	return _96017_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_integrated_to_str(jule::Ptr<_1ddb3c047_IntegratedToStrExprModel> _96640_m) {
	jule::Str _96717_obj = jule::Str("jule::to_str(", 13);
	_96717_obj+=(*this)._method_model((*(_96640_m))._field_expr);
	_96717_obj+=jule::Str(")", 1);
	return _96717_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_ternary(jule::Ptr<_1ddb3c047_TernaryExprModel> _97330_m) {
	jule::Str _97417_obj = jule::Str("((", 2);
	_97417_obj+=(*this)._method_model((*(_97330_m))._field_condition);
	_97417_obj+=jule::Str(") ? (", 5);
	_97417_obj+=(*this)._method_model((*(_97330_m))._field_true_expr);
	_97417_obj+=jule::Str(") : (", 5);
	_97417_obj+=(*this)._method_model((*(_97330_m))._field_false_expr);
	_97417_obj+=jule::Str("))", 2);
	return _97417_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_backend_emit(jule::Ptr<_1ddb3c047_BackendEmitExprModel> _98435_m) {
	if ((*(_98435_m))._field_exprs.len() == 0LL) {
		return (*(_98435_m))._field_code;
	}
	{
		auto &expr = (*(_98435_m))._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a95c2869:;
		if (it != expr.end()) {
			jule::Int _1dcb0cd1b_i = it - expr.begin();
			jule::Any _1dcb0cd1b_expr = *it;
			{
				(*(_98435_m))._field_exprs[_1dcb0cd1b_i]=jule::Any((*this)._method_expr(_1dcb0cd1b_expr));
			}
			_iter_next_1a95c2869:;
			++it;
			_1dcb0cd1b_i++;
			goto _iter_begin_1a95c2869;
		}
		_iter_end_1a95c2869:;
	}
	return _1a665ad9a_format((*(_98435_m))._field_code,(*(_98435_m))._field_exprs);
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_free(jule::Ptr<_1ddb3c047_FreeExprModel> _99427_m) {
	if (_1db634b1e_RC) {
		return (*this)._method_expr((*(_99427_m))._field_expr) + jule::Str(".dealloc()", 10);
	}
	return (*this)._method_expr((*(_99427_m))._field_expr) + jule::Str(".__free()", 9);
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_model(jule::Any _100128_m) {
	{
		auto &_match_expr{ _100128_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a94c333b_Data>>()) {
			_case_begin_1a95c4be0:;
			{
				return (*this)._method_model((*(_100128_m.operator jule::Ptr<_1a94c333b_Data>()))._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5e40a26_TypeKind>>()) {
			_case_begin_1a95c6593:;
			{
				return _1a696bb06_TypeCoder::_static_method_kind(_100128_m.operator jule::Ptr<_1a5e40a26_TypeKind>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a64669ca_Const>>()) {
			_case_begin_1a95c6263:;
			{
				return (*this)._method_constant(_100128_m.operator jule::Ptr<_1a64669ca_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
			_case_begin_1a95c62c9:;
			{
				return (*this)._method_var(_100128_m.operator jule::Ptr<_1c3c3d174_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de043c01_Trait>>()) {
			_case_begin_1a95c6384:;
			{
				return _1a670d28d_IdentCoder::_static_method_trait_decl(_100128_m.operator jule::Ptr<_1de043c01_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
			_case_begin_1a95c63ea:;
			{
				return (*this)._method_structure(_100128_m.operator jule::Ptr<_1dd0be530_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd0be530_StructIns>>()) {
			_case_begin_1a95c6461:;
			{
				return (*this)._method_structure_ins(_100128_m.operator jule::Ptr<_1dd0be530_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dded9702_FnIns>>()) {
			_case_begin_1a95c5ebb:;
			{
				return (*this)._method_func_ins_common(_100128_m.operator jule::Ptr<_1dded9702_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BinopExprModel>>()) {
			_case_begin_1a95c6032:;
			{
				return (*this)._method_binary(_100128_m.operator jule::Ptr<_1ddb3c047_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_UnaryExprModel>>()) {
			_case_begin_1a95c6098:;
			{
				return (*this)._method_unary(_100128_m.operator jule::Ptr<_1ddb3c047_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_StructLitExprModel>>()) {
			_case_begin_1a95c610e:;
			{
				return (*this)._method_structure_lit(_100128_m.operator jule::Ptr<_1ddb3c047_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_AllocStructLitExprModel>>()) {
			_case_begin_1a95c695b:;
			{
				return (*this)._method_alloc_structure(_100128_m.operator jule::Ptr<_1ddb3c047_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_CastingExprModel>>()) {
			_case_begin_1a95c69c2:;
			{
				return (*this)._method_casting(_100128_m.operator jule::Ptr<_1ddb3c047_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_FnCallExprModel>>()) {
			_case_begin_1a95c6a38:;
			{
				return (*this)._method_func_call(_100128_m.operator jule::Ptr<_1ddb3c047_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_SliceExprModel>>()) {
			_case_begin_1a95c6a9e:;
			{
				return (*this)._method_slice(_100128_m.operator jule::Ptr<_1ddb3c047_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_ArrayExprModel>>()) {
			_case_begin_1a95c6b15:;
			{
				return (*this)._method_array(_100128_m.operator jule::Ptr<_1ddb3c047_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_IndexingExprModel>>()) {
			_case_begin_1a95c6b8c:;
			{
				return (*this)._method_indexing(_100128_m.operator jule::Ptr<_1ddb3c047_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_AnonFnExprModel>>()) {
			_case_begin_1a95c6c14:;
			{
				return (*this)._method_anon_func(_100128_m.operator jule::Ptr<_1ddb3c047_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_MapExprModel>>()) {
			_case_begin_1a95c6c8b:;
			{
				return (*this)._method_map(_100128_m.operator jule::Ptr<_1ddb3c047_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_SlicingExprModel>>()) {
			_case_begin_1a95c6d13:;
			{
				return (*this)._method_slicing(_100128_m.operator jule::Ptr<_1ddb3c047_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_TraitSubIdentExprModel>>()) {
			_case_begin_1a95c6d8a:;
			{
				return (*this)._method_trait_sub(_100128_m.operator jule::Ptr<_1ddb3c047_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_StructSubIdentExprModel>>()) {
			_case_begin_1a95c6e12:;
			{
				return (*this)._method_structure_sub(_100128_m.operator jule::Ptr<_1ddb3c047_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_CommonIdentExprModel>>()) {
			_case_begin_1a95c6e89:;
			{
				return (*this)._method_common_ident(_100128_m.operator jule::Ptr<_1ddb3c047_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_CommonSubIdentExprModel>>()) {
			_case_begin_1a95c7011:;
			{
				return (*this)._method_common_sub(_100128_m.operator jule::Ptr<_1ddb3c047_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_TupleExprModel>>()) {
			_case_begin_1a95c7088:;
			{
				return (*this)._method_tuple(_100128_m.operator jule::Ptr<_1ddb3c047_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinOutCallExprModel>>()) {
			_case_begin_1a95c7110:;
			{
				return (*this)._method_out_call(_100128_m.operator jule::Ptr<_1ddb3c047_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1a95c7187:;
			{
				return (*this)._method_outln_call(_100128_m.operator jule::Ptr<_1ddb3c047_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinNewCallExprModel>>()) {
			_case_begin_1a95c720e:;
			{
				return (*this)._method_new_call(_100128_m.operator jule::Ptr<_1ddb3c047_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinPanicCallExprModel>>()) {
			_case_begin_1a95c7286:;
			{
				return (*this)._method_panic_call(_100128_m.operator jule::Ptr<_1ddb3c047_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinAssertCallExprModel>>()) {
			_case_begin_1a95c730d:;
			{
				return (*this)._method_assert_call(_100128_m.operator jule::Ptr<_1ddb3c047_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel>>()) {
			_case_begin_1a95c7385:;
			{
				return (*this)._method_error_call(_100128_m.operator jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinMakeCallExprModel>>()) {
			_case_begin_1a95c740c:;
			{
				return (*this)._method_make_call(_100128_m.operator jule::Ptr<_1ddb3c047_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinAppendCallExprModel>>()) {
			_case_begin_1a95c7484:;
			{
				return (*this)._method_append_call(_100128_m.operator jule::Ptr<_1ddb3c047_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinCloneCallExprModel>>()) {
			_case_begin_1a95c750b:;
			{
				return (*this)._method_clone_call(_100128_m.operator jule::Ptr<_1ddb3c047_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_SizeofExprModel>>()) {
			_case_begin_1a95c7583:;
			{
				return (*this)._method_sizeof(_100128_m.operator jule::Ptr<_1ddb3c047_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_AlignofExprModel>>()) {
			_case_begin_1a95c760a:;
			{
				return (*this)._method_alignof(_100128_m.operator jule::Ptr<_1ddb3c047_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_RuneExprModel>>()) {
			_case_begin_1a95c7682:;
			{
				return (*this)._method_rune_lit(_100128_m.operator jule::Ptr<_1ddb3c047_RuneExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_StructStaticIdentExprModel>>()) {
			_case_begin_1a95c7709:;
			{
				return (*this)._method_structure_static(_100128_m.operator jule::Ptr<_1ddb3c047_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_IntegratedToStrExprModel>>()) {
			_case_begin_1a95c7781:;
			{
				return (*this)._method_integrated_to_str(_100128_m.operator jule::Ptr<_1ddb3c047_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_TernaryExprModel>>()) {
			_case_begin_1a95c7808:;
			{
				return (*this)._method_ternary(_100128_m.operator jule::Ptr<_1ddb3c047_TernaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BackendEmitExprModel>>()) {
			_case_begin_1a95c7880:;
			{
				return (*this)._method_backend_emit(_100128_m.operator jule::Ptr<_1ddb3c047_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_FreeExprModel>>()) {
			_case_begin_1a95c7907:;
			{
				return (*this)._method_free(_100128_m.operator jule::Ptr<_1ddb3c047_FreeExprModel>());
			}
		}
		else {
			_case_begin_1a95c5d23:;
			{
				return jule::Str("<unimplemented_expression_model>", 32);
			}
		}
		_match_end_1a95c5cbd:;
	}
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_expr(jule::Any _109227_e) {
	jule::Str _109317_obj = (*this)._method_model(_109227_e);
	if ((_109317_obj.len() == 0LL) || (_109317_obj[0LL] != '(')) {
		return _109317_obj;
	}
	{
		auto &_match_expr{ _109227_e };
		
		if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BinopExprModel>>()) {
			_case_begin_1a95e0a74:;
			{
				_109317_obj=_109317_obj.slice(1LL,_109317_obj.len() - 1LL);
			}
		}
		_match_end_1a95e07ee:;
	}
	return _109317_obj;
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_val(jule::Ptr<_1a94c333b_Value> _110426_v) {
	if ((*((*(_110426_v))._field_data))._method_is_const()) {
		return (*this)._method_constant((*((*(_110426_v))._field_data))._field_constant,(((*((*(_110426_v))._field_data))._field_kind != nullptr) && (*((*((*((*(_110426_v))._field_data))._field_kind))._method_prim()))._method_is_f32()));
	}
	return (*this)._method_expr((*((*(_110426_v))._field_data))._field_model);
}



inline jule::Str _1dcb0cd1b_ExprCoder::_method_init_expr(jule::Ptr<_1a5e40a26_TypeKind> _111132_t) {
	if ((*(_111132_t))._method_ptr() != nullptr) {
		return jule::Str("nullptr", 7);
	}
	jule::Ptr<_1de0dbeb9_Enum> _111517_enm = (*(_111132_t))._method_enm();
	if (_111517_enm != nullptr) {
		return (*this)._method_val((*((*(_111517_enm))._field_items[0LL]))._field_value);
	}
	return _1a696bb06_TypeCoder::_static_method_kind(_111132_t) + jule::Str("()", 2);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dcb0cd1b_ExprCoder &_Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a6849484_DeriveCoder::_static_method_clone_func_decl(jule::Ptr<_1dd0be530_Struct>& _1032_s) {
	jule::Str _1117_obj = _1a696bb06_TypeCoder::_static_method_structure(_1032_s);
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str _1a6849484_DeriveCoder::_static_method_clone_func_def(jule::Ptr<_1dd0be530_Struct>& _1631_s) {
	jule::Str _1717_obj = _1a696bb06_TypeCoder::_static_method_structure(_1631_s);
	_1717_obj+=jule::Str(" ", 1) + _1717_obj;
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a6849484_DeriveCoder &_Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_to_ident(jule::Str _2924_ident) {
	return jule::Str("_", 1) + _2924_ident;
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_addr(jule::Uintptr _3420_addr) {
	return jule::Str("_", 1) + _1dd4c1635_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3420_addr)),15LL);
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_to_out(jule::Str _4322_ident,jule::Uintptr _4334_addr) {
	if (_4334_addr != 0LLU) {
		jule::Str _4521_obj = _1a670d28d_IdentCoder::_static_method_addr(_4334_addr);
		_4521_obj+=jule::Str("_", 1);
		_4521_obj+=_4322_ident;
		return _4521_obj;
	}
	return _1a670d28d_IdentCoder::_static_method_to_ident(_4322_ident);
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_to_local(jule::Int _5924_row,jule::Int _5934_col,jule::Str _5944_ident) {
	jule::Str _6017_obj = _1dd4c1635_itoa(_5924_row);
	_6017_obj+=_1dd4c1635_itoa(_5934_col);
	_6017_obj+=jule::Str("_", 1);
	_6017_obj+=_5944_ident;
	return _1a670d28d_IdentCoder::_static_method_to_ident(_6017_obj);
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_func(jule::Ptr<_1dded9702_Fn>& _6821_f) {
	{
		
		if ((*(_6821_f))._field_cpp_linked) {
			_case_begin_1a95ee8b8:;
			{
				return (*(_6821_f))._field_ident;
			}
		}
		else if ((*(_6821_f))._field_ident == jule::Str("main", 4)) {
			_case_begin_1a96001b0:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if ((*(_6821_f))._method_is_method()) {
			_case_begin_1a95ee115:;
			{
				if ((*(_6821_f))._field_statically) {
					return jule::Str("_static_method_", 15) + (*(_6821_f))._field_ident;
				}
				return jule::Str("_method_", 8) + (*(_6821_f))._field_ident;
			}
		}
		else {
			_case_begin_1a95edeb1:;
			{
				return _1a670d28d_IdentCoder::_static_method_to_out((*(_6821_f))._field_ident,static_cast<jule::Uintptr>((*((*(_6821_f))._field_token._field_file))._method_addr()));
			}
		}
		_match_end_1a95edde5:;
	}
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_func_ins(jule::Ptr<_1dded9702_FnIns>& _8529_f) {
	if ((*(_8529_f))._method_is_builtin()) {
		return jule::Str("jule::", 6) + (*((*(_8529_f))._field_decl))._field_ident;
	}
	if ((*((*(_8529_f))._field_decl))._field_cpp_linked || ((*(_8529_f))._field_generics.len() == 0LL)) {
		return _1a670d28d_IdentCoder::_static_method_func((*(_8529_f))._field_decl);
	}
	{
		auto &expr = (*((*(_8529_f))._field_decl))._field_instances;
		auto it = expr.begin();
		_iter_begin_1a9603944:;
		if (it != expr.end()) {
			jule::Int _1a670d28d_i = it - expr.begin();
			jule::Ptr<_1dded9702_FnIns> _1a670d28d_ins = *it;
			{
				if ((*(_1a670d28d_ins))._method_same(_8529_f)) {
					jule::Str _9425_obj = _1a670d28d_IdentCoder::_static_method_func((*(_8529_f))._field_decl);
					_9425_obj+=jule::Str("_", 1);
					_9425_obj+=_1dd4c1635_itoa(_1a670d28d_i);
					return _9425_obj;
				}
			}
			_iter_next_1a9603944:;
			++it;
			_1a670d28d_i++;
			goto _iter_begin_1a9603944;
		}
		_iter_end_1a9603944:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_trait_decl(jule::Ptr<_1de043c01_Trait> _10426_t) {
	if ((*(_10426_t))._method_is_builtin()) {
		return jule::Str("jule::", 6) + (*(_10426_t))._field_ident;
	}
	return _1a670d28d_IdentCoder::_static_method_to_out((*(_10426_t))._field_ident,static_cast<jule::Uintptr>((*((*(_10426_t))._field_token._field_file))._method_addr()));
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_param(jule::Ptr<_1dded9702_Param>& _11222_p) {
	if (_1dd05db0c_is_anon_ident((*(_11222_p))._field_ident) || _1dd05db0c_is_ignore_ident((*(_11222_p))._field_ident)) {
		return jule::Str();
	}
	return _1a670d28d_IdentCoder::_static_method_to_local((*(_11222_p))._field_token._field_row,(*(_11222_p))._field_token._field_column,(*(_11222_p))._field_ident);
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_structure(jule::Ptr<_1dd0be530_Struct>& _12026_s) {
	if ((*(_12026_s))._field_cpp_linked) {
		if (_1a696bb06_has_directive((*(_12026_s))._field_directives,jule::Str("typedef", 7))) {
			return (*(_12026_s))._field_ident;
		}
		return jule::Str("struct ", 7) + (*(_12026_s))._field_ident;
	}
	return _1a670d28d_IdentCoder::_static_method_to_out((*(_12026_s))._field_ident,static_cast<jule::Uintptr>((*((*(_12026_s))._field_token._field_file))._method_addr()));
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_structure_ins(jule::Ptr<_1dd0be530_StructIns>& _13134_s) {
	if ((*((*(_13134_s))._field_decl))._field_cpp_linked || ((*(_13134_s))._field_generics.len() == 0LL)) {
		return _1a670d28d_IdentCoder::_static_method_structure((*(_13134_s))._field_decl);
	}
	{
		auto &expr = (*((*(_13134_s))._field_decl))._field_instances;
		auto it = expr.begin();
		_iter_begin_1a960bc49:;
		if (it != expr.end()) {
			jule::Int _1a670d28d_i = it - expr.begin();
			jule::Ptr<_1dd0be530_StructIns> _1a670d28d_ins = *it;
			{
				if ((*(_1a670d28d_ins))._method_same(_13134_s)) {
					jule::Str _13725_obj = _1a670d28d_IdentCoder::_static_method_structure((*(_13134_s))._field_decl);
					_13725_obj+=jule::Str("_", 1);
					_13725_obj+=_1dd4c1635_itoa(_1a670d28d_i);
					return _13725_obj;
				}
			}
			_iter_next_1a960bc49:;
			++it;
			_1a670d28d_i++;
			goto _iter_begin_1a960bc49;
		}
		_iter_end_1a960bc49:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_field(jule::Ptr<_1dd0be530_Field>& _14722_f) {
	if ((*((*(_14722_f))._field_owner))._field_cpp_linked) {
		return (*(_14722_f))._field_ident;
	}
	return jule::Str("_field_", 7) + (*(_14722_f))._field_ident;
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_var(jule::Ptr<_1c3c3d174_Var> _15523_v) {
	{
		
		if ((*(_15523_v))._field_cpp_linked) {
			_case_begin_1a9610236:;
			{
				return (*(_15523_v))._field_ident;
			}
		}
		else if ((*(_15523_v))._field_ident == jule::Str("error", 5)) {
			_case_begin_1a960ea1b:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((*(_15523_v))._field_ident == jule::Str("self", 4)) {
			_case_begin_1a960ea82:;
			{
				if ((*((*((*(_15523_v))._field_kind))._field_kind))._method_sptr() != nullptr) {
					return jule::Str("this->self", 10);
				}
				return jule::Str("(*this)", 7);
			}
		}
		else if ((*(_15523_v))._field_scope != nullptr) {
			_case_begin_1a960eae8:;
			{
				return _1a670d28d_IdentCoder::_static_method_to_local((*(_15523_v))._field_token._field_row,(*(_15523_v))._field_token._field_column,(*(_15523_v))._field_ident);
			}
		}
		else {
			_case_begin_1a960e8b7:;
			{
				return _1a670d28d_IdentCoder::_static_method_to_out((*(_15523_v))._field_ident,static_cast<jule::Uintptr>((*((*(_15523_v))._field_token._field_file))._method_addr()));
			}
		}
		_match_end_1a960e7eb:;
	}
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_iter_begin(jule::Uintptr _17426_it) {
	return jule::Str("_iter_begin_", 12) + _1dd4c1635_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17426_it)),15LL);
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_iter_end(jule::Uintptr _17924_it) {
	return jule::Str("_iter_end_", 10) + _1dd4c1635_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17924_it)),15LL);
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_iter_next(jule::Uintptr _18425_it) {
	return jule::Str("_iter_next_", 11) + _1dd4c1635_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18425_it)),15LL);
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_label(jule::Str _18921_ident) {
	return jule::Str("_julec_label_", 13) + _18921_ident;
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_match_end(jule::Uintptr _19425_m) {
	return jule::Str("_match_end_", 11) + _1dd4c1635_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19425_m)),15LL);
}



inline jule::Str _1a670d28d_IdentCoder::_static_method_case_begin(jule::Uintptr _19926_c) {
	return jule::Str("_case_begin_", 12) + _1dd4c1635_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19926_c)),15LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a670d28d_IdentCoder &_Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a686ecd4_SerializationInfo &_Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_to_type(jule::Str _5527_id) {
	if ((97LL <= _5527_id[0LL]) && (_5527_id[0LL] <= 122LLU)) {
		_5527_id[0LL]-=32LLU;
	}
	return jule::Str("jule::", 6) + _5527_id;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_prim(jule::Ptr<_1a5e40a26_Prim> _6320_p) {
	return _1a696bb06_TypeCoder::_static_method_to_type((*(_6320_p))._method_to_str());
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_tuple(jule::Ptr<_1a5e40a26_Tuple> _6825_t) {
	jule::Str _6917_obj = jule::Str("std::tuple<", 11);
	{
		auto &expr = (*(_6825_t))._field_types;
		auto it = expr.begin();
		_iter_begin_1a96ed522:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e40a26_TypeKind> _1a696bb06_tk = *it;
			{
				_6917_obj+=_1a696bb06_TypeCoder::_static_method_kind(_1a696bb06_tk);
				_6917_obj+=jule::Str(",", 1);
			}
			_iter_next_1a96ed522:;
			++it;
			goto _iter_begin_1a96ed522;
		}
		_iter_end_1a96ed522:;
	}
	_6917_obj=_6917_obj.slice(0LL,_6917_obj.len() - 1LL);
	_6917_obj+=jule::Str(">", 1);
	return _6917_obj;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_as_sptr(jule::Str _8023_elem) {
	jule::Str _8117_obj = jule::Str("jule::Ptr<", 10);
	_8117_obj+=_8023_elem;
	_8117_obj+=jule::Str(">", 1);
	return _8117_obj;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_sptr(jule::Ptr<_1a5e40a26_Sptr> _8824_sptr) {
	return _1a696bb06_TypeCoder::_static_method_as_sptr(_1a696bb06_TypeCoder::_static_method_kind((*(_8824_sptr))._field_elem));
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_ptr(jule::Ptr<_1a5e40a26_Ptr> _9323_p) {
	
	if ((*(_9323_p))._method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _9817_elem = _1a696bb06_TypeCoder::_static_method_kind((*(_9323_p))._field_elem);
	_9817_elem+=jule::Str("*", 1);
	return _9817_elem;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_enum_decl(jule::Ptr<_1de0dbeb9_Enum> _10429_e) {
	return _1a696bb06_TypeCoder::_static_method_kind((*((*(_10429_e))._field_kind))._field_kind);
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_as_slice(jule::Ptr<_1a5e40a26_TypeKind> _10828_elem) {
	jule::Str _10917_obj = jule::Str("jule::Slice<", 12);
	_10917_obj+=_1a696bb06_TypeCoder::_static_method_kind(_10828_elem);
	_10917_obj+=jule::Str(">", 1);
	return _10917_obj;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_slice(jule::Ptr<_1a5e40a26_Slc> _11625_s) {
	return _1a696bb06_TypeCoder::_static_method_as_slice((*(_11625_s))._field_elem);
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_map(jule::Ptr<_1a5e40a26_Map> _12123_m) {
	jule::Str _12217_obj = jule::Str("jule::Map<", 10);
	_12217_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_12123_m))._field_key);
	_12217_obj+=jule::Str(",", 1);
	_12217_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_12123_m))._field_val);
	_12217_obj+=jule::Str(">", 1);
	return _12217_obj;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_trait_ident(jule::Str _13027_ident) {
	jule::Str _13117_obj = jule::Str("jule::Trait<", 12);
	_13117_obj+=_13027_ident;
	_13117_obj+=jule::Str(">", 1);
	return _13117_obj;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_trait_decl(jule::Ptr<_1de043c01_Trait> _13826_t) {
	return _1a696bb06_TypeCoder::_static_method_trait_ident(_1a670d28d_IdentCoder::_static_method_trait_decl(_13826_t));
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_structure(jule::Ptr<_1dd0be530_Struct> _14325_s) {
	jule::Str _14417_rep = jule::Str();
	if ((*(_14325_s))._field_cpp_linked && (!(_1a696bb06_has_directive((*(_14325_s))._field_directives,jule::Str("typedef", 7))))) {
		_14417_rep+=jule::Str("struct ", 7);
	}
	_14417_rep+=_1a670d28d_IdentCoder::_static_method_structure(_14325_s);
	return _14417_rep;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_structure_ins(jule::Ptr<_1dd0be530_StructIns> _15333_s) {
	if ((*((*(_15333_s))._field_decl))._field_cpp_linked) {
		jule::Str _15521_ident = _1a670d28d_IdentCoder::_static_method_structure_ins(_15333_s);
		if ((*(_15333_s))._field_generics.len() > 0LL) {
			_15521_ident+=jule::Str("<", 1);
			{
				auto &expr = (*(_15333_s))._field_generics;
				auto it = expr.begin();
				_iter_begin_1a970b2dd:;
				if (it != expr.end()) {
					jule::Ptr<_1a5e40a26_TypeKind> _1a696bb06_g = *it;
					{
						_15521_ident+=_1a696bb06_TypeCoder::_static_method_kind(_1a696bb06_g);
						_15521_ident+=jule::Str(",", 1);
					}
					_iter_next_1a970b2dd:;
					++it;
					goto _iter_begin_1a970b2dd;
				}
				_iter_end_1a970b2dd:;
			}
			_15521_ident=_15521_ident.slice(0LL,_15521_ident.len() - 1LL);
			_15521_ident+=jule::Str(">", 1);
		}
		jule::Ptr<_1dd05c765_Directive> _16517_d = _1a696bb06_find_directive((*((*(_15333_s))._field_decl))._field_directives,jule::Str("namespace", 9));
		if (_16517_d != nullptr) {
			_15521_ident=(_1dcb0cd1b_concat_all_parts((*(_16517_d))._field_args) + jule::Str("::", 2)) + _15521_ident;
		}
		return _15521_ident;
	}
	return _1a670d28d_IdentCoder::_static_method_structure_ins(_15333_s);
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_array(jule::Ptr<_1a5e40a26_Arr> _17525_a) {
	jule::Str _17617_obj = jule::Str("jule::Array<", 12);
	_17617_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_17525_a))._field_elem);
	_17617_obj+=jule::Str(",", 1);
	_17617_obj+=_1dd4c1635_itoa((*(_17525_a))._field_n);
	_17617_obj+=jule::Str(">", 1);
	return _17617_obj;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_param(jule::Ptr<_1dded9702_Param>& _18526_p) {
	jule::Str _18617_obj = jule::Str();
	if ((*(_18526_p))._field_variadic) {
		_18617_obj+=jule::Str("jule::Slice<", 12);
		_18617_obj+=_1a696bb06_TypeCoder::_static_method_kind((*((*(_18526_p))._field_kind))._field_kind);
		_18617_obj+=jule::Str(">", 1);
	} else {
		_18617_obj+=_1a696bb06_TypeCoder::_static_method_kind((*((*(_18526_p))._field_kind))._field_kind);
	}
	return _18617_obj;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_param_ins(jule::Ptr<_1dded9702_ParamIns>& _19830_p) {
	jule::Str _19917_obj = jule::Str();
	if ((*((*(_19830_p))._field_decl))._field_variadic) {
		_19917_obj+=jule::Str("jule::Slice<", 12);
		_19917_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_19830_p))._field_kind);
		_19917_obj+=jule::Str(">", 1);
	} else {
		_19917_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_19830_p))._field_kind);
	}
	if ((*((*(_19830_p))._field_decl))._field_reference) {
		_19917_obj+=jule::Str("&", 1);
	}
	return _19917_obj;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_func_result(jule::Ptr<_1dded9702_Fn>& _21432_f) {
	if ((*(_21432_f))._method_is_void()) {
		if ((*(_21432_f))._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if ((*(_21432_f))._field_exceptional) {
		return (jule::Str("jule::Exceptional<", 18) + _1a696bb06_TypeCoder::_static_method_kind((*((*((*(_21432_f))._field_result))._field_kind))._field_kind)) + jule::Str(">", 1);
	}
	return _1a696bb06_TypeCoder::_static_method_kind((*((*((*(_21432_f))._field_result))._field_kind))._field_kind);
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_func_ins_result(jule::Ptr<_1dded9702_FnIns>& _22836_f) {
	if ((*((*(_22836_f))._field_decl))._method_is_void()) {
		if ((*((*(_22836_f))._field_decl))._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if ((*((*(_22836_f))._field_decl))._field_exceptional) {
		return (jule::Str("jule::Exceptional<", 18) + _1a696bb06_TypeCoder::_static_method_kind((*(_22836_f))._field_result)) + jule::Str(">", 1);
	}
	return _1a696bb06_TypeCoder::_static_method_kind((*(_22836_f))._field_result);
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_anon_func(jule::Ptr<_1dded9702_FnIns> _24129_f) {
	jule::Str _24217_decl = _1a696bb06_TypeCoder::_static_method_func_ins_result(_24129_f);
	_24217_decl+=jule::Str("(", 1);
	if ((*(_24129_f))._field_params.len() > 0LL) {
		{
			auto &expr = (*(_24129_f))._field_params;
			auto it = expr.begin();
			_iter_begin_1a9719b15:;
			if (it != expr.end()) {
				jule::Ptr<_1dded9702_ParamIns> _1a696bb06_param = *it;
				{
					if ((*((*(_1a696bb06_param))._field_decl))._method_is_self()) {
						goto _iter_next_1a9719b15;
					}
					_24217_decl+=_1a696bb06_TypeCoder::_static_method_param_ins(_1a696bb06_param);
					_24217_decl+=jule::Str(",", 1);
				}
				_iter_next_1a9719b15:;
				++it;
				goto _iter_begin_1a9719b15;
			}
			_iter_end_1a9719b15:;
		}
		_24217_decl=_24217_decl.slice(0LL,_24217_decl.len() - 1LL);
	} else {
		_24217_decl+=jule::Str("void", 4);
	}
	_24217_decl+=jule::Str(")", 1);
	return _24217_decl;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_func(jule::Ptr<_1dded9702_FnIns> _26124_f) {
	jule::Str _26217_obj = jule::Str("jule::Fn<", 9);
	_26217_obj+=_1a696bb06_TypeCoder::_static_method_anon_func(_26124_f);
	_26217_obj+=jule::Str(">", 1);
	return _26217_obj;
}



inline jule::Str _1a696bb06_TypeCoder::_static_method_kind(jule::Ptr<_1a5e40a26_TypeKind> _26924_k) {
	{
		
		if ((*(_26924_k))._method_cpp_linked()) {
			_case_begin_1a971d410:;
			{
				return (*(_26924_k))._field_cpp_ident;
			}
		}
		else if ((*(_26924_k))._method_prim() != nullptr) {
			_case_begin_1a971d476:;
			{
				return _1a696bb06_TypeCoder::_static_method_prim((*(_26924_k))._method_prim());
			}
		}
		else if ((*(_26924_k))._method_tup() != nullptr) {
			_case_begin_1a971d223:;
			{
				return _1a696bb06_TypeCoder::_static_method_tuple((*(_26924_k))._method_tup());
			}
		}
		else if ((*(_26924_k))._method_sptr() != nullptr) {
			_case_begin_1a971d289:;
			{
				return _1a696bb06_TypeCoder::_static_method_sptr((*(_26924_k))._method_sptr());
			}
		}
		else if ((*(_26924_k))._method_ptr() != nullptr) {
			_case_begin_1a971d07a:;
			{
				return _1a696bb06_TypeCoder::_static_method_ptr((*(_26924_k))._method_ptr());
			}
		}
		else if ((*(_26924_k))._method_enm() != nullptr) {
			_case_begin_1a971d0e1:;
			{
				return _1a696bb06_TypeCoder::_static_method_enum_decl((*(_26924_k))._method_enm());
			}
		}
		else if ((*(_26924_k))._method_slc() != nullptr) {
			_case_begin_1a971d157:;
			{
				return _1a696bb06_TypeCoder::_static_method_slice((*(_26924_k))._method_slc());
			}
		}
		else if ((*(_26924_k))._method_map() != nullptr) {
			_case_begin_1a971ccb1:;
			{
				return _1a696bb06_TypeCoder::_static_method_map((*(_26924_k))._method_map());
			}
		}
		else if ((*(_26924_k))._method_trt() != nullptr) {
			_case_begin_1a971cd27:;
			{
				return _1a696bb06_TypeCoder::_static_method_trait_decl((*(_26924_k))._method_trt());
			}
		}
		else if ((*(_26924_k))._method_strct() != nullptr) {
			_case_begin_1a971cd8d:;
			{
				return _1a696bb06_TypeCoder::_static_method_structure_ins((*(_26924_k))._method_strct());
			}
		}
		else if ((*(_26924_k))._method_arr() != nullptr) {
			_case_begin_1a971ce04:;
			{
				return _1a696bb06_TypeCoder::_static_method_array((*(_26924_k))._method_arr());
			}
		}
		else if ((*(_26924_k))._method_fnc() != nullptr) {
			_case_begin_1a971d4ed:;
			{
				return _1a696bb06_TypeCoder::_static_method_func((*(_26924_k))._method_fnc());
			}
		}
		else {
			_case_begin_1a971cb5c:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1a971ca3b:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a696bb06_TypeCoder &_Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dc4c9760_ScopeOptimizer> _1dc4c9760_ScopeOptimizer::_static_method_new(jule::Ptr<_1de0e938e_Scope> _2927_scope) {
	return jule::new_struct<_1dc4c9760_ScopeOptimizer>(new( std::nothrow ) _1dc4c9760_ScopeOptimizer(jule::Int(),_2927_scope));
}



inline void _1dc4c9760_ScopeOptimizer::_method_set_current_stmt(jule::Any _3539_stmt) {
	(*((*this)._field_scope))._field_stmts[(*this)._field_i]=_3539_stmt;
}



inline jule::Any _1dc4c9760_ScopeOptimizer::_method_current_stmt(void) {
	return (*((*this)._field_scope))._field_stmts[(*this)._field_i];
}



inline void _1dc4c9760_ScopeOptimizer::_method_optimize_data(jule::Ptr<_1a94c333b_Data> _4336_d) {
	{
		auto &_match_expr{ (*(_4336_d))._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ddb3c047_FnCallExprModel>>()) {
			_case_begin_1a974d880:;
			{
				jule::Ptr<_1ddb3c047_FnCallExprModel> _4621_m = (*(_4336_d))._field_model.operator jule::Ptr<_1ddb3c047_FnCallExprModel>();
				if (_1db6263a2_PRODUCTION) {
					if ((!((*((*(_4621_m))._field_func))._method_is_builtin())) && _1dc4c9760_is_std_package((*((*((*((*(_4621_m))._field_func))._field_decl))._field_token._field_file))._method_path(),jule::Str("debug", 5))) {
						(*((*this)._field_scope))._field_stmts[(*this)._field_i]=jule::Any(nullptr);
					}
				}
			}
		}
		_match_end_1a974d819:;
	}
}



inline void _1dc4c9760_ScopeOptimizer::_method_optimize_conditional(jule::Ptr<_1de0e938e_Conditional> _5643_c) {
	if ((!(_1db6263a2_OPT_COND))) {
		return;
	}
	jule::Bool _6117_const_case = false;
	{
		auto &expr = (*(_5643_c))._field_elifs;
		auto it = expr.begin();
		_iter_begin_1a9752136:;
		if (it != expr.end()) {
			jule::Int _1dc4c9760_i = it - expr.begin();
			jule::Ptr<_1de0e938e_If> _1dc4c9760_elif = *it;
			{
				if ((!(_1dc4c9760_is_constant_valid_conditional_case(_1dc4c9760_elif)))) {
					goto _iter_next_1a9752136;
				}
				_6117_const_case=true;
				(*(_5643_c))._field_elifs=(*(_5643_c))._field_elifs.slice(0LL,_1dc4c9760_i + 1LL);
				(*(_1dc4c9760_elif))._field_expr=jule::Any(nullptr);
				(*(_5643_c))._field_default=nullptr;
				goto _iter_end_1a9752136;
			}
			_iter_next_1a9752136:;
			++it;
			_1dc4c9760_i++;
			goto _iter_begin_1a9752136;
		}
		_iter_end_1a9752136:;
	}
	jule::Ptr<_1de0e938e_If>* _7617_i = (&((*(_5643_c))._field_elifs[0LL]));
	jule::Ptr<_1de0e938e_If>* _7713_end = (&((*(_5643_c))._field_elifs[(*(_5643_c))._field_elifs.len() - 1LL]));
	for (; _7617_i <= _7713_end; (_7617_i)++) {
		{
			{
				if ((!(_1dc4c9760_is_unreachable_conditional_case((*(_7617_i)))))) {
					(_7617_i)++;
					goto _iter_next_1a9751751;
				}
				(*(_7617_i))=nullptr;
			}
		}
	_iter_next_1a9751751:;
	}
	_iter_end_1a9751751:;
	if ((*(_5643_c))._field_elifs.len() == 0LL) {
		return;
	}
	if ((!(_6117_const_case))) {
		return;
	}
	jule::Int _9717_only = -1LL;
	{
		auto &expr = (*(_5643_c))._field_elifs;
		auto it = expr.begin();
		_iter_begin_1a9757229:;
		if (it != expr.end()) {
			jule::Int _1dc4c9760_j = it - expr.begin();
			jule::Ptr<_1de0e938e_If> _1dc4c9760_elif = *it;
			{
				if (_1dc4c9760_elif != nullptr) {
					if (_9717_only != -1LL) {
						return;
					}
					_9717_only=_1dc4c9760_j;
				}
			}
			_iter_next_1a9757229:;
			++it;
			_1dc4c9760_j++;
			goto _iter_begin_1a9757229;
		}
		_iter_end_1a9757229:;
	}
	if (_9717_only != -1LL) {
		(*this)._method_set_current_stmt(jule::Any((*((*(_5643_c))._field_elifs[_9717_only]))._field_scope));
	}
}



inline void _1dc4c9760_ScopeOptimizer::_method_optimize_match(jule::Ptr<_1de0e938e_Match> _11437_m) {
	if ((!(_1db6263a2_OPT_COND))) {
		return;
	}
	jule::Bool _11917_const_case = false;
	{
		auto &expr = (*(_11437_m))._field_cases;
		auto it = expr.begin();
		_iter_begin_1a975a12d:;
		if (it != expr.end()) {
			jule::Int _1dc4c9760_i = it - expr.begin();
			jule::Ptr<_1de0e938e_Case> _1dc4c9760_case = *it;
			{
				if ((!(_1dc4c9760_is_constant_valid_match_case(_1dc4c9760_case)))) {
					goto _iter_next_1a975a12d;
				}
				_11917_const_case=true;
				(*(_11437_m))._field_cases=(*(_11437_m))._field_cases.slice(0LL,_1dc4c9760_i + 1LL);
				(*(_1dc4c9760_case))._field_exprs=nullptr;
				(*(_11437_m))._field_default=nullptr;
				goto _iter_end_1a975a12d;
			}
			_iter_next_1a975a12d:;
			++it;
			_1dc4c9760_i++;
			goto _iter_begin_1a975a12d;
		}
		_iter_end_1a975a12d:;
	}
	if ((*(_11437_m))._field_cases.len() == 0LL) {
		return;
	}
	jule::Ptr<_1de0e938e_Case>* _13817_i = (&((*(_11437_m))._field_cases[0LL]));
	jule::Ptr<_1de0e938e_Case>* _13913_end = (&((*(_11437_m))._field_cases[(*(_11437_m))._field_cases.len() - 1LL]));
	for (; _13817_i <= _13913_end; (_13817_i)++) {
		{
			{
				if ((!(_1dc4c9760_is_unreachable_match_case((*(_13817_i)))))) {
					(_13817_i)++;
					goto _iter_next_1a97596c1;
				}
				(*(_13817_i))=nullptr;
			}
		}
	_iter_next_1a97596c1:;
	}
	_iter_end_1a97596c1:;
	if ((!(_11917_const_case))) {
		return;
	}
	jule::Int _15517_only = -1LL;
	{
		auto &expr = (*(_11437_m))._field_cases;
		auto it = expr.begin();
		_iter_begin_1a9760166:;
		if (it != expr.end()) {
			jule::Int _1dc4c9760_j = it - expr.begin();
			jule::Ptr<_1de0e938e_Case> _1dc4c9760_case = *it;
			{
				if (_1dc4c9760_case != nullptr) {
					if (_15517_only != -1LL) {
						return;
					}
					_15517_only=_1dc4c9760_j;
				}
			}
			_iter_next_1a9760166:;
			++it;
			_1dc4c9760_j++;
			goto _iter_begin_1a9760166;
		}
		_iter_end_1a9760166:;
	}
	if (_15517_only != -1LL) {
		(*this)._method_set_current_stmt(jule::Any((*((*(_11437_m))._field_cases[_15517_only]))._field_scope));
	}
}



inline void _1dc4c9760_ScopeOptimizer::_method_optimize_stmt(jule::Any _17236_stmt) {
	{
		auto &_match_expr{ _17236_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1de0e938e_Scope>>()) {
			_case_begin_1a9762685:;
			{
				(*this)._method_optimize_child(_17236_stmt.operator jule::Ptr<_1de0e938e_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a94c333b_Data>>()) {
			_case_begin_1a97626eb:;
			{
				(*this)._method_optimize_data(_17236_stmt.operator jule::Ptr<_1a94c333b_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Conditional>>()) {
			_case_begin_1a9762762:;
			{
				(*this)._method_optimize_conditional(_17236_stmt.operator jule::Ptr<_1de0e938e_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Match>>()) {
			_case_begin_1a9762894:;
			{
				(*this)._method_optimize_match(_17236_stmt.operator jule::Ptr<_1de0e938e_Match>());
			}
		}
		_match_end_1a97625ca:;
	}
}



inline void _1dc4c9760_ScopeOptimizer::_method_optimize_child(jule::Ptr<_1de0e938e_Scope> _18137_child) {
	jule::Ptr<_1dc4c9760_ScopeOptimizer> _18217_so = _1dc4c9760_ScopeOptimizer::_static_method_new(_18137_child);
	(*(_18217_so))._method_optimize();
}



inline void _1dc4c9760_ScopeOptimizer::_method_optimize(void) {
	(*this)._field_i=0LL;
	for (; (*this)._field_i < static_cast<jule::Int>((*((*this)._field_scope))._field_stmts.len()); ((*this)._field_i)++) {
		{
			(*this)._method_optimize_stmt((*this)._method_current_stmt());
		}
	_iter_next_1a9766601:;
	}
	_iter_end_1a9766601:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4c9760_ScopeOptimizer &_Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dce62659_Optimizer> _1dce62659_Optimizer::_static_method_new(jule::Ptr<_1dcecd043_IR>& _2128_ir) {
	return jule::new_struct<_1dce62659_Optimizer>(new( std::nothrow ) _1dce62659_Optimizer(_2128_ir));
}



inline void _1dce62659_Optimizer::_method_optimize_function(jule::Ptr<_1dded9702_Fn>& _2741_func) {
	if ((*(_2741_func))._field_cpp_linked) {
		return;
	}
	{
		auto &expr = (*(_2741_func))._field_instances;
		auto it = expr.begin();
		_iter_begin_1a9768955:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_FnIns> _1dce62659_ins = *it;
			{
				jule::Ptr<_1dc4c9760_ScopeOptimizer> _3321_so = _1dc4c9760_ScopeOptimizer::_static_method_new((*(_1dce62659_ins))._field_scope);
				(*(_3321_so))._method_optimize();
			}
			_iter_next_1a9768955:;
			++it;
			goto _iter_begin_1a9768955;
		}
		_iter_end_1a9768955:;
	}
}



inline void _1dce62659_Optimizer::_method_optimize_struct(jule::Ptr<_1dd0be530_Struct>& _3839_s) {
	if ((*(_3839_s))._field_cpp_linked) {
		return;
	}
	{
		auto &expr = (*(_3839_s))._field_instances;
		auto it = expr.begin();
		_iter_begin_1a976a44b:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_StructIns> _1dce62659_ins = *it;
			{
				{
					auto &expr = (*(_1dce62659_ins))._field_methods;
					auto it = expr.begin();
					_iter_begin_1a976b040:;
					if (it != expr.end()) {
						jule::Ptr<_1dded9702_Fn> _1dce62659_m = *it;
						{
							{
								auto &expr = (*(_1dce62659_m))._field_instances;
								auto it = expr.begin();
								_iter_begin_1a976b87b:;
								if (it != expr.end()) {
									jule::Ptr<_1dded9702_FnIns> _1dce62659_mins = *it;
									{
										jule::Ptr<_1dc4c9760_ScopeOptimizer> _4629_so = _1dc4c9760_ScopeOptimizer::_static_method_new((*(_1dce62659_mins))._field_scope);
										(*(_4629_so))._method_optimize();
									}
									_iter_next_1a976b87b:;
									++it;
									goto _iter_begin_1a976b87b;
								}
								_iter_end_1a976b87b:;
							}
						}
						_iter_next_1a976b040:;
						++it;
						goto _iter_begin_1a976b040;
					}
					_iter_end_1a976b040:;
				}
			}
			_iter_next_1a976a44b:;
			++it;
			goto _iter_begin_1a976a44b;
		}
		_iter_end_1a976a44b:;
	}
}



inline void _1dce62659_Optimizer::_method_optimize_functions(jule::Ptr<_1c2c4607e_Package>& _5342_p) {
	{
		auto &expr = (*(_5342_p))._field_files;
		auto it = expr.begin();
		_iter_begin_1a976bbde:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1dce62659_f = *it;
			{
				{
					auto &expr = (*(_1dce62659_f))._field_funcs;
					auto it = expr.begin();
					_iter_begin_1a976d295:;
					if (it != expr.end()) {
						jule::Ptr<_1dded9702_Fn> _1dce62659_func = *it;
						{
							(*this)._method_optimize_function(_1dce62659_func);
						}
						_iter_next_1a976d295:;
						++it;
						goto _iter_begin_1a976d295;
					}
					_iter_end_1a976d295:;
				}
			}
			_iter_next_1a976bbde:;
			++it;
			goto _iter_begin_1a976bbde;
		}
		_iter_end_1a976bbde:;
	}
}



inline void _1dce62659_Optimizer::_method_optimize_structs(jule::Ptr<_1c2c4607e_Package>& _6140_p) {
	{
		auto &expr = (*(_6140_p))._field_files;
		auto it = expr.begin();
		_iter_begin_1a976e274:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1dce62659_f = *it;
			{
				{
					auto &expr = (*(_1dce62659_f))._field_structs;
					auto it = expr.begin();
					_iter_begin_1a976eac1:;
					if (it != expr.end()) {
						jule::Ptr<_1dd0be530_Struct> _1dce62659_s = *it;
						{
							(*this)._method_optimize_struct(_1dce62659_s);
						}
						_iter_next_1a976eac1:;
						++it;
						goto _iter_begin_1a976eac1;
					}
					_iter_end_1a976eac1:;
				}
			}
			_iter_next_1a976e274:;
			++it;
			goto _iter_begin_1a976e274;
		}
		_iter_end_1a976e274:;
	}
}



inline void _1dce62659_Optimizer::_method_optimize_package(jule::Ptr<_1c2c4607e_Package>& _6940_p) {
	(*this)._method_optimize_functions(_6940_p);
	(*this)._method_optimize_structs(_6940_p);
}



inline void _1dce62659_Optimizer::_method_optimize(void) {
	{
		auto &expr = (*((*this)._field_ir))._field_used;
		auto it = expr.begin();
		_iter_begin_1a97718a3:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1dce62659_u = *it;
			{
				if ((!((*(_1dce62659_u))._field_cpp_linked))) {
					(*this)._method_optimize_package((*(_1dce62659_u))._field_package);
				}
			}
			_iter_next_1a97718a3:;
			++it;
			goto _iter_begin_1a97718a3;
		}
		_iter_end_1a97718a3:;
	}
	(*this)._method_optimize_package((*((*this)._field_ir))._field_main);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dce62659_Optimizer &_Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dc4768b6_Flag_0::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1dc4768b6_Flag_0::_method_what(void) {
	return (*this)._field__what;
}



inline void _1dc4768b6_Flag_0::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1dc4768b6_Flag_0::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4768b6_Flag_0 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1dc4768b6_Flag_1::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1dc4768b6_Flag_1::_method_what(void) {
	return (*this)._field__what;
}



inline void _1dc4768b6_Flag_1::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1dc4768b6_Flag_1::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4768b6_Flag_1 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1dc4768b6_Flag_2::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1dc4768b6_Flag_2::_method_what(void) {
	return (*this)._field__what;
}



inline void _1dc4768b6_Flag_2::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1dc4768b6_Flag_2::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4768b6_Flag_2 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1dc4768b6_Flag_3::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1dc4768b6_Flag_3::_method_what(void) {
	return (*this)._field__what;
}



inline void _1dc4768b6_Flag_3::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1dc4768b6_Flag_3::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4768b6_Flag_3 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1dc4768b6_Flag_4::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _1dc4768b6_Flag_4::_method_what(void) {
	return (*this)._field__what;
}



inline void _1dc4768b6_Flag_4::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _1dc4768b6_Flag_4::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4768b6_Flag_4 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dc4768b6_FlagSet> _1dc4768b6_FlagSet::_static_method_new(void) {
	return jule::new_struct<_1dc4768b6_FlagSet>(new( std::nothrow ) _1dc4768b6_FlagSet(jule::Slice<jule::Trait<_1dc4768b6_CommonFlag>>::alloc(0LL,20LL)));
}



inline jule::Trait<_1dc4768b6_CommonFlag> _1dc4768b6_FlagSet::_method_find_flag(jule::Str _6732_name) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_1a9791d02:;
		if (it != expr.end()) {
			jule::Trait<_1dc4768b6_CommonFlag> _1dc4768b6_flag = *it;
			{
				if (_1dc4768b6_flag.get()._method_name() == _6732_name) {
					return _1dc4768b6_flag;
				}
			}
			_iter_next_1a9791d02:;
			++it;
			goto _iter_begin_1a9791d02;
		}
		_iter_end_1a9791d02:;
	}
	return nullptr;
}



inline jule::Trait<_1dc4768b6_CommonFlag> _1dc4768b6_FlagSet::_method_find_flag_short(jule::I32 _7738_name) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_1a9793496:;
		if (it != expr.end()) {
			jule::Trait<_1dc4768b6_CommonFlag> _1dc4768b6_flag = *it;
			{
				if (_1dc4768b6_flag.get()._method_short() == _7738_name) {
					return _1dc4768b6_flag;
				}
			}
			_iter_next_1a9793496:;
			++it;
			goto _iter_begin_1a9793496;
		}
		_iter_end_1a9793496:;
	}
	return nullptr;
}



inline jule::Slice<jule::Trait<_1dc4768b6_CommonFlag>> _1dc4768b6_FlagSet::_method_flags(void) {
	return (*this)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1dc4768b6_FlagSet::_method_parse(jule::Slice<jule::Str> _11128_args) {
	_1dc4768b6_ArgParser _11217_ap = _1dc4768b6_ArgParser((*this),_11128_args,jule::Slice<jule::Str>(),jule::Int());
	({
		auto except = _11217_ap._method_parse();
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11217_ap._field_content);
}



inline void _1dc4768b6_FlagSet::_method_reset(void) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_1a979709e:;
		if (it != expr.end()) {
			jule::Trait<_1dc4768b6_CommonFlag> _1dc4768b6_f = *it;
			{
				_1dc4768b6_f.get()._method_reset();
			}
			_iter_next_1a979709e:;
			++it;
			goto _iter_begin_1a979709e;
		}
		_iter_end_1a979709e:;
	}
}



inline jule::Ptr<_1dc4768b6_Flag_4> _1dc4768b6_FlagSet::_method_add_flag_common_0(jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	
	if ((*this)._method_find_flag(_12741_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	}
	if ((_12752_short != 0LL) && ((*this)._method_find_flag_short(_12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	}
	jule::Ptr<_1dc4768b6_Flag_4> _14417_flag = jule::new_struct<_1dc4768b6_Flag_4>(new( std::nothrow ) _1dc4768b6_Flag_4(_12741_name,_12752_short,jule::Str(),_12765_what,jule::Ptr<jule::Str>()));
	(*this)._field__flags = jule::alloc_for_append((*this)._field__flags,1);(*this)._field__flags.__push(_14417_flag);
	return _14417_flag;
}

inline jule::Ptr<_1dc4768b6_Flag_3> _1dc4768b6_FlagSet::_method_add_flag_common_1(jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	
	if ((*this)._method_find_flag(_12741_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	}
	if ((_12752_short != 0LL) && ((*this)._method_find_flag_short(_12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	}
	jule::Ptr<_1dc4768b6_Flag_3> _14417_flag = jule::new_struct<_1dc4768b6_Flag_3>(new( std::nothrow ) _1dc4768b6_Flag_3(_12741_name,_12752_short,jule::Bool(),_12765_what,jule::Ptr<jule::Bool>()));
	(*this)._field__flags = jule::alloc_for_append((*this)._field__flags,1);(*this)._field__flags.__push(_14417_flag);
	return _14417_flag;
}





inline void _1dc4768b6_FlagSet::_method_add_var_0(jule::Ptr<jule::Str> _17137_var,jule::Str _17146_name,jule::I32 _17157_short,jule::Str _17170_what) {
	jule::Ptr<_1dc4768b6_Flag_4> _17217_flag = (*this)._method_add_flag_common_0(_17146_name,_17157_short,_17170_what);
	(*(_17217_flag))._field__default=(*(_17137_var));
	(*(_17217_flag))._field__data=_17137_var;
}

inline void _1dc4768b6_FlagSet::_method_add_var_1(jule::Ptr<jule::Bool> _17137_var,jule::Str _17146_name,jule::I32 _17157_short,jule::Str _17170_what) {
	jule::Ptr<_1dc4768b6_Flag_3> _17217_flag = (*this)._method_add_flag_common_1(_17146_name,_17157_short,_17170_what);
	(*(_17217_flag))._field__default=(*(_17137_var));
	(*(_17217_flag))._field__data=_17137_var;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dc4768b6_FlagSet &_Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dded9702_ParamIns> _1dded9702_Param::_method_instance(void) {
	return jule::new_struct<_1dded9702_ParamIns>(new( std::nothrow ) _1dded9702_ParamIns(this->self,jule::Ptr<_1a5e40a26_TypeKind>()));
}



inline jule::Bool _1dded9702_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1dded9702_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1dded9702_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dded9702_Fn::_method_is_void(void) {
	return (*this)._field_result == nullptr;
}



inline jule::Bool _1dded9702_Fn::_method_is_method(void) {
	return (*this)._field_owner != nullptr;
}



inline jule::Bool _1dded9702_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _1dded9702_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _1dded9702_Fn::_method_is_anon(void) {
	return _1dd05db0c_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _1dded9702_Fn::_method_any_var(void) {
	return ((*this)._field_result != nullptr) && ((*((*this)._field_result))._field_idents.len() > 0LL);
}



inline jule::Bool _1dded9702_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto &expr = (*this)._field_params;
		auto it = expr.begin();
		_iter_begin_1a83ee851:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Param> &_1dded9702_p = *it;
			{
				if (_1dded9702_parameter_uses_generics(_1dded9702_p,(*this)._field_generics)) {
					return true;
				}
			}
			_iter_next_1a83ee851:;
			++it;
			goto _iter_begin_1a83ee851;
		}
		_iter_end_1a83ee851:;
	}
	return false;
}



inline jule::Bool _1dded9702_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if (((*((*this)._field_result))._field_kind == nullptr) || ((*((*((*this)._field_result))._field_kind))._field_kind == nullptr)) {
		return false;
	}
	return _1dded9702_kind_uses_generics((*((*((*this)._field_result))._field_kind))._field_kind,(*this)._field_generics);
}



inline jule::Ptr<_1dded9702_FnIns> _1dded9702_Fn::_method_instance_force(void) {
	jule::Ptr<_1dded9702_FnIns> _11217_ins = jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),this->self,jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::new_struct<_1de0e938e_Scope>(new( std::nothrow ) _1de0e938e_Scope()),_1dded9779_ReferenceStack::_static_method_new(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::U8(),jule::Bool()));
	if ((*(this->self))._method_is_init()) {
		(*(_11217_ins))._field_refers=_1dded9779_ReferenceStack::_static_method_new();
	}
	(*(_11217_ins))._field_params=jule::Slice<jule::Ptr<_1dded9702_ParamIns>>::alloc(0LL,static_cast<jule::Int>((*(this->self))._field_params.len()));
	{
		auto &expr = (*(this->self))._field_params;
		auto it = expr.begin();
		_iter_begin_1a8404559:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Param> _1dded9702_p = *it;
			{
				(*(_11217_ins))._field_params = jule::alloc_for_append((*(_11217_ins))._field_params,1);(*(_11217_ins))._field_params.__push((*(_1dded9702_p))._method_instance());
			}
			_iter_next_1a8404559:;
			++it;
			goto _iter_begin_1a8404559;
		}
		_iter_end_1a8404559:;
	}
	if ((*((*(_11217_ins))._field_decl))._field_result != nullptr) {
		(*(_11217_ins))._field_result=(*((*((*((*(_11217_ins))._field_decl))._field_result))._field_kind))._field_kind;
	}
	return _11217_ins;
}



inline jule::Ptr<_1dded9702_FnIns> _1dded9702_Fn::_method_instance(void) {
	if (((*(this->self))._field_generics.len() == 0LL) && ((*(this->self))._field_instances.len() == 1LL)) {
		return (*(this->self))._field_instances[0LL];
	}
	return (*(this->self))._method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _1dded9702_Fn::_method_append_instance(jule::Ptr<_1dded9702_FnIns>& _14339_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.__push(_14339_ins);
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.__push(_14339_ins);
		return std::make_tuple(true,-1LL);
	}
	{
		auto &expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_1a840ac58:;
		if (it != expr.end()) {
			jule::Int _1dded9702_j = it - expr.begin();
			jule::Ptr<_1dded9702_FnIns> _1dded9702_ains = *it;
			{
				if ((*(_1dded9702_ains))._method_same(_14339_ins)) {
					return std::make_tuple(false,_1dded9702_j);
				}
			}
			_iter_next_1a840ac58:;
			++it;
			_1dded9702_j++;
			goto _iter_begin_1a840ac58;
		}
		_iter_end_1a840ac58:;
	}
	(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.__push(_14339_ins);
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dded9702_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_UseExpr &_Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dded9779_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1de043c01_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1de043c01_Trait::_method_equals(jule::Ptr<_1a5e40a26_TypeKind> _2526_other) {
	jule::Ptr<_1de043c01_Trait> _2613_trt = (*(_2526_other))._method_trt();
	return this->self == _2613_trt;
}



inline jule::Bool _1de043c01_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == static_cast<jule::Uint>(0LLU);
}



inline jule::Ptr<_1dded9702_Fn> _1de043c01_Trait::_method_find_method(jule::Str _3734_ident) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a84a0649:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1de043c01_f = *it;
			{
				if ((*(_1de043c01_f))._field_ident == _3734_ident) {
					return _1de043c01_f;
				}
			}
			_iter_next_1a84a0649:;
			++it;
			goto _iter_begin_1a84a0649;
		}
		_iter_end_1a84a0649:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de043c01_Trait &_Src) {
	_Stream << ((_1de043c01_Trait)(_Src))._method_to_str();
	return _Stream;
}



inline jule::Bool _1de0dbeb9_EnumItem::_method_auto_expr(void) {
	return (*this)._field_value == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0dbeb9_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1de0dbeb9_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1de0dbeb9_Enum::_method_equals(jule::Ptr<_1a5e40a26_TypeKind> _3526_other) {
	jule::Ptr<_1de0dbeb9_Enum> _3613_enm = (*(_3526_other))._method_enm();
	return this->self == _3613_enm;
}



inline jule::Ptr<_1de0dbeb9_EnumItem> _1de0dbeb9_Enum::_method_find_item(jule::Str _4432_ident) {
	{
		auto &expr = (*this)._field_items;
		auto it = expr.begin();
		_iter_begin_1a84a450a:;
		if (it != expr.end()) {
			jule::Ptr<_1de0dbeb9_EnumItem> _1de0dbeb9_item = *it;
			{
				if ((*(_1de0dbeb9_item))._field_ident == _4432_ident) {
					return _1de0dbeb9_item;
				}
			}
			_iter_next_1a84a450a:;
			++it;
			goto _iter_begin_1a84a450a;
		}
		_iter_end_1a84a450a:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0dbeb9_Enum &_Src) {
	_Stream << ((_1de0dbeb9_Enum)(_Src))._method_to_str();
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_CoExpr &_Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == static_cast<jule::Uint>(1LLU);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb61a2d_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_FnCallExpr::_method_unhandled(void) {
	return (*this)._field_exception == nullptr;
}



inline jule::Bool _1dd05c765_FnCallExpr::_method_ignored(void) {
	return ((*this)._field_exception != nullptr) && (*((*this)._field_exception))._field_deferred;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != static_cast<jule::Uint>(0LLU);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_Node::_method_is_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_FnDecl>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_StructDecl>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_UseDecl>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_VarDecl>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_TypeDecl>>()) {
			_case_begin_1a754061e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a753ee8c:;
			{
				return false;
			}
		}
		_match_end_1a753ee37:;
	}
}



inline jule::Bool _1dd05c765_Node::_method_is_comment(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_Comment>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_CommentGroup>>()) {
			_case_begin_1a7541576:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a7541c2a:;
			{
				return false;
			}
		}
		_match_end_1a7541bc5:;
	}
}



inline jule::Bool _1dd05c765_Node::_method_is_directive(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_Directive>>()) {
			_case_begin_1a75433be:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a7542c3c:;
			{
				return false;
			}
		}
		_match_end_1a7542bd7:;
	}
}



inline jule::Bool _1dd05c765_Node::_method_is_impl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_Impl>>()) {
			_case_begin_1a7544227:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a7543a95:;
			{
				return false;
			}
		}
		_match_end_1a7543a40:;
	}
}



inline jule::Bool _1dd05c765_Node::_method_is_use_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_UseDecl>>()) {
			_case_begin_1a7545080:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a75448ed:;
			{
				return false;
			}
		}
		_match_end_1a7544898:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dd0be530_FieldIns> _1dd0be530_Field::_method_instance(void) {
	return jule::new_struct<_1dd0be530_FieldIns>(new( std::nothrow ) _1dd0be530_FieldIns(this->self,(*((*(this->self))._field_kind))._field_kind,jule::Ptr<_1a94c333b_Data>()));
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd0be530_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1de0e938e_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dd0be530_StructIns> _1dd0be530_Struct::_method_instance(void) {
	if (((*(this->self))._field_generics.len() == 0LL) && ((*(this->self))._field_instances.len() == 1LL)) {
		return (*(this->self))._field_instances[0LL];
	}
	jule::Ptr<_1dd0be530_StructIns> _13617_ins = jule::new_struct_ptr<_1dd0be530_StructIns>(new( std::nothrow ) _1dd0be530_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dd0be530_FieldIns>>::alloc(0LL,static_cast<jule::Int>((*(this->self))._field_fields.len())),jule::Slice<jule::Ptr<_1dded9702_Fn>>::alloc(0LL,static_cast<jule::Int>((*(this->self))._field_methods.len())),jule::Bool(),_1dded9779_ReferenceStack::_static_method_new(),_1dd0be530_Operators()));
	{
		auto &expr = (*(this->self))._field_fields;
		auto it = expr.begin();
		_iter_begin_1a83c5827:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Field> _1dd0be530_f = *it;
			{
				(*(_13617_ins))._field_fields = jule::alloc_for_append((*(_13617_ins))._field_fields,1);(*(_13617_ins))._field_fields.__push((*(_1dd0be530_f))._method_instance());
				if (((!((*(_1dd0be530_f))._field_mutable)) && ((*((*(_1dd0be530_f))._field_kind))._field_kind != nullptr)) && (*((*((*(_1dd0be530_f))._field_kind))._field_kind))._method_mutable()) {
					(*(_13617_ins))._field_mutable=true;
				}
			}
			_iter_next_1a83c5827:;
			++it;
			goto _iter_begin_1a83c5827;
		}
		_iter_end_1a83c5827:;
	}
	{
		auto &expr = (*(this->self))._field_methods;
		auto it = expr.begin();
		_iter_begin_1a83c5b02:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1dd0be530_f = *it;
			{
				jule::Ptr<_1dded9702_Fn> _15121_fins = jule::new_struct_ptr<_1dded9702_Fn>(new( std::nothrow ) _1dded9702_Fn((*(_1dd0be530_f))._field_sema,(*(_1dd0be530_f))._field_token,(*(_1dd0be530_f))._field_global,(*(_1dd0be530_f))._field_unsafety,(*(_1dd0be530_f))._field_public,(*(_1dd0be530_f))._field_cpp_linked,(*(_1dd0be530_f))._field_statically,(*(_1dd0be530_f))._field_exceptional,(*(_1dd0be530_f))._field_ident,(*(_1dd0be530_f))._field_directives,(*(_1dd0be530_f))._field_doc,(*(_1dd0be530_f))._field_scope,(*(_1dd0be530_f))._field_generics,(*(_1dd0be530_f))._field_result,(*(_1dd0be530_f))._field_params,(*(_1dd0be530_f))._field_owner,nullptr));
				(*(_13617_ins))._field_methods = jule::alloc_for_append((*(_13617_ins))._field_methods,1);(*(_13617_ins))._field_methods.__push(_15121_fins);
			}
			_iter_next_1a83c5b02:;
			++it;
			goto _iter_begin_1a83c5b02;
		}
		_iter_end_1a83c5b02:;
	}
	return _13617_ins;
}



inline jule::Ptr<_1dd0be530_StructIns> _1dd0be530_Struct::_method_append_instance(jule::Ptr<_1dd0be530_StructIns>& _17839_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	{
		auto &expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_1a83cc90b:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_StructIns> _1dd0be530_ains = *it;
			{
				if ((*(_1dd0be530_ains))._method_same(_17839_ins)) {
					return _1dd0be530_ains;
				}
			}
			_iter_next_1a83cc90b:;
			++it;
			goto _iter_begin_1a83cc90b;
		}
		_iter_end_1a83cc90b:;
	}
	(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.__push(_17839_ins);
	return nullptr;
}



inline jule::Ptr<_1dded9702_Fn> _1dd0be530_Struct::_method_find_method(jule::Str _19634_ident,jule::Bool _19646_statically) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a83cea95:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1dd0be530_f = *it;
			{
				if (((*(_1dd0be530_f))._field_statically == _19646_statically) && ((*(_1dd0be530_f))._field_ident == _19634_ident)) {
					return _1dd0be530_f;
				}
			}
			_iter_next_1a83cea95:;
			++it;
			goto _iter_begin_1a83cea95;
		}
		_iter_end_1a83cea95:;
	}
	return nullptr;
}



inline jule::Ptr<_1c3c3d174_Var> _1dd0be530_Struct::_method_find_static(jule::Str _20734_ident) {
	{
		auto &expr = (*this)._field_statics;
		auto it = expr.begin();
		_iter_begin_1a83d1349:;
		if (it != expr.end()) {
			jule::Ptr<_1c3c3d174_Var> _1dd0be530_v = *it;
			{
				if ((*(_1dd0be530_v))._field_ident == _20734_ident) {
					return _1dd0be530_v;
				}
			}
			_iter_next_1a83d1349:;
			++it;
			goto _iter_begin_1a83d1349;
		}
		_iter_end_1a83d1349:;
	}
	return nullptr;
}



inline jule::Ptr<_1dd0be530_Field> _1dd0be530_Struct::_method_find_field(jule::Str _21833_ident) {
	{
		auto &expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_1a83d2768:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Field> _1dd0be530_f = *it;
			{
				if ((*(_1dd0be530_f))._field_ident == _21833_ident) {
					return _1dd0be530_f;
				}
			}
			_iter_next_1a83d2768:;
			++it;
			goto _iter_begin_1a83d2768;
		}
		_iter_end_1a83d2768:;
	}
	return nullptr;
}



inline jule::Bool _1dd0be530_Struct::_method_is_implements(jule::Ptr<_1de043c01_Trait> _22832_t) {
	{
		auto &expr = (*this)._field_implements;
		auto it = expr.begin();
		_iter_begin_1a83d3b87:;
		if (it != expr.end()) {
			jule::Ptr<_1de043c01_Trait> &_1dd0be530_it = *it;
			{
				if (_22832_t == _1dd0be530_it) {
					return true;
				}
			}
			_iter_next_1a83d3b87:;
			++it;
			goto _iter_begin_1a83d3b87;
		}
		_iter_end_1a83d3b87:;
	}
	return false;
}



inline jule::Bool _1dd0be530_Struct::_method_is_derives(jule::Str _23829_ident) {
	{
		auto &expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_1a83d4e30:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Directive> &_1dd0be530_d = *it;
			{
				if ((*(_1dd0be530_d))._field_tag._field_kind == jule::Str("derive", 6)) {
					if (((*(_1dd0be530_d))._field_args.len() == 1LL) && ((*(_1dd0be530_d))._field_args[0LL]._field_kind == _23829_ident)) {
						return true;
					}
				}
			}
			_iter_next_1a83d4e30:;
			++it;
			goto _iter_begin_1a83d4e30;
		}
		_iter_end_1a83d4e30:;
	}
	return false;
}



inline jule::Bool _1dd0be530_Struct::_method_is_uses(jule::Ptr<_1dd0be530_Struct> _25026_s) {
	{
		auto &expr = (*this)._field_uses;
		auto it = expr.begin();
		_iter_begin_1a83d733e:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> &_1dd0be530_u = *it;
			{
				while (_25026_s == _1dd0be530_u) {
					{
						return true;
					}
				_iter_next_1a83d78e4:;
				}
				_iter_end_1a83d78e4:;
			}
			_iter_next_1a83d733e:;
			++it;
			goto _iter_begin_1a83d733e;
		}
		_iter_end_1a83d733e:;
	}
	return false;
}



inline jule::Bool _1dd0be530_Struct::_method_has_ref_accessible(void) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a83d777e:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> &_1dd0be530_m = *it;
			{
				if (((*(_1dd0be530_m))._field_params.len() > 0LL) && (*((*(_1dd0be530_m))._field_params[0LL]))._method_is_ref()) {
					return true;
				}
			}
			_iter_next_1a83d777e:;
			++it;
			goto _iter_begin_1a83d777e;
		}
		_iter_end_1a83d777e:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd0be530_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "operators:" << _Src._field_operators << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_TernaryExpr &_Src) {
	_Stream << "TernaryExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1c2c4607e_ImportInfo::_method_find_package(jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1c2c4607e_ImportInfo> _1c2c4607e_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1c3c3d174_Var> _1c2c4607e_ImportInfo::_method_find_var(jule::Str _16431_ident,jule::Bool _16443_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_16431_ident)))) {
		return nullptr;
	}
	return _1c2c4607e_find_var_in_package((*((*this)._field_package))._field_files,_16431_ident,false);
}



inline jule::Ptr<_1a5e40a26_TypeAlias> _1c2c4607e_ImportInfo::_method_find_type_alias(jule::Str _17738_ident,jule::Bool _17750_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17738_ident)))) {
		return nullptr;
	}
	return _1c2c4607e_find_type_alias_in_package((*((*this)._field_package))._field_files,_17738_ident,false);
}



inline jule::Ptr<_1dd0be530_Struct> _1c2c4607e_ImportInfo::_method_find_struct(jule::Str _19034_ident,jule::Bool _19046_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_19034_ident)))) {
		return nullptr;
	}
	return _1c2c4607e_find_struct_in_package((*((*this)._field_package))._field_files,_19034_ident,false);
}



inline jule::Ptr<_1dded9702_Fn> _1c2c4607e_ImportInfo::_method_find_fn(jule::Str _20330_ident,jule::Bool _20342_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_20330_ident)))) {
		return nullptr;
	}
	return _1c2c4607e_find_fn_in_package((*((*this)._field_package))._field_files,_20330_ident,false);
}



inline jule::Ptr<_1de043c01_Trait> _1c2c4607e_ImportInfo::_method_find_trait(jule::Str _21533_ident) {
	if ((!((*this)._method_is_lookupable(_21533_ident)))) {
		return nullptr;
	}
	return _1c2c4607e_find_trait_in_package((*((*this)._field_package))._field_files,_21533_ident);
}



inline jule::Ptr<_1de0dbeb9_Enum> _1c2c4607e_ImportInfo::_method_find_enum(jule::Str _22732_ident) {
	if ((!((*this)._method_is_lookupable(_22732_ident)))) {
		return nullptr;
	}
	return _1c2c4607e_find_enum_in_package((*((*this)._field_package))._field_files,_22732_ident);
}



inline jule::Bool _1c2c4607e_ImportInfo::_method_is_lookupable(jule::Str _23728_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if (((*this)._field_alias.len() != 0LL) || (*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_23728_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _1c2c4607e_ImportInfo::_method_exist_ident(jule::Str _25726_ident) {
	{
		auto &expr = (*this)._field_selected;
		auto it = expr.begin();
		_iter_begin_1a8692110:;
		if (it != expr.end()) {
			_1dd05db0c_Token &_1c2c4607e_sident = *it;
			{
				if (_1c2c4607e_sident._field_kind == _25726_ident) {
					return true;
				}
			}
			_iter_next_1a8692110:;
			++it;
			goto _iter_begin_1a8692110;
		}
		_iter_end_1a8692110:;
	}
	return false;
}



inline jule::Bool _1c2c4607e_ImportInfo::_method_is_accessible_via_selection(void) {
	return ((*this)._field_import_all || ((*this)._field_selected.len() == 0LL)) || (*this)._method_exist_ident(jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, const _1c2c4607e_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dd0be530_StructIns::_method_to_str(void) {
	jule::Str _29317_kind = jule::Str();
	_29317_kind+=(*((*this)._field_decl))._field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_29317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_1a83db046:;
			if (it != expr.end()) {
				jule::Ptr<_1a5e40a26_TypeKind> &_1dd0be530_g = *it;
				{
					_29317_kind+=(*(_1dd0be530_g))._method_to_str();
					_29317_kind+=jule::Str(",", 1);
				}
				_iter_next_1a83db046:;
				++it;
				goto _iter_begin_1a83db046;
			}
			_iter_end_1a83db046:;
		}
		_29317_kind=_29317_kind.slice(0LL,_29317_kind.len() - 1LL);
		_29317_kind+=jule::Str("]", 1);
	}
	return _29317_kind;
}



inline jule::Bool _1dd0be530_StructIns::_method_equals(jule::Ptr<_1a5e40a26_TypeKind> _30826_other) {
	jule::Ptr<_1dd0be530_StructIns> _30913_s = (*(_30826_other))._method_strct();
	if (_30913_s == nullptr) {
		return false;
	}
	if ((*(this->self))._field_decl != (*(_30913_s))._field_decl) {
		return false;
	}
	if ((*(this->self))._field_generics.len() != static_cast<jule::Int>((*(_30913_s))._field_generics.len())) {
		return false;
	}
	jule::Int _32217_i = 0LL;
	for (; _32217_i < static_cast<jule::Int>((*(this->self))._field_generics.len()); (_32217_i)++) {
		{
			if ((!((*((*(this->self))._field_generics[_32217_i]))._method_equals((*(_30913_s))._field_generics[_32217_i])))) {
				return false;
			}
		}
	_iter_next_1a83e00b1:;
	}
	_iter_end_1a83e00b1:;
	return true;
}



inline jule::Bool _1dd0be530_StructIns::_method_same(jule::Ptr<_1dd0be530_StructIns> _33623_s) {
	if (((*this)._field_decl != (*(_33623_s))._field_decl) || ((*(_33623_s))._field_generics.len() != static_cast<jule::Int>((*this)._field_generics.len()))) {
		return false;
	}
	{
		auto &expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_1a83e3603:;
		if (it != expr.end()) {
			jule::Int _1dd0be530_i = it - expr.begin();
			jule::Ptr<_1a5e40a26_TypeKind> &_1dd0be530_g = *it;
			{
				if ((!((*(_1dd0be530_g))._method_equals((*(_33623_s))._field_generics[_1dd0be530_i])))) {
					return false;
				}
			}
			_iter_next_1a83e3603:;
			++it;
			_1dd0be530_i++;
			goto _iter_begin_1a83e3603;
		}
		_iter_end_1a83e3603:;
	}
	return true;
}



inline jule::Ptr<_1dded9702_Fn> _1dd0be530_StructIns::_method_find_method(jule::Str _35134_ident,jule::Bool _35146_statically) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a83e5605:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1dd0be530_f = *it;
			{
				if (((*(_1dd0be530_f))._field_statically == _35146_statically) && ((*(_1dd0be530_f))._field_ident == _35134_ident)) {
					return _1dd0be530_f;
				}
			}
			_iter_next_1a83e5605:;
			++it;
			goto _iter_begin_1a83e5605;
		}
		_iter_end_1a83e5605:;
	}
	return nullptr;
}



inline jule::Ptr<_1dd0be530_FieldIns> _1dd0be530_StructIns::_method_find_field(jule::Str _36233_ident) {
	{
		auto &expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_1a83e6da9:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_FieldIns> _1dd0be530_f = *it;
			{
				if ((*((*(_1dd0be530_f))._field_decl))._field_ident == _36233_ident) {
					return _1dd0be530_f;
				}
			}
			_iter_next_1a83e6da9:;
			++it;
			goto _iter_begin_1a83e6da9;
		}
		_iter_end_1a83e6da9:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd0be530_StructIns &_Src) {
	_Stream << ((_1dd0be530_StructIns)(_Src))._method_to_str();
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c3c3d174_Var::_method_is_initialized(void) {
	return (*this)._field_value != nullptr;
}



inline jule::Bool _1c3c3d174_Var::_method_is_type_inferred(void) {
	return ((*this)._field_kind == nullptr) || ((*((*this)._field_kind))._field_decl == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1c3c3d174_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline void _1a93c7a48_TypeCompatibilityChecker::_method_push_err(jule::Str _13527_fmt,jule::Slice<jule::Any> _13540_args) {
	(*((*this)._field_s))._method_push_err((*this)._field_error_token,_13527_fmt,_13540_args);
}



inline jule::Bool _1a93c7a48_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _13932_ok = jule::Bool();
	if ((*((*this)._field_src))._method_is_nil()) {
		_13932_ok = true;
		return _13932_ok;
	}
	jule::Ptr<_1de043c01_Trait> _14413_trt = (*((*this)._field_dest))._method_trt();
	jule::Bool _14517_ref = false;
	{
		
		if ((*((*this)._field_src))._method_sptr() != nullptr) {
			_case_begin_1a890e514:;
			{
				_14517_ref=true;
				(*this)._field_src=(*((*((*this)._field_src))._method_sptr()))._field_elem;
				if ((*((*this)._field_src))._method_strct() == nullptr) {
					_13932_ok = false;
					return _13932_ok;
				}
				goto _case_begin_1a890e5e1;
			}
		}
		else if ((*((*this)._field_src))._method_strct() != nullptr) {
			_case_begin_1a890e5e1:;
			{
				jule::Ptr<_1dd0be530_StructIns> _15617_s = (*((*this)._field_src))._method_strct();
				if ((!((*((*(_15617_s))._field_decl))._method_is_implements(_14413_trt)))) {
					_13932_ok = false;
					return _13932_ok;
				}
				if ((!(_14517_ref)) && _1a93c7a48_trait_has_reference_receiver(_14413_trt)) {
					(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_13932_ok = false;
					return _13932_ok;
				}
				_13932_ok = true;
				return _13932_ok;
			}
		}
		else if ((*((*this)._field_src))._method_trt() != nullptr) {
			_case_begin_1a890e657:;
			{
				_13932_ok = _14413_trt == (*((*this)._field_src))._method_trt();
				return _13932_ok;
			}
		}
		else {
			_case_begin_1a890dd82:;
			{
				_13932_ok = false;
				return _13932_ok;
			}
		}
		_match_end_1a890dd0a:;
	}
}



inline jule::Bool _1a93c7a48_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _17630_ok = jule::Bool();
	if ((*((*this)._field_src))._method_is_nil()) {
		_17630_ok = true;
		return _17630_ok;
	}
	jule::Ptr<_1a5e40a26_Ptr> _18117_dest = (*((*this)._field_dest))._method_ptr();
	if ((*(_18117_dest))._method_is_unsafe()) {
		_17630_ok = true;
		return _17630_ok;
	}
	_17630_ok = (*((*this)._field_dest))._method_equals((*this)._field_src);
	return _17630_ok;
}



inline jule::Bool _1a93c7a48_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _19031_ok = jule::Bool();
	if ((!((*((*this)._field_dest))._field_variadic))) {
		jule::Ptr<_1a5e40a26_Prim> _19217_prim = (*((*this)._field_dest))._method_prim();
		if ((_19217_prim != nullptr) && (*(_19217_prim))._method_is_any()) {
			_19031_ok = true;
			return _19031_ok;
		}
	}
	_19031_ok = (*((*this)._field_dest))._method_equals((*this)._field_src);
	return _19031_ok;
}



inline jule::Bool _1a93c7a48_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _20026_ok = jule::Bool();
	if ((*((*this)._field_dest))._method_ptr() != nullptr) {
		_20026_ok = (*this)._method_check_ptr();
		return _20026_ok;
	}
	if ((*((*this)._field_dest))._method_nil_compatible()) {
		if ((*((*this)._field_src))._method_is_nil()) {
			_20026_ok = true;
			return _20026_ok;
		}
	}
	{
		
		if ((*((*this)._field_dest))._method_prim() != nullptr) {
			_case_begin_1a891a1bd:;
			{
				_20026_ok = (*this)._method_check_prim();
				return _20026_ok;
			}
		}
		else if ((*((*this)._field_dest))._method_trt() != nullptr) {
			_case_begin_1a891a234:;
			{
				_20026_ok = (*this)._method_check_trait();
				return _20026_ok;
			}
		}
		else {
			_case_begin_1a8919ac4:;
			{
				_20026_ok = (*((*this)._field_dest))._method_equals((*this)._field_src);
				return _20026_ok;
			}
		}
		_match_end_1a89199b4:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a93c7a48_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a93c7a48_AssignTypeChecker::_method_push_err(jule::Str _23027_fmt,jule::Slice<jule::Any> _23040_args) {
	(*((*this)._field_s))._method_push_err((*this)._field_error_token,_23027_fmt,_23040_args);
}



inline jule::Bool _1a93c7a48_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _23517_valid = true;
	{
		
		if ((*((*((*this)._field_d))._field_kind))._method_fnc() != nullptr) {
			_case_begin_1a891d402:;
			{
				jule::Ptr<_1dded9702_FnIns> _23817_f = (*((*((*this)._field_d))._field_kind))._method_fnc();
				{
					
					if ((*(_23817_f))._method_is_builtin()) {
						_case_begin_1a891ea85:;
						{
							(*this)._method_push_err(jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23517_valid=false;
						}
					}
					else if ((*((*(_23817_f))._field_decl))._field_cpp_linked) {
						_case_begin_1a891eb0c:;
						{
							(*this)._method_push_err(jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23517_valid=false;
						}
					}
					else if ((*((*(_23817_f))._field_decl))._method_is_method()) {
						_case_begin_1a891eb84:;
						{
							(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_23517_valid=false;
						}
					}
					else if ((*((*(_23817_f))._field_decl))._field_generics.len() > 0LL) {
						_case_begin_1a891ec0b:;
						{
							(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_23517_valid=false;
						}
					}
					_match_end_1a891e9a8:;
				}
			}
		}
		else if ((*((*((*this)._field_d))._field_kind))._method_tup() != nullptr) {
			_case_begin_1a891d479:;
			{
				(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23517_valid=false;
			}
		}
		_match_end_1a891d347:;
	}
	return _23517_valid;
}



inline jule::Bool _1a93c7a48_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*((*this)._field_d))._method_is_const())) || ((*((*this)._field_dest))._method_prim() == nullptr)) || ((*((*((*this)._field_d))._field_kind))._method_prim() == nullptr)) || (!(_1a6539949_is_num((*((*((*((*this)._field_d))._field_kind))._method_prim()))._field_kind)))) {
		return false;
	}
	jule::Str _26813_kind = (*((*((*this)._field_dest))._method_prim()))._field_kind;
	{
		
		if (_1a6539949_is_float(_26813_kind)) {
			_case_begin_1a8927571:;
			{
				if ((!(_1a93c7a48_float_assignable(_26813_kind,(*this)._field_d)))) {
					(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else if (_1a6539949_is_int(_26813_kind)) {
			_case_begin_1a89275d7:;
			{
				if ((!(_1a93c7a48_int_assignable(_26813_kind,(*this)._field_d)))) {
					(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else {
			_case_begin_1a8926d56:;
			{
				return false;
			}
		}
		_match_end_1a8926c46:;
	}
	return true;
}



inline jule::Bool _1a93c7a48_AssignTypeChecker::_method_is_prim(void) {
	if ((*((*this)._field_dest))._field_variadic || (*((*((*this)._field_d))._field_kind))._field_variadic) {
		return false;
	}
	if ((*((*this)._field_dest))._method_cpp_linked() || (*((*((*this)._field_d))._field_kind))._method_cpp_linked()) {
		return false;
	}
	return ((*((*this)._field_dest))._method_prim() != nullptr) && ((*((*((*this)._field_d))._field_kind))._method_prim() != nullptr);
}



inline jule::Bool _1a93c7a48_AssignTypeChecker::_method_check(void) {
	{
		
		if ((*this)._field_d == nullptr) {
			_case_begin_1a892c3bc:;
			{
				return false;
			}
		}
		else if ((!((*this)._method_check_validity()))) {
			_case_begin_1a892c444:;
			{
				return false;
			}
		}
		else if ((*this)._method_check_const()) {
			_case_begin_1a892c4bb:;
			{
				return true;
			}
		}
		else if ((*((*((*this)._field_d))._field_kind))._method_enm() != nullptr) {
			_case_begin_1a892c543:;
			{
				jule::Ptr<_1a5e40a26_TypeKind> _31021_dkind = (*this)._field_dest;
				if ((*((*this)._field_dest))._method_enm() != nullptr) {
					_31021_dkind=(*((*((*((*this)._field_dest))._method_enm()))._field_kind))._field_kind;
				} else if ((*((*this)._field_dest))._method_prim() == nullptr) {
					goto _match_end_1a892c28a;
				}
				if (_1a6470a8e_types_are_compatible((*((*((*((*((*((*((*this)._field_d))._field_kind))._method_enm()))._field_kind))._field_kind))._method_prim()))._field_kind,(*((*(_31021_dkind))._method_prim()))._field_kind)) {
					return true;
				}
			}
		}
		else if ((*this)._method_is_prim()) {
			_case_begin_1a892c5ba:;
			{
				jule::Ptr<_1a5e40a26_Prim> _32017_dest = (*((*this)._field_dest))._method_prim();
				if ((*(_32017_dest))._method_is_any()) {
					return true;
				}
				jule::Ptr<_1a5e40a26_Prim> _32421_src = (*((*((*this)._field_d))._field_kind))._method_prim();
				if (_1a6470a8e_types_are_compatible((*(_32017_dest))._field_kind,(*(_32421_src))._field_kind)) {
					return true;
				}
			}
		}
		_match_end_1a892c28a:;
	}
	return (*((*this)._field_s))._method_check_type_compatibility((*this)._field_dest,(*((*this)._field_d))._field_kind,(*this)._field_error_token);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a93c7a48_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a93c7a48_DynamicTypeAnnotation::_method_push_generic(jule::Ptr<_1a5e40a26_TypeKind>& _34336_k,jule::Int _34350_i) {
	(*((*this)._field_f))._field_generics[_34350_i]=_34336_k;
}



inline jule::Bool _1a93c7a48_DynamicTypeAnnotation::_method_annotate_prim(jule::Ptr<_1a5e40a26_TypeKind>& _34744_k) {
	jule::Bool _34760_ok = jule::Bool();
	jule::Str _34813_kind = (*((*((*this)._field_k))))._method_to_str();
	{
		auto &expr = (*((*((*this)._field_f))._field_decl))._field_generics;
		auto it = expr.begin();
		_iter_begin_1a89369e2:;
		if (it != expr.end()) {
			jule::Int _1a93c7a48_i = it - expr.begin();
			jule::Ptr<_1dd05c765_GenericDecl> _1a93c7a48_g = *it;
			{
				if (_34813_kind != (*(_1a93c7a48_g))._field_ident) {
					goto _iter_next_1a89369e2;
				}
				jule::Ptr<_1a5e40a26_TypeKind> _35417_t = (*((*this)._field_f))._field_generics[_1a93c7a48_i];
				{
					
					if (_35417_t == nullptr) {
						_case_begin_1a89381ca:;
						{
							(*this)._method_push_generic(_34744_k,_1a93c7a48_i);
						}
					}
					else if ((!((*(_35417_t))._method_equals(_34744_k)))) {
						_case_begin_1a8938241:;
						{
							_34760_ok = false;
							return _34760_ok;
						}
					}
					_match_end_1a89380ba:;
				}
				(*((*((*this)._field_k))))._field_kind=(*(_34744_k))._field_kind;
				_34760_ok = true;
				return _34760_ok;
			}
			_iter_next_1a89369e2:;
			++it;
			_1a93c7a48_i++;
			goto _iter_begin_1a89369e2;
		}
		_iter_end_1a89369e2:;
	}
	_34760_ok = false;
	return _34760_ok;
}



inline jule::Bool _1a93c7a48_DynamicTypeAnnotation::_method_annotate_slc(jule::Ptr<_1a5e40a26_TypeKind>& _37143_k) {
	jule::Bool _37159_ok = jule::Bool();
	jule::Ptr<_1a5e40a26_Slc> _37217_pslc = (*((*((*this)._field_k))))._method_slc();
	if (_37217_pslc == nullptr) {
		_37159_ok = false;
		return _37159_ok;
	}
	jule::Ptr<_1a5e40a26_Slc> _37717_slc = (*(_37143_k))._method_slc();
	(*this)._field_k=(&((*(_37217_pslc))._field_elem));
	_37159_ok = (*this)._method_annotate_kind((*(_37717_slc))._field_elem);
	return _37159_ok;
}



inline jule::Bool _1a93c7a48_DynamicTypeAnnotation::_method_check_map_key(jule::Ptr<_1a5e40a26_TypeKind>* _38243_k,jule::Ptr<_1a5e40a26_TypeKind>& _38263_ck) {
	jule::Bool _38280_ok = jule::Bool();
	jule::Ptr<_1a5e40a26_TypeKind>* _38317_old = (*this)._field_k;
	(*this)._field_k=_38243_k;
	_38280_ok=(*this)._method_annotate_kind(_38263_ck);
	(*this)._field_k=_38317_old;
	return _38280_ok;
}



inline jule::Bool _1a93c7a48_DynamicTypeAnnotation::_method_annotate_map(jule::Ptr<_1a5e40a26_TypeKind>& _39043_k) {
	jule::Bool _39059_ok = jule::Bool();
	jule::Ptr<_1a5e40a26_Map> _39117_pmap = (*((*((*this)._field_k))))._method_map();
	if (_39117_pmap == nullptr) {
		_39059_ok = false;
		return _39059_ok;
	}
	jule::Ptr<_1a5e40a26_Map> _39617_m = (*(_39043_k))._method_map();
	_39059_ok = (*this)._method_check_map_key((&((*(_39117_pmap))._field_key)),(*(_39617_m))._field_key) && (*this)._method_check_map_key((&((*(_39117_pmap))._field_val)),(*(_39617_m))._field_val);
	return _39059_ok;
}



inline jule::Bool _1a93c7a48_DynamicTypeAnnotation::_method_annotate_fn(jule::Ptr<_1a5e40a26_TypeKind>& _40242_k) {
	jule::Bool _40258_ok = jule::Bool();
	jule::Ptr<_1dded9702_FnIns> _40317_pf = (*((*((*this)._field_k))))._method_fnc();
	if (_40317_pf == nullptr) {
		_40258_ok = false;
		return _40258_ok;
	}
	jule::Ptr<_1dded9702_FnIns> _40717_f = (*(_40242_k))._method_fnc();
	{
		
		if ((*(_40317_pf))._field_params.len() != static_cast<jule::Int>((*(_40717_f))._field_params.len())) {
			_case_begin_1a89449ab:;
			{
				_40258_ok = false;
				return _40258_ok;
			}
		}
		else if ((*((*(_40317_pf))._field_decl))._method_is_void() != (*((*(_40717_f))._field_decl))._method_is_void()) {
			_case_begin_1a8944a33:;
			{
				_40258_ok = false;
				return _40258_ok;
			}
		}
		_match_end_1a8944901:;
	}
	_40258_ok=true;
	jule::Ptr<_1a5e40a26_TypeKind>* _41717_old = (*this)._field_k;
	{
		auto &expr = (*(_40717_f))._field_params;
		auto it = expr.begin();
		_iter_begin_1a8946a57:;
		if (it != expr.end()) {
			jule::Int _1a93c7a48_i = it - expr.begin();
			jule::Ptr<_1dded9702_ParamIns> _1a93c7a48_fp = *it;
			{
				(*this)._field_k=(&((*((*(_40317_pf))._field_params[_1a93c7a48_i]))._field_kind));
				_40258_ok=(*this)._method_annotate_kind((*(_1a93c7a48_fp))._field_kind) && _40258_ok;
			}
			_iter_next_1a8946a57:;
			++it;
			_1a93c7a48_i++;
			goto _iter_begin_1a8946a57;
		}
		_iter_end_1a8946a57:;
	}
	if ((!((*((*(_40317_pf))._field_decl))._method_is_void()))) {
		(*this)._field_k=(&((*(_40317_pf))._field_result));
		_40258_ok=(*this)._method_annotate_kind((*(_40717_f))._field_result) && _40258_ok;
	}
	(*this)._field_k=_41717_old;
	return _40258_ok;
}



inline jule::Bool _1a93c7a48_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ptr<_1a5e40a26_TypeKind>& _43243_k) {
	jule::Bool _43259_ok = jule::Bool();
	jule::Ptr<_1a5e40a26_Ptr> _43317_pptr = (*((*((*this)._field_k))))._method_ptr();
	if (_43317_pptr == nullptr) {
		_43259_ok = false;
		return _43259_ok;
	}
	jule::Ptr<_1a5e40a26_Ptr> _43817_ptr = (*(_43243_k))._method_ptr();
	(*this)._field_k=(&((*(_43317_pptr))._field_elem));
	_43259_ok = (*this)._method_annotate_kind((*(_43817_ptr))._field_elem);
	return _43259_ok;
}



inline jule::Bool _1a93c7a48_DynamicTypeAnnotation::_method_annotate_sptr(jule::Ptr<_1a5e40a26_TypeKind>& _44344_k) {
	jule::Bool _44360_ok = jule::Bool();
	jule::Ptr<_1a5e40a26_Sptr> _44417_ssptr = (*((*((*this)._field_k))))._method_sptr();
	if (_44417_ssptr == nullptr) {
		_44360_ok = false;
		return _44360_ok;
	}
	jule::Ptr<_1a5e40a26_Sptr> _44917_sptr = (*(_44344_k))._method_sptr();
	(*this)._field_k=(&((*(_44417_ssptr))._field_elem));
	_44360_ok = (*this)._method_annotate_kind((*(_44917_sptr))._field_elem);
	return _44360_ok;
}



inline jule::Bool _1a93c7a48_DynamicTypeAnnotation::_method_annotate_any(jule::Ptr<_1a5e40a26_TypeKind>& _45443_k) {
	jule::Bool _45459_ok = jule::Bool();
	jule::Str _45513_kind = (*((*((*this)._field_k))))._method_to_str();
	{
		auto &expr = (*((*((*this)._field_f))._field_decl))._field_generics;
		auto it = expr.begin();
		_iter_begin_1a8950b60:;
		if (it != expr.end()) {
			jule::Int _1a93c7a48_i = it - expr.begin();
			jule::Ptr<_1dd05c765_GenericDecl> _1a93c7a48_g = *it;
			{
				if (_45513_kind != (*(_1a93c7a48_g))._field_ident) {
					goto _iter_next_1a8950b60;
				}
				jule::Ptr<_1a5e40a26_TypeKind> _46117_t = (*((*this)._field_f))._field_generics[_1a93c7a48_i];
				{
					
					if (_46117_t == nullptr) {
						_case_begin_1a8952348:;
						{
							(*this)._method_push_generic(_45443_k,_1a93c7a48_i);
						}
					}
					else if ((!((*(_46117_t))._method_equals(_45443_k)))) {
						_case_begin_1a89523ae:;
						{
							_45459_ok = false;
							return _45459_ok;
						}
					}
					_match_end_1a8952238:;
				}
				(*((*((*this)._field_k))))._field_kind=(*(_45443_k))._field_kind;
				_45459_ok = true;
				return _45459_ok;
			}
			_iter_next_1a8950b60:;
			++it;
			_1a93c7a48_i++;
			goto _iter_begin_1a8950b60;
		}
		_iter_end_1a8950b60:;
	}
	_45459_ok = false;
	return _45459_ok;
}



inline jule::Bool _1a93c7a48_DynamicTypeAnnotation::_method_annotate_kind(jule::Ptr<_1a5e40a26_TypeKind>& _47844_k) {
	jule::Bool _47860_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _47860_ok;
	}
	{
		
		if ((*this)._method_annotate_any(_47844_k)) {
			_case_begin_1a895545b:;
			{
				_47860_ok = true;
				return _47860_ok;
			}
		}
		else if ((*(_47844_k))._method_prim() != nullptr) {
			_case_begin_1a89554c2:;
			{
				_47860_ok = (*this)._method_annotate_prim(_47844_k);
				return _47860_ok;
			}
		}
		else if ((*(_47844_k))._method_slc() != nullptr) {
			_case_begin_1a8955170:;
			{
				_47860_ok = (*this)._method_annotate_slc(_47844_k);
				return _47860_ok;
			}
		}
		else if ((*(_47844_k))._method_map() != nullptr) {
			_case_begin_1a89551d6:;
			{
				_47860_ok = (*this)._method_annotate_map(_47844_k);
				return _47860_ok;
			}
		}
		else if ((*(_47844_k))._method_fnc() != nullptr) {
			_case_begin_1a895524c:;
			{
				_47860_ok = (*this)._method_annotate_fn(_47844_k);
				return _47860_ok;
			}
		}
		else if ((*(_47844_k))._method_ptr() != nullptr) {
			_case_begin_1a8954d51:;
			{
				_47860_ok = (*this)._method_annotate_ptr(_47844_k);
				return _47860_ok;
			}
		}
		else if ((*(_47844_k))._method_sptr() != nullptr) {
			_case_begin_1a8954db7:;
			{
				_47860_ok = (*this)._method_annotate_sptr(_47844_k);
				return _47860_ok;
			}
		}
		else {
			_case_begin_1a8954bec:;
			{
				_47860_ok = false;
				return _47860_ok;
			}
		}
		_match_end_1a89544e3:;
	}
}



inline jule::Bool _1a93c7a48_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _49536_ok = jule::Bool();
	(*this)._field_k=(&((*((*this)._field_p))._field_kind));
	_49536_ok = (*this)._method_annotate_kind((*((*this)._field_a))._field_kind);
	return _49536_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a93c7a48_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1a93c7a48_FnCallArgChecker::_method_push_err_token(_1dd05db0c_Token _51133_token,jule::Str _51147_fmt,jule::Slice<jule::Any> _51160_args) {
	(*((*((*this)._field_e))._field_s))._method_push_err(_51133_token,_51147_fmt,_51160_args);
}



inline void _1a93c7a48_FnCallArgChecker::_method_push_err(jule::Str _51527_fmt,jule::Slice<jule::Any> _51540_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_51527_fmt,_51540_args);
}



inline jule::Slice<jule::Ptr<_1dded9702_ParamIns>> _1a93c7a48_FnCallArgChecker::_method_get_params(void) {
	if ((((*((*this)._field_f))._field_params.len() > 0LL) && ((*((*((*this)._field_f))._field_params[0LL]))._field_decl != nullptr)) && (*((*((*((*this)._field_f))._field_params[0LL]))._field_decl))._method_is_self()) {
		return (*((*this)._field_f))._field_params.slice(1LL);
	}
	return (*((*this)._field_f))._field_params;
}



inline jule::Bool _1a93c7a48_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ptr<_1dded9702_ParamIns>>& _52832_params) {
	jule::Bool _52855_ok = jule::Bool();
	jule::Int _52917_n = _52832_params.len();
	if ((_52917_n > 0LL) && (*((*(_52832_params[0LL]))._field_decl))._method_is_self()) {
		(_52917_n)--;
	}
	jule::Int _53417_diff = _52917_n - static_cast<jule::Int>((*this)._field_args.len());
	{
		
		if (_53417_diff == 0LL) {
			_case_begin_1a8963744:;
			{
				_52855_ok = true;
				return _52855_ok;
			}
		}
		else if ((_52917_n > 0LL) && (*((*(_52832_params[_52917_n - 1LL]))._field_decl))._field_variadic) {
			_case_begin_1a89637bb:;
			{
				_52855_ok = true;
				return _52855_ok;
			}
		}
		else if ((_53417_diff < 0LL) || (_53417_diff > static_cast<jule::Int>(_52832_params.len()))) {
			_case_begin_1a8963843:;
			{
				(*this)._method_push_err(jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_52855_ok = false;
				return _52855_ok;
			}
		}
		_match_end_1a8963678:;
	}
	jule::Str _54517_idents = jule::Str();
	for (; _53417_diff > 0LL; (_53417_diff)--) {
		{
			_54517_idents+=jule::Str(", ", 2) + (*((*(_52832_params[_52917_n - _53417_diff]))._field_decl))._field_ident;
		}
	_iter_next_1a896602c:;
	}
	_iter_end_1a896602c:;
	_54517_idents=_54517_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_54517_idents)}));
	_52855_ok = false;
	return _52855_ok;
}



inline jule::Bool _1a93c7a48_FnCallArgChecker::_method_check_arg(jule::Ptr<_1dded9702_ParamIns>& _55533_p,jule::Ptr<_1a94c333b_Data>& _55552_arg,_1dd05db0c_Token& _55569_error_token) {
	jule::Bool _55591_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation && _1dded9702_parameter_uses_generics((*(_55533_p))._field_decl,(*((*((*this)._field_f))._field_decl))._field_generics)) {
		_55591_ok=(!((*((*(_55533_p))._field_decl))._field_variadic));
		if (_55591_ok) {
			_1a93c7a48_DynamicTypeAnnotation _55925_dta = _1a93c7a48_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_55533_p,_55552_arg,_55569_error_token,nullptr);
			_55591_ok=_55925_dta._method_annotate();
		}
		if ((!(_55591_ok))) {
			(*this)._method_push_err_token(_55569_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_55591_ok = false;
			return _55591_ok;
		}
	}
	if ((*((*((*this)._field_e))._field_s))._method_check_validity_for_init_expr((*((*(_55533_p))._field_decl))._field_mutable,(*((*(_55533_p))._field_decl))._field_reference,(*(_55533_p))._field_kind,_55552_arg,_55569_error_token)) {
		(*((*((*this)._field_e))._field_s))._method_check_assign_type((*((*(_55533_p))._field_decl))._field_reference,(*(_55533_p))._field_kind,_55552_arg,_55569_error_token);
	}
	_55591_ok = true;
	return _55591_ok;
}



inline jule::Bool _1a93c7a48_FnCallArgChecker::_method_push(jule::Ptr<_1dded9702_ParamIns>& _58228_p,jule::Ptr<_1dd05c765_Expr> _58246_arg) {
	jule::Bool _58260_ok = jule::Bool();
	jule::Ptr<_1a5e40a26_TypeKind> _58317_old = (*((*this)._field_e))._field_prefix;
	jule::Bool _58413_old_immut = (*((*this)._field_e))._field_immutable;
	jule::Ptr<_1a94c333b_Data> _58517_d = nullptr;
	(*((*this)._field_e))._field_immutable=(!((*((*(_58228_p))._field_decl))._field_mutable));
	if ((!((*this)._field_dynamic_annotation)) && (!((*((*(_58228_p))._field_decl))._field_variadic))) {
		(*((*this)._field_e))._field_prefix=(*(_58228_p))._field_kind;
	} else {
		(*((*this)._field_e))._field_prefix=nullptr;
	}
	_58517_d=(*((*this)._field_e))._method_eval_expr_kind((*(_58246_arg))._field_kind);
	(*((*this)._field_e))._field_prefix=_58317_old;
	(*((*this)._field_e))._field_immutable=_58413_old_immut;
	if (_58517_d == nullptr) {
		_58260_ok = false;
		return _58260_ok;
	}
	(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.__push(jule::Any(_58517_d));
	_58260_ok = (*this)._method_check_arg(_58228_p,_58517_d,(*(_58246_arg))._field_token);
	return _58260_ok;
}



inline jule::Bool _1a93c7a48_FnCallArgChecker::_method_push_variadic(jule::Ptr<_1dded9702_ParamIns>& _60637_p,jule::Int _60655_i) {
	jule::Bool _60665_ok = jule::Bool();
	_60665_ok=true;
	jule::Bool _60817_variadiced = false;
	jule::Bool _60913_more = (_60655_i + 1LL) < static_cast<jule::Int>((*this)._field_args.len());
	jule::Ptr<_1ddb3c047_SliceExprModel> _61017_model = jule::new_struct<_1ddb3c047_SliceExprModel>(new( std::nothrow ) _1ddb3c047_SliceExprModel((*(_60637_p))._field_kind,jule::Slice<jule::Any>()));
	jule::Ptr<_1a5e40a26_TypeKind> _61417_old = (*((*this)._field_e))._field_prefix;
	jule::Bool _61913_variadic = (*((*(_60637_p))._field_kind))._field_variadic;
	(*((*(_60637_p))._field_kind))._field_variadic=false;
	__JULE_DEFER({
		(*((*(_60637_p))._field_kind))._field_variadic=_61913_variadic;
	});
	for (; _60655_i < static_cast<jule::Int>((*this)._field_args.len()); (_60655_i)++) {
		{
			jule::Ptr<_1dd05c765_Expr> _62621_arg = (*this)._field_args[_60655_i];
			{
				auto &_match_expr{ (*(_62621_arg))._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_1dd05c765_VariadicExpr>>()) {
					_case_begin_1a8977769:;
					{
						(*((*this)._field_e))._field_prefix=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a5e40a26_Slc>(new( std::nothrow ) _1a5e40a26_Slc((*(_60637_p))._field_kind))));
					}
				}
				else {
					_case_begin_1a8977d96:;
					{
						(*((*this)._field_e))._field_prefix=(*(_60637_p))._field_kind;
					}
				}
				_match_end_1a8977d30:;
			}
			jule::Ptr<_1a94c333b_Data> _64021_d = (*((*this)._field_e))._method_eval(_62621_arg);
			if (_64021_d == nullptr) {
				_60665_ok=false;
				goto _iter_next_1a8974ada;
			}
			if ((*((*(_64021_d))._field_kind))._field_variadic) {
				_60817_variadiced=true;
				{
					auto &_match_expr{ (*(_64021_d))._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ddb3c047_SliceExprModel>>()) {
						_case_begin_1a897986a:;
						{
							_61017_model=(*(_64021_d))._field_model.operator jule::Ptr<_1ddb3c047_SliceExprModel>();
							(*(_61017_model))._field_elem_kind=(*(_60637_p))._field_kind;
						}
					}
					else {
						_case_begin_1a897a6e5:;
						{
							_61017_model=nullptr;
							(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.__push(jule::Any(_64021_d));
						}
					}
					_match_end_1a897a690:;
				}
				(*((*(_60637_p))._field_kind))._field_variadic=true;
				_60665_ok=_60665_ok && (*this)._method_check_arg(_60637_p,_64021_d,(*(_62621_arg))._field_token);
				(_60655_i)++;
				goto _iter_end_1a8974ada;
			}
			(*(_61017_model))._field_elems = jule::alloc_for_append((*(_61017_model))._field_elems,1);(*(_61017_model))._field_elems.__push((*(_64021_d))._field_model);
			_60665_ok=_60665_ok && (*this)._method_check_arg(_60637_p,_64021_d,(*(_62621_arg))._field_token);
		}
	_iter_next_1a8974ada:;
	}
	_iter_end_1a8974ada:;
	(*((*this)._field_e))._field_prefix=_61417_old;
	if (_60817_variadiced && _60913_more) {
		(*this)._method_push_err_token((*((*this)._field_args[_60655_i]))._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	}
	if (_61017_model != nullptr) {
		(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.__push(jule::Any(_61017_model));
	}
	return _60665_ok;
}



inline jule::Bool _1a93c7a48_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ptr<_1dded9702_ParamIns>>& _68734_params) {
	jule::Bool _68757_ok = jule::Bool();
	_68757_ok=true;
	jule::Int _68917_i = 0LL;
	_julec_label_iter:;
	while (_68917_i < static_cast<jule::Int>(_68734_params.len())) {
		{
			jule::Ptr<_1dded9702_ParamIns> _69221_p = _68734_params[_68917_i];
			{
				
				if ((*((*(_69221_p))._field_decl))._method_is_self()) {
					_case_begin_1a8982653:;
				}
				else if ((*((*(_69221_p))._field_decl))._field_variadic) {
					_case_begin_1a8982510:;
					{
						_68757_ok=(*this)._method_push_variadic(_69221_p,_68917_i) && _68757_ok;
						goto _iter_end_1a898161e;
					}
				}
				else if ((*this)._field_args.len() <= _68917_i) {
					_case_begin_1a89822ce:;
					{
						_68757_ok=false;
						goto _iter_end_1a898161e;
					}
				}
				else {
					_case_begin_1a898217a:;
					{
						_68757_ok=(*this)._method_push(_69221_p,(*this)._field_args[_68917_i]) && _68757_ok;
					}
				}
				_match_end_1a8982103:;
			}
			(_68917_i)++;
		}
	_iter_next_1a898161e:;
	}
	_iter_end_1a898161e:;
	return _68757_ok;
}



inline jule::Bool _1a93c7a48_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _71450_ok = jule::Bool();
	{
		auto &expr = (*((*this)._field_f))._field_generics;
		auto it = expr.begin();
		_iter_begin_1a898548b:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e40a26_TypeKind> _1a93c7a48_g = *it;
			{
				if (_1a93c7a48_g == nullptr) {
					(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_71450_ok = false;
					return _71450_ok;
				}
			}
			_iter_next_1a898548b:;
			++it;
			goto _iter_begin_1a898548b;
		}
		_iter_end_1a898548b:;
	}
	_71450_ok = true;
	return _71450_ok;
}



inline jule::Bool _1a93c7a48_FnCallArgChecker::_method_check(void) {
	jule::Bool _72426_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1dded9702_ParamIns>> _72517_params = (*this)._method_get_params();
	_72426_ok=(*this)._method_check_counts(_72517_params);
	if ((!(_72426_ok))) {
		_72426_ok = false;
		return _72426_ok;
	}
	_72426_ok=(*this)._method_check_args(_72517_params);
	if (_72426_ok && (*this)._field_dynamic_annotation) {
		_72426_ok=(*this)._method_check_dynamic_type_annotation();
	}
	return _72426_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a93c7a48_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1a93c7a48_StructLitChecker::_method_push_err(_1dd05db0c_Token _74827_token,jule::Str _74841_fmt,jule::Slice<jule::Any> _74854_args) {
	(*((*this)._field_e))._method_push_err(_74827_token,_74841_fmt,_74854_args);
}



inline void _1a93c7a48_StructLitChecker::_method_push_suggestion(jule::Str _75334_fmt,jule::Slice<jule::Any> _75347_args) {
	(*((*this)._field_e))._method_push_suggestion(_75334_fmt,_75347_args);
}



inline void _1a93c7a48_StructLitChecker::_method_push_match(jule::Ptr<_1dd0be530_FieldIns>& _75734_f,jule::Ptr<_1a94c333b_Data>& _75753_d,_1dd05db0c_Token& _75768_error_token) {
	(*this)._field_args = jule::alloc_for_append((*this)._field_args,1);(*this)._field_args.__push(jule::new_struct<_1ddb3c047_StructArgExprModel>(new( std::nothrow ) _1ddb3c047_StructArgExprModel(_75734_f,(*(_75753_d))._field_model)));
	
	if ((*((*((*this)._field_e))._field_s))._method_check_validity_for_init_expr((!((*((*this)._field_e))._field_immutable)),false,(*(_75734_f))._field_kind,_75753_d,_75768_error_token)) {
		(*((*((*this)._field_e))._field_s))._method_check_assign_type(false,(*(_75734_f))._field_kind,_75753_d,_75768_error_token);
	}
}



inline void _1a93c7a48_StructLitChecker::_method_check_pair(jule::Ptr<_1dd05c765_FieldExprPair>& _77034_pair,jule::Slice<jule::Any>& _77061_exprs) {
	jule::Ptr<_1dd0be530_FieldIns> _77217_f = (*((*this)._field_s))._method_find_field((*(_77034_pair))._field_field._field_kind);
	if (_77217_f == nullptr) {
		(*this)._method_push_err((*(_77034_pair))._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any((*(_77034_pair))._field_field._field_kind)}));
		return;
	}
	if ((!((*((*((*this)._field_e))._field_s))._method_is_accessible_define((*((*(_77217_f))._field_decl))._field_public,(*((*(_77217_f))._field_decl))._field_token)))) {
		(*this)._method_push_err((*(_77034_pair))._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any((*(_77034_pair))._field_field._field_kind)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	_julec_label_dup_lookup:;
	{
		auto &expr = _77061_exprs;
		auto it = expr.begin();
		_iter_begin_1a8994698:;
		if (it != expr.end()) {
			jule::Any _1a93c7a48_expr = *it;
			{
				{
					auto &_match_expr{ _1a93c7a48_expr };
					
					if (_match_expr.type_is<jule::Ptr<_1dd05c765_FieldExprPair>>()) {
						_case_begin_1a8994dd5:;
						{
							jule::Ptr<_1dd05c765_FieldExprPair> _78725_dpair = _1a93c7a48_expr.operator jule::Ptr<_1dd05c765_FieldExprPair>();
							{
								
								if (_77034_pair == _78725_dpair) {
									_case_begin_1a8995ba5:;
									{
										goto _iter_end_1a8994698;
									}
								}
								else if ((*(_77034_pair))._field_field._field_kind == (*(_78725_dpair))._field_field._field_kind) {
									_case_begin_1a8995c2c:;
									{
										(*this)._method_push_err((*(_77034_pair))._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any((*(_77034_pair))._field_field._field_kind)}));
										goto _iter_end_1a8994698;
									}
								}
								_match_end_1a8995aea:;
							}
						}
					}
					_match_end_1a8994c5e:;
				}
			}
			_iter_next_1a8994698:;
			++it;
			goto _iter_begin_1a8994698;
		}
		_iter_end_1a8994698:;
	}
	jule::Ptr<_1a5e40a26_TypeKind> _79817_prefix = (*((*this)._field_e))._field_prefix;
	__JULE_DEFER({
		(*((*this)._field_e))._field_prefix=_79817_prefix;
	});
	(*((*this)._field_e))._field_prefix=(*(_77217_f))._field_kind;
	jule::Ptr<_1a94c333b_Data> _80217_d = (*((*this)._field_e))._method_eval_expr_kind((*(_77034_pair))._field_expr);
	if (_80217_d == nullptr) {
		return;
	}
	(*this)._method_push_match(_77217_f,_80217_d,(*(_77034_pair))._field_field);
}



inline jule::Bool _1a93c7a48_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any>& _80935_exprs) {
	jule::Bool _81017_ok = true;
	{
		auto &expr = _80935_exprs;
		auto it = expr.begin();
		_iter_begin_1a899a11b:;
		if (it != expr.end()) {
			jule::Int _1a93c7a48_i = it - expr.begin();
			jule::Any _1a93c7a48_expr = *it;
			{
				{
					auto &_match_expr{ _1a93c7a48_expr };
					
					if (_match_expr.type_is<jule::Ptr<_1dd05c765_KeyValPair>>()) {
						_case_begin_1a899ab77:;
						{
							jule::Ptr<_1dd05c765_KeyValPair> _81425_pair = _1a93c7a48_expr.operator jule::Ptr<_1dd05c765_KeyValPair>();
							{
								auto &_match_expr{ (*(_81425_pair))._field_key };
								
								if (_match_expr.type_is<jule::Ptr<_1dd05c765_IdentExpr>>()) {
									_case_begin_1a899c717:;
								}
								else {
									_case_begin_1a899ba68:;
									{
										(*this)._method_push_err((*(_81425_pair))._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_81017_ok=false;
										goto _iter_next_1a899a11b;
									}
								}
								_match_end_1a899ba02:;
							}
							_80935_exprs.__at(_1a93c7a48_i)=jule::Any(jule::new_struct<_1dd05c765_FieldExprPair>(new( std::nothrow ) _1dd05c765_FieldExprPair((*((*(_81425_pair))._field_key.operator jule::Ptr<_1dd05c765_IdentExpr>()))._field_token,(*(_81425_pair))._field_val)));
						}
					}
					_match_end_1a899aa01:;
				}
			}
			_iter_next_1a899a11b:;
			++it;
			_1a93c7a48_i++;
			goto _iter_begin_1a899a11b;
		}
		_iter_end_1a899a11b:;
	}
	return _81017_ok;
}



inline void _1a93c7a48_StructLitChecker::_method_check(jule::Slice<jule::Any>& _83229_exprs) {
	if (_83229_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_83229_exprs)))) {
		return;
	}
	jule::Bool _84117_paired = false;
	{
		auto &expr = _83229_exprs;
		auto it = expr.begin();
		_iter_begin_1a899ea49:;
		if (it != expr.end()) {
			jule::Int _1a93c7a48_i = it - expr.begin();
			jule::Any _1a93c7a48_expr = *it;
			{
				{
					auto &_match_expr{ _1a93c7a48_expr };
					
					if (_match_expr.type_is<jule::Ptr<_1dd05c765_FieldExprPair>>()) {
						_case_begin_1a89a050b:;
						{
							jule::Ptr<_1dd05c765_FieldExprPair> _84525_pair = _1a93c7a48_expr.operator jule::Ptr<_1dd05c765_FieldExprPair>();
							if ((_1a93c7a48_i > 0LL) && (!(_84117_paired))) {
								(*this)._method_push_err((*(_84525_pair))._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							}
							_84117_paired=true;
							(*this)._method_check_pair(_84525_pair,_83229_exprs);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1dd05c765_Expr>>()) {
						_case_begin_1a89a0583:;
						{
							jule::Ptr<_1dd05c765_Expr> _85225_e = _1a93c7a48_expr.operator jule::Ptr<_1dd05c765_Expr>();
							if (_84117_paired) {
								(*this)._method_push_err((*(_85225_e))._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							}
							if (_1a93c7a48_i >= static_cast<jule::Int>((*((*this)._field_s))._field_fields.len())) {
								(*this)._method_push_err((*(_85225_e))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1a899ea49;
							}
							jule::Ptr<_1dd0be530_FieldIns> _86125_field = (*((*this)._field_s))._field_fields[_1a93c7a48_i];
							jule::Ptr<_1a5e40a26_TypeKind> _86325_prefix = (*((*this)._field_e))._field_prefix;
							__JULE_DEFER({
								(*((*this)._field_e))._field_prefix=_86325_prefix;
							});
							(*((*this)._field_e))._field_prefix=(*(_86125_field))._field_kind;
							jule::Ptr<_1a94c333b_Data> _86725_d = (*((*this)._field_e))._method_eval_expr_kind((*(_85225_e))._field_kind);
							if (_86725_d == nullptr) {
								goto _iter_next_1a899ea49;
							}
							(*this)._method_push_match(_86125_field,_86725_d,(*(_85225_e))._field_token);
						}
					}
					_match_end_1a89a0374:;
				}
			}
			_iter_next_1a899ea49:;
			++it;
			_1a93c7a48_i++;
			goto _iter_begin_1a899ea49;
		}
		_iter_end_1a899ea49:;
	}
	if ((!(_84117_paired))) {
		jule::Int _87817_n = (*((*this)._field_s))._field_fields.len();
		jule::Int _87921_diff = _87817_n - static_cast<jule::Int>(_83229_exprs.len());
		{
			
			if (_87921_diff <= 0LL) {
				_case_begin_1a89a7aeb:;
				{
					return;
				}
			}
			_match_end_1a89a79ec:;
		}
		jule::Str _88521_idents = jule::Str();
		for (; _87921_diff > 0LL; (_87921_diff)--) {
			{
				_88521_idents+=jule::Str(", ", 2) + (*((*((*((*this)._field_s))._field_fields[_87817_n - _87921_diff]))._field_decl))._field_ident;
			}
		_iter_next_1a89a7139:;
		}
		_iter_end_1a89a7139:;
		_88521_idents=_88521_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_88521_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a93c7a48_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline void _1a93c7a48_RetTypeChecker::_method_prepare_types(void) {
	if ((*this)._field_f != nullptr) {
		(*this)._field_types=_1a93c7a48_get_result_types((*((*this)._field_f))._field_result);
	}
}



inline void _1a93c7a48_RetTypeChecker::_method_prepare_exprs(jule::Ptr<_1dd05c765_Expr>& _106637_e) {
	if (_106637_e == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*(_106637_e))._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_TupleExpr>>()) {
			_case_begin_1a89cc9bc:;
			{
				(*this)._field_exprs=(*((*(_106637_e))._field_kind.operator jule::Ptr<_1dd05c765_TupleExpr>()))._field_expr;
			}
		}
		else {
			_case_begin_1a89cc5c1:;
			{
				(*this)._field_exprs = jule::alloc_for_append((*this)._field_exprs,1);(*this)._field_exprs.__push(_106637_e);
			}
		}
		_match_end_1a89cc0c6:;
	}
}



inline void _1a93c7a48_RetTypeChecker::_method_ret_vars(void) {
	if (((*this)._field_f == nullptr) || (*((*((*this)._field_f))._field_decl))._method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ptr<_1c3c3d174_Var>>::alloc(0LL,static_cast<jule::Int>((*((*((*((*this)._field_f))._field_decl))._field_result))._field_idents.len()));
	jule::Ptr<_1de0e938e_ScopeChecker> _108417_root_scope = (*((*this)._field_sc))._method_get_root();
	jule::Int _108617_j = 0LL;
	{
		auto &expr = (*((*((*((*this)._field_f))._field_decl))._field_result))._field_idents;
		auto it = expr.begin();
		_iter_begin_1a89d0eba:;
		if (it != expr.end()) {
			jule::Int _1a93c7a48_i = it - expr.begin();
			_1dd05db0c_Token _1a93c7a48_ident = *it;
			{
				if ((!(_1dd05db0c_is_ignore_ident(_1a93c7a48_ident._field_kind)))) {
					(*this)._field_vars = jule::alloc_for_append((*this)._field_vars,1);(*this)._field_vars.__push((*((*(_108417_root_scope))._field_table))._field_vars[_108617_j]);
					(_108617_j)++;
				} else {
					(*this)._field_vars = jule::alloc_for_append((*this)._field_vars,1);(*this)._field_vars.__push(jule::new_struct<_1c3c3d174_Var>(new( std::nothrow ) _1c3c3d174_Var(jule::Ptr<_1de0e938e_Scope>(),_1dd05db0c_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),(*this)._field_types[_1a93c7a48_i])),jule::Ptr<_1a94c333b_Value>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Slice<jule::Ptr<_1dd05c765_Directive>>(),jule::Ptr<_1c3c3d174_IterRelation>(),jule::Slice<jule::Ptr<_1c3c3d174_Var>>())));
				}
			}
			_iter_next_1a89d0eba:;
			++it;
			_1a93c7a48_i++;
			goto _iter_begin_1a89d0eba;
		}
		_iter_end_1a89d0eba:;
	}
	if (_108617_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _1a93c7a48_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ptr<_1a94c333b_Data>> _111017_datas = jule::Slice<jule::Ptr<_1a94c333b_Data>>::alloc(0LL,static_cast<jule::Int>((*this)._field_exprs.len()));
	{
		auto &expr = (*this)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a89d46a5:;
		if (it != expr.end()) {
			jule::Int _1a93c7a48_i = it - expr.begin();
			jule::Ptr<_1dd05c765_Expr> _1a93c7a48_expr = *it;
			{
				if (_1a93c7a48_i >= static_cast<jule::Int>((*this)._field_types.len())) {
					goto _iter_end_1a89d46a5;
				}
				jule::Ptr<_1a5e40a26_TypeKind> _111721_t = (*this)._field_types[_1a93c7a48_i];
				jule::Ptr<_1a94c333b_Data> _111921_d = (*((*((*((*this)._field_sc))._field_s))._method_evalp((*this)._field_sc,_111721_t)))._method_eval_expr(_1a93c7a48_expr);
				if (_111921_d == nullptr) {
					goto _iter_next_1a89d46a5;
				}
				_111017_datas = jule::alloc_for_append(_111017_datas,1);_111017_datas.__push(_111921_d);
				if ((!((*(_111921_d))._field_mutable)) && (*((*(_111921_d))._field_kind))._method_mutable()) {
					(*((*((*this)._field_sc))._field_s))._method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;
				}
				_1a93c7a48_AssignTypeChecker _113121_ac = _1a93c7a48_AssignTypeChecker((*((*this)._field_sc))._field_s,_111721_t,_111921_d,(*this)._field_error_token);
				_113121_ac._method_check();
			}
			_iter_next_1a89d46a5:;
			++it;
			_1a93c7a48_i++;
			goto _iter_begin_1a89d46a5;
		}
		_iter_end_1a89d46a5:;
	}
	if (_111017_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_1ddb3c047_TupleExprModel>(new( std::nothrow ) _1ddb3c047_TupleExprModel(_111017_datas)));
	} else if (_111017_datas.len() == 1LL) {
		(*this)._field_model=(*(_111017_datas[0LL]))._field_model;
	}
}



inline jule::Bool _1a93c7a48_RetTypeChecker::_method_check(jule::Ptr<_1dd05c765_Expr>& _115029_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_115029_e);
	(*this)._method_ret_vars();
	jule::Int _115513_n = (*this)._field_exprs.len();
	if ((_115513_n == 0LL) && ((*this)._field_types.len() > 0LL)) {
		if ((!((*((*((*this)._field_f))._field_decl))._method_any_var()))) {
			(*((*((*this)._field_sc))._field_s))._method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		}
		return true;
	}
	if (((_115513_n > 0LL) && ((*this)._field_f != nullptr)) && (*((*((*this)._field_f))._field_decl))._method_is_void()) {
		(*((*((*this)._field_sc))._field_s))._method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	}
	if (_115513_n > static_cast<jule::Int>((*this)._field_types.len())) {
		(*((*((*this)._field_sc))._field_s))._method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if (_115513_n < static_cast<jule::Int>((*this)._field_types.len())) {
		(*((*((*this)._field_sc))._field_s))._method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a93c7a48_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}



inline _1a94c333b_BinaryEval _1a94c333b_BinaryEval::_static_method_new_plain(jule::Ptr<_1a94c333b_Eval> _365329_e) {
	return _1a94c333b_BinaryEval(_365329_e,jule::Ptr<_1a94c333b_Data>(),jule::Ptr<_1a94c333b_Data>(),_1dd05db0c_Token());
}



inline _1a94c333b_BinaryEval _1a94c333b_BinaryEval::_static_method_new(jule::Ptr<_1a94c333b_Eval> _365923_e,_1dd05db0c_Token _365937_op) {
	return _1a94c333b_BinaryEval(_365923_e,jule::Ptr<_1a94c333b_Data>(),jule::Ptr<_1a94c333b_Data>(),_365937_op);
}



inline jule::Bool _1a94c333b_BinaryEval::_method_check_type_compatibility(void) {
	return (*((*((*this)._field_e))._field_s))._method_check_type_compatibility((*((*this)._field_l))._field_kind,(*((*this)._field_r))._field_kind,(*this)._field_op);
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_nil(void) {
	if ((!((*((*((*this)._field_r))._field_kind))._method_nil_compatible()))) {
		(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*((*((*this)._field_r))._field_kind))._method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8d241dc:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else {
			_case_begin_1a8d21a9c:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1a8d23065:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_enum(void) {
	jule::Ptr<_1de0dbeb9_Enum> _369317_enm = (*((*((*this)._field_l))._field_kind))._method_enm();
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8d2583c:;
			{
				jule::Ptr<_1a5e40a26_TypeKind> _369721_rkind = (*((*this)._field_r))._field_kind;
				if ((*((*((*this)._field_r))._field_kind))._method_enm() != nullptr) {
					_369721_rkind=(*((*((*((*((*this)._field_r))._field_kind))._method_enm()))._field_kind))._field_kind;
				}
				if ((!((*((*((*this)._field_e))._field_s))._method_check_type_compatibility((*((*(_369317_enm))._field_kind))._field_kind,_369721_rkind,(*this)._field_op)))) {
					return nullptr;
				}
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		_match_end_1a8d257d7:;
	}
	if (((*((*((*this)._field_r))._field_kind))._method_enm() == nullptr) || (_369317_enm != (*((*((*this)._field_r))._field_kind))._method_enm())) {
		(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any((*(_369317_enm))._field_ident),jule::Any((*((*((*this)._field_r))._field_kind))._method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a8d2bd71:;
			{
				if ((!(_1a6539949_is_num((*((*((*(_369317_enm))._field_kind))._field_kind))._method_to_str())))) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*(_369317_enm))._field_ident)}));
					return nullptr;
				}
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a8d2be2b:;
			{
				if (((*((*((*(_369317_enm))._field_kind))._field_kind))._method_prim() == nullptr) || (!(_1a6539949_is_int((*((*((*((*(_369317_enm))._field_kind))._field_kind))._method_prim()))._method_to_str())))) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*(_369317_enm))._field_ident)}));
				}
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_1a8d290b0:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*(_369317_enm))._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1a8d2ab1c:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_sptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8d338b1:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else {
			_case_begin_1a8d3232c:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
				return nullptr;
			}
		}
		_match_end_1a8d31e64:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_ptr(void) {
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a8d35d25:;
			{
				if ((!((*this)._method_check_type_compatibility()))) {
					return nullptr;
				}
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1a8d35e13:;
			{
				if ((*((*((*this)._field_l))._field_kind))._method_ptr() == nullptr) {
					std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				}
				if ((*((*((*((*this)._field_l))._field_kind))._method_ptr()))._method_is_unsafe()) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
				}
				if ((!(_1a94c333b_is_ptr_arithmetic_compatible_int((*this)._field_r)))) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>({jule::Any((*((*((*this)._field_r))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_1a8d32591:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
				return nullptr;
			}
		}
		_match_end_1a8d33eaa:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8d3cea3:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else {
			_case_begin_1a8d3b91e:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
				return nullptr;
			}
		}
		_match_end_1a8d3b556:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8d408ce:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else {
			_case_begin_1a8d3e328:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
				return nullptr;
			}
		}
		_match_end_1a8d3de4e:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8d432d8:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else {
			_case_begin_1a8d41c32:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
				return nullptr;
			}
		}
		_match_end_1a8d41858:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a8d45c58:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_gt == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a8d45d46:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_gt_eq == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a8d45dac:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_lt == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a8d44a6a:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_lt_eq == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a8d44ad1:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_shl == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a8d45b37:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_shr == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a8d45b9d:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_add == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a8d45e45:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_sub == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a8d45eab:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_div == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a8d46022:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_mul == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a8d46088:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_mod == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a8d460ee:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_bit_and == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a8d46165:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_bit_or == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a8d461cb:;
			{
				if ((*((*((*((*this)._field_l))._field_kind))._method_strct()))._field_operators._field_bit_xor == nullptr) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8d46242:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else {
			_case_begin_1a8d4463b:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
				return nullptr;
			}
		}
		_match_end_1a8d448b1:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8d654c5:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else {
			_case_begin_1a8d63e41:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
				return nullptr;
			}
		}
		_match_end_1a8d63a56:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_any(void) {
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8d676b4:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else {
			_case_begin_1a8d641a5:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1a8d65abe:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1a8d6a002:;
			{
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_1a8d6894b:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*((*((*this)._field_l))._field_kind))._method_to_str())}));
				return nullptr;
			}
		}
		_match_end_1a8d68572:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_str(void) {
	jule::Str _402517_rk = (*((*((*this)._field_r))._field_kind))._method_to_str();
	if (_402517_rk != jule::Str("str", 3)) {
		(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_402517_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a8d6d5aa:;
			{
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a8d6d621:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		else {
			_case_begin_1a8d6b3cc:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1a8d6c301:;
	}
}



inline void _1a94c333b_BinaryEval::_method_set_type_to_greater(void) {
	if ((*((*this)._field_l))._method_is_const()) {
		if ((!((*((*this)._field_r))._method_is_const()))) {
			(*((*this)._field_l))._field_kind=(*((*this)._field_r))._field_kind;
			return;
		}
		goto _julec_label_set;
	}
	if ((*((*this)._field_r))._method_is_const()) {
		return;
	}
	_julec_label_set:;
	if (_1a6470a8e_is_greater((*((*((*((*this)._field_r))._field_kind))._method_prim()))._field_kind,(*((*((*((*this)._field_l))._field_kind))._method_prim()))._field_kind)) {
		(*((*this)._field_l))._field_kind=(*((*this)._field_r))._field_kind;
	}
}



inline void _1a94c333b_BinaryEval::_method_check_mod_data(jule::Ptr<_1a94c333b_Data>& _406838_d) {
	if ((!((*(_406838_d))._method_is_const()))) {
		if (((*((*(_406838_d))._field_kind))._method_prim() == nullptr) || (!(_1a6539949_is_int((*((*((*(_406838_d))._field_kind))._method_prim()))._field_kind)))) {
			(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		}
		return;
	}
	{
		
		if (_1a93c7a48_sig_assignable(jule::Str("i64", 3),_406838_d)) {
			_case_begin_1a8d75c33:;
			{
				(*((*(_406838_d))._field_constant))._method_set_i64(static_cast<jule::I64>((*((*(_406838_d))._field_constant))._method_as_i64()));
			}
		}
		else if (_1a93c7a48_unsig_assignable(jule::Str("u64", 3),_406838_d)) {
			_case_begin_1a8d75a02:;
			{
				(*((*(_406838_d))._field_constant))._method_set_u64(static_cast<jule::U64>((*((*(_406838_d))._field_constant))._method_as_u64()));
			}
		}
		else {
			_case_begin_1a8d7589d:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8d75826:;
	}
}



inline void _1a94c333b_BinaryEval::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



inline jule::Bool _1a94c333b_BinaryEval::_method_numbers_are_compatibile(jule::Str& _409039_lk,jule::Str& _409049_rk) {
	if ((!(_1a6539949_is_num(_409049_rk)))) {
		return false;
	}
	if ((*((*this)._field_l))._method_is_const()) {
		return true;
	}
	if (_409039_lk == jule::Str("f32", 3)) {
		if ((*((*this)._field_r))._method_is_const()) {
			return true;
		}
		return _409049_rk == jule::Str("f32", 3);
	}
	if (_409039_lk == jule::Str("f64", 3)) {
		if ((*((*this)._field_r))._method_is_const()) {
			return true;
		}
		return _409049_rk == jule::Str("f64", 3);
	}
	if ((*((*this)._field_r))._method_is_const()) {
		return true;
	}
	return _409039_lk == _409049_rk;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_float(void) {
	jule::Str _412013_lk = (*((*((*((*this)._field_l))._field_kind))._method_prim()))._field_kind;
	jule::Str _412113_rk = (*((*((*((*this)._field_r))._field_kind))._method_prim()))._field_kind;
	if ((!((*this)._method_numbers_are_compatibile(_412013_lk,_412113_rk)))) {
		(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_412013_lk),jule::Any(_412113_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a8d80556:;
			{
				if ((!((*((*this)._field_l))._method_is_const())) || (!(_1a93c7a48_int_assignable(jule::Str("i64", 3),(*this)._field_l)))) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_412013_lk),jule::Any(_412113_rk)}));
					return nullptr;
				}
				if ((!((*((*this)._field_r))._method_is_const())) || (!(_1a93c7a48_int_assignable(jule::Str("u64", 3),(*this)._field_r)))) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_412013_lk),jule::Any(_412113_rk)}));
					return nullptr;
				}
				(*((*((*this)._field_l))._field_constant))._method_set_i64(static_cast<jule::I64>((*((*((*this)._field_l))._field_constant))._method_as_i64()));
				(*((*((*this)._field_r))._field_constant))._method_set_u64(static_cast<jule::U64>((*((*((*this)._field_r))._field_constant))._method_as_u64()));
				if ((!(_1a94c333b_is_ok_for_shifting((*this)._field_r)))) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		_match_end_1a8d80501:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a8d805bc:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		_match_end_1a8d862d7:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1a8d88163:;
			{
				(*this)._method_set_type_to_greater();
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a8d88251:;
			{
				if ((!(_1a6539949_is_int(_412113_rk)))) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_412013_lk),jule::Any(_412113_rk)}));
					return nullptr;
				}
				(*this)._method_mod();
				return (*this)._field_r;
			}
		}
		else {
			_case_begin_1a8d8767e:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8d86eca:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_int(void) {
	jule::Str _418413_lk = (*((*((*((*this)._field_l))._field_kind))._method_prim()))._field_kind;
	jule::Str _418513_rk = (*((*((*((*this)._field_r))._field_kind))._method_prim()))._field_kind;
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a8d8b92a:;
			{
				if ((!(_1a6539949_is_int(_418413_lk))) || (!(_1a6539949_is_int(_418513_rk)))) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_418413_lk),jule::Any(_418513_rk)}));
					return nullptr;
				}
				if ((!(_1a94c333b_is_ok_for_shifting((*this)._field_r)))) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		_match_end_1a8d8b8c5:;
	}
	if ((!((*this)._method_numbers_are_compatibile(_418413_lk,_418513_rk)))) {
		(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_418413_lk),jule::Any(_418513_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a8d90247:;
			{
				return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
			}
		}
		_match_end_1a8d90346:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a8d920e5:;
			{
				(*this)._method_set_type_to_greater();
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a8d921d3:;
			{
				(*this)._method_mod();
				(*this)._method_set_type_to_greater();
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_1a8d90434:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8c1eeea:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_prim(void) {
	jule::Ptr<_1a5e40a26_Prim> _424313_prim = (*((*((*this)._field_l))._field_kind))._method_prim();
	{
		
		if ((*(_424313_prim))._method_is_bool()) {
			_case_begin_1a8d94526:;
			{
				return (*this)._method_eval_bool();
			}
		}
		else if ((*(_424313_prim))._method_is_str()) {
			_case_begin_1a8d9459d:;
			{
				return (*this)._method_eval_str();
			}
		}
		_match_end_1a8d9446b:;
	}
	if ((*((*((*this)._field_r))._field_kind))._method_prim() == nullptr) {
		(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any((*(_424313_prim))._method_to_str()),jule::Any((*((*((*this)._field_r))._field_kind))._method_to_str())}));
		return nullptr;
	}
	{
		
		if (_1a6539949_is_float((*(_424313_prim))._field_kind)) {
			_case_begin_1a8d97606:;
			{
				return (*this)._method_eval_float();
			}
		}
		else if (_1a6539949_is_int((*(_424313_prim))._field_kind)) {
			_case_begin_1a8d976b1:;
			{
				return (*this)._method_eval_int();
			}
		}
		else {
			_case_begin_1a8d96d53:;
			{
				return nullptr;
			}
		}
		_match_end_1a8d96ced:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval_op(void) {
	{
		
		if ((*((*((*this)._field_l))._field_kind))._method_void()) {
			_case_begin_1a8d99141:;
			{
				(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((*((*((*this)._field_r))._field_kind))._method_prim() != nullptr) && (*((*((*((*this)._field_r))._field_kind))._method_prim()))._method_is_any()) {
			_case_begin_1a8d9922e:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_1a8d99295;
			}
		}
		else if (((*((*((*this)._field_l))._field_kind))._method_prim() != nullptr) && (*((*((*((*this)._field_l))._field_kind))._method_prim()))._method_is_any()) {
			_case_begin_1a8d99295:;
			{
				return (*this)._method_eval_any();
			}
		}
		else if ((*((*((*this)._field_l))._field_kind))._method_is_nil()) {
			_case_begin_1a8d98b79:;
			{
				return (*this)._method_eval_nil();
			}
		}
		else if ((*((*((*this)._field_r))._field_kind))._method_enm() != nullptr) {
			_case_begin_1a8d98be0:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_1a8d98c56;
			}
		}
		else if ((*((*((*this)._field_l))._field_kind))._method_enm() != nullptr) {
			_case_begin_1a8d98c56:;
			{
				return (*this)._method_eval_enum();
			}
		}
		else if ((*((*((*this)._field_r))._field_kind))._method_sptr() != nullptr) {
			_case_begin_1a8d98cbc:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_1a8d9932d;
			}
		}
		else if ((*((*((*this)._field_l))._field_kind))._method_sptr() != nullptr) {
			_case_begin_1a8d9932d:;
			{
				return (*this)._method_eval_sptr();
			}
		}
		else if ((*((*((*this)._field_r))._field_kind))._method_ptr() != nullptr) {
			_case_begin_1a8d99394:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_1a8d9940a;
			}
		}
		else if ((*((*((*this)._field_l))._field_kind))._method_ptr() != nullptr) {
			_case_begin_1a8d9940a:;
			{
				return (*this)._method_eval_ptr();
			}
		}
		else if ((*((*((*this)._field_l))._field_kind))._method_arr() != nullptr) {
			_case_begin_1a8d99471:;
			{
				return (*this)._method_eval_arr();
			}
		}
		else if ((*((*((*this)._field_l))._field_kind))._method_slc() != nullptr) {
			_case_begin_1a8d994d7:;
			{
				return (*this)._method_eval_slc();
			}
		}
		else if ((*((*((*this)._field_l))._field_kind))._method_fnc() != nullptr) {
			_case_begin_1a8d9954d:;
			{
				return (*this)._method_eval_fn();
			}
		}
		else if ((*((*((*this)._field_r))._field_kind))._method_trt() != nullptr) {
			_case_begin_1a8d995b4:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_1a8d9962a;
			}
		}
		else if ((*((*((*this)._field_l))._field_kind))._method_trt() != nullptr) {
			_case_begin_1a8d9962a:;
			{
				return (*this)._method_eval_trait();
			}
		}
		else if ((*((*((*this)._field_l))._field_kind))._method_strct() != nullptr) {
			_case_begin_1a8d996a2:;
			{
				return (*this)._method_eval_struct();
			}
		}
		else if ((*((*((*this)._field_l))._field_kind))._method_prim() != nullptr) {
			_case_begin_1a8d99729:;
			{
				return (*this)._method_eval_prim();
			}
		}
		else {
			_case_begin_1a8d98a25:;
			{
				return nullptr;
			}
		}
		_match_end_1a8d98959:;
	}
}



inline void _1a94c333b_BinaryEval::_method_eval_const(jule::Ptr<_1a94c333b_Data>& _431334_d) {
	{
		
		if (_431334_d == nullptr) {
			_case_begin_1a8da8c55:;
			{
				return;
			}
		}
		else if ((!((*((*this)._field_l))._method_is_const())) || (!((*((*this)._field_r))._method_is_const()))) {
			_case_begin_1a8da8ccc:;
			{
				(*(_431334_d))._field_constant=nullptr;
				return;
			}
		}
		_match_end_1a8da8b56:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1a8da9eed:;
			{
				(*(_431334_d))._field_constant=_1a64669ca_Const::_static_method_new_bool(((*((*((*this)._field_l))._field_constant)) == (*((*((*this)._field_r))._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8daa55e:;
			{
				(*(_431334_d))._field_constant=_1a64669ca_Const::_static_method_new_bool(((*((*((*this)._field_l))._field_constant)) != (*((*((*this)._field_r))._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("::", 2)) {
			_case_begin_1a8da9d66:;
			{
				(*(_431334_d))._field_constant=_1a64669ca_Const::_static_method_new_bool((*((*((*this)._field_l))._field_constant))._method_or((*((*((*this)._field_r))._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a8da9dcc:;
			{
				(*(_431334_d))._field_constant=_1a64669ca_Const::_static_method_new_bool((*((*((*this)._field_l))._field_constant))._method_and((*((*((*this)._field_r))._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a8da9e43:;
			{
				(*(_431334_d))._field_constant=_1a64669ca_Const::_static_method_new_bool(((*((*((*this)._field_l))._field_constant)) > (*((*((*this)._field_r))._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a8daa619:;
			{
				(*(_431334_d))._field_constant=_1a64669ca_Const::_static_method_new_bool(((*((*((*this)._field_l))._field_constant)) < (*((*((*this)._field_r))._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a8daa691:;
			{
				(*(_431334_d))._field_constant=_1a64669ca_Const::_static_method_new_bool(((*((*((*this)._field_l))._field_constant)) >= (*((*((*this)._field_r))._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a8daa718:;
			{
				(*(_431334_d))._field_constant=_1a64669ca_Const::_static_method_new_bool(((*((*((*this)._field_l))._field_constant)) <= (*((*((*this)._field_r))._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a8daa790:;
			{
				(*((*((*this)._field_l))._field_constant))._method_add((*((*((*this)._field_r))._field_constant)));
				(*(_431334_d))._field_constant=(*((*this)._field_l))._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a8daa817:;
			{
				(*((*((*this)._field_l))._field_constant))._method_sub((*((*((*this)._field_r))._field_constant)));
				(*(_431334_d))._field_constant=(*((*this)._field_l))._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a8daa88e:;
			{
				(*((*((*this)._field_l))._field_constant))._method_mul((*((*((*this)._field_r))._field_constant)));
				(*(_431334_d))._field_constant=(*((*this)._field_l))._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a8daa916:;
			{
				jule::Bool _435017_ok = (*((*((*this)._field_l))._field_constant))._method_div((*((*((*this)._field_r))._field_constant)));
				if ((!(_435017_ok)) && ((*((*((*this)._field_r))._field_constant))._method_as_f64() == 0LL)) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				(*(_431334_d))._field_constant=(*((*this)._field_l))._field_constant;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a8daa98d:;
			{
				jule::Bool _435617_ok = (*((*((*this)._field_l))._field_constant))._method_mod((*((*((*this)._field_r))._field_constant)));
				if ((!(_435617_ok)) && ((*((*((*this)._field_r))._field_constant))._method_as_f64() == 0LL)) {
					(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				(*(_431334_d))._field_constant=(*((*this)._field_l))._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a8daaa15:;
			{
				(*((*((*this)._field_l))._field_constant))._method_bitwise_or((*((*((*this)._field_r))._field_constant)));
				(*(_431334_d))._field_constant=(*((*this)._field_l))._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a8daaa8c:;
			{
				(*((*((*this)._field_l))._field_constant))._method_bitwise_and((*((*((*this)._field_r))._field_constant)));
				(*(_431334_d))._field_constant=(*((*this)._field_l))._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a8daab14:;
			{
				(*((*((*this)._field_l))._field_constant))._method_xor((*((*((*this)._field_r))._field_constant)));
				(*(_431334_d))._field_constant=(*((*this)._field_l))._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a8daab8b:;
			{
				(*((*((*this)._field_l))._field_constant))._method_lshift((*((*((*this)._field_r))._field_constant)));
				(*(_431334_d))._field_constant=(*((*this)._field_l))._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a8daac13:;
			{
				(*((*((*this)._field_l))._field_constant))._method_rshift((*((*((*this)._field_r))._field_constant)));
				(*(_431334_d))._field_constant=(*((*this)._field_l))._field_constant;
			}
		}
		_match_end_1a8daa509:;
	}
	(*(_431334_d))._field_model=jule::Any((*(_431334_d))._field_constant);
	_1a94c333b_apply_cast_model_by_enum(_431334_d,(*((*(_431334_d))._field_kind))._method_enm());
}



inline void _1a94c333b_BinaryEval::_method_check_data(jule::Ptr<_1a94c333b_Data>& _438234_d) {
	jule::Ptr<_1dded9702_FnIns> _438313_f = (*((*(_438234_d))._field_kind))._method_fnc();
	if (((_438313_f != nullptr) && ((*(_438313_f))._field_decl != nullptr)) && (*((*(_438313_f))._field_decl))._method_is_method()) {
		(*((*this)._field_e))._method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	}
}



inline void _1a94c333b_BinaryEval::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline void _1a94c333b_BinaryEval::_method_set_model(jule::Ptr<_1a94c333b_Data>& _439433_d) {
	if ((*(_439433_d))._method_is_const()) {
		return;
	}
	jule::Ptr<_1a94c333b_Data> _439918_l = (*this)._field_l;
	jule::Ptr<_1a94c333b_Data> _439925_r = (*this)._field_r;
	std::tie(_439918_l,_439925_r) = std::make_tuple((*this)._field_l,(*this)._field_r);
	if ((!((*(_439918_l))._method_good_operand(_439925_r)))) {
		std::tie(_439918_l,_439925_r) = std::make_tuple(_439925_r,_439918_l);
	}
	(*(_439433_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_BinopExprModel>(new( std::nothrow ) _1ddb3c047_BinopExprModel(jule::new_struct<_1ddb3c047_OperandExprModel>(new( std::nothrow ) _1ddb3c047_OperandExprModel((*(_439918_l))._field_kind,(*(_439918_l))._field_model)),jule::new_struct<_1ddb3c047_OperandExprModel>(new( std::nothrow ) _1ddb3c047_OperandExprModel((*(_439925_r))._field_kind,(*(_439925_r))._field_model)),(*this)._field_op)));
}



inline void _1a94c333b_BinaryEval::_method_post_eval(jule::Ptr<_1a94c333b_Data>& _441733_d) {
	(*(_441733_d))._field_lvalue=false;
	(*this)._method_set_model(_441733_d);
	(*((*this)._field_e))._method_apply_numeric_prefix(_441733_d);
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_solve_explicit(jule::Ptr<_1a94c333b_Data>& _442438_l,jule::Ptr<_1a94c333b_Data>& _442453_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_442438_l,_442453_r);
	(*this)._method_check_datas();
	jule::Ptr<_1a94c333b_Data> _442917_d = (*this)._method_eval_op();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_442438_l,_442453_r);
	(*this)._method_eval_const(_442917_d);
	if (_442917_d != nullptr) {
		(*(_442917_d))._field_mutable=true;
		(*this)._method_post_eval(_442917_d);
	}
	return _442917_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_BinaryEval::_method_eval(jule::Ptr<_1dd05c765_BinopExpr>& _444428_op) {
	if ((*(_444428_op))._field_op._field_kind == jule::Str("=", 1)) {
		(*((*this)._field_e))._method_push_err((*(_444428_op))._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		(*((*this)._field_e))._method_push_suggestion(jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a94c333b_Data> _445117_l = (*((*this)._field_e))._method_eval_expr_kind((*(_444428_op))._field_left);
	if ((_445117_l == nullptr) || ((*(_445117_l))._field_kind == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a5e40a26_TypeKind> _445617_prefix = (*((*this)._field_e))._field_prefix;
	(*((*this)._field_e))._field_prefix=(*(_445117_l))._field_kind;
	__JULE_DEFER({
		(*((*this)._field_e))._field_prefix=_445617_prefix;
	});
	jule::Ptr<_1a94c333b_Data> _445917_r = (*((*this)._field_e))._method_eval_expr_kind((*(_444428_op))._field_right);
	if ((_445917_r == nullptr) || ((*(_445917_r))._field_kind == nullptr)) {
		return nullptr;
	}
	(*this)._field_op=(*(_444428_op))._field_op;
	jule::Ptr<_1a94c333b_Data> _446617_d = (*this)._method_solve_explicit(_445117_l,_445917_r);
	if (((_446617_d != nullptr) && (*(_445117_l))._field_is_rune) && (*(_445917_r))._field_is_rune) {
		(*(_446617_d))._field_is_rune=true;
	}
	return _446617_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a94c333b_BinaryEval &_Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a5e40a26_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_IndexingExprModel &_Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_ParamDecl::_method_is_self(void) {
	return _1db822922_has_suffix((*this)._field_ident,jule::Str("self", 4));
}



inline jule::Bool _1dd05c765_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline void _1a5e40a26_TypeChecker::_method_push_err(_1dd05db0c_Token _70727_token,jule::Str _70741_fmt,jule::Slice<jule::Any> _70754_args) {
	(*((*this)._field_s))._method_push_err(_70727_token,_70741_fmt,_70754_args);
}



inline void _1a5e40a26_TypeChecker::_method_allow_builtin(void) {
	(*this)._field_dis_builtin=false;
}



inline void _1a5e40a26_TypeChecker::_method_disallow_builtin(void) {
	(*this)._field_dis_builtin=true;
}



inline jule::Ptr<_1a5e40a26_Prim> _1a5e40a26_TypeChecker::_method_build_prim(jule::Ptr<_1dd05c765_IdentTypeDecl>& _71930_decl) {
	if ((!(_1a5e40a26_is_prim((*(_71930_decl))._field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((*(_71930_decl))._field_generics.len() > 0LL) {
		(*this)._method_push_err((*(_71930_decl))._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any((*(_71930_decl))._field_ident)}));
		return nullptr;
	}
	return _1a5e40a26_build_prim_type((*(_71930_decl))._field_ident);
}



inline void _1a5e40a26_TypeChecker::_method_push_cycle_error(jule::Any _73331_def1,jule::Any _73342_def2,jule::Str& _73358_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _73613_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _73629_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _73629_def };
			
			if (_match_expr.type_is<jule::Ptr<_1a5e40a26_TypeAlias>>()) {
				_case_begin_1a8e3530e:;
				{
					return (*(_73629_def.operator jule::Ptr<_1a5e40a26_TypeAlias>()))._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
				_case_begin_1a8e351dd:;
				{
					return (*(_73629_def.operator jule::Ptr<_1dd0be530_Struct>()))._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1de0dbeb9_Enum>>()) {
				_case_begin_1a8e35254:;
				{
					return (*(_73629_def.operator jule::Ptr<_1de0dbeb9_Enum>()))._field_ident;
				}
			}
			else {
				_case_begin_1a8e34cc0:;
				{
					return jule::Str();
				}
			}
			_match_end_1a8e34be3:;
		}
	});
	jule::Str _74913_def1_ident = _73613_get_ident(_73331_def1);
	jule::Str _75013_def2_ident = _73613_get_ident(_73342_def2);
	jule::Str _75113_refers_to = _1db678789_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_74913_def1_ident),jule::Any(_75013_def2_ident)}));
	_73358_message=((_1db822922_repeat(jule::Str(" ", 1),4LL) + _75113_refers_to) + jule::Str("\n", 1)) + _73358_message;
}



inline jule::Bool _1a5e40a26_TypeChecker::_method_check_cross_cycle(jule::Any _75532_decl,jule::Str& _75548_message) {
	{
		auto &_match_expr{ _75532_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1a5e40a26_TypeAlias>>()) {
			_case_begin_1a8e38ac6:;
			{
				jule::Ptr<_1a5e40a26_TypeAlias> _75817_ta = _75532_decl.operator jule::Ptr<_1a5e40a26_TypeAlias>();
				{
					auto &expr = (*(_75817_ta))._field_refers;
					auto it = expr.begin();
					_iter_begin_1a8e399c8:;
					if (it != expr.end()) {
						jule::Any &_1a5e40a26_d = *it;
						{
							{
								
								if (_1a5e40a26_d == (*((*this)._field_referencer))._field_owner) {
									_case_begin_1a8e3a259:;
									{
										(*this)._method_push_cycle_error(jule::Any(_75817_ta),_1a5e40a26_d,_75548_message);
										return false;
									}
								}
								else if ((!((*this)._method_check_cross_cycle(_1a5e40a26_d,_75548_message)))) {
									_case_begin_1a8e3a2d1:;
									{
										(*this)._method_push_cycle_error(jule::Any(_75817_ta),_1a5e40a26_d,_75548_message);
										return false;
									}
								}
								_match_end_1a8e3a15a:;
							}
						}
						_iter_next_1a8e399c8:;
						++it;
						goto _iter_begin_1a8e399c8;
					}
					_iter_end_1a8e399c8:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
			_case_begin_1a8e38b4d:;
			{
				jule::Ptr<_1dd0be530_Struct> _77017_s = _75532_decl.operator jule::Ptr<_1dd0be530_Struct>();
				{
					auto &expr = (*(_77017_s))._field_depends;
					auto it = expr.begin();
					_iter_begin_1a8e39e29:;
					if (it != expr.end()) {
						jule::Ptr<_1dd0be530_Struct> &_1a5e40a26_d = *it;
						{
							{
								
								if ((*((*this)._field_referencer))._field_owner == jule::Any(_1a5e40a26_d)) {
									_case_begin_1a8e3cb85:;
									{
										(*this)._method_push_cycle_error(jule::Any(_77017_s),jule::Any(_1a5e40a26_d),_75548_message);
										return false;
									}
								}
								else if ((!((*this)._method_check_cross_cycle(jule::Any(_1a5e40a26_d),_75548_message)))) {
									_case_begin_1a8e3cc0c:;
									{
										(*this)._method_push_cycle_error(jule::Any(_77017_s),jule::Any(_1a5e40a26_d),_75548_message);
										return false;
									}
								}
								_match_end_1a8e3ca86:;
							}
						}
						_iter_next_1a8e39e29:;
						++it;
						goto _iter_begin_1a8e39e29;
					}
					_iter_end_1a8e39e29:;
				}
			}
		}
		_match_end_1a8e389d8:;
	}
	return true;
}



inline jule::Bool _1a5e40a26_TypeChecker::_method_check_illegal_cycles(jule::Ptr<_1dd05c765_IdentTypeDecl>& _78940_ident,jule::Any _78967_decl) {
	jule::Bool _78980_ok = jule::Bool();
	if ((*this)._field_referencer == nullptr) {
		_78980_ok = true;
		return _78980_ok;
	}
	{
		auto &_match_expr{ _78967_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
			_case_begin_1a8e4089c:;
			{
				if ((*this)._field_not_plain || (*(_78967_decl.operator jule::Ptr<_1dd0be530_Struct>()))._field_cpp_linked) {
					_78980_ok = true;
					return _78980_ok;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5e40a26_TypeAlias>>()) {
			_case_begin_1a8e404b2:;
			{
				if ((*(_78967_decl.operator jule::Ptr<_1a5e40a26_TypeAlias>()))._field_cpp_linked) {
					_78980_ok = true;
					return _78980_ok;
				}
			}
		}
		_match_end_1a8e40847:;
	}
	if (_78967_decl == (*((*this)._field_referencer))._field_owner) {
		(*this)._method_push_err((*(_78940_ident))._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*((*this)._field_referencer))._field_ident)}));
		_78980_ok = false;
		return _78980_ok;
	}
	jule::Str _81217_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_78967_decl,_81217_message)))) {
		jule::Str _81521_err_msg = _81217_message;
		_81217_message=jule::Str();
		(*this)._method_push_cycle_error((*((*this)._field_referencer))._field_owner,_78967_decl,_81217_message);
		_81521_err_msg=_81521_err_msg + _81217_message;
		(*this)._method_push_err((*(_78940_ident))._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_81521_err_msg)}));
		_78980_ok = false;
		return _78980_ok;
	}
	{
		auto &_match_expr{ (*((*this)._field_referencer))._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1a5e40a26_TypeAlias>>()) {
			_case_begin_1a8e454c8:;
			{
				{
					(*((*((*this)._field_referencer))._field_refs))=jule::append((*((*((*this)._field_referencer))._field_refs)),jule::Slice<jule::Any>({_78967_decl}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
			_case_begin_1a8e4553e:;
			{
				{
					auto &_match_expr{ _78967_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
						_case_begin_1a8e45b6b:;
						{
							jule::Ptr<_1dd0be530_Struct> _83125_s = (*((*this)._field_referencer))._field_owner.operator jule::Ptr<_1dd0be530_Struct>();
							(*(_83125_s))._field_depends = jule::alloc_for_append((*(_83125_s))._field_depends,1);(*(_83125_s))._field_depends.__push(_78967_decl.operator jule::Ptr<_1dd0be530_Struct>());
						}
					}
					_match_end_1a8e45b16:;
				}
			}
		}
		_match_end_1a8e4351a:;
	}
	_78980_ok = true;
	return _78980_ok;
}



inline jule::Trait<_1a5e40a26_Kind> _1a5e40a26_TypeChecker::_method_from_type_alias(jule::Ptr<_1dd05c765_IdentTypeDecl>& _83935_decl,jule::Ptr<_1a5e40a26_TypeAlias>& _83962_ta) {
	if ((!((*((*this)._field_s))._method_is_accessible_define((*(_83962_ta))._field_public,(*(_83962_ta))._field_token)))) {
		(*this)._method_push_err((*(_83935_decl))._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any((*(_83935_decl))._field_ident)}));
		return nullptr;
	}
	(*(_83962_ta))._field_used=true;
	if ((*(_83935_decl))._field_generics.len() > 0LL) {
		(*this)._method_push_err((*(_83935_decl))._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any((*(_83935_decl))._field_ident)}));
		return nullptr;
	}
	if ((!((*this)._field_inscatch)) && ((*this)._field_banned_generics != nullptr)) {
		(*this)._field_inscatch=true;
		{
			auto &expr = (*this)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1a8e4a1d1:;
			if (it != expr.end()) {
				jule::Ptr<_1a5e40a26_TypeAlias> _1a5e40a26_bg = *it;
				{
					if ((_1a5e40a26_bg == _83962_ta) || (((*((*(_83962_ta))._field_kind))._field_kind != nullptr) && (*((*((*(_83962_ta))._field_kind))._field_kind))._method_equals((*((*(_1a5e40a26_bg))._field_kind))._field_kind))) {
						(*this)._field_inscatch=false;
						goto _iter_end_1a8e4a1d1;
					}
				}
				_iter_next_1a8e4a1d1:;
				++it;
				goto _iter_begin_1a8e4a1d1;
			}
			_iter_end_1a8e4a1d1:;
		}
	}
	if ((*this)._field_inscatch) {
		{
			auto &expr = (*this)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1a8e4da20:;
			if (it != expr.end()) {
				jule::Ptr<_1a5e40a26_TypeAlias> _1a5e40a26_bg = *it;
				{
					if (_1a5e40a26_bg == _83962_ta) {
						(*this)._method_push_err((*(_83935_decl))._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any((*(_83935_decl))._field_ident)}));
						return nullptr;
					}
					{
						auto &expr = (*(_83962_ta))._field_generics;
						auto it = expr.begin();
						_iter_begin_1a8e4e2c3:;
						if (it != expr.end()) {
							jule::Ptr<_1a5e40a26_TypeAlias> _1a5e40a26_dg = *it;
							{
								if (_1a5e40a26_bg == _1a5e40a26_dg) {
									(*this)._method_push_err((*(_83935_decl))._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any((*(_83935_decl))._field_ident)}));
									return nullptr;
								}
							}
							_iter_next_1a8e4e2c3:;
							++it;
							goto _iter_begin_1a8e4e2c3;
						}
						_iter_end_1a8e4e2c3:;
					}
				}
				_iter_next_1a8e4da20:;
				++it;
				goto _iter_begin_1a8e4da20;
			}
			_iter_end_1a8e4da20:;
		}
	}
	jule::Bool _88117_ok = (*this)._method_check_illegal_cycles(_83935_decl,jule::Any(_83962_ta));
	if ((!(_88117_ok))) {
		return nullptr;
	}
	_88117_ok=(*((*this)._field_s))._method_check_type_alias_decl_kind(_83962_ta,(*this)._field_lookup);
	if ((!(_88117_ok))) {
		return nullptr;
	}
	if ((*(_83962_ta))._field_generic && ((*this)._field_owner_alias != nullptr)) {
		(*((*this)._field_owner_alias))._field_generics = jule::alloc_for_append((*((*this)._field_owner_alias))._field_generics,1);(*((*this)._field_owner_alias))._field_generics.__push(_83962_ta);
	}
	return jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind((((*(_83962_ta))._field_cpp_linked) ? ((*(_83962_ta))._field_ident) : ((*((*((*(_83962_ta))._field_kind))._field_kind))._field_cpp_ident)),(*(_83962_ta))._field_generic,jule::Bool(),(*((*((*(_83962_ta))._field_kind))._field_kind))._field_kind));
}



inline jule::Ptr<_1de0dbeb9_Enum> _1a5e40a26_TypeChecker::_method_from_enum(jule::Ptr<_1dd05c765_IdentTypeDecl>& _90529_decl,jule::Ptr<_1de0dbeb9_Enum>& _90556_e) {
	if ((!((*((*this)._field_s))._method_is_accessible_define((*(_90556_e))._field_public,(*(_90556_e))._field_token)))) {
		(*this)._method_push_err((*(_90529_decl))._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any((*(_90529_decl))._field_ident)}));
		return nullptr;
	}
	if ((*(_90529_decl))._field_generics.len() > 0LL) {
		(*this)._method_push_err((*(_90529_decl))._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any((*(_90529_decl))._field_ident)}));
		return nullptr;
	}
	return _90556_e;
}



inline jule::Ptr<_1de043c01_Trait> _1a5e40a26_TypeChecker::_method_from_trait(jule::Ptr<_1dd05c765_IdentTypeDecl>& _91730_decl,jule::Ptr<_1de043c01_Trait>& _91757_t) {
	if ((!((*((*this)._field_s))._method_is_accessible_define((*(_91757_t))._field_public,(*(_91757_t))._field_token)))) {
		(*this)._method_push_err((*(_91730_decl))._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any((*(_91730_decl))._field_ident)}));
		return nullptr;
	}
	if ((*(_91730_decl))._field_generics.len() > 0LL) {
		(*this)._method_push_err((*(_91730_decl))._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any((*(_91730_decl))._field_ident)}));
		return nullptr;
	}
	return _91757_t;
}



inline jule::Bool _1a5e40a26_TypeChecker::_method_check_struct_ins(jule::Ptr<_1dd0be530_StructIns>& _92940_ins,_1dd05db0c_Token& _92958_error_token) {
	jule::Bool _92980_ok = jule::Bool();
	if ((*(_92940_ins))._field_checked) {
		_92980_ok = true;
		return _92980_ok;
	}
	(*(_92940_ins))._field_checked=true;
	if (((*this)._field_referencer != nullptr) && ((*((*this)._field_referencer))._field_owner == jule::Any((*(_92940_ins))._field_decl))) {
		_92980_ok = true;
		return _92980_ok;
	}
	jule::Ptr<_1a943b749_SymbolTable> _94017_old_file = (*((*this)._field_s))._field_file;
	__JULE_DEFER({
		(*((*this)._field_s))._method_set_current_file(_94017_old_file);
	});
	jule::Ptr<_1a943b749_SymbolTable> _94317_file = _1c2c46634_find_file((*((*this)._field_s))._field_files,(*((*(_92940_ins))._field_decl))._field_token._field_file);
	if (_94317_file != nullptr) {
		(*((*this)._field_s))._method_set_current_file(_94317_file);
	}
	jule::Ptr<_1a5e40a26_Referencer> _94817_referencer = jule::new_struct<_1a5e40a26_Referencer>(new( std::nothrow ) _1a5e40a26_Referencer((*((*(_92940_ins))._field_decl))._field_ident,jule::Any((*(_92940_ins))._field_decl),nullptr));
	jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> _95317_generics = jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>::alloc(0LL,static_cast<jule::Int>((*(_92940_ins))._field_generics.len()));
	{
		auto &expr = (*(_92940_ins))._field_generics;
		auto it = expr.begin();
		_iter_begin_1a8e6123b:;
		if (it != expr.end()) {
			jule::Int _1a5e40a26_i = it - expr.begin();
			jule::Ptr<_1a5e40a26_TypeKind> _1a5e40a26_g = *it;
			{
				_95317_generics = jule::alloc_for_append(_95317_generics,1);_95317_generics.__push(jule::new_struct<_1a5e40a26_TypeAlias>(new( std::nothrow ) _1a5e40a26_TypeAlias(jule::Ptr<_1dd05c765_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1dd05db0c_Token(),(*((*((*(_92940_ins))._field_decl))._field_generics[_1a5e40a26_i]))._field_ident,jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),_1a5e40a26_g)),jule::Str(),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>())));
			}
			_iter_next_1a8e6123b:;
			++it;
			_1a5e40a26_i++;
			goto _iter_begin_1a8e6123b;
		}
		_iter_end_1a8e6123b:;
	}
	jule::Ptr<_1a943b749_SymbolTable> _96317_old_sema_file = (*((*((*(_92940_ins))._field_decl))._field_sema))._field_file;
	__JULE_DEFER({
		(*((*((*(_92940_ins))._field_decl))._field_sema))._method_set_current_file(_96317_old_sema_file);
	});
	_1a5e40a26_TypeChecker _96817_tc = _1a5e40a26_TypeChecker((*((*(_92940_ins))._field_decl))._field_sema,(*((*(_92940_ins))._field_decl))._field_sema,_94817_referencer,_1dd05db0c_Token(),jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>(),_95317_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeAlias>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>(),jule::Bool());
	{
		auto &expr = (*(_92940_ins))._field_fields;
		auto it = expr.begin();
		_iter_begin_1a8e6475b:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_FieldIns> _1a5e40a26_field = *it;
			{
				jule::Ptr<_1a5e40a26_TypeKind> _97721_kind = _96817_tc._method_check_decl((*((*((*(_1a5e40a26_field))._field_decl))._field_kind))._field_decl);
				_92980_ok=_97721_kind != nullptr;
				if ((((*((*(_92940_ins))._field_decl))._field_sema != nullptr) && ((*this)._field_s != (*((*(_92940_ins))._field_decl))._field_sema)) && ((*((*((*(_92940_ins))._field_decl))._field_sema))._field_errors.len() > 0LL)) {
					(*((*this)._field_s))._field_errors=jule::append((*((*this)._field_s))._field_errors,(*((*((*(_92940_ins))._field_decl))._field_sema))._field_errors);
					(*((*((*(_92940_ins))._field_decl))._field_sema))._field_errors=nullptr;
				}
				if ((!(_92980_ok))) {
					_92980_ok = false;
					return _92980_ok;
				}
				(*(_1a5e40a26_field))._field_kind=_97721_kind;
				if ((!((*((*(_1a5e40a26_field))._field_decl))._field_mutable)) && (*((*(_1a5e40a26_field))._field_kind))._method_mutable()) {
					(*(_92940_ins))._field_mutable=true;
					(*((*this)._field_s))._method_check_struct_ins_derive_clone(_92940_ins);
				}
			}
			_iter_next_1a8e6475b:;
			++it;
			goto _iter_begin_1a8e6475b;
		}
		_iter_end_1a8e6475b:;
	}
	if ((*(_92940_ins))._field_generics.len() > 0LL) {
		(*((*this)._field_s))._method_check_struct_ins(_92940_ins);
	}
	_92980_ok = true;
	return _92980_ok;
}



inline void _1a5e40a26_TypeChecker::_method_append_used_struct_reference(jule::Ptr<_1dd0be530_Struct>& _100352_s) {
	if ((*this)._field_referencer == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*((*this)._field_referencer))._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1dd0be530_Struct>>()) {
			_case_begin_1a8e6b477:;
			{
				jule::Ptr<_1dd0be530_Struct> _101021_ref_s = (*((*this)._field_referencer))._field_owner.operator jule::Ptr<_1dd0be530_Struct>();
				if ((!((*(_101021_ref_s))._method_is_uses(_100352_s)))) {
					(*(_101021_ref_s))._field_uses = jule::alloc_for_append((*(_101021_ref_s))._field_uses,1);(*(_101021_ref_s))._field_uses.__push(_100352_s);
				}
			}
		}
		_match_end_1a8e6b422:;
	}
}



inline jule::Ptr<_1dd0be530_StructIns> _1a5e40a26_TypeChecker::_method_build_struct_instance(jule::Ptr<_1dd05c765_IdentTypeDecl>& _101745_decl,jule::Ptr<_1dd0be530_Struct>& _101772_s) {
	jule::Ptr<_1a5e40a26_Referencer> _101917_referencer = (*this)._field_referencer;
	(*this)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> _102117_banned_generics = (*this)._field_banned_generics;
	if ((*this)._field_banned_generics == nullptr) {
		{
			auto &_match_expr{ (*this)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1de0e938e_ScopeChecker>>()) {
				_case_begin_1a8e6e843:;
				{
					jule::Ptr<_1de0e938e_ScopeChecker> _102825_sc = (*this)._field_lookup.operator jule::Ptr<_1de0e938e_ScopeChecker>();
					jule::Ptr<_1de0e938e_ScopeChecker> _102925_hard = (*(_102825_sc))._method_get_hard_root();
					if (((*((*(_102925_hard))._field_owner))._field_owner == nullptr) || ((*((*((*(_102925_hard))._field_owner))._field_owner))._field_decl != _101772_s)) {
						goto _match_end_1a8e6e744;
					}
					jule::Int _103321_n = (*((*(_102925_hard))._field_owner))._field_generics.len() + static_cast<jule::Int>((*((*((*(_102925_hard))._field_owner))._field_owner))._field_generics.len());
					(*this)._field_banned_generics=(*((*(_102925_hard))._field_table))._field_type_aliases.slice(0LL,_103321_n);
				}
			}
			_match_end_1a8e6e744:;
		}
	} else {
		(*this)._field_inscatch=true;
	}
	jule::Ptr<_1dd0be530_StructIns> _104317_ins = (*(_101772_s))._method_instance();
	(*(_104317_ins))._field_generics=jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>::alloc(0LL,static_cast<jule::Int>((*(_101745_decl))._field_generics.len()));
	{
		auto &expr = (*(_101745_decl))._field_generics;
		auto it = expr.begin();
		_iter_begin_1a8e73a45:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_TypeDecl> _1a5e40a26_g = *it;
			{
				jule::Ptr<_1a5e40a26_TypeKind> _104621_kind = (*this)._method_build((*(_1a5e40a26_g))._field_kind);
				if (_104621_kind == nullptr) {
					return nullptr;
				}
				(*(_104317_ins))._field_generics = jule::alloc_for_append((*(_104317_ins))._field_generics,1);(*(_104317_ins))._field_generics.__push(_104621_kind);
			}
			_iter_next_1a8e73a45:;
			++it;
			goto _iter_begin_1a8e73a45;
		}
		_iter_end_1a8e73a45:;
	}
	(*this)._field_banned_generics=_102117_banned_generics;
	(*this)._field_referencer=_101917_referencer;
	return _104317_ins;
}



inline jule::Ptr<_1dd0be530_StructIns> _1a5e40a26_TypeChecker::_method_from_struct(jule::Ptr<_1dd05c765_IdentTypeDecl>& _106035_decl,jule::Ptr<_1dd0be530_Struct>& _106062_s) {
	if ((!((*((*this)._field_s))._method_is_accessible_define((*(_106062_s))._field_public,(*(_106062_s))._field_token)))) {
		(*this)._method_push_err((*(_106035_decl))._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any((*(_106035_decl))._field_ident)}));
		return nullptr;
	}
	if ((*this)._field_selection) {
		if ((*(_106035_decl))._field_generics.len() > 0LL) {
			(*this)._method_push_err((*(_106035_decl))._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		}
		return jule::new_struct_ptr<_1dd0be530_StructIns>(new( std::nothrow ) _1dd0be530_StructIns(jule::Bool(),_106062_s,jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dd0be530_FieldIns>>(),jule::Slice<jule::Ptr<_1dded9702_Fn>>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),_1dd0be530_Operators()));
	}
	if (((*(_106062_s))._field_generics.len() > 0LL) && ((*this)._field_ignore_generics.len() > 0LL)) {
		return nullptr;
	}
	jule::Bool _108317_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_106035_decl,jule::Any(_106062_s));
	if ((!(_108317_ok))) {
		return nullptr;
	}
	(*this)._method_append_used_struct_reference(_106062_s);
	jule::Ptr<_1dd0be530_StructIns> _108917_ins = (*this)._method_build_struct_instance(_106035_decl,_106062_s);
	if (_108917_ins == nullptr) {
		return nullptr;
	}
	_108317_ok=(*((*this)._field_s))._method_check_generic_quantity(static_cast<jule::Int>((*((*(_108917_ins))._field_decl))._field_generics.len()),static_cast<jule::Int>((*(_108917_ins))._field_generics.len()),(*(_106035_decl))._field_token);
	if ((!(_108317_ok))) {
		return nullptr;
	}
	jule::Ptr<_1dd0be530_StructIns> _109917_exist_instance = (*(_106062_s))._method_append_instance(_108917_ins);
	if (_109917_exist_instance != nullptr) {
		return _109917_exist_instance;
	}
	_108317_ok=(*this)._method_check_struct_ins(_108917_ins,(*(_106035_decl))._field_token);
	if ((!(_108317_ok))) {
		return nullptr;
	}
	return _108917_ins;
}



inline jule::Trait<_1a5e40a26_Kind> _1a5e40a26_TypeChecker::_method_get_def(jule::Trait<_1a6336746_Lookup> _112126_l,jule::Ptr<_1dd05c765_IdentTypeDecl>& _112142_decl) {
	{
		auto &expr = (*this)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1a8e851b6:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_GenericDecl> _1a5e40a26_g = *it;
			{
				if ((*(_1a5e40a26_g))._field_ident == (*(_112142_decl))._field_ident) {
					return _1a5e40a26_build_prim_type((*(_1a5e40a26_g))._field_ident);
				}
			}
			_iter_next_1a8e851b6:;
			++it;
			goto _iter_begin_1a8e851b6;
		}
		_iter_end_1a8e851b6:;
	}
	{
		auto &expr = (*this)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1a8e85947:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e40a26_TypeAlias> _1a5e40a26_g = *it;
			{
				if ((*(_1a5e40a26_g))._field_ident == (*(_112142_decl))._field_ident) {
					jule::Ptr<_1dd0be530_StructIns> _113025_st = (*((*((*(_1a5e40a26_g))._field_kind))._field_kind))._method_strct();
					if (_113025_st != nullptr) {
						jule::Bool _113225_ok = (*this)._method_check_illegal_cycles(_112142_decl,jule::Any((*(_113025_st))._field_decl));
						if ((!(_113225_ok))) {
							return nullptr;
						}
					}
					return (*((*((*(_1a5e40a26_g))._field_kind))._field_kind))._field_kind;
				}
			}
			_iter_next_1a8e85947:;
			++it;
			goto _iter_begin_1a8e85947;
		}
		_iter_end_1a8e85947:;
	}
	if ((!((*(_112142_decl))._field_cpp_linked))) {
		jule::Ptr<_1de0dbeb9_Enum> _114221_e = _112126_l.get()._method_find_enum((*(_112142_decl))._field_ident);
		if (_114221_e != nullptr) {
			return (*this)._method_from_enum(_112142_decl,_114221_e);
		}
		jule::Ptr<_1de043c01_Trait> _114721_t = _112126_l.get()._method_find_trait((*(_112142_decl))._field_ident);
		if ((_114721_t == nullptr) && (!((*this)._field_dis_builtin))) {
			_114721_t=_1a634ca26_find_builtin_trait((*(_112142_decl))._field_ident);
		}
		if (_114721_t != nullptr) {
			return (*this)._method_from_trait(_112142_decl,_114721_t);
		}
	} else if ((*this)._field_selection) {
		(*this)._method_push_err((*(_112142_decl))._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1dd0be530_Struct> _115917_s = _112126_l.get()._method_find_struct((*(_112142_decl))._field_ident,(*(_112142_decl))._field_cpp_linked);
	if (_115917_s != nullptr) {
		return (*this)._method_from_struct(_112142_decl,_115917_s);
	}
	jule::Ptr<_1a5e40a26_TypeAlias> _116417_ta = _112126_l.get()._method_find_type_alias((*(_112142_decl))._field_ident,(*(_112142_decl))._field_cpp_linked);
	if ((_116417_ta == nullptr) && (!((*this)._field_dis_builtin))) {
		_116417_ta=_1a634ca26_find_builtin_type_alias((*(_112142_decl))._field_ident);
	}
	if (_116417_ta != nullptr) {
		return (*this)._method_from_type_alias(_112142_decl,_116417_ta);
	}
	(*this)._method_push_err((*(_112142_decl))._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any((*(_112142_decl))._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1a5e40a26_Kind> _1a5e40a26_TypeChecker::_method_build_ident(jule::Ptr<_1dd05c765_IdentTypeDecl> _117634_decl) {
	{
		
		if (_1a5e40a26_is_prim((*(_117634_decl))._field_ident)) {
			_case_begin_1a8e91ea3:;
			{
				return (*this)._method_build_prim(_117634_decl);
			}
		}
		else {
			_case_begin_1a8e91887:;
			{
				return (*this)._method_get_def((*this)._field_lookup,_117634_decl);
			}
		}
		_match_end_1a8e917bb:;
	}
}



inline jule::Ptr<_1a5e40a26_Sptr> _1a5e40a26_TypeChecker::_method_build_sptr_from_type(jule::Ptr<_1a5e40a26_TypeKind>& _118544_elem) {
	{
		
		if (_118544_elem == nullptr) {
			_case_begin_1a8e9301a:;
			{
				return nullptr;
			}
		}
		else if ((*(_118544_elem))._method_strct() != nullptr) {
			_case_begin_1a8e93081:;
			{
				jule::Ptr<_1dd0be530_StructIns> _119217_s = (*(_118544_elem))._method_strct();
				if (((*(_119217_s))._field_decl != nullptr) && (*((*(_119217_s))._field_decl))._field_cpp_linked) {
					(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
		}
		else if (((*(_118544_elem))._method_arr() != nullptr) && (*((*(_118544_elem))._method_arr()))._field_auto) {
			_case_begin_1a8e930e7:;
			{
				(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a8e92ea4:;
	}
	return jule::new_struct_ptr<_1a5e40a26_Sptr>(new( std::nothrow ) _1a5e40a26_Sptr(_118544_elem));
}



inline jule::Ptr<_1a5e40a26_Sptr> _1a5e40a26_TypeChecker::_method_build_sptr(jule::Ptr<_1dd05c765_SptrTypeDecl> _120833_decl) {
	jule::Bool _120913_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_120913_not_plain;
	});
	jule::Ptr<_1a5e40a26_TypeKind> _121317_elem = (*this)._method_check_decl((*(_120833_decl))._field_elem);
	return (*this)._method_build_sptr_from_type(_121317_elem);
}



inline jule::Ptr<_1a5e40a26_Ptr> _1a5e40a26_TypeChecker::_method_build_ptr_from_type(jule::Ptr<_1a5e40a26_TypeKind>& _121743_elem) {
	{
		
		if (_121743_elem == nullptr) {
			_case_begin_1a8e98ce0:;
			{
				return nullptr;
			}
		}
		else if (((*(_121743_elem))._method_arr() != nullptr) && (*((*(_121743_elem))._method_arr()))._field_auto) {
			_case_begin_1a8e98d67:;
			{
				(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1a5e40a26_Ptr>();
			}
		}
		_match_end_1a8e98be1:;
	}
	return jule::new_struct_ptr<_1a5e40a26_Ptr>(new( std::nothrow ) _1a5e40a26_Ptr(_121743_elem));
}



inline jule::Ptr<_1a5e40a26_Ptr> _1a5e40a26_TypeChecker::_method_build_ptr(jule::Ptr<_1dd05c765_PtrTypeDecl> _123332_decl) {
	jule::Bool _123413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_123413_not_plain;
	});
	jule::Ptr<_1a5e40a26_TypeKind> _123817_elem = nullptr;
	if ((!((*(_123332_decl))._method_is_unsafe()))) {
		_123817_elem=(*this)._method_check_decl((*(_123332_decl))._field_elem);
		return (*this)._method_build_ptr_from_type(_123817_elem);
	}
	return jule::new_struct_ptr<_1a5e40a26_Ptr>(new( std::nothrow ) _1a5e40a26_Ptr(_123817_elem));
}



inline jule::Ptr<_1a5e40a26_Slc> _1a5e40a26_TypeChecker::_method_build_slc(jule::Ptr<_1dd05c765_SlcTypeDecl> _125032_decl) {
	jule::Bool _125113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_125113_not_plain;
	});
	jule::Ptr<_1a5e40a26_TypeKind> _125517_elem = (*this)._method_check_decl((*(_125032_decl))._field_elem);
	{
		
		if (_125517_elem == nullptr) {
			_case_begin_1a8e9ee6c:;
			{
				return nullptr;
			}
		}
		else if (((*(_125517_elem))._method_arr() != nullptr) && (*((*(_125517_elem))._method_arr()))._field_auto) {
			_case_begin_1a8e9eee4:;
			{
				(*this)._method_push_err((*((*(_125032_decl))._field_elem))._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a8e9edb2:;
	}
	return jule::new_struct_ptr<_1a5e40a26_Slc>(new( std::nothrow ) _1a5e40a26_Slc(_125517_elem));
}



inline jule::Ptr<_1a5e40a26_Arr> _1a5e40a26_TypeChecker::_method_build_arr(jule::Ptr<_1dd05c765_ArrTypeDecl> _127232_decl) {
	jule::Bool _127313_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_127313_not_plain;
	});
	jule::Int _127717_n = 0LL;
	if ((!((*(_127232_decl))._method_auto_sized()))) {
		jule::Ptr<_1a94c333b_Data> _128021_size = (*((*((*this)._field_s))._method_eval((*this)._field_lookup)))._method_eval_expr((*(_127232_decl))._field_size);
		if (_128021_size == nullptr) {
			return nullptr;
		}
		if ((!((*(_128021_size))._method_is_const()))) {
			(*this)._method_push_err((*((*(_127232_decl))._field_size))._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((*((*(_128021_size))._field_kind))._method_prim() == nullptr) || (!(_1a6539949_is_int((*((*((*(_128021_size))._field_kind))._method_prim()))._field_kind)))) {
			(*this)._method_push_err((*((*(_127232_decl))._field_size))._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		}
		_127717_n=static_cast<jule::Int>(static_cast<jule::Int>((*((*(_128021_size))._field_constant))._method_as_i64()));
		if (_127717_n < 0LL) {
			(*this)._method_push_err((*((*(_127232_decl))._field_elem))._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	jule::Ptr<_1a5e40a26_TypeKind> _130017_elem = (*this)._method_check_decl((*(_127232_decl))._field_elem);
	{
		
		if (_130017_elem == nullptr) {
			_case_begin_1a8ea962a:;
			{
				return nullptr;
			}
		}
		else if (((*(_130017_elem))._method_arr() != nullptr) && (*((*(_130017_elem))._method_arr()))._field_auto) {
			_case_begin_1a8ea9691:;
			{
				(*this)._method_push_err((*((*(_127232_decl))._field_elem))._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a8ea9482:;
	}
	return jule::new_struct_ptr<_1a5e40a26_Arr>(new( std::nothrow ) _1a5e40a26_Arr((*(_127232_decl))._method_auto_sized(),_127717_n,_130017_elem));
}



inline jule::Ptr<_1a5e40a26_Map> _1a5e40a26_TypeChecker::_method_build_map(jule::Ptr<_1dd05c765_MapTypeDecl> _131932_decl) {
	jule::Bool _132013_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_132013_not_plain;
	});
	jule::Ptr<_1a5e40a26_TypeKind> _132417_key = (*this)._method_check_decl((*(_131932_decl))._field_key);
	if (_132417_key == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1a5e40a26_TypeKind> _132917_val = (*this)._method_check_decl((*(_131932_decl))._field_val);
	if (_132917_val == nullptr) {
		return nullptr;
	}
	if ((*(_132917_val))._method_enm() != nullptr) {
		(*this)._method_push_err((*((*(_131932_decl))._field_val))._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	}
	return jule::new_struct_ptr<_1a5e40a26_Map>(new( std::nothrow ) _1a5e40a26_Map(_132417_key,_132917_val));
}



inline jule::Ptr<_1a5e40a26_Tuple> _1a5e40a26_TypeChecker::_method_build_tuple(jule::Ptr<_1dd05c765_TupleTypeDecl> _134334_decl) {
	jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>> _134417_types = jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>::alloc(0LL,static_cast<jule::Int>((*(_134334_decl))._field_types.len()));
	{
		auto &expr = (*(_134334_decl))._field_types;
		auto it = expr.begin();
		_iter_begin_1a8eb17ca:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_TypeDecl> _1a5e40a26_t = *it;
			{
				jule::Ptr<_1a5e40a26_TypeKind> _134621_kind = (*this)._method_check_decl(_1a5e40a26_t);
				if (_134621_kind == nullptr) {
					return nullptr;
				}
				_134417_types = jule::alloc_for_append(_134417_types,1);_134417_types.__push(_134621_kind);
			}
			_iter_next_1a8eb17ca:;
			++it;
			goto _iter_begin_1a8eb17ca;
		}
		_iter_end_1a8eb17ca:;
	}
	return jule::new_struct_ptr<_1a5e40a26_Tuple>(new( std::nothrow ) _1a5e40a26_Tuple(_134417_types));
}



inline jule::Bool _1a5e40a26_TypeChecker::_method_check_fn_types(jule::Ptr<_1dded9702_FnIns>& _135638_f) {
	jule::Bool _135651_ok = jule::Bool();
	{
		auto &expr = (*(_135638_f))._field_params;
		auto it = expr.begin();
		_iter_begin_1a8eb3aa7:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_ParamIns> _1a5e40a26_p = *it;
			{
				(*(_1a5e40a26_p))._field_kind=(*this)._method_build((*((*((*((*(_1a5e40a26_p))._field_decl))._field_kind))._field_decl))._field_kind);
				_135651_ok=(*(_1a5e40a26_p))._field_kind != nullptr;
				if ((!(_135651_ok))) {
					_135651_ok = false;
					return _135651_ok;
				}
			}
			_iter_next_1a8eb3aa7:;
			++it;
			goto _iter_begin_1a8eb3aa7;
		}
		_iter_end_1a8eb3aa7:;
	}
	if ((!((*((*(_135638_f))._field_decl))._method_is_void()))) {
		(*(_135638_f))._field_result=(*this)._method_build((*((*((*((*((*(_135638_f))._field_decl))._field_result))._field_kind))._field_decl))._field_kind);
		_135651_ok = (*(_135638_f))._field_result != nullptr;
		return _135651_ok;
	}
	_135651_ok = true;
	return _135651_ok;
}



inline jule::Ptr<_1dded9702_FnIns> _1a5e40a26_TypeChecker::_method_build_fn(jule::Ptr<_1dd05c765_FnDecl> _137331_decl) {
	if ((*(_137331_decl))._field_generics.len() > 0LL) {
		(*this)._method_push_err((*(_137331_decl))._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1dded9702_Fn> _137917_f = _1dded9779_build_fn(_137331_decl);
	jule::Ptr<_1dded9702_FnIns> _138017_ins = (*(_137917_f))._method_instance_force();
	(*(_138017_ins))._field_anon=true;
	jule::Bool _138313_ok = (*this)._method_check_fn_types(_138017_ins);
	if ((!(_138313_ok))) {
		return nullptr;
	}
	return _138017_ins;
}



inline jule::Trait<_1a5e40a26_Kind> _1a5e40a26_TypeChecker::_method_build_by_namespace(jule::Ptr<_1dd05c765_NamespaceTypeDecl> _139141_decl) {
	jule::Str _139213_path = _1a5e40a26_build_link_path_by_tokens((*(_139141_decl))._field_idents);
	jule::Ptr<_1c2c4607e_ImportInfo> _139317_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_1c2c4607e_ImportInfo>)>([=](jule::Ptr<_1c2c4607e_ImportInfo> _139353_imp) mutable -> jule::Bool {
		if (((*(_139141_decl))._field_idents.len() == 1LL) && ((*(_139353_imp))._field_alias == _139213_path)) {
			return true;
		}
		return ((*(_139353_imp))._field_link_path == _139213_path) && (*(_139353_imp))._method_is_accessible_via_selection();
	}));
	if ((_139317_imp == nullptr) || (!((*(_139317_imp))._method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err((*(_139141_decl))._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_139213_path)}));
		return nullptr;
	}
	(*this)._method_disallow_builtin();
	jule::Trait<_1a5e40a26_Kind> _140617_kind = (*this)._method_get_def(_139317_imp,(*(_139141_decl))._field_kind);
	(*this)._method_allow_builtin();
	return _140617_kind;
}



inline jule::Ptr<_1a5e40a26_TypeKind> _1a5e40a26_TypeChecker::_method_build(jule::Any& _141229_decl_kind) {
	jule::Trait<_1a5e40a26_Kind> _141317_kind = nullptr;
	{
		auto &_match_expr{ _141229_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5e40a26_TypeKind>>()) {
			_case_begin_1a8ec0bd5:;
			{
				_141317_kind=_141229_decl_kind.operator jule::Ptr<_1a5e40a26_TypeKind>();
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_IdentTypeDecl>>()) {
			_case_begin_1a8ec1d29:;
			{
				jule::Trait<_1a5e40a26_Kind> _141821_t = (*this)._method_build_ident(_141229_decl_kind.operator jule::Ptr<_1dd05c765_IdentTypeDecl>());
				if (_141821_t != nullptr) {
					_141317_kind=_141821_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_SptrTypeDecl>>()) {
			_case_begin_1a8ec1d90:;
			{
				(*this)._field_inscatch=true;
				jule::Ptr<_1a5e40a26_Sptr> _142421_t = (*this)._method_build_sptr(_141229_decl_kind.operator jule::Ptr<_1dd05c765_SptrTypeDecl>());
				if (_142421_t != nullptr) {
					_141317_kind=_142421_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_PtrTypeDecl>>()) {
			_case_begin_1a8ec1b1a:;
			{
				(*this)._field_inscatch=true;
				jule::Ptr<_1a5e40a26_Ptr> _143021_t = (*this)._method_build_ptr(_141229_decl_kind.operator jule::Ptr<_1dd05c765_PtrTypeDecl>());
				if (_143021_t != nullptr) {
					_141317_kind=_143021_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_SlcTypeDecl>>()) {
			_case_begin_1a8ec1b81:;
			{
				(*this)._field_inscatch=true;
				jule::Ptr<_1a5e40a26_Slc> _143621_t = (*this)._method_build_slc(_141229_decl_kind.operator jule::Ptr<_1dd05c765_SlcTypeDecl>());
				if (_143621_t != nullptr) {
					_141317_kind=_143621_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_ArrTypeDecl>>()) {
			_case_begin_1a8ec1103:;
			{
				(*this)._field_inscatch=true;
				jule::Ptr<_1a5e40a26_Arr> _144221_t = (*this)._method_build_arr(_141229_decl_kind.operator jule::Ptr<_1dd05c765_ArrTypeDecl>());
				if (_144221_t != nullptr) {
					_141317_kind=_144221_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_MapTypeDecl>>()) {
			_case_begin_1a8ec1169:;
			{
				(*this)._field_inscatch=true;
				jule::Ptr<_1a5e40a26_Map> _144821_t = (*this)._method_build_map(_141229_decl_kind.operator jule::Ptr<_1dd05c765_MapTypeDecl>());
				if (_144821_t != nullptr) {
					_141317_kind=_144821_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_TupleTypeDecl>>()) {
			_case_begin_1a8ec11d0:;
			{
				(*this)._field_inscatch=true;
				jule::Ptr<_1a5e40a26_Tuple> _145421_t = (*this)._method_build_tuple(_141229_decl_kind.operator jule::Ptr<_1dd05c765_TupleTypeDecl>());
				if (_145421_t != nullptr) {
					_141317_kind=_145421_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_FnDecl>>()) {
			_case_begin_1a8ec1257:;
			{
				(*this)._field_inscatch=true;
				jule::Ptr<_1dded9702_FnIns> _146021_t = (*this)._method_build_fn(_141229_decl_kind.operator jule::Ptr<_1dd05c765_FnDecl>());
				if (_146021_t != nullptr) {
					_141317_kind=_146021_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_NamespaceTypeDecl>>()) {
			_case_begin_1a8ec1e28:;
			{
				(*this)._field_inscatch=true;
				jule::Trait<_1a5e40a26_Kind> _146621_t = (*this)._method_build_by_namespace(_141229_decl_kind.operator jule::Ptr<_1dd05c765_NamespaceTypeDecl>());
				if (_146621_t != nullptr) {
					_141317_kind=_146621_t;
				}
			}
		}
		else {
			_case_begin_1a8ec0e9e:;
			{
				(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a8ec0e27:;
	}
	if (_141317_kind == nullptr) {
		return nullptr;
	}
	{
		auto &_match_expr{ _141317_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5e40a26_TypeKind>>()) {
			_case_begin_1a8ecc560:;
			{
				return _141317_kind.operator jule::Ptr<_1a5e40a26_TypeKind>();
			}
		}
		else {
			_case_begin_1a8ecb350:;
			{
				return jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_141317_kind));
			}
		}
		_match_end_1a8eccce1:;
	}
}



inline jule::Ptr<_1a5e40a26_TypeKind> _1a5e40a26_TypeChecker::_method_check_decl(jule::Ptr<_1dd05c765_TypeDecl>& _148734_decl) {
	_1dd05db0c_Token _148917_error_token = (*this)._field_error_token;
	(*this)._field_error_token=(*(_148734_decl))._field_token;
	jule::Ptr<_1a5e40a26_TypeKind> _149217_kind = (*this)._method_build((*(_148734_decl))._field_kind);
	(*this)._field_error_token=_148917_error_token;
	return _149217_kind;
}



inline void _1a5e40a26_TypeChecker::_method_check(jule::Ptr<_1a5e40a26_TypeSymbol>& _149829_t) {
	if ((*(_149829_t))._field_decl == nullptr) {
		return;
	}
	jule::Ptr<_1a5e40a26_TypeKind> _150217_kind = (*this)._method_check_decl((*(_149829_t))._field_decl);
	if (_150217_kind == nullptr) {
		(*(_149829_t))._method_remove_kind();
		return;
	}
	(*(_149829_t))._field_kind=_150217_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a5e40a26_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_Iter::_method_is_inf(void) {
	return (*this)._field_kind == jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1dcecd043_IR>,jule::Slice<_1db678789_Log>> _1dcecd043_IR::_static_method_build(jule::Str _2825_path,jule::Int _2836_flags) {
	jule::Ptr<_1dd023275_PlainImporter> _2917_importer = _1dd023275_PlainImporter::_static_method_new();
	jule::Slice<jule::Ptr<_1dd05b9c8_Ast>> _3018_files;
	jule::Slice<_1db678789_Log> _3029_logs;
	std::tie(_3018_files,_3029_logs) = (*(_2917_importer))._method_import_package(_2825_path,true);
	if (_3029_logs.len() > 0LL) {
		return std::make_tuple(nullptr,_3029_logs);
	}
	jule::Str _3413_root = _2825_path;
	if (_3018_files.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1c2c4607e_Package> _4018_pkg;
	std::tie(_4018_pkg,_3029_logs) = _1a633736d_analyze_package(_3018_files,_2917_importer,_2836_flags);
	if (_3029_logs.len() > 0LL) {
		return std::make_tuple(nullptr,_3029_logs);
	}
	jule::Ptr<_1dcecd043_IR> _4517_ir = jule::new_struct<_1dcecd043_IR>(new( std::nothrow ) _1dcecd043_IR(_3413_root,jule::Slice<jule::Str>(),_4018_pkg,(*(_2917_importer))._field_all_packages,_1dcebc175_OrderedDefines()));
	(*(_4517_ir))._field_passes=_1dcecd043_get_all_unique_passes((*(_4517_ir))._field_main,(*(_4517_ir))._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1dcecd043_IR::_method_append_structs(jule::Ptr<_1c2c4607e_Package>& _5734_p,jule::Slice<jule::Ptr<_1dd0be530_Struct>>& _5758_buffer) {
	{
		auto &expr = (*(_5734_p))._field_files;
		auto it = expr.begin();
		_iter_begin_1a91dc8a2:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1dcecd043_f = *it;
			{
				{
					auto &expr = (*(_1dcecd043_f))._field_structs;
					auto it = expr.begin();
					_iter_begin_1a91dd221:;
					if (it != expr.end()) {
						jule::Ptr<_1dd0be530_Struct> _1dcecd043_s = *it;
						{
							if ((!((*(_1dcecd043_s))._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_1dcecd043_s);
							}
						}
						_iter_next_1a91dd221:;
						++it;
						goto _iter_begin_1a91dd221;
					}
					_iter_end_1a91dd221:;
				}
			}
			_iter_next_1a91dc8a2:;
			++it;
			goto _iter_begin_1a91dc8a2;
		}
		_iter_end_1a91dc8a2:;
	}
}



inline jule::Slice<jule::Ptr<_1dd0be530_Struct>> _1dcecd043_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ptr<_1dd0be530_Struct>> _7017_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_7017_buffer);
	{
		auto &expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_1a91de9d6:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1dcecd043_u = *it;
			{
				if ((!((*(_1dcecd043_u))._field_cpp_linked))) {
					(*this)._method_append_structs((*(_1dcecd043_u))._field_package,_7017_buffer);
				}
			}
			_iter_next_1a91de9d6:;
			++it;
			goto _iter_begin_1a91de9d6;
		}
		_iter_end_1a91de9d6:;
	}
	return _7017_buffer;
}



inline void _1dcecd043_IR::_method_order(void) {
	(*this)._field_ordered._field_structs=(*this)._method_get_all_structures();
	_1dcebc175_DefineOrderer::_static_method_order_structures((*this)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1dcecd043_IR &_Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ddb3c047_BuiltinAssertCallExprModel &_Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a686ecd4_ObjectCoder> _1a686ecd4_ObjectCoder::_static_method_new(jule::Ptr<_1dcecd043_IR>& _6028_ir,_1a686ecd4_SerializationInfo _6037_info) {
	jule::Ptr<_1a686ecd4_ObjectCoder> _6117_oc = jule::new_struct<_1a686ecd4_ObjectCoder>(new( std::nothrow ) _1a686ecd4_ObjectCoder(_6028_ir,_6037_info,jule::Str(),jule::Ptr<_1dcb0cd1b_ExprCoder>(),jule::Ptr<_1dc4e9dbd_ScopeCoder>()));
	(*(_6117_oc))._field_ec=_1dcb0cd1b_ExprCoder::_static_method_new(_6117_oc);
	(*(_6117_oc))._field_sc=_1dc4e9dbd_ScopeCoder::_static_method_new(_6117_oc);
	return _6117_oc;
}



inline void _1a686ecd4_ObjectCoder::_method_add_indent(void) {
	
	(*this)._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1a686ecd4_ObjectCoder::_method_done_indent(void) {
	(*this)._field_indent_buffer=(*this)._field_indent_buffer.slice(0LL,(*this)._field_indent_buffer.len() - 1LL);
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_indent(void) {
	return (*this)._field_indent_buffer;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_loc_info(_1dd05db0c_Token& _8724_t) {
	jule::Str _8817_loc = (*(_8724_t._field_file))._method_path();
	if (_1db6263a2_PRODUCTION) {
		{
			
			if (_1db822922_has_prefix(_8817_loc,_1db841039_PATH_STDLIB)) {
				_case_begin_1a961b451:;
				{
					_8817_loc=_8817_loc.slice(_1db7b8830_dir(_1db841039_PATH_STDLIB).len() + 1LL);
				}
			}
			else if (_1db822922_has_prefix(_8817_loc,(*((*this)._field_ir))._field_root)) {
				_case_begin_1a961b4c8:;
				{
					_8817_loc=_8817_loc.slice(_1db7b8830_dir((*((*this)._field_ir))._field_root).len() + 1LL);
				}
			}
			_match_end_1a961b352:;
		}
	}
	_8817_loc+=jule::Str(":", 1);
	_8817_loc+=_1dd4c1635_itoa(_8724_t._field_row);
	_8817_loc+=jule::Str(":", 1);
	_8817_loc+=_1dd4c1635_itoa(_8724_t._field_column);
	return _1dcb0cd1b_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_8817_loc));
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_links(void) {
	jule::Str _11317_obj = jule::Str();
	{
		auto &expr = (*((*this)._field_ir))._field_used;
		auto it = expr.begin();
		_iter_begin_1a961eab4:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1a686ecd4_pkg = *it;
			{
				{
					
					if ((!((*(_1a686ecd4_pkg))._field_cpp_linked))) {
						_case_begin_1a9620466:;
						{
							goto _iter_next_1a961eab4;
						}
					}
					else if (_1db676578_is_std_header_path((*(_1a686ecd4_pkg))._field_path)) {
						_case_begin_1a96204dd:;
						{
							_11317_obj+=jule::Str("#include ", 9);
							_11317_obj+=(*(_1a686ecd4_pkg))._field_path;
							_11317_obj+=jule::Str("\n", 1);
						}
					}
					_match_end_1a9620367:;
				}
			}
			_iter_next_1a961eab4:;
			++it;
			goto _iter_begin_1a961eab4;
		}
		_iter_end_1a961eab4:;
	}
	{
		auto &expr = (*((*this)._field_ir))._field_used;
		auto it = expr.begin();
		_iter_begin_1a961ee27:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1a686ecd4_pkg = *it;
			{
				{
					
					if ((!((*(_1a686ecd4_pkg))._field_cpp_linked))) {
						_case_begin_1a9621e3a:;
						{
							goto _iter_next_1a961ee27;
						}
					}
					else if (_1a686ecd4_is_cpp_header_file((*(_1a686ecd4_pkg))._field_path)) {
						_case_begin_1a9621eb2:;
						{
							_11317_obj+=jule::Str("#include \"", 10);
							_11317_obj+=(*(_1a686ecd4_pkg))._field_path;
							_11317_obj+=jule::Str("\"\n", 2);
						}
					}
					_match_end_1a9621d5d:;
				}
			}
			_iter_next_1a961ee27:;
			++it;
			goto _iter_begin_1a961ee27;
		}
		_iter_end_1a961ee27:;
	}
	return _11317_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_param_ins(jule::Ptr<_1dded9702_ParamIns>& _13929_p) {
	jule::Str _14017_obj = _1a696bb06_TypeCoder::_static_method_param_ins(_13929_p);
	_14017_obj+=jule::Str(" ", 1);
	_14017_obj+=_1a670d28d_IdentCoder::_static_method_param((*(_13929_p))._field_decl);
	return _14017_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_param(jule::Ptr<_1dded9702_Param>& _14729_p) {
	jule::Str _14817_obj = _1a696bb06_TypeCoder::_static_method_param(_14729_p);
	if ((((*(_14729_p))._field_ident != jule::Str()) && (!(_1dd05db0c_is_ignore_ident((*(_14729_p))._field_ident)))) && (!(_1dd05db0c_is_anon_ident((*(_14729_p))._field_ident)))) {
		_14817_obj+=jule::Str(" ", 1);
		_14817_obj+=_1a670d28d_IdentCoder::_static_method_param(_14729_p);
	}
	return _14817_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_params(jule::Slice<jule::Ptr<_1dded9702_Param>>& _15730_params) {
	{
		
		if (_15730_params.len() == 0LL) {
			_case_begin_1a96282e8:;
			{
				return jule::Str("(void)", 6);
			}
		}
		else if ((_15730_params.len() == 1LL) && (*(_15730_params[0LL]))._method_is_self()) {
			_case_begin_1a9628370:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_1a96281e9:;
	}
	jule::Str _16417_obj = jule::Str("(", 1);
	{
		auto &expr = _15730_params;
		auto it = expr.begin();
		_iter_begin_1a9629a8b:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Param> _1a686ecd4_p = *it;
			{
				if ((!((*(_1a686ecd4_p))._method_is_self()))) {
					_16417_obj+=(*this)._method_param(_1a686ecd4_p) + jule::Str(",", 1);
				}
			}
			_iter_next_1a9629a8b:;
			++it;
			goto _iter_begin_1a9629a8b;
		}
		_iter_end_1a9629a8b:;
	}
	_16417_obj=_16417_obj.slice(0LL,_16417_obj.len() - 1LL);
	return _16417_obj + jule::Str(")", 1);
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_params_ins(jule::Slice<jule::Ptr<_1dded9702_ParamIns>>& _17634_params) {
	{
		
		if (_17634_params.len() == 0LL) {
			_case_begin_1a962b9e4:;
			{
				return jule::Str("(void)", 6);
			}
		}
		else if ((_17634_params.len() == 1LL) && (*((*(_17634_params[0LL]))._field_decl))._method_is_self()) {
			_case_begin_1a962ba6b:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_1a962b8e5:;
	}
	jule::Str _18417_obj = jule::Str("(", 1);
	{
		auto &expr = _17634_params;
		auto it = expr.begin();
		_iter_begin_1a962d3db:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_ParamIns> _1a686ecd4_p = *it;
			{
				if ((!((*((*(_1a686ecd4_p))._field_decl))._method_is_self()))) {
					_18417_obj+=(*this)._method_param_ins(_1a686ecd4_p) + jule::Str(",", 1);
				}
			}
			_iter_next_1a962d3db:;
			++it;
			goto _iter_begin_1a962d3db;
		}
		_iter_end_1a962d3db:;
	}
	_18417_obj=_18417_obj.slice(0LL,_18417_obj.len() - 1LL);
	return _18417_obj + jule::Str(")", 1);
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_params_decls(jule::Slice<jule::Ptr<_1dded9702_ParamIns>>& _19736_params) {
	{
		
		if (_19736_params.len() == 0LL) {
			_case_begin_1a96309d7:;
			{
				return jule::Str("(void)", 6);
			}
		}
		else if ((_19736_params.len() == 1LL) && (*((*(_19736_params[0LL]))._field_decl))._method_is_self()) {
			_case_begin_1a9630a5e:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_1a96308d8:;
	}
	jule::Str _20517_obj = jule::Str("(", 1);
	{
		auto &expr = _19736_params;
		auto it = expr.begin();
		_iter_begin_1a96323ce:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_ParamIns> _1a686ecd4_p = *it;
			{
				if ((!((*((*(_1a686ecd4_p))._field_decl))._method_is_self()))) {
					_20517_obj+=_1a696bb06_TypeCoder::_static_method_param_ins(_1a686ecd4_p);
					_20517_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_1a96323ce:;
			++it;
			goto _iter_begin_1a96323ce;
		}
		_iter_end_1a96323ce:;
	}
	_20517_obj=_20517_obj.slice(0LL,_20517_obj.len() - 1LL);
	return _20517_obj + jule::Str(")", 1);
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_trait_def(jule::Ptr<_1de043c01_Trait>& _21933_t) {
	
	jule::Str _22113_outid = _1a670d28d_IdentCoder::_static_method_trait_decl(_21933_t);
	jule::Str _22317_obj = jule::Str("struct ", 7);
	_22317_obj+=_22113_outid;
	_22317_obj+=jule::Str(" {\n", 3);
	_22317_obj+=jule::Str("\t", 1);
	_22317_obj+=jule::Str("virtual ~", 9);
	_22317_obj+=_22113_outid;
	_22317_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto &expr = (*(_21933_t))._field_methods;
		auto it = expr.begin();
		_iter_begin_1a96360c5:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1a686ecd4_f = *it;
			{
				_22317_obj+=jule::Str("\t", 1);
				_22317_obj+=jule::Str("virtual ", 8);
				_22317_obj+=_1a696bb06_TypeCoder::_static_method_func_result(_1a686ecd4_f);
				_22317_obj+=jule::Str(" _method_", 9);
				_22317_obj+=(*(_1a686ecd4_f))._field_ident;
				_22317_obj+=(*this)._method_params((*(_1a686ecd4_f))._field_params);
				_22317_obj+=jule::Str(" {", 2);
				if ((!((*(_1a686ecd4_f))._method_is_void()))) {
					_22317_obj+=jule::Str(" return {}; ", 12);
				}
				_22317_obj+=jule::Str("}\n", 2);
			}
			_iter_next_1a96360c5:;
			++it;
			goto _iter_begin_1a96360c5;
		}
		_iter_end_1a96360c5:;
	}
	_22317_obj+=jule::Str("};", 2);
	return _22317_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_traits_tbl(jule::Ptr<_1a943b749_SymbolTable>& _24834_tbl) {
	jule::Str _24917_obj = jule::Str();
	{
		auto &expr = (*(_24834_tbl))._field_traits;
		auto it = expr.begin();
		_iter_begin_1a9639958:;
		if (it != expr.end()) {
			jule::Ptr<_1de043c01_Trait> _1a686ecd4_t = *it;
			{
				_24917_obj+=(*this)._method_trait_def(_1a686ecd4_t);
				_24917_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1a9639958:;
			++it;
			goto _iter_begin_1a9639958;
		}
		_iter_end_1a9639958:;
	}
	return _24917_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_traits_pkg(jule::Ptr<_1c2c4607e_Package>& _25834_pkg) {
	jule::Str _25917_obj = jule::Str();
	{
		auto &expr = (*(_25834_pkg))._field_files;
		auto it = expr.begin();
		_iter_begin_1a963b4e8:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1a686ecd4_tbl = *it;
			{
				_25917_obj+=(*this)._method_traits_tbl(_1a686ecd4_tbl);
			}
			_iter_next_1a963b4e8:;
			++it;
			goto _iter_begin_1a963b4e8;
		}
		_iter_end_1a963b4e8:;
	}
	return _25917_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_traits(void) {
	jule::Str _26817_obj = jule::Str();
	{
		auto &expr = (*((*this)._field_ir))._field_used;
		auto it = expr.begin();
		_iter_begin_1a963c97d:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1a686ecd4_u = *it;
			{
				if ((!((*(_1a686ecd4_u))._field_cpp_linked))) {
					_26817_obj+=(*this)._method_traits_pkg((*(_1a686ecd4_u))._field_package);
				}
			}
			_iter_next_1a963c97d:;
			++it;
			goto _iter_begin_1a963c97d;
		}
		_iter_end_1a963c97d:;
	}
	_26817_obj+=(*this)._method_traits_pkg((*((*this)._field_ir))._field_main);
	return _26817_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_trait_decl(jule::Ptr<_1de043c01_Trait>& _27930_t) {
	jule::Str _28017_obj = jule::Str("struct ", 7);
	_28017_obj+=_1a670d28d_IdentCoder::_static_method_trait_decl(_27930_t);
	_28017_obj+=jule::Str(";", 1);
	return _28017_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_trait_decls(jule::Ptr<_1c2c4607e_Package>& _28735_p) {
	jule::Str _28817_obj = jule::Str();
	{
		auto &expr = (*(_28735_p))._field_files;
		auto it = expr.begin();
		_iter_begin_1a964118a:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1a686ecd4_f = *it;
			{
				{
					auto &expr = (*(_1a686ecd4_f))._field_traits;
					auto it = expr.begin();
					_iter_begin_1a9641993:;
					if (it != expr.end()) {
						jule::Ptr<_1de043c01_Trait> _1a686ecd4_t = *it;
						{
							if ((*(_1a686ecd4_t))._field_token._field_id != static_cast<jule::Uint>(0LLU)) {
								_28817_obj+=(*this)._method_trait_decl(_1a686ecd4_t);
								_28817_obj+=jule::Str("\n", 1);
							}
						}
						_iter_next_1a9641993:;
						++it;
						goto _iter_begin_1a9641993;
					}
					_iter_end_1a9641993:;
				}
			}
			_iter_next_1a964118a:;
			++it;
			goto _iter_begin_1a964118a;
		}
		_iter_end_1a964118a:;
	}
	return _28817_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_plain_decl(jule::Ptr<_1dd0be530_Struct>& _30144_s) {
	jule::Str _30217_obj = jule::Str();
	{
		auto &expr = (*(_30144_s))._field_instances;
		auto it = expr.begin();
		_iter_begin_1a96437ec:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_StructIns> _1a686ecd4_ins = *it;
			{
				_30217_obj+=jule::Str("\nstruct ", 8);
				_30217_obj+=_1a670d28d_IdentCoder::_static_method_structure_ins(_1a686ecd4_ins);
				_30217_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1a96437ec:;
			++it;
			goto _iter_begin_1a96437ec;
		}
		_iter_end_1a96437ec:;
	}
	return _30217_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_plain_decls(void) {
	jule::Str _31317_obj = jule::Str();
	{
		auto &expr = (*((*this)._field_ir))._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1a9644e4c:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> _1a686ecd4_s = *it;
			{
				if ((!((*(_1a686ecd4_s))._field_cpp_linked)) && ((*(_1a686ecd4_s))._field_token._field_id != static_cast<jule::Uint>(0LLU))) {
					_31317_obj+=(*this)._method_structure_plain_decl(_1a686ecd4_s);
					_31317_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_1a9644e4c:;
			++it;
			goto _iter_begin_1a9644e4c;
		}
		_iter_end_1a9644e4c:;
	}
	return _31317_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_traits(jule::Ptr<_1dd0be530_Struct>& _32436_s) {
	if ((*(_32436_s))._field_implements.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _32817_obj = jule::Str(": ", 2);
	{
		auto &expr = (*(_32436_s))._field_implements;
		auto it = expr.begin();
		_iter_begin_1a9647bec:;
		if (it != expr.end()) {
			jule::Ptr<_1de043c01_Trait> &_1a686ecd4_i = *it;
			{
				_32817_obj+=jule::Str("public ", 7);
				_32817_obj+=_1a670d28d_IdentCoder::_static_method_trait_decl(_1a686ecd4_i);
				_32817_obj+=jule::Str(",", 1);
			}
			_iter_next_1a9647bec:;
			++it;
			goto _iter_begin_1a9647bec;
		}
		_iter_end_1a9647bec:;
	}
	_32817_obj=_32817_obj.slice(0LL,_32817_obj.len() - 1LL);
	return _32817_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_var_init_expr(jule::Ptr<_1c3c3d174_Var>& _33937_v,jule::Str _33946_init) {
	jule::Str _34017_obj = jule::Str();
	if ((*(_33937_v))._field_statically) {
		_34017_obj+=jule::Str("static ", 7);
	}
	_34017_obj+=_1a696bb06_TypeCoder::_static_method_kind((*((*(_33937_v))._field_kind))._field_kind);
	_34017_obj+=jule::Str(" ", 1);
	if ((*(_33937_v))._field_reference) {
		_34017_obj+=jule::Str("&", 1);
	}
	_34017_obj+=_1a670d28d_IdentCoder::_static_method_var(_33937_v);
	if (_33946_init != jule::Str()) {
		_34017_obj+=jule::Str(" = ", 3);
		_34017_obj+=_33946_init;
	}
	_34017_obj+=jule::Str(";", 1);
	return _34017_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_var(jule::Ptr<_1c3c3d174_Var> _36026_v) {
	if (_1dd05db0c_is_ignore_ident((*(_36026_v))._field_ident)) {
		return jule::Str();
	}
	if (((*(_36026_v))._field_value != nullptr) && ((*((*(_36026_v))._field_value))._field_expr != nullptr)) {
		if ((*((*((*(_36026_v))._field_value))._field_data))._field_model != jule::Any(nullptr)) {
			return (*this)._method_var_init_expr(_36026_v,(*((*this)._field_ec))._method_val((*(_36026_v))._field_value));
		}
		return (*this)._method_var_init_expr(_36026_v,jule::Str());
	}
	return (*this)._method_var_init_expr(_36026_v,(*((*this)._field_ec))._method_init_expr((*((*(_36026_v))._field_kind))._field_kind));
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_field_decl(jule::Ptr<_1dd0be530_FieldIns>& _37434_f) {
	jule::Str _37517_obj = _1a696bb06_TypeCoder::_static_method_kind((*(_37434_f))._field_kind);
	_37517_obj+=jule::Str(" ", 1);
	_37517_obj+=_1a670d28d_IdentCoder::_static_method_field((*(_37434_f))._field_decl);
	_37517_obj+=jule::Str(" = ", 3);
	if ((*(_37434_f))._field_default == nullptr) {
		_37517_obj+=(*((*this)._field_ec))._method_init_expr((*(_37434_f))._field_kind);
	} else {
		_37517_obj+=(*((*this)._field_ec))._method_expr((*((*(_37434_f))._field_default))._field_model);
	}
	_37517_obj+=jule::Str(";", 1);
	return _37517_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_build_structure_self_field_kind(jule::Ptr<_1dd0be530_StructIns>& _39055_s) {
	return _1a696bb06_TypeCoder::_static_method_as_sptr(_1a696bb06_TypeCoder::_static_method_structure_ins(_39055_s));
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_self_field(jule::Ptr<_1dd0be530_StructIns>& _39544_s) {
	jule::Str _39617_obj = (*this)._method_build_structure_self_field_kind(_39544_s);
	_39617_obj+=jule::Str(" self;", 6);
	return _39617_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_self_field_init_st(jule::Ptr<_1dd0be530_StructIns>& _40152_s) {
	jule::Str _40217_obj = jule::Str("this->self = ", 13);
	_40217_obj+=(*this)._method_build_structure_self_field_kind(_40152_s);
	_40217_obj+=jule::Str("::make(this, nullptr);", 22);
	return _40217_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_constructor(jule::Ptr<_1dd0be530_StructIns>& _40845_s) {
	jule::Str _40917_obj = _1a670d28d_IdentCoder::_static_method_structure_ins(_40845_s);
	_40917_obj+=jule::Str("(", 1);
	if ((*(_40845_s))._field_fields.len() > 0LL) {
		{
			auto &expr = (*(_40845_s))._field_fields;
			auto it = expr.begin();
			_iter_begin_1a96581b3:;
			if (it != expr.end()) {
				jule::Ptr<_1dd0be530_FieldIns> _1a686ecd4_f = *it;
				{
					_40917_obj+=_1a696bb06_TypeCoder::_static_method_kind((*(_1a686ecd4_f))._field_kind);
					_40917_obj+=jule::Str(" __param_", 9);
					_40917_obj+=(*((*(_1a686ecd4_f))._field_decl))._field_ident;
					_40917_obj+=jule::Str(", ", 2);
				}
				_iter_next_1a96581b3:;
				++it;
				goto _iter_begin_1a96581b3;
			}
			_iter_end_1a96581b3:;
		}
		_40917_obj=_40917_obj.slice(0LL,_40917_obj.len() - 2LL);
	} else {
		_40917_obj+=jule::Str("void", 4);
	}
	_40917_obj+=jule::Str(")", 1);
	if ((*(_40845_s))._field_fields.len() > 0LL) {
		_40917_obj+=jule::Str(": ", 2);
		{
			auto &expr = (*(_40845_s))._field_fields;
			auto it = expr.begin();
			_iter_begin_1a965a89c:;
			if (it != expr.end()) {
				jule::Ptr<_1dd0be530_FieldIns> _1a686ecd4_f = *it;
				{
					_40917_obj+=_1a670d28d_IdentCoder::_static_method_field((*(_1a686ecd4_f))._field_decl);
					_40917_obj+=jule::Str("(", 1);
					_40917_obj+=jule::Str("__param_", 8);
					_40917_obj+=(*((*(_1a686ecd4_f))._field_decl))._field_ident;
					_40917_obj+=jule::Str("), ", 3);
				}
				_iter_next_1a965a89c:;
				++it;
				goto _iter_begin_1a965a89c;
			}
			_iter_end_1a965a89c:;
		}
		_40917_obj=_40917_obj.slice(0LL,_40917_obj.len() - 2LL);
	}
	_40917_obj+=jule::Str(" {", 2);
	if ((*((*(_40845_s))._field_decl))._method_has_ref_accessible()) {
		_40917_obj+=jule::Str("\n", 1);
		(*this)._method_add_indent();
		_40917_obj+=(*this)._method_indent();
		_40917_obj+=(*this)._method_structure_self_field_init_st(_40845_s);
		_40917_obj+=jule::Str("\n", 1);
		(*this)._method_done_indent();
		_40917_obj+=jule::Str("\n", 1);
		_40917_obj+=(*this)._method_indent();
	}
	_40917_obj+=jule::Str("}", 1);
	return _40917_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_destructor(jule::Ptr<_1dd0be530_StructIns>& _45244_s) {
	
	jule::Ptr<_1dded9702_Fn> _45413_dispose_method = (*(_45244_s))._method_find_method(jule::Str("dispose", 7),false);
	jule::Bool _45517_disposed = _1c3c3d350_FuncPattern::_static_method_dispose(_45413_dispose_method);
	jule::Bool _45613_ref_access = (*((*(_45244_s))._field_decl))._method_has_ref_accessible();
	if ((!(_45613_ref_access)) && (!(_45517_disposed))) {
		return jule::Str();
	}
	jule::Str _46217_obj = jule::Str("~", 1);
	_46217_obj+=_1a670d28d_IdentCoder::_static_method_structure_ins(_45244_s);
	_46217_obj+=jule::Str("(void) { ", 9);
	if (_45517_disposed) {
		_46217_obj+=jule::Str("this->", 6);
		_46217_obj+=_1a670d28d_IdentCoder::_static_method_func(_45413_dispose_method);
		_46217_obj+=jule::Str("(); ", 4);
	}
	if (_45613_ref_access) {
		_46217_obj+=jule::Str("this->self.ref = nullptr; ", 26);
	}
	_46217_obj+=jule::Str("}", 1);
	return _46217_obj;
}



inline void _1a686ecd4_ObjectCoder::_method_structure_operator_eq(jule::Str& _48045_obj,jule::Str& _48056_ident,jule::Ptr<_1dd0be530_StructIns>& _48073_s) {
	if ((*(_48073_s))._field_operators._field_eq != nullptr) {
		(*this)._method_structure_operator(_48045_obj,_48056_ident,(*(_48073_s))._field_operators._field_eq,jule::Str("==", 2),jule::Str("bool", 4));
		return;
	}
	_48045_obj+=(*this)._method_indent();
	if (_1db6263a2_OPT_INLINE) {
		_48045_obj+=jule::Str("inline ", 7);
	}
	_48045_obj+=jule::Str("bool operator==(", 16);
	_48045_obj+=_48056_ident;
	_48045_obj+=jule::Str(" _other) {", 10);
	if ((*(_48073_s))._field_fields.len() > 0LL) {
		(*this)._method_add_indent();
		_48045_obj+=jule::Str("\n", 1);
		_48045_obj+=(*this)._method_indent();
		_48045_obj+=jule::Str("return ", 7);
		(*this)._method_add_indent();
		jule::Int _50021_n = 0LL;
		{
			auto &expr = (*(_48073_s))._field_fields;
			auto it = expr.begin();
			_iter_begin_1a966d64b:;
			if (it != expr.end()) {
				jule::Ptr<_1dd0be530_FieldIns> _1a686ecd4_f = *it;
				{
					jule::Ptr<_1dd0be530_StructIns> _50321_strct = (*((*(_1a686ecd4_f))._field_kind))._method_strct();
					if (((_50321_strct != nullptr) && ((*(_50321_strct))._field_decl != nullptr)) && (*((*(_50321_strct))._field_decl))._field_cpp_linked) {
						goto _iter_next_1a966d64b;
					}
					(_50021_n)++;
					_48045_obj+=jule::Str("\n", 1);
					_48045_obj+=(*this)._method_indent();
					_48045_obj+=jule::Str("this->", 6);
					jule::Str _51221_f_ident = _1a670d28d_IdentCoder::_static_method_field((*(_1a686ecd4_f))._field_decl);
					_48045_obj+=_51221_f_ident;
					_48045_obj+=jule::Str(" == _other.", 11);
					_48045_obj+=_51221_f_ident;
					_48045_obj+=jule::Str(" &&", 3);
				}
				_iter_next_1a966d64b:;
				++it;
				goto _iter_begin_1a966d64b;
			}
			_iter_end_1a966d64b:;
		}
		(*this)._method_done_indent();
		if (_50021_n > 0LL) {
			_48045_obj=_48045_obj.slice(0LL,_48045_obj.len() - 3LL);
		} else {
			_48045_obj+=jule::Str("true", 4);
		}
		_48045_obj+=jule::Str(";\n", 2);
		(*this)._method_done_indent();
		_48045_obj+=(*this)._method_indent();
		_48045_obj+=jule::Str("}", 1);
	} else {
		_48045_obj+=jule::Str(" return true; }", 15);
	}
	_48045_obj+=jule::Str("\n\n", 2);
}



inline void _1a686ecd4_ObjectCoder::_method_structure_operator_not_eq(jule::Str& _53449_obj,jule::Str& _53460_ident,jule::Ptr<_1dd0be530_StructIns>& _53477_s) {
	_53449_obj+=(*this)._method_indent();
	if (_1db6263a2_OPT_INLINE) {
		_53449_obj+=jule::Str("inline ", 7);
	}
	_53449_obj+=jule::Str("bool operator!=(", 16);
	_53449_obj+=_53460_ident;
	_53449_obj+=jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48);
}



inline void _1a686ecd4_ObjectCoder::_method_structure_operator(jule::Str& _54742_obj,jule::Str& _54753_ident,jule::Ptr<_1dded9702_FnIns>& _54770_f,jule::Str _54781_op,jule::Str _54790_result) {
	if (_54770_f == nullptr) {
		return;
	}
	_54742_obj+=(*this)._method_indent();
	if (_1db6263a2_OPT_INLINE) {
		_54742_obj+=jule::Str("inline ", 7);
	}
	if (_54790_result == jule::Str()) {
		_54742_obj+=_54753_ident;
		_54742_obj+=jule::Str("&", 1);
	} else {
		_54742_obj+=_54790_result;
	}
	_54742_obj+=jule::Str(" operator", 9);
	_54742_obj+=_54781_op;
	_54742_obj+=jule::Str("(", 1);
	if (_54753_ident != jule::Str()) {
		_54742_obj+=_54753_ident;
		_54742_obj+=jule::Str(" _other", 7);
	}
	_54742_obj+=jule::Str(") { ", 4);
	if (_54790_result != jule::Str()) {
		_54742_obj+=jule::Str("return ", 7);
	}
	_54742_obj+=jule::Str("this->", 6);
	_54742_obj+=_1a670d28d_IdentCoder::_static_method_func_ins(_54770_f);
	if (_54753_ident != jule::Str()) {
		_54742_obj+=jule::Str("(_other); ", 10);
		if (_54790_result == jule::Str()) {
			_54742_obj+=jule::Str("return *this; ", 14);
		}
		_54742_obj+=jule::Str("}", 1);
	} else {
		_54742_obj+=jule::Str("(); }", 5);
	}
	_54742_obj+=jule::Str("\n\n", 2);
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_operators(jule::Ptr<_1dd0be530_StructIns>& _58643_s) {
	jule::Str _58713_unary = jule::Str();
	jule::Str _58813_ident = _1a670d28d_IdentCoder::_static_method_structure_ins(_58643_s);
	jule::Str _58917_obj = jule::Str();
	(*this)._method_structure_operator_eq(_58917_obj,_58813_ident,_58643_s);
	(*this)._method_structure_operator_not_eq(_58917_obj,_58813_ident,_58643_s);
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_gt,jule::Str(">", 1),jule::Str("bool", 4));
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_gt_eq,jule::Str(">=", 2),jule::Str("bool", 4));
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_lt,jule::Str("<", 1),jule::Str("bool", 4));
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_lt_eq,jule::Str("<=", 2),jule::Str("bool", 4));
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_shl,jule::Str("<<", 2),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_shr,jule::Str(">>", 2),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_add,jule::Str("+", 1),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_sub,jule::Str("-", 1),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_div,jule::Str("/", 1),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_mul,jule::Str("*", 1),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_mod,jule::Str("%", 1),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_bit_and,jule::Str("&", 1),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_bit_or,jule::Str("|", 1),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_bit_xor,jule::Str("^", 1),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58713_unary,(*(_58643_s))._field_operators._field_neg,jule::Str("-", 1),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58713_unary,(*(_58643_s))._field_operators._field_pos,jule::Str("+", 1),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58713_unary,(*(_58643_s))._field_operators._field_bit_not,jule::Str("~", 1),_58813_ident);
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_add_assign,jule::Str("+=", 2),jule::Str());
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_sub_assign,jule::Str("-=", 2),jule::Str());
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_div_assign,jule::Str("/=", 2),jule::Str());
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_mul_assign,jule::Str("*=", 2),jule::Str());
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_mod_assign,jule::Str("%=", 2),jule::Str());
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_shl_assign,jule::Str("<<=", 3),jule::Str());
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_shr_assign,jule::Str(">>=", 3),jule::Str());
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_bit_or_assign,jule::Str("|=", 2),jule::Str());
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_bit_and_assign,jule::Str("&=", 2),jule::Str());
	(*this)._method_structure_operator(_58917_obj,_58813_ident,(*(_58643_s))._field_operators._field_bit_xor_assign,jule::Str("^=", 2),jule::Str());
	return _58917_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_derive_defs_decls(jule::Ptr<_1dd0be530_StructIns>& _62847_s) {
	jule::Str _62917_obj = jule::Str();
	if ((*((*(_62847_s))._field_decl))._method_is_derives(jule::Str("Clone", 5))) {
		_62917_obj+=(*this)._method_indent();
		_62917_obj+=_1a6849484_DeriveCoder::_static_method_clone_func_decl((*(_62847_s))._field_decl);
		_62917_obj+=jule::Str(";\n\n", 3);
	}
	return _62917_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_ins_decl(jule::Ptr<_1dd0be530_StructIns>& _63842_s) {
	jule::Str _63917_obj = jule::Str("struct ", 7);
	jule::Str _64013_out_ident = _1a670d28d_IdentCoder::_static_method_structure_ins(_63842_s);
	_63917_obj+=_64013_out_ident;
	_63917_obj+=(*this)._method_structure_traits((*(_63842_s))._field_decl);
	_63917_obj+=jule::Str(" {\n", 3);
	jule::Bool _64613_ref_access = (*((*(_63842_s))._field_decl))._method_has_ref_accessible();
	(*this)._method_add_indent();
	if (_64613_ref_access) {
		_63917_obj+=(*this)._method_indent();
		_63917_obj+=(*this)._method_structure_self_field(_63842_s);
		_63917_obj+=jule::Str("\n\n", 2);
	}
	if ((*(_63842_s))._field_fields.len() > 0LL) {
		{
			auto &expr = (*(_63842_s))._field_fields;
			auto it = expr.begin();
			_iter_begin_1a9695750:;
			if (it != expr.end()) {
				jule::Ptr<_1dd0be530_FieldIns> _1a686ecd4_f = *it;
				{
					_63917_obj+=(*this)._method_indent();
					_63917_obj+=(*this)._method_field_decl(_1a686ecd4_f);
					_63917_obj+=jule::Str("\n", 1);
				}
				_iter_next_1a9695750:;
				++it;
				goto _iter_begin_1a9695750;
			}
			_iter_end_1a9695750:;
		}
		_63917_obj+=jule::Str("\n\n", 2);
		_63917_obj+=(*this)._method_indent();
		_63917_obj+=(*this)._method_structure_constructor(_63842_s);
		_63917_obj+=jule::Str("\n\n", 2);
	}
	_63917_obj+=(*this)._method_indent();
	_63917_obj+=(*this)._method_structure_destructor(_63842_s);
	_63917_obj+=jule::Str("\n\n", 2);
	_63917_obj+=(*this)._method_indent();
	_63917_obj+=_64013_out_ident;
	if (_64613_ref_access) {
		_63917_obj+=jule::Str("(void) { ", 9);
		_63917_obj+=(*this)._method_structure_self_field_init_st(_63842_s);
		_63917_obj+=jule::Str(" }\n\n", 4);
	} else {
		_63917_obj+=jule::Str("(void) = default;\n\n", 19);
	}
	{
		auto &expr = (*(_63842_s))._field_methods;
		auto it = expr.begin();
		_iter_begin_1a969473d:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1a686ecd4_f = *it;
			{
				_63917_obj+=(*this)._method_func_decl(_1a686ecd4_f,true);
				_63917_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1a969473d:;
			++it;
			goto _iter_begin_1a969473d;
		}
		_iter_end_1a969473d:;
	}
	_63917_obj+=(*this)._method_structure_derive_defs_decls(_63842_s);
	_63917_obj+=(*this)._method_structure_operators(_63842_s);
	_63917_obj+=jule::Str("\n", 1);
	(*this)._method_done_indent();
	_63917_obj+=(*this)._method_indent() + jule::Str("};", 2);
	return _63917_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_decl(jule::Ptr<_1dd0be530_Struct>& _69738_s) {
	jule::Str _69817_obj = jule::Str();
	{
		auto &expr = (*(_69738_s))._field_instances;
		auto it = expr.begin();
		_iter_begin_1a969c2b2:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_StructIns> _1a686ecd4_ins = *it;
			{
				_69817_obj+=(*this)._method_structure_ins_decl(_1a686ecd4_ins);
				_69817_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1a969c2b2:;
			++it;
			goto _iter_begin_1a969c2b2;
		}
		_iter_end_1a969c2b2:;
	}
	return _69817_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_decls(void) {
	jule::Str _70817_obj = jule::Str();
	{
		auto &expr = (*((*this)._field_ir))._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1a969d9cd:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> _1a686ecd4_s = *it;
			{
				if ((!((*(_1a686ecd4_s))._field_cpp_linked)) && ((*(_1a686ecd4_s))._field_token._field_id != static_cast<jule::Uint>(0LLU))) {
					_70817_obj+=(*this)._method_structure_decl(_1a686ecd4_s);
					_70817_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_1a969d9cd:;
			++it;
			goto _iter_begin_1a969d9cd;
		}
		_iter_end_1a969d9cd:;
	}
	return _70817_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_func_head(jule::Ptr<_1dded9702_FnIns>& _71833_f,jule::Bool _71844_method) {
	jule::Str _71917_obj = jule::Str();
	if (_71844_method && (*((*(_71833_f))._field_decl))._field_statically) {
		_71917_obj+=jule::Str("static ", 7);
	}
	if (_1db6263a2_OPT_INLINE && (!((*((*(_71833_f))._field_decl))._method_is_entry_point()))) {
		_71917_obj+=jule::Str("inline ", 7);
	}
	_71917_obj+=_1a696bb06_TypeCoder::_static_method_func_ins_result(_71833_f);
	_71917_obj+=jule::Str(" ", 1);
	if ((!(_71844_method)) && ((*((*(_71833_f))._field_decl))._field_owner != nullptr)) {
		_71917_obj+=_1a670d28d_IdentCoder::_static_method_structure_ins((*(_71833_f))._field_owner);
		_71917_obj+=jule::Str("::", 2);
	}
	_71917_obj+=_1a670d28d_IdentCoder::_static_method_func_ins(_71833_f);
	return _71917_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_func_decl(jule::Ptr<_1dded9702_Fn>& _74033_f,jule::Bool _74041_method) {
	jule::Str _74117_obj = jule::Str();
	{
		auto &expr = (*(_74033_f))._field_instances;
		auto it = expr.begin();
		_iter_begin_1a96a4a4a:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_FnIns> _1a686ecd4_c = *it;
			{
				_74117_obj+=(*this)._method_indent();
				_74117_obj+=(*this)._method_func_head(_1a686ecd4_c,_74041_method);
				_74117_obj+=(*this)._method_params_decls((*(_1a686ecd4_c))._field_params);
				_74117_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1a96a4a4a:;
			++it;
			goto _iter_begin_1a96a4a4a;
		}
		_iter_end_1a96a4a4a:;
	}
	return _74117_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_func_decls(jule::Ptr<_1c2c4607e_Package>& _75234_pkg) {
	jule::Str _75317_obj = jule::Str();
	{
		auto &expr = (*(_75234_pkg))._field_files;
		auto it = expr.begin();
		_iter_begin_1a96a6e59:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1a686ecd4_file = *it;
			{
				{
					auto &expr = (*(_1a686ecd4_file))._field_funcs;
					auto it = expr.begin();
					_iter_begin_1a96a7762:;
					if (it != expr.end()) {
						jule::Ptr<_1dded9702_Fn> _1a686ecd4_f = *it;
						{
							if ((!((*(_1a686ecd4_f))._field_cpp_linked)) && ((*(_1a686ecd4_f))._field_token._field_id != static_cast<jule::Uint>(0LLU))) {
								_75317_obj+=(*this)._method_func_decl(_1a686ecd4_f,false);
							}
						}
						_iter_next_1a96a7762:;
						++it;
						goto _iter_begin_1a96a7762;
					}
					_iter_end_1a96a7762:;
				}
			}
			_iter_next_1a96a6e59:;
			++it;
			goto _iter_begin_1a96a6e59;
		}
		_iter_end_1a96a6e59:;
	}
	return _75317_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_decls(void) {
	jule::Str _76617_obj = jule::Str();
	{
		auto &expr = (*((*this)._field_ir))._field_used;
		auto it = expr.begin();
		_iter_begin_1a96a94cd:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1a686ecd4_u = *it;
			{
				if ((!((*(_1a686ecd4_u))._field_cpp_linked))) {
					_76617_obj+=(*this)._method_trait_decls((*(_1a686ecd4_u))._field_package);
				}
			}
			_iter_next_1a96a94cd:;
			++it;
			goto _iter_begin_1a96a94cd;
		}
		_iter_end_1a96a94cd:;
	}
	_76617_obj+=(*this)._method_trait_decls((*((*this)._field_ir))._field_main);
	_76617_obj+=(*this)._method_structure_plain_decls();
	_76617_obj+=(*this)._method_traits();
	_76617_obj+=jule::Str("\n", 1);
	_76617_obj+=(*this)._method_structure_decls();
	{
		auto &expr = (*((*this)._field_ir))._field_used;
		auto it = expr.begin();
		_iter_begin_1a96ab7ee:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1a686ecd4_u = *it;
			{
				if ((!((*(_1a686ecd4_u))._field_cpp_linked))) {
					_76617_obj+=(*this)._method_func_decls((*(_1a686ecd4_u))._field_package);
				}
			}
			_iter_next_1a96ab7ee:;
			++it;
			goto _iter_begin_1a96ab7ee;
		}
		_iter_end_1a96ab7ee:;
	}
	_76617_obj+=(*this)._method_func_decls((*((*this)._field_ir))._field_main);
	return _76617_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_pkg_globals(jule::Ptr<_1c2c4607e_Package>& _79335_p,jule::Str& _79353_global_initializers) {
	jule::Str _79417_obj = jule::Str();
	{
		auto &expr = (*(_79335_p))._field_files;
		auto it = expr.begin();
		_iter_begin_1a96ade0b:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1a686ecd4_f = *it;
			{
				{
					auto &expr = (*(_1a686ecd4_f))._field_vars;
					auto it = expr.begin();
					_iter_begin_1a96ae714:;
					if (it != expr.end()) {
						jule::Ptr<_1c3c3d174_Var> _1a686ecd4_v = *it;
						{
							if ((((*(_1a686ecd4_v))._field_token._field_id != static_cast<jule::Uint>(0LLU)) && (!((*(_1a686ecd4_v))._field_cpp_linked))) && (!((*(_1a686ecd4_v))._field_constant))) {
								_79417_obj+=_1a696bb06_TypeCoder::_static_method_kind((*((*(_1a686ecd4_v))._field_kind))._field_kind);
								_79417_obj+=jule::Str(" ", 1);
								if ((*(_1a686ecd4_v))._field_reference) {
									_79417_obj+=jule::Str("&", 1);
								}
								_79417_obj+=_1a670d28d_IdentCoder::_static_method_var(_1a686ecd4_v);
								_79417_obj+=jule::Str(";\n", 2);
								_79353_global_initializers+=(*this)._method_indent();
								_79353_global_initializers+=_1a670d28d_IdentCoder::_static_method_var(_1a686ecd4_v);
								if (((*(_1a686ecd4_v))._field_value != nullptr) && ((*((*(_1a686ecd4_v))._field_value))._field_expr != nullptr)) {
									if ((*((*((*(_1a686ecd4_v))._field_value))._field_data))._field_model != jule::Any(nullptr)) {
										_79353_global_initializers+=jule::Str(" = ", 3);
										_79353_global_initializers+=(*((*this)._field_ec))._method_val((*(_1a686ecd4_v))._field_value);
									}
								} else {
									_79353_global_initializers+=jule::Str(" = ", 3);
									_79353_global_initializers+=(*((*this)._field_ec))._method_init_expr((*((*(_1a686ecd4_v))._field_kind))._field_kind);
								}
								_79353_global_initializers+=jule::Str(";\n", 2);
							}
						}
						_iter_next_1a96ae714:;
						++it;
						goto _iter_begin_1a96ae714;
					}
					_iter_end_1a96ae714:;
				}
			}
			_iter_next_1a96ade0b:;
			++it;
			goto _iter_begin_1a96ade0b;
		}
		_iter_end_1a96ade0b:;
	}
	return _79417_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_globals(jule::Str& _82531_global_initializers) {
	jule::Str _82617_obj = jule::Str();
	(*this)._method_add_indent();
	{
		auto &expr = (*((*this)._field_ir))._field_used;
		auto it = expr.begin();
		_iter_begin_1a96b6232:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1a686ecd4_u = *it;
			{
				if ((!((*(_1a686ecd4_u))._field_cpp_linked))) {
					_82617_obj+=(*this)._method_pkg_globals((*(_1a686ecd4_u))._field_package,_82531_global_initializers);
				}
			}
			_iter_next_1a96b6232:;
			++it;
			goto _iter_begin_1a96b6232;
		}
		_iter_end_1a96b6232:;
	}
	_82617_obj+=(*this)._method_pkg_globals((*((*this)._field_ir))._field_main,_82531_global_initializers);
	(*this)._method_done_indent();
	return _82617_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_func(jule::Ptr<_1dded9702_Fn>& _83928_f) {
	jule::Str _84017_obj = jule::Str();
	{
		auto &expr = (*(_83928_f))._field_instances;
		auto it = expr.begin();
		_iter_begin_1a96b893d:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_FnIns> _1a686ecd4_ins = *it;
			{
				_84017_obj+=(*this)._method_func_head(_1a686ecd4_ins,false);
				_84017_obj+=(*this)._method_params_ins((*(_1a686ecd4_ins))._field_params);
				_84017_obj+=jule::Str(" ", 1);
				_84017_obj+=(*((*this)._field_sc))._method_func_scope(_1a686ecd4_ins);
				_84017_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1a96b893d:;
			++it;
			goto _iter_begin_1a96b893d;
		}
		_iter_end_1a96b893d:;
	}
	return _84017_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_pkg_funcs(jule::Ptr<_1c2c4607e_Package>& _85233_p) {
	jule::Str _85317_obj = jule::Str();
	{
		auto &expr = (*(_85233_p))._field_files;
		auto it = expr.begin();
		_iter_begin_1a96bb2d1:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1a686ecd4_f = *it;
			{
				{
					auto &expr = (*(_1a686ecd4_f))._field_funcs;
					auto it = expr.begin();
					_iter_begin_1a96bbad9:;
					if (it != expr.end()) {
						jule::Ptr<_1dded9702_Fn> _1a686ecd4_f = *it;
						{
							if ((!(_1db634b1e_TEST)) && _1a696bb06_has_directive((*(_1a686ecd4_f))._field_directives,jule::Str("test", 4))) {
								goto _iter_next_1a96bbad9;
							}
							if ((!((*(_1a686ecd4_f))._field_cpp_linked)) && ((*(_1a686ecd4_f))._field_token._field_id != static_cast<jule::Uint>(0LLU))) {
								_85317_obj+=(*this)._method_func(_1a686ecd4_f);
								_85317_obj+=jule::Str("\n\n", 2);
							}
						}
						_iter_next_1a96bbad9:;
						++it;
						goto _iter_begin_1a96bbad9;
					}
					_iter_end_1a96bbad9:;
				}
			}
			_iter_next_1a96bb2d1:;
			++it;
			goto _iter_begin_1a96bb2d1;
		}
		_iter_end_1a96bb2d1:;
	}
	return _85317_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_methods(jule::Ptr<_1dd0be530_StructIns>& _86941_s) {
	jule::Str _87017_obj = jule::Str();
	{
		auto &expr = (*(_86941_s))._field_methods;
		auto it = expr.begin();
		_iter_begin_1a96be6e1:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1a686ecd4_f = *it;
			{
				_87017_obj+=(*this)._method_indent();
				_87017_obj+=(*this)._method_func(_1a686ecd4_f);
				_87017_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1a96be6e1:;
			++it;
			goto _iter_begin_1a96be6e1;
		}
		_iter_end_1a96be6e1:;
	}
	return _87017_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_ostream(jule::Ptr<_1dd0be530_StructIns>& _88041_s) {
	jule::Str _88117_obj = jule::Str();
	_88117_obj+=(*this)._method_indent();
	_88117_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_88117_obj+=_1a670d28d_IdentCoder::_static_method_structure_ins(_88041_s);
	_88117_obj+=jule::Str(" &_Src) {\n", 10);
	(*this)._method_add_indent();
	_88117_obj+=(*this)._method_indent();
	jule::Ptr<_1dded9702_Fn> _88917_fts = (*(_88041_s))._method_find_method(jule::Str("to_str", 6),false);
	if (_1c3c3d350_FuncPattern::_static_method_to_str(_88917_fts)) {
		_88117_obj+=jule::Str("_Stream << ((", 13);
		_88117_obj+=_1a670d28d_IdentCoder::_static_method_structure_ins(_88041_s);
		_88117_obj+=jule::Str(")(_Src)).", 9);
		_88117_obj+=_1a670d28d_IdentCoder::_static_method_func(_88917_fts);
		_88117_obj+=jule::Str("();\n", 4);
	} else {
		_88117_obj+=jule::Str("_Stream << \"", 12);
		_88117_obj+=(*((*(_88041_s))._field_decl))._field_ident;
		_88117_obj+=jule::Str("{\";\n", 4);
		{
			auto &expr = (*(_88041_s))._field_fields;
			auto it = expr.begin();
			_iter_begin_1a96c5087:;
			if (it != expr.end()) {
				jule::Int _1a686ecd4_i = it - expr.begin();
				jule::Ptr<_1dd0be530_FieldIns> _1a686ecd4_f = *it;
				{
					_88117_obj+=(*this)._method_indent();
					_88117_obj+=jule::Str("_Stream << \"", 12);
					_88117_obj+=(*((*(_1a686ecd4_f))._field_decl))._field_ident;
					_88117_obj+=jule::Str(":", 1);
					jule::Ptr<_1dd0be530_StructIns> _90821_strct = (*((*(_1a686ecd4_f))._field_kind))._method_strct();
					if (((_90821_strct != nullptr) && ((*(_90821_strct))._field_decl != nullptr)) && (*((*(_90821_strct))._field_decl))._field_cpp_linked) {
						_88117_obj+=jule::Str(" cpp.", 5);
						_88117_obj+=_1a670d28d_IdentCoder::_static_method_field((*(_1a686ecd4_f))._field_decl);
						_88117_obj+=jule::Str("\"", 1);
					} else {
						_88117_obj+=jule::Str("\" << _Src.", 10);
						_88117_obj+=_1a670d28d_IdentCoder::_static_method_field((*(_1a686ecd4_f))._field_decl);
					}
					if ((_1a686ecd4_i + 1LL) < static_cast<jule::Int>((*(_88041_s))._field_fields.len())) {
						_88117_obj+=jule::Str(" << \", \"", 8);
					}
					_88117_obj+=jule::Str(";\n", 2);
				}
				_iter_next_1a96c5087:;
				++it;
				_1a686ecd4_i++;
				goto _iter_begin_1a96c5087;
			}
			_iter_end_1a96c5087:;
		}
		_88117_obj+=(*this)._method_indent();
		_88117_obj+=jule::Str("_Stream << \"}\";\n", 16);
	}
	_88117_obj+=(*this)._method_indent();
	_88117_obj+=jule::Str("return _Stream;\n", 16);
	(*this)._method_done_indent();
	_88117_obj+=(*this)._method_indent();
	_88117_obj+=jule::Str("}", 1);
	return _88117_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_derive_defs(jule::Ptr<_1dd0be530_StructIns>& _93645_s) {
	jule::Str _93717_obj = jule::Str();
	if ((*((*(_93645_s))._field_decl))._method_is_derives(jule::Str("Clone", 5))) {
		_93717_obj+=(*this)._method_indent();
		_93717_obj+=_1a6849484_DeriveCoder::_static_method_clone_func_def((*(_93645_s))._field_decl);
		_93717_obj+=jule::Str("{\n", 2);
		(*this)._method_add_indent();
		_93717_obj+=(*this)._method_indent();
		_93717_obj+=_1a696bb06_TypeCoder::_static_method_structure_ins(_93645_s);
		_93717_obj+=jule::Str(" clone;\n", 8);
		{
			auto &expr = (*(_93645_s))._field_fields;
			auto it = expr.begin();
			_iter_begin_1a96cd315:;
			if (it != expr.end()) {
				jule::Ptr<_1dd0be530_FieldIns> _1a686ecd4_f = *it;
				{
					jule::Str _94721_ident = _1a670d28d_IdentCoder::_static_method_field((*(_1a686ecd4_f))._field_decl);
					_93717_obj+=(*this)._method_indent();
					_93717_obj+=jule::Str("clone.", 6);
					_93717_obj+=_94721_ident;
					_93717_obj+=jule::Str(" = jule::clone(this->", 21);
					_93717_obj+=_94721_ident;
					_93717_obj+=jule::Str(");\n", 3);
				}
				_iter_next_1a96cd315:;
				++it;
				goto _iter_begin_1a96cd315;
			}
			_iter_end_1a96cd315:;
		}
		_93717_obj+=(*this)._method_indent();
		_93717_obj+=jule::Str("return clone;\n", 14);
		(*this)._method_done_indent();
		_93717_obj+=(*this)._method_indent();
		_93717_obj+=jule::Str("}", 1);
	}
	return _93717_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure_ins(jule::Ptr<_1dd0be530_StructIns>& _96537_s) {
	jule::Str _96617_obj = (*this)._method_structure_methods(_96537_s);
	_96617_obj+=jule::Str("\n\n", 2);
	_96617_obj+=(*this)._method_structure_derive_defs(_96537_s);
	_96617_obj+=jule::Str("\n\n", 2);
	_96617_obj+=(*this)._method_structure_ostream(_96537_s);
	return _96617_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structure(jule::Ptr<_1dd0be530_Struct>& _97533_s) {
	jule::Str _97617_obj = jule::Str();
	{
		auto &expr = (*(_97533_s))._field_instances;
		auto it = expr.begin();
		_iter_begin_1a96d39be:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_StructIns> _1a686ecd4_ins = *it;
			{
				_97617_obj+=(*this)._method_structure_ins(_1a686ecd4_ins);
				_97617_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1a96d39be:;
			++it;
			goto _iter_begin_1a96d39be;
		}
		_iter_end_1a96d39be:;
	}
	return _97617_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_structures(void) {
	jule::Str _98617_obj = jule::Str();
	{
		auto &expr = (*((*this)._field_ir))._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1a96d51da:;
		if (it != expr.end()) {
			jule::Ptr<_1dd0be530_Struct> _1a686ecd4_s = *it;
			{
				if ((!((*(_1a686ecd4_s))._field_cpp_linked)) && ((*(_1a686ecd4_s))._field_token._field_id != static_cast<jule::Uint>(0LLU))) {
					_98617_obj+=(*this)._method_structure(_1a686ecd4_s);
					_98617_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_1a96d51da:;
			++it;
			goto _iter_begin_1a96d51da;
		}
		_iter_end_1a96d51da:;
	}
	return _98617_obj;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_funcs(void) {
	jule::Str _99817_obj = jule::Str();
	{
		auto &expr = (*((*this)._field_ir))._field_used;
		auto it = expr.begin();
		_iter_begin_1a96d740c:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1a686ecd4_u = *it;
			{
				if ((!((*(_1a686ecd4_u))._field_cpp_linked))) {
					_99817_obj+=(*this)._method_pkg_funcs((*(_1a686ecd4_u))._field_package);
				}
			}
			_iter_next_1a96d740c:;
			++it;
			goto _iter_begin_1a96d740c;
		}
		_iter_end_1a96d740c:;
	}
	_99817_obj+=(*this)._method_pkg_funcs((*((*this)._field_ir))._field_main);
	return _99817_obj;
}



inline void _1a686ecd4_ObjectCoder::_method_push_init(jule::Ptr<_1c2c4607e_Package>& _100829_pkg,jule::Str& _100849_obj) {
	
	
	jule::Ptr<_1dded9702_Fn> _101113_f = (*(_100829_pkg))._method_find_fn(jule::Str("init", 4),false);
	if (_101113_f == nullptr) {
		return;
	}
	_100849_obj+=jule::Str("\n\t", 2);
	_100849_obj+=_1a670d28d_IdentCoder::_static_method_func(_101113_f);
	_100849_obj+=jule::Str("();", 3);
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_init_caller(jule::Str& _102131_global_initializers) {
	jule::Str _102217_obj = jule::Str("void ", 5);
	_102217_obj+=jule::Str("__jule_call_initializers", 24);
	_102217_obj+=jule::Str("(void) {\n", 9);
	_102217_obj+=_102131_global_initializers;
	{
		auto &expr = (*((*this)._field_ir))._field_used;
		auto it = expr.begin();
		_iter_begin_1a96dc6cb:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1a686ecd4_u = *it;
			{
				if ((!((*(_1a686ecd4_u))._field_cpp_linked))) {
					(*this)._method_push_init((*(_1a686ecd4_u))._field_package,_102217_obj);
				}
			}
			_iter_next_1a96dc6cb:;
			++it;
			goto _iter_begin_1a96dc6cb;
		}
		_iter_end_1a96dc6cb:;
	}
	(*this)._method_push_init((*((*this)._field_ir))._field_main,_102217_obj);
	_102217_obj+=jule::Str("\n}", 2);
	return _102217_obj;
}



inline void _1a686ecd4_ObjectCoder::_method_append_standard(jule::Str& _104039_obj_code) {
	_1a69e4ba1_AbsTime _104113_time = _1a69e4ba1_Time::_static_method_now()._method_abs();
	jule::Str _104317_time_str = jule::Str();
	_104317_time_str+=_1dd4c1635_fmt_uint(_104113_time._field_day,10LL);
	_104317_time_str+=jule::Str("/", 1);
	_104317_time_str+=_1dd4c1635_fmt_uint(_104113_time._field_month,10LL);
	_104317_time_str+=jule::Str("/", 1);
	_104317_time_str+=_1dd4c1635_fmt_uint(_104113_time._field_year,10LL);
	_104317_time_str+=jule::Str(" ", 1);
	_104317_time_str+=_1dd4c1635_fmt_uint(_104113_time._field_hour,10LL);
	_104317_time_str+=jule::Str(".", 1);
	_104317_time_str+=_1dd4c1635_fmt_uint(_104113_time._field_minute,10LL);
	_104317_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _105517_s = jule::Str();
	_105517_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_105517_s+=jule::Str("// JuleC version: ", 18);
	_105517_s+=jule::Str("jule0.0.9 @master", 17);
	_105517_s+=jule::Str("\n", 1);
	_105517_s+=jule::Str("// Date: ", 9);
	_105517_s+=_104317_time_str;
	_105517_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_105517_s+=(*this)._field_info._field_compiler;
	_105517_s+=jule::Str(" ", 1);
	_105517_s+=(*this)._field_info._field_compiler_command;
	_105517_s+=jule::Str("\n\n", 2);
	if (_1db6263a2_PRODUCTION) {
		_105517_s+=jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34);
	}
	if ((!(_1db634b1e_RC))) {
		_105517_s+=jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43);
	}
	if ((!(_1db634b1e_SAFETY))) {
		_105517_s+=jule::Str("#define __JULE_DISABLE__SAFETY\n", 31);
	}
	_105517_s+=jule::Str("\n\n#include \"", 12);
	_105517_s+=_1db841039_PATH_API;
	_105517_s+=jule::Str("\"\n\n", 3);
	_105517_s+=_104039_obj_code;
	_105517_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 149);
	if (_1db634b1e_TEST) {
		_105517_s+=jule::Str("test_point();", 13);
	} else {
		_105517_s+=jule::Str("entry_point();", 14);
	}
	_105517_s+=jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28);
	_104039_obj_code=_105517_s;
}



inline jule::Str _1a686ecd4_ObjectCoder::_method_serialize(void) {
	jule::Str _110617_global_initializers = jule::Str();
	jule::Str _110717_obj = jule::Str();
	_110717_obj+=(*this)._method_links();
	_110717_obj+=jule::Str("\n", 1);
	_110717_obj+=(*this)._method_decls();
	_110717_obj+=jule::Str("\n\n", 2);
	_110717_obj+=(*this)._method_globals(_110617_global_initializers);
	_110717_obj+=jule::Str("\n", 1);
	_110717_obj+=(*this)._method_structures();
	_110717_obj+=(*this)._method_funcs();
	_110717_obj+=jule::Str("\n", 1);
	_110717_obj+=(*this)._method_init_caller(_110617_global_initializers);
	_110717_obj+=jule::Str("\n", 1);
	return _110717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a686ecd4_ObjectCoder &_Src) {
	_Stream << "ObjectCoder{";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_EnumItemDecl::_method_auto_expr(void) {
	return (*this)._field_expr == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd05c765_EnumDecl::_method_default_typed(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1dd05c765_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1dc4768b6_ArgParser::_method_parse_integer_0(jule::Str& _18632_s,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::Int)> _18640_parser) {
	jule::I64 _18684_x = jule::I64();
	jule::Bool _18690_ok = jule::Bool();
	{
		
		if (_18632_s == jule::Str()) {
			_case_begin_1a97a2b6a:;
			{
				_18684_x = 0LL;
				_18690_ok = false;
				return std::make_tuple(_18684_x,_18690_ok);
			}
		}
		else if (_1db822922_has_prefix(_18632_s,jule::Str("0x", 2))) {
			_case_begin_1a97a2c9c:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),16LL);
			}
		}
		else if (_1db822922_has_prefix(_18632_s,jule::Str("0b", 2))) {
			_case_begin_1a97a2d13:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),2LL);
			}
		}
		else if (_1db822922_has_prefix(_18632_s,jule::Str("0o", 2))) {
			_case_begin_1a97a2d79:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),8LL);
			}
		}
		else if (_18632_s[0LL] == '0') {
			_case_begin_1a97a23c8:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1a97a2274:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s,10LL);
			}
		}
		_match_end_1a97a21a8:;
	}
	return std::make_tuple(_18684_x,_18690_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1dc4768b6_ArgParser::_method_parse_integer_1(jule::Str& _18632_s,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::Int)> _18640_parser) {
	jule::U64 _18684_x = jule::U64();
	jule::Bool _18690_ok = jule::Bool();
	{
		
		if (_18632_s == jule::Str()) {
			_case_begin_1a97ac3d3:;
			{
				_18684_x = 0LLU;
				_18690_ok = false;
				return std::make_tuple(_18684_x,_18690_ok);
			}
		}
		else if (_1db822922_has_prefix(_18632_s,jule::Str("0x", 2))) {
			_case_begin_1a97ac515:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),16LL);
			}
		}
		else if (_1db822922_has_prefix(_18632_s,jule::Str("0b", 2))) {
			_case_begin_1a97ac57b:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),2LL);
			}
		}
		else if (_1db822922_has_prefix(_18632_s,jule::Str("0o", 2))) {
			_case_begin_1a97ac5e2:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),8LL);
			}
		}
		else if (_18632_s[0LL] == '0') {
			_case_begin_1a97abb41:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1a97ab9dc:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s,10LL);
			}
		}
		_match_end_1a97ab921:;
	}
	return std::make_tuple(_18684_x,_18690_ok);
}



inline jule::Str _1dc4768b6_ArgParser::_method_get_data(void) {
	if (((*this)._field_i + 1LL) >= static_cast<jule::Int>((*this)._field_args.len())) {
		return jule::Str();
	}
	((*this)._field_i)++;
	return (*this)._field_args[(*this)._field_i];
}



inline jule::VoidExceptional _1dc4768b6_ArgParser::_method_process_flag(jule::Trait<_1dc4768b6_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1dc4768b6_Flag_3>>()) {
			_case_begin_1a9799799:;
			{
				jule::Ptr<_1dc4768b6_Flag_3> _22021_bf = _21736_flag.operator jule::Ptr<_1dc4768b6_Flag_3>();
				(*((*(_22021_bf))._field__data))=(!((*(_22021_bf))._field__default));
				return jule::VoidExceptional();
			}
		}
		_match_end_1a9799744:;
	}
	jule::Str _22513_data = (*this)._method_get_data();
	if (_22513_data == jule::Str()) {
		return jule::VoidExceptional((jule::Str("--", 2) + _21736_flag.get()._method_name()) + jule::Str(": expression missing", 20));
	}
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1dc4768b6_Flag_0>>()) {
			_case_begin_1a979ac73:;
			{
				jule::Ptr<_1dc4768b6_Flag_0> _23221_intf = _21736_flag.operator jule::Ptr<_1dc4768b6_Flag_0>();
				jule::Bool _23333_ok;
				std::tie((*((*(_23221_intf))._field__data)),_23333_ok) = (*this)._method_parse_integer_0(_22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _23372_s,jule::Int _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					jule::I64 _23422_x;
					jule::Int _23425_err;
					std::tie(_23422_x,_23425_err) = _1dd20559a_parse_int(_23372_s,_23380_base,64LL);
					return std::make_tuple(_23422_x,_23425_err == static_cast<jule::Int>(0LL));
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional((jule::Str("--", 2) + _21736_flag.get()._method_name()) + jule::Str(": expression must be valid signed integer", 41));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dc4768b6_Flag_1>>()) {
			_case_begin_1a979b955:;
			{
				jule::Ptr<_1dc4768b6_Flag_1> _24221_uintf = _21736_flag.operator jule::Ptr<_1dc4768b6_Flag_1>();
				jule::Bool _24334_ok;
				std::tie((*((*(_24221_uintf))._field__data)),_24334_ok) = (*this)._method_parse_integer_1(_22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _24373_s,jule::Int _24381_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					jule::U64 _24422_x;
					jule::Int _24425_err;
					std::tie(_24422_x,_24425_err) = _1dd20559a_parse_uint(_24373_s,_24381_base,64LL);
					return std::make_tuple(_24422_x,_24425_err == static_cast<jule::Int>(0LL));
				}));
				if ((!(_24334_ok))) {
					return jule::VoidExceptional((jule::Str("--", 2) + _21736_flag.get()._method_name()) + jule::Str(": expression must be valid unsigned integer", 43));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dc4768b6_Flag_2>>()) {
			_case_begin_1a979b9bb:;
			{
				jule::Ptr<_1dc4768b6_Flag_2> _25221_ff = _21736_flag.operator jule::Ptr<_1dc4768b6_Flag_2>();
				jule::Int _25331_err;
				std::tie((*((*(_25221_ff))._field__data)),_25331_err) = _1dd205b2d_parse_float(_22513_data,64LL);
				if (_25331_err != static_cast<jule::Int>(0LL)) {
					return jule::VoidExceptional((jule::Str("--", 2) + _21736_flag.get()._method_name()) + jule::Str(": expression must be valid floating-point", 41));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dc4768b6_Flag_4>>()) {
			_case_begin_1a979ba32:;
			{
				(*((*(_21736_flag.operator jule::Ptr<_1dc4768b6_Flag_4>()))._field__data))=_22513_data;
			}
		}
		_match_end_1a979abb8:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1dc4768b6_ArgParser::_method_single_dash(jule::Str& _26331_arg) {
	jule::Slice<jule::I32> _26413_rarg = static_cast<jule::Slice<jule::I32>>(_26331_arg).slice(1LL);
	{
		auto &expr = _26413_rarg;
		auto it = expr.begin();
		_iter_begin_1a97b3eab:;
		if (it != expr.end()) {
			jule::I32 &_1dc4768b6_r = *it;
			{
				jule::Trait<_1dc4768b6_CommonFlag> _26621_flag = (*this)._field_set._method_find_flag_short(_1dc4768b6_r);
				if (_26621_flag == nullptr) {
					return jule::VoidExceptional((_26331_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_1dc4768b6_r));
				}
				({
					auto except = (*this)._method_process_flag(_26621_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1a97b3eab:;
			++it;
			goto _iter_begin_1a97b3eab;
		}
		_iter_end_1a97b3eab:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1dc4768b6_ArgParser::_method_double_dash(jule::Str& _27531_arg) {
	jule::Trait<_1dc4768b6_CommonFlag> _27617_flag = (*this)._field_set._method_find_flag(_27531_arg.slice(2LL));
	if (_27617_flag == nullptr) {
		return jule::VoidExceptional(_27531_arg + jule::Str(": flag is not exist", 19));
	}
	({
		auto except = (*this)._method_process_flag(_27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::VoidExceptional _1dc4768b6_ArgParser::_method_try_arg(void) {
	jule::Str _28513_arg = (*this)._field_args[(*this)._field_i];
	if ((*this)._field_args.len() == 0LL) {
		return jule::VoidExceptional();
	}
	if (_28513_arg[0LL] == '-') {
		if (((*this)._field_args.len() > 1LL) && (_28513_arg[1LL] == '-')) {
			({
				auto except = (*this)._method_double_dash(_28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();
		}
		({
			auto except = (*this)._method_single_dash(_28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();
	}
	(*this)._field_content = jule::alloc_for_append((*this)._field_content,1);(*this)._field_content.__push(_28513_arg); return jule::VoidExceptional(); }



inline jule::VoidExceptional _1dc4768b6_ArgParser::_method_parse(void) {
	for (; (*this)._field_i < static_cast<jule::Int>((*this)._field_args.len()); ((*this)._field_i)++) {
		{
			({
				auto except = (*this)._method_try_arg();
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1a97be109:;
	}
	_iter_end_1a97be109:; return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, const _1dc4768b6_ArgParser &_Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _1db6dc017_decode_rune(jule::I32 _6720_r1,jule::I32 _6730_r2) {
	if ((((55296LL <= _6720_r1) && (_6720_r1 < 56320LL)) && (56320LL <= _6730_r2)) && (_6730_r2 < 57344LL)) {
		return static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_6720_r1 - 55296LL) << 10LL) | static_cast<jule::I32>(_6730_r2 - 56320LL)) + 65536LL);
	}
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _1db6dc017_encode_rune(jule::I32 _7724_r) {
	jule::I32 _7735_r1 = jule::I32();
	jule::I32 _7745_r2 = jule::I32();
	if ((_7724_r < 65536LL) || (_7724_r > 1114111LL)) {
		_7735_r1 = 65533LL;
		_7745_r2 = 65533LL;
		return std::make_tuple(_7735_r1,_7745_r2);
	}
	_7724_r-=65536LL;
	_7735_r1 = static_cast<jule::I32>(55296LL + static_cast<jule::I32>(static_cast<jule::I32>(_7724_r >> 10LL) & 1023LL));
	_7745_r2 = static_cast<jule::I32>(56320LL + static_cast<jule::I32>(_7724_r & 1023LL));
	return std::make_tuple(_7735_r1,_7745_r2);
}



inline jule::Slice<jule::I32> _1db6dc017_decode(jule::Slice<jule::U16> _11815_s) {
	jule::Slice<jule::I32> _11913_a = jule::Slice<jule::I32>::alloc(static_cast<jule::Int>(_11815_s.len()));
	jule::Int _12013_n = 0LL;
	jule::Int _12113_i = 0LL;
	for (; _12113_i < static_cast<jule::Int>(_11815_s.len()); (_12113_i)++) {
		{
			jule::U16 _12313_r = _11815_s[_12113_i];
			{
				
				if (_12313_r < 55296LLU || 57344LL <= _12313_r) {
					_case_begin_1a6aa7978:;
					{
						_11913_a[_12013_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12313_r));
					}
				}
				else if ((((_12313_r < 56320LLU) && ((_12113_i + 1LL) < static_cast<jule::Int>(_11815_s.len()))) && (56320LL <= _11815_s[_12113_i + 1LL])) && (_11815_s[_12113_i + 1LL] < 57344LLU)) {
					_case_begin_1a6aa75c1:;
					{
						_11913_a[_12013_n]=static_cast<jule::I32>(_1db6dc017_decode_rune(static_cast<jule::I32>(static_cast<jule::I32>(_12313_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11815_s[_12113_i + 1LL]))));
						(_12113_i)++;
					}
				}
				else {
					_case_begin_1a6aa723b:;
					{
						_11913_a[_12013_n]=65533LL;
					}
				}
				_match_end_1a6aa71b4:;
			}
			(_12013_n)++;
		}
	_iter_next_1a6aa1983:;
	}
	_iter_end_1a6aa1983:;
	return _11913_a.slice(0LL,_12013_n);
}



inline jule::Slice<jule::U16> _1db6dc017_append_rune(jule::Slice<jule::U16> _14924_a,jule::I32 _14934_r) {
	{
		
		if ((0LL <= _14934_r) && (_14934_r < 55296LL) || (57344LL <= _14934_r) && (_14934_r < 65536LL)) {
			_case_begin_1a6aab44e:;
			{
				return jule::append(_14924_a,jule::Slice<jule::U16>({static_cast<jule::U16>(static_cast<jule::U16>(_14934_r))}));
			}
		}
		else if ((65536LL <= _14934_r) && (_14934_r <= 1114111LL)) {
			_case_begin_1a6aab619:;
			{
				jule::I32 _15614_r1;
				jule::I32 _15618_r2;
				std::tie(_15614_r1,_15618_r2) = _1db6dc017_encode_rune(_14934_r);
				return jule::append(_14924_a,jule::Slice<jule::U16>({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1a6aab394:;
	}
	return jule::append(_14924_a,jule::Slice<jule::U16>({65533LLU}));
}



inline jule::Slice<jule::U16> _1db6b9e3a_utf16_from_str(jule::Str _1423_s) {
	
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1423_s);
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,static_cast<jule::Int>(_209_runes.len()));
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1a6aba7c1:;
		if (it != expr.end()) {
			jule::I32 &_1db6b9e3a_r = *it;
			{
				if (_1db6b9e3a_r == 0LL) {
					goto _iter_end_1a6aba7c1;
				}
				_2113_buff=_1db6dc017_append_rune(_2113_buff,_1db6b9e3a_r);
			}
			_iter_next_1a6aba7c1:;
			++it;
			goto _iter_begin_1a6aba7c1;
		}
		_iter_end_1a6aba7c1:;
	}
	return _1db6dc017_append_rune(_2113_buff,0LL);
}



inline jule::Str _1db6b9e3a_utf16_to_str(jule::Slice<jule::U16> _3421_s) {
	if (_3421_s == nullptr) {
		return jule::Str();
	}
	jule::Slice<jule::U16> _3813_code_page = _3421_s;
	{
		auto &expr = _3421_s;
		auto it = expr.begin();
		_iter_begin_1a6abc54d:;
		if (it != expr.end()) {
			jule::Int _1db6b9e3a_i = it - expr.begin();
			jule::U16 &_1db6b9e3a_v = *it;
			{
				if (_1db6b9e3a_v == 0LLU) {
					_3813_code_page=_3813_code_page.slice(0LL,_1db6b9e3a_i);
					goto _iter_end_1a6abc54d;
				}
			}
			_iter_next_1a6abc54d:;
			++it;
			_1db6b9e3a_i++;
			goto _iter_begin_1a6abc54d;
		}
		_iter_end_1a6abc54d:;
	}
	return static_cast<jule::Str>(_1db6dc017_decode(_3813_code_page));
}



inline jule::Str _1db6b9e3a_u16_ptr_to_str(jule::U16* _5030_s) {
	if (_5030_s == nullptr) {
		return jule::Str();
	}
	jule::Slice<jule::U16> _5513_code_page = nullptr;
	jule::Int _5613_i = 0LL;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5030_s[_5613_i];
			if (_5813_r == 0LLU) {
				return static_cast<jule::Str>(_1db6dc017_decode(_5513_code_page));
			}
			_5513_code_page = jule::alloc_for_append(_5513_code_page,1);_5513_code_page.__push(_5813_r);
		}
	_iter_next_1a6abd63c:;
	}
	_iter_end_1a6abd63c:;
	return jule::Str();
}



inline jule::Int _1db64c3c8_get_last_errno(void) {
	return errno;
}



inline jule::Uintptr _1db653ae9_get_std_handle(jule::Uintptr _5523_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_5523_stdh))));
}



inline jule::Int _1db653ae9_wstat(jule::U16* _5921_path,struct stat* _5937_stat) {
	return static_cast<jule::Int>(wstat(((wchar_t*)(_5921_path)),_5937_stat));
}



inline jule::Int _1db653ae9__wopen(jule::U16* _6422_path,jule::Int _6434_flag,jule::Int _6445_mode) {
	return static_cast<jule::Int>(_wopen(((wchar_t*)((&(_6422_path[0LL])))),_6434_flag,_6445_mode));
}



inline jule::U32 _1db653ae9_get_last_error(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _1db653ae9_get_current_directory(jule::U32 _7337_bufflen,jule::U16* _7355_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7337_bufflen,((wchar_t*)(_7355_buff))));
}



inline jule::Bool _1db653ae9_delete_file(jule::U16* _8427_path) {
	return DeleteFileW(((wchar_t*)(_8427_path)));
}



inline jule::Bool _1db653ae9_create_directory(jule::U16* _8932_path) {
	return CreateDirectoryW(((wchar_t*)(_8932_path)),nullptr);
}



inline jule::Bool _1db653ae9_remove_directory(jule::U16* _9432_path) {
	return RemoveDirectoryW(((wchar_t*)(_9432_path)));
}



inline _WDIR* _1db653ae9__wopendir(jule::U16* _9925_path) {
	return _wopendir(((wchar_t*)(_9925_path)));
}



inline struct _wdirent* _1db653ae9__wreaddir(_WDIR* _10229_dir) {
	return _wreaddir(_10229_dir);
}



inline jule::Int _1db653ae9__wclosedir(_WDIR* _10530_dir) {
	return static_cast<jule::Int>(_wclosedir(_10530_dir));
}



inline jule::U32 _1db653ae9_get_full_path_name(jule::U16* _10834_path,jule::U32 _10846_bufflen,jule::U16* _1095_buff,jule::U16** _10917_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10834_path)),_10846_bufflen,((wchar_t*)(_1095_buff)),((wchar_t**)(_10917_fname))));
}



inline jule::Bool _1db653ae9_get_console_mode(jule::Uintptr _11425_handle,jule::Int& _11446_mode) {
	return GetConsoleMode(((HANDLE)(_11425_handle)),((DWORD*)((&(_11446_mode)))));
}



inline jule::Bool _1db653ae9_set_console_mode(jule::Uintptr _11925_handle,jule::Int _11941_mode) {
	return SetConsoleMode(((HANDLE)(_11925_handle)),static_cast<DWORD>(_11941_mode));
}



inline jule::Bool _1db653ae9_write_console(jule::Uintptr _12429_handle,jule::U16* _12445_buffer,jule::Int _12459_to_write,jule::Int& _12510_written,void* _12524_reserved) {
	return WriteConsoleW(((HANDLE)(_12429_handle)),((void*)(_12445_buffer)),static_cast<DWORD>(_12459_to_write),((DWORD*)(_12510_written)),_12524_reserved);
}



inline jule::Bool _1db653ae9_read_console(jule::Uintptr _13128_handle,jule::U16* _13148_buffer,jule::Int _13162_to_read,jule::Int& _13210_readed,void* _13223_input_control) {
	return ReadConsoleW(((HANDLE)(_13128_handle)),((void*)(_13148_buffer)),static_cast<DWORD>(_13162_to_read),((DWORD*)((&(_13210_readed)))),_13223_input_control);
}



inline jule::Int _1db66e3b7_seek(jule::Int _2613_handle,jule::Int _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::Int>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _1db66e3b7_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _1db66e3b7_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _1db66e3b7_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1db66e3b7_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline jule::Int _1db63b85c_get_last_os_error_windows(void) {
	jule::U32 _169_err = _1db653ae9_get_last_error();
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1a6b1a16c:;
			{
				return static_cast<jule::Int>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a6b1a1d3:;
			{
				return static_cast<jule::Int>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a6b19a84:;
			{
				return static_cast<jule::Int>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1a6b19aea:;
			{
				return static_cast<jule::Int>(4LL);
			}
		}
		else {
			_case_begin_1a6b17532:;
			{
				return static_cast<jule::Int>(0LL);
			}
		}
		_match_end_1a6b16762:;
	}
}



inline jule::Slice<jule::Str> _1db640cc3_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _1db640cc3_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _1db64756b___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _1db64756b___getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();
	jule::U32 _169_n = _1db653ae9_get_current_directory(261LLU,(&(_1513_buff.__at(0LL))));
	if (_169_n == 0LLU) {
		return jule::Exceptional<jule::Str>(_1db63b85c_get_last_os_error_windows());
	}
	return jule::Exceptional<jule::Str>(jule::Any(),_1db6b9e3a_u16_ptr_to_str((&(_1513_buff.__at(0LL)))));
}



inline void _1db6263a2_push_opt_level(jule::Int _3323_level) {
	_1db6263a2_OPT_COPY=_3323_level >= static_cast<jule::Int>(1LL);
	_1db6263a2_OPT_DEADCODE=_3323_level >= static_cast<jule::Int>(1LL);
	_1db6263a2_OPT_APPEND=_3323_level >= static_cast<jule::Int>(1LL);
	_1db6263a2_OPT_MATH=_3323_level >= static_cast<jule::Int>(1LL);
	_1db6263a2_OPT_ACCESS=_3323_level >= static_cast<jule::Int>(1LL);
	_1db6263a2_OPT_INLINE=_3323_level >= static_cast<jule::Int>(1LL);
	_1db6263a2_OPT_PTR=_3323_level >= static_cast<jule::Int>(1LL);
	_1db6263a2_OPT_COND=_3323_level >= static_cast<jule::Int>(1LL);
}



inline std::tuple<jule::I32,jule::Int> _1db761ba2_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::Int _18242_size = jule::Int();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _1db761ba2_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LLU) {
		jule::I32 _19213_mask = static_cast<jule::U8>(static_cast<jule::U8>(_1879_x << 31LLU) >> 31LLU);
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_18220_p[0LL])) & static_cast<jule::I32>((~(_19213_mask)))) | static_cast<jule::I32>(65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LLU);
	_1db761ba2_accept_range _1969_accept = _1db761ba2_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LLU)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>(static_cast<jule::I32>(_2009_b1 & 63LLU)));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LLU) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_1869_p0 & 15LLU)) << 12LL) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>(static_cast<jule::I32>(_2079_b2 & 63LLU)));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LLU) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_1869_p0 & 7LLU)) << 18LL) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_2009_b1 & 63LLU)) << 12LL)) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>(static_cast<jule::I32>(_2149_b3 & 63LLU)));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::Int> _1db761ba2_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::Int _27647_size = jule::Int();
	if (_27625_p.len() == 0LL) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::Int _2809_end = _27625_p.len();
	jule::Int _28113_start = _2809_end - 1LL;
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if (_27638_r < 128LL) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::Int _28913_lim = _2809_end - 4LL;
	if (_28913_lim < 0LL) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	for (; _28113_start >= _28913_lim; (_28113_start)--) {
		{
			if (_1db761ba2_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1a6b674c7;
			}
		}
	_iter_next_1a6b674c7:;
	}
	_iter_end_1a6b674c7:;
	if (_28113_start < 0LL) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _1db761ba2_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::Int _1db761ba2_rune_len(jule::I32 _35217_r) {
	{
		
		if (_35217_r < 0LL) {
			_case_begin_1a6b6edc5:;
			{
				return -1LL;
			}
		}
		else if (_35217_r <= 127LL) {
			_case_begin_1a6b6eed5:;
			{
				return 1LL;
			}
		}
		else if (_35217_r <= 2047LL) {
			_case_begin_1a6b7004b:;
			{
				return 2LL;
			}
		}
		else if ((55296LL <= _35217_r) && (_35217_r <= 57343LL)) {
			_case_begin_1a6b700b2:;
			{
				return -1LL;
			}
		}
		else if (_35217_r <= 65535LL) {
			_case_begin_1a6b6eba5:;
			{
				return 3LL;
			}
		}
		else if (_35217_r <= 1114111LL) {
			_case_begin_1a6b6ec1b:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1a6b6e743:;
			{
				return -1LL;
			}
		}
		_match_end_1a6b6c1d0:;
	}
}



inline jule::Int _1db761ba2_encode_rune(jule::Slice<jule::U8> _36724_p,jule::I32 _36739_r) {
	jule::U32 _3699_i = static_cast<jule::U32>(_36739_r);
	{
		
		if (_3699_i <= 127LLU) {
			_case_begin_1a6b7565b:;
			{
				_36724_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_36739_r));
				return 1LL;
			}
		}
		else if (_3699_i <= 2047LLU) {
			_case_begin_1a6b760b8:;
			{
				_36724_p[0LL]=static_cast<jule::U8>(192LLU | static_cast<jule::U8>(static_cast<jule::U8>(_36739_r >> 6LL)));
				_36724_p[1LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_36739_r)) & 63LLU));
				return 2LL;
			}
		}
		else if (_3699_i > 1114111LLU || (55296LL <= _3699_i) && (_3699_i <= 57343LLU)) {
			_case_begin_1a6b7612e:;
			{
				_36739_r=65533LL;
				goto _case_begin_1a6b75dcb;
			}
		}
		else if (_3699_i <= 65535LLU) {
			_case_begin_1a6b75dcb:;
			{
				_36724_p[0LL]=static_cast<jule::U8>(224LLU | static_cast<jule::U8>(static_cast<jule::U8>(_36739_r >> 12LL)));
				_36724_p[1LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_36739_r >> 6LL)) & 63LLU));
				_36724_p[2LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_36739_r)) & 63LLU));
				return 3LL;
			}
		}
		else {
			_case_begin_1a6b72b20:;
			{
				_36724_p[0LL]=static_cast<jule::U8>(240LLU | static_cast<jule::U8>(static_cast<jule::U8>(_36739_r >> 18LL)));
				_36724_p[1LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_36739_r >> 12LL)) & 63LLU));
				_36724_p[2LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_36739_r >> 6LL)) & 63LLU));
				_36724_p[3LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_36739_r)) & 63LLU));
				return 4LL;
			}
		}
		_match_end_1a6b72a65:;
	}
}



inline jule::Slice<jule::U8> _1db761ba2_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (_39835_r <= 127LL) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(_39835_r))}));
	}
	return _1db761ba2_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _1db761ba2_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		
		if (_4079_i <= 2047LLU) {
			_case_begin_1a6b80cb5:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LLU | static_cast<jule::U8>(static_cast<jule::U8>(_40545_r >> 6LL))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r)) & 63LLU))}));
			}
		}
		else if (_4079_i > 1114111LLU || (55296LL <= _4079_i) && (_4079_i <= 57343LLU)) {
			_case_begin_1a6b80d2b:;
			{
				_40545_r=65533LL;
				goto _case_begin_1a6b80d92;
			}
		}
		else if (_4079_i <= 65535LLU) {
			_case_begin_1a6b80d92:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LLU | static_cast<jule::U8>(static_cast<jule::U8>(_40545_r >> 12LL))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r >> 6LL)) & 63LLU)),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r)) & 63LLU))}));
			}
		}
		else {
			_case_begin_1a6b7ce9e:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LLU | static_cast<jule::U8>(static_cast<jule::U8>(_40545_r >> 18LL))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r >> 12LL)) & 63LLU)),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r >> 6LL)) & 63LLU)),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r)) & 63LLU))}));
			}
		}
		_match_end_1a6b7ce16:;
	}
}



inline jule::Int _1db761ba2_rune_count_str(jule::Str _46623_s) {
	jule::Int _46633_n = jule::Int();
	jule::Int _46713_i = 0LL;
	for (; _46713_i < static_cast<jule::Int>(_46623_s.len()); (_46633_n)++) {
		{
			jule::U8 _46917_c = _46623_s[_46713_i];
			if (_46917_c < 128LLU) {
				(_46713_i)++;
				goto _iter_next_1a6b8b2cb;
			}
			jule::U8 _47513_x = _1db761ba2_FIRST[static_cast<jule::Int>(_46917_c)];
			if (_47513_x == 241LLU) {
				(_46713_i)++;
				goto _iter_next_1a6b8b2cb;
			}
			jule::Int _48017_size = static_cast<jule::Int>(_47513_x & 7LLU);
			if ((_46713_i + _48017_size) > static_cast<jule::Int>(_46623_s.len())) {
				(_46713_i)++;
				goto _iter_next_1a6b8b2cb;
			}
			_1db761ba2_accept_range _48513_accept = _1db761ba2_ACCEPT_RANGES[static_cast<jule::Int>(_47513_x >> 4LLU)];
			_46917_c=_46623_s[_46713_i + 1LL];
			if ((_46917_c < _48513_accept._field_lo) || (_48513_accept._field_hi < _46917_c)) {
				_48017_size=1LL;
			} else if (_48017_size == 2LL) {
			} else {
				_46917_c=_46623_s[_46713_i + 2LL];
				if ((_46917_c < 128LLU) || (191LL < _46917_c)) {
					_48017_size=1LL;
				} else if (_48017_size == 3LL) {
				} else {
					_46917_c=_46623_s[_46713_i + 3LL];
					if ((_46917_c < 128LLU) || (191LL < _46917_c)) {
						_48017_size=1LL;
					}
				}
			}
			_46713_i+=_48017_size;
		}
	_iter_next_1a6b8b2cb:;
	}
	_iter_end_1a6b8b2cb:;
	return _46633_n;
}



inline jule::Bool _1db761ba2_rune_start(jule::U8 _51019_b) {
	return (_51019_b & 192LLU) != 128LLU;
}



inline jule::Bool _1dc4712ea_is_letter(jule::I32 _7618_r) {
	if (static_cast<jule::U32>(_7618_r) <= 255LLU) {
		return (_1dc4ddcb3__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU;
	}
	return _1dc4e2e71_is_excluding_latin(_1dc4ddcb3_LETTER,_7618_r);
}



inline jule::Bool _1dc4e2e71_is16(jule::Slice<_1dc4e2e71_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU)) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1a728ea55:;
			if (it != expr.end()) {
				jule::Int _1dc4e2e71_i = it - expr.begin();
				{
					_1dc4e2e71_Range16* _19417_range = (&(_1919_ranges.__at(_1dc4e2e71_i)));
					{
						if (_19128_r < (*(_19417_range))._field_lo) {
							return false;
						}
						if (_19128_r <= (*(_19417_range))._field_hi) {
							return ((*(_19417_range))._field_stride == 1LLU) || (jule::mod(_19128_r - (*(_19417_range))._field_lo,(*(_19417_range))._field_stride) == 0LLU);
						}
					}
				}
				_iter_next_1a728ea55:;
				++it;
				_1dc4e2e71_i++;
				goto _iter_begin_1a728ea55;
			}
			_iter_end_1a728ea55:;
		}
		return false;
	}
	jule::Int _20813_lo = 0LL;
	jule::Int _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::Int _21113_m = _20813_lo + static_cast<jule::Int>(static_cast<jule::Int>(_20913_hi - _20813_lo) >> 1LLU);
			_1dc4e2e71_Range16* _21213_range = (&(_1919_ranges[_21113_m]));
			{
				if (((*(_21213_range))._field_lo <= _19128_r) && (_19128_r <= (*(_21213_range))._field_hi)) {
					return ((*(_21213_range))._field_stride == 1LLU) || (jule::mod(_19128_r - (*(_21213_range))._field_lo,(*(_21213_range))._field_stride) == 0LLU);
				}
				if (_19128_r < (*(_21213_range))._field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::Int>(_21113_m + 1LL);
				}
			}
		}
	_iter_next_1a728d57b:;
	}
	_iter_end_1a728d57b:;
	return false;
}



inline jule::Bool _1dc4e2e71_is32(jule::Slice<_1dc4e2e71_Range32> _2289_ranges,jule::U32 _22828_r) {
	if (_2289_ranges.len() <= 18LL) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1a7296aa1:;
			if (it != expr.end()) {
				jule::Int _1dc4e2e71_i = it - expr.begin();
				{
					_1dc4e2e71_Range32* _23117_range = (&(_2289_ranges.__at(_1dc4e2e71_i)));
					{
						if (_22828_r < (*(_23117_range))._field_lo) {
							return false;
						}
						if (_22828_r <= (*(_23117_range))._field_hi) {
							return ((*(_23117_range))._field_stride == 1LLU) || (jule::mod(_22828_r - (*(_23117_range))._field_lo,(*(_23117_range))._field_stride) == 0LLU);
						}
					}
				}
				_iter_next_1a7296aa1:;
				++it;
				_1dc4e2e71_i++;
				goto _iter_begin_1a7296aa1;
			}
			_iter_end_1a7296aa1:;
		}
		return false;
	}
	jule::Int _24513_lo = 0LL;
	jule::Int _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::Int _24813_m = _24513_lo + static_cast<jule::Int>(static_cast<jule::Int>(_24613_hi - _24513_lo) >> 1LLU);
			_1dc4e2e71_Range32* _24913_range = (&(_2289_ranges[_24813_m]));
			{
				if (((*(_24913_range))._field_lo <= _22828_r) && (_22828_r <= (*(_24913_range))._field_hi)) {
					return ((*(_24913_range))._field_stride == 1LLU) || (jule::mod(_22828_r - (*(_24913_range))._field_lo,(*(_24913_range))._field_stride) == 0LLU);
				}
				if (_22828_r < (*(_24913_range))._field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::Int>(_24813_m + 1LL);
				}
			}
		}
	_iter_next_1a728cea4:;
	}
	_iter_end_1a728cea4:;
	return false;
}



inline jule::Bool _1dc4e2e71_is_excluding_latin(jule::Ptr<_1dc4e2e71_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_1dc4e2e71_Range16> &_28014_r16 = (*(_27823_range_tab))._field_r16;
		jule::Int _28213_off = (*(_27823_range_tab))._field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(static_cast<jule::U32>(_28014_r16[_28014_r16.len() - 1LL]._field_hi)))) {
			return _1dc4e2e71_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		}
	}
	jule::Slice<_1dc4e2e71_Range32> &_28710_r32 = (*(_27823_range_tab))._field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(static_cast<jule::I32>(_28710_r32[0LL]._field_lo)))) {
		return _1dc4e2e71_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	}
	return false;
}



inline jule::Slice<jule::U8> _1db822405_stobs(jule::Str& _911_s) {
	{
		jule::Slice<jule::U8> slice;;
		slice.data.alloc = _911_s.begin();;
		slice.data.ref = nullptr;;
		slice._slice = slice.data.alloc;;
		slice._len = slice._cap = _911_s.len();;
		return slice;
	}
}



inline jule::Str _1db822922_repeat(jule::Str _1315_s,jule::Int _1327_n) {
	if (_1327_n <= 0LL) {
		return jule::Str();
	}
	jule::Str _1813_ss = _1315_s;
	for (; _1327_n > 1LL; (_1327_n)--) {
		{
			_1813_ss+=_1315_s;
		}
	_iter_next_1a72c2802:;
	}
	_iter_end_1a72c2802:;
	return _1813_ss;
}



inline jule::Bool _1db822922__has_prefix(jule::Str& _2517_s,jule::Str& _2526_sub,jule::Int _2540_start) {
	if ((_2526_sub.len() == 0LL) || ((_2517_s.len() - _2540_start) < static_cast<jule::Int>(_2526_sub.len()))) {
		return false;
	}
	jule::Int _3013_i = 0LL;
	for (; _3013_i < static_cast<jule::Int>(_2526_sub.len()); std::tie(_3013_i,_2540_start) = std::make_tuple(static_cast<jule::Int>(_3013_i + 1LL),static_cast<jule::Int>(_2540_start + 1LL))) {
		{
			if (_2517_s[_2540_start] != _2526_sub[_3013_i]) {
				return false;
			}
		}
	_iter_next_1a72c44a2:;
	}
	_iter_end_1a72c44a2:;
	return true;
}



inline jule::Bool _1db822922_has_prefix(jule::Str _4019_s,jule::Str _4027_sub) {
	return _1db822922__has_prefix(_4019_s,_4027_sub,0LL);
}



inline jule::Bool _1db822922__has_suffix(jule::Str& _4417_s,jule::Str& _4426_sub,jule::Int _4440_start) {
	if ((_4426_sub.len() == 0LL) || ((_4417_s.len() - _4440_start) < static_cast<jule::Int>(_4426_sub.len()))) {
		return false;
	}
	_4440_start=static_cast<jule::Int>(static_cast<jule::Int>(_4417_s.len()) - _4440_start);
	jule::Int _5013_i = 0LL;
	for (; _5013_i < static_cast<jule::Int>(_4426_sub.len()); (_5013_i)++) {
		{
			if (_4417_s[(_4440_start - _5013_i) - 1LL] != _4426_sub[(_4426_sub.len() - _5013_i) - 1LL]) {
				return false;
			}
		}
	_iter_next_1a72c6b25:;
	}
	_iter_end_1a72c6b25:;
	return true;
}



inline jule::Bool _1db822922_has_suffix(jule::Str _6019_s,jule::Str _6027_sub) {
	return _1db822922__has_suffix(_6019_s,_6027_sub,0LL);
}



inline jule::Int _1db822922_find_at(jule::Str _6816_s,jule::Str _6824_sub,jule::Int _6838_i) {
	if (((_6838_i < 0LL) || (_6816_s.len() < static_cast<jule::Int>(_6824_sub.len()))) || (_6824_sub.len() == 0LL)) {
		return -1LL;
	}
	for (; _6838_i < static_cast<jule::Int>(_6816_s.len()); (_6838_i)++) {
		{
			if (_1db822922__has_prefix(_6816_s,_6824_sub,_6838_i)) {
				return _6838_i;
			}
		}
	_iter_next_1a72cae6a:;
	}
	_iter_end_1a72cae6a:;
	return -1LL;
}



inline jule::Int _1db822922_find_last_at(jule::Str _9121_s,jule::Str _9129_sub,jule::Int _9139_i) {
	jule::Int _9213_j = (_9139_i - static_cast<jule::Int>(_9129_sub.len())) + 1LL;
	if ((((_9129_sub.len() == 0LL) || (_9139_i < 0LL)) || (_9139_i >= static_cast<jule::Int>(_9121_s.len()))) || (_9213_j < 0LL)) {
		return -1LL;
	}
	_julec_label_loop:;
	for (; _9213_j >= 0LL; (_9213_j)--) {
		{
			jule::Int _9817_k = _9213_j;
			jule::Int _9917_z = 0LL;
			for (; _9917_z < static_cast<jule::Int>(_9129_sub.len()); std::tie(_9817_k,_9917_z) = std::make_tuple(static_cast<jule::Int>(_9817_k + 1LL),static_cast<jule::Int>(_9917_z + 1LL))) {
				{
					if (_9121_s[_9817_k] != _9129_sub[_9917_z]) {
						goto _iter_next_1a72cd8da;
					}
				}
			_iter_next_1a72d0d0a:;
			}
			_iter_end_1a72d0d0a:;
			return _9213_j;
		}
	_iter_next_1a72cd8da:;
	}
	_iter_end_1a72cd8da:;
	return -1LL;
}



inline jule::Int _1db822922_find_last(jule::Str _11318_s,jule::Str _11326_sub) {
	return static_cast<jule::Int>(_1db822922_find_last_at(_11318_s,_11326_sub,static_cast<jule::Int>(static_cast<jule::Int>(_11318_s.len()) - 1LL)));
}



inline jule::Int _1db822922__find_rune(jule::Slice<jule::U8>& _16916_s,jule::I32 _16927_r) {
	jule::Int _17013_i = 0LL;
	while (_17013_i < static_cast<jule::Int>(_16916_s.len())) {
		{
			jule::I32 _17214_br;
			jule::Int _17218_n;
			std::tie(_17214_br,_17218_n) = _1db761ba2_decode_rune(_16916_s.slice(_17013_i));
			if (_16927_r == _17214_br) {
				return _17013_i;
			}
			_17013_i+=_17218_n;
		}
	_iter_next_1a72da6e9:;
	}
	_iter_end_1a72da6e9:;
	return -1LL;
}



inline jule::Int _1db822922_find_last_byte(jule::Str _19623_s,jule::U8 _19631_b) {
	jule::Int _19713_i = _19623_s.len() - 1LL;
	for (; _19713_i >= 0LL; (_19713_i)--) {
		{
			if (_19623_s[_19713_i] == _19631_b) {
				return _19713_i;
			}
		}
	_iter_next_1a72dd06a:;
	}
	_iter_end_1a72dd06a:;
	return -1LL;
}



inline jule::Int _1db822922_find_any(jule::Str _23717_s,jule::Str _23725_runes) {
	jule::Slice<jule::U8> _2389_sb = _1db822405_stobs(_23717_s);
	jule::Slice<jule::U8> _23913_rb = _1db822405_stobs(_23725_runes);
	jule::Int _24013_i = 0LL;
	while (_24013_i < static_cast<jule::Int>(_2389_sb.len())) {
		{
			jule::I32 _24214_r;
			jule::Int _24217_n;
			std::tie(_24214_r,_24217_n) = _1db761ba2_decode_rune(_2389_sb.slice(_24013_i));
			if (_1db822922__find_rune(_23913_rb,_24214_r) != -1LL) {
				return _24013_i;
			}
			_24013_i+=_24217_n;
		}
	_iter_next_1a72e3515:;
	}
	_iter_end_1a72e3515:;
	return -1LL;
}



inline jule::Slice<jule::Str> _1db822922_split(jule::Str _27114_s,jule::Str _27122_sub,jule::Int _27136_n) {
	jule::Slice<jule::Str> _27213_parts = jule::Slice<jule::Str>::alloc(0LL,static_cast<jule::Int>((((_27136_n < 0LL)) ? (10LL) : (_27136_n))));
	if (_27136_n == 0LL) {
		return _27213_parts;
	}
	if (_27136_n < 0LL) {
		_27136_n=static_cast<jule::Int>(_27114_s.len());
	}
	jule::Int _27913_i = 0LL;
	for (; _27136_n > 0LL; (_27136_n)--) {
		{
			jule::Int _28113_j = _1db822922_find_at(_27114_s,_27122_sub,_27913_i);
			if (_28113_j == -1LL) {
				goto _iter_end_1a72ea20e;
			}
			_27213_parts = jule::alloc_for_append(_27213_parts,1);_27213_parts.__push(_27114_s.slice(_27913_i,_28113_j));
			_27913_i=static_cast<jule::Int>(_28113_j + static_cast<jule::Int>(_27122_sub.len()));
		}
	_iter_next_1a72ea20e:;
	}
	_iter_end_1a72ea20e:;
	if ((_27136_n > 0LL) && (_27913_i < static_cast<jule::Int>(_27114_s.len()))) {
		_27213_parts = jule::alloc_for_append(_27213_parts,1);_27213_parts.__push(_27114_s.slice(_27913_i));
	}
	return _27213_parts;
}



inline jule::Bool _1db822922_contains(jule::Str _29517_s,jule::Str _29525_sub) {
	return _1db822922_find_at(_29517_s,_29525_sub,0LL) != -1LL;
}



inline jule::Bool _1db822922_contains_any(jule::Str _31121_s,jule::Str _31129_runes) {
	return _1db822922_find_any(_31121_s,_31129_runes) != -1LL;
}



inline jule::Str _1db822922_replace(jule::Str _33716_s,jule::Str _33724_sub,jule::Str _33734_new,jule::Int _33748_n) {
	if ((_33748_n == 0LL) || (_33724_sub == _33734_new)) {
		return _33716_s;
	}
	if (_33748_n < 0LL) {
		_33748_n=static_cast<jule::Int>(_33716_s.len());
	}
	jule::Str _34613_ss = jule::Str();
	jule::Int _34713_i = 0LL;
	for (; _33748_n > 0LL; (_33748_n)--) {
		{
			jule::Int _34913_j = _1db822922_find_at(_33716_s,_33724_sub,_34713_i);
			if (_34913_j == -1LL) {
				goto _iter_end_1a7304ba8;
			}
			_34613_ss+=_33716_s.slice(_34713_i,_34913_j);
			_34613_ss+=_33734_new;
			_34713_i=static_cast<jule::Int>(_34913_j + static_cast<jule::Int>(_33724_sub.len()));
		}
	_iter_next_1a7304ba8:;
	}
	_iter_end_1a7304ba8:;
	_34613_ss+=_33716_s.slice(_34713_i);
	return _34613_ss;
}



inline void _1db822922__trim_left(jule::Slice<jule::U8>& _38920_s,jule::Slice<jule::U8>& _38932_cutset) {
	jule::Int _39013_i = 0LL;
	while (_39013_i < static_cast<jule::Int>(_38920_s.len())) {
		{
			jule::I32 _39214_r;
			jule::Int _39217_n;
			std::tie(_39214_r,_39217_n) = _1db761ba2_decode_rune(_38920_s.slice(_39013_i));
			if (_1db822922__find_rune(_38932_cutset,_39214_r) == -1LL) {
				_38920_s=_38920_s.slice(_39013_i);
				goto _iter_end_1a730aab0;
			}
			_39013_i+=_39217_n;
		}
	_iter_next_1a730aab0:;
	}
	_iter_end_1a730aab0:;
}



inline jule::Str _1db822922_trim_left(jule::Str _40318_s,jule::Str _40326_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _1db822405_stobs(_40318_s);
	jule::Slice<jule::U8> _4059_bcutset = _1db822405_stobs(_40326_cutset);
	_1db822922__trim_left(_40413_bytes,_4059_bcutset);
	return static_cast<jule::Str>(_40413_bytes);
}



inline void _1db822922__trim_right(jule::Slice<jule::U8>& _41021_s,jule::Slice<jule::U8>& _41033_cutset) {
	jule::Int _41113_i = _41021_s.len();
	while (_41113_i > 0LL) {
		{
			jule::I32 _41314_r;
			jule::Int _41317_n;
			std::tie(_41314_r,_41317_n) = _1db761ba2_decode_last_rune(_41021_s.slice(0LL,_41113_i));
			if (_1db822922__find_rune(_41033_cutset,_41314_r) == -1LL) {
				_41021_s=_41021_s.slice(0LL,_41113_i);
				goto _iter_end_1a730db90;
			}
			_41113_i-=_41317_n;
		}
	_iter_next_1a730db90:;
	}
	_iter_end_1a730db90:;
}



inline jule::Str _1db822922_trim(jule::Str _43313_s,jule::Str _43321_cutset) {
	jule::Slice<jule::U8> _43413_bytes = _1db822405_stobs(_43313_s);
	jule::Slice<jule::U8> _4359_bcutset = _1db822405_stobs(_43321_cutset);
	_1db822922__trim_left(_43413_bytes,_4359_bcutset);
	_1db822922__trim_right(_43413_bytes,_4359_bcutset);
	return static_cast<jule::Str>(_43413_bytes);
}



inline jule::Bool _1db7ae0a6_is_path_sep(jule::U8 _4820_c) {
	return (_4820_c == 92LLU) || (_4820_c == '/');
}



inline jule::Bool _1db7ae0a6_is_slash(jule::U8 _5213_c) {
	return (_5213_c == '\\') || (_5213_c == '/');
}



inline jule::U8 _1db7ae0a6_to_upper(jule::U8 _5413_c) {
	if (('a' <= _5413_c) && (_5413_c <= 'z')) {
		return static_cast<jule::U8>(_5413_c - 32LLU);
	}
	return _5413_c;
}



inline jule::Int _1db7ae0a6_volume_name_len(jule::Str _8220_path) {
	if (_8220_path.len() < 2LL) {
		return 0LL;
	}
	jule::U8 _879_c = _8220_path[0LL];
	if ((_8220_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z')))) {
		return 2LL;
	}
	if ((!(_1db7ae0a6_is_slash(_8220_path[0LL]))) || (!(_1db7ae0a6_is_slash(_8220_path[1LL])))) {
		return 0LL;
	}
	jule::Str _9510_p1;
	jule::Str _9518_rest;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _1db7ae0a6_cut_path(_8220_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();
	jule::Bool _9713_ok = false;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _1db7ae0a6_cut_path(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::Int>(_8220_path.len());
	}
	if ((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1))) {
		return static_cast<jule::Int>(static_cast<jule::Int>(static_cast<jule::Int>(_8220_path.len()) - static_cast<jule::Int>(_9518_rest.len())) - 1LL);
	}
	if ((((_9613_p2.len() == 3LL) && (_1db7ae0a6_to_upper(_9613_p2[0LL]) == 'U')) && (_1db7ae0a6_to_upper(_9613_p2[1LL]) == 'N')) && (_1db7ae0a6_to_upper(_9613_p2[2LL]) == 'C')) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _1db7ae0a6_cut_path(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _1db7ae0a6_cut_path(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::Int>(_8220_path.len());
		}
	}
	return static_cast<jule::Int>(static_cast<jule::Int>(static_cast<jule::Int>(_8220_path.len()) - static_cast<jule::Int>(_9518_rest.len())) - 1LL);
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _1db7ae0a6_cut_path(jule::Str _11913_path) {
	jule::Str _11926_before = jule::Str();
	jule::Str _11939_after = jule::Str();
	jule::Bool _11951_found = jule::Bool();
	{
		auto &expr = _11913_path;
		auto it = expr.begin();
		_iter_begin_1a7334534:;
		if (it != expr.end()) {
			jule::Int _1db7ae0a6_i = it - expr.begin();
			{
				if (_1db7ae0a6_is_slash(_11913_path.__at(_1db7ae0a6_i))) {
					_11926_before = _11913_path.slice(0LL,_1db7ae0a6_i);
					_11939_after = _11913_path.slice(_1db7ae0a6_i + 1LL);
					_11951_found = true;
					return std::make_tuple(_11926_before,_11939_after,_11951_found);
				}
			}
			_iter_next_1a7334534:;
			++it;
			_1db7ae0a6_i++;
			goto _iter_begin_1a7334534;
		}
		_iter_end_1a7334534:;
	}
	_11926_before = _11913_path;
	_11939_after = jule::Str();
	_11951_found = false;
	return std::make_tuple(_11926_before,_11939_after,_11951_found);
}



inline std::tuple<jule::Str,jule::Bool> _1db7ae0a6_full_path(jule::Str _12814_name) {
	jule::Str _12827_path = jule::Str();
	jule::Bool _12838_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16_name = _1db6b9e3a_utf16_from_str(_12814_name);
	jule::U16* _1309_p = (&(_1299_utf16_name[0LL]));
	jule::U32 _13113_n = 100LLU;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::Int>(_13113_n));
			_13113_n=static_cast<jule::U32>(static_cast<jule::U32>(_1db653ae9_get_full_path_name(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr)));
			if (_13113_n == 0LLU) {
				_12827_path = jule::Str();
				_12838_ok = false;
				return std::make_tuple(_12827_path,_12838_ok);
			}
			if (_13113_n <= static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len()))) {
				_12827_path = _1db6b9e3a_utf16_to_str(_13317_buff.slice(0LL,static_cast<jule::Int>(_13113_n)));
				_12838_ok = true;
				return std::make_tuple(_12827_path,_12838_ok);
			}
		}
	_iter_next_1a7336712:;
	}
	_iter_end_1a7336712:;
	_12827_path = jule::Str();
	_12838_ok = false;
	return std::make_tuple(_12827_path,_12838_ok);
}



inline std::tuple<jule::Str,jule::Bool> _1db7ae0a6___abs(jule::Str _14514_path) {
	jule::Bool _14532_ok = jule::Bool();
	if (_14514_path == jule::Str()) {
		_14514_path=jule::Str(".", 1);
	}
	std::tie(_14514_path,_14532_ok) = _1db7ae0a6_full_path(_14514_path);
	if ((!(_14532_ok))) {
		_14532_ok = false;
		return std::make_tuple(jule::Str(),_14532_ok);
	}
	_14532_ok = true;
	return std::make_tuple(_1db7b8830_clean(_14514_path),_14532_ok);
}



inline jule::Str _1db7ae0a6___join(jule::Slice<jule::Str> _15915_elem) {
	jule::Str _16013_s = jule::Str();
	jule::U8 _16113_last_char = 0LLU;
	{
		auto &expr = _15915_elem;
		auto it = expr.begin();
		_iter_begin_1a73433bc:;
		if (it != expr.end()) {
			jule::Str _1db7ae0a6_e = *it;
			{
				{
					
					if (_16013_s.len() == 0LL) {
						_case_begin_1a7343e8e:;
					}
					else if (_1db7ae0a6_is_slash(_16113_last_char)) {
						_case_begin_1a7343c5d:;
						{
							while ((_1db7ae0a6_e.len() > 0LL) && _1db7ae0a6_is_slash(_1db7ae0a6_e[0LL])) {
								{
									_1db7ae0a6_e=_1db7ae0a6_e.slice(1LL);
								}
							_iter_next_1a7344c1a:;
							}
							_iter_end_1a7344c1a:;
						}
					}
					else if (_16113_last_char == ':') {
						_case_begin_1a7343cc4:;
					}
					else {
						_case_begin_1a7343b09:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_last_char='\\';
						}
					}
					_match_end_1a7343a3d:;
				}
				if (_1db7ae0a6_e.len() > 0LL) {
					_16013_s+=_1db7ae0a6_e;
					_16113_last_char=_1db7ae0a6_e[_1db7ae0a6_e.len() - 1LL];
				}
			}
			_iter_next_1a73433bc:;
			++it;
			goto _iter_begin_1a73433bc;
		}
		_iter_end_1a73433bc:;
	}
	if (_16013_s.len() == 0LL) {
		return jule::Str();
	}
	return _1db7b8830_clean(_16013_s);
}



inline jule::Str _1db7b8830_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;
	jule::Int _1109_vol_len = _1db7ae0a6_volume_name_len(_10818_path);
	_10818_path=_10818_path.slice(_1109_vol_len);
	if (_10818_path == jule::Str()) {
		if (((_1109_vol_len > 1LL) && _1db7ae0a6_is_path_sep(_1099_original_path[0LL])) && _1db7ae0a6_is_path_sep(_1099_original_path[1LL])) {
			return _1db7b8830_from_slash(_1099_original_path);
		}
		return _1099_original_path + jule::Str(".", 1);
	}
	jule::Bool _1199_rooted = _1db7ae0a6_is_path_sep(_10818_path[0LL]);
	jule::Int _1269_n = _10818_path.len();
	_1db7b8830_LazyBuff _12713_out = _1db7b8830_LazyBuff(_10818_path,jule::Slice<jule::U8>(),jule::Int(),_1099_original_path,_1109_vol_len);
	jule::Int _13214_r = 0LL;
	jule::Int _13221_dotdot = 0LL;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_12713_out._method_append(92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13214_r < _1269_n) {
		{
			{
				
				if (_1db7ae0a6_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1a73514da:;
					{
						(_13214_r)++;
					}
				}
				else if ((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1db7ae0a6_is_path_sep(_10818_path[_13214_r + 1LL]))) {
					_case_begin_1a73527c7:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (_10818_path[_13214_r + 1LL] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1db7ae0a6_is_path_sep(_10818_path[_13214_r + 2LL]))) {
					_case_begin_1a735283d:;
					{
						_13214_r+=2LL;
						{
							
							if (_12713_out._field_w > _13221_dotdot) {
								_case_begin_1a73561e3:;
								{
									(_12713_out._field_w)--;
									while ((_12713_out._field_w > _13221_dotdot) && (!(_1db7ae0a6_is_path_sep(static_cast<jule::U8>(_12713_out._method_index(_12713_out._field_w)))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1a7356a2e:;
									}
									_iter_end_1a7356a2e:;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1a7356259:;
								{
									if (_12713_out._field_w > 0LL) {
										_12713_out._method_append(92LLU);
									}
									_12713_out._method_append('.');
									_12713_out._method_append('.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1a735615a:;
						}
					}
				}
				else {
					_case_begin_1a734c53b:;
					{
						if ((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL))) {
							_12713_out._method_append(92LLU);
						}
						if (((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_vol_len == 0LL)) && (_13214_r != 0LL)) {
							jule::Int _17525_i = _13214_r;
							for (; (_17525_i < _1269_n) && (!(_1db7ae0a6_is_path_sep(_10818_path[_17525_i]))); (_17525_i)++) {
								{
									if (_10818_path[_17525_i] == ':') {
										_12713_out._method_append('.');
										_12713_out._method_append(92LLU);
										goto _iter_end_1a734e054;
									}
								}
							_iter_next_1a734e054:;
							}
							_iter_end_1a734e054:;
						}
						for (; (_13214_r < _1269_n) && (!(_1db7ae0a6_is_path_sep(_10818_path[_13214_r]))); (_13214_r)++) {
							{
								_12713_out._method_append(_10818_path[_13214_r]);
							}
						_iter_next_1a734dc35:;
						}
						_iter_end_1a734dc35:;
					}
				}
				_match_end_1a734c470:;
			}
		}
	_iter_next_1a734be42:;
	}
	_iter_end_1a734be42:;
	if (_12713_out._field_w == 0LL) {
		_12713_out._method_append('.');
	}
	return _1db7b8830_from_slash(_12713_out._method_string());
}



inline jule::Str _1db7b8830_from_slash(jule::Str _21119_path) {
	
	return _1db822922_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _1db7b8830_join(jule::Slice<jule::Str> _22513_elem) {
	return _1db7ae0a6___join(_22513_elem);
}



inline jule::Str _1db7b8830_ext(jule::Str _23012_path) {
	jule::Int _23113_i = _23012_path.len() - 1LL;
	for (; (_23113_i >= 0LL) && (!(_1db7ae0a6_is_path_sep(_23012_path[_23113_i]))); (_23113_i)--) {
		{
			if (_23012_path[_23113_i] == '.') {
				return _23012_path.slice(_23113_i);
			}
		}
	_iter_next_1a735b869:;
	}
	_iter_end_1a735b869:;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1db7b8830_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;
	jule::Bool _24620_ok;
	std::tie(_24610_abs_path,_24620_ok) = _1db7ae0a6___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1db7b8830_base(jule::Str _25417_path) {
	if (_25417_path == jule::Str()) {
		return jule::Str(".", 1);
	}
	while ((_25417_path.len() > 0LL) && _1db7ae0a6_is_path_sep(_25417_path[_25417_path.len() - 1LL])) {
		{
			_25417_path=_25417_path.slice(0LL,_25417_path.len() - 1LL);
		}
	_iter_next_1a735e6d5:;
	}
	_iter_end_1a735e6d5:;
	_25417_path=_25417_path.slice(_1db7b8830_volume_name(_25417_path).len());
	jule::Int _26513_i = _25417_path.len() - 1LL;
	while ((_26513_i >= 0LL) && (!(_1db7ae0a6_is_path_sep(_25417_path[_26513_i])))) {
		{
			(_26513_i)--;
		}
	_iter_next_1a735e592:;
	}
	_iter_end_1a735e592:;
	if (_26513_i >= 0LL) {
		_25417_path=_25417_path.slice(_26513_i + 1LL);
	}
	if (_25417_path == jule::Str()) {
		return static_cast<jule::Str>(92LL);
	}
	return _25417_path;
}



inline jule::Str _1db7b8830_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _1db7b8830_volume_name(_28512_path);
	jule::Int _28713_i = _28512_path.len() - 1LL;
	while ((_28713_i >= static_cast<jule::Int>(_2869_vol.len())) && (!(_1db7ae0a6_is_path_sep(_28512_path[_28713_i])))) {
		{
			(_28713_i)--;
		}
	_iter_next_1a7362e7a:;
	}
	_iter_end_1a7362e7a:;
	jule::Str _2919_dir = _1db7b8830_clean(_28512_path.slice(_2869_vol.len(),_28713_i + 1LL));
	if ((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL)) {
		return _2869_vol;
	}
	return _2869_vol + _2919_dir;
}



inline jule::Str _1db7b8830_volume_name(jule::Str _30320_path) {
	return _1db7b8830_from_slash(_30320_path.slice(0LL,_1db7ae0a6_volume_name_len(_30320_path)));
}



inline jule::Int _1db67518c_get_last_fs_error(void) {
	jule::Int _729_err = _1db64c3c8_get_last_errno();
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a739b315:;
			{
				return static_cast<jule::Int>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a739b37b:;
			{
				return static_cast<jule::Int>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1a739ad3c:;
			{
				return static_cast<jule::Int>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1a739ada3:;
			{
				return static_cast<jule::Int>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a739ae19:;
			{
				return static_cast<jule::Int>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a739ae80:;
			{
				return static_cast<jule::Int>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1a739b59b:;
			{
				return static_cast<jule::Int>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a739b612:;
			{
				return static_cast<jule::Int>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a739b678:;
			{
				return static_cast<jule::Int>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a739b6de:;
			{
				return static_cast<jule::Int>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a739b755:;
			{
				return static_cast<jule::Int>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a739b7bb:;
			{
				return static_cast<jule::Int>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a739b832:;
			{
				return static_cast<jule::Int>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a739b898:;
			{
				return static_cast<jule::Int>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a739b90e:;
			{
				return static_cast<jule::Int>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1a739b975:;
			{
				return static_cast<jule::Int>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a739b9db:;
			{
				return static_cast<jule::Int>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a739ba63:;
			{
				return static_cast<jule::Int>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a739bada:;
			{
				return static_cast<jule::Int>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a739bb62:;
			{
				return static_cast<jule::Int>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1a739bbd9:;
			{
				return static_cast<jule::Int>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a739bc61:;
			{
				return static_cast<jule::Int>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a739bcd8:;
			{
				return static_cast<jule::Int>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a739bd60:;
			{
				return static_cast<jule::Int>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a739bdd7:;
			{
				return static_cast<jule::Int>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1a739be5e:;
			{
				return static_cast<jule::Int>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1a739bed6:;
			{
				return static_cast<jule::Int>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1a739c05d:;
			{
				return static_cast<jule::Int>(27LL);
			}
		}
		else {
			_case_begin_1a73986a8:;
			{
				return static_cast<jule::Int>(1LL);
			}
		}
		_match_end_1a739aaa6:;
	}
}



inline jule::Bool _1db72dda0_is_console_handle(jule::Uintptr _11822_handle) {
	return ((_11822_handle == _1db653ae9_STDIN) || (_11822_handle == _1db653ae9_STDOUT)) || (_11822_handle == _1db653ae9_STDERR);
}



inline jule::Int _1dce5a344_get_last_process_error(void) {
	jule::Int _429_err = _1db64c3c8_get_last_errno();
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a73b24b3:;
			{
				return static_cast<jule::Int>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1a73b2529:;
			{
				return static_cast<jule::Int>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1a73b2590:;
			{
				return static_cast<jule::Int>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a73b2606:;
			{
				return static_cast<jule::Int>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a73b2705:;
			{
				return static_cast<jule::Int>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a73b276b:;
			{
				return static_cast<jule::Int>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a73b27d2:;
			{
				return static_cast<jule::Int>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1a73b2848:;
			{
				return static_cast<jule::Int>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1a73b28ae:;
			{
				return static_cast<jule::Int>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1a73b2c33:;
			{
				return static_cast<jule::Int>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1a73b2c99:;
			{
				return static_cast<jule::Int>(11LL);
			}
		}
		else {
			_case_begin_1a73ae0e7:;
			{
				return static_cast<jule::Int>(0LL);
			}
		}
		_match_end_1a73b22c6:;
	}
}



inline jule::Slice<wchar_t*> _1dce6156a_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>> _1830_us) {
	jule::Slice<wchar_t*> _1913_wcs = jule::Slice<wchar_t*>::alloc(0LL,static_cast<jule::Int>(_1830_us.len() + 1LL));
	{
		auto &expr = _1830_us;
		auto it = expr.begin();
		_iter_begin_1a73b6462:;
		if (it != expr.end()) {
			jule::Int _1dce6156a_i = it - expr.begin();
			{
				_1913_wcs = jule::alloc_for_append(_1913_wcs,1);_1913_wcs.__push(((wchar_t*)((&(_1830_us.__at(_1dce6156a_i)[0LL])))));
			}
			_iter_next_1a73b6462:;
			++it;
			_1dce6156a_i++;
			goto _iter_begin_1a73b6462;
		}
		_iter_end_1a73b6462:;
	}
	_1913_wcs = jule::alloc_for_append(_1913_wcs,1);_1913_wcs.__push(nullptr);
	return _1913_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _1dce6156a_str_slice_to_ustr_slice(jule::Slice<jule::Str> _2728_s) {
	jule::Slice<jule::Slice<jule::U16>> _2813_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,static_cast<jule::Int>(_2728_s.len()));
	{
		auto &expr = _2728_s;
		auto it = expr.begin();
		_iter_begin_1a73b7e7a:;
		if (it != expr.end()) {
			jule::Str &_1dce6156a_p = *it;
			{
				_2813_us = jule::alloc_for_append(_2813_us,1);_2813_us.__push(_1db6b9e3a_utf16_from_str(_1dce6156a_p));
			}
			_iter_next_1a73b7e7a:;
			++it;
			goto _iter_begin_1a73b7e7a;
		}
		_iter_end_1a73b7e7a:;
	}
	return _2813_us;
}



inline jule::Int _1dce6156a_execvp(jule::Str _3511_file,jule::Slice<jule::Str> _3522_argv) {
	jule::Slice<jule::U16> _369_utf16_file = _1db6b9e3a_utf16_from_str(_3511_file);
	jule::Slice<jule::Slice<jule::U16>> _379_ucargv = _1dce6156a_str_slice_to_ustr_slice(_3522_argv);
	jule::Slice<wchar_t*> _389_cargv = _1dce6156a_ustr_slice_to_wcstr_slice(_379_ucargv);
	return static_cast<jule::Int>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_369_utf16_file[0LL])))),(&(_389_cargv[0LL]))));
}



inline jule::Int _1dce6156a_execve(jule::Str _4211_file,jule::Slice<jule::Str> _4222_argv,jule::Slice<jule::Str> _4235_env) {
	jule::Slice<jule::Slice<jule::U16>> _439_ucargv = _1dce6156a_str_slice_to_ustr_slice(_4222_argv);
	jule::Slice<wchar_t*> _449_cargv = _1dce6156a_ustr_slice_to_wcstr_slice(_439_ucargv);
	jule::Slice<jule::Slice<jule::U16>> _459_ucenv = _1dce6156a_str_slice_to_ustr_slice(_4235_env);
	jule::Slice<wchar_t*> _469_cenv = _1dce6156a_ustr_slice_to_wcstr_slice(_459_ucenv);
	jule::Slice<jule::U16> _479_utf16_file = _1db6b9e3a_utf16_from_str(_4211_file);
	return static_cast<jule::Int>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_479_utf16_file[0LL])))),(&(_449_cargv[0LL])),(&(_469_cenv[0LL]))));
}



inline void _1dce863c5_exit(jule::Int _1213_code) {
	_1db66e3b7_exit(_1213_code);
}



inline jule::Str _1dce863c5_executable(void) {
	return jule::executable();
}



inline jule::Bool _1db676578_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[_2627_p.len() - 1LL] == '>');
}



inline jule::Bool _1db676578_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _1db676578_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1a73ee6ba:;
		if (it != expr.end()) {
			jule::Str &_1db676578_valid_ext = *it;
			{
				if (_3128_ext == _1db676578_valid_ext) {
					return true;
				}
			}
			_iter_next_1a73ee6ba:;
			++it;
			goto _iter_begin_1a73ee6ba;
		}
		_iter_end_1a73ee6ba:;
	}
	return false;
}



inline jule::Bool _1db676578_is_valid_cpp_ext(jule::Str _4225_ext) {
	if (_4225_ext == jule::Str(".c", 2)) {
		return true;
	}
	{
		auto &expr = _1db676578_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1a7401106:;
		if (it != expr.end()) {
			jule::Str &_1db676578_e = *it;
			{
				if (_4225_ext == _1db676578_e) {
					return true;
				}
			}
			_iter_next_1a7401106:;
			++it;
			goto _iter_begin_1a7401106;
		}
		_iter_end_1a7401106:;
	}
	{
		auto &expr = _1db676578_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1a7402932:;
		if (it != expr.end()) {
			jule::Str &_1db676578_e = *it;
			{
				if (_4225_ext == _1db676578_e) {
					return true;
				}
			}
			_iter_next_1a7402932:;
			++it;
			goto _iter_begin_1a7402932;
		}
		_iter_end_1a7402932:;
	}
	return false;
}



inline jule::Str _1db678789_logf(jule::Str _29213_fmt,jule::Slice<jule::Any> _29226_args) {
	return _1db678789_apply_fmt(_29213_fmt,_29226_args);
}



inline jule::Str _1db678789_arg_to_str(jule::Any _29615_arg) {
	{
		auto &_match_expr{ _29615_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a740434b:;
			{
				return _29615_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1a74043b2:;
			{
				return static_cast<jule::Str>(_29615_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1a7404428:;
			{
				return static_cast<jule::Str>(_29615_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1a74035e2:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1a7403d0c:;
	}
}



inline jule::Int _1db678789_find_next_fmt(jule::Str _30518_fmt) {
	{
		auto &expr = _30518_fmt;
		auto it = expr.begin();
		_iter_begin_1a7404e95:;
		if (it != expr.end()) {
			jule::Int _1db678789_i = it - expr.begin();
			jule::U8 &_1db678789_b = *it;
			{
				if (_1db678789_b == '@') {
					return _1db678789_i;
				}
			}
			_iter_next_1a7404e95:;
			++it;
			_1db678789_i++;
			goto _iter_begin_1a7404e95;
		}
		_iter_end_1a7404e95:;
	}
	return -1LL;
}



inline jule::Str _1db678789_apply_fmt(jule::Str _31418_fmt,jule::Slice<jule::Any> _31428_args) {
	jule::Str _31513_s = jule::Str();
	{
		auto &expr = _31428_args;
		auto it = expr.begin();
		_iter_begin_1a740689d:;
		if (it != expr.end()) {
			jule::Any &_1db678789_arg = *it;
			{
				jule::Int _31813_i = _1db678789_find_next_fmt(_31418_fmt);
				if (_31813_i == -1LL) {
					goto _iter_end_1a740689d;
				}
				_31513_s+=_31418_fmt.slice(0LL,_31813_i);
				_31513_s+=_1db678789_arg_to_str(_1db678789_arg);
				_31418_fmt=_31418_fmt.slice(_31813_i + 1LL);
			}
			_iter_next_1a740689d:;
			++it;
			goto _iter_begin_1a740689d;
		}
		_iter_end_1a740689d:;
	}
	_31513_s+=_31418_fmt;
	return _31513_s;
}



inline jule::Bool _1dc49aba4_is_top_directive(jule::Str _2825_directive) {
	return (_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5));
}



inline jule::Bool _1db6462e5_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



inline jule::Bool _1db6462e5_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



inline jule::Bool _1db6462e5_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



inline jule::Bool _1db6462e5_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



inline jule::Bool _1db6462e5_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



inline jule::Bool _1db6462e5_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



inline jule::Bool _1db6462e5_is_unix(jule::Str _6316_os) {
	return _1db6462e5_is_darwin(_6316_os) || _1db6462e5_is_linux(_6316_os);
}



inline jule::Bool _1db6462e5_is_32bit(jule::Str _6517_arch) {
	return _1db6462e5_is_i386(_6517_arch);
}



inline jule::Bool _1db6462e5_is_64bit(jule::Str _6717_arch) {
	return _1db6462e5_is_amd64(_6717_arch) || _1db6462e5_is_arm64(_6717_arch);
}



inline void _1db841039_init(void) {
	jule::Str _1713_path = _1dce863c5_executable();
	if (_1713_path == jule::Str()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:19:9"));;
	}
	jule::Str _229_pwd = ({
		auto except = _1db640cc3_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:23:9"));;
			return;
			return;
		} jule::Str();});
	});
	jule::Str _279_path_exec = _1db7b8830_dir(_1713_path);
	_1713_path=_1db7b8830_join(jule::Slice<jule::Str>({_279_path_exec,jule::Str("..", 2)}));
	{
		_1db841039_PATH_WD=_229_pwd;
		_1db841039_PATH_EXEC=_279_path_exec;
		_1db841039_PATH_STDLIB=_1db7b8830_join(jule::Slice<jule::Str>({_1713_path,jule::Str("std", 3)}));
		_1db841039_PATH_API=_1db7b8830_join(jule::Slice<jule::Str>({_1db841039_PATH_EXEC,jule::Str("..", 2)}));
		_1db841039_PATH_API=_1db7b8830_join(jule::Slice<jule::Str>({_1db841039_PATH_API,jule::Str("api", 3)}));
		_1db841039_PATH_API=_1db7b8830_join(jule::Slice<jule::Str>({_1db841039_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Bool _1dd05db0c_is_unary_op(jule::Str _31820_kind) {
	{
		auto &expr = _1dd05db0c_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1a74aba30:;
		if (it != expr.end()) {
			jule::Str &_1dd05db0c_op = *it;
			{
				if (_31820_kind == _1dd05db0c_op) {
					return true;
				}
			}
			_iter_next_1a74aba30:;
			++it;
			goto _iter_begin_1a74aba30;
		}
		_iter_end_1a74aba30:;
	}
	return false;
}



inline jule::Bool _1dd05db0c_is_bin_op(jule::Str _32918_kind) {
	{
		auto &expr = _1dd05db0c_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1a749e407:;
		if (it != expr.end()) {
			jule::Str &_1dd05db0c_op = *it;
			{
				if (_32918_kind == _1dd05db0c_op) {
					return true;
				}
			}
			_iter_next_1a749e407:;
			++it;
			goto _iter_begin_1a749e407;
		}
		_iter_end_1a749e407:;
	}
	return false;
}



inline jule::Bool _1dd05db0c_is_str(jule::Str _35115_k) {
	return (_35115_k != jule::Str()) && ((_35115_k[0LL] == '\"') || _1dd05db0c_is_raw_str(_35115_k));
}



inline jule::Bool _1dd05db0c_is_raw_str(jule::Str _35319_k) {
	return (_35319_k != jule::Str()) && (_35319_k[0LL] == '`');
}



inline jule::Bool _1dd05db0c_is_rune(jule::Str _35616_k) {
	return (_35616_k != jule::Str()) && (_35616_k[0LL] == '\'');
}



inline jule::Bool _1dd05db0c_is_bool(jule::Str _36016_k) {
	return (_36016_k == jule::Str("true", 4)) || (_36016_k == jule::Str("false", 5));
}



inline jule::Bool _1dd05db0c_is_float(jule::Str _36317_k) {
	if (_1db822922_has_prefix(_36317_k,jule::Str("0x", 2))) {
		return _1db822922_contains_any(_36317_k,jule::Str(".pP", 3));
	}
	return _1db822922_contains_any(_36317_k,jule::Str(".eE", 3));
}



inline jule::Bool _1dd05db0c_is_num(jule::Str _37115_k) {
	if (_37115_k == jule::Str()) {
		return false;
	}
	jule::U8 _3769_b = _37115_k[0LL];
	return (_3769_b == '.') || (('0' <= _3769_b) && (_3769_b <= '9'));
}



inline jule::Bool _1dd05db0c_is_ignore_ident(jule::Str _38624_ident) {
	return _38624_ident == jule::Str("_", 1);
}



inline jule::Bool _1dd05db0c_is_anon_ident(jule::Str _38822_ident) {
	return _38822_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _1dd05db0c_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _1dd05db0c_SPACES;
		auto it = expr.begin();
		_iter_begin_1a74b8861:;
		if (it != expr.end()) {
			jule::I32 &_1dd05db0c_cr = *it;
			{
				if (_40217_r == _1dd05db0c_cr) {
					return true;
				}
			}
			_iter_next_1a74b8861:;
			++it;
			goto _iter_begin_1a74b8861;
		}
		_iter_end_1a74b8861:;
	}
	return false;
}



inline jule::Bool _1dd05db0c_is_letter(jule::I32 _41318_r) {
	return _1dc4712ea_is_letter(_41318_r);
}



inline jule::Bool _1dd05db0c_is_decimal(jule::U8 _43519_b) {
	return ('0' <= _43519_b) && (_43519_b <= '9');
}



inline jule::Bool _1dd05db0c_is_binary(jule::U8 _43718_b) {
	return (_43718_b == '0') || (_43718_b == '1');
}



inline jule::Bool _1dd05db0c_is_octal(jule::U8 _43917_b) {
	return ('0' <= _43917_b) && (_43917_b <= '7');
}



inline jule::Bool _1dd05db0c_is_hex(jule::U8 _44215_b) {
	{
		
		if (('0' <= _44215_b) && (_44215_b <= '9')) {
			_case_begin_1a74bd9ed:;
			{
				return true;
			}
		}
		else if (('a' <= _44215_b) && (_44215_b <= 'f')) {
			_case_begin_1a74bda64:;
			{
				return true;
			}
		}
		else if (('A' <= _44215_b) && (_44215_b <= 'F')) {
			_case_begin_1a74bd3d2:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a74bd27d:;
			{
				return false;
			}
		}
		_match_end_1a74bd1d4:;
	}
}



inline jule::Bool _1dd05db0c_is_assign(jule::Uint _45418_id) {
	return ((((((_45418_id == static_cast<jule::Uint>(2LLU)) || (_45418_id == static_cast<jule::Uint>(31LLU))) || (_45418_id == static_cast<jule::Uint>(34LLU))) || (_45418_id == static_cast<jule::Uint>(20LLU))) || (_45418_id == static_cast<jule::Uint>(28LLU))) || (_45418_id == static_cast<jule::Uint>(3LLU))) || (_45418_id == static_cast<jule::Uint>(7LLU));
}



inline jule::Bool _1dd05db0c_is_postfix_op(jule::Str _46722_kind) {
	{
		auto &expr = _1dd05db0c_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1a74c077a:;
		if (it != expr.end()) {
			jule::Str &_1dd05db0c_op = *it;
			{
				if (_46722_kind == _1dd05db0c_op) {
					return true;
				}
			}
			_iter_next_1a74c077a:;
			++it;
			goto _iter_begin_1a74c077a;
		}
		_iter_end_1a74c077a:;
	}
	return false;
}



inline jule::Bool _1dd05db0c_is_assign_op(jule::Str _47821_kind) {
	if (_1dd05db0c_is_postfix_op(_47821_kind)) {
		return true;
	}
	{
		auto &expr = _1dd05db0c_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1a74c3591:;
		if (it != expr.end()) {
			jule::Str &_1dd05db0c_op = *it;
			{
				if (_47821_kind == _1dd05db0c_op) {
					return true;
				}
			}
			_iter_next_1a74c3591:;
			++it;
			goto _iter_begin_1a74c3591;
		}
		_iter_end_1a74c3591:;
	}
	return false;
}



inline jule::Ptr<_1dd05eba7_File> _1dd05eba7_new_file_set(jule::Str _6421_path) {
	return jule::new_struct<_1dd05eba7_File>(new( std::nothrow ) _1dd05eba7_File(jule::Slice<jule::U8>(),_6421_path,jule::Slice<_1dd05db0c_Token>()));
}



inline _1db678789_Log _1dd0ed32d_make_err(jule::Int _10513_row,jule::Int _10523_col,jule::Ptr<_1dd05eba7_File>& _10534_f,jule::Str _10544_fmt,jule::Slice<jule::Any> _10557_args) {
	return _1db678789_Log(static_cast<jule::Int>(1LL),_10513_row,_10523_col,(*(_10534_f))._method_path(),_1db678789_logf(_10544_fmt,_10557_args),jule::Str(),jule::Str());
}



inline jule::Bool _1dd0ed32d_bytes_has_prefix(jule::Slice<jule::U8>& _11522_bytes,jule::Str _11537_prefix) {
	if (_11522_bytes.len() < static_cast<jule::Int>(_11537_prefix.len())) {
		return false;
	}
	{
		auto &expr = _11537_prefix;
		auto it = expr.begin();
		_iter_begin_1a74c651c:;
		if (it != expr.end()) {
			jule::Int _1dd0ed32d_i = it - expr.begin();
			{
				if (_11522_bytes[_1dd0ed32d_i] != _11537_prefix.__at(_1dd0ed32d_i)) {
					return false;
				}
			}
			_iter_next_1a74c651c:;
			++it;
			_1dd0ed32d_i++;
			goto _iter_begin_1a74c651c;
		}
		_iter_end_1a74c651c:;
	}
	return true;
}



inline jule::Str _1dd0ed32d_float_fmt_e(jule::Slice<jule::U8>& _12717_txt,jule::Int _12734_i) {
	jule::Str _12744_lit = jule::Str();
	(_12734_i)++;
	if (_12734_i >= static_cast<jule::Int>(_12717_txt.len())) {
		return _12744_lit;
	}
	jule::U8 _13313_b = _12717_txt[_12734_i];
	if (_13313_b == '_') {
		return _12744_lit;
	}
	if ((_13313_b == '+') || (_13313_b == '-')) {
		(_12734_i)++;
		if (_12734_i >= static_cast<jule::Int>(_12717_txt.len())) {
			return _12744_lit;
		}
		if (_12717_txt[_12734_i] == '_') {
			return _12744_lit;
		}
	}
	jule::Int _1479_first = _12734_i;
	for (; _12734_i < static_cast<jule::Int>(_12717_txt.len()); (_12734_i)++) {
		{
			_13313_b=_12717_txt[_12734_i];
			if ((_13313_b != '_') && (!(_1dd05db0c_is_decimal(_13313_b)))) {
				goto _iter_end_1a74c9b3b;
			}
		}
	_iter_next_1a74c9b3b:;
	}
	_iter_end_1a74c9b3b:;
	if (_12734_i == _1479_first) {
		_12744_lit = jule::Str();
		return _12744_lit;
	}
	_12744_lit = static_cast<jule::Str>(_12717_txt.slice(0LL,_12734_i));
	return _12744_lit;
}



inline jule::Str _1dd0ed32d_float_fmt_p(jule::Slice<jule::U8>& _16117_txt,jule::Int _16130_i) {
	return _1dd0ed32d_float_fmt_e(_16117_txt,_16130_i);
}



inline jule::Str _1dd0ed32d_float_fmt_dotnp(jule::Slice<jule::U8>& _16521_txt,jule::Int _16538_i) {
	if (_16521_txt[_16538_i] != '.') {
		return jule::Str();
	}
	(_16538_i)++;
	_julec_label_loop:;
	for (; _16538_i < static_cast<jule::Int>(_16521_txt.len()); (_16538_i)++) {
		{
			jule::U8 _17313_b = _16521_txt[_16538_i];
			{
				
				if (_17313_b == '_' || _1dd05db0c_is_decimal(_17313_b)) {
					_case_begin_1a74cde81:;
					{
						goto _iter_next_1a74cd28d;
					}
				}
				else if (_1dd0ed32d_is_float_fmt_p(_17313_b,_16538_i)) {
					_case_begin_1a74cdee7:;
					{
						return _1dd0ed32d_float_fmt_p(_16521_txt,_16538_i);
					}
				}
				else {
					_case_begin_1a74cdce9:;
					{
						goto _iter_end_1a74cd28d;
					}
				}
				_match_end_1a74cdc72:;
			}
		}
	_iter_next_1a74cd28d:;
	}
	_iter_end_1a74cd28d:;
	return jule::Str();
}



inline jule::Str _1dd0ed32d_float_fmt_dotfp(jule::Slice<jule::U8>& _18821_txt,jule::Int _18838_i) {
	_18838_i+=2LL;
	return _1dd0ed32d_float_fmt_e(_18821_txt,_18838_i);
}



inline jule::Str _1dd0ed32d_float_fmt_dotp(jule::Slice<jule::U8>& _19520_txt,jule::Int _19537_i) {
	(_19537_i)++;
	return _1dd0ed32d_float_fmt_e(_19520_txt,_19537_i);
}



inline jule::Str _1dd0ed32d_float_num(jule::Slice<jule::U8>& _20215_txt,jule::Int _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if ((_20232_i >= static_cast<jule::Int>(_20215_txt.len())) || (_20215_txt[_20232_i] == '_')) {
		_20242_lit = jule::Str();
		return _20242_lit;
	}
	for (; _20232_i < static_cast<jule::Int>(_20215_txt.len()); (_20232_i)++) {
		{
			jule::U8 _20813_b = _20215_txt[_20232_i];
			if ((_20232_i > 1LL) && ((_20813_b == 'e') || (_20813_b == 'E'))) {
				_20242_lit = _1dd0ed32d_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			}
			if ((_20813_b != '_') && (!(_1dd05db0c_is_decimal(_20813_b)))) {
				goto _iter_end_1a74d2bdd;
			}
		}
	_iter_next_1a74d2bdd:;
	}
	_iter_end_1a74d2bdd:;
	if (_20232_i == 1LL) {
		return _20242_lit;
	}
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _1dd0ed32d_common_num(jule::Slice<jule::U8>& _22316_txt) {
	jule::Str _22331_lit = jule::Str();
	jule::Int _22413_i = 0LL;
	_julec_label_loop:;
	for (; _22413_i < static_cast<jule::Int>(_22316_txt.len()); (_22413_i)++) {
		{
			jule::U8 _22713_b = _22316_txt[_22413_i];
			{
				
				if (_22713_b == '.') {
					_case_begin_1a74d6c36:;
					{
						_22331_lit = _1dd0ed32d_float_num(_22316_txt,_22413_i);
						return _22331_lit;
					}
				}
				else if (_22713_b == '_') {
					_case_begin_1a74d6cad:;
					{
						goto _iter_next_1a74d6131;
					}
				}
				else if (_1dd0ed32d_is_float_fmt_e(_22713_b,_22413_i)) {
					_case_begin_1a74d6d35:;
					{
						_22331_lit = _1dd0ed32d_float_fmt_e(_22316_txt,_22413_i);
						return _22331_lit;
					}
				}
				else if ((!(_1dd05db0c_is_decimal(_22713_b)))) {
					_case_begin_1a74d6dac:;
					{
						goto _iter_end_1a74d6131;
					}
				}
				_match_end_1a74d6b59:;
			}
		}
	_iter_next_1a74d6131:;
	}
	_iter_end_1a74d6131:;
	if (_22413_i == 0LL) {
		return _22331_lit;
	}
	_22331_lit = static_cast<jule::Str>(_22316_txt.slice(0LL,_22413_i));
	return _22331_lit;
}



inline jule::Str _1dd0ed32d_binary_num(jule::Slice<jule::U8>& _24616_txt) {
	jule::Str _24631_lit = jule::Str();
	if ((!(_1dd0ed32d_bytes_has_prefix(_24616_txt,jule::Str("0b", 2))))) {
		_24631_lit = jule::Str();
		return _24631_lit;
	}
	if (_24616_txt.len() < 2LL) {
		return _24631_lit;
	}
	
	jule::Int _25513_i = 2LL;
	for (; _25513_i < static_cast<jule::Int>(_24616_txt.len()); (_25513_i)++) {
		{
			if ((_24616_txt[_25513_i] != '_') && (!(_1dd05db0c_is_binary(_24616_txt[_25513_i])))) {
				goto _iter_end_1a74dac29;
			}
		}
	_iter_next_1a74dac29:;
	}
	_iter_end_1a74dac29:;
	if (_25513_i == 2LL) {
		return _24631_lit;
	}
	_24631_lit = static_cast<jule::Str>(_24616_txt.slice(0LL,_25513_i));
	return _24631_lit;
}



inline jule::Bool _1dd0ed32d_is_float_fmt_e(jule::U8 _26819_b,jule::Int _26828_i) {
	return (_26828_i > 0LL) && ((_26819_b == 'e') || (_26819_b == 'E'));
}



inline jule::Bool _1dd0ed32d_is_float_fmt_p(jule::U8 _27219_b,jule::Int _27228_i) {
	return (_27228_i > 0LL) && ((_27219_b == 'p') || (_27219_b == 'P'));
}



inline jule::Bool _1dd0ed32d_is_float_fmt_dotnp(jule::Slice<jule::U8>& _27624_txt,jule::Int _27641_i) {
	if (_27624_txt[_27641_i] != '.') {
		return false;
	}
	(_27641_i)++;
	_julec_label_loop:;
	for (; _27641_i < static_cast<jule::Int>(_27624_txt.len()); (_27641_i)++) {
		{
			jule::U8 _28413_b = _27624_txt[_27641_i];
			{
				
				if (_28413_b == '_' || _1dd05db0c_is_decimal(_28413_b)) {
					_case_begin_1a74e1108:;
					{
						goto _iter_next_1a74e015c;
					}
				}
				else if (_1dd0ed32d_is_float_fmt_p(_28413_b,_27641_i)) {
					_case_begin_1a74e116e:;
					{
						return true;
					}
				}
				else {
					_case_begin_1a74e0e71:;
					{
						goto _iter_end_1a74e015c;
					}
				}
				_match_end_1a74e0de9:;
			}
		}
	_iter_next_1a74e015c:;
	}
	_iter_end_1a74e015c:;
	return false;
}



inline jule::Bool _1dd0ed32d_is_float_fmt_dotp(jule::Slice<jule::U8>& _29823_txt,jule::Int _29836_i) {
	{
		
		if (_29823_txt.len() < 3LL) {
			_case_begin_1a74e3270:;
			{
				goto _case_begin_1a74e32d6;
			}
		}
		else if (_29823_txt[_29836_i] != '.') {
			_case_begin_1a74e32d6:;
			{
				goto _case_begin_1a74e2b54;
			}
		}
		else if ((_29823_txt[_29836_i + 1LL] != 'p') && (_29823_txt[_29836_i + 1LL] != 'P')) {
			_case_begin_1a74e2b54:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a74e2a00:;
			{
				return true;
			}
		}
		_match_end_1a74e2934:;
	}
}



inline jule::Bool _1dd0ed32d_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31124_txt,jule::Int _31137_i) {
	{
		
		if (_31124_txt.len() < 4LL) {
			_case_begin_1a74e588d:;
			{
				goto _case_begin_1a74e5904;
			}
		}
		else if (_31124_txt[_31137_i] != '.') {
			_case_begin_1a74e5904:;
			{
				goto _case_begin_1a74e5272;
			}
		}
		else if ((_31124_txt[_31137_i + 1LL] != 'f') && (_31124_txt[_31137_i + 1LL] != 'F')) {
			_case_begin_1a74e5272:;
			{
				goto _case_begin_1a74e52e9;
			}
		}
		else if ((_31124_txt[_31137_i + 2LL] != 'p') && (_31124_txt[_31137_i + 1LL] != 'P')) {
			_case_begin_1a74e52e9:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a74e4c22:;
			{
				return true;
			}
		}
		_match_end_1a74e4b56:;
	}
}



inline jule::Str _1dd0ed32d_octal_num(jule::Slice<jule::U8>& _32615_txt) {
	jule::Str _32630_lit = jule::Str();
	if (_32615_txt[0LL] != '0') {
		_32630_lit = jule::Str();
		return _32630_lit;
	}
	if (_32615_txt.len() < 2LL) {
		return _32630_lit;
	}
	jule::Int _33413_octal_start = 1LL;
	jule::Bool _33613_o = false;
	if (_32615_txt[1LL] == 'o') {
		if (_32615_txt.len() < 3LL) {
			return _32630_lit;
		}
		(_33413_octal_start)++;
		_33613_o=true;
	}
	jule::Int _34513_i = _33413_octal_start;
	for (; _34513_i < static_cast<jule::Int>(_32615_txt.len()); (_34513_i)++) {
		{
			jule::U8 _34713_b = _32615_txt[_34513_i];
			if (_34713_b == '.') {
				if (_33613_o) {
					_32630_lit = jule::Str();
					return _32630_lit;
				}
				_32630_lit = _1dd0ed32d_float_num(_32615_txt,_34513_i);
				return _32630_lit;
			}
			if (_1dd0ed32d_is_float_fmt_e(_34713_b,_34513_i)) {
				_32630_lit = _1dd0ed32d_float_fmt_e(_32615_txt,_34513_i);
				return _32630_lit;
			}
			if ((_34713_b != '_') && (!(_1dd05db0c_is_octal(_34713_b)))) {
				goto _iter_end_1a74ea3a9;
			}
		}
	_iter_next_1a74ea3a9:;
	}
	_iter_end_1a74ea3a9:;
	if (_34513_i == _33413_octal_start) {
		return _32630_lit;
	}
	_32630_lit = static_cast<jule::Str>(_32615_txt.slice(0LL,_34513_i));
	return _32630_lit;
}



inline jule::Str _1dd0ed32d_hex_num(jule::Slice<jule::U8>& _36813_txt) {
	jule::Str _36828_lit = jule::Str();
	if (_36813_txt.len() < 3LL) {
		return _36828_lit;
	}
	if ((_36813_txt[0LL] != '0') || ((_36813_txt[1LL] != 'x') && (_36813_txt[1LL] != 'X'))) {
		return _36828_lit;
	}
	
	jule::Int _37713_i = 2LL;
	_julec_label_loop:;
	for (; _37713_i < static_cast<jule::Int>(_36813_txt.len()); (_37713_i)++) {
		{
			jule::U8 _38013_b = _36813_txt[_37713_i];
			{
				
				if (_1dd0ed32d_is_float_fmt_dotp(_36813_txt,_37713_i)) {
					_case_begin_1a7501c0c:;
					{
						_36828_lit = _1dd0ed32d_float_fmt_dotp(_36813_txt,_37713_i);
						return _36828_lit;
					}
				}
				else if (_1dd0ed32d_is_float_fmt_dotfp(_36813_txt,_37713_i)) {
					_case_begin_1a7501c84:;
					{
						_36828_lit = _1dd0ed32d_float_fmt_dotfp(_36813_txt,_37713_i);
						return _36828_lit;
					}
				}
				else if (_1dd0ed32d_is_float_fmt_p(_38013_b,_37713_i)) {
					_case_begin_1a7501d0b:;
					{
						_36828_lit = _1dd0ed32d_float_fmt_p(_36813_txt,_37713_i);
						return _36828_lit;
					}
				}
				else if (_1dd0ed32d_is_float_fmt_dotnp(_36813_txt,_37713_i)) {
					_case_begin_1a7501d83:;
					{
						_36828_lit = _1dd0ed32d_float_fmt_dotnp(_36813_txt,_37713_i);
						return _36828_lit;
					}
				}
				else if ((_38013_b != '_') && (!(_1dd05db0c_is_hex(_38013_b)))) {
					_case_begin_1a7501e0a:;
					{
						goto _iter_end_1a7500db5;
					}
				}
				_match_end_1a7501b1e:;
			}
		}
	_iter_next_1a7500db5:;
	}
	_iter_end_1a7500db5:;
	if (_37713_i == 2LL) {
		return _36828_lit;
	}
	_36828_lit = static_cast<jule::Str>(_36813_txt.slice(0LL,_37713_i));
	return _36828_lit;
}



inline jule::Str _1dd0ed32d_hex_escape(jule::Slice<jule::U8>& _40116_txt,jule::Int _40129_n) {
	jule::Str _40139_seq = jule::Str();
	if (_40116_txt.len() < _40129_n) {
		return _40139_seq;
	}
	
	jule::Int _40713_i = 2LL;
	for (; _40713_i < _40129_n; (_40713_i)++) {
		{
			if ((!(_1dd05db0c_is_hex(_40116_txt[_40713_i])))) {
				return _40139_seq;
			}
		}
	_iter_next_1a7504ca9:;
	}
	_iter_end_1a7504ca9:;
	_40139_seq=static_cast<jule::Str>(_40116_txt.slice(0LL,_40129_n));
	return _40139_seq;
}



inline jule::Str _1dd0ed32d_big_unicode_point_escape(jule::Slice<jule::U8>& _41930_txt) {
	return _1dd0ed32d_hex_escape(_41930_txt,10LL);
}



inline jule::Str _1dd0ed32d_little_unicode_point_escape(jule::Slice<jule::U8>& _42433_txt) {
	return _1dd0ed32d_hex_escape(_42433_txt,6LL);
}



inline jule::Str _1dd0ed32d_hex_byte_escape(jule::Slice<jule::U8>& _42921_txt) {
	return _1dd0ed32d_hex_escape(_42921_txt,4LL);
}



inline jule::Str _1dd0ed32d_byte_escape(jule::Slice<jule::U8>& _43417_txt) {
	jule::Str _43432_seq = jule::Str();
	if (_43417_txt.len() < 4LL) {
		return _43432_seq;
	}
	if (((!(_1dd05db0c_is_octal(_43417_txt[1LL]))) || (!(_1dd05db0c_is_octal(_43417_txt[2LL])))) || (!(_1dd05db0c_is_octal(_43417_txt[3LL])))) {
		return _43432_seq;
	}
	_43432_seq = static_cast<jule::Str>(_43417_txt.slice(0LL,4LL));
	return _43432_seq;
}



inline jule::Slice<_1db678789_Log> _1dd0ed32d_lex(jule::Ptr<_1dd05eba7_File> _83316_f) {
	if (_83316_f == nullptr) {
		return nullptr;
	}
	_1dd0ed32d_Lex _83813_lex = _1dd0ed32d_Lex(jule::Slice<_1dd05db0c_Token>(),_83316_f,0LL,jule::Int(),-1LL,jule::Slice<_1db678789_Log>());
	_83813_lex._method_new_line();
	_83813_lex._method_lex();
	if (_83813_lex._field_errors.len() > 0LL) {
		return _83813_lex._field_errors;
	}
	(*(_83316_f))._field__tokens=_83813_lex._field_tokens;
	return nullptr;
}



inline jule::Bool _1dd06a0d0_find_module_file(jule::Slice<jule::Ptr<_1db69ceea_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1a7553c09:;
		if (it != expr.end()) {
			jule::Ptr<_1db69ceea_DirEntry> &_1dd06a0d0_d = *it;
			{
				if ((!((*((*(_1dd06a0d0_d))._field_stat))._method_is_dir())) && ((*(_1dd06a0d0_d))._field_name == jule::Str("jule.mod", 8))) {
					return true;
				}
			}
			_iter_next_1a7553c09:;
			++it;
			goto _iter_begin_1a7553c09;
		}
		_iter_end_1a7553c09:;
	}
	return false;
}



inline jule::Str _1dd06a0d0_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1db69ceea_DirEntry>> _2617_dirents = ({
				auto except = _1db69ceea_Directory::_static_method_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a7554aa6;
					goto _iter_end_1a7554aa6;
				} jule::Slice<jule::Ptr<_1db69ceea_DirEntry>>();});
			});
			jule::Bool _3013_exist = _1dd06a0d0_find_module_file(_2617_dirents);
			if (_3013_exist) {
				return _2434_path;
			}
			jule::Int _3513_n = _2434_path.len();
			_2434_path=_1db7b8830_dir(_2434_path);
			if (_2434_path.len() == _3513_n) {
				goto _iter_end_1a7554aa6;
			}
		}
	_iter_next_1a7554aa6:;
	}
	_iter_end_1a7554aa6:;
	return jule::Str();
}



inline jule::Slice<_1db678789_Log> _1dd06a0d0_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = _1db6a29e4_File::_static_method_read(_1db7b8830_join(jule::Slice<jule::Str>({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1db678789_Log>({_1db678789_Log(static_cast<jule::Int>(0LL),jule::Int(),jule::Int(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
			return jule::Slice<_1db678789_Log>({_1db678789_Log(static_cast<jule::Int>(0LL),jule::Int(),jule::Int(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
		} jule::Slice<jule::U8>();});
	});
	jule::Str _549_s = _1db822922_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));
	if (_549_s.len() != 0LL) {
		return jule::Slice<_1db678789_Log>({_1db678789_Log(static_cast<jule::Int>(0LL),jule::Int(),jule::Int(),jule::Str(),jule::Str("module file has syntax error(s)", 31),jule::Str(),jule::Str())});
	}
	return nullptr;
}



inline jule::Int _1dd9bdadd_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - static_cast<jule::Int>(_1dd9bdadd_len64(_6124_x)));
}



inline jule::Int _1dd9bdadd_trailing_zeros(jule::Uint _8323_x) {
	
	return static_cast<jule::Int>(_1dd9bdadd_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::Int _1dd9bdadd_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LLU) {
		return 32LL;
	}
	return static_cast<jule::Int>(static_cast<jule::Int>(_1dd9bdadd_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & static_cast<jule::U32>((-(_10525_x)))) * 125613361LLU) >> 27LLU)]));
}



inline jule::Int _1dd9bdadd_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LLU) {
		return 64LL;
	}
	return static_cast<jule::Int>(static_cast<jule::Int>(_1dd9bdadd_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & static_cast<jule::U64>((-(_11425_x)))) * 285870213051353865LLU) >> 58LLU)]));
}



inline jule::Int _1dd9bdadd_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LLU) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LLU) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)])));
	return _35228_n;
}



inline jule::Int _1dd9bdadd_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LLU) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LLU) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LLU) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1dd9bdadd_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(static_cast<jule::U64>(_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x & _41522_y) | static_cast<jule::U64>(static_cast<jule::U64>(_41514_x | _41522_y) & static_cast<jule::U64>((~(_41544_sum))))) >> 63LLU);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1dd9bdadd_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LLU;
	jule::U64 _5029_x1 = _49914_x >> 32LLU;
	jule::U64 _5039_y0 = _49922_y & 4294967295LLU;
	jule::U64 _5049_y1 = _49922_y >> 32LLU;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + static_cast<jule::U64>(_5059_w0 >> 32LLU);
	jule::U64 _50713_w1 = _5069_t & 4294967295LLU;
	jule::U64 _5089_w2 = _5069_t >> 32LLU;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_5029_x1 * _5049_y1) + _5089_w2) + static_cast<jule::U64>(_50713_w1 >> 32LLU));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1dd50d2ed_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1dd50d2ed_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1dd50d2ed_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1dd50d2ed_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::Int> _1dd54d959_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::Int _4739_exp = jule::Int();
	{
		
		if (_4718_f == 0LL) {
			_case_begin_1a7673598:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1dd56d308_is_inf(_4718_f,0LL) || _1dd56d308_is_nan(_4718_f)) {
			_case_begin_1a7673620:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1a7673499:;
	}
	std::tie(_4718_f,_4739_exp) = _1dd56d308_normalize(_4718_f);
	jule::U64 _5613_x = _1dd50d2ed_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::Int>(static_cast<jule::Int>(static_cast<jule::Int>(static_cast<jule::Int>((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>(_5613_x & 9227875636482146303LLU);
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1dd50d2ed_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1dd56d308_nan(void) {
	return static_cast<jule::F64>(_1dd50d2ed_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1dd56d308_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _1dd56d308_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_1dd50d2ed_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1dd50d2ed_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1dd56d308_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline std::tuple<jule::F64,jule::Int> _1dd56d308_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::Int _8232_exp = jule::Int();
	
	if (_1dd64ad31_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_8224_y = static_cast<jule::F64>(_8214_x * 4503599627370496LL);
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1dd5d93b8_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		
		if (_1dd56d308_is_nan(_11112_x) || _1dd56d308_is_inf(_11112_x,1LL)) {
			_case_begin_1a76c4000:;
			{
				return _11112_x;
			}
		}
		else if (_11112_x < 0LL) {
			_case_begin_1a76c4077:;
			{
				return static_cast<jule::F64>(_1dd56d308_nan());
			}
		}
		else if (_11112_x == 0LL) {
			_case_begin_1a76c40ee:;
			{
				return static_cast<jule::F64>(_1dd56d308_inf(-1LL));
			}
		}
		_match_end_1a76c3e34:;
	}
	jule::F64 _13314_f1;
	jule::Int _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _1dd54d959_frexp(_11112_x);
	if (_13314_f1 < 0.70710678118654757) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = _13314_f1 - 1LL;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,static_cast<jule::F64>(2LL + _1389_f));
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * static_cast<jule::F64>(0.66666666666667351 + static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(0.28571428743662391 + static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(0.1818357216161805 + static_cast<jule::F64>(_1449_s4 * 0.14798198605116586))))));
	jule::F64 _1469_t2 = _1449_s4 * static_cast<jule::F64>(0.39999999999409419 + static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(0.22222198432149784 + static_cast<jule::F64>(_1449_s4 * 0.15313837699209373))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>(static_cast<jule::F64>(_1399_k * 0.69314718036912382) - static_cast<jule::F64>(static_cast<jule::F64>(_1489_hfsq - static_cast<jule::F64>(static_cast<jule::F64>(_1429_s * static_cast<jule::F64>(_1489_hfsq + _1479_R)) + static_cast<jule::F64>(_1399_k * 0.00000000019082149292705877))) - _1389_f));
}



inline jule::F64 _1dd64ad31_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1dd50d2ed_f64_from_bits(static_cast<jule::U64>(static_cast<jule::U64>(_1dd50d2ed_f64_bits(_4312_x)) & 9223372036854775807LLU)));
}



inline std::tuple<jule::F64,jule::F64> _1dd65061b_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _1dd64ad31_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_1a7754877:;
		}
		_iter_end_1a7754877:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1dd6cca83_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::Int _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _1dd54d959_frexp(_4413_x);
	if (_4510_frac == 0.5) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_4516_exp - 1LL));
	}
	return static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1dd5d93b8_log(_4510_frac)) * 1.4426950408889634) + static_cast<jule::F64>(static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1dd1ec6b3_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_1dd1ec6b3_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::Int>(_1dd1ec6b3_max(static_cast<jule::Int>(_7837_prec + 4LL),24LL))),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1dd1ec6b3_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	jule::Ptr<_1dd1ec6b3_FloatInfo> _8413_flt = nullptr;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a79e8a2d:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1dd50d2ed_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1dd1ec6b3_FloatInfo>)((&(_1dd1ec6b3_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a79e8bb5:;
			{
				_8313_bits=static_cast<jule::U64>(_1dd50d2ed_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1dd1ec6b3_FloatInfo>)((&(_1dd1ec6b3_F64_INFO))));
			}
		}
		else {
			_case_begin_1a79e8412:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1a79e83ac:;
	}
	jule::Bool _969_neg = (_8313_bits >> static_cast<jule::Uint>((*(_8413_flt))._field_expbits + (*(_8413_flt))._field_mantbits)) != 0LLU;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> (*(_8413_flt))._field_mantbits) & static_cast<jule::Int>(static_cast<jule::Int>((1LL << (*(_8413_flt))._field_expbits) - 1LL));
	jule::U64 _9813_mant = _8313_bits & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU) << (*(_8413_flt))._field_mantbits) - 1LLU);
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::Int>((1LL << (*(_8413_flt))._field_expbits) - 1LL)) {
			_case_begin_1a79e819d:;
			{
				{
					
					if (_9813_mant != 0LLU) {
						_case_begin_1a7a007e3:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1a7a0098b:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1a79ee528:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'+','i','n','f'}));
						}
					}
					_match_end_1a79ee45c:;
				}
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a79eda55:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1a79ecd1d:;
			{
				_9813_mant|=static_cast<jule::U64>(static_cast<jule::U64>(1LLU) << (*(_8413_flt))._field_mantbits);
			}
		}
		_match_end_1a79ecc85:;
	}
	_9713_exp+=(*(_8413_flt))._field_bias;
	if (_8244_fmt == 'b') {
		return _1dd1ec6b3_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _1dd1ec6b3_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	
	_1dd1ec6b3_DecimalSlice _13213_digs = _1dd1ec6b3_DecimalSlice();
	jule::Bool _13313_ok = false;
	jule::Bool _1359_shortest = _8259_prec < 0LL;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1dd347577_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(static_cast<jule::Int>((*(_8413_flt))._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a7a0583c:;
				{
					_8259_prec=static_cast<jule::Int>(_1dd1ec6b3_max(static_cast<jule::Int>(_13213_digs._field_nd - 1LL),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a7a058a3:;
				{
					_8259_prec=static_cast<jule::Int>(_1dd1ec6b3_max(static_cast<jule::Int>(_13213_digs._field_nd - _13213_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a7a0595d:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1a7a05562:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15217_digits = _8259_prec;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a7a080c0:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a7a07d06:;
				{
					if (_8259_prec == 0LL) {
						_8259_prec=1LL;
					}
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1a7a059c4:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1a7a07c07:;
		}
		if ((_8270_bit_size == 32LL) && (_15217_digits <= 9LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1dd347577_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(static_cast<jule::Int>((*(_8413_flt))._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if (_15217_digits <= 18LL) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1dd347577_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(static_cast<jule::Int>((*(_8413_flt))._field_mantbits))),_15217_digits);
			_13313_ok=true;
		}
	}
	if ((!(_13313_ok))) {
		return _1dd1ec6b3_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _1dd1ec6b3_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1dd1ec6b3_big_ftoa(jule::Slice<jule::U8> _18217_dst,jule::Int _18234_prec,jule::U8 _18245_fmt,jule::Bool _18256_neg,jule::U64 _18313_mant,jule::Int _18324_exp,_1dd1ec6b3_FloatInfo& _18335_flt) {
	_1dd472b47_Decimal _18413_d = _1dd472b47_Decimal();
	_18413_d._method_assign(_18313_mant);
	_18413_d._method_shift(static_cast<jule::Int>(_18324_exp - static_cast<jule::Int>(static_cast<jule::Int>(_18335_flt._field_mantbits))));
	_1dd1ec6b3_DecimalSlice _18713_digs = _1dd1ec6b3_DecimalSlice();
	jule::Bool _1889_shortest = _18234_prec < 0LL;
	if (_1889_shortest) {
		_1dd1ec6b3_round_shortest(_18413_d,_18313_mant,_18324_exp,_18335_flt);
		_18713_digs=_1dd1ec6b3_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a7a11dcb:;
				{
					_18234_prec=static_cast<jule::Int>(_18713_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a7a11e42:;
				{
					_18234_prec=static_cast<jule::Int>(_1dd1ec6b3_max(static_cast<jule::Int>(_18713_digs._field_nd - _18713_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a7a11edb:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1a7a11c00:;
		}
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a7a10d42:;
				{
					_18413_d._method_round(static_cast<jule::Int>(_18234_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a7a10da8:;
				{
					_18413_d._method_round(static_cast<jule::Int>(_18413_d._field_dp + _18234_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a7a10e1e:;
				{
					if (_18234_prec == 0LL) {
						_18234_prec=1LL;
					}
					_18413_d._method_round(_18234_prec);
				}
			}
			_match_end_1a7a10cdc:;
		}
		_18713_digs=_1dd1ec6b3_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
	}
	return _1dd1ec6b3_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1dd1ec6b3_fmt_digits(jule::Slice<jule::U8> _21919_dst,jule::Bool _21932_shortest,jule::Bool _21948_neg,_1dd1ec6b3_DecimalSlice _22013_digs,jule::Int _22037_prec,jule::U8 _22048_fmt) {
	{
		auto &_match_expr{ _22048_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a7a17761:;
			{
				return _1dd1ec6b3_fmt_e(_21919_dst,_21948_neg,_22013_digs,_22037_prec,_22048_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a7a177c7:;
			{
				return _1dd1ec6b3_fmt_f(_21919_dst,_21948_neg,_22013_digs,_22037_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a7a178a4:;
			{
				jule::Int _22817_eprec = _22037_prec;
				if ((_22817_eprec > _22013_digs._field_nd) && (_22013_digs._field_nd >= _22013_digs._field_dp)) {
					_22817_eprec=_22013_digs._field_nd;
				}
				if (_21932_shortest) {
					_22817_eprec=6LL;
				}
				jule::Int _23813_exp = _22013_digs._field_dp - 1LL;
				if ((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec)) {
					if (_22037_prec > _22013_digs._field_nd) {
						_22037_prec=_22013_digs._field_nd;
					}
					return _1dd1ec6b3_fmt_e(_21919_dst,_21948_neg,_22013_digs,static_cast<jule::Int>(_22037_prec - 1LL),static_cast<jule::U8>(static_cast<jule::U8>(_22048_fmt + 'e') - 'g'));
				}
				if (_22037_prec > _22013_digs._field_dp) {
					_22037_prec=_22013_digs._field_nd;
				}
				return _1dd1ec6b3_fmt_f(_21919_dst,_21948_neg,_22013_digs,static_cast<jule::Int>(_1dd1ec6b3_max(static_cast<jule::Int>(_22037_prec - _22013_digs._field_dp),0LL)));
			}
		}
		_match_end_1a7a176d9:;
	}
	return jule::append(_21919_dst,jule::Slice<jule::U8>({'%',_22048_fmt}));
}



inline void _1dd1ec6b3_round_shortest(_1dd472b47_Decimal& _25724_d,jule::U64 _25736_mant,jule::Int _25747_exp,_1dd1ec6b3_FloatInfo& _25758_flt) {
	if (_25736_mant == 0LLU) {
		_25724_d._field_nd=0LL;
		return;
	}
	jule::Int _2789_minexp = _25758_flt._field_bias + 1LL;
	if ((_25747_exp > _2789_minexp) && ((332LL * static_cast<jule::Int>(_25724_d._field_dp - _25724_d._field_nd)) >= static_cast<jule::Int>(100LL * static_cast<jule::Int>(_25747_exp - static_cast<jule::Int>(static_cast<jule::Int>(_25758_flt._field_mantbits)))))) {
		return;
	}
	_1dd472b47_Decimal _28713_upper = _1dd472b47_Decimal();
	_28713_upper._method_assign(static_cast<jule::U64>(static_cast<jule::U64>(_25736_mant << 1LLU) + 1LLU));
	_28713_upper._method_shift(static_cast<jule::Int>(static_cast<jule::Int>(_25747_exp - static_cast<jule::Int>(static_cast<jule::Int>(_25758_flt._field_mantbits))) - 1LL));
	jule::U64 _29713_mantlo = 0LLU;
	jule::Int _29813_explo = 0LL;
	if ((_25736_mant > static_cast<jule::U64>(1LLU << _25758_flt._field_mantbits)) || (_25747_exp == _2789_minexp)) {
		_29713_mantlo=static_cast<jule::U64>(_25736_mant - 1LLU);
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(static_cast<jule::U64>(_25736_mant << 1LLU) - 1LLU);
		_29813_explo=static_cast<jule::Int>(_25747_exp - 1LL);
	}
	_1dd472b47_Decimal _30613_lower = _1dd472b47_Decimal();
	_30613_lower._method_assign(static_cast<jule::U64>(static_cast<jule::U64>(_29713_mantlo << 1LLU) + 1LLU));
	_30613_lower._method_shift(static_cast<jule::Int>(static_cast<jule::Int>(_29813_explo - static_cast<jule::Int>(static_cast<jule::Int>(_25758_flt._field_mantbits))) - 1LL));
	jule::Bool _3139_inclusive = (_25736_mant % 2LL) == 0LLU;
	jule::U8 _32613_upperdelta = 0LLU;
	jule::Int _33013_ui = 0LL;
	for (; ; (_33013_ui)++) {
		{
			jule::Int _33513_mi = (_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp;
			if (_33513_mi >= _25724_d._field_nd) {
				goto _iter_end_1a7a225b2;
			}
			jule::Int _33913_li = (_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);
			if ((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd)) {
				_34017_l=_30613_lower._field_d[_33913_li];
			}
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);
			if (_33513_mi >= 0LL) {
				_34417_m=_25724_d._field_d[_33513_mi];
			}
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);
			if (_33013_ui < _28713_upper._field_nd) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			}
			jule::Bool _35613_okdown = (_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd));
			{
				
				if ((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u)) {
					_case_begin_1a7a317d0:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if ((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u)) {
					_case_begin_1a7a31857:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if ((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0'))) {
					_case_begin_1a7a318ce:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1a7a31725:;
			}
			jule::Bool _37713_okup = (_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd));
			{
				
				if (_35613_okdown && _37713_okup) {
					_case_begin_1a7a34d99:;
					{
						_25724_d._method_round(static_cast<jule::Int>(_33513_mi + 1LL));
						return;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1a7a34e10:;
					{
						_25724_d._method_round_down(static_cast<jule::Int>(_33513_mi + 1LL));
						return;
					}
				}
				else if (_37713_okup) {
					_case_begin_1a7a34e87:;
					{
						_25724_d._method_round_up(static_cast<jule::Int>(_33513_mi + 1LL));
						return;
					}
				}
				_match_end_1a7a33bbc:;
			}
		}
	_iter_next_1a7a225b2:;
	}
	_iter_end_1a7a225b2:;
}



inline jule::Slice<jule::U8> _1dd1ec6b3_fmt_e(jule::Slice<jule::U8> _39614_dst,jule::Bool _39627_neg,_1dd1ec6b3_DecimalSlice _39638_d,jule::Int _39655_prec,jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');
	}
	jule::U8 _40313_ch = '0';
	if (_39638_d._field_nd != 0LL) {
		_40313_ch=_39638_d._field_d[0LL];
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);
	if (_39655_prec > 0LL) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');
		jule::Int _41217_i = 1LL;
		jule::Int _41313_m = _1dd1ec6b3_min(_39638_d._field_nd,static_cast<jule::Int>(_39655_prec + 1LL));
		if (_41217_i < _41313_m) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		}
		for (; _41217_i <= _39655_prec; (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');
			}
		_iter_next_1a7a3a245:;
		}
		_iter_end_1a7a3a245:;
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);
	jule::Int _42513_exp = _39638_d._field_dp - 1LL;
	if (_39638_d._field_nd == 0LL) {
		_42513_exp=0LL;
	}
	if (_42513_exp < 0LL) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::Int>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);
	{
		
		if (_42513_exp < 10LL) {
			_case_begin_1a7a3c368:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_42513_exp)) + '0'));
			}
		}
		else if (_42513_exp < 100LL) {
			_case_begin_1a7a3ca1c:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_42513_exp / 10LL)) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_42513_exp % 10LL)) + '0'));
			}
		}
		else {
			_case_begin_1a7a3cd19:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_42513_exp / 100LL)) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_42513_exp / 10LL)) % 10LL) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_42513_exp % 10LL)) + '0'));
			}
		}
		_match_end_1a7a3ccb4:;
	}
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1dd1ec6b3_fmt_f(jule::Slice<jule::U8> _45114_dst,jule::Bool _45127_neg,_1dd1ec6b3_DecimalSlice _45138_d,jule::Int _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');
	}
	if (_45138_d._field_dp > 0LL) {
		jule::Int _45917_m = _1dd1ec6b3_min(_45138_d._field_nd,_45138_d._field_dp);
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; _45917_m < _45138_d._field_dp; (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');
			}
		_iter_next_1a7a43a12:;
		}
		_iter_end_1a7a43a12:;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');
	}
	if (_45155_prec > 0LL) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');
		jule::Int _47017_i = 0LL;
		for (; _47017_i < _45155_prec; (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);
				jule::Int _47317_j = _45138_d._field_dp + _47017_i;
				if ((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd)) {
					_47221_ch=_45138_d._field_d[_47317_j];
				}
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);
			}
		_iter_next_1a7a444c4:;
		}
		_iter_end_1a7a444c4:;
	}
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1dd1ec6b3_fmt_b(jule::Slice<jule::U8> _48414_dst,jule::Bool _48427_neg,jule::U64 _48438_mant,jule::Int _48453_exp,_1dd1ec6b3_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');
	}
	std::tie(_48414_dst,std::ignore) = _1dd4c1635_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');
	_48453_exp-=static_cast<jule::Int>(static_cast<jule::Int>(_48464_flt._field_mantbits));
	if (_48453_exp >= 0LL) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');
	}
	std::tie(_48414_dst,std::ignore) = _1dd4c1635_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1dd1ec6b3_fmt_x(jule::Slice<jule::U8> _50614_dst,jule::Int _50627_prec,jule::U8 _50638_fmt,jule::Bool _50649_neg,jule::U64 _50713_mant,jule::Int _50728_exp,_1dd1ec6b3_FloatInfo& _50739_flt) {
	if (_50713_mant == 0LLU) {
		_50728_exp=0LL;
	}
	_50713_mant<<=static_cast<jule::Uint>(60LLU - _50739_flt._field_mantbits);
	while ((_50713_mant != 0LLU) && ((_50713_mant & 1152921504606846976LLU) == 0LLU)) {
		{
			_50713_mant<<=1LLU;
			(_50728_exp)--;
		}
	_iter_next_1a7a4aa91:;
	}
	_iter_end_1a7a4aa91:;
	if ((_50627_prec >= 0LL) && (_50627_prec < 15LL)) {
		jule::Uint _52113_shift = static_cast<jule::Uint>(_50627_prec << 2LLU);
		jule::U64 _52213_extra = (_50713_mant << _52113_shift) & 1152921504606846975LLU;
		_50713_mant>>=static_cast<jule::Uint>(60LLU - _52113_shift);
		if ((_52213_extra | static_cast<jule::U64>(_50713_mant & 1LLU)) > 576460752303423488LLU) {
			(_50713_mant)++;
		}
		_50713_mant<<=static_cast<jule::Uint>(60LLU - _52113_shift);
		if ((_50713_mant & 2305843009213693952LLU) != 0LLU) {
			_50713_mant>>=1LLU;
			(_50728_exp)++;
		}
	}
	jule::Str _5359_hex = (((_50638_fmt == 'X')) ? (jule::Str("0123456789ABCDEF", 16)) : (jule::Str("0123456789abcdef", 16)));
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>('0' + static_cast<jule::U8>(static_cast<jule::U8>((_50713_mant >> 60LLU) & 1LLU))));
	_50713_mant<<=4LLU;
	if ((_50627_prec < 0LL) && (_50713_mant != 0LLU)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');
		while (_50713_mant != 0LLU) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_5359_hex[static_cast<jule::Int>((_50713_mant >> 60LLU) & 15LLU)]);
				_50713_mant<<=4LLU;
			}
		_iter_next_1a7a51d3e:;
		}
		_iter_end_1a7a51d3e:;
	} else if (_50627_prec > 0LL) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');
		jule::Int _55317_i = 0LL;
		for (; _55317_i < _50627_prec; (_55317_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_5359_hex[static_cast<jule::Int>((_50713_mant >> 60LLU) & 15LLU)]);
				_50713_mant<<=4LLU;
			}
		_iter_next_1a7a50249:;
		}
		_iter_end_1a7a50249:;
	}
	jule::U8 _56113_ch = static_cast<jule::U8>(80LLU);
	if (_50638_fmt == static_cast<jule::U8>(_1dd20559a_lower(_50638_fmt))) {
		_56113_ch='p';
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56113_ch);
	if (_50728_exp < 0LL) {
		_56113_ch='-';
		_50728_exp=static_cast<jule::Int>((-(_50728_exp)));
	} else {
		_56113_ch='+';
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56113_ch);
	{
		
		if (_50728_exp < 100LL) {
			_case_begin_1a7a55e97:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_50728_exp / 10LL)) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_50728_exp % 10LL)) + '0'));
			}
		}
		else if (_50728_exp < 1000LL) {
			_case_begin_1a7a591dc:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_50728_exp / 100LL)) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_50728_exp / 10LL % 10LL)) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_50728_exp % 10LL)) + '0'));
			}
		}
		else {
			_case_begin_1a7a506bc:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_50728_exp / 1000LL)) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_50728_exp / 100LL)) % 10LL) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_50728_exp / 10LL % 10LL)) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_50728_exp % 10LL)) + '0'));
			}
		}
		_match_end_1a7a5687c:;
	}
	return _50614_dst;
}



inline jule::Int _1dd1ec6b3_min(jule::Int _5868_a,jule::Int _58616_b) {
	return static_cast<jule::Int>((((_5868_a < _58616_b)) ? (_5868_a) : (_58616_b)));
}



inline jule::Int _1dd1ec6b3_max(jule::Int _5908_a,jule::Int _59016_b) {
	return static_cast<jule::Int>((((_5908_a > _59016_b)) ? (_5908_a) : (_59016_b)));
}



inline jule::U8 _1dd20559a_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>(_4710_c | 32LLU);
}



inline std::tuple<jule::U64,jule::Int> _1dd20559a_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str()) {
		return std::make_tuple(0LLU,static_cast<jule::Int>(2LL));
	}
	{
		
		if ((2LL <= _5435_base) && (_5435_base <= 36LL)) {
			_case_begin_1a7a5e885:;
		}
		else if (_5435_base == 0LL) {
			_case_begin_1a7a5e5aa:;
			{
				_5435_base=10LL;
				if (_5423_s[0LL] == '0') {
					{
						
						if ((_5423_s.len() >= 3LL) && (_1dd20559a_lower(_5423_s[1LL]) == 'b')) {
							_case_begin_1a7a6137b:;
							{
								_5435_base=2LL;
								_5423_s=_5423_s.slice(2LL);
							}
						}
						else if ((_5423_s.len() >= 3LL) && (_1dd20559a_lower(_5423_s[1LL]) == 'o')) {
							_case_begin_1a7a6114a:;
							{
								_5435_base=8LL;
								_5423_s=_5423_s.slice(2LL);
							}
						}
						else if ((_5423_s.len() >= 3LL) && (_1dd20559a_lower(_5423_s[1LL]) == 'x')) {
							_case_begin_1a7a611b1:;
							{
								_5435_base=16LL;
								_5423_s=_5423_s.slice(2LL);
							}
						}
						else {
							_case_begin_1a7a60ee6:;
							{
								_5435_base=8LL;
								_5423_s=_5423_s.slice(1LL);
							}
						}
						_match_end_1a7a60e2a:;
					}
				}
			}
		}
		else {
			_case_begin_1a7a5d7b8:;
			{
				return std::make_tuple(0LLU,static_cast<jule::Int>(3LL));
			}
		}
		_match_end_1a7a5d763:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LL;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LLU,static_cast<jule::Int>(4LL));
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto &_match_expr{ _5435_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a7a665c3:;
			{
				_9313_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a7a6676b:;
			{
				_9313_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a7a662a4:;
			{
				_9313_cutoff=static_cast<jule::U64>(static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(static_cast<jule::U64>(_5435_base)))) + 1LLU);
			}
		}
		_match_end_1a7a6656d:;
	}
	jule::U64 _10313_max_val = 0LLU;
	{
		auto &_match_expr{ _5450_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a7a667d2:;
			{
				_10313_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a7a68064:;
			{
				_10313_max_val=jule::MAX_U64;
			}
		}
		_match_end_1a7a6800e:;
	}
	jule::U64 _11713_n = 0LLU;
	{
		auto &expr = _5423_s;
		auto it = expr.begin();
		_iter_begin_1a7a68608:;
		if (it != expr.end()) {
			jule::U8 _1dd20559a_c = *it;
			{
				jule::U8 _11917_d = 0LLU;
				{
					
					if (('0' <= _1dd20559a_c) && (_1dd20559a_c <= '9')) {
						_case_begin_1a7a6a495:;
						{
							_11917_d=static_cast<jule::U8>(_1dd20559a_c - '0');
						}
					}
					else if (('a' <= static_cast<jule::U8>(_1dd20559a_lower(_1dd20559a_c))) && (_1dd20559a_lower(_1dd20559a_c) <= 'z')) {
						_case_begin_1a7a6a1ba:;
						{
							_11917_d=static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_1dd20559a_lower(_1dd20559a_c)) - 'a') + 10LLU);
						}
					}
					else if (_1dd20559a_c == '_') {
						_case_begin_1a7a6a231:;
						{
							goto _iter_next_1a7a68608;
						}
					}
					else {
						_case_begin_1a7a69c47:;
						{
							return std::make_tuple(0LLU,static_cast<jule::Int>(2LL));
						}
					}
					_match_end_1a7a69bc0:;
				}
				if (_11917_d >= static_cast<jule::U8>(static_cast<jule::U8>(_5435_base))) {
					return std::make_tuple(0LLU,static_cast<jule::Int>(2LL));
				}
				if (_11713_n >= _9313_cutoff) {
					return std::make_tuple(_10313_max_val,static_cast<jule::Int>(1LL));
				}
				_11713_n*=static_cast<jule::U64>(static_cast<jule::U64>(_5435_base));
				jule::U64 _14113_n1 = _11713_n + static_cast<jule::U64>(static_cast<jule::U64>(_11917_d));
				if ((_14113_n1 < _11713_n) || (_14113_n1 > _10313_max_val)) {
					return std::make_tuple(_10313_max_val,static_cast<jule::Int>(1LL));
				}
				_11713_n=_14113_n1;
			}
			_iter_next_1a7a68608:;
			++it;
			goto _iter_begin_1a7a68608;
		}
		_iter_end_1a7a68608:;
	}
	return std::make_tuple(_11713_n,static_cast<jule::Int>(0LL));
}



inline std::tuple<jule::I64,jule::Int> _1dd20559a_parse_int(jule::Str _17222_s,jule::Int _17230_base,jule::Int _17245_bit_size) {
	jule::I64 _17262_i = jule::I64();
	jule::Int _17270_err = 0LL;
	if (_17222_s == jule::Str()) {
		_17262_i = 0LL;
		_17270_err = static_cast<jule::Int>(2LL);
		return std::make_tuple(_17262_i,_17270_err);
	}
	jule::Bool _17813_neg = false;
	if (_17222_s[0LL] == '+') {
		_17222_s=_17222_s.slice(1LL);
	} else if (_17222_s[0LL] == '-') {
		_17813_neg=true;
		_17222_s=_17222_s.slice(1LL);
	}
	jule::U64 _18713_un = 0LLU;
	std::tie(_18713_un,_17270_err) = _1dd20559a_parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if ((_17270_err != static_cast<jule::Int>(0LL)) && (_17270_err != static_cast<jule::Int>(1LL))) {
		_17262_i = 0LL;
		return std::make_tuple(_17262_i,_17270_err);
	}
	if (_17245_bit_size == 0LL) {
		_17245_bit_size=64LL;
	}
	jule::U64 _1979_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(static_cast<jule::Uint>(_17245_bit_size - 1LL)));
	if ((!(_17813_neg)) && (_18713_un >= _1979_cutoff)) {
		_17262_i = static_cast<jule::I64>(static_cast<jule::I64>(_1979_cutoff - 1LLU));
		_17270_err = static_cast<jule::Int>(1LL);
		return std::make_tuple(_17262_i,_17270_err);
	}
	if (_17813_neg && (_18713_un > _1979_cutoff)) {
		_17262_i = static_cast<jule::I64>((-(static_cast<jule::I64>(static_cast<jule::I64>(_1979_cutoff)))));
		_17270_err = static_cast<jule::Int>(1LL);
		return std::make_tuple(_17262_i,_17270_err);
	}
	jule::I64 _20413_n = static_cast<jule::I64>(_18713_un);
	if (_17813_neg) {
		_20413_n=static_cast<jule::I64>((-(_20413_n)));
	}
	_17262_i = _20413_n;
	_17270_err = static_cast<jule::Int>(0LL);
	return std::make_tuple(_17262_i,_17270_err);
}



inline std::tuple<jule::F64,jule::Bool> _1dd203e28_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if (_4123_man == 0LLU) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1dd50d2ed_f64_from_bits(9223372036854775808LLU));
		}
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _1dd9bdadd_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(static_cast<jule::Uint>(_579_clz));
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(static_cast<jule::U64>(_579_clz));
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1dd9bdadd_mul64(_4123_man,_1dd203e28_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL].__at(1LL));
	if (((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1dd9bdadd_mul64(_4123_man,_1dd203e28_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL].__at(0LL));
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LLU;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> static_cast<jule::U64>(_799_msb + 9LLU);
	_6013_ret_exp2-=static_cast<jule::U64>(1LLU ^ _799_msb);
	if (((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LLU);
	_8013_ret_mantissa>>=1LLU;
	if ((_8013_ret_mantissa >> 53LLU) > 0LLU) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	}
	if ((_6013_ret_exp2 - 1LLU) >= 2046LLU) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LLU) | static_cast<jule::U64>(_8013_ret_mantissa & 4503599627370495LLU);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1dd50d2ed_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1dd203e28_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if (_11023_man == 0LLU) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1dd50d2ed_f32_from_bits(2147483648LLU));
		}
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _1dd9bdadd_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(static_cast<jule::Uint>(_1329_clz));
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(static_cast<jule::U64>(_1329_clz));
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1dd9bdadd_mul64(_11023_man,_1dd203e28_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL].__at(1LL));
	if (((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1dd9bdadd_mul64(_11023_man,_1dd203e28_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL].__at(0LL));
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LLU;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> static_cast<jule::U64>(_1549_msb + 38LLU);
	_13513_ret_exp2-=static_cast<jule::U64>(1LLU ^ _1549_msb);
	if (((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LLU);
	_15513_ret_mantissa>>=1LLU;
	if ((_15513_ret_mantissa >> 24LLU) > 0LLU) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	}
	if ((_13513_ret_exp2 - 1LLU) >= 254LLU) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LLU) | static_cast<jule::U64>(_15513_ret_mantissa & 8388607LLU);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	}
	_11058_f = static_cast<jule::F32>(_1dd50d2ed_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _1dd205b2d_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::Int _4613_n = _4542_prefix.len();
	if (_4613_n > static_cast<jule::Int>(_4534_s.len())) {
		_4613_n=static_cast<jule::Int>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+=32LLU;
			}
			if (_5217_c != _4542_prefix[_5013_i]) {
				return _5013_i;
			}
		}
	_iter_next_1a7a95b52:;
	}
	_iter_end_1a7a95b52:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _1dd205b2d_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::Int _6834_n = jule::Int();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s == jule::Str()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a7a9a32c:;
			{
				if (_6816_s[0LL] == '-') {
					_7213_sign=-1LL;
				}
				_7313_nsign=1LL;
				_6816_s=_6816_s.slice(1LL);
				goto _case_begin_1a7a9a393;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a7a9a393:;
			{
				jule::Int _8317_case_n = _1dd205b2d_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
				if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
					_8317_case_n=3LL;
				}
				if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
					_6826_f = static_cast<jule::F64>(_1dd56d308_inf(_7213_sign));
					_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a7a9a409:;
			{
				if (_1dd205b2d_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
					_6826_f = static_cast<jule::F64>(_1dd56d308_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		_match_end_1a7a9a2c7:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1dd205b2d_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::Int _10340_exp = jule::Int();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= static_cast<jule::Int>(_10315_s.len())) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		
		if (_10315_s[_10449_i] == '+') {
			_case_begin_1a7aa2004:;
			{
				(_10449_i)++;
			}
		}
		else if (_10315_s[_10449_i] == '-') {
			_case_begin_1a7aa2367:;
			{
				_10350_neg=true;
				(_10449_i)++;
			}
		}
		_match_end_1a7aa1c18:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < static_cast<jule::Int>(_10315_s.len())) && (_10315_s[_10449_i] == '0')) && (_1dd20559a_lower(_10315_s[_10449_i + 1LL]) == 'x')) {
		_11813_base=16LLU;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	for (; _10449_i < static_cast<jule::Int>(_10315_s.len()); (_10449_i)++) {
		{
			jule::U8 _13413_c = _10315_s[_10449_i];
			{
				
				if (_13413_c == '_') {
					_case_begin_1a7aa8428:;
					{
						goto _iter_next_1a7aa73b1;
					}
				}
				else if (_13413_c == '.') {
					_case_begin_1a7aa84a0:;
					{
						if (_12813_sawdot) {
							goto _julec_label_loop_end;
						}
						_12813_sawdot=true;
						_13213_dp=_13013_nd;
						goto _iter_next_1a7aa73b1;
					}
				}
				else if (('0' <= _13413_c) && (_13413_c <= '9')) {
					_case_begin_1a7aa8527:;
					{
						_12913_sawdigits=true;
						if ((_13413_c == '0') && (_13013_nd == 0LL)) {
							(_13213_dp)--;
							goto _iter_next_1a7aa73b1;
						}
						(_13013_nd)++;
						if (_13113_nd_mant < _11913_max_mant_digits) {
							_10325_mantissa*=_11813_base;
							_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U64>(_13413_c - '0'));
							(_13113_nd_mant)++;
						} else if (_13413_c != '0') {
							_10425_trunc=true;
						}
						goto _iter_next_1a7aa73b1;
					}
				}
				else if (((_11813_base == 16LLU) && ('a' <= static_cast<jule::U8>(_1dd20559a_lower(_13413_c)))) && (_1dd20559a_lower(_13413_c) <= 'f')) {
					_case_begin_1a7aa859e:;
					{
						_12913_sawdigits=true;
						(_13013_nd)++;
						if (_13113_nd_mant < _11913_max_mant_digits) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U64>((_1dd20559a_lower(_13413_c) - 'a') + 10LLU));
							(_13113_nd_mant)++;
						} else {
							_10425_trunc=true;
						}
						goto _iter_next_1a7aa73b1;
					}
				}
				_match_end_1a7aa834b:;
			}
			goto _iter_end_1a7aa73b1;
		}
	_iter_next_1a7aa73b1:;
	}
	_iter_end_1a7aa73b1:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LLU) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < static_cast<jule::Int>(_10315_s.len())) && (_1dd20559a_lower(_10315_s[_10449_i]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= static_cast<jule::Int>(_10315_s.len())) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19717_esign = 1LL;
		if (_10315_s[_10449_i] == '+') {
			(_10449_i)++;
		} else if (_10315_s[_10449_i] == '-') {
			(_10449_i)++;
			_19717_esign=-1LL;
		}
		if (((_10449_i >= static_cast<jule::Int>(_10315_s.len())) || (_10315_s[_10449_i] < '0')) || (_10315_s[_10449_i] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20717_e = 0LL;
		for (; (_10449_i < static_cast<jule::Int>(_10315_s.len())) && ((('0' <= _10315_s[_10449_i]) && (_10315_s[_10449_i] <= '9')) || (_10315_s[_10449_i] == '_')); (_10449_i)++) {
			{
				if (_10315_s[_10449_i] == '_') {
					goto _iter_next_1a7ab2ca1;
				}
				if (_20717_e < 10000LL) {
					_20717_e=static_cast<jule::Int>(static_cast<jule::Int>(static_cast<jule::Int>(_20717_e * 10LL) + static_cast<jule::Int>(static_cast<jule::Int>(_10315_s[_10449_i]))) - '0');
				}
			}
		_iter_next_1a7ab2ca1:;
		}
		_iter_end_1a7ab2ca1:;
		_13213_dp+=static_cast<jule::Int>(_20717_e * _19717_esign);
	} else if (_11813_base == 16LLU) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LLU) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1dd205b2d_atof64exact(jule::U64 _48216_mantissa,jule::Int _48235_exp,jule::Bool _48245_neg) {
	jule::F64 _48258_f = jule::F64();
	jule::Bool _48266_ok = jule::Bool();
	if ((_48216_mantissa >> _1dd1ec6b3_F64_INFO._field_mantbits) != 0LLU) {
		return std::make_tuple(_48258_f,_48266_ok);
	}
	_48258_f=static_cast<jule::F64>(static_cast<jule::F64>(_48216_mantissa));
	if (_48245_neg) {
		_48258_f=static_cast<jule::F64>((-(_48258_f)));
	}
	{
		
		if (_48235_exp == 0LL) {
			_case_begin_1a7ac1078:;
			{
				_48266_ok = true;
				return std::make_tuple(_48258_f,_48266_ok);
			}
		}
		else if ((_48235_exp > 0LL) && (_48235_exp <= 37LL)) {
			_case_begin_1a7ac1100:;
			{
				if (_48235_exp > 22LL) {
					_48258_f*=_1dd205b2d_F64_POW10[_48235_exp - 22LL];
					_48235_exp=22LL;
				}
				if ((_48258_f > 1000000000000000LL) || (_48258_f < -1000000000000000LL)) {
					return std::make_tuple(_48258_f,_48266_ok);
				}
				_48258_f = static_cast<jule::F64>(_48258_f * _1dd205b2d_F64_POW10[_48235_exp]);
				_48266_ok = true;
				return std::make_tuple(_48258_f,_48266_ok);
			}
		}
		else if ((_48235_exp < 0LL) && (_48235_exp >= -22LL)) {
			_case_begin_1a7ac1177:;
			{
				_48258_f = static_cast<jule::F64>(jule::div(_48258_f,_1dd205b2d_F64_POW10[(-(_48235_exp))]));
				_48266_ok = true;
				return std::make_tuple(_48258_f,_48266_ok);
			}
		}
		_match_end_1a7ac0eac:;
	}
	return std::make_tuple(_48258_f,_48266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1dd205b2d_atof32exact(jule::U64 _51616_mantissa,jule::Int _51635_exp,jule::Bool _51649_neg) {
	jule::F32 _51662_f = jule::F32();
	jule::Bool _51670_ok = jule::Bool();
	if ((_51616_mantissa >> _1dd1ec6b3_F32_INFO._field_mantbits) != 0LLU) {
		return std::make_tuple(_51662_f,_51670_ok);
	}
	_51662_f=static_cast<jule::F32>(static_cast<jule::F32>(_51616_mantissa));
	if (_51649_neg) {
		_51662_f=static_cast<jule::F32>((-(_51662_f)));
	}
	{
		
		if (_51635_exp == 0LL) {
			_case_begin_1a7ac690d:;
			{
				_51670_ok = true;
				return std::make_tuple(_51662_f,_51670_ok);
			}
		}
		else if ((_51635_exp > 0LL) && (_51635_exp <= 17LL)) {
			_case_begin_1a7ac6985:;
			{
				if (_51635_exp > 10LL) {
					_51662_f*=_1dd205b2d_F32_POW10[_51635_exp - 10LL];
					_51635_exp=10LL;
				}
				if ((_51662_f > 10000000LL) || (_51662_f < -10000000LL)) {
					return std::make_tuple(_51662_f,_51670_ok);
				}
				_51662_f = static_cast<jule::F32>(_51662_f * _1dd205b2d_F32_POW10[_51635_exp]);
				_51670_ok = true;
				return std::make_tuple(_51662_f,_51670_ok);
			}
		}
		else if ((_51635_exp < 0LL) && (_51635_exp >= -10LL)) {
			_case_begin_1a7ac6a0c:;
			{
				_51662_f = static_cast<jule::F32>(jule::div(_51662_f,_1dd205b2d_F32_POW10[(-(_51635_exp))]));
				_51670_ok = true;
				return std::make_tuple(_51662_f,_51670_ok);
			}
		}
		_match_end_1a7ac6842:;
	}
	return std::make_tuple(_51662_f,_51670_ok);
}



inline std::tuple<jule::F64,jule::Int> _1dd205b2d_atof_hex(jule::Str _55213_s,_1dd1ec6b3_FloatInfo& _55222_flt,jule::U64 _55242_mantissa,jule::Int _55261_exp,jule::Bool _55271_neg,jule::Bool _55282_trunc) {
	jule::Int _5539_max_exp = (static_cast<jule::Int>(1LL << _55222_flt._field_expbits) + _55222_flt._field_bias) - 2LL;
	jule::Int _5549_min_exp = _55222_flt._field_bias + 1LL;
	_55261_exp+=static_cast<jule::Int>(static_cast<jule::Int>(_55222_flt._field_mantbits));
	while ((_55242_mantissa != 0LLU) && ((_55242_mantissa >> static_cast<jule::Uint>(_55222_flt._field_mantbits + 2LLU)) == 0LLU)) {
		{
			_55242_mantissa<<=1LLU;
			(_55261_exp)--;
		}
	_iter_next_1a7acbb88:;
	}
	_iter_end_1a7acbb88:;
	if (_55282_trunc) {
		_55242_mantissa|=1LLU;
	}
	while ((_55242_mantissa >> static_cast<jule::Uint>(static_cast<jule::Uint>(1LLU + _55222_flt._field_mantbits) + 2LLU)) != 0LLU) {
		{
			_55242_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(_55242_mantissa >> 1LLU) | static_cast<jule::U64>(_55242_mantissa & 1LLU));
			(_55261_exp)++;
		}
	_iter_next_1a7acd54c:;
	}
	_iter_end_1a7acd54c:;
	while ((_55242_mantissa > 1LLU) && (_55261_exp < static_cast<jule::Int>(_5549_min_exp - 2LL))) {
		{
			_55242_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(_55242_mantissa >> 1LLU) | static_cast<jule::U64>(_55242_mantissa & 1LLU));
			(_55261_exp)++;
		}
	_iter_next_1a7ad0065:;
	}
	_iter_end_1a7ad0065:;
	jule::U64 _58413_round = _55242_mantissa & 3LLU;
	_55242_mantissa>>=2LLU;
	_58413_round|=static_cast<jule::U64>(_55242_mantissa & 1LLU);
	_55261_exp+=2LL;
	if (_58413_round == 3LLU) {
		(_55242_mantissa)++;
		if (_55242_mantissa == static_cast<jule::U64>(1LLU << static_cast<jule::Uint>(1LLU + _55222_flt._field_mantbits))) {
			_55242_mantissa>>=1LLU;
			(_55261_exp)++;
		}
	}
	if ((_55242_mantissa >> _55222_flt._field_mantbits) == 0LLU) {
		_55261_exp=_55222_flt._field_bias;
	}
	jule::Int _59913_err = static_cast<jule::Int>(0LL);
	if (_55261_exp > _5539_max_exp) {
		_55242_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(1LL << _55222_flt._field_mantbits));
		_55261_exp=static_cast<jule::Int>(_5539_max_exp + 1LL);
		_59913_err=static_cast<jule::Int>(1LL);
	}
	jule::U64 _60613_bits = _55242_mantissa & static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _55222_flt._field_mantbits) - 1LLU);
	_60613_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55261_exp - _55222_flt._field_bias) & static_cast<jule::Int>(static_cast<jule::Int>((1LL << _55222_flt._field_expbits) - 1LL)))) << _55222_flt._field_mantbits);
	if (_55271_neg) {
		_60613_bits|=static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _55222_flt._field_mantbits) << _55222_flt._field_expbits);
	}
	if (_55222_flt == _1dd1ec6b3_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1dd50d2ed_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60613_bits))))),_59913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1dd50d2ed_f64_from_bits(_60613_bits)),_59913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _1dd205b2d_atof32(jule::Str _61711_s) {
	jule::F32 _61721_f = jule::F32();
	jule::Int _61729_n = jule::Int();
	jule::Int _61737_err = 0LL;
	{
		jule::F64 _61914_val;
		jule::Int _61919__n;
		jule::Bool _61923_ok;
		std::tie(_61914_val,_61919__n,_61923_ok) = _1dd205b2d_special(_61711_s);
		if (_61923_ok) {
			_61721_f = static_cast<jule::F32>(static_cast<jule::F32>(_61914_val));
			_61729_n = _61919__n;
			_61737_err = static_cast<jule::Int>(0LL);
			return std::make_tuple(_61721_f,_61729_n,_61737_err);
		}
	}
	jule::U64 _62510_mantissa;
	jule::Int _62520_exp;
	jule::Bool _62525_neg;
	jule::Bool _62530_trunc;
	jule::Bool _62537_hex;
	jule::Int _62542__n;
	jule::Bool _62550_ok;
	std::tie(_62510_mantissa,_62520_exp,_62525_neg,_62530_trunc,_62537_hex,_62542__n,_62550_ok) = _1dd205b2d_read_float(_61711_s);
	_61729_n=_62542__n;
	if ((!(_62550_ok))) {
		_61721_f = 0LL;
		_61737_err = static_cast<jule::Int>(2LL);
		return std::make_tuple(_61721_f,_61729_n,_61737_err);
	}
	if (_62537_hex) {
		jule::F64 _63217_ff = 0LL;
		std::tie(_63217_ff,_61737_err) = _1dd205b2d_atof_hex(_61711_s.slice(0LL,_61729_n),_1dd1ec6b3_F32_INFO,_62510_mantissa,_62520_exp,_62525_neg,_62530_trunc);
		_61721_f = static_cast<jule::F32>(static_cast<jule::F32>(_63217_ff));
		return std::make_tuple(_61721_f,_61729_n,_61737_err);
	}
	{
		if ((!(_62530_trunc))) {
			std::tie(_61721_f,_62550_ok) = _1dd205b2d_atof32exact(_62510_mantissa,_62520_exp,_62525_neg);
			if (_62550_ok) {
				_61737_err = static_cast<jule::Int>(0LL);
				return std::make_tuple(_61721_f,_61729_n,_61737_err);
			}
		}
		std::tie(_61721_f,_62550_ok) = _1dd203e28_eisel_lemire32(_62510_mantissa,_62520_exp,_62525_neg);
		if (_62550_ok) {
			if ((!(_62530_trunc))) {
				_61737_err = static_cast<jule::Int>(0LL);
				return std::make_tuple(_61721_f,_61729_n,_61737_err);
			}
			jule::F32 _65421_f_up = 0LL;
			std::tie(_65421_f_up,_62550_ok) = _1dd203e28_eisel_lemire32(static_cast<jule::U64>(_62510_mantissa + 1LLU),_62520_exp,_62525_neg);
			if (_62550_ok && (_61721_f == _65421_f_up)) {
				_61737_err = static_cast<jule::Int>(0LL);
				return std::make_tuple(_61721_f,_61729_n,_61737_err);
			}
		}
	}
	_1dd472b47_Decimal _66313_d = _1dd472b47_Decimal();
	if ((!(_66313_d._method_set(_61711_s.slice(0LL,_61729_n))))) {
		_61721_f = 0LL;
		_61737_err = static_cast<jule::Int>(2LL);
		return std::make_tuple(_61721_f,_61729_n,_61737_err);
	}
	jule::U64 _66710_b;
	jule::Bool _66713_ovf;
	std::tie(_66710_b,_66713_ovf) = _66313_d._method_float_bits(_1dd1ec6b3_F32_INFO);
	_61721_f=static_cast<jule::F32>(_1dd50d2ed_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66710_b))));
	if (_66713_ovf) {
		_61737_err=static_cast<jule::Int>(1LL);
	}
	return std::make_tuple(_61721_f,_61729_n,_61737_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1dd205b2d_atof64(jule::Str _67511_s) {
	jule::F64 _67521_f = jule::F64();
	jule::Int _67529_n = jule::Int();
	jule::Int _67537_err = 0LL;
	{
		jule::F64 _67714_val;
		jule::Int _67719__n;
		jule::Bool _67723_ok;
		std::tie(_67714_val,_67719__n,_67723_ok) = _1dd205b2d_special(_67511_s);
		if (_67723_ok) {
			_67521_f = _67714_val;
			_67529_n = _67719__n;
			_67537_err = static_cast<jule::Int>(0LL);
			return std::make_tuple(_67521_f,_67529_n,_67537_err);
		}
	}
	jule::U64 _68310_mantissa;
	jule::Int _68320_exp;
	jule::Bool _68325_neg;
	jule::Bool _68330_trunc;
	jule::Bool _68337_hex;
	jule::Int _68342__n;
	jule::Bool _68350_ok;
	std::tie(_68310_mantissa,_68320_exp,_68325_neg,_68330_trunc,_68337_hex,_68342__n,_68350_ok) = _1dd205b2d_read_float(_67511_s);
	_67529_n=_68342__n;
	if ((!(_68350_ok))) {
		_67521_f = 0LL;
		_67537_err = static_cast<jule::Int>(2LL);
		return std::make_tuple(_67521_f,_67529_n,_67537_err);
	}
	if (_68337_hex) {
		std::tie(_67521_f,_67537_err) = _1dd205b2d_atof_hex(_67511_s.slice(0LL,_67529_n),_1dd1ec6b3_F64_INFO,_68310_mantissa,_68320_exp,_68325_neg,_68330_trunc);
		return std::make_tuple(_67521_f,_67529_n,_67537_err);
	}
	{
		if ((!(_68330_trunc))) {
			std::tie(_67521_f,_68350_ok) = _1dd205b2d_atof64exact(_68310_mantissa,_68320_exp,_68325_neg);
			if (_68350_ok) {
				_67537_err = static_cast<jule::Int>(0LL);
				return std::make_tuple(_67521_f,_67529_n,_67537_err);
			}
		}
		std::tie(_67521_f,_68350_ok) = _1dd203e28_eisel_lemire64(_68310_mantissa,_68320_exp,_68325_neg);
		if (_68350_ok) {
			if ((!(_68330_trunc))) {
				_67537_err = static_cast<jule::Int>(0LL);
				return std::make_tuple(_67521_f,_67529_n,_67537_err);
			}
			jule::F64 _71121_f_up = 0LL;
			std::tie(_71121_f_up,_68350_ok) = _1dd203e28_eisel_lemire64(static_cast<jule::U64>(_68310_mantissa + 1LLU),_68320_exp,_68325_neg);
			if (_68350_ok && (_67521_f == _71121_f_up)) {
				_67537_err = static_cast<jule::Int>(0LL);
				return std::make_tuple(_67521_f,_67529_n,_67537_err);
			}
		}
	}
	_1dd472b47_Decimal _72013_d = _1dd472b47_Decimal();
	if ((!(_72013_d._method_set(_67511_s.slice(0LL,_67529_n))))) {
		_67521_f = 0LL;
		_67537_err = static_cast<jule::Int>(2LL);
		return std::make_tuple(_67521_f,_67529_n,_67537_err);
	}
	jule::U64 _72410_b;
	jule::Bool _72413_ovf;
	std::tie(_72410_b,_72413_ovf) = _72013_d._method_float_bits(_1dd1ec6b3_F64_INFO);
	_67521_f=static_cast<jule::F64>(_1dd50d2ed_f64_from_bits(_72410_b));
	if (_72413_ovf) {
		_67537_err=static_cast<jule::Int>(1LL);
	}
	return std::make_tuple(_67521_f,_67529_n,_67537_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1dd205b2d_parse_float_prefix(jule::Str _73223_s,jule::Int _73231_bit_size) {
	if (_73231_bit_size == 32LL) {
		jule::F32 _73414_f;
		jule::Int _73417_n;
		jule::Int _73420_err;
		std::tie(_73414_f,_73417_n,_73420_err) = _1dd205b2d_atof32(_73223_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73414_f)),_73417_n,_73420_err);
	}
	jule::F64 _73810_f;
	jule::Int _73813_n;
	jule::Int _73816_err;
	std::tie(_73810_f,_73813_n,_73816_err) = _1dd205b2d_atof64(_73223_s);
	return std::make_tuple(_73810_f,_73813_n,_73816_err);
}



inline std::tuple<jule::F64,jule::Int> _1dd205b2d_parse_float(jule::Str _76620_s,jule::Int _76628_bit_size) {
	jule::F64 _76710_f;
	jule::Int _76713_n;
	jule::Int _76716_err;
	std::tie(_76710_f,_76713_n,_76716_err) = _1dd205b2d_parse_float_prefix(_76620_s,_76628_bit_size);
	if ((_76713_n != static_cast<jule::Int>(_76620_s.len())) && ((_76716_err == static_cast<jule::Int>(0LL)) || (_76716_err != static_cast<jule::Int>(2LL)))) {
		return std::make_tuple(0LL,static_cast<jule::Int>(2LL));
	}
	return std::make_tuple(_76710_f,_76716_err);
}



inline void _1dd347577_ryu_ftoa_fixed32(_1dd1ec6b3_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	}
	if (_4947_mant == 0LLU) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _1dd9bdadd_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(static_cast<jule::Uint>(25LL - _639_b));
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(static_cast<jule::Int>(_639_b)) - 25LL);
	}
	jule::Int _749_q = ((-(_1dd347577_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1dd347577_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _1dd347577_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > static_cast<jule::U32>(1LLU << static_cast<jule::Uint>(_949_extra - 1LLU))) || ((_9713_dfrac == static_cast<jule::U32>(1LLU << static_cast<jule::Uint>(_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == static_cast<jule::U32>(1LLU << static_cast<jule::Uint>(_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU));
	} else {
		_9913_round_up=(_9713_dfrac >> static_cast<jule::Uint>(_949_extra - 1LLU)) == 1LLU;
	}
	if (_9713_dfrac != 0LLU) {
		_8129_d0=false;
	}
	_1dd347577_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1dd347577_ryu_ftoa_fixed64(_1dd1ec6b3_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:125:9"));;
	}
	if (_12347_mant == 0LLU) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _1dd9bdadd_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(static_cast<jule::Uint>(55LL - _1349_b)));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(static_cast<jule::Int>(_1349_b)) - 55LL);
	}
	jule::Int _1489_q = ((-(_1dd347577_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _1dd347577_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:157:9"));;
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _1dd347577_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > static_cast<jule::U64>(1LLU << static_cast<jule::Uint>(_1689_extra - 1LLU))) || ((_17113_dfrac == static_cast<jule::U64>(1LLU << static_cast<jule::Uint>(_1689_extra - 1LLU))) && (!(_15529_d0)))) || (((_17113_dfrac == static_cast<jule::U64>(1LLU << static_cast<jule::Uint>(_1689_extra - 1LLU))) && _15529_d0) && ((_15514_di & 1LLU) == 1LLU));
	} else {
		_17313_round_up=(_17113_dfrac >> static_cast<jule::Uint>(_1689_extra - 1LLU)) == 1LLU;
	}
	if (_17113_dfrac != 0LLU) {
		_15529_d0=false;
	}
	_1dd347577_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _1dd347577_format_decimal(_1dd1ec6b3_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _1dd347577_U64_POW10[_20490_prec];
	jule::Int _20613_trimmed = 0LL;
	while (_20445_m >= _2059_max) {
		{
			jule::U64 _20814_a = _20445_m / 10LLU;
			jule::U64 _20817_b = _20445_m % 10LL;
			std::tie(_20814_a,_20817_b) = std::make_tuple(_20445_m / 10LLU,_20445_m % 10LL);
			_20445_m=_20814_a;
			(_20613_trimmed)++;
			if (_20817_b > 5LLU) {
				_20474_round_up=true;
			} else if (_20817_b < 5LLU) {
				_20474_round_up=false;
			} else {
				_20474_round_up=_20457_trunc || ((_20445_m & 1LLU) == 1LLU);
			}
			if (_20817_b != 0LLU) {
				_20457_trunc=true;
			}
		}
	_iter_next_1a7b1e329:;
	}
	_iter_end_1a7b1e329:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m = (_20445_m / 10LLU);
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(static_cast<jule::Int>(_20490_prec));
	jule::U64 _23513_v = _20445_m;
	while (_23513_v >= 100LLU) {
		{
			jule::U64 _23717_v1 = 0LLU;
			jule::U64 _23817_v2 = 0LLU;
			if ((_23513_v >> 32LLU) == 0LLU) {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_23513_v) / 100LLU)),static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_23513_v) % 100LL)));
			} else {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(_23513_v / 100LLU),static_cast<jule::U64>(_23513_v % 100LL));
			}
			_23313_n-=2LLU;
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LLU)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LLU)]);
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LLU)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LLU)]);
			_23513_v=_23717_v1;
		}
	_iter_next_1a7b1e68c:;
	}
	_iter_end_1a7b1e68c:;
	if (_23513_v > 0LLU) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LLU)]);
	}
	if (_23513_v >= 10LLU) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	while (_20424_d._field_d[_20424_d._field_nd - 1LL] == '0') {
		{
			(_20424_d._field_nd)--;
			(_20613_trimmed)++;
		}
	_iter_next_1a7b29466:;
	}
	_iter_end_1a7b29466:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



inline void _1dd347577_ryu_ftoa_shortest(_1dd1ec6b3_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_1dd1ec6b3_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LLU) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_1dd9bdadd_trailing_zeros64(_26548_mant) >= static_cast<jule::Int>((-(_26559_exp))))) {
		_26548_mant>>=static_cast<jule::Uint>(static_cast<jule::Uint>((-(_26559_exp))));
		_1dd347577_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _1dd347577_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_1dd347577_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _1dd347577_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _1dd1ec6b3_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _1dd347577_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27710_ml)),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _1dd347577_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27714_mc)),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _1dd347577_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27718_mu)),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29417_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29517_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29617_du32)));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _1dd347577_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _1dd347577_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _1dd347577_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:307:9"));;
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_1dd347577_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_1dd347577_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_1dd347577_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LLU);
	if (_29213_du0 && (_33613_fracu == 0LLU)) {
		_34213_uok=(_26548_mant & 1LLU) == 0LLU;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > static_cast<jule::U64>(1LLU << static_cast<jule::Uint>(_3299_extra - 1LLU))) || ((_33413_fracc == static_cast<jule::U64>(1LLU << static_cast<jule::Uint>(_3299_extra - 1LLU))) && ((_28813_dc & 1LLU) == 1LLU));
	} else {
		_35113_cup=(_33413_fracc >> static_cast<jule::Uint>(_3299_extra - 1LLU)) == 1LLU;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LLU)) && ((_26548_mant & 1LLU) == 0LLU);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LLU);
	_1dd347577_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _1dd347577_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>(static_cast<jule::Int>(_38322_x * 78913LL) >> 18LL);
}



inline jule::Int _1dd347577_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>(static_cast<jule::Int>(_39322_x * 108853LL) >> 15LL);
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1dd347577_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_1dd1ec6b3_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::Int _40274_e2 = jule::Int();
	if ((_40119_mant != static_cast<jule::U64>(1LLU << _40218_flt._field_mantbits)) || (_40130_exp == static_cast<jule::Int>(static_cast<jule::Int>(_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(static_cast<jule::Int>(_40218_flt._field_mantbits))))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(2LLU * _40119_mant) - 1LLU),static_cast<jule::U64>(2LLU * _40119_mant),static_cast<jule::U64>(static_cast<jule::U64>(2LLU * _40119_mant) + 1LLU));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _40119_mant) - 1LLU),static_cast<jule::U64>(4LLU * _40119_mant),static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _40119_mant) + 2LLU));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _1dd347577_ryu_digits(_1dd1ec6b3_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _1dd347577_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _1dd347577_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _1dd347577_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LLU) {
		_1dd347577_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LLU) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LLU);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_1dd347577_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		while (_43517_v > 0LLU) {
			{
				jule::U32 _43718_v1 = _43517_v / 10LLU;
				jule::U32 _43722_v2 = _43517_v % 10LL;
				std::tie(_43718_v1,_43722_v2) = std::make_tuple(_43517_v / 10LLU,_43517_v % 10LL);
				_43517_v=_43718_v1;
				(_43417_n)--;
				_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(static_cast<jule::U8>(_43722_v2 + '0'));
			}
		_iter_next_1a7b4c5ee:;
		}
		_iter_end_1a7b4c5ee:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(static_cast<jule::Int>(9LL - _43417_n));
		_1dd347577_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[_41520_d._field_nd - 1LL] == '0')) {
		{
			(_41520_d._field_nd)--;
		}
	_iter_next_1a7b4e986:;
	}
	_iter_end_1a7b4e986:;
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0')) {
		{
			(_41520_d._field_nd)--;
			(_41520_d._field_dp)--;
			_41520_d._field_d=_41520_d._field_d.slice(1LL);
		}
	_iter_next_1a7b4ec0b:;
	}
	_iter_end_1a7b4ec0b:;
}



inline void _1dd347577_ryu_digits32(_1dd1ec6b3_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LLU) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	while (_46121_upper > 0LLU) {
		{
			jule::U32 _47613_l = _46043_lower + 9LLU / 10LLU;
			jule::U32 _47718_c = _46059_central / 10LLU;
			jule::U32 _47725_cdigit = _46059_central % 10LL;
			std::tie(_47718_c,_47725_cdigit) = std::make_tuple(_46059_central / 10LLU,_46059_central % 10LL);
			jule::U32 _47813_u = _46121_upper / 10LLU;
			if (_47613_l > _47813_u) {
				goto _iter_end_1a7b55805;
			}
			if ((_47613_l == static_cast<jule::U32>(_47718_c + 1LLU)) && (_47718_c < _47813_u)) {
				(_47718_c)++;
				_47725_cdigit=0LLU;
				_46151_cup=false;
			}
			(_46613_trimmed)++;
			_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
			_46913_c_next_digit=static_cast<jule::Int>(static_cast<jule::Int>(_47725_cdigit));
			std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
		}
	_iter_next_1a7b55805:;
	}
	_iter_end_1a7b55805:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LLU) == 1LLU));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	while (_51813_n > _46022_d._field_nd) {
		{
			jule::U32 _52014_v1 = _51713_v / 100LLU;
			jule::U32 _52018_v2 = _51713_v % 100LL;
			std::tie(_52014_v1,_52018_v2) = std::make_tuple(_51713_v / 100LLU,_51713_v % 100LL);
			_46022_d._field_d[_51813_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LLU)]);
			_46022_d._field_d[_51813_n - 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LLU)]);
			_51813_n-=2LL;
			_51713_v=_52014_v1;
		}
	_iter_next_1a7b5c114:;
	}
	_iter_end_1a7b5c114:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[_51813_n]=static_cast<jule::U8>(static_cast<jule::U8>(_51713_v + '0'));
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _1dd347577_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::Int _54262_resE = jule::Int();
	jule::Bool _54273_exact = jule::Bool();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LLU);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:549:9"));;
	}
	jule::U64 _55113_pow = _1dd203e28_DETAILED_POWS_OF_TEN[_54241_q - -348LL].__at(1LL);
	if (_54241_q < 0LL) {
		_55113_pow+=1LLU;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _1dd9bdadd_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_54220_m)),_55113_pow);
	_54232_e2+=static_cast<jule::Int>(static_cast<jule::Int>(static_cast<jule::Int>(_1dd347577_mul_by_log10_log2(_54241_q)) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>(static_cast<jule::U32>((_55610_hi << 7LLU) | static_cast<jule::U64>(_55614_lo >> 57LLU)));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LLU) == 0LLU;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _1dd347577_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::Int _57063_resE = jule::Int();
	jule::Bool _57074_exact = jule::Bool();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LLU);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:577:9"));;
	}
	jule::Array<jule::U64,2> _57913_pow = _1dd203e28_DETAILED_POWS_OF_TEN[_57042_q - -348LL];
	if (_57042_q < 0LL) {
		_57913_pow.__at(0LL)+=1LLU;
	}
	_57033_e2+=static_cast<jule::Int>(static_cast<jule::Int>(static_cast<jule::Int>(_1dd347577_mul_by_log10_log2(_57042_q)) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _1dd9bdadd_mul64(_57021_m,_57913_pow.__at(0LL));
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _1dd9bdadd_mul64(_57021_m,_57913_pow.__at(1LL));
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _1dd9bdadd_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>(static_cast<jule::U64>(_58814_h1 << 9LLU) | static_cast<jule::U64>(_58910_mid >> 55LLU));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LLU) == 0LLU) && (_58714_l0 == 0LLU);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _1dd347577_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LLU) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	for (; _59813_i < _59434_k; (_59813_i)++) {
		{
			if ((_59426_m % 5LL) != 0LLU) {
				return false;
			}
			_59426_m = (_59426_m / 5LLU);
		}
	_iter_next_1a7b6e8c9:;
	}
	_iter_end_1a7b6e8c9:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1dd347577_divmod1e9(jule::U64 _61014_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>(_61014_x / 1000000000LL)),static_cast<jule::U32>(static_cast<jule::U32>(_61014_x % 1000000000LL)));
	}
}



inline void _1dd472b47_trim(_1dd472b47_Decimal& _27514_a) {
	while ((_27514_a._field_nd > 0LL) && (_27514_a._field_d[_27514_a._field_nd - 1LL] == '0')) {
		{
			(_27514_a._field_nd)--;
		}
	_iter_next_1a7b73b20:;
	}
	_iter_end_1a7b73b20:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _1dd472b47_right_shift(_1dd472b47_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	for (; (_29013_n >> _28533_k) == 0LLU; (_28613_r)++) {
		{
			if (_28613_r >= _28521_a._field_nd) {
				if (_29013_n == 0LLU) {
					_28521_a._field_nd=0LL;
					return;
				}
				while ((_29013_n >> _28533_k) == 0LLU) {
					{
						_29013_n=static_cast<jule::Uint>(_29013_n * 10LLU);
						(_28613_r)++;
					}
				_iter_next_1a7b770c9:;
				}
				_iter_end_1a7b770c9:;
				goto _iter_end_1a7b75baa;
			}
			jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			_29013_n=static_cast<jule::Uint>(static_cast<jule::Uint>(static_cast<jule::Uint>(_29013_n * 10LLU) + _30413_c) - '0');
		}
	_iter_next_1a7b75baa:;
	}
	_iter_end_1a7b75baa:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k)) - 1LLU);
	for (; _28613_r < _28521_a._field_nd; (_28613_r)++) {
		{
			jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			jule::Uint _31413_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			_28521_a._field_d[_28713_w]=static_cast<jule::U8>(static_cast<jule::U8>(_31413_dig + '0'));
			(_28713_w)++;
			_29013_n=static_cast<jule::Uint>(static_cast<jule::Uint>(static_cast<jule::Uint>(_29013_n * 10LLU) + _31313_c) - '0');
		}
	_iter_next_1a7b79373:;
	}
	_iter_end_1a7b79373:;
	while (_29013_n > 0LLU) {
		{
			jule::Uint _32313_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			if (_28713_w < 800LL) {
				_28521_a._field_d[_28713_w]=static_cast<jule::U8>(static_cast<jule::U8>(_32313_dig + '0'));
				(_28713_w)++;
			} else if (_32313_dig > 0LLU) {
				_28521_a._field_trunc=true;
			}
			_29013_n=static_cast<jule::Uint>(_29013_n * 10LLU);
		}
	_iter_next_1a7b7bd8c:;
	}
	_iter_end_1a7b7bd8c:;
	_28521_a._field_nd=_28713_w;
	_1dd472b47_trim(_28521_a);
}



inline jule::Bool _1dd472b47_prefix_is_less_than(jule::Array<jule::U8,800> _33924_b,jule::Int _33938_end,jule::Str _33948_s) {
	jule::Int _34013_i = 0LL;
	for (; _34013_i < static_cast<jule::Int>(_33948_s.len()); (_34013_i)++) {
		{
			if (_34013_i >= _33938_end) {
				return true;
			}
			if (_33924_b[_34013_i] != _33948_s[_34013_i]) {
				return _33924_b[_34013_i] < _33948_s[_34013_i];
			}
		}
	_iter_next_1a7b7e8ea:;
	}
	_iter_end_1a7b7e8ea:;
	return false;
}



inline void _1dd472b47_left_shift(_1dd472b47_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _1dd472b47_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_1dd472b47_prefix_is_less_than(_35320_a._field_d,_35320_a._field_nd,_1dd472b47_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	for (; _35913_r >= 0LL; (_35913_r)--) {
		{
			_36313_n+=static_cast<jule::Uint>(static_cast<jule::Uint>(static_cast<jule::Uint>(static_cast<jule::Uint>(_35320_a._field_d[_35913_r])) - '0') << _35332_k);
			jule::Uint _36713_quo = _36313_n / 10LLU;
			jule::Uint _36813_rem = _36313_n - static_cast<jule::Uint>(10LLU * _36713_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(static_cast<jule::U8>(_36813_rem + '0'));
			} else if (_36813_rem != 0LLU) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_36713_quo;
		}
	_iter_next_1a7b881b7:;
	}
	_iter_end_1a7b881b7:;
	while (_36313_n > 0LLU) {
		{
			jule::Uint _38013_quo = _36313_n / 10LLU;
			jule::Uint _38113_rem = _36313_n - static_cast<jule::Uint>(10LLU * _38013_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(static_cast<jule::U8>(_38113_rem + '0'));
			} else if (_38113_rem != 0LLU) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_38013_quo;
		}
	_iter_next_1a7b88492:;
	}
	_iter_end_1a7b88492:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_1dd472b47_trim(_35320_a);
}



inline jule::Bool _1dd472b47_should_round_up(_1dd472b47_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[_40033_nd] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && ((_40021_a._field_d[_40033_nd - 1LL] - '0' % 2LL) != 0LLU);
	}
	return _40021_a._field_d[_40033_nd] >= '5';
}



inline jule::Str _1dd4c1635_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LLU)) && (_6225_base == 10LL)) {
		return _1dd4c1635_small(static_cast<jule::Int>(static_cast<jule::Int>(_6217_i)));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _1dd4c1635_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _1dd4c1635_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _1dd4c1635_small(static_cast<jule::Int>(static_cast<jule::Int>(_7316_i)));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _1dd4c1635_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7316_i)),_7324_base,(_7316_i < 0LL),false);
	return _7713_s;
}



inline jule::Str _1dd4c1635_itoa(jule::Int _8213_i) {
	return _1dd4c1635_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8213_i)),10LL);
}



inline jule::Str _1dd4c1635_small(jule::Int _8710_i) {
	if (_8710_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8710_i,_8710_i + 1LL);
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(_8710_i << 1LLU,(_8710_i << 1LLU) + 2LL);
}



inline jule::Bool _1dd4c1635_is_power_of_two(jule::Int _9420_x) {
	return (_9420_x & static_cast<jule::Int>(_9420_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1dd4c1635_fmt_bits(jule::Slice<jule::U8> _10317_dst,jule::U64 _10334_u,jule::Int _10342_base,jule::Bool _10353_neg,jule::Bool _10364_append_) {
	jule::Slice<jule::U8> _10381_d = jule::Slice<jule::U8>();
	jule::Str _10392_s = jule::Str();
	if ((_10342_base < 2LL) || (_10342_base > 36LL)) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:105:9"));;
	}
	jule::Slice<jule::U8> _10913_a = jule::Slice<jule::U8>::alloc(65LL);
	jule::Int _11013_i = _10913_a.len();
	if (_10353_neg) {
		_10334_u=static_cast<jule::U64>((-(_10334_u)));
	}
	if (_10342_base == 10LL) {
		if (false) {
			while (_10334_u >= 1000000000LL) {
				{
					jule::U64 _12921_q = _10334_u / 1000000000LL;
					jule::Uint _13025_us = static_cast<jule::Uint>(_10334_u - static_cast<jule::U64>(_12921_q * 1000000000LL));
					jule::Int _13125_j = 4LL;
					for (; _13125_j > 0LL; (_13125_j)--) {
						{
							jule::Uint _13325_is = (_13025_us % 100LL) << 1LLU;
							_13025_us = (_13025_us / 100LLU);
							_11013_i-=2LL;
							_10913_a[_11013_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_13325_is + 1LLU)]);
							_10913_a[_11013_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_13325_is + 0LLU)]);
						}
					_iter_next_1a7b9c495:;
					}
					_iter_end_1a7b9c495:;
					(_11013_i)--;
					_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_13025_us << 1LLU) + 1LLU)]);
					_10334_u=_12921_q;
				}
			_iter_next_1a7b9ba27:;
			}
			_iter_end_1a7b9ba27:;
		}
		jule::Uint _15117_us = static_cast<jule::Uint>(_10334_u);
		while (_15117_us >= 100LLU) {
			{
				jule::Uint _15317_is = (_15117_us % 100LL) << 1LLU;
				_15117_us = (_15117_us / 100LLU);
				_11013_i-=2LL;
				_10913_a[_11013_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15317_is + 1LLU)]);
				_10913_a[_11013_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15317_is + 0LLU)]);
			}
		_iter_next_1a7b9bd02:;
		}
		_iter_end_1a7b9bd02:;
		jule::Uint _16113_is = _15117_us << 1LLU;
		(_11013_i)--;
		_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_16113_is + 1LLU)]);
		if (_15117_us >= 10LLU) {
			(_11013_i)--;
			_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_16113_is)]);
		}
	} else if (_1dd4c1635_is_power_of_two(_10342_base)) {
		jule::Uint _17613_shift = static_cast<jule::Uint>(_1dd9bdadd_trailing_zeros(static_cast<jule::Uint>(static_cast<jule::Uint>(_10342_base)))) & 7LLU;
		jule::U64 _17713_b = static_cast<jule::U64>(_10342_base);
		jule::Uint _17813_m = static_cast<jule::Uint>(_10342_base) - 1LLU;
		while (_10334_u >= _17713_b) {
			{
				(_11013_i)--;
				_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_10334_u) & _17813_m)]);
				_10334_u>>=_17613_shift;
			}
		_iter_next_1a7ba69bb:;
		}
		_iter_end_1a7ba69bb:;
		(_11013_i)--;
		_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_10334_u))]);
	} else {
		jule::U64 _18913_b = static_cast<jule::U64>(_10342_base);
		while (_10334_u >= _18913_b) {
			{
				(_11013_i)--;
				jule::U64 _19517_q = jule::div(_10334_u,_18913_b);
				_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_10334_u - static_cast<jule::U64>(_19517_q * _18913_b)))]);
				_10334_u=_19517_q;
			}
		_iter_next_1a7ba933c:;
		}
		_iter_end_1a7ba933c:;
		(_11013_i)--;
		_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_10334_u))]);
	}
	if (_10353_neg) {
		(_11013_i)--;
		_10913_a[_11013_i]='-';
	}
	if (_10364_append_) {
		_10381_d=jule::append(_10317_dst,_10913_a.slice(_11013_i));
		return std::make_tuple(_10381_d,_10392_s);
	}
	_10392_s=static_cast<jule::Str>(_10913_a.slice(_11013_i));
	return std::make_tuple(_10381_d,_10392_s);
}



inline void _1dd0a6eda_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_1dce863c5_exit(1LL);
}



inline jule::Ptr<_1dd0be6b7_FileInfo> _1dd0be6b7_parse_file(jule::Ptr<_1dd05eba7_File> _2223_f) {
	if (_2223_f == nullptr) {
		return nullptr;
	}
	jule::Ptr<_1dd0be6b7_FileInfo> _2713_finf = jule::new_struct<_1dd0be6b7_FileInfo>(new( std::nothrow ) _1dd0be6b7_FileInfo());
	std::tie((*(_2713_finf))._field_ast,(*(_2713_finf))._field_errors) = _1dd0be6b7_parse_fileset(_2223_f);
	if ((*(_2713_finf))._field_errors.len() > 0LL) {
		(*(_2713_finf))._field_ast=nullptr;
	}
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_1dd05b9c8_Ast>,jule::Slice<_1db678789_Log>> _1dd0be6b7_parse_fileset(jule::Ptr<_1dd05eba7_File> _5822_f) {
	jule::Ptr<_1ddb89cdc_Parser> _5913_p = jule::new_struct_ptr<_1ddb89cdc_Parser>(new( std::nothrow ) _1ddb89cdc_Parser());
	(*(_5913_p))._method_parse(_5822_f);
	return std::make_tuple((*(_5913_p))._field_ast,(*(_5913_p))._field_errors);
}



inline jule::Ptr<_1dd05c765_ScopeTree> _1dd229ca6_new_scope(void) {
	return jule::new_struct<_1dd05c765_ScopeTree>(new( std::nothrow ) _1dd05c765_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _1dd229ca6_is_st(_1dd05db0c_Token _4610_current,_1dd05db0c_Token _4626_prev) {
	jule::Bool _4641_ok = jule::Bool();
	jule::Bool _4651_terminated = jule::Bool();
	_4641_ok=(_4610_current._field_id == static_cast<jule::Uint>(5LLU)) || (_4626_prev._field_row < _4610_current._field_row);
	_4651_terminated=_4610_current._field_id == static_cast<jule::Uint>(5LLU);
	return std::make_tuple(_4641_ok,_4651_terminated);
}



inline jule::Bool _1dd229ca6_prev_is_incomplete_expr(jule::Slice<_1dd05db0c_Token>& _5229_tokens,jule::Int& _5247_i) {
	if ((_5247_i > 1LL) && (_5229_tokens[_5247_i - 2LL]._field_id == static_cast<jule::Uint>(23LLU))) {
		return false;
	}
	{
		_1dd05db0c_Token* _5913_prev = (&(_5229_tokens[_5247_i - 1LL]));
		return ((*(_5913_prev))._field_id == static_cast<jule::Uint>(20LLU)) || ((((*(_5913_prev))._field_id == static_cast<jule::Uint>(7LLU)) && _1dd05db0c_is_bin_op((*(_5913_prev))._field_kind)) && ((*(_5913_prev))._field_row < _5229_tokens[_5247_i]._field_row));
	}
}



inline std::tuple<jule::Int,jule::Bool> _1dd229ca6_next_st_pos(jule::Slice<_1dd05db0c_Token>& _6817_tokens,jule::Int _6834_start) {
	jule::Int _6913_brace_n = 0LL;
	jule::Int _7013_i = _6834_start;
	for (; _7013_i < static_cast<jule::Int>(_6817_tokens.len()); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;
			jule::Bool _7317_terminated = false;
			_1dd05db0c_Token _7413_tok = _6817_tokens[_7013_i];
			{
				auto &_match_expr{ _7413_tok._field_id };
				
				if (_match_expr == static_cast<jule::Uint>(3LLU)) {
					_case_begin_1a80c5a99:;
					{
						{
							auto &_match_expr{ _7413_tok._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1a80c7c44:;
								{
									if ((_6913_brace_n == 0LL) && (_7013_i > _6834_start)) {
										if ((!(_1dd229ca6_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _1dd229ca6_is_st(_7413_tok,_6817_tokens[_7013_i - 1LL]);
											if (_7217_ok) {
												goto _julec_label_return;
											}
										}
									}
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_1a80c5c31:;
								{
									(_6913_brace_n)--;
									if ((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < static_cast<jule::Int>(_6817_tokens.len()))) {
										std::tie(_7217_ok,_7317_terminated) = _1dd229ca6_is_st(_6817_tokens[_7013_i + 1LL],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										}
									}
								}
							}
							_match_end_1a80c633b:;
						}
						goto _iter_next_1a80c457b;
					}
				}
				_match_end_1a80c58ce:;
			}
			if (_6913_brace_n != 0LL) {
				goto _iter_next_1a80c457b;
			}
			if (_7013_i > _6834_start) {
				if (_1dd229ca6_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_1a80c457b;
				}
				std::tie(_7217_ok,_7317_terminated) = _1dd229ca6_is_st(_7413_tok,_6817_tokens[_7013_i - 1LL]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _1dd229ca6_is_st(_7413_tok,_7413_tok);
			}
			if ((!(_7217_ok))) {
				goto _iter_next_1a80c457b;
			}
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			}
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_1a80c457b:;
	}
	_iter_end_1a80c457b:;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<_1dd05db0c_Token>,jule::Bool> _1dd229ca6_skip_st(jule::Int& _13117_i,jule::Slice<_1dd05db0c_Token> _13129_tokens) {
	jule::Int _1329_start = _13117_i;
	jule::Bool _13313_terminated = false;
	std::tie(_13117_i,_13313_terminated) = _1dd229ca6_next_st_pos(_13129_tokens,_1329_start);
	jule::Slice<_1dd05db0c_Token> _13513_st_tokens = _13129_tokens.slice(_1329_start,_13117_i);
	if (_13313_terminated) {
		if (_13513_st_tokens.len() == 1LL) {
			std::tie(_13513_st_tokens,_13313_terminated) = _1dd229ca6_skip_st(_13117_i,_13129_tokens);
			return std::make_tuple(_13513_st_tokens,_13313_terminated);
		}
		_13513_st_tokens=_13513_st_tokens.slice(0LL,_13513_st_tokens.len() - 1LL);
	}
	return std::make_tuple(_13513_st_tokens,_13313_terminated);
}



inline jule::Slice<jule::Ptr<_1dd229ca6_Stmt>> _1dd229ca6_split_stmts(jule::Slice<_1dd05db0c_Token>& _15321_tokens) {
	jule::Slice<jule::Ptr<_1dd229ca6_Stmt>> _15413_stms = nullptr;
	jule::Int _15513_pos = 0LL;
	while (_15513_pos < static_cast<jule::Int>(_15321_tokens.len())) {
		{
			jule::Slice<_1dd05db0c_Token> _15718_tokens;
			jule::Bool _15726_terminated;
			std::tie(_15718_tokens,_15726_terminated) = _1dd229ca6_skip_st(_15513_pos,_15321_tokens);
			_15413_stms = jule::alloc_for_append(_15413_stms,1);_15413_stms.__push(jule::new_struct<_1dd229ca6_Stmt>(new( std::nothrow ) _1dd229ca6_Stmt(_15718_tokens,_15726_terminated)));
		}
	_iter_next_1a80cec18:;
	}
	_iter_end_1a80cec18:;
	return _15413_stms;
}



inline jule::Ptr<_1ddb659bb_CallData> _1ddb659bb_get_call_data(jule::Slice<_1dd05db0c_Token>& _4523_tokens) {
	jule::Ptr<_1ddb659bb_CallData> _4613_data = jule::new_struct<_1ddb659bb_CallData>(new( std::nothrow ) _1ddb659bb_CallData());
	std::tie((*(_4613_data))._field_expr_tokens,(*(_4613_data))._field_args_tokens) = _1ddb89cdc_range_last(_4523_tokens);
	if ((*(_4613_data))._field_expr_tokens.len() == 0LL) {
		return _4613_data;
	}
	_1dd05db0c_Token _539_token = (*(_4613_data))._field_expr_tokens[(*(_4613_data))._field_expr_tokens.len() - 1LL];
	if ((_539_token._field_id == static_cast<jule::Uint>(3LLU)) && (_539_token._field_kind == jule::Str("]", 1))) {
		std::tie((*(_4613_data))._field_expr_tokens,(*(_4613_data))._field_generics_tokens) = _1ddb89cdc_range_last((*(_4613_data))._field_expr_tokens);
	}
	return _4613_data;
}



inline jule::Slice<_1dd05db0c_Token> _1ddb659bb_get_block_expr(jule::Slice<_1dd05db0c_Token>& _6124_tokens) {
	jule::Int _6213_brace_n = 0LL;
	jule::Int _6313_skip_to_next_brace_close = 0LL;
	{
		auto &expr = _6124_tokens;
		auto it = expr.begin();
		_iter_begin_1a80d40e6:;
		if (it != expr.end()) {
			jule::Int _1ddb659bb_i = it - expr.begin();
			_1dd05db0c_Token _1ddb659bb_tok = *it;
			{
				{
					auto &_match_expr{ _1ddb659bb_tok._field_id };
					
					if (_match_expr == static_cast<jule::Uint>(16LLU) || _match_expr == static_cast<jule::Uint>(17LLU) || _match_expr == static_cast<jule::Uint>(35LLU)) {
						_case_begin_1a80d7704:;
						{
							(_6313_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::Uint>(3LLU)) {
						_case_begin_1a80d777b:;
						{
							{
								auto &_match_expr{ _1ddb659bb_tok._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a80d8ae0:;
									{
										if ((_6213_brace_n > 0LL) || (_6313_skip_to_next_brace_close > 0LL)) {
											if (_6313_skip_to_next_brace_close > 0LL) {
												(_6313_skip_to_next_brace_close)--;
											}
											(_6213_brace_n)++;
											goto _match_end_1a80d877c;
										}
										return _6124_tokens.slice(0LL,_1ddb659bb_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a80d8d32:;
									{
										(_6213_brace_n)++;
									}
								}
								else {
									_case_begin_1a80d7946:;
									{
										(_6213_brace_n)--;
									}
								}
								_match_end_1a80d877c:;
							}
						}
					}
					_match_end_1a80d74d4:;
				}
			}
			_iter_next_1a80d40e6:;
			++it;
			_1ddb659bb_i++;
			goto _iter_begin_1a80d40e6;
		}
		_iter_end_1a80d40e6:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_1dd05db0c_Token>,jule::Slice<_1dd05db0c_Token>> _1ddb659bb_split_colon(jule::Slice<_1dd05db0c_Token>& _9521_tokens) {
	jule::Int _9613_range_n = 0LL;
	{
		auto &expr = _9521_tokens;
		auto it = expr.begin();
		_iter_begin_1a80d8e0e:;
		if (it != expr.end()) {
			jule::Int _1ddb659bb_i = it - expr.begin();
			_1dd05db0c_Token _1ddb659bb_token = *it;
			{
				{
					auto &_match_expr{ _1ddb659bb_token._field_id };
					
					if (_match_expr == static_cast<jule::Uint>(3LLU)) {
						_case_begin_1a80dabd0:;
						{
							{
								auto &_match_expr{ _1ddb659bb_token._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a80dbae3:;
									{
										(_9613_range_n)++;
										goto _iter_next_1a80d8e0e;
									}
								}
								else {
									_case_begin_1a80dae00:;
									{
										(_9613_range_n)--;
									}
								}
								_match_end_1a80db50a:;
							}
						}
					}
					else if (_match_expr == static_cast<jule::Uint>(11LLU)) {
						_case_begin_1a80dac57:;
						{
							if (_9613_range_n < 1LL) {
								jule::Slice<_1dd05db0c_Token> _11325_l = _9521_tokens.slice(0LL,_1ddb659bb_i);
								jule::Slice<_1dd05db0c_Token> _11425_r = _9521_tokens.slice(_1ddb659bb_i + 1LL);
								return std::make_tuple(_11325_l,_11425_r);
							}
						}
					}
					_match_end_1a80da9c1:;
				}
			}
			_iter_next_1a80d8e0e:;
			++it;
			_1ddb659bb_i++;
			goto _iter_begin_1a80d8e0e;
		}
		_iter_end_1a80d8e0e:;
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_1dd05db0c_Token> _1ddb659bb_eliminate_comments(jule::Slice<_1dd05db0c_Token>& _12228_tokens) {
	jule::Slice<_1dd05db0c_Token> _12313_cutted = nullptr;
	{
		auto &expr = _12228_tokens;
		auto it = expr.begin();
		_iter_begin_1a80dd5d9:;
		if (it != expr.end()) {
			_1dd05db0c_Token _1ddb659bb_token = *it;
			{
				if (_1ddb659bb_token._field_id != static_cast<jule::Uint>(18LLU)) {
					_12313_cutted = jule::alloc_for_append(_12313_cutted,1);_12313_cutted.__push(_1ddb659bb_token);
				}
			}
			_iter_next_1a80dd5d9:;
			++it;
			goto _iter_begin_1a80dd5d9;
		}
		_iter_end_1a80dd5d9:;
	}
	return _12313_cutted;
}



inline jule::Int _1ddb659bb_find_lowest_prec_op(jule::Slice<_1dd05db0c_Token>& _13425_tokens) {
	jule::U8 _13913_prec = 255LLU;
	jule::Int _14013_prec_pos = -1LL;
	jule::Int _14213_brace_n = 0LL;
	jule::Bool _14313_skip_to_next_brace_open = false;
	{
		auto &expr = _13425_tokens;
		auto it = expr.begin();
		_iter_begin_1a80e0597:;
		if (it != expr.end()) {
			jule::Int _1ddb659bb_i = it - expr.begin();
			_1dd05db0c_Token &_1ddb659bb_token = *it;
			{
				{
					
					if (_1ddb659bb_token._field_id == static_cast<jule::Uint>(3LLU)) {
						_case_begin_1a80e1147:;
						{
							{
								auto &_match_expr{ _1ddb659bb_token._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a80e2533:;
									{
										_14313_skip_to_next_brace_open=false;
										goto _case_begin_1a80e2599;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1a80e2599:;
									{
										(_14213_brace_n)++;
									}
								}
								else {
									_case_begin_1a80e1d4b:;
									{
										(_14213_brace_n)--;
									}
								}
								_match_end_1a80e1e6c:;
							}
							goto _iter_next_1a80e0597;
						}
					}
					else if (_14313_skip_to_next_brace_open) {
						_case_begin_1a80e11be:;
						{
							goto _iter_next_1a80e0597;
						}
					}
					else if (_1ddb659bb_token._field_id == static_cast<jule::Uint>(16LLU)) {
						_case_begin_1a80e1246:;
						{
							_14313_skip_to_next_brace_open=true;
							goto _iter_next_1a80e0597;
						}
					}
					else if (_1ddb659bb_i == 0LL) {
						_case_begin_1a80e12bd:;
						{
							goto _iter_next_1a80e0597;
						}
					}
					else if (_1ddb659bb_token._field_id != static_cast<jule::Uint>(7LLU)) {
						_case_begin_1a80e1345:;
						{
							goto _iter_next_1a80e0597;
						}
					}
					else if (_14213_brace_n > 0LL) {
						_case_begin_1a80e13bc:;
						{
							goto _iter_next_1a80e0597;
						}
					}
					_match_end_1a80e1004:;
				}
				_1dd05db0c_Token _17813_left = _13425_tokens[_1ddb659bb_i - 1LL];
				if ((_17813_left._field_id == static_cast<jule::Uint>(7LLU)) || (_17813_left._field_id == static_cast<jule::Uint>(11LLU))) {
					goto _iter_next_1a80e0597;
				}
				if (((_1ddb659bb_i > 1LL) && (_17813_left._field_id == static_cast<jule::Uint>(3LLU))) && (_17813_left._field_kind == jule::Str("]", 1))) {
					_1dd05db0c_Token _18617_lleft = _13425_tokens[_1ddb659bb_i - 2LL];
					if ((_18617_lleft._field_id == static_cast<jule::Uint>(3LLU)) && (_18617_lleft._field_kind == jule::Str("[", 1))) {
						if ((_1ddb659bb_token._field_kind == jule::Str("&", 1)) || (_1ddb659bb_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_1a80e0597;
						}
					}
				}
				jule::U8 _19513_p = _1ddb659bb_token._method_prec();
				if ((_19513_p != 0LLU) && (_19513_p <= _13913_prec)) {
					_13913_prec=_19513_p;
					_14013_prec_pos=_1ddb659bb_i;
				}
			}
			_iter_next_1a80e0597:;
			++it;
			_1ddb659bb_i++;
			goto _iter_begin_1a80e0597;
		}
		_iter_end_1a80e0597:;
	}
	return _14013_prec_pos;
}



inline jule::Ptr<_1dd05c765_IdentExpr> _1ddb659bb_build_ident_expr(_1dd05db0c_Token& _20526_token) {
	return jule::new_struct<_1dd05c765_IdentExpr>(new( std::nothrow ) _1dd05c765_IdentExpr(_20526_token,_20526_token._field_kind,false));
}



inline std::tuple<jule::Slice<_1dd05db0c_Token>,jule::Int> _1ddb659bb_get_range_expr_tokens(jule::Slice<_1dd05db0c_Token>& _21331_tokens) {
	jule::Int _21413_range_n = 0LL;
	jule::Int _21513_i = _21331_tokens.len() - 1LL;
	for (; _21513_i >= 0LL; (_21513_i)--) {
		{
			_1dd05db0c_Token _21713_tok = _21331_tokens[_21513_i];
			if (_21713_tok._field_id == static_cast<jule::Uint>(3LLU)) {
				{
					auto &_match_expr{ _21713_tok._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a80ead11:;
						{
							(_21413_range_n)++;
						}
					}
					else {
						_case_begin_1a80ea519:;
						{
							(_21413_range_n)--;
						}
					}
					_match_end_1a80ea591:;
				}
			}
			if (_21413_range_n == 0LL) {
				return std::make_tuple(_21331_tokens.slice(0LL,_21513_i),_21413_range_n);
			}
		}
	_iter_next_1a80e8182:;
	}
	_iter_end_1a80e8182:;
	return std::make_tuple(nullptr,_21413_range_n);
}



inline jule::Bool _1ddb61a2d_check_assign_tokens(jule::Slice<_1dd05db0c_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_1dd05db0c_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1a80ecd57:;
		if (it != expr.end()) {
			_1dd05db0c_Token &_1ddb61a2d_t = *it;
			{
				if (_1ddb61a2d_t._field_id == static_cast<jule::Uint>(3LLU)) {
					{
						auto &_match_expr{ _1ddb61a2d_t._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a80ee0de:;
							{
								(_2113_brace_n)++;
							}
						}
						else {
							_case_begin_1a80ed7e7:;
							{
								(_2113_brace_n)--;
							}
						}
						_match_end_1a80ed86e:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_1a80ecd57;
				} else if ((_1ddb61a2d_t._field_id == static_cast<jule::Uint>(7LLU)) && _1dd05db0c_is_assign_op(_1ddb61a2d_t._field_kind)) {
					return true;
				}
			}
			_iter_next_1a80ecd57:;
			++it;
			goto _iter_begin_1a80ecd57;
		}
		_iter_end_1a80ecd57:;
	}
	return false;
}



inline _1db678789_Log _1ddb89cdc_make_err(jule::Int _5113_row,jule::Int _5123_col,jule::Ptr<_1dd05eba7_File>& _5134_f,jule::Str _5144_fmt,jule::Slice<jule::Any> _5157_args) {
	return _1db678789_Log(static_cast<jule::Int>(1LL),_5113_row,_5123_col,(*(_5134_f))._method_path(),_1db678789_logf(_5144_fmt,_5157_args),jule::Str(),jule::Str());
}



inline jule::Slice<_1dd05db0c_Token> _1ddb89cdc_range(jule::Int& _7015_i,jule::Str _7023_open,jule::Str _7040_close,jule::Slice<_1dd05db0c_Token>& _7063_tokens) {
	if (_7015_i >= static_cast<jule::Int>(_7063_tokens.len())) {
		return nullptr;
	}
	_1dd05db0c_Token _759_tok = _7063_tokens[_7015_i];
	if ((_759_tok._field_id != static_cast<jule::Uint>(3LLU)) || (_759_tok._field_kind != _7023_open)) {
		return nullptr;
	}
	(_7015_i)++;
	jule::Int _8113_range_n = 1LL;
	jule::Int _829_start = _7015_i;
	for (; (_8113_range_n != 0LL) && (_7015_i < static_cast<jule::Int>(_7063_tokens.len())); (_7015_i)++) {
		{
			_1dd05db0c_Token _8413_token = _7063_tokens[_7015_i];
			if (_8413_token._field_id == static_cast<jule::Uint>(3LLU)) {
				{
					auto &_match_expr{ _8413_token._field_kind };
					
					if (_match_expr == _7023_open) {
						_case_begin_1a8104de7:;
						{
							(_8113_range_n)++;
						}
					}
					else if (_match_expr == _7040_close) {
						_case_begin_1a8104e6e:;
						{
							(_8113_range_n)--;
						}
					}
					_match_end_1a8104bc7:;
				}
			}
		}
	_iter_next_1a8103dd5:;
	}
	_iter_end_1a8103dd5:;
	return _7063_tokens.slice(_829_start,_7015_i - 1LL);
}



inline std::tuple<jule::Slice<_1dd05db0c_Token>,jule::Slice<_1dd05db0c_Token>> _1ddb89cdc_range_last(jule::Slice<_1dd05db0c_Token>& _10320_tokens) {
	jule::Slice<_1dd05db0c_Token> _10339_cutted = jule::Slice<_1dd05db0c_Token>();
	jule::Slice<_1dd05db0c_Token> _10356_cut = jule::Slice<_1dd05db0c_Token>();
	if (_10320_tokens.len() == 0LL) {
		_10339_cutted = _10320_tokens;
		_10356_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10356_cut);
	} else if (_10320_tokens[_10320_tokens.len() - 1LL]._field_id != static_cast<jule::Uint>(3LLU)) {
		_10339_cutted = _10320_tokens;
		_10356_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10356_cut);
	}
	jule::Int _11013_brace_n = 0LL;
	jule::Int _11113_i = _10320_tokens.len() - 1LL;
	for (; _11113_i >= 0LL; (_11113_i)--) {
		{
			_1dd05db0c_Token _11313_token = _10320_tokens[_11113_i];
			if (_11313_token._field_id == static_cast<jule::Uint>(3LLU)) {
				{
					auto &_match_expr{ _11313_token._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a8109726:;
						{
							(_11013_brace_n)++;
							goto _iter_next_1a8107e0b;
						}
					}
					else {
						_case_begin_1a8108e2e:;
						{
							(_11013_brace_n)--;
						}
					}
					_match_end_1a8108ea6:;
				}
			}
			if (_11013_brace_n == 0LL) {
				_10339_cutted = _10320_tokens.slice(0LL,_11113_i);
				_10356_cut = _10320_tokens.slice(_11113_i);
				return std::make_tuple(_10339_cutted,_10356_cut);
			}
		}
	_iter_next_1a8107e0b:;
	}
	_iter_end_1a8107e0b:;
	_10339_cutted = _10320_tokens;
	_10356_cut = nullptr;
	return std::make_tuple(_10339_cutted,_10356_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_1dd05db0c_Token>>,jule::Slice<_1db678789_Log>> _1ddb89cdc_parts(jule::Slice<_1dd05db0c_Token>& _14115_tokens,jule::Uint _14132_id,jule::Bool _14145_expr_must) {
	if (_14115_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_1dd05db0c_Token>> _14613_parts = nullptr;
	jule::Slice<_1db678789_Log> _14713_errors = nullptr;
	jule::Int _14913_range_n = 0LL;
	jule::Int _15013_last = 0LL;
	{
		auto &expr = _14115_tokens;
		auto it = expr.begin();
		_iter_begin_1a810c5a3:;
		if (it != expr.end()) {
			jule::Int _1ddb89cdc_i = it - expr.begin();
			_1dd05db0c_Token _1ddb89cdc_token = *it;
			{
				if (_1ddb89cdc_token._field_id == static_cast<jule::Uint>(3LLU)) {
					{
						auto &_match_expr{ _1ddb89cdc_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a810dbae:;
							{
								(_14913_range_n)++;
								goto _iter_next_1a810c5a3;
							}
						}
						else {
							_case_begin_1a810d3b7:;
							{
								(_14913_range_n)--;
							}
						}
						_match_end_1a810d43e:;
					}
				}
				if (_14913_range_n > 0LL) {
					goto _iter_next_1a810c5a3;
				}
				if (_1ddb89cdc_token._field_id == _14132_id) {
					if (_14145_expr_must && ((_1ddb89cdc_i - _15013_last) <= 0LL)) {
						_1db678789_Log _17021_err = _1ddb89cdc_make_err(_1ddb89cdc_token._field_row,_1ddb89cdc_token._field_column,_1ddb89cdc_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
						_14713_errors = jule::alloc_for_append(_14713_errors,1);_14713_errors.__push(_17021_err);
					}
					_14613_parts = jule::alloc_for_append(_14613_parts,1);_14613_parts.__push(_14115_tokens.slice(_15013_last,_1ddb89cdc_i));
					_15013_last=static_cast<jule::Int>(_1ddb89cdc_i + 1LL);
				}
			}
			_iter_next_1a810c5a3:;
			++it;
			_1ddb89cdc_i++;
			goto _iter_begin_1a810c5a3;
		}
		_iter_end_1a810c5a3:;
	}
	if (_15013_last < static_cast<jule::Int>(_14115_tokens.len())) {
		_14613_parts = jule::alloc_for_append(_14613_parts,1);_14613_parts.__push(_14115_tokens.slice(_15013_last));
	} else if ((!(_14145_expr_must))) {
		_14613_parts = jule::alloc_for_append(_14613_parts,1);_14613_parts.__push(jule::Slice<_1dd05db0c_Token>());
	}
	return std::make_tuple(_14613_parts,_14713_errors);
}



inline jule::Str _1ddb89cdc_get_close_kind_of_brace(jule::Str _18728_left) {
	{
		auto &_match_expr{ _18728_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1a8112982:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1a8112a70:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1a8112ad6:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1a810c62a:;
			{
				return jule::Str();
			}
		}
		_match_end_1a811260d:;
	}
}



inline _1db678789_Log _1ddb89cdc_compiler_err(_1dd05db0c_Token& _19618_token,jule::Str& _19633_fmt,jule::Slice<jule::Any> _19646_args) {
	return _1db678789_Log(static_cast<jule::Int>(1LL),_19618_token._field_row,_19618_token._field_column,(*(_19618_token._field_file))._method_path(),_1db678789_logf(_19633_fmt,_19646_args),(*(_19618_token._field_file))._method_get_row(_19618_token._field_row),jule::Str());
}



inline void _1ddb89cdc_push_suggestion(_1db678789_Log* _20731_log,jule::Str _20742_fmt,jule::Slice<jule::Any> _20755_args) {
	(*(_20731_log))._field_suggestion=_1db678789_logf(_20742_fmt,_20755_args);
}



inline jule::Ptr<_1dd05c765_Comment> _1ddb89cdc_build_comment(_1dd05db0c_Token& _21123_token) {
	_21123_token._field_kind=_1db822922_trim(_21123_token._field_kind.slice(2LL),jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_1dd05c765_Comment>(new( std::nothrow ) _1dd05c765_Comment(_21123_token,_21123_token._field_kind));
}



inline jule::Str _1ddb89cdc_tokstoa(jule::Slice<_1dd05db0c_Token>& _22013_tokens) {
	jule::Str _22113_s = jule::Str();
	{
		auto &expr = _22013_tokens;
		auto it = expr.begin();
		_iter_begin_1a8116bd9:;
		if (it != expr.end()) {
			_1dd05db0c_Token &_1ddb89cdc_token = *it;
			{
				_22113_s+=_1ddb89cdc_token._field_kind;
			}
			_iter_next_1a8116bd9:;
			++it;
			goto _iter_begin_1a8116bd9;
		}
		_iter_end_1a8116bd9:;
	}
	return _22113_s;
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_build_void_type(void) {
	return jule::new_ptr<_1dd05c765_TypeDecl>();
}



inline jule::Ptr<_1dd05c765_TypeDecl> _1ddc59010_build_prim_type(_1dd05db0c_Token _2224_t) {
	return jule::new_struct<_1dd05c765_TypeDecl>(new( std::nothrow ) _1dd05c765_TypeDecl(_2224_t,jule::Any(jule::new_struct<_1dd05c765_IdentTypeDecl>(new( std::nothrow ) _1dd05c765_IdentTypeDecl(_2224_t,_2224_t._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1dd05c765_TypeDecl>>())))));
}



inline std::tuple<jule::Slice<_1dd05db0c_Token>,jule::Int> _1ddc59010_split_map_range(jule::Slice<_1dd05db0c_Token>& _3525_tokens,jule::Int& _3547_i) {
	jule::Slice<_1dd05db0c_Token> _3557_range_tokens = jule::Slice<_1dd05db0c_Token>();
	jule::Int _3580_colon = jule::Int();
	_3580_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3547_i;
	for (; _3547_i < static_cast<jule::Int>(_3525_tokens.len()); (_3547_i)++) {
		{
			_1dd05db0c_Token _4013_token = _3525_tokens[_3547_i];
			if (_4013_token._field_id == static_cast<jule::Uint>(3LLU)) {
				{
					auto &_match_expr{ _4013_token._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a811a68d:;
						{
							(_3713_range_n)++;
							goto _iter_next_1a8118a98;
						}
					}
					else {
						_case_begin_1a8119d96:;
						{
							(_3713_range_n)--;
						}
					}
					_match_end_1a8119e1d:;
				}
			}
			if (_3713_range_n == 0LL) {
				if ((_389_start + 1LL) > _3547_i) {
					return std::make_tuple(_3557_range_tokens,_3580_colon);
				}
				_3557_range_tokens=_3525_tokens.slice(_389_start + 1LL,_3547_i);
				goto _iter_end_1a8118a98;
			} else if (_3713_range_n != 1LL) {
				goto _iter_next_1a8118a98;
			}
			if ((_3580_colon == -1LL) && (_4013_token._field_id == static_cast<jule::Uint>(11LLU))) {
				_3580_colon=static_cast<jule::Int>(static_cast<jule::Int>(_3547_i - _389_start) - 1LL);
			}
		}
	_iter_next_1a8118a98:;
	}
	_iter_end_1a8118a98:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



inline void _1a64669ca_lshift_unsig(_1a64669ca_Const& _56722_c,_1a64669ca_Const& _56733_x) {
	jule::U64 _5689_l = _56722_c._method_as_u64();
	jule::U64 _5699_r = _56733_x._method_as_u64();
	_56722_c._method_set_u64(static_cast<jule::U64>(_5689_l << _5699_r));
}



inline void _1a64669ca_rshift_unsig(_1a64669ca_Const& _57322_c,_1a64669ca_Const& _57333_x) {
	jule::U64 _5749_l = _57322_c._method_as_u64();
	jule::U64 _5759_r = _57333_x._method_as_u64();
	_57322_c._method_set_u64(static_cast<jule::U64>(_5749_l >> _5759_r));
}



inline jule::Str _1a6468a10_real_kind_of(jule::Str _2521_kind) {
	{
		auto &_match_expr{ _2521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a81a4804:;
			{
				return jule::Str("i64", 3);
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a81a486a:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1a819ee2b:;
			{
				return _2521_kind;
			}
		}
		_match_end_1a819e9ca:;
	}
}



inline jule::Int _1a6468a10_bitsize_of(jule::Str _3919_k) {
	{
		auto &_match_expr{ _3919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1a81a5926:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1a81a598c:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1a81a5a47:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1a81a5aad:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1a81a5b24:;
			{
				return 64LL;
			}
		}
		else {
			_case_begin_1a81a54c5:;
			{
				return -1LL;
			}
		}
		_match_end_1a81a5250:;
	}
}



inline jule::Bool _1a6468a10_check_bit_float(jule::Str _11724_val,jule::Int _11734_bit) {
	jule::Int _11813_err;
	std::tie(std::ignore,_11813_err) = _1dd205b2d_parse_float(_11724_val,_11734_bit);
	return _11813_err == static_cast<jule::Int>(0LL);
}



inline jule::F64 _1a646eebc_min(jule::Str _4716_k) {
	_4716_k=_1a6468a10_real_kind_of(_4716_k);
	{
		auto &_match_expr{ _4716_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a81b73c7:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a81b71c9:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a81b7240:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a81b7031:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a81b7097:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a81b710d:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1a81b62d8:;
			{
				return 0LL;
			}
		}
		_match_end_1a81b6a14:;
	}
}



inline jule::F64 _1a646eebc_max(jule::Str _6216_k) {
	_6216_k=_1a6468a10_real_kind_of(_6216_k);
	{
		auto &_match_expr{ _6216_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a81b91cb:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a81b9242:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a81b9033:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a81b9099:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a81b9110:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a81b8d57:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a81b8dbd:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a81b8e34:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a81b8e9a:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a81b9473:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1a81b8a05:;
			{
				return 0LL;
			}
		}
		_match_end_1a81b84b6:;
	}
}



inline jule::Bool _1a6470a8e_is_i8_compatible(jule::Str _629_k) {
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _1a6470a8e_is_i16_compatible(jule::Str _1130_k) {
	return (_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3));
}



inline jule::Bool _1a6470a8e_is_i32_compatible(jule::Str _1730_k) {
	return (((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2));
}



inline jule::Bool _1a6470a8e_is_i64_compatible(jule::Str _2530_k) {
	return (((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3));
}



inline jule::Bool _1a6470a8e_is_u8_compatible(jule::Str _3329_k) {
	return _3329_k == jule::Str("u8", 2);
}



inline jule::Bool _1a6470a8e_is_u16_compatible(jule::Str _3830_k) {
	return (_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3));
}



inline jule::Bool _1a6470a8e_is_u32_compatible(jule::Str _4330_k) {
	return ((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3));
}



inline jule::Bool _1a6470a8e_is_u64_compatible(jule::Str _5030_k) {
	return (((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3));
}



inline jule::Bool _1a6470a8e_is_f32_compatible(jule::Str _5830_k) {
	return _5830_k == jule::Str("f32", 3);
}



inline jule::Bool _1a6470a8e_is_f64_compatible(jule::Str _6330_k) {
	return _6330_k == jule::Str("f64", 3);
}



inline jule::Bool _1a6470a8e_types_are_compatible(jule::Str _7033_k1,jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a81c3504:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a81c356a:;
			{
				return _7042_k2 == jule::Str("int", 3);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a81c35d1:;
			{
				return _7042_k2 == jule::Str("uintptr", 7);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a81c3658:;
			{
				return _7042_k2 == jule::Str("uint", 4);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a81c37ac:;
			{
				return _1a6470a8e_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a81c3834:;
			{
				return _1a6470a8e_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a81c38ab:;
			{
				return _1a6470a8e_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a81c3933:;
			{
				return _1a6470a8e_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a81c3b86:;
			{
				return _1a6470a8e_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a81c3bec:;
			{
				return _1a6470a8e_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a81c3c63:;
			{
				return _1a6470a8e_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a81c3cc9:;
			{
				return _1a6470a8e_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a81c3d40:;
			{
				return _1a6470a8e_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a81c3da6:;
			{
				return _1a6470a8e_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1a81c3e2d:;
			{
				return _7042_k2 == jule::Str("bool", 4);
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1a81c3ea5:;
			{
				return _7042_k2 == jule::Str("str", 3);
			}
		}
		else {
			_case_begin_1a81bb6a6:;
			{
				return false;
			}
		}
		_match_end_1a81bb72d:;
	}
}



inline jule::Bool _1a6470a8e_is_i16_greater(jule::Str _10927_k) {
	return _10927_k == jule::Str("i8", 2);
}



inline jule::Bool _1a6470a8e_is_i32_greater(jule::Str _11427_k) {
	return (_11427_k == jule::Str("i8", 2)) || (_11427_k == jule::Str("i16", 3));
}



inline jule::Bool _1a6470a8e_is_i64_greater(jule::Str _11927_k) {
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _1a6470a8e_is_u16_greater(jule::Str _12627_k) {
	return _12627_k == jule::Str("u8", 2);
}



inline jule::Bool _1a6470a8e_is_u32_greater(jule::Str _13127_k) {
	return (_13127_k == jule::Str("u8", 2)) || (_13127_k == jule::Str("u16", 3));
}



inline jule::Bool _1a6470a8e_is_u64_greater(jule::Str _13727_k) {
	return ((_13727_k == jule::Str("u8", 2)) || (_13727_k == jule::Str("u16", 3))) || (_13727_k == jule::Str("u32", 3));
}



inline jule::Bool _1a6470a8e_is_f32_greater(jule::Str _14423_k) {
	return _14423_k != jule::Str("f64", 3);
}



inline jule::Bool _1a6470a8e_is_f64_greater(jule::Str _14923_k) {
	return true;
}



inline jule::Bool _1a6470a8e_is_greater(jule::Str _15423_k1,jule::Str _15432_k2) {
	{
		auto &_match_expr{ _15423_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a81cda3c:;
			{
				return _1a6539949_is_sig_int(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a81cdaa3:;
			{
				return _1a6539949_is_unsig_int(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a81cd531:;
			{
				return _1a6539949_is_unsig_int(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a81cd597:;
			{
				return _1a6470a8e_is_i16_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a81cd60d:;
			{
				return _1a6470a8e_is_i32_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a81cd674:;
			{
				return _1a6470a8e_is_i64_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a81cd784:;
			{
				return _1a6470a8e_is_u16_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a81cd7ea:;
			{
				return _1a6470a8e_is_u32_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a81cd861:;
			{
				return _1a6470a8e_is_u64_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a81cd8d8:;
			{
				return _1a6470a8e_is_f32_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a81cd960:;
			{
				return _1a6470a8e_is_f64_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a81cdb6e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a81cd4ba:;
			{
				return false;
			}
		}
		_match_end_1a81cd454:;
	}
}



inline jule::Bool _1a6539949_is_sig_int(jule::Str _2723_k) {
	return ((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3));
}



inline jule::Bool _1a6539949_is_unsig_int(jule::Str _3625_k) {
	return (((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7));
}



inline jule::Bool _1a6539949_is_int(jule::Str _4615_k) {
	return _1a6539949_is_sig_int(_4615_k) || _1a6539949_is_unsig_int(_4615_k);
}



inline jule::Bool _1a6539949_is_float(jule::Str _5117_k) {
	return (_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3));
}



inline jule::Bool _1a6539949_is_num(jule::Str _5615_k) {
	return _1a6539949_is_int(_5615_k) || _1a6539949_is_float(_5615_k);
}



inline jule::Bool _1a65aa3c1_is_ascii(jule::I32 _1017_r) {
	
	return _1017_r <= 127LL;
}



inline jule::I32 _1a65aa3c1_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if (_1816_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::Int _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_1a65aa3c1_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1db761ba2_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



inline jule::Str _1a65aa3c1_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1a65aa3c1_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if (_4215_bytes.len() == 0LL) {
		return jule::Str();
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::Int>(_4215_bytes.len()));
	jule::Int _4813_i = 0LL;
	while (_4813_i < static_cast<jule::Int>(_4215_bytes.len())) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_1a65aa3c1_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::Int _5421_size;
				std::tie(_5418_r,_5421_size) = _1db761ba2_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1db761ba2_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_1a81db022:;
	}
	_iter_end_1a81db022:;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1a65aa3c1_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a81e369a:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a81e43c1:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a81e4437:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a81e44ae:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a81e4536:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a81e45ad:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a81e4635:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a81e46ac:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a81e4734:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a81e47ab:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1a81e42a0:;
	}
	_6252_ok=_6241_seq != 0LLU;
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1a65aa3c1_rune_from_esq_seq(jule::Slice<jule::U8> _8422_bytes,jule::Int& _8442_i) {
	jule::U8 _8510_b;
	jule::Bool _8513_ok;
	std::tie(_8510_b,_8513_ok) = _1a65aa3c1_try_btoa_common_esq(_8422_bytes.slice(_8442_i));
	(_8442_i)++;
	if (_8513_ok) {
		(_8442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_8510_b));
	}
	{
		auto &_match_expr{ _8422_bytes[_8442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1a81eb3c8:;
			{
				
				jule::U64 _9514_rc;
				std::tie(_9514_rc,std::ignore) = _1dd20559a_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 5LL)),16LL,64LL);
				_8442_i+=5LL;
				jule::I32 _9713_r = static_cast<jule::I32>(_9514_rc);
				return _9713_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a81eae55:;
			{
				
				jule::U64 _10214_rc;
				std::tie(_10214_rc,std::ignore) = _1dd20559a_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 9LL)),16LL,64LL);
				_8442_i+=9LL;
				jule::I32 _10413_r = static_cast<jule::I32>(_10214_rc);
				return _10413_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a81eb2eb:;
			{
				
				jule::Slice<jule::U8> _10913_seq = _8422_bytes.slice(_8442_i + 1LL,_8442_i + 3LL);
				_8442_i+=3LL;
				jule::U64 _11114_b;
				std::tie(_11114_b,std::ignore) = _1dd20559a_parse_uint(static_cast<jule::Str>(_10913_seq),16LL,64LL);
				return static_cast<jule::I32>(static_cast<jule::I32>(_11114_b));
			}
		}
		else {
			_case_begin_1a81e92d8:;
			{
				
				jule::Slice<jule::U8> _11613_seq = _8422_bytes.slice(_8442_i,_8442_i + 3LL);
				_8442_i+=3LL;
				jule::U64 _11814_b;
				std::tie(_11814_b,std::ignore) = _1dd20559a_parse_uint(static_cast<jule::Str>(_11613_seq.slice(1LL)),8LL,64LL);
				return static_cast<jule::I32>(static_cast<jule::I32>(_11814_b));
			}
		}
		_match_end_1a81e9184:;
	}
}



inline jule::Slice<jule::U8> _1a65aa3c1_str_esq_seq(jule::Slice<jule::U8> _12316_bytes,jule::Int& _12336_i) {
	jule::I32 _1249_r = _1a65aa3c1_rune_from_esq_seq(_12316_bytes,_12336_i);
	if (_1249_r <= 255LL) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(_1249_r))});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1249_r));
}



inline jule::Int _1a665ad9a_find_format_prefix(jule::Slice<jule::U8>& _924_bytes,jule::Int& _940_start) {
	jule::Int _1013_i = _940_start;
	while (_1013_i < static_cast<jule::Int>(_924_bytes.len())) {
		{
			jule::I32 _1214_r;
			jule::Int _1217_size;
			std::tie(_1214_r,_1217_size) = _1db761ba2_decode_rune(_924_bytes.slice(_1013_i));
			if (_1214_r == '{') {
				return _1013_i;
			}
			_1013_i+=_1217_size;
		}
	_iter_next_1a82368ca:;
	}
	_iter_end_1a82368ca:;
	return -1LL;
}



inline jule::Slice<jule::U8> _1a665ad9a_get_format_range(jule::Int& _2630_i,jule::Slice<jule::U8>& _2643_bytes) {
	jule::Int _279_start = _2630_i;
	jule::Int _2813_braces = 0LL;
	while (_2630_i < static_cast<jule::Int>(_2643_bytes.len())) {
		{
			jule::I32 _3014_r;
			jule::Int _3017_size;
			std::tie(_3014_r,_3017_size) = _1db761ba2_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1a8239e94:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a823a15e:;
					{
						(_2813_braces)--;
						if (_2813_braces == 0LL) {
							return _2643_bytes.slice(_279_start,_2630_i);
						}
					}
				}
				_match_end_1a823a03d:;
			}
		}
	_iter_next_1a8239108:;
	}
	_iter_end_1a8239108:;
	return nullptr;
}



inline jule::Slice<jule::U8> _1a665ad9a_fmt_by_default(jule::Any& _4620_arg) {
	if (_4620_arg == jule::Any(nullptr)) {
		return jule::Slice<jule::U8>({'n','i','l'});
	}
	{
		auto &_match_expr{ _4620_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1a823ba9a:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1dd1ec6b3_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4620_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a823c3a3:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1dd1ec6b3_fmt_float(static_cast<jule::F64>(_4620_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1a823935b:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1dd4c1635_fmt_int(static_cast<jule::I8>(_4620_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1a823c13e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1dd4c1635_fmt_int(static_cast<jule::I16>(_4620_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1a823c1a5:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1dd4c1635_fmt_int(static_cast<jule::I32>(_4620_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a823c21b:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1dd4c1635_fmt_int(static_cast<jule::I64>(_4620_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1a823c282:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1dd4c1635_fmt_uint(static_cast<jule::U8>(_4620_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1a823bb55:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1dd4c1635_fmt_uint(static_cast<jule::U16>(_4620_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1a823bbbb:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1dd4c1635_fmt_uint(static_cast<jule::U32>(_4620_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a823bc32:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1dd4c1635_fmt_uint(static_cast<jule::U64>(_4620_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a823bc98:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4620_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1a823bd0e:;
			{
				if (_4620_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>({'t','r','u','e'});
				}
				return jule::Slice<jule::U8>({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1a823b6c1:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4620_arg));
			}
		}
		_match_end_1a823b8ad:;
	}
}



inline jule::Slice<jule::U8> _1a665ad9a_apply_fmt_by_default(jule::Int& _7530_j,jule::Slice<jule::Any>& _7539_args) {
	jule::Any _769_arg = _7539_args[_7530_j];
	(_7530_j)++;
	return _1a665ad9a_fmt_by_default(_769_arg);
}



inline jule::Slice<jule::U8> _1a665ad9a_apply_fmt(jule::Slice<jule::U8>& _8319_fmt,jule::Int& _8337_j,jule::Slice<jule::Any>& _8346_args) {
	if (_8319_fmt.len() == 2LL) {
		return _1a665ad9a_apply_fmt_by_default(_8337_j,_8346_args);
	}
	if ((_8319_fmt.len() == 4LL) && (_8319_fmt == jule::Slice<jule::U8>({'{','{','}','}'}))) {
		return jule::Slice<jule::U8>({'{','}'});
	}
	return _8319_fmt;
}



inline jule::Slice<jule::U8> _1a665ad9a_format_bytes(jule::Str _9717_fmt,jule::Slice<jule::Any> _9727_args) {
	jule::Slice<jule::U8> _9813_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_9717_fmt);
	if (_9727_args.len() == 0LL) {
		return _9813_fmt_bytes;
	}
	jule::Slice<jule::U8> _10413_bytes = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::Int>(_9717_fmt.len()));
	jule::Int _10613_j = 0LL;
	jule::Int _10713_last = 0LL;
	jule::Int _10813_i = _1a665ad9a_find_format_prefix(_9813_fmt_bytes,_10713_last);
	for (; _10813_i != -1LL; _10813_i=static_cast<jule::Int>(_1a665ad9a_find_format_prefix(_9813_fmt_bytes,_10813_i))) {
		{
			_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10713_last,_10813_i));
			jule::Slice<jule::U8> _11117_format = _1a665ad9a_get_format_range(_10813_i,_9813_fmt_bytes);
			if (_11117_format == nullptr) {
				goto _iter_next_1a824a229;
			}
			_10413_bytes=jule::append(_10413_bytes,_1a665ad9a_apply_fmt(_11117_format,_10613_j,_9727_args));
			if (_10613_j >= static_cast<jule::Int>(_9727_args.len())) {
				_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10813_i));
				_10713_last=static_cast<jule::Int>(_9813_fmt_bytes.len());
				goto _iter_end_1a824a229;
			}
			_10713_last=_10813_i;
		}
	_iter_next_1a824a229:;
	}
	_iter_end_1a824a229:;
	if (_10713_last < static_cast<jule::Int>(_9813_fmt_bytes.len())) {
		_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10713_last));
	}
	return _10413_bytes;
}



inline jule::Str _1a665ad9a_format(jule::Str _15715_fmt,jule::Slice<jule::Any> _15725_args) {
	return static_cast<jule::Str>(_1a665ad9a_format_bytes(_15715_fmt,_15725_args));
}



inline jule::Bool _1dded9702_kind_uses_generics(jule::Ptr<_1a5e40a26_TypeKind> _39223_k,jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>& _39238_generics) {
	jule::Str _3939_pk = (*(_39223_k))._method_to_str();
	{
		auto &expr = _39238_generics;
		auto it = expr.begin();
		_iter_begin_1a8ed22e0:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_GenericDecl> &_1dded9702_g = *it;
			{
				if (_1db822922_contains(_3939_pk,(*(_1dded9702_g))._field_ident)) {
					return true;
				}
			}
			_iter_next_1a8ed22e0:;
			++it;
			goto _iter_begin_1a8ed22e0;
		}
		_iter_end_1a8ed22e0:;
	}
	return false;
}



inline jule::Bool _1dded9702_parameter_uses_generics(jule::Ptr<_1dded9702_Param>& _40229_p,jule::Slice<jule::Ptr<_1dd05c765_GenericDecl>>& _40241_generics) {
	if ((*(_40229_p))._method_is_self()) {
		return false;
	}
	return _1dded9702_kind_uses_generics((*((*(_40229_p))._field_kind))._field_kind,_40241_generics);
}



inline jule::Str _1dded9779_build_doc(jule::Ptr<_1dd05c765_CommentGroup> _8518_cg) {
	if (_8518_cg == nullptr) {
		return jule::Str();
	}
	jule::Str _9013_doc = jule::Str();
	{
		auto &expr = (*(_8518_cg))._field_comments;
		auto it = expr.begin();
		_iter_begin_1a8ed4a84:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Comment> _1dded9779_c = *it;
			{
				_9013_doc+=(*(_1dded9779_c))._field_text;
				_9013_doc+=jule::Str(" ", 1);
			}
			_iter_next_1a8ed4a84:;
			++it;
			goto _iter_begin_1a8ed4a84;
		}
		_iter_end_1a8ed4a84:;
	}
	return _9013_doc;
}



inline jule::Ptr<_1a5e40a26_TypeSymbol> _1dded9779_build_type(jule::Ptr<_1dd05c765_TypeDecl> _9819_t) {
	if (_9819_t == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(_9819_t,jule::Ptr<_1a5e40a26_TypeKind>()));
}



inline jule::Ptr<_1a94c333b_Value> _1dded9779_build_expr(jule::Ptr<_1dd05c765_Expr> _10719_expr) {
	if (_10719_expr == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_1a94c333b_Value>(new( std::nothrow ) _1a94c333b_Value(_10719_expr,jule::Ptr<_1a94c333b_Data>()));
}



inline jule::Ptr<_1a5e40a26_TypeAlias> _1dded9779_build_type_alias(jule::Ptr<_1dd05c765_TypeAliasDecl> _11725_decl) {
	return jule::new_struct<_1a5e40a26_TypeAlias>(new( std::nothrow ) _1a5e40a26_TypeAlias((*(_11725_decl))._field_scope,(*(_11725_decl))._field_public,(*(_11725_decl))._field_cpp_linked,jule::Bool(),jule::Bool(),(*(_11725_decl))._field_token,(*(_11725_decl))._field_ident,_1dded9779_build_type((*(_11725_decl))._field_kind),_1dded9779_build_doc((*(_11725_decl))._field_doc_comments),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>()));
}



inline jule::Ptr<_1dd0be530_Field> _1dded9779_build_field(jule::Ptr<_1dd05c765_FieldDecl> _12920_decl) {
	return jule::new_struct_ptr<_1dd0be530_Field>(new( std::nothrow ) _1dd0be530_Field(jule::Ptr<_1dd0be530_Struct>(),(*(_12920_decl))._field_token,(*(_12920_decl))._field_public,(*(_12920_decl))._field_mutable,(*(_12920_decl))._field_ident,_1dded9779_build_type((*(_12920_decl))._field_kind),(*(_12920_decl))._field_default));
}



inline jule::Slice<jule::Ptr<_1dd0be530_Field>> _1dded9779_build_fields(jule::Slice<jule::Ptr<_1dd05c765_FieldDecl>>& _14022_decls) {
	jule::Slice<jule::Ptr<_1dd0be530_Field>> _14113_fields = jule::Slice<jule::Ptr<_1dd0be530_Field>>::alloc(0LL,static_cast<jule::Int>(_14022_decls.len()));
	{
		auto &expr = _14022_decls;
		auto it = expr.begin();
		_iter_begin_1a8ed6239:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_FieldDecl> _1dded9779_decl = *it;
			{
				_14113_fields = jule::alloc_for_append(_14113_fields,1);_14113_fields.__push(_1dded9779_build_field(_1dded9779_decl));
			}
			_iter_next_1a8ed6239:;
			++it;
			goto _iter_begin_1a8ed6239;
		}
		_iter_end_1a8ed6239:;
	}
	return _14113_fields;
}



inline jule::Ptr<_1dd0be530_Struct> _1dded9779_build_struct(jule::Ptr<_1dd05c765_StructDecl> _14821_decl) {
	return jule::new_struct_ptr<_1dd0be530_Struct>(new( std::nothrow ) _1dd0be530_Struct(jule::Ptr<_1c2c46634_Sema>(),jule::Slice<jule::Ptr<_1dd0be530_Struct>>(),jule::Slice<jule::Ptr<_1dd0be530_Struct>>(),(*(_14821_decl))._field_token,(*(_14821_decl))._field_ident,_1dded9779_build_fields((*(_14821_decl))._field_fields),jule::Slice<jule::Ptr<_1dded9702_Fn>>(),jule::Slice<jule::Ptr<_1c3c3d174_Var>>(),(*(_14821_decl))._field_public,(*(_14821_decl))._field_cpp_linked,(*(_14821_decl))._field_directives,_1dded9779_build_doc((*(_14821_decl))._field_doc_comments),(*(_14821_decl))._field_generics,jule::Slice<jule::Ptr<_1de043c01_Trait>>(),_1dd0be530_OperatorMap(),jule::Slice<jule::Ptr<_1dd0be530_StructIns>>()));
}



inline jule::Ptr<_1dded9702_Param> _1dded9779_build_param(jule::Ptr<_1dd05c765_ParamDecl> _16120_decl) {
	return jule::new_struct_ptr<_1dded9702_Param>(new( std::nothrow ) _1dded9702_Param((*(_16120_decl))._field_token,(*(_16120_decl))._field_mutable,(*(_16120_decl))._field_variadic,(*(_16120_decl))._field_reference,_1dded9779_build_type((*(_16120_decl))._field_kind),(*(_16120_decl))._field_ident));
}



inline jule::Slice<jule::Ptr<_1dded9702_Param>> _1dded9779_build_params(jule::Slice<jule::Ptr<_1dd05c765_ParamDecl>>& _17222_decls) {
	jule::Slice<jule::Ptr<_1dded9702_Param>> _17313_params = jule::Slice<jule::Ptr<_1dded9702_Param>>::alloc(0LL,static_cast<jule::Int>(_17222_decls.len()));
	{
		auto &expr = _17222_decls;
		auto it = expr.begin();
		_iter_begin_1a8edd593:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_ParamDecl> _1dded9779_decl = *it;
			{
				_17313_params = jule::alloc_for_append(_17313_params,1);_17313_params.__push(_1dded9779_build_param(_1dded9779_decl));
			}
			_iter_next_1a8edd593:;
			++it;
			goto _iter_begin_1a8edd593;
		}
		_iter_end_1a8edd593:;
	}
	return _17313_params;
}



inline jule::Ptr<_1dded9702_RetType> _1dded9779_build_ret_type(jule::Ptr<_1dd05c765_RetTypeDecl> _18023_decl) {
	if (((*(_18023_decl))._field_idents == nullptr) && ((*(_18023_decl))._field_kind == nullptr)) {
		return nullptr;
	}
	return jule::new_struct<_1dded9702_RetType>(new( std::nothrow ) _1dded9702_RetType(_1dded9779_build_type((*(_18023_decl))._field_kind),(*(_18023_decl))._field_idents));
}



inline jule::Ptr<_1dded9702_Fn> _1dded9779_build_fn(jule::Ptr<_1dd05c765_FnDecl> _19017_decl) {
	return jule::new_struct_ptr<_1dded9702_Fn>(new( std::nothrow ) _1dded9702_Fn(jule::Ptr<_1c2c46634_Sema>(),(*(_19017_decl))._field_token,(*(_19017_decl))._field_global,(*(_19017_decl))._field_unsafety,(*(_19017_decl))._field_public,(*(_19017_decl))._field_cpp_linked,(*(_19017_decl))._field_statically,(*(_19017_decl))._field_exceptional,(*(_19017_decl))._field_ident,(*(_19017_decl))._field_directives,_1dded9779_build_doc((*(_19017_decl))._field_doc_comments),(*(_19017_decl))._field_scope,(*(_19017_decl))._field_generics,_1dded9779_build_ret_type((*(_19017_decl))._field_result),_1dded9779_build_params((*(_19017_decl))._field_params),jule::Ptr<_1dd0be530_Struct>(),jule::Slice<jule::Ptr<_1dded9702_FnIns>>()));
}



inline jule::Slice<jule::Ptr<_1dded9702_Fn>> _1dded9779_build_methods(jule::Slice<jule::Ptr<_1dd05c765_FnDecl>>& _20923_decls) {
	jule::Slice<jule::Ptr<_1dded9702_Fn>> _21013_methods = jule::Slice<jule::Ptr<_1dded9702_Fn>>::alloc(0LL,static_cast<jule::Int>(_20923_decls.len()));
	{
		auto &expr = _20923_decls;
		auto it = expr.begin();
		_iter_begin_1a8ee2dd3:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_FnDecl> _1dded9779_decl = *it;
			{
				_21013_methods = jule::alloc_for_append(_21013_methods,1);_21013_methods.__push(_1dded9779_build_fn(_1dded9779_decl));
			}
			_iter_next_1a8ee2dd3:;
			++it;
			goto _iter_begin_1a8ee2dd3;
		}
		_iter_end_1a8ee2dd3:;
	}
	return _21013_methods;
}



inline jule::Ptr<_1de043c01_Trait> _1dded9779_build_trait(jule::Ptr<_1dd05c765_TraitDecl> _21720_decl) {
	return jule::new_struct_ptr<_1de043c01_Trait>(new( std::nothrow ) _1de043c01_Trait((*(_21720_decl))._field_token,(*(_21720_decl))._field_ident,(*(_21720_decl))._field_public,jule::Bool(),_1dded9779_build_doc((*(_21720_decl))._field_doc_comments),_1dded9779_build_methods((*(_21720_decl))._field_methods),jule::Slice<jule::Ptr<_1dd0be530_Struct>>()));
}



inline jule::Ptr<_1de0dbeb9_EnumItem> _1dded9779_build_enum_item(jule::Ptr<_1dd05c765_EnumItemDecl> _22724_decl) {
	return jule::new_struct<_1de0dbeb9_EnumItem>(new( std::nothrow ) _1de0dbeb9_EnumItem((*(_22724_decl))._field_token,(*(_22724_decl))._field_ident,_1dded9779_build_expr((*(_22724_decl))._field_expr)));
}



inline jule::Slice<jule::Ptr<_1de0dbeb9_EnumItem>> _1dded9779_build_enum_items(jule::Slice<jule::Ptr<_1dd05c765_EnumItemDecl>>& _23526_decls) {
	jule::Slice<jule::Ptr<_1de0dbeb9_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_1de0dbeb9_EnumItem>>::alloc(0LL,static_cast<jule::Int>(_23526_decls.len()));
	{
		auto &expr = _23526_decls;
		auto it = expr.begin();
		_iter_begin_1a8ee34aa:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_EnumItemDecl> _1dded9779_decl = *it;
			{
				_23613_items = jule::alloc_for_append(_23613_items,1);_23613_items.__push(_1dded9779_build_enum_item(_1dded9779_decl));
			}
			_iter_next_1a8ee34aa:;
			++it;
			goto _iter_begin_1a8ee34aa;
		}
		_iter_end_1a8ee34aa:;
	}
	return _23613_items;
}



inline jule::Ptr<_1de0dbeb9_Enum> _1dded9779_build_enum(jule::Ptr<_1dd05c765_EnumDecl> _24319_decl) {
	return jule::new_struct_ptr<_1de0dbeb9_Enum>(new( std::nothrow ) _1de0dbeb9_Enum((*(_24319_decl))._field_token,(*(_24319_decl))._field_public,(*(_24319_decl))._field_ident,_1dded9779_build_type((*(_24319_decl))._field_kind),_1dded9779_build_enum_items((*(_24319_decl))._field_items),_1dded9779_build_doc((*(_24319_decl))._field_doc_comments)));
}



inline jule::Ptr<_1c3c3d174_Var> _1dded9779_build_var(jule::Ptr<_1dd05c765_VarDecl> _25418_decl) {
	return jule::new_struct<_1c3c3d174_Var>(new( std::nothrow ) _1c3c3d174_Var(jule::Ptr<_1de0e938e_Scope>(),(*(_25418_decl))._field_token,(*(_25418_decl))._field_ident,(*(_25418_decl))._field_cpp_linked,(*(_25418_decl))._field_constant,(*(_25418_decl))._field_mutable,(*(_25418_decl))._field_public,jule::Bool(),(*(_25418_decl))._field_statically,(*(_25418_decl))._field_reference,_1dded9779_build_doc((*(_25418_decl))._field_doc_comments),_1dded9779_build_type((*(_25418_decl))._field_kind),_1dded9779_build_expr((*(_25418_decl))._field_expr),_1dded9779_ReferenceStack::_static_method_new(),(*(_25418_decl))._field_directives,jule::Ptr<_1c3c3d174_IterRelation>(),jule::Slice<jule::Ptr<_1c3c3d174_Var>>()));
}



inline jule::Slice<jule::Ptr<_1c3c3d174_Var>> _1dded9779_build_vars(jule::Slice<jule::Ptr<_1dd05c765_VarDecl>> _27219_decls) {
	jule::Slice<jule::Ptr<_1c3c3d174_Var>> _27313_vars = jule::Slice<jule::Ptr<_1c3c3d174_Var>>::alloc(0LL,static_cast<jule::Int>(_27219_decls.len()));
	{
		auto &expr = _27219_decls;
		auto it = expr.begin();
		_iter_begin_1a8eeb4c4:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_VarDecl> _1dded9779_decl = *it;
			{
				_27313_vars = jule::alloc_for_append(_27313_vars,1);_27313_vars.__push(_1dded9779_build_var(_1dded9779_decl));
			}
			_iter_next_1a8eeb4c4:;
			++it;
			goto _iter_begin_1a8eeb4c4;
		}
		_iter_end_1a8eeb4c4:;
	}
	return _27313_vars;
}



inline jule::Ptr<_1de0e21cd_Impl> _1dded9779_build_impl(jule::Ptr<_1dd05c765_Impl> _28019_decl) {
	return jule::new_struct<_1de0e21cd_Impl>(new( std::nothrow ) _1de0e21cd_Impl((*(_28019_decl))._field_base,(*(_28019_decl))._field_dest,_1dded9779_build_methods((*(_28019_decl))._field_methods),_1dded9779_build_vars((*(_28019_decl))._field_statics)));
}



inline jule::Ptr<_1de0e938e_ScopeChecker> _1de0e938e_new_scope_checker_base(jule::Ptr<_1c2c46634_Sema>& _4132_s,jule::Ptr<_1dded9702_FnIns> _4146_owner) {
	return jule::new_struct_ptr<_1de0e938e_ScopeChecker>(new( std::nothrow ) _1de0e938e_ScopeChecker(_4132_s,_4146_owner,jule::Ptr<_1de0e938e_ScopeChecker>(),jule::Int(),jule::new_struct<_1a943b749_SymbolTable>(new( std::nothrow ) _1a943b749_SymbolTable()),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dd05c765_ScopeTree>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Uintptr(),jule::Uintptr(),jule::Ptr<jule::Slice<jule::Ptr<_1de0e938e_ScopeLabel>>>(),jule::Ptr<jule::Slice<jule::Ptr<_1de0e938e_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ptr<_1de0e938e_ScopeChecker> _1de0e938e_new_scope_checker(jule::Ptr<_1c2c46634_Sema>& _4927_s,jule::Ptr<_1dded9702_FnIns> _4941_owner) {
	jule::Ptr<_1de0e938e_ScopeChecker> _5013_base = _1de0e938e_new_scope_checker_base(_4927_s,_4941_owner);
	(*(_5013_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1de0e938e_ScopeLabel>>>(nullptr);
	(*(_5013_base))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1de0e938e_ScopeGoto>>>(nullptr);
	return _5013_base;
}



inline jule::Ptr<_1de0e938e_ScopeLabel> _1de0e938e_find_label_parent(jule::Str _5922_ident,jule::Ptr<_1de0e938e_ScopeChecker> _5938_scope) {
	jule::Ptr<_1de0e938e_ScopeLabel> _6013_label = (*(_5938_scope))._method_find_label_scope(_5922_ident);
	while (_6013_label == nullptr) {
		{
			if (((*(_5938_scope))._field_parent == nullptr) || ((*(_5938_scope))._field_owner != nullptr)) {
				return nullptr;
			}
			_5938_scope=(*(_5938_scope))._field_parent;
			_6013_label=(*(_5938_scope))._method_find_label_scope(_5922_ident);
		}
	_iter_next_1a8eeec9c:;
	}
	_iter_end_1a8eeec9c:;
	return _6013_label;
}



inline jule::Bool _1de0e938e_stmt_is_goto_scope(jule::Any& _7324_stmt,jule::Ptr<_1de0e938e_Scope>& _7336_sc) {
	{
		auto &_match_expr{ _7324_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1de0e938e_Scope>>()) {
			_case_begin_1a900308b:;
			{
				return _7324_stmt.operator jule::Ptr<_1de0e938e_Scope>() == _7336_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_InfIter>>()) {
			_case_begin_1a9003102:;
			{
				return (*(_7324_stmt.operator jule::Ptr<_1de0e938e_InfIter>()))._field_scope == _7336_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_RangeIter>>()) {
			_case_begin_1a9002ab3:;
			{
				return (*(_7324_stmt.operator jule::Ptr<_1de0e938e_RangeIter>()))._field_scope == _7336_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_WhileIter>>()) {
			_case_begin_1a9002b29:;
			{
				return (*(_7324_stmt.operator jule::Ptr<_1de0e938e_WhileIter>()))._field_scope == _7336_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Match>>()) {
			_case_begin_1a9002b90:;
			{
				jule::Ptr<_1de0e938e_Match> _8813_m = _7324_stmt.operator jule::Ptr<_1de0e938e_Match>();
				{
					auto &expr = (*(_8813_m))._field_cases;
					auto it = expr.begin();
					_iter_begin_1a90059ea:;
					if (it != expr.end()) {
						jule::Ptr<_1de0e938e_Case> &_1de0e938e_c = *it;
						{
							if ((*(_1de0e938e_c))._field_scope == _7336_sc) {
								return true;
							}
						}
						_iter_next_1a90059ea:;
						++it;
						goto _iter_begin_1a90059ea;
					}
					_iter_end_1a90059ea:;
				}
				return ((*(_8813_m))._field_default != nullptr) && ((*((*(_8813_m))._field_default))._field_scope == _7336_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Conditional>>()) {
			_case_begin_1a9002c06:;
			{
				jule::Ptr<_1de0e938e_Conditional> _9713_c = _7324_stmt.operator jule::Ptr<_1de0e938e_Conditional>();
				{
					auto &expr = (*(_9713_c))._field_elifs;
					auto it = expr.begin();
					_iter_begin_1a9007733:;
					if (it != expr.end()) {
						jule::Ptr<_1de0e938e_If> &_1de0e938e_elif = *it;
						{
							if ((*(_1de0e938e_elif))._field_scope == _7336_sc) {
								return true;
							}
						}
						_iter_next_1a9007733:;
						++it;
						goto _iter_begin_1a9007733;
					}
					_iter_end_1a9007733:;
				}
				return ((*(_9713_c))._field_default != nullptr) && ((*((*(_9713_c))._field_default))._field_scope == _7336_sc);
			}
		}
		else {
			_case_begin_1a9002882:;
			{
				return false;
			}
		}
		_match_end_1a9000d36:;
	}
}



inline jule::Int _1de0e938e_count_match_type(jule::Ptr<_1de0e938e_Match>& _11022_m,jule::Ptr<_1a5e40a26_TypeKind>& _11034_t) {
	jule::Int _11113_n = 0LL;
	jule::Str _1129_kind = (*(_11034_t))._method_to_str();
	_julec_label_loop:;
	{
		auto &expr = (*(_11022_m))._field_cases;
		auto it = expr.begin();
		_iter_begin_1a9009878:;
		if (it != expr.end()) {
			jule::Ptr<_1de0e938e_Case> &_1de0e938e_c = *it;
			{
				if (_1de0e938e_c == nullptr) {
					goto _iter_next_1a9009878;
				}
				{
					auto &expr = (*(_1de0e938e_c))._field_exprs;
					auto it = expr.begin();
					_iter_begin_1a900a02c:;
					if (it != expr.end()) {
						jule::Ptr<_1a94c333b_Data> &_1de0e938e_expr = *it;
						{
							if (_1de0e938e_expr == nullptr) {
								goto _iter_end_1a9009878;
							}
							if (_1129_kind == (*((*(_1de0e938e_expr))._field_model.operator jule::Ptr<_1a5e40a26_TypeKind>()))._method_to_str()) {
								(_11113_n)++;
							}
						}
						_iter_next_1a900a02c:;
						++it;
						goto _iter_begin_1a900a02c;
					}
					_iter_end_1a900a02c:;
				}
			}
			_iter_next_1a9009878:;
			++it;
			goto _iter_begin_1a9009878;
		}
		_iter_end_1a9009878:;
	}
	return _11113_n;
}



inline jule::Slice<jule::Ptr<_1a94c333b_Data>> _1de0e938e_get_datas_from_tuple_data(jule::Ptr<_1a94c333b_Data>& _13435_d) {
	if ((*((*(_13435_d))._field_kind))._method_tup() != nullptr) {
		{
			auto &_match_expr{ (*(_13435_d))._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1ddb3c047_TupleExprModel>>()) {
				_case_begin_1a900dc89:;
				{
					return (*((*(_13435_d))._field_model.operator jule::Ptr<_1ddb3c047_TupleExprModel>()))._field_datas;
				}
			}
			else {
				_case_begin_1a900c0c8:;
				{
					jule::Ptr<_1a5e40a26_Tuple> _14121_t = (*((*(_13435_d))._field_kind))._method_tup();
					jule::Slice<jule::Ptr<_1a94c333b_Data>> _14221_r = jule::Slice<jule::Ptr<_1a94c333b_Data>>::alloc(0LL,static_cast<jule::Int>((*(_14121_t))._field_types.len()));
					{
						auto &expr = (*(_14121_t))._field_types;
						auto it = expr.begin();
						_iter_begin_1a900d739:;
						if (it != expr.end()) {
							jule::Ptr<_1a5e40a26_TypeKind> _1de0e938e_kind = *it;
							{
								_14221_r = jule::alloc_for_append(_14221_r,1);_14221_r.__push(jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(_1de0e938e_kind,jule::Ptr<_1a5e40a26_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>())));
							}
							_iter_next_1a900d739:;
							++it;
							goto _iter_begin_1a900d739;
						}
						_iter_end_1a900d739:;
					}
					return _14221_r;
				}
			}
			_match_end_1a900c040:;
		}
	} else {
		return jule::Slice<jule::Ptr<_1a94c333b_Data>>({_13435_d});
	}
}



inline jule::Slice<jule::Any> _1de0e938e_get_expr_models(jule::Any& _15625_m) {
	{
		auto &_match_expr{ _15625_m };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_TupleExpr>>()) {
			_case_begin_1a900da7a:;
			{
				jule::Ptr<_1dd05c765_TupleExpr> _15917_tup = _15625_m.operator jule::Ptr<_1dd05c765_TupleExpr>();
				jule::Slice<jule::Any> _16017_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>((*(_15917_tup))._field_expr.len()));
				{
					auto &expr = (*(_15917_tup))._field_expr;
					auto it = expr.begin();
					_iter_begin_1a9011808:;
					if (it != expr.end()) {
						jule::Ptr<_1dd05c765_Expr> _1de0e938e_expr = *it;
						{
							_16017_models = jule::alloc_for_append(_16017_models,1);_16017_models.__push((*(_1de0e938e_expr))._field_kind);
						}
						_iter_next_1a9011808:;
						++it;
						goto _iter_begin_1a9011808;
					}
					_iter_end_1a9011808:;
				}
				return _16017_models;
			}
		}
		else {
			_case_begin_1a900ec35:;
			{
				return jule::Slice<jule::Any>({_15625_m});
			}
		}
		_match_end_1a90102a7:;
	}
}



inline jule::Bool _1de0e938e_check_mut(jule::Ptr<_1c2c46634_Sema>& _17119_s,jule::Ptr<_1a94c333b_Data>& _17130_left,jule::Ptr<_1a94c333b_Data> _17147_right,_1dd05db0c_Token _17161_op) {
	jule::Bool _17174_ok = jule::Bool();
	{
		
		if ((!((*(_17130_left))._field_mutable))) {
			_case_begin_1a9013332:;
			{
				(*(_17119_s))._method_push_err(_17161_op,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>());
				_17174_ok = false;
				return _17174_ok;
			}
		}
		else if (((_17147_right != nullptr) && (!((*(_17147_right))._field_mutable))) && (*((*(_17147_right))._field_kind))._method_mutable()) {
			_case_begin_1a9013420:;
			{
				if ((_17161_op._field_kind != jule::Str("=", 1)) && ((*((*(_17147_right))._field_kind))._method_strct() != nullptr)) {
					_17174_ok = true;
					return _17174_ok;
				}
				(*(_17119_s))._method_push_err(_17161_op,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>());
				_17174_ok = false;
				return _17174_ok;
			}
		}
		else {
			_case_begin_1a9012bb1:;
			{
				_17174_ok = true;
				return _17174_ok;
			}
		}
		_match_end_1a9012b06:;
	}
}



inline jule::Bool _1de0e938e_check_assign(jule::Ptr<_1c2c46634_Sema>& _19022_s,jule::Ptr<_1a94c333b_Data>& _19037_left,jule::Ptr<_1a94c333b_Data> _19054_right,_1dd05db0c_Token _19068_op) {
	jule::Bool _19081_ok = jule::Bool();
	jule::Ptr<_1dded9702_FnIns> _1919_f = (*((*(_19037_left))._field_kind))._method_fnc();
	if (((_1919_f != nullptr) && ((*(_1919_f))._field_decl != nullptr)) && (*((*(_1919_f))._field_decl))._field_global) {
		(*(_19022_s))._method_push_err(_19068_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_19081_ok = false;
		return _19081_ok;
	}
	{
		
		if ((*(_19037_left))._method_is_const()) {
			_case_begin_1a90190c4:;
			{
				(*(_19022_s))._method_push_err(_19068_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				(*(_19022_s))._method_push_suggestion(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_19081_ok = false;
				return _19081_ok;
			}
		}
		else if ((!((*(_19037_left))._field_lvalue))) {
			_case_begin_1a90191a1:;
			{
				(*(_19022_s))._method_push_err(_19068_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_19081_ok = false;
				return _19081_ok;
			}
		}
		else if ((!(_1de0e938e_check_mut(_19022_s,_19037_left,_19054_right,_19068_op)))) {
			_case_begin_1a9019217:;
			{
				_19081_ok = false;
				return _19081_ok;
			}
		}
		else {
			_case_begin_1a9018986:;
			{
				_19081_ok = true;
				return _19081_ok;
			}
		}
		_match_end_1a9018887:;
	}
}



inline jule::Bool _1de0e938e_is_valid_ast_st_for_next_st(jule::Any& _21237_n) {
	{
		auto &_match_expr{ _21237_n };
		
		if (_match_expr.type_is<jule::Ptr<_1dd05c765_AssignSt>>()) {
			_case_begin_1a901bdda:;
			{
				return (!((*(_21237_n.operator jule::Ptr<_1dd05c765_AssignSt>()))._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd05c765_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_1dd05c765_Expr>>()) {
			_case_begin_1a901be51:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a901b934:;
			{
				return false;
			}
		}
		_match_end_1a90194e2:;
	}
}



inline jule::Bool _1de0e938e_is_valid_st_for_next_st(jule::Any& _22429_st) {
	{
		auto &_match_expr{ _22429_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ddb3c047_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1de0e938e_Postfix>>() || _match_expr.type_is<jule::Ptr<_1de0e938e_Assign>>() || _match_expr.type_is<jule::Ptr<_1de0e938e_MultiAssign>>()) {
			_case_begin_1a901cccb:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a94c333b_Data>>()) {
			_case_begin_1a901d2a4:;
			{
				{
					auto &_match_expr{ (*(_22429_st.operator jule::Ptr<_1a94c333b_Data>()))._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ddb3c047_FnCallExprModel>>()) {
						_case_begin_1a901e8e3:;
						{
							return true;
						}
					}
					else {
						_case_begin_1a901e283:;
						{
							return false;
						}
					}
					_match_end_1a901e22d:;
				}
			}
		}
		else {
			_case_begin_1a901c9ac:;
			{
				return false;
			}
		}
		_match_end_1a901c171:;
	}
}



inline jule::Bool _1de0e938e_st_is_def(jule::Any& _24115_st) {
	{
		auto &_match_expr{ _24115_st };
		
		if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
			_case_begin_1a901eea9:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a901ee10:;
			{
				return false;
			}
		}
		_match_end_1a901edaa:;
	}
}



inline jule::Ptr<_1c3c3d174_Var> _1c2c4607e_find_var_in_package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>& _4129_files,jule::Str _4152_ident,jule::Bool _4164_cpp_linked) {
	{
		auto &expr = _4129_files;
		auto it = expr.begin();
		_iter_begin_1a902074b:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c4607e_f = *it;
			{
				jule::Ptr<_1c3c3d174_Var> _4317_v = (*(_1c2c4607e_f))._method_find_var(_4152_ident,_4164_cpp_linked);
				if (_4317_v != nullptr) {
					return _4317_v;
				}
			}
			_iter_next_1a902074b:;
			++it;
			goto _iter_begin_1a902074b;
		}
		_iter_end_1a902074b:;
	}
	return nullptr;
}



inline jule::Ptr<_1a5e40a26_TypeAlias> _1c2c4607e_find_type_alias_in_package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>& _5336_files,jule::Str _5359_ident,jule::Bool _5371_cpp_linked) {
	{
		auto &expr = _5336_files;
		auto it = expr.begin();
		_iter_begin_1a9021c25:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c4607e_f = *it;
			{
				jule::Ptr<_1a5e40a26_TypeAlias> _5517_ta = (*(_1c2c4607e_f))._method_find_type_alias(_5359_ident,_5371_cpp_linked);
				if (_5517_ta != nullptr) {
					return _5517_ta;
				}
			}
			_iter_next_1a9021c25:;
			++it;
			goto _iter_begin_1a9021c25;
		}
		_iter_end_1a9021c25:;
	}
	return nullptr;
}



inline jule::Ptr<_1dd0be530_Struct> _1c2c4607e_find_struct_in_package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>& _6532_files,jule::Str _6555_ident,jule::Bool _6567_cpp_linked) {
	{
		auto &expr = _6532_files;
		auto it = expr.begin();
		_iter_begin_1a9023474:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c4607e_f = *it;
			{
				jule::Ptr<_1dd0be530_Struct> _6717_s = (*(_1c2c4607e_f))._method_find_struct(_6555_ident,_6567_cpp_linked);
				if (_6717_s != nullptr) {
					return _6717_s;
				}
			}
			_iter_next_1a9023474:;
			++it;
			goto _iter_begin_1a9023474;
		}
		_iter_end_1a9023474:;
	}
	return nullptr;
}



inline jule::Ptr<_1dded9702_Fn> _1c2c4607e_find_fn_in_package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>& _7728_files,jule::Str _7751_ident,jule::Bool _7763_cpp_linked) {
	{
		auto &expr = _7728_files;
		auto it = expr.begin();
		_iter_begin_1a9024bc3:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c4607e_file = *it;
			{
				jule::Ptr<_1dded9702_Fn> _7917_f = (*(_1c2c4607e_file))._method_find_fn(_7751_ident,_7763_cpp_linked);
				if (_7917_f != nullptr) {
					return _7917_f;
				}
			}
			_iter_next_1a9024bc3:;
			++it;
			goto _iter_begin_1a9024bc3;
		}
		_iter_end_1a9024bc3:;
	}
	return nullptr;
}



inline jule::Ptr<_1de043c01_Trait> _1c2c4607e_find_trait_in_package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>& _8931_files,jule::Str _8954_ident) {
	{
		auto &expr = _8931_files;
		auto it = expr.begin();
		_iter_begin_1a9026411:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c4607e_f = *it;
			{
				jule::Ptr<_1de043c01_Trait> _9117_t = (*(_1c2c4607e_f))._method_find_trait(_8954_ident);
				if (_9117_t != nullptr) {
					return _9117_t;
				}
			}
			_iter_next_1a9026411:;
			++it;
			goto _iter_begin_1a9026411;
		}
		_iter_end_1a9026411:;
	}
	return nullptr;
}



inline jule::Ptr<_1de0dbeb9_Enum> _1c2c4607e_find_enum_in_package(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>& _10130_files,jule::Str _10153_ident) {
	{
		auto &expr = _10130_files;
		auto it = expr.begin();
		_iter_begin_1a90272ad:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c4607e_f = *it;
			{
				jule::Ptr<_1de0dbeb9_Enum> _10317_e = (*(_1c2c4607e_f))._method_find_enum(_10153_ident);
				if (_10317_e != nullptr) {
					return _10317_e;
				}
			}
			_iter_next_1a90272ad:;
			++it;
			goto _iter_begin_1a90272ad;
		}
		_iter_end_1a90272ad:;
	}
	return nullptr;
}



inline jule::Bool _1c2c4607e_is_std_package(jule::Str _32219_f,jule::Str _32227_p) {
	return _1db822922_has_prefix(_32219_f,_1db7b8830_join(jule::Slice<jule::Str>({_1db841039_PATH_STDLIB,_32227_p})));
}



inline jule::Bool _1c2c46634_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
			_case_begin_1a9029d82:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_StructSubIdentExprModel>>()) {
			_case_begin_1a9029de8:;
			{
				jule::Ptr<_1ddb3c047_StructSubIdentExprModel> _1817_model = _1232_m.operator jule::Ptr<_1ddb3c047_StructSubIdentExprModel>();
				return _1c2c46634_is_valid_model_for_ref((*(_1817_model))._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_TraitSubIdentExprModel>>()) {
			_case_begin_1a90298ba:;
			{
				jule::Ptr<_1ddb3c047_TraitSubIdentExprModel> _2217_model = _1232_m.operator jule::Ptr<_1ddb3c047_TraitSubIdentExprModel>();
				return _1c2c46634_is_valid_model_for_ref((*(_2217_model))._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ddb3c047_UnaryExprModel>>()) {
			_case_begin_1a9029931:;
			{
				jule::Ptr<_1ddb3c047_UnaryExprModel> _2617_unary = _1232_m.operator jule::Ptr<_1ddb3c047_UnaryExprModel>();
				if ((*(_2617_unary))._field_op._field_kind != jule::Str("*", 1)) {
					return false;
				}
				if ((*((*((*(_2617_unary))._field_expr))._field_kind))._method_ptr() != nullptr) {
					return true;
				}
				if ((*((*((*(_2617_unary))._field_expr))._field_kind))._method_sptr() == nullptr) {
					return false;
				}
				return _1c2c46634_is_valid_model_for_ref((*((*(_2617_unary))._field_expr))._field_model);
			}
		}
		else {
			_case_begin_1a90288a8:;
			{
				return false;
			}
		}
		_match_end_1a902917d:;
	}
}



inline _1db678789_Log _1c2c46634_compiler_err(_1dd05db0c_Token& _4818_token,jule::Bool _4832_line,jule::Str _4844_fmt,jule::Slice<jule::Any> _4857_args) {
	_1db678789_Log _4913_log = _1db678789_Log(static_cast<jule::Int>(1LL),_4818_token._field_row,_4818_token._field_column,(*(_4818_token._field_file))._method_path(),_1db678789_logf(_4844_fmt,_4857_args),jule::Str(),jule::Str());
	if (_4832_line) {
		_4913_log._field_line=(*(_4818_token._field_file))._method_get_row(_4818_token._field_row);
	}
	return _4913_log;
}



inline jule::Bool _1c2c46634_imp_is_lookupable(jule::Ptr<_1c2c4607e_ImportInfo>& _6223_i,jule::Str _6239_ident) {
	if ((*(_6223_i))._field_cpp_linked) {
		return false;
	}
	if ((!((*(_6223_i))._field_import_all))) {
		if ((*(_6223_i))._field_selected.len() > 0LL) {
			return (*(_6223_i))._method_exist_ident(_6239_ident);
		}
	}
	return (*(_6223_i))._field_import_all;
}



inline jule::Slice<jule::Ptr<_1c3c3d174_Var>> _1c2c46634_build_ret_vars(jule::Ptr<_1dded9702_FnIns>& _7524_f) {
	if ((*((*(_7524_f))._field_decl))._method_is_void() || ((*(_7524_f))._field_result == nullptr)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1c3c3d174_Var>> _8013_vars = nullptr;
	jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>> _8113_types = _1a93c7a48_get_result_types((*(_7524_f))._field_result);
	{
		auto &expr = (*((*((*(_7524_f))._field_decl))._field_result))._field_idents;
		auto it = expr.begin();
		_iter_begin_1a9034919:;
		if (it != expr.end()) {
			jule::Int _1c2c46634_i = it - expr.begin();
			_1dd05db0c_Token _1c2c46634_ident = *it;
			{
				if (_1dd05db0c_is_ignore_ident(_1c2c46634_ident._field_kind)) {
					goto _iter_next_1a9034919;
				}
				jule::Ptr<_1c3c3d174_Var> _8717_v = jule::new_struct<_1c3c3d174_Var>(new( std::nothrow ) _1c3c3d174_Var((*(_7524_f))._field_scope,_1c2c46634_ident,_1c2c46634_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),_8113_types[_1c2c46634_i])),jule::new_struct<_1a94c333b_Value>(new( std::nothrow ) _1a94c333b_Value(jule::Ptr<_1dd05c765_Expr>(),jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data()))),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Slice<jule::Ptr<_1dd05c765_Directive>>(),jule::Ptr<_1c3c3d174_IterRelation>(),jule::Slice<jule::Ptr<_1c3c3d174_Var>>()));
				_8013_vars = jule::alloc_for_append(_8013_vars,1);_8013_vars.__push(_8717_v);
			}
			_iter_next_1a9034919:;
			++it;
			_1c2c46634_i++;
			goto _iter_begin_1a9034919;
		}
		_iter_end_1a9034919:;
	}
	return _8013_vars;
}



inline jule::Slice<jule::Ptr<_1c3c3d174_Var>> _1c2c46634_build_param_vars(jule::Ptr<_1dded9702_FnIns>& _10426_f) {
	if ((*(_10426_f))._field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1c3c3d174_Var>> _10913_vars = jule::Slice<jule::Ptr<_1c3c3d174_Var>>::alloc(0LL,static_cast<jule::Int>((*(_10426_f))._field_params.len()));
	{
		auto &expr = (*(_10426_f))._field_params;
		auto it = expr.begin();
		_iter_begin_1a9037ae8:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_ParamIns> _1c2c46634_p = *it;
			{
				jule::Ptr<_1c3c3d174_Var> _11117_v = jule::new_struct<_1c3c3d174_Var>(new( std::nothrow ) _1c3c3d174_Var((*(_10426_f))._field_scope,(*((*(_1c2c46634_p))._field_decl))._field_token,(*((*(_1c2c46634_p))._field_decl))._field_ident,jule::Bool(),jule::Bool(),(*((*(_1c2c46634_p))._field_decl))._field_mutable,jule::Bool(),true,jule::Bool(),(*((*(_1c2c46634_p))._field_decl))._field_reference,jule::Str(),jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol()),jule::new_struct<_1a94c333b_Value>(new( std::nothrow ) _1a94c333b_Value(jule::Ptr<_1dd05c765_Expr>(),jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data()))),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Slice<jule::Ptr<_1dd05c765_Directive>>(),jule::Ptr<_1c3c3d174_IterRelation>(),jule::Slice<jule::Ptr<_1c3c3d174_Var>>()));
				{
					
					if ((*((*(_1c2c46634_p))._field_decl))._method_is_self()) {
						_case_begin_1a903a414:;
						{
							(*((*(_11117_v))._field_kind))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),false,(*(_10426_f))._field_owner));
							(*(_11117_v))._field_reference=true;
							if ((*((*(_1c2c46634_p))._field_decl))._method_is_ref()) {
								(*(_11117_v))._field_ident=(*(_11117_v))._field_ident.slice(1LL);
								(*((*((*(_11117_v))._field_kind))._field_kind))._field_kind=jule::new_struct_ptr<_1a5e40a26_Sptr>(new( std::nothrow ) _1a5e40a26_Sptr(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind((*((*((*(_11117_v))._field_kind))._field_kind))._field_cpp_ident,jule::Bool(),jule::Bool(),(*((*((*(_11117_v))._field_kind))._field_kind))._field_kind))));
							}
						}
					}
					else if ((*((*(_1c2c46634_p))._field_decl))._field_variadic) {
						_case_begin_1a903a887:;
						{
							(*((*(_11117_v))._field_kind))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),false,jule::new_struct_ptr<_1a5e40a26_Slc>(new( std::nothrow ) _1a5e40a26_Slc(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind((*((*(_1c2c46634_p))._field_kind))._field_cpp_ident,jule::Bool(),jule::Bool(),(*((*(_1c2c46634_p))._field_kind))._field_kind))))));
						}
					}
					else {
						_case_begin_1a903a07e:;
						{
							(*((*(_11117_v))._field_kind))._field_kind=(*(_1c2c46634_p))._field_kind;
						}
					}
					_match_end_1a903a007:;
				}
				_10913_vars = jule::alloc_for_append(_10913_vars,1);_10913_vars.__push(_11117_v);
			}
			_iter_next_1a9037ae8:;
			++it;
			goto _iter_begin_1a9037ae8;
		}
		_iter_end_1a9037ae8:;
	}
	return _10913_vars;
}



inline jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> _1c2c46634_build_generic_type_aliases(jule::Ptr<_1dded9702_FnIns>& _16536_f) {
	jule::Int _16613_size = (*(_16536_f))._field_generics.len();
	if ((*((*(_16536_f))._field_decl))._field_owner != nullptr) {
		_16613_size+=static_cast<jule::Int>((*((*((*(_16536_f))._field_decl))._field_owner))._field_generics.len());
	}
	if (_16613_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>> _17513_aliases = jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>::alloc(0LL,_16613_size);
	{
		auto &expr = (*(_16536_f))._field_generics;
		auto it = expr.begin();
		_iter_begin_1a9042141:;
		if (it != expr.end()) {
			jule::Int _1c2c46634_i = it - expr.begin();
			jule::Ptr<_1a5e40a26_TypeKind> _1c2c46634_g = *it;
			{
				jule::Ptr<_1dd05c765_GenericDecl> _17817_decl = (*((*(_16536_f))._field_decl))._field_generics[_1c2c46634_i];
				_17513_aliases = jule::alloc_for_append(_17513_aliases,1);_17513_aliases.__push(jule::new_struct<_1a5e40a26_TypeAlias>(new( std::nothrow ) _1a5e40a26_TypeAlias((*((*(_16536_f))._field_decl))._field_scope,jule::Bool(),jule::Bool(),true,true,(*(_17817_decl))._field_token,(*(_17817_decl))._field_ident,jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),_1c2c46634_g)),jule::Str(),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>())));
			}
			_iter_next_1a9042141:;
			++it;
			_1c2c46634_i++;
			goto _iter_begin_1a9042141;
		}
		_iter_end_1a9042141:;
	}
	if ((*((*(_16536_f))._field_decl))._field_owner != nullptr) {
		jule::Ptr<_1dd0be530_StructIns> _19017_owner = (*(_16536_f))._field_owner;
		{
			auto &expr = (*(_19017_owner))._field_generics;
			auto it = expr.begin();
			_iter_begin_1a90438a1:;
			if (it != expr.end()) {
				jule::Int _1c2c46634_i = it - expr.begin();
				jule::Ptr<_1a5e40a26_TypeKind> _1c2c46634_g = *it;
				{
					jule::Ptr<_1dd05c765_GenericDecl> _19221_decl = (*((*(_19017_owner))._field_decl))._field_generics[_1c2c46634_i];
					_17513_aliases = jule::alloc_for_append(_17513_aliases,1);_17513_aliases.__push(jule::new_struct<_1a5e40a26_TypeAlias>(new( std::nothrow ) _1a5e40a26_TypeAlias((*((*(_16536_f))._field_decl))._field_scope,jule::Bool(),jule::Bool(),true,true,(*(_19221_decl))._field_token,(*(_19221_decl))._field_ident,jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),_1c2c46634_g)),jule::Str(),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>())));
				}
				_iter_next_1a90438a1:;
				++it;
				_1c2c46634_i++;
				goto _iter_begin_1a90438a1;
			}
			_iter_end_1a90438a1:;
		}
	}
	return _17513_aliases;
}



inline jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_find_file(jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>& _20719_files,jule::Ptr<_1dd05eba7_File>& _20743_handler) {
	{
		auto &expr = _20719_files;
		auto it = expr.begin();
		_iter_begin_1a9045d04:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1c2c46634_fl = *it;
			{
				if ((*(_1c2c46634_fl))._field_file == _20743_handler) {
					return _1c2c46634_fl;
				}
			}
			_iter_next_1a9045d04:;
			++it;
			goto _iter_begin_1a9045d04;
		}
		_iter_end_1a9045d04:;
	}
	return nullptr;
}



inline std::tuple<jule::Bool,jule::Bool> _1c2c46634_conditional_has_ret(jule::Ptr<_1de0e938e_Conditional> _21628_c) {
	jule::Bool _21647_ok = jule::Bool();
	jule::Bool _21657_breaking = jule::Bool();
	jule::Bool _21713_breaked = false;
	{
		auto &expr = (*(_21628_c))._field_elifs;
		auto it = expr.begin();
		_iter_begin_1a9048477:;
		if (it != expr.end()) {
			jule::Ptr<_1de0e938e_If> _1c2c46634_elif = *it;
			{
				if (_1c2c46634_elif == nullptr) {
					_21647_ok = false;
					_21657_breaking = false;
					return std::make_tuple(_21647_ok,_21657_breaking);
				}
				std::tie(_21647_ok,std::ignore,_21657_breaking) = _1c2c46634___has_ret((*(_1c2c46634_elif))._field_scope);
				_21713_breaked=_21713_breaked || _21657_breaking;
				if ((!(_21647_ok))) {
					_21647_ok = false;
					_21657_breaking = _21713_breaked;
					return std::make_tuple(_21647_ok,_21657_breaking);
				}
			}
			_iter_next_1a9048477:;
			++it;
			goto _iter_begin_1a9048477;
		}
		_iter_end_1a9048477:;
	}
	if ((*(_21628_c))._field_default == nullptr) {
		_21647_ok = false;
		_21657_breaking = _21713_breaked;
		return std::make_tuple(_21647_ok,_21657_breaking);
	}
	std::tie(_21647_ok,std::ignore,_21657_breaking) = _1c2c46634___has_ret((*((*(_21628_c))._field_default))._field_scope);
	_21713_breaked=_21713_breaked || _21657_breaking;
	_21657_breaking = _21713_breaked;
	return std::make_tuple(_21647_ok,_21657_breaking);
}



inline jule::Bool _1c2c46634_match_has_ret(jule::Ptr<_1de0e938e_Match> _23822_m) {
	if ((*(_23822_m))._field_default == nullptr) {
		return false;
	}
	jule::Bool _24313_ok = true;
	jule::Bool _24413_falled = false;
	jule::Bool _24513_breaked = false;
	{
		auto &expr = (*(_23822_m))._field_cases;
		auto it = expr.begin();
		_iter_begin_1a904c811:;
		if (it != expr.end()) {
			jule::Ptr<_1de0e938e_Case> _1c2c46634_c = *it;
			{
				if (_1c2c46634_c == nullptr) {
					return false;
				}
				std::tie(_24313_ok,_24413_falled,_24513_breaked) = _1c2c46634___has_ret((*(_1c2c46634_c))._field_scope);
				if (((!(_24313_ok)) && (!(_24413_falled))) || _24513_breaked) {
					return false;
				}
				{
					
					if ((!(_24313_ok))) {
						_case_begin_1a904e25d:;
						{
							if ((!(_24413_falled))) {
								return false;
							}
							goto _case_begin_1a904e2c4;
						}
					}
					else if (_24413_falled) {
						_case_begin_1a904e2c4:;
						{
							if ((*(_1c2c46634_c))._field_next == nullptr) {
								return false;
							}
							goto _iter_next_1a904c811;
						}
					}
					_match_end_1a904de83:;
				}
				_24413_falled=false;
			}
			_iter_next_1a904c811:;
			++it;
			goto _iter_begin_1a904c811;
		}
		_iter_end_1a904c811:;
	}
	return _1c2c46634_has_ret((*((*(_23822_m))._field_default))._field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1c2c46634___has_ret(jule::Ptr<_1de0e938e_Scope> _27418_s) {
	jule::Bool _27431_ok = jule::Bool();
	jule::Bool _27441_falled = jule::Bool();
	jule::Bool _27455_breaked = jule::Bool();
	if (_27418_s == nullptr) {
		_27431_ok = false;
		_27441_falled = false;
		_27455_breaked = false;
		return std::make_tuple(_27431_ok,_27441_falled,_27455_breaked);
	}
	{
		auto &expr = (*(_27418_s))._field_stmts;
		auto it = expr.begin();
		_iter_begin_1a90510d9:;
		if (it != expr.end()) {
			jule::Any _1c2c46634_st = *it;
			{
				{
					auto &_match_expr{ _1c2c46634_st };
					
					if (_match_expr.type_is<jule::Ptr<_1de0e938e_FallSt>>()) {
						_case_begin_1a9052393:;
						{
							_27441_falled=true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1de0e938e_BreakSt>>()) {
						_case_begin_1a905241a:;
						{
							_27431_ok = false;
							_27441_falled = false;
							_27455_breaked = true;
							return std::make_tuple(_27431_ok,_27441_falled,_27455_breaked);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1de0e938e_ContSt>>()) {
						_case_begin_1a9052492:;
						{
							_27431_ok = false;
							_27441_falled = false;
							_27455_breaked = true;
							return std::make_tuple(_27431_ok,_27441_falled,_27455_breaked);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1de0e938e_InfIter>>()) {
						_case_begin_1a9052519:;
						{
							_27431_ok=_1c2c46634_has_ret((*(_1c2c46634_st.operator jule::Ptr<_1de0e938e_InfIter>()))._field_scope);
							if (_27431_ok) {
								_27431_ok = true;
								_27441_falled = false;
								_27455_breaked = false;
								return std::make_tuple(_27431_ok,_27441_falled,_27455_breaked);
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1de0e938e_RetSt>>()) {
						_case_begin_1a9052591:;
						{
							_27431_ok = true;
							return std::make_tuple(_27431_ok,_27441_falled,_27455_breaked);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Scope>>()) {
						_case_begin_1a9052618:;
						{
							_27431_ok=_1c2c46634_has_ret(_1c2c46634_st.operator jule::Ptr<_1de0e938e_Scope>());
							if (_27431_ok) {
								_27431_ok = true;
								_27441_falled = false;
								_27455_breaked = false;
								return std::make_tuple(_27431_ok,_27441_falled,_27455_breaked);
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a94c333b_Data>>()) {
						_case_begin_1a9052690:;
						{
							{
								auto &_match_expr{ (*(_1c2c46634_st.operator jule::Ptr<_1a94c333b_Data>()))._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel>>()) {
									_case_begin_1a905719a:;
									{
										_27431_ok = true;
										return std::make_tuple(_27431_ok,_27441_falled,_27455_breaked);
									}
								}
								_match_end_1a9057145:;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Conditional>>()) {
						_case_begin_1a9052717:;
						{
							std::tie(_27431_ok,_27455_breaked) = _1c2c46634_conditional_has_ret(_1c2c46634_st.operator jule::Ptr<_1de0e938e_Conditional>());
							if (_27431_ok) {
								_27431_ok = true;
								_27441_falled = false;
								_27455_breaked = false;
								return std::make_tuple(_27431_ok,_27441_falled,_27455_breaked);
							}
							if (_27455_breaked) {
								_27431_ok = false;
								_27441_falled = false;
								return std::make_tuple(_27431_ok,_27441_falled,_27455_breaked);
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1de0e938e_Match>>()) {
						_case_begin_1a905278e:;
						{
							_27431_ok=_1c2c46634_match_has_ret(_1c2c46634_st.operator jule::Ptr<_1de0e938e_Match>());
							if (_27431_ok) {
								_27431_ok = true;
								_27441_falled = false;
								_27455_breaked = false;
								return std::make_tuple(_27431_ok,_27441_falled,_27455_breaked);
							}
						}
					}
					_match_end_1a9052184:;
				}
			}
			_iter_next_1a90510d9:;
			++it;
			goto _iter_begin_1a90510d9;
		}
		_iter_end_1a90510d9:;
	}
	_27431_ok = false;
	return std::make_tuple(_27431_ok,_27441_falled,_27455_breaked);
}



inline jule::Bool _1c2c46634_has_ret(jule::Ptr<_1de0e938e_Scope> _33316_s) {
	jule::Bool _33410_ok;
	std::tie(_33410_ok,std::ignore,std::ignore) = _1c2c46634___has_ret(_33316_s);
	return _33410_ok;
}



inline void _1c2c46634_push_suggestion(_1db678789_Log* _33831_log,jule::Str _33842_fmt,jule::Slice<jule::Any> _33855_args) {
	(*(_33831_log))._field_suggestion=_1db678789_logf(_33842_fmt,_33855_args);
}



inline jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>> _1a93c7a48_get_result_types(jule::Ptr<_1a5e40a26_TypeKind>& _2626_result) {
	{
		
		if (_2626_result == nullptr) {
			_case_begin_1a905c205:;
			{
				return nullptr;
			}
		}
		else if ((*(_2626_result))._method_tup() == nullptr) {
			_case_begin_1a905c05c:;
			{
				return jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>({_2626_result});
			}
		}
		else {
			_case_begin_1a905bad9:;
			{
				return (*((*(_2626_result))._method_tup()))._field_types;
			}
		}
		_match_end_1a905b16b:;
	}
}



inline jule::Bool _1a93c7a48_trait_has_reference_receiver(jule::Ptr<_1de043c01_Trait>& _3934_t) {
	{
		auto &expr = (*(_3934_t))._field_methods;
		auto it = expr.begin();
		_iter_begin_1a905d0a2:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> &_1a93c7a48_f = *it;
			{
				if ((*(_1a93c7a48_f))._field_statically) {
					goto _iter_next_1a905d0a2;
				}
				jule::Ptr<_1dded9702_Param> _4613_p = (*(_1a93c7a48_f))._field_params[0LL];
				if ((*(_4613_p))._method_is_ref() && (*(_4613_p))._method_is_self()) {
					return true;
				}
			}
			_iter_next_1a905d0a2:;
			++it;
			goto _iter_begin_1a905d0a2;
		}
		_iter_end_1a905d0a2:;
	}
	return false;
}



inline jule::Bool _1a93c7a48_float_assignable(jule::Str _5421_kind,jule::Ptr<_1a94c333b_Data>& _5433_d) {
	jule::Str _559_value = _1dd1ec6b3_fmt_float(static_cast<jule::F64>((*((*(_5433_d))._field_constant))._method_as_f64()),'g',-1LL,64LL);
	return _1a6468a10_check_bit_float(_559_value,static_cast<jule::Int>(_1a6468a10_bitsize_of(_5421_kind)));
}



inline jule::Bool _1a93c7a48_sig_assignable(jule::Str _5919_kind,jule::Ptr<_1a94c333b_Data>& _5931_d) {
	jule::F64 _609_min = _1a646eebc_min(_5919_kind);
	jule::F64 _619_max = _1a646eebc_max(_5919_kind);
	{
		
		if ((*((*(_5931_d))._field_constant))._method_is_f64()) {
			_case_begin_1a90626e4:;
			{
				jule::F64 _6513_x = static_cast<jule::F64>((*((*(_5931_d))._field_constant))._method_read_f64());
				jule::F64 _6614_i;
				jule::F64 _6617_frac;
				std::tie(_6614_i,_6617_frac) = _1dd65061b_modf(_6513_x);
				if (_6617_frac != 0LL) {
					return false;
				}
				return (_6614_i >= _609_min) && (_6614_i <= _619_max);
			}
		}
		else if ((*((*(_5931_d))._field_constant))._method_is_u64()) {
			_case_begin_1a906275a:;
			{
				jule::F64 _7313_x = static_cast<jule::F64>((*((*(_5931_d))._field_constant))._method_read_u64());
				if (_7313_x <= _619_max) {
					return true;
				}
			}
		}
		else if ((*((*(_5931_d))._field_constant))._method_is_i64()) {
			_case_begin_1a90627c1:;
			{
				jule::F64 _7913_x = static_cast<jule::F64>((*((*(_5931_d))._field_constant))._method_read_i64());
				return (_609_min <= _7913_x) && (_7913_x <= _619_max);
			}
		}
		_match_end_1a90625a1:;
	}
	return false;
}



inline jule::Bool _1a93c7a48_unsig_assignable(jule::Str _8621_kind,jule::Ptr<_1a94c333b_Data>& _8633_d) {
	jule::F64 _879_max = _1a646eebc_max(_8621_kind);
	if ((*(_8633_d))._field_is_rune && (_8621_kind == jule::Str("u8", 2))) {
		return _1a65aa3c1_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>((*((*(_8633_d))._field_constant))._method_read_i64())));
	}
	{
		
		if ((*((*(_8633_d))._field_constant))._method_is_f64()) {
			_case_begin_1a9068bc3:;
			{
				jule::F64 _9413_x = (*((*(_8633_d))._field_constant))._method_read_f64();
				if (_9413_x < 0LL) {
					return false;
				}
				jule::F64 _9914_i;
				jule::F64 _9917_frac;
				std::tie(_9914_i,_9917_frac) = _1dd65061b_modf(_9413_x);
				if (_9917_frac != 0LL) {
					return false;
				}
				return _9914_i <= _879_max;
			}
		}
		else if ((*((*(_8633_d))._field_constant))._method_is_u64()) {
			_case_begin_1a9068c39:;
			{
				jule::F64 _10613_x = static_cast<jule::F64>((*((*(_8633_d))._field_constant))._method_read_u64());
				if (_10613_x <= _879_max) {
					return true;
				}
			}
		}
		else if ((*((*(_8633_d))._field_constant))._method_is_i64()) {
			_case_begin_1a9068ca0:;
			{
				jule::F64 _11213_x = static_cast<jule::F64>((*((*(_8633_d))._field_constant))._method_read_i64());
				return (0LL <= _11213_x) && (_11213_x <= _879_max);
			}
		}
		_match_end_1a90689a3:;
	}
	return false;
}



inline jule::Bool _1a93c7a48_int_assignable(jule::Str _11919_kind,jule::Ptr<_1a94c333b_Data>& _11931_d) {
	{
		
		if (_1a6539949_is_sig_int(_11919_kind)) {
			_case_begin_1a906e657:;
			{
				return _1a93c7a48_sig_assignable(_11919_kind,_11931_d);
			}
		}
		else if (_1a6539949_is_unsig_int(_11919_kind)) {
			_case_begin_1a906e6bd:;
			{
				return _1a93c7a48_unsig_assignable(_11919_kind,_11931_d);
			}
		}
		else {
			_case_begin_1a906dde8:;
			{
				return false;
			}
		}
		_match_end_1a90697c8:;
	}
}



inline jule::Ptr<_1dd05c765_Directive> _1a94c333b_find_directive(jule::Slice<jule::Ptr<_1dd05c765_Directive>>& _5324_directives,jule::Str _5366_d) {
	{
		auto &expr = _5324_directives;
		auto it = expr.begin();
		_iter_begin_1a906e7cd:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Directive> _1a94c333b_dr = *it;
			{
				if ((*(_1a94c333b_dr))._field_tag._field_kind == _5366_d) {
					return _1a94c333b_dr;
				}
			}
			_iter_next_1a906e7cd:;
			++it;
			goto _iter_begin_1a906e7cd;
		}
		_iter_end_1a906e7cd:;
	}
	return nullptr;
}



inline jule::Any _1a94c333b_find_builtins_import(jule::Str _6225_ident,jule::Ptr<_1c2c4607e_ImportInfo> _6237_imp) {
	return _1a634ca26_find_package_builtin_def((*(_6237_imp))._field_link_path,_6225_ident);
}



inline void _1a94c333b_make_struct_lit_alloc(jule::Ptr<_1a94c333b_Data>& _6631_d,jule::Ptr<_1ddb3c047_StructLitExprModel>& _6646_lit) {
	(*(_6631_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a5e40a26_Sptr>(new( std::nothrow ) _1a5e40a26_Sptr(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),(*(_6646_lit))._field_strct))))));
	(*(_6631_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_AllocStructLitExprModel>(new( std::nothrow ) _1ddb3c047_AllocStructLitExprModel(_6646_lit)));
}



inline jule::Ptr<_1c3c3d174_Var> _1a94c333b_build_error_var(jule::Ptr<_1de0e938e_Scope>& _7725_s,jule::Ptr<_1dd05c765_FnCallExpr>& _7741_fc) {
	return jule::new_struct<_1c3c3d174_Var>(new( std::nothrow ) _1c3c3d174_Var(_7725_s,(*(_7741_fc))._field_token,jule::Str("error", 5),jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),false,jule::Str(),jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("any", 3)))))),jule::new_struct<_1a94c333b_Value>(new( std::nothrow ) _1a94c333b_Value(jule::Ptr<_1dd05c765_Expr>(),jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data()))),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Slice<jule::Ptr<_1dd05c765_Directive>>(),jule::Ptr<_1c3c3d174_IterRelation>(),jule::Slice<jule::Ptr<_1c3c3d174_Var>>()));
}



inline jule::Any _1a94c333b_find_builtins_sema(jule::Str _9623_ident,jule::Ptr<_1c2c46634_Sema> _9639_s) {
	{
		auto &expr = (*((*(_9639_s))._field_file))._field_imports;
		auto it = expr.begin();
		_iter_begin_1a9074bce:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1a94c333b_imp = *it;
			{
				if ((*(_1a94c333b_imp))._field_import_all || (*(_1a94c333b_imp))._method_exist_ident(_9623_ident)) {
					jule::Any _9921_def = _1a94c333b_find_builtins_import(_9623_ident,_1a94c333b_imp);
					if (_9921_def != jule::Any(nullptr)) {
						return _9921_def;
					}
				}
			}
			_iter_next_1a9074bce:;
			++it;
			goto _iter_begin_1a9074bce;
		}
		_iter_end_1a9074bce:;
	}
	jule::Str _10713_ppath = (*((*((*(_9639_s))._field_file))._field_file))._method_dir();
	if (_1db822922_has_prefix(_10713_ppath,_1db841039_PATH_STDLIB)) {
		_10713_ppath=_10713_ppath.slice(_1db841039_PATH_STDLIB.len());
		_10713_ppath=jule::Str("std", 3) + _1db822922_replace(_10713_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
		return _1a634ca26_find_package_builtin_def(_10713_ppath,_9623_ident);
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1a94c333b_is_ok_for_shifting(jule::Ptr<_1a94c333b_Data>& _12128_d) {
	if ((*(_12128_d))._method_is_const()) {
		{
			
			if ((*((*(_12128_d))._field_constant))._method_is_i64()) {
				_case_begin_1a9079310:;
				{
					return (*((*(_12128_d))._field_constant))._method_read_i64() >= 0LL;
				}
			}
			else if ((*((*(_12128_d))._field_constant))._method_is_u64()) {
				_case_begin_1a9079376:;
				{
					return true;
				}
			}
			else if ((*((*(_12128_d))._field_constant))._method_is_f64()) {
				_case_begin_1a9078be4:;
				{
					return (*((*(_12128_d))._field_constant))._method_read_f64() >= 0LL;
				}
			}
			else {
				_case_begin_1a9078a90:;
				{
					return false;
				}
			}
			_match_end_1a90789c4:;
		}
	}
	jule::Ptr<_1a5e40a26_Prim> _1349_prim = (*((*(_12128_d))._field_kind))._method_prim();
	return (_1349_prim != nullptr) && _1a6539949_is_int((*(_1349_prim))._method_to_str());
}



inline jule::Bool _1a94c333b_is_instanced_struct(jule::Ptr<_1dd0be530_StructIns> _13824_s) {
	return (*((*(_13824_s))._field_decl))._field_generics.len() == static_cast<jule::Int>((*(_13824_s))._field_generics.len());
}



inline jule::Bool _1a94c333b_is_ptr_arithmetic_compatible_int(jule::Ptr<_1a94c333b_Data>& _14242_d) {
	if ((*(_14242_d))._method_is_const()) {
		return _1a93c7a48_int_assignable(jule::Str("int", 3),_14242_d);
	}
	_1a93c7a48_TypeCompatibilityChecker _14613_tcc = _1a93c7a48_TypeCompatibilityChecker(jule::Ptr<_1c2c46634_Sema>(),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3)))),(*(_14242_d))._field_kind,_1dd05db0c_Token());
	return _14613_tcc._method_check();
}



inline void _1a94c333b_apply_cast_kind_model(jule::Ptr<_1a94c333b_Data>& _18331_d) {
	(*(_18331_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_CastingExprModel>(new( std::nothrow ) _1ddb3c047_CastingExprModel(_1dd05db0c_Token(),(*(_18331_d))._field_model,(*(_18331_d))._field_cast_kind,(*(_18331_d))._field_kind)));
}



inline void _1a94c333b_apply_cast_kind(jule::Ptr<_1a94c333b_Data>& _19125_d) {
	if ((*(_19125_d))._field_cast_kind == nullptr) {
		return;
	}
	_1a94c333b_apply_cast_kind_model(_19125_d);
	(*(_19125_d))._field_kind=(*(_19125_d))._field_cast_kind;
	(*(_19125_d))._field_cast_kind=nullptr;
}



inline jule::Ptr<_1a94c333b_Data> _1a94c333b_build_void_data(void) {
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("void", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a64669ca_Const>()));
}



inline jule::Str _1a94c333b_check_data_for_integer_indexing(jule::Ptr<_1a94c333b_Data>& _23141_d) {
	jule::Str _23153_err_fmt = jule::Str();
	if (_23141_d == nullptr) {
		_23153_err_fmt = jule::Str();
		return _23153_err_fmt;
	}
	{
		
		if ((*((*(_23141_d))._field_kind))._method_prim() == nullptr) {
			_case_begin_1a908d115:;
			{
				_23153_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _23153_err_fmt;
			}
		}
		else if ((!(_1a6539949_is_int((*((*((*(_23141_d))._field_kind))._method_prim()))._method_to_str())))) {
			_case_begin_1a908d17b:;
			{
				_23153_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _23153_err_fmt;
			}
		}
		else if ((*(_23141_d))._method_is_const()) {
			_case_begin_1a908cdb2:;
			{
				if ((*((*(_23141_d))._field_constant))._method_as_f64() < 0LL) {
					_23153_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _23153_err_fmt;
				}
			}
		}
		else if ((*((*(_23141_d))._field_kind))._method_prim() == nullptr || (*(_23141_d))._method_is_const() || _1a6468a10_real_kind_of((*((*((*(_23141_d))._field_kind))._method_prim()))._method_to_str()) != _1a6468a10_real_kind_of(jule::Str("int", 3))) {
			_case_begin_1a908ce28:;
			{
				(*(_23141_d))._field_cast_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3))));
				_1a94c333b_apply_cast_kind(_23141_d);
			}
		}
		_match_end_1a908a464:;
	}
	_23153_err_fmt = jule::Str();
	return _23153_err_fmt;
}



inline void _1a94c333b_apply_cast_model_by_enum(jule::Ptr<_1a94c333b_Data>& _26034_d,jule::Ptr<_1de0dbeb9_Enum> _26048_e) {
	if (_26048_e == nullptr) {
		return;
	}
	jule::Ptr<_1a5e40a26_Prim> _2649_p = (*((*((*(_26048_e))._field_kind))._field_kind))._method_prim();
	if ((*(_2649_p))._method_is_str()) {
		return;
	}
	(*(_26034_d))._field_cast_kind=(*((*(_26048_e))._field_kind))._field_kind;
	_1a94c333b_apply_cast_kind_model(_26034_d);
	(*(_26034_d))._field_cast_kind=nullptr;
}



inline jule::Bool _1a5e40a26_has_directive(jule::Slice<jule::Ptr<_1dd05c765_Directive>>& _3323_directives,jule::Str _3354_tag) {
	{
		auto &expr = _3323_directives;
		auto it = expr.begin();
		_iter_begin_1a90954c4:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Directive> _1a5e40a26_dr = *it;
			{
				if ((*(_1a5e40a26_dr))._field_tag._field_kind == _3354_tag) {
					return true;
				}
			}
			_iter_next_1a90954c4:;
			++it;
			goto _iter_begin_1a90954c4;
		}
		_iter_end_1a90954c4:;
	}
	return false;
}



inline jule::Bool _1a5e40a26_can_get_ptr(jule::Ptr<_1a94c333b_Data>& _55221_d) {
	if ((!((*(_55221_d))._field_lvalue)) || (*(_55221_d))._method_is_const()) {
		return false;
	}
	{
		
		if (((*((*(_55221_d))._field_kind))._method_fnc() != nullptr) || ((*((*(_55221_d))._field_kind))._method_enm() != nullptr)) {
			_case_begin_1a90973b6:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a9096b68:;
			{
				return true;
			}
		}
		_match_end_1a9096b02:;
	}
}



inline jule::Bool _1a5e40a26_is_valid_for_sptr_type(jule::Ptr<_1a5e40a26_TypeKind>& _56732_t) {
	jule::Ptr<_1dd0be530_StructIns> _56813_s = (*(_56732_t))._method_strct();
	if (((_56813_s != nullptr) && ((*(_56813_s))._field_decl != nullptr)) && (*((*(_56813_s))._field_decl))._field_cpp_linked) {
		return false;
	}
	return true;
}



inline jule::Bool _1a5e40a26_is_valid_for_ref(jule::Ptr<_1a5e40a26_TypeKind>& _57626_t) {
	return (*(_57626_t))._method_fnc() == nullptr;
}



inline jule::Bool _1a5e40a26_is_builtin_str_convertable(jule::Ptr<_1a5e40a26_TypeKind>& _57936_t) {
	return ((!((*(_57936_t))._method_void())) && ((*(_57936_t))._method_fnc() == nullptr)) && ((*(_57936_t))._method_tup() == nullptr);
}



inline jule::Str _1a5e40a26_build_link_path_by_tokens(jule::Slice<_1dd05db0c_Token>& _58331_tokens) {
	jule::Str _58413_s = _58331_tokens[0LL]._field_kind;
	{
		auto expr = _58331_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1a909bb6d:;
		if (it != expr.end()) {
			_1dd05db0c_Token &_1a5e40a26_token = *it;
			{
				_58413_s+=jule::Str("::", 2);
				_58413_s+=_1a5e40a26_token._field_kind;
			}
			_iter_next_1a909bb6d:;
			++it;
			goto _iter_begin_1a909bb6d;
		}
		_iter_end_1a909bb6d:;
	}
	return _58413_s;
}



inline jule::Ptr<_1a5e40a26_Prim> _1a5e40a26_build_prim_type(jule::Str _59220_kind) {
	return jule::new_struct_ptr<_1a5e40a26_Prim>(new( std::nothrow ) _1a5e40a26_Prim(_59220_kind));
}



inline jule::Ptr<_1dd0be530_Struct> _1a5e40a26_get_struct_from_kind(jule::Ptr<_1a5e40a26_TypeKind> _59829_k) {
	{
		
		if (_59829_k == nullptr) {
			_case_begin_1a909d5ed:;
			{
				return nullptr;
			}
		}
		else if ((*(_59829_k))._method_strct() != nullptr) {
			_case_begin_1a909d664:;
			{
				return (*((*(_59829_k))._method_strct()))._field_decl;
			}
		}
		else if ((*(_59829_k))._method_sptr() != nullptr) {
			_case_begin_1a909d367:;
			{
				return _1a5e40a26_get_struct_from_kind((*((*(_59829_k))._method_sptr()))._field_elem);
			}
		}
		else if ((*(_59829_k))._method_slc() != nullptr) {
			_case_begin_1a909d3cd:;
			{
				return _1a5e40a26_get_struct_from_kind((*((*(_59829_k))._method_slc()))._field_elem);
			}
		}
		else if ((*(_59829_k))._method_arr() != nullptr) {
			_case_begin_1a909d444:;
			{
				return _1a5e40a26_get_struct_from_kind((*((*(_59829_k))._method_arr()))._field_elem);
			}
		}
		else if ((*(_59829_k))._method_ptr() != nullptr) {
			_case_begin_1a909d08c:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1a909ce38:;
			{
				return nullptr;
			}
		}
		_match_end_1a909c234:;
	}
}



inline jule::Bool _1a5e40a26_is_prim(jule::Str _62712_kind) {
	return (((((((((((((((_62712_kind == jule::Str("i8", 2)) || (_62712_kind == jule::Str("i16", 3))) || (_62712_kind == jule::Str("i32", 3))) || (_62712_kind == jule::Str("i64", 3))) || (_62712_kind == jule::Str("u8", 2))) || (_62712_kind == jule::Str("u16", 3))) || (_62712_kind == jule::Str("u32", 3))) || (_62712_kind == jule::Str("u64", 3))) || (_62712_kind == jule::Str("f32", 3))) || (_62712_kind == jule::Str("f64", 3))) || (_62712_kind == jule::Str("int", 3))) || (_62712_kind == jule::Str("uint", 4))) || (_62712_kind == jule::Str("uintptr", 7))) || (_62712_kind == jule::Str("bool", 4))) || (_62712_kind == jule::Str("str", 3))) || (_62712_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ptr<_1a943b749_SymbolTable>,jule::Slice<_1db678789_Log>> _1a633736d_build_symbols(jule::Ptr<_1dd05b9c8_Ast>& _1523_ast,jule::Trait<_1c2c4607e_Importer>& _1539_importer,jule::Ptr<_1dded9779_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1dded9779_SymbolBuilder> _1613_sb = jule::new_struct_ptr<_1dded9779_SymbolBuilder>(new( std::nothrow ) _1dded9779_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_1db678789_Log>(),_1523_ast,jule::Ptr<_1a943b749_SymbolTable>()));
	(*(_1613_sb))._method_build();
	if ((*(_1613_sb))._field_errors.len() == 0LL) {
		return std::make_tuple((*(_1613_sb))._field_table,nullptr);
	}
	return std::make_tuple(nullptr,(*(_1613_sb))._field_errors);
}



inline std::tuple<jule::Ptr<_1c2c4607e_Package>,jule::Slice<_1db678789_Log>> _1a633736d___analyze_package(jule::Slice<jule::Ptr<_1dd05b9c8_Ast>>& _2927_files,jule::Trait<_1c2c4607e_Importer>& _2947_importer,jule::Int& _2968_flags) {
	jule::Slice<jule::Ptr<_1a943b749_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>::alloc(0LL,static_cast<jule::Int>(_2927_files.len()));
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1a90a93a6:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05b9c8_Ast> _1a633736d_f = *it;
			{
				jule::Ptr<_1a943b749_SymbolTable> _3318_table;
				jule::Slice<_1db678789_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _1a633736d_build_symbols(_1a633736d_f,_2947_importer,nullptr);
				if (_3329_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_3329_errors);
				}
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);
			}
			_iter_next_1a90a93a6:;
			++it;
			goto _iter_begin_1a90a93a6;
		}
		_iter_end_1a90a93a6:;
	}
	jule::Ptr<_1c2c46634_Sema> _4013_sema = jule::new_struct_ptr<_1c2c46634_Sema>(new( std::nothrow ) _1c2c46634_Sema(jule::Slice<_1db678789_Log>(),jule::Slice<jule::Ptr<_1a943b749_SymbolTable>>(),jule::Ptr<_1a943b749_SymbolTable>(),_2968_flags));
	(*(_4013_sema))._method_check(_3113_tables);
	if ((*(_4013_sema))._field_errors.len() > 0LL) {
		return std::make_tuple(nullptr,(*(_4013_sema))._field_errors);
	}
	jule::Ptr<_1c2c4607e_Package> _4813_pkg = jule::new_struct<_1c2c4607e_Package>(new( std::nothrow ) _1c2c4607e_Package((*(_4013_sema))._field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1c2c4607e_Package>,jule::Slice<_1db678789_Log>> _1a633736d_analyze_package(jule::Slice<jule::Ptr<_1dd05b9c8_Ast>> _7228_files,jule::Trait<_1c2c4607e_Importer> _7247_importer,jule::Int _7267_flags) {
	if (_7228_files.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1c2c4607e_Package> _7714_package;
	jule::Slice<_1db678789_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _1a633736d___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)> _1a634ca26_find_builtin_caller(jule::U8 _5724_c) {
	{
		auto &_match_expr{ _5724_c };
		
		if (_match_expr == 1LLU) {
			_case_begin_1a90b2ab8:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_common);
			}
		}
		else if (_match_expr == 2LLU) {
			_case_begin_1a90b2c50:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_common_mut);
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_1a90b26de:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_common_plain);
			}
		}
		else if (_match_expr == 4LLU) {
			_case_begin_1a90b2755:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_out);
			}
		}
		else if (_match_expr == 5LLU) {
			_case_begin_1a90b27bb:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_outln);
			}
		}
		else if (_match_expr == 6LLU) {
			_case_begin_1a90b2832:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_new);
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_1a90b2898:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_panic);
			}
		}
		else if (_match_expr == 8LLU) {
			_case_begin_1a90b2e92:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_copy);
			}
		}
		else if (_match_expr == 9LLU) {
			_case_begin_1a90b3008:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_make);
			}
		}
		else if (_match_expr == 10LLU) {
			_case_begin_1a90b306e:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_append);
			}
		}
		else if (_match_expr == 11LLU) {
			_case_begin_1a90b30d5:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_clone);
			}
		}
		else if (_match_expr == 12LLU) {
			_case_begin_1a90b314b:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_assert);
			}
		}
		else if (_match_expr == 13LLU) {
			_case_begin_1a90b31b2:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_std_mem_size_of);
			}
		}
		else if (_match_expr == 14LLU) {
			_case_begin_1a90b3228:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_std_mem_align_of);
			}
		}
		else if (_match_expr == 19LLU) {
			_case_begin_1a90b328e:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_std_mem_free);
			}
		}
		else if (_match_expr == 15LLU) {
			_case_begin_1a90b3305:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_std_jule_integrated_to_str);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a90b337c:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_std_jule_integrated_emit);
			}
		}
		else if (_match_expr == 17LLU) {
			_case_begin_1a90b3404:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_std_debug_out);
			}
		}
		else if (_match_expr == 18LLU) {
			_case_begin_1a90b347b:;
			{
				return jule::Fn<jule::Ptr<_1a94c333b_Data>(jule::Ptr<_1a94c333b_Eval>&,jule::Ptr<_1dd05c765_FnCallExpr>&,jule::Ptr<_1a94c333b_Data>&)>(_1a634ca26_builtin_caller_std_debug_outln);
			}
		}
		else {
			_case_begin_1a90b1e08:;
			{
				jule::panic(jule::Str("builtin caller not exist", 24) + jule::Str("\nlocation: std/jule/sema/builtin.jule:117:9"));;
			}
		}
		_match_end_1a90b2469:;
	}
}



inline jule::Ptr<_1dded9702_FnIns> _1a634ca26_find_builtin_fn(jule::Str _12120_ident) {
	{
		auto &_match_expr{ _12120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1a90b7826:;
			{
				return jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),4LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1a90b788c:;
			{
				return jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),5LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1a90b75d4:;
			{
				return jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),6LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1a90b764a:;
			{
				return jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),7LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1a90b76b1:;
			{
				return jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),9LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1a90b712d:;
			{
				return jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),10LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1a90b7194:;
			{
				return jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),8LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1a90b720a:;
			{
				return jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),11LLU,jule::Bool()));
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1a90b7271:;
			{
				return jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),12LLU,jule::Bool()));
			}
		}
		else {
			_case_begin_1a90b3536:;
			{
				return nullptr;
			}
		}
		_match_end_1a90b6924:;
	}
}



inline jule::Ptr<_1a5e40a26_TypeAlias> _1a634ca26_find_builtin_type_alias(jule::Str _13628_ident) {
	{
		auto &_match_expr{ _13628_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1a90bae12:;
			{
				return _1a634ca26_BUILTIN_TYPE_ALIAS_BYTE;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1a90baebc:;
			{
				return _1a634ca26_BUILTIN_TYPE_ALIAS_RUNE;
			}
		}
		else {
			_case_begin_1a90b7947:;
			{
				return nullptr;
			}
		}
		_match_end_1a90bab8c:;
	}
}



inline jule::Ptr<_1de043c01_Trait> _1a634ca26_find_builtin_trait(jule::Str _14423_ident) {
	return nullptr;
}



inline jule::Any _1a634ca26_find_builtin_def(jule::Str _14821_ident) {
	jule::Ptr<_1dded9702_FnIns> _14913_f = _1a634ca26_find_builtin_fn(_14821_ident);
	if (_14913_f != nullptr) {
		return jule::Any(_14913_f);
	}
	jule::Ptr<_1a5e40a26_TypeAlias> _15413_ta = _1a634ca26_find_builtin_type_alias(_14821_ident);
	if (_15413_ta != nullptr) {
		return jule::Any(_15413_ta);
	}
	jule::Ptr<_1de043c01_Trait> _15913_t = _1a634ca26_find_builtin_trait(_14821_ident);
	if (_15913_t != nullptr) {
		return jule::Any(_15913_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _1a634ca26_find_builtin_def_std_debug(jule::Str _16731_ident) {
	{
		auto &_match_expr{ _16731_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1a90be168:;
			{
				return jule::Any(jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),17LLU,jule::Bool())));
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1a90bdec0:;
			{
				return jule::Any(jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),18LLU,jule::Bool())));
			}
		}
		else {
			_case_begin_1a90bd8b5:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1a90bd3cb:;
	}
}



inline jule::Any _1a634ca26_find_builtin_def_std_mem(jule::Str _17529_ident) {
	{
		auto &_match_expr{ _17529_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1a90bedc2:;
			{
				return jule::Any(jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),13LLU,jule::Bool())));
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1a90c0763:;
			{
				return jule::Any(jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),14LLU,jule::Bool())));
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1a90c0488:;
			{
				return jule::Any(jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),19LLU,jule::Bool())));
			}
		}
		else {
			_case_begin_1a90c018b:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1a90bed39:;
	}
}



inline jule::Any _1a634ca26_find_builtin_def_std_jule_integrated(jule::Str _18441_ident) {
	{
		auto &_match_expr{ _18441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1a90c1b1b:;
			{
				return jule::Any(jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),15LLU,jule::Bool())));
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1a90c24ac:;
			{
				return jule::Any(jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>(),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),16LLU,jule::Bool())));
			}
		}
		else {
			_case_begin_1a90c14bc:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1a90c1c09:;
	}
}



inline jule::Any _1a634ca26_find_package_builtin_def(jule::Str _19229_link_path,jule::Str _19245_ident) {
	{
		auto &_match_expr{ _19229_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1a90c3c72:;
			{
				return _1a634ca26_find_builtin_def_std_debug(_19245_ident);
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1a90c3ac9:;
			{
				return _1a634ca26_find_builtin_def_std_mem(_19245_ident);
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1a90c3b40:;
			{
				return _1a634ca26_find_builtin_def_std_jule_integrated(_19245_ident);
			}
		}
		else {
			_case_begin_1a90c2974:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1a90c290d:;
	}
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_common_plain(jule::Ptr<_1a94c333b_Eval>& _20137_e,jule::Ptr<_1dd05c765_FnCallExpr>& _20152_fc,jule::Ptr<_1a94c333b_Data>& _20174_d) {
	jule::Ptr<_1dded9702_FnIns> _20213_f = (*((*(_20174_d))._field_kind))._method_fnc();
	_1a93c7a48_FnCallArgChecker _20413_fcac = _1a93c7a48_FnCallArgChecker(_20137_e,(*(_20152_fc))._field_args,(*(_20152_fc))._field_token,_20213_f,false,jule::Slice<jule::Any>());
	_20413_fcac._method_check();
	jule::Ptr<_1ddb3c047_FnCallExprModel> _21313_model = jule::new_struct<_1ddb3c047_FnCallExprModel>(new( std::nothrow ) _1ddb3c047_FnCallExprModel(_1dd05db0c_Token(),_20213_f,jule::Bool(),(*(_20174_d))._field_model,_20413_fcac._field_arg_models,jule::Ptr<_1de0e938e_Scope>(),jule::Bool()));
	if ((*(_20213_f))._field_result == nullptr) {
		_20174_d=_1a94c333b_build_void_data();
	} else {
		_20174_d=jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data((*(_20213_f))._field_result,jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
	}
	(*(_20174_d))._field_model=jule::Any(_21313_model);
	return _20174_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_common(jule::Ptr<_1a94c333b_Eval>& _23131_e,jule::Ptr<_1dd05c765_FnCallExpr>& _23146_fc,jule::Ptr<_1a94c333b_Data>& _23168_d) {
	if ((*(_23146_fc))._field_generics.len() > 0LL) {
		(*(_23131_e))._method_push_err((*(_23146_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	return _1a634ca26_builtin_caller_common_plain(_23131_e,_23146_fc,_23168_d);
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_common_mut(jule::Ptr<_1a94c333b_Eval>& _23935_e,jule::Ptr<_1dd05c765_FnCallExpr>& _23950_fc,jule::Ptr<_1a94c333b_Data>& _23972_d) {
	if ((!((*(_23972_d))._field_mutable))) {
		(*(_23935_e))._method_push_err((*(_23950_fc))._field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	}
	return _1a634ca26_builtin_caller_common(_23935_e,_23950_fc,_23972_d);
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_error(jule::Ptr<_1a94c333b_Eval>& _24630_e,jule::Ptr<_1dd05c765_FnCallExpr>& _24645_fc) {
	if ((*(_24645_fc))._field_generics.len() > 0LL) {
		(*(_24630_e))._method_push_err((*(_24645_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((*(_24645_fc))._field_args.len() < 1LL) {
		(*(_24630_e))._method_push_err((*(_24645_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	}
	if ((*(_24645_fc))._field_args.len() > 1LL) {
		(*(_24630_e))._method_push_err((*((*(_24645_fc))._field_args[1LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _25713_expr = (*(_24630_e))._method_eval_expr((*(_24645_fc))._field_args[0LL]);
	if (_25713_expr == nullptr) {
		return nullptr;
	}
	if ((*(_25713_expr))._method_is_nil()) {
		(*(_24630_e))._method_push_err((*((*(_24645_fc))._field_args[0LL]))._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _26613_d = _1a94c333b_build_void_data();
	(*(_26613_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_BuiltinErrorCallExprModel>(new( std::nothrow ) _1ddb3c047_BuiltinErrorCallExprModel(jule::Ptr<_1dded9702_FnIns>(),(*(_25713_expr))._field_model)));
	return _26613_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_out(jule::Ptr<_1a94c333b_Eval>& _27428_e,jule::Ptr<_1dd05c765_FnCallExpr>& _27443_fc,jule::Ptr<_1a94c333b_Data>& ) {
	if ((*(_27443_fc))._field_generics.len() > 0LL) {
		(*(_27428_e))._method_push_err((*(_27443_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((*(_27443_fc))._field_args.len() < 1LL) {
		(*(_27428_e))._method_push_err((*(_27443_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	}
	if ((*(_27443_fc))._field_args.len() > 1LL) {
		(*(_27428_e))._method_push_err((*((*(_27443_fc))._field_args[1LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _28613_expr = (*(_27428_e))._method_eval_expr((*(_27443_fc))._field_args[0LL]);
	if (_28613_expr == nullptr) {
		return nullptr;
	}
	if ((!(_1a5e40a26_is_builtin_str_convertable((*(_28613_expr))._field_kind)))) {
		(*(_27428_e))._method_push_err((*((*(_27443_fc))._field_args[0LL]))._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a94c333b_Data> _29613_d = _1a94c333b_build_void_data();
	(*(_29613_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_BuiltinOutCallExprModel>(new( std::nothrow ) _1ddb3c047_BuiltinOutCallExprModel((*(_28613_expr))._field_model,jule::Bool())));
	return _29613_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_outln(jule::Ptr<_1a94c333b_Eval>& _30130_e,jule::Ptr<_1dd05c765_FnCallExpr>& _30145_fc,jule::Ptr<_1a94c333b_Data>& _30167_d) {
	_30167_d=_1a634ca26_builtin_caller_out(_30130_e,_30145_fc,_30167_d);
	if (_30167_d == nullptr) {
		return nullptr;
	}
	(*(_30167_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_BuiltinOutlnCallExprModel>(new( std::nothrow ) _1ddb3c047_BuiltinOutlnCallExprModel((*((*(_30167_d))._field_model.operator jule::Ptr<_1ddb3c047_BuiltinOutCallExprModel>()))._field_expr,jule::Bool())));
	return _30167_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_new(jule::Ptr<_1a94c333b_Eval>& _31328_e,jule::Ptr<_1dd05c765_FnCallExpr>& _31343_fc,jule::Ptr<_1a94c333b_Data>& _31365_d) {
	if ((*(_31343_fc))._field_generics.len() > 0LL) {
		(*(_31328_e))._method_push_err((*(_31343_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((*(_31343_fc))._field_args.len() < 1LL) {
		(*(_31328_e))._method_push_err((*(_31343_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	}
	if ((*(_31343_fc))._field_args.len() > 2LL) {
		(*(_31328_e))._method_push_err((*((*(_31343_fc))._field_args[2LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _32513_t = (*(_31328_e))._method_eval_expr_kind((*((*(_31343_fc))._field_args[0LL]))._field_kind);
	if (_32513_t == nullptr) {
		return nullptr;
	}
	if ((!((*(_32513_t))._field_decl))) {
		(*(_31328_e))._method_push_err((*((*(_31343_fc))._field_args[0LL]))._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_1a5e40a26_is_valid_for_sptr_type((*(_32513_t))._field_kind)))) {
		jule::Ptr<_1dd0be530_StructIns> _33617_s = (*((*(_32513_t))._field_kind))._method_strct();
		if (((_33617_s != nullptr) && ((*(_33617_s))._field_decl != nullptr)) && (*((*(_33617_s))._field_decl))._field_cpp_linked) {
			(*(_31328_e))._method_push_err((*((*(_31343_fc))._field_args[0LL]))._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	(*(_31365_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_1a5e40a26_Sptr>(new( std::nothrow ) _1a5e40a26_Sptr((*(_32513_t))._field_kind))));
	if ((*(_31343_fc))._field_args.len() == 2LL) {
		jule::Ptr<_1a5e40a26_TypeKind> _34617_old = (*(_31328_e))._field_prefix;
		(*(_31328_e))._field_prefix=(*(_32513_t))._field_kind;
		jule::Ptr<_1a94c333b_Data> _34917_init = (*(_31328_e))._method_eval_expr((*(_31343_fc))._field_args[1LL]);
		(*(_31328_e))._field_prefix=_34617_old;
		if (_34917_init != nullptr) {
			_1dd05db0c_Token _35421_token = (*((*(_31343_fc))._field_args[1LL]))._field_token;
			
			(*((*(_31328_e))._field_s))._method_check_validity_for_init_expr((!((*(_31328_e))._field_immutable)),false,(*(_32513_t))._field_kind,_34917_init,_35421_token);
			(*((*(_31328_e))._field_s))._method_check_assign_type(false,(*(_32513_t))._field_kind,_34917_init,_35421_token);
			(*(_31365_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_BuiltinNewCallExprModel>(new( std::nothrow ) _1ddb3c047_BuiltinNewCallExprModel((*(_32513_t))._field_kind,(*(_34917_init))._field_model)));
		}
	} else {
		(*(_31365_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_BuiltinNewCallExprModel>(new( std::nothrow ) _1ddb3c047_BuiltinNewCallExprModel((*(_32513_t))._field_kind,jule::Any())));
	}
	return _31365_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_panic(jule::Ptr<_1a94c333b_Eval>& _37230_e,jule::Ptr<_1dd05c765_FnCallExpr>& _37245_fc,jule::Ptr<_1a94c333b_Data>& ) {
	if ((*(_37245_fc))._field_generics.len() > 0LL) {
		(*(_37230_e))._method_push_err((*(_37245_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((*(_37245_fc))._field_args.len() < 1LL) {
		(*(_37230_e))._method_push_err((*(_37245_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	}
	if ((*(_37245_fc))._field_args.len() > 1LL) {
		(*(_37230_e))._method_push_err((*((*(_37245_fc))._field_args[2LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _38413_expr = (*(_37230_e))._method_eval_expr((*(_37245_fc))._field_args[0LL]);
	if (_38413_expr == nullptr) {
		return nullptr;
	}
	if (((*((*(_38413_expr))._field_kind))._method_prim() == nullptr) || (!((*((*((*(_38413_expr))._field_kind))._method_prim()))._method_is_str()))) {
		(*(_37230_e))._method_push_err((*(_37245_fc))._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _39313_d = _1a94c333b_build_void_data();
	(*(_39313_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_BuiltinPanicCallExprModel>(new( std::nothrow ) _1ddb3c047_BuiltinPanicCallExprModel((*(_37245_fc))._field_token,(*(_38413_expr))._field_model)));
	return _39313_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_make(jule::Ptr<_1a94c333b_Eval>& _40129_e,jule::Ptr<_1dd05c765_FnCallExpr>& _40144_fc,jule::Ptr<_1a94c333b_Data>& _40166_d) {
	if ((*(_40144_fc))._field_generics.len() > 0LL) {
		(*(_40129_e))._method_push_err((*(_40144_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((*(_40144_fc))._field_args.len() < 2LL) {
		if ((*(_40144_fc))._field_args.len() == 1LL) {
			(*(_40129_e))._method_push_err((*(_40144_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		}
		(*(_40129_e))._method_push_err((*(_40144_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	}
	if ((*(_40144_fc))._field_args.len() > 3LL) {
		(*(_40129_e))._method_push_err((*((*(_40144_fc))._field_args[3LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _41713_t = (*(_40129_e))._method_eval_expr_kind((*((*(_40144_fc))._field_args[0LL]))._field_kind);
	if (_41713_t == nullptr) {
		return nullptr;
	}
	if ((!((*(_41713_t))._field_decl)) || ((*((*(_41713_t))._field_kind))._method_slc() == nullptr)) {
		(*(_40129_e))._method_push_err((*((*(_40144_fc))._field_args[0LL]))._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	(*(_40166_d))._field_kind=(*(_41713_t))._field_kind;
	jule::Ptr<_1a94c333b_Data> _42913_len = (*((*((*(_40129_e))._field_s))._method_evalp((*(_40129_e))._field_lookup,(*(_41713_t))._field_kind)))._method_eval_expr((*(_40144_fc))._field_args[1LL]);
	if (_42913_len == nullptr) {
		return _40166_d;
	}
	(*(_40129_e))._method_check_integer_indexing_by_data(_42913_len,(*((*(_40144_fc))._field_args[1LL]))._field_token);
	if ((*(_40144_fc))._field_args.len() == 3LL) {
		jule::Ptr<_1a94c333b_Data> _43717_cap = (*((*((*(_40129_e))._field_s))._method_evalp((*(_40129_e))._field_lookup,(*(_41713_t))._field_kind)))._method_eval_expr((*(_40144_fc))._field_args[2LL]);
		if (_43717_cap == nullptr) {
			return _40166_d;
		}
		(*(_40129_e))._method_check_integer_indexing_by_data(_43717_cap,(*((*(_40144_fc))._field_args[2LL]))._field_token);
		(*(_40166_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_BuiltinMakeCallExprModel>(new( std::nothrow ) _1ddb3c047_BuiltinMakeCallExprModel((*(_41713_t))._field_kind,(*(_42913_len))._field_model,(*(_43717_cap))._field_model)));
	} else {
		(*(_40166_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_BuiltinMakeCallExprModel>(new( std::nothrow ) _1ddb3c047_BuiltinMakeCallExprModel((*(_41713_t))._field_kind,(*(_42913_len))._field_model,jule::Any())));
	}
	return _40166_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_append(jule::Ptr<_1a94c333b_Eval>& _45831_e,jule::Ptr<_1dd05c765_FnCallExpr>& _45846_fc,jule::Ptr<_1a94c333b_Data>& _45868_d) {
	if ((*(_45846_fc))._field_generics.len() > 0LL) {
		(*(_45831_e))._method_push_err((*(_45846_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((*(_45846_fc))._field_args.len() < 2LL) {
		if ((*(_45846_fc))._field_args.len() == 1LL) {
			(*(_45831_e))._method_push_err((*(_45846_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		(*(_45831_e))._method_push_err((*(_45846_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	jule::Ptr<_1a94c333b_Data> _47113_t = (*(_45831_e))._method_eval_expr((*(_45846_fc))._field_args[0LL]);
	if (_47113_t == nullptr) {
		return nullptr;
	}
	if ((*((*(_47113_t))._field_kind))._method_slc() == nullptr) {
		(*(_45831_e))._method_push_err((*((*(_45846_fc))._field_args[0LL]))._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1dded9702_FnIns> _48113_f = jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>({jule::new_struct<_1dded9702_ParamIns>(new( std::nothrow ) _1dded9702_ParamIns(jule::new_struct_ptr<_1dded9702_Param>(new( std::nothrow ) _1dded9702_Param(_1dd05db0c_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_1a5e40a26_TypeSymbol>(),jule::Str())),(*(_47113_t))._field_kind)),jule::new_struct<_1dded9702_ParamIns>(new( std::nothrow ) _1dded9702_ParamIns(jule::new_struct_ptr<_1dded9702_Param>(new( std::nothrow ) _1dded9702_Param(_1dd05db0c_Token(),true,true,jule::Bool(),jule::Ptr<_1a5e40a26_TypeSymbol>(),jule::Str())),(*((*((*(_47113_t))._field_kind))._method_slc()))._field_elem))}),(*(_47113_t))._field_kind,jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),3LLU,jule::Bool()));
	(*(_45868_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_48113_f));
	(*(_45868_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_CommonIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonIdentExprModel(jule::Str("append", 6))));
	_45868_d=_1a634ca26_builtin_caller_common_plain(_45831_e,_45846_fc,_45868_d);
	if (_45868_d != nullptr) {
		jule::Ptr<_1ddb3c047_FnCallExprModel> _50917_model = (*(_45868_d))._field_model.operator jule::Ptr<_1ddb3c047_FnCallExprModel>();
		(*(_45868_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_BuiltinAppendCallExprModel>(new( std::nothrow ) _1ddb3c047_BuiltinAppendCallExprModel((*(_50917_model))._field_args[0LL],(*(_50917_model))._field_args[1LL])));
	}
	return _45868_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_copy(jule::Ptr<_1a94c333b_Eval>& _51829_e,jule::Ptr<_1dd05c765_FnCallExpr>& _51844_fc,jule::Ptr<_1a94c333b_Data>& _51866_d) {
	if ((*(_51844_fc))._field_generics.len() > 0LL) {
		(*(_51829_e))._method_push_err((*(_51844_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((*(_51844_fc))._field_args.len() < 2LL) {
		if ((*(_51844_fc))._field_args.len() == 1LL) {
			(*(_51829_e))._method_push_err((*(_51844_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		(*(_51829_e))._method_push_err((*(_51844_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	if ((*(_51844_fc))._field_args.len() > 2LL) {
		(*(_51829_e))._method_push_err((*((*(_51844_fc))._field_args[2LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _53413_dest = (*(_51829_e))._method_eval_expr((*(_51844_fc))._field_args[0LL]);
	if (_53413_dest == nullptr) {
		return nullptr;
	}
	if ((*((*(_53413_dest))._field_kind))._method_slc() == nullptr) {
		(*(_51829_e))._method_push_err((*((*(_51844_fc))._field_args[0LL]))._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!((*(_53413_dest))._field_mutable))) {
		(*(_51829_e))._method_push_err((*((*(_51844_fc))._field_args[0LL]))._field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1dded9702_Param> _54613_empty_param = jule::new_struct_ptr<_1dded9702_Param>(new( std::nothrow ) _1dded9702_Param());
	jule::Ptr<_1dded9702_FnIns> _54713_f = jule::new_struct_ptr<_1dded9702_FnIns>(new( std::nothrow ) _1dded9702_FnIns(jule::Ptr<_1dd0be530_StructIns>(),jule::Ptr<_1dded9702_Fn>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeKind>>(),jule::Slice<jule::Ptr<_1dded9702_ParamIns>>({jule::new_struct<_1dded9702_ParamIns>(new( std::nothrow ) _1dded9702_ParamIns(_54613_empty_param,(*(_53413_dest))._field_kind)),jule::new_struct<_1dded9702_ParamIns>(new( std::nothrow ) _1dded9702_ParamIns(_54613_empty_param,(*(_53413_dest))._field_kind))}),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_1de0e938e_Scope>(),jule::Ptr<_1dded9779_ReferenceStack>(),jule::Bool(),jule::Ptr<_1dded9779_ReferenceStack>(),3LLU,jule::Bool()));
	(*(_51866_d))._field_kind=jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_54713_f));
	(*(_51866_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_CommonIdentExprModel>(new( std::nothrow ) _1ddb3c047_CommonIdentExprModel(jule::Str("copy", 4))));
	_51866_d=_1a634ca26_builtin_caller_common_plain(_51829_e,_51844_fc,_51866_d);
	if (_51866_d != nullptr) {
		jule::Ptr<_1a94c333b_Data> _56617_src = (*((*(_51866_d))._field_model.operator jule::Ptr<_1ddb3c047_FnCallExprModel>()))._field_args[1LL].operator jule::Ptr<_1a94c333b_Data>();
		jule::Ptr<_1a5e40a26_Slc> _56717_slc = (*((*(_56617_src))._field_kind))._method_slc();
		if ((!((*(_56617_src))._field_mutable)) && (*((*(_56717_slc))._field_elem))._method_mutable()) {
			(*(_51829_e))._method_push_err((*((*(_51844_fc))._field_args[1LL]))._field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
		}
	}
	return _51866_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_clone(jule::Ptr<_1a94c333b_Eval>& _57530_e,jule::Ptr<_1dd05c765_FnCallExpr>& _57545_fc,jule::Ptr<_1a94c333b_Data>& ) {
	if ((*(_57545_fc))._field_generics.len() > 0LL) {
		(*(_57530_e))._method_push_err((*(_57545_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((*(_57545_fc))._field_args.len() < 1LL) {
		(*(_57530_e))._method_push_err((*(_57545_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((*(_57545_fc))._field_args.len() > 1LL) {
		(*(_57530_e))._method_push_err((*((*(_57545_fc))._field_args[1LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _58813_d = (*(_57530_e))._method_eval_expr_kind((*((*(_57545_fc))._field_args[0LL]))._field_kind);
	if (_58813_d == nullptr) {
		return nullptr;
	}
	jule::Fn<void(jule::Ptr<_1a5e40a26_TypeKind>)> _5939_check_kind = jule::Fn<void(jule::Ptr<_1a5e40a26_TypeKind>)>([=](jule::Ptr<_1a5e40a26_TypeKind> _59329_k) mutable -> void {
		{
			
			if ((*(_59329_k))._method_slc() != nullptr) {
				_case_begin_1a9135157:;
				{
					if ((!((*((*((*(_59329_k))._method_slc()))._field_elem))._method_supports_cloning()))) {
						{
							(*(_57530_e))._method_push_err((*((*(_57545_fc))._field_args[0LL]))._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any((*(_59329_k))._method_to_str())}));
						}
					}
				}
			}
			else if ((*(_59329_k))._method_map() != nullptr) {
				_case_begin_1a91351bd:;
				{
					jule::Ptr<_1a5e40a26_Map> _60417_m = (*(_59329_k))._method_map();
					if ((!((*((*(_60417_m))._field_key))._method_supports_cloning())) || (!((*((*(_60417_m))._field_val))._method_supports_cloning()))) {
						{
							(*(_57530_e))._method_push_err((*((*(_57545_fc))._field_args[0LL]))._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any((*(_59329_k))._method_to_str())}));
						}
					}
				}
			}
			else if ((*(_59329_k))._method_arr() != nullptr) {
				_case_begin_1a9135234:;
				{
					if ((!((*((*((*(_59329_k))._method_arr()))._field_elem))._method_supports_cloning()))) {
						{
							(*(_57530_e))._method_push_err((*((*(_57545_fc))._field_args[0LL]))._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any((*(_59329_k))._method_to_str())}));
						}
					}
				}
			}
			else if ((*(_59329_k))._method_sptr() != nullptr) {
				_case_begin_1a913529a:;
				{
					if ((!((*((*((*(_59329_k))._method_sptr()))._field_elem))._method_supports_cloning()))) {
						{
							(*(_57530_e))._method_push_err((*((*(_57545_fc))._field_args[0LL]))._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any((*(_59329_k))._method_to_str())}));
						}
					}
				}
			}
			else if ((*(_59329_k))._method_strct() != nullptr) {
				_case_begin_1a9135388:;
				{
					jule::Ptr<_1dd0be530_StructIns> _62917_s = (*((*(_58813_d))._field_kind))._method_strct();
					if ((!((*(_62917_s))._field_mutable))) {
						{
							(*(_57530_e))._method_push_err((*((*(_57545_fc))._field_args[0LL]))._field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any((*((*(_58813_d))._field_kind))._method_to_str())}));
						}
					}
					if ((((*(_62917_s))._field_decl == nullptr) || (*((*(_62917_s))._field_decl))._field_cpp_linked) || (!((*((*(_62917_s))._field_decl))._method_is_derives(jule::Str("Clone", 5))))) {
						{
							(*(_57530_e))._method_push_err((*((*(_57545_fc))._field_args[0LL]))._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>({jule::Any((*((*(_58813_d))._field_kind))._method_to_str()),jule::Any(jule::Str("Clone", 5))}));
						}
					}
				}
			}
			else {
				_case_begin_1a9135003:;
				{
					{
						(*(_57530_e))._method_push_err((*((*(_57545_fc))._field_args[0LL]))._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>({jule::Any((*((*(_58813_d))._field_kind))._method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			_match_end_1a9134e37:;
		}
	});
	if ((!((*(_58813_d))._field_lvalue))) {
		(*(_57530_e))._method_push_err((*((*(_57545_fc))._field_args[0LL]))._field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>());
	}
	if ((*((*(_58813_d))._field_kind))._method_strct() != nullptr) {
		jule::Ptr<_1dd0be530_StructIns> _65817_s = (*((*(_58813_d))._field_kind))._method_strct();
		if (((*(_65817_s))._field_decl != nullptr) && (!((*((*(_65817_s))._field_decl))._method_is_derives(jule::Str("Clone", 5))))) {
			(*(_57530_e))._method_push_err((*((*(_57545_fc))._field_args[0LL]))._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>({jule::Any((*((*(_58813_d))._field_kind))._method_to_str()),jule::Any(jule::Str("Clone", 5))}));
		}
	}
	if ((!((*((*(_58813_d))._field_kind))._method_supports_cloning()))) {
		_5939_check_kind((*(_58813_d))._field_kind);
	}
	(*(_58813_d))._field_mutable=true;
	(*(_58813_d))._field_model=jule::Any(jule::new_struct<_1ddb3c047_BuiltinCloneCallExprModel>(new( std::nothrow ) _1ddb3c047_BuiltinCloneCallExprModel((*(_58813_d))._field_model)));
	return _58813_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_assert(jule::Ptr<_1a94c333b_Eval>& _67331_e,jule::Ptr<_1dd05c765_FnCallExpr>& _67346_fc,jule::Ptr<_1a94c333b_Data>& ) {
	if ((*(_67346_fc))._field_generics.len() > 0LL) {
		(*(_67331_e))._method_push_err((*(_67346_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((*(_67346_fc))._field_args.len() < 1LL) {
		(*(_67331_e))._method_push_err((*(_67346_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((*(_67346_fc))._field_args.len() > 2LL) {
		(*(_67331_e))._method_push_err((*((*(_67346_fc))._field_args[2LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _68513_expr = (*(_67331_e))._method_eval_expr((*(_67346_fc))._field_args[0LL]);
	if (_68513_expr == nullptr) {
		return nullptr;
	}
	if (((*((*(_68513_expr))._field_kind))._method_prim() == nullptr) || (!((*((*((*(_68513_expr))._field_kind))._method_prim()))._method_is_bool()))) {
		(*(_67331_e))._method_push_err((*(_67346_fc))._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ddb3c047_BuiltinAssertCallExprModel> _69413_model = jule::new_struct<_1ddb3c047_BuiltinAssertCallExprModel>(new( std::nothrow ) _1ddb3c047_BuiltinAssertCallExprModel((*(_67346_fc))._field_token,(*(_68513_expr))._field_model,jule::Str("assertion failed", 16)));
	if ((*(_67346_fc))._field_args.len() == 2LL) {
		jule::Ptr<_1a94c333b_Data> _70217_log = (*(_67331_e))._method_eval_expr((*(_67346_fc))._field_args[1LL]);
		if (_70217_log == nullptr) {
			return nullptr;
		}
		if (((!((*(_70217_log))._method_is_const())) || ((*((*(_70217_log))._field_kind))._method_prim() == nullptr)) || (!((*((*((*(_70217_log))._field_kind))._method_prim()))._method_is_str()))) {
			(*(_67331_e))._method_push_err((*((*(_67346_fc))._field_args[1LL]))._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("const str", 9)),jule::Any((*((*(_70217_log))._field_kind))._method_to_str())}));
			return nullptr;
		}
		(*(_69413_model))._field_log=(*((*(_70217_log))._field_constant))._method_read_str();
	}
	jule::Ptr<_1a94c333b_Data> _71513_d = _1a94c333b_build_void_data();
	(*(_71513_d))._field_model=jule::Any(_69413_model);
	return _71513_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_mem_size_of(jule::Ptr<_1a94c333b_Eval>& _72040_e,jule::Ptr<_1dd05c765_FnCallExpr>& _72055_fc,jule::Ptr<_1a94c333b_Data>& ) {
	if ((*(_72055_fc))._field_generics.len() > 0LL) {
		(*(_72040_e))._method_push_err((*(_72055_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _72413_result = jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
	if ((*(_72055_fc))._field_args.len() < 1LL) {
		(*(_72040_e))._method_push_err((*(_72055_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _72413_result;
	}
	if ((*(_72055_fc))._field_args.len() > 1LL) {
		(*(_72040_e))._method_push_err((*((*(_72055_fc))._field_args[1LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _73613_d = (*(_72040_e))._method_eval_expr_kind((*((*(_72055_fc))._field_args[0LL]))._field_kind);
	if (_73613_d == nullptr) {
		return _72413_result;
	}
	(*(_72413_result))._field_model=jule::Any(jule::new_struct<_1ddb3c047_SizeofExprModel>(new( std::nothrow ) _1ddb3c047_SizeofExprModel((*(_73613_d))._field_model)));
	return _72413_result;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_mem_align_of(jule::Ptr<_1a94c333b_Eval>& _74541_e,jule::Ptr<_1dd05c765_FnCallExpr>& _74556_fc,jule::Ptr<_1a94c333b_Data>& ) {
	if ((*(_74556_fc))._field_generics.len() > 0LL) {
		(*(_74541_e))._method_push_err((*(_74556_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _74913_result = jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
	if ((*(_74556_fc))._field_args.len() < 1LL) {
		(*(_74541_e))._method_push_err((*(_74556_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _74913_result;
	}
	if ((*(_74556_fc))._field_args.len() > 1LL) {
		(*(_74541_e))._method_push_err((*((*(_74556_fc))._field_args[1LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _76113_d = (*(_74541_e))._method_eval_expr_kind((*((*(_74556_fc))._field_args[0LL]))._field_kind);
	if (_76113_d == nullptr) {
		return _74913_result;
	}
	(*(_74913_result))._field_model=jule::Any(jule::new_struct<_1ddb3c047_AlignofExprModel>(new( std::nothrow ) _1ddb3c047_AlignofExprModel((*(_76113_d))._field_model)));
	return _74913_result;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_mem_free(jule::Ptr<_1a94c333b_Eval>& _77037_e,jule::Ptr<_1dd05c765_FnCallExpr>& _77052_fc,jule::Ptr<_1a94c333b_Data>& ) {
	if ((*(_77052_fc))._field_generics.len() > 0LL) {
		(*(_77037_e))._method_push_err((*(_77052_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((*(_77052_fc))._field_args.len() < 1LL) {
		(*(_77037_e))._method_push_err((*(_77052_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	}
	if ((*(_77052_fc))._field_args.len() > 1LL) {
		(*(_77037_e))._method_push_err((*((*(_77052_fc))._field_args[1LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _78313_d = (*(_77037_e))._method_eval_expr_kind((*((*(_77052_fc))._field_args[0LL]))._field_kind);
	if (_78313_d == nullptr) {
		return nullptr;
	}
	if ((!((*((*(_78313_d))._field_kind))._method_performs_rc()))) {
		(*(_77037_e))._method_push_err((*((*(_77052_fc))._field_args[0LL]))._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _79213_result = _1a94c333b_build_void_data();
	(*(_79213_result))._field_model=jule::Any(jule::new_struct<_1ddb3c047_FreeExprModel>(new( std::nothrow ) _1ddb3c047_FreeExprModel((*(_78313_d))._field_model)));
	return _79213_result;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1a94c333b_Eval>& _79751_e,jule::Ptr<_1dd05c765_FnCallExpr>& _79766_fc,jule::Ptr<_1a94c333b_Data>& ) {
	if ((*(_79766_fc))._field_generics.len() > 0LL) {
		(*(_79751_e))._method_push_err((*(_79766_fc))._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((*(_79766_fc))._field_args.len() < 1LL) {
		(*(_79751_e))._method_push_err((*(_79766_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((*(_79766_fc))._field_args.len() > 1LL) {
		(*(_79751_e))._method_push_err((*((*(_79766_fc))._field_args[1LL]))._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a94c333b_Data> _81013_d = (*(_79751_e))._method_eval_expr_kind((*((*(_79766_fc))._field_args[0LL]))._field_kind);
	if (_81013_d == nullptr) {
		return nullptr;
	}
	if ((!(_1a5e40a26_is_builtin_str_convertable((*(_81013_d))._field_kind)))) {
		(*(_79751_e))._method_push_err((*((*(_79766_fc))._field_args[0LL]))._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_1a94c333b_Data>(new( std::nothrow ) _1a94c333b_Data(jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("str", 3)))),jule::Ptr<_1a5e40a26_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ddb3c047_IntegratedToStrExprModel>(new( std::nothrow ) _1ddb3c047_IntegratedToStrExprModel((*(_81013_d))._field_model))),jule::Bool(),jule::Ptr<_1a64669ca_Const>()));
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1a94c333b_Eval>& _82849_e,jule::Ptr<_1dd05c765_FnCallExpr>& _82864_fc,jule::Ptr<_1a94c333b_Data>& ) {
	if ((!((*(_82849_e))._method_is_unsafe()))) {
		(*(_82849_e))._method_push_err((*(_82864_fc))._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	if ((*(_82864_fc))._field_args.len() < 1LL) {
		(*(_82849_e))._method_push_err((*(_82864_fc))._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	}
	jule::Ptr<_1a94c333b_Data> _83813_d = (*(_82849_e))._method_eval_expr((*(_82864_fc))._field_args[0LL]);
	if (_83813_d == nullptr) {
		return nullptr;
	}
	if (((*((*(_83813_d))._field_kind))._method_prim() == nullptr) || (!((*((*((*(_83813_d))._field_kind))._method_prim()))._method_is_str()))) {
		(*(_82849_e))._method_push_err((*((*(_82864_fc))._field_args[0LL]))._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any((*((*(_83813_d))._field_kind))._method_to_str())}));
		return nullptr;
	}
	if ((!((*(_83813_d))._method_is_const())) || (!((*((*(_83813_d))._field_constant))._method_is_str()))) {
		(*(_82849_e))._method_push_err((*((*(_82864_fc))._field_args[0LL]))._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a94c333b_Data> _85313_r = _1a94c333b_build_void_data();
	if ((*(_82864_fc))._field_generics.len() != 0LL) {
		if ((!((*((*(_82849_e))._field_s))._method_check_generic_quantity(1LL,static_cast<jule::Int>((*(_82864_fc))._field_generics.len()),(*(_82864_fc))._field_token)))) {
			return nullptr;
		}
		jule::Ptr<_1a5e40a26_TypeSymbol> _85917_k = _1dded9779_build_type((*(_82864_fc))._field_generics[0LL]);
		if ((!((*((*(_82849_e))._field_s))._method_check_type(_85917_k,(*(_82849_e))._field_lookup)))) {
			return nullptr;
		}
		(*(_85313_r))._field_kind=(*(_85917_k))._field_kind;
	}
	jule::Ptr<_1ddb3c047_BackendEmitExprModel> _86613_model = jule::new_struct<_1ddb3c047_BackendEmitExprModel>(new( std::nothrow ) _1ddb3c047_BackendEmitExprModel((*((*(_83813_d))._field_constant))._method_read_str(),jule::Slice<jule::Any>()));
	if ((*(_82864_fc))._field_args.len() > 1LL) {
		(*(_86613_model))._field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>((*(_82864_fc))._field_args.len() - 1LL));
		{
			auto expr = (*(_82864_fc))._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1a917c5cd:;
			if (it != expr.end()) {
				jule::Ptr<_1dd05c765_Expr> _1a634ca26_arg = *it;
				{
					jule::Ptr<_1a94c333b_Data> _87321_argd = (*(_82849_e))._method_eval_expr_kind((*(_1a634ca26_arg))._field_kind);
					if (_87321_argd == nullptr) {
						return nullptr;
					}
					(*(_86613_model))._field_exprs = jule::alloc_for_append((*(_86613_model))._field_exprs,1);(*(_86613_model))._field_exprs.__push((*(_87321_argd))._field_model);
				}
				_iter_next_1a917c5cd:;
				++it;
				goto _iter_begin_1a917c5cd;
			}
			_iter_end_1a917c5cd:;
		}
	}
	(*(_85313_r))._field_model=jule::Any(_86613_model);
	return _85313_r;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_debug_out(jule::Ptr<_1a94c333b_Eval>& _88538_e,jule::Ptr<_1dd05c765_FnCallExpr>& _88553_fc,jule::Ptr<_1a94c333b_Data>& _88575_d) {
	_88575_d=_1a634ca26_builtin_caller_out(_88538_e,_88553_fc,_88575_d);
	if (_88575_d == nullptr) {
		return nullptr;
	}
	(*((*(_88575_d))._field_model.operator jule::Ptr<_1ddb3c047_BuiltinOutCallExprModel>()))._field_debug=true;
	return _88575_d;
}



inline jule::Ptr<_1a94c333b_Data> _1a634ca26_builtin_caller_std_debug_outln(jule::Ptr<_1a94c333b_Eval>& _89540_e,jule::Ptr<_1dd05c765_FnCallExpr>& _89555_fc,jule::Ptr<_1a94c333b_Data>& _89577_d) {
	_89577_d=_1a634ca26_builtin_caller_outln(_89540_e,_89555_fc,_89577_d);
	if (_89577_d == nullptr) {
		return nullptr;
	}
	(*((*(_89577_d))._field_model.operator jule::Ptr<_1ddb3c047_BuiltinOutlnCallExprModel>()))._field_debug=true;
	return _89577_d;
}



inline std::tuple<jule::Bool,jule::Bool> _1dcee292b_check_os(jule::Str _1113_arg) {
	jule::Bool _1125_ok = jule::Bool();
	jule::Bool _1135_exist = jule::Bool();
	_1125_ok=false;
	_1135_exist=true;
	{
		auto &_match_expr{ _1113_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1a91b6c88:;
			{
				_1125_ok=_1db6462e5_is_windows(_1db5be6be_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1a91b6cee:;
			{
				_1125_ok=_1db6462e5_is_darwin(_1db5be6be_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1a91b6d65:;
			{
				_1125_ok=_1db6462e5_is_linux(_1db5be6be_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1a91b6dcb:;
			{
				_1125_ok=_1db6462e5_is_unix(_1db5be6be_OS);
			}
		}
		else {
			_case_begin_1a91b6ace:;
			{
				_1125_ok=true;
				_1135_exist=false;
			}
		}
		_match_end_1a91b679e:;
	}
	return std::make_tuple(_1125_ok,_1135_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1dcee292b_check_arch(jule::Str _2815_arg) {
	jule::Bool _2827_ok = jule::Bool();
	jule::Bool _2837_exist = jule::Bool();
	_2827_ok=false;
	_2837_exist=true;
	{
		auto &_match_expr{ _2815_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1a91b9a49:;
			{
				_2827_ok=_1db6462e5_is_i386(_1db5be6be_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1a91b9ab0:;
			{
				_2827_ok=_1db6462e5_is_amd64(_1db5be6be_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1a91b9b26:;
			{
				_2827_ok=_1db6462e5_is_arm64(_1db5be6be_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1a91b9b8c:;
			{
				_2827_ok=_1db6462e5_is_64bit(_1db5be6be_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1a91ba297:;
			{
				_2827_ok=_1db6462e5_is_32bit(_1db5be6be_ARCH);
			}
		}
		else {
			_case_begin_1a91b9829:;
			{
				_2827_ok=true;
				_2837_exist=false;
			}
		}
		_match_end_1a91b94e9:;
	}
	return std::make_tuple(_2827_ok,_2837_exist);
}



inline jule::Bool _1dcee292b_is_pass_file_annotation(jule::Str _4732_p) {
	_4732_p=_1db7b8830_base(_4732_p);
	jule::Int _499_n = _4732_p.len();
	_4732_p=_4732_p.slice(0LL,_499_n - static_cast<jule::Int>(_1db7b8830_ext(_4732_p).len()));
	jule::Str _5513_a1 = jule::Str();
	jule::Str _5813_a2 = jule::Str();
	jule::Int _6113_i = _1db822922_find_last_byte(_4732_p,'_');
	if (_6113_i == -1LL) {
		jule::Bool _6418_ok;
		jule::Bool _6426_exist;
		std::tie(_6418_ok,_6426_exist) = _1dcee292b_check_os(_4732_p);
		if (_6426_exist) {
			return _6418_ok;
		}
		std::tie(_6418_ok,_6426_exist) = _1dcee292b_check_arch(_4732_p);
		return (!(_6426_exist)) || _6418_ok;
	}
	if ((_6113_i + 1LL) >= _499_n) {
		return true;
	}
	_5513_a1=_4732_p.slice(_6113_i + 1LL);
	_4732_p=_4732_p.slice(0LL,_6113_i);
	_6113_i=static_cast<jule::Int>(_1db822922_find_last_byte(_4732_p,'_'));
	if (_6113_i != -1LL) {
		_5813_a2=_4732_p.slice(_6113_i + 1LL);
	}
	if (_5813_a2 == jule::Str()) {
		jule::Bool _8518_ok;
		jule::Bool _8526_exist;
		std::tie(_8518_ok,_8526_exist) = _1dcee292b_check_os(_5513_a1);
		if (_8526_exist) {
			return _8518_ok;
		}
		std::tie(_8518_ok,_8526_exist) = _1dcee292b_check_arch(_5513_a1);
		return (!(_8526_exist)) || _8518_ok;
	}
	jule::Bool _9314_ok;
	jule::Bool _9322_exist;
	std::tie(_9314_ok,_9322_exist) = _1dcee292b_check_arch(_5513_a1);
	if (_9322_exist) {
		if ((!(_9314_ok))) {
			return false;
		}
		jule::Bool _9814_ok;
		jule::Bool _9818_exist;
		std::tie(_9814_ok,_9818_exist) = _1dcee292b_check_os(_5813_a2);
		return (!(_9818_exist)) || _9814_ok;
	}
	std::tie(_9314_ok,_9322_exist) = _1dcee292b_check_os(_5513_a1);
	return (!(_9322_exist)) || _9314_ok;
}



inline void _1dd014068_set_os_vars(void) {
	{
		auto &_match_expr{ _1db5be6be_OS };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1a91c39a9:;
			{
				_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("windows", 7));
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1a91c3a20:;
			{
				_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("linux", 5));
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1a91c53e5:;
			{
				_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("darwin", 6));
			}
		}
		_match_end_1a91c52e6:;
	}
	if (_1db6462e5_is_unix(_1db5be6be_OS)) {
		_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("unix", 4));
	}
}



inline void _1dd014068_set_arch_vars(void) {
	{
		auto &_match_expr{ _1db5be6be_ARCH };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1a91c5615:;
			{
				_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("i386", 4));
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1a91c567b:;
			{
				_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("amd64", 5));
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1a91c56e2:;
			{
				_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("arm64", 5));
			}
		}
		_match_end_1a91c7260:;
	}
	if (_1db6462e5_is_64bit(_1db5be6be_ARCH)) {
		_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("x64", 3));
	}
	if (_1db6462e5_is_32bit(_1db5be6be_ARCH)) {
		_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("x32", 3));
	}
}



inline void _1dd014068_init_vars(void) {
	_1dd014068_set_os_vars();
	_1dd014068_set_arch_vars();
	if (_1db6263a2_PRODUCTION) {
		_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("production", 10));
	}
	if (_1db634b1e_TEST) {
		_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("test", 4));
	}
	{
		auto &_match_expr{ _1db634b1e_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a91c8e54:;
			{
				_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("clang", 5));
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a91c9790:;
			{
				_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("gcc", 3));
			}
		}
		_match_end_1a91c8dee:;
	}
	{
		auto &_match_expr{ _1db634b1e_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a91c954d:;
			{
				_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("cpp14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a91c99d2:;
			{
				_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("cpp17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a91c9a48:;
			{
				_1dd014068_VARS = jule::alloc_for_append(_1dd014068_VARS,1);_1dd014068_VARS.__push(jule::Str("cpp20", 5));
			}
		}
		_match_end_1a91c94e8:;
	}
}



inline jule::Slice<jule::U8> _1dd023275_read_buff(jule::Str _2714_path) {
	return ({
		auto except = _1db6a29e4_File::_static_method_read(_2714_path);
		(except.ok()) ? (except.result) : ({{
			_1dd0a6eda_throw(jule::Str("error: file cannot read", 23));
			return nullptr;
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1db678789_Log _1dd023275_flat_compiler_err(jule::Str _3622_text) {
	return _1db678789_Log(static_cast<jule::Int>(1LL),jule::Int(),jule::Int(),jule::Str(),_3622_text,jule::Str(),jule::Str());
}



inline std::tuple<jule::Bool,jule::Slice<_1db678789_Log>> _1dd023275_is_pass_build_directives(jule::Ptr<_1dd05b9c8_Ast>& _4434_file) {
	{
		auto &expr = (*(_4434_file))._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1a91cd80a:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Directive> _1dd023275_td = *it;
			{
				if ((*(_1dd023275_td))._field_tag._field_kind != jule::Str("build", 5)) {
					goto _iter_next_1a91cd80a;
				}
				_1dceea978_DirectiveEval _5017_de = _1dceea978_DirectiveEval(jule::Slice<_1db678789_Log>(),_1dd023275_td);
				jule::Bool _5313_result = _5017_de._method_eval();
				if (_5017_de._field_logs.len() > 0LL) {
					return std::make_tuple(false,_5017_de._field_logs);
				}
				if ((!(_5313_result))) {
					return std::make_tuple(false,nullptr);
				}
			}
			_iter_next_1a91cd80a:;
			++it;
			goto _iter_begin_1a91cd80a;
		}
		_iter_end_1a91cd80a:;
	}
	return std::make_tuple(true,nullptr);
}



inline void _1dcecd043_push_passes(jule::Ptr<_1c2c4607e_Package>& _9021_p,jule::Slice<jule::Str>& _9045_passes) {
	{
		auto &expr = (*(_9021_p))._field_files;
		auto it = expr.begin();
		_iter_begin_1a91e5448:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1dcecd043_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = (*(_1dcecd043_f))._field_passes;
					auto it = expr.begin();
					_iter_begin_1a91eb905:;
					if (it != expr.end()) {
						_1dded9779_Pass _1dcecd043_pass = *it;
						{
							if (_1dcecd043_pass._field_text == jule::Str()) {
								goto _iter_next_1a91eb905;
							}
							{
								auto &expr = _9045_passes;
								auto it = expr.begin();
								_iter_begin_1a91ec65e:;
								if (it != expr.end()) {
									jule::Str _1dcecd043_cpass = *it;
									{
										if (_1dcecd043_cpass == _1dcecd043_pass._field_text) {
											goto _iter_next_1a91eb905;
										}
									}
									_iter_next_1a91ec65e:;
									++it;
									goto _iter_begin_1a91ec65e;
								}
								_iter_end_1a91ec65e:;
							}
							_9045_passes = jule::alloc_for_append(_9045_passes,1);_9045_passes.__push(_1dcecd043_pass._field_text);
						}
						_iter_next_1a91eb905:;
						++it;
						goto _iter_begin_1a91eb905;
					}
					_iter_end_1a91eb905:;
				}
			}
			_iter_next_1a91e5448:;
			++it;
			goto _iter_begin_1a91e5448;
		}
		_iter_end_1a91e5448:;
	}
}



inline jule::Slice<jule::Str> _1dcecd043_get_all_unique_passes(jule::Ptr<_1c2c4607e_Package>& _10731_pkg,jule::Slice<jule::Ptr<_1c2c4607e_ImportInfo>> _10756_uses) {
	jule::Slice<jule::Str> _10813_passes = nullptr;
	_1dcecd043_push_passes(_10731_pkg,_10813_passes);
	{
		auto &expr = _10756_uses;
		auto it = expr.begin();
		_iter_begin_1a91edaa0:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> _1dcecd043_u = *it;
			{
				if ((!((*(_1dcecd043_u))._field_cpp_linked))) {
					_1dcecd043_push_passes((*(_1dcecd043_u))._field_package,_10813_passes);
				}
			}
			_iter_next_1a91edaa0:;
			++it;
			goto _iter_begin_1a91edaa0;
		}
		_iter_end_1a91edaa0:;
	}
	return _10813_passes;
}



inline jule::Ptr<_1dd05c765_Directive> _1db67d74a_find_directive(jule::Slice<jule::Ptr<_1dd05c765_Directive>>& _3324_directives,jule::Str _3355_tag) {
	{
		auto &expr = _3324_directives;
		auto it = expr.begin();
		_iter_begin_1a9216667:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Directive> _1db67d74a_dr = *it;
			{
				if ((*(_1db67d74a_dr))._field_tag._field_kind == _3355_tag) {
					return _1db67d74a_dr;
				}
			}
			_iter_next_1a9216667:;
			++it;
			goto _iter_begin_1a9216667;
		}
		_iter_end_1a9216667:;
	}
	return nullptr;
}



inline jule::Bool _1db67d74a_has_directive(jule::Slice<jule::Ptr<_1dd05c765_Directive>>& _4319_directives,jule::Str _4350_tag) {
	return _1db67d74a_find_directive(_4319_directives,_4350_tag) != nullptr;
}



inline jule::Bool _1db67d74a_is_exist(jule::Slice<jule::Any> _4813_arr,jule::Any _4825_t) {
	{
		auto &expr = _4813_arr;
		auto it = expr.begin();
		_iter_begin_1a9218009:;
		if (it != expr.end()) {
			jule::Any &_1db67d74a_ref = *it;
			{
				if (_4825_t == _1db67d74a_ref) {
					return true;
				}
			}
			_iter_next_1a9218009:;
			++it;
			goto _iter_begin_1a9218009;
		}
		_iter_end_1a9218009:;
	}
	return false;
}



inline jule::Bool _1db67d74a_is_dead(jule::Any _5816_ref) {
	jule::Bool _5828_dead = jule::Bool();
	if (_1db67d74a_is_exist(_1db67d74a_deads,_5816_ref)) {
		_5828_dead = true;
		return _5828_dead;
	}
	{
		auto &_match_expr{ _5816_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1dded9702_FnIns>>()) {
			_case_begin_1a921aa45:;
			{
				if ((*((*(_5816_ref.operator jule::Ptr<_1dded9702_FnIns>()))._field_decl))._method_is_init()) {
					goto _match_end_1a92197d0;
				}
				goto _case_begin_1a9219604;
			}
		}
		else {
			_case_begin_1a9219604:;
			{
				if ((_1db67d74a_current == _5816_ref) || (_1db67d74a_main_current == _5816_ref)) {
					_5828_dead = true;
					return _5828_dead;
				}
				if (_1db67d74a_is_exist(_1db67d74a_checking,_5816_ref)) {
					_5828_dead = true;
					return _5828_dead;
				}
			}
		}
		_match_end_1a92197d0:;
	}
	jule::Any _7913_old = _1db67d74a_current;
	_1db67d74a_current=_5816_ref;
	jule::Int _819_len = _1db67d74a_checking.len();
	_1db67d74a_checking = jule::alloc_for_append(_1db67d74a_checking,1);_1db67d74a_checking.__push(_5816_ref);
	__JULE_DEFER({
		_1db67d74a_current=_7913_old;
		_1db67d74a_drop_ref(_1db67d74a_checking,_819_len);
	});
	{
		auto &_match_expr{ _5816_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1dded9702_FnIns>>()) {
			_case_begin_1a921cccd:;
			{
				_5828_dead = _1db67d74a_is_fn_dead(_5816_ref.operator jule::Ptr<_1dded9702_FnIns>());
				return _5828_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1c3c3d174_Var>>()) {
			_case_begin_1a921cd44:;
			{
				_5828_dead = _1db67d74a_is_var_dead(_5816_ref.operator jule::Ptr<_1c3c3d174_Var>());
				return _5828_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd0be530_StructIns>>()) {
			_case_begin_1a921cdee:;
			{
				_5828_dead = _1db67d74a_is_struct_dead(_5816_ref.operator jule::Ptr<_1dd0be530_StructIns>());
				return _5828_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1de043c01_Trait>>()) {
			_case_begin_1a921ce65:;
			{
				_5828_dead = _1db67d74a_is_trait_dead(_5816_ref.operator jule::Ptr<_1de043c01_Trait>());
				return _5828_dead;
			}
		}
		else {
			_case_begin_1a921b727:;
			{
				_5828_dead = false;
				return _5828_dead;
			}
		}
		_match_end_1a921be86:;
	}
}



inline void _1db67d74a_drop_ref(jule::Slice<jule::Any>& _10618_refs,jule::Int _10631_pos) {
	_10618_refs=_10618_refs.slice(0LL,_10631_pos);
}



inline jule::Bool _1db67d74a_is_all_references_are_dead(jule::Ptr<_1dded9779_ReferenceStack> _11435_references) {
	jule::Int _11513_i = 0LL;
	for (; _11513_i < static_cast<jule::Int>((*(_11435_references))._method_len()); (_11513_i)++) {
		{
			jule::Any _11717_ref = (*(_11435_references))._method_at(_11513_i);
			if (_11717_ref == _1db67d74a_current) {
				goto _iter_next_1a9220808;
			}
			if (_11717_ref == _1db67d74a_main_current) {
				goto _iter_next_1a9220808;
			}
			if ((!(_1db67d74a_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_1a9220808:;
	}
	_iter_end_1a9220808:;
	return true;
}



inline jule::Bool _1db67d74a_is_fn_dead(jule::Ptr<_1dded9702_FnIns> _13119_f) {
	if ((*((*(_13119_f))._field_decl))._field_cpp_linked || (*(_13119_f))._field_anon) {
		return false;
	}
	if ((*((*(_13119_f))._field_decl))._method_is_entry_point() || (*((*(_13119_f))._field_decl))._method_is_init()) {
		return (!((*((*(_13119_f))._field_decl))._field_statically));
	}
	if (_1db634b1e_TEST && _1db67d74a_has_directive((*((*(_13119_f))._field_decl))._field_directives,jule::Str("test", 4))) {
		return false;
	}
	if ((*(_13119_f))._field_owner != nullptr) {
		if (_1db67d74a_is_exist(_1db67d74a_checking,jule::Any((*(_13119_f))._field_owner))) {
			return true;
		}
		return _1db67d74a_is_dead(jule::Any((*(_13119_f))._field_owner));
	}
	return _1db67d74a_is_all_references_are_dead((*(_13119_f))._field_references);
}



inline jule::Bool _1db67d74a_is_var_dead(jule::Ptr<_1c3c3d174_Var> _16120_v) {
	if ((*(_16120_v))._field_constant) {
		return true;
	}
	if ((*(_16120_v))._field_cpp_linked) {
		return false;
	}
	return _1db67d74a_is_all_references_are_dead((*(_16120_v))._field_references);
}



inline jule::Bool _1db67d74a_is_struct_dead(jule::Ptr<_1dd0be530_StructIns> _20623_s) {
	return false;
}



inline jule::Bool _1db67d74a_is_trait_dead(jule::Ptr<_1de043c01_Trait> _22322_t) {
	return false;
}



inline void _1db67d74a_eliminate_dead_functions(jule::Slice<jule::Ptr<_1dded9702_Fn>>& _24034_funcs) {
	jule::Int _24113_i = 0LL;
	while (_24113_i < static_cast<jule::Int>(_24034_funcs.len())) {
		{
			jule::Ptr<_1dded9702_Fn> _24317_f = _24034_funcs[_24113_i];
			jule::Int _24417_j = 0LL;
			while (_24417_j < static_cast<jule::Int>((*(_24317_f))._field_instances.len())) {
				{
					jule::Ptr<_1dded9702_FnIns> _24621_ins = (*(_24317_f))._field_instances[_24417_j];
					_1db67d74a_main_current=jule::Any(_24621_ins);
					if (_1db67d74a_is_fn_dead(_24621_ins)) {
						_1db67d74a_deads = jule::alloc_for_append(_1db67d74a_deads,1);_1db67d74a_deads.__push(jule::Any(_24621_ins));
						(*(_24317_f))._field_instances=jule::append((*(_24317_f))._field_instances.slice(0LL,_24417_j),(*(_24317_f))._field_instances.slice(_24417_j + 1LL));
					} else {
						(_24417_j)++;
					}
				}
			_iter_next_1a92327a4:;
			}
			_iter_end_1a92327a4:;
			if ((*(_24317_f))._field_instances.len() == 0LL) {
				_24034_funcs=jule::append(_24034_funcs.slice(0LL,_24113_i),_24034_funcs.slice(_24113_i + 1LL));
				goto _iter_next_1a9231c9d;
			}
			(_24113_i)++;
		}
	_iter_next_1a9231c9d:;
	}
	_iter_end_1a9231c9d:;
}



inline void _1db67d74a_eliminate_dead_globals(jule::Ptr<_1c2c4607e_Package>& _26532_pkg) {
	{
		auto &expr = (*(_26532_pkg))._field_files;
		auto it = expr.begin();
		_iter_begin_1a9233a2a:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1db67d74a_f = *it;
			{
				jule::Int _26717_i = 0LL;
				while (_26717_i < static_cast<jule::Int>((*(_1db67d74a_f))._field_vars.len())) {
					{
						jule::Ptr<_1c3c3d174_Var> _26921_v = (*(_1db67d74a_f))._field_vars[_26717_i];
						_1db67d74a_main_current=jule::Any(_26921_v);
						if (_1db67d74a_is_var_dead(_26921_v)) {
							_1db67d74a_deads = jule::alloc_for_append(_1db67d74a_deads,1);_1db67d74a_deads.__push(jule::Any(_26921_v));
							(*(_1db67d74a_f))._field_vars=jule::append((*(_1db67d74a_f))._field_vars.slice(0LL,_26717_i),(*(_1db67d74a_f))._field_vars.slice(_26717_i + 1LL));
						} else {
							(_26717_i)++;
						}
					}
				_iter_next_1a923692e:;
				}
				_iter_end_1a923692e:;
			}
			_iter_next_1a9233a2a:;
			++it;
			goto _iter_begin_1a9233a2a;
		}
		_iter_end_1a9233a2a:;
	}
}



inline void _1db67d74a_eliminate_dead_functions_package(jule::Ptr<_1c2c4607e_Package>& _28142_pkg) {
	{
		auto &expr = (*(_28142_pkg))._field_files;
		auto it = expr.begin();
		_iter_begin_1a9236368:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1db67d74a_f = *it;
			{
				_1db67d74a_eliminate_dead_functions((*(_1db67d74a_f))._field_funcs);
			}
			_iter_next_1a9236368:;
			++it;
			goto _iter_begin_1a9236368;
		}
		_iter_end_1a9236368:;
	}
}



inline void _1db67d74a_catch_alive_init(jule::Ptr<_1c2c4607e_Package>& _32926_pkg) {
	
	
	jule::Ptr<_1dded9702_Fn> _33213_f = (*(_32926_pkg))._method_find_fn(jule::Str("init", 4),false);
	if (_33213_f == nullptr) {
		return;
	}
	jule::Int _3379_n = _1db67d74a_deads.len();
	__JULE_DEFER({
		_1db67d74a_deads=_1db67d74a_deads.slice(0LL,_3379_n);
		_1db67d74a_checking=nullptr;
		_1db67d74a_current=jule::Any(nullptr);
	});
	jule::Ptr<_1dded9702_FnIns> _34513_ins = (*(_33213_f))._field_instances[0LL];
	jule::Int _34613_i = 0LL;
	for (; _34613_i < static_cast<jule::Int>((*((*(_34513_ins))._field_refers))._method_len()); (_34613_i)++) {
		{
			if ((!(_1db67d74a_is_dead((*((*(_34513_ins))._field_refers))._method_at(_34613_i))))) {
				(*(_33213_f))._field_statically=true;
				return;
			}
		}
	_iter_next_1a9249359:;
	}
	_iter_end_1a9249359:;
}



inline void _1db67d74a_eliminate_package(jule::Ptr<_1c2c4607e_Package>& _35527_pkg) {
	_1db67d74a_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_1db67d74a_catch_alive_init(_35527_pkg);
	_1db67d74a_eliminate_dead_globals(_35527_pkg);
	_1db67d74a_eliminate_dead_functions_package(_35527_pkg);
}



inline void _1db67d74a_eliminate_defines(jule::Ptr<_1dcecd043_IR>& _36731_ir) {
	jule::Int _36813_i = (*(_36731_ir))._field_used.len() - 1LL;
	for (; _36813_i >= 0LL; (_36813_i)--) {
		{
			jule::Ptr<_1c2c4607e_ImportInfo> _37017_u = (*(_36731_ir))._field_used[_36813_i];
			if ((!((*(_37017_u))._field_cpp_linked))) {
				_1db67d74a_eliminate_package((*(_37017_u))._field_package);
			}
		}
	_iter_next_1a924c912:;
	}
	_iter_end_1a924c912:;
	_1db67d74a_eliminate_package((*(_36731_ir))._field_main);
	_1db67d74a_deads=nullptr;
	_1db67d74a_checking=nullptr;
	_1db67d74a_current=jule::Any(nullptr);
}



inline void _1db71cbb3_eliminate_dead_code_of_scope(jule::Ptr<_1de0e938e_Scope> _7937_s) {
	jule::Ptr<_1db71cbb3_ScopeDeadCode> _8013_sdc = jule::new_struct_ptr<_1db71cbb3_ScopeDeadCode>(new( std::nothrow ) _1db71cbb3_ScopeDeadCode(jule::Ptr<_1db71cbb3_ScopeDeadCode>(),_7937_s,(&((*(_7937_s))._field_stmts)),jule::Int()));
	{
		(*(_8013_sdc))._method_optimize_stmts();
	}
}



inline void _1db71cbb3_eliminate_scope_functions(jule::Slice<jule::Ptr<_1dded9702_Fn>>& _8835_funcs) {
	{
		auto &expr = _8835_funcs;
		auto it = expr.begin();
		_iter_begin_1a9251790:;
		if (it != expr.end()) {
			jule::Ptr<_1dded9702_Fn> _1db71cbb3_func = *it;
			{
				{
					auto &expr = (*(_1db71cbb3_func))._field_instances;
					auto it = expr.begin();
					_iter_begin_1a9252054:;
					if (it != expr.end()) {
						jule::Ptr<_1dded9702_FnIns> _1db71cbb3_ins = *it;
						{
							_1db71cbb3_eliminate_dead_code_of_scope((*(_1db71cbb3_ins))._field_scope);
						}
						_iter_next_1a9252054:;
						++it;
						goto _iter_begin_1a9252054;
					}
					_iter_end_1a9252054:;
				}
			}
			_iter_next_1a9251790:;
			++it;
			goto _iter_begin_1a9251790;
		}
		_iter_end_1a9251790:;
	}
}



inline void _1db71cbb3_eliminate_functions_scope_package(jule::Ptr<_1c2c4607e_Package>& _9643_pkg) {
	{
		auto &expr = (*(_9643_pkg))._field_files;
		auto it = expr.begin();
		_iter_begin_1a9251c35:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b749_SymbolTable> _1db71cbb3_f = *it;
			{
				_1db71cbb3_eliminate_scope_functions((*(_1db71cbb3_f))._field_funcs);
			}
			_iter_next_1a9251c35:;
			++it;
			goto _iter_begin_1a9251c35;
		}
		_iter_end_1a9251c35:;
	}
}



inline void _1db71cbb3_eliminate_scope_package(jule::Ptr<_1c2c4607e_Package>& _10233_pkg) {
	_1db71cbb3_eliminate_functions_scope_package(_10233_pkg);
}



inline void _1db71cbb3_eliminate_scopes(jule::Ptr<_1dcecd043_IR>& _10730_ir) {
	jule::Int _10813_i = (*(_10730_ir))._field_used.len() - 1LL;
	for (; _10813_i >= 0LL; (_10813_i)--) {
		{
			jule::Ptr<_1c2c4607e_ImportInfo> _11017_u = (*(_10730_ir))._field_used[_10813_i];
			if ((!((*(_11017_u))._field_cpp_linked))) {
				_1db71cbb3_eliminate_scope_package((*(_11017_u))._field_package);
			}
		}
	_iter_next_1a9253022:;
	}
	_iter_end_1a9253022:;
	_1db71cbb3_eliminate_scope_package((*(_10730_ir))._field_main);
}



inline jule::U64 _1a69e4ba1_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1a69e4ba1_unix_year_to_seconds(jule::U64 _25725_y,jule::Bool& _25743_leap) {
	if ((_25725_y - 2LLU) <= 136LLU) {
		jule::U64 _25917_leaps = (_25725_y - 68LLU) >> 2LLU;
		_25743_leap=((_25725_y - 68LLU) & 3LLU) == 0LLU;
		if (_25743_leap) {
			(_25917_leaps)--;
		}
		return static_cast<jule::U64>(static_cast<jule::U64>(31536000LLU * static_cast<jule::U64>(_25725_y - 70LLU)) + static_cast<jule::U64>(86400LLU * _25917_leaps));
	}
	jule::U64 _26713_leaps = 0LLU;
	jule::U64 _26813_centuries = 0LLU;
	jule::U64 _26913_cycles = _25725_y - 100LLU / 400LLU;
	jule::U64 _27013_rem = _25725_y - 100LLU % 400LL;
	if (_27013_rem < 0LLU) {
		(_26913_cycles)--;
		_27013_rem+=400LLU;
	}
	if (_27013_rem == 0LLU) {
		_25743_leap=true;
		_26813_centuries=0LLU;
		_26713_leaps=0LLU;
	} else {
		if (_27013_rem >= 200LLU) {
			if (_27013_rem >= 300LLU) {
				_26813_centuries=3LLU;
				_27013_rem-=300LLU;
			} else {
				_26813_centuries=2LLU;
				_27013_rem-=200LLU;
			}
		} else {
			if (_27013_rem >= 100LLU) {
				_26813_centuries=1LLU;
				_27013_rem-=100LLU;
			} else {
				_26813_centuries=0LLU;
			}
		}
		if (_27013_rem == 0LLU) {
			_25743_leap=false;
			_26713_leaps=0LLU;
		} else {
			_26713_leaps=static_cast<jule::U64>(_27013_rem >> 2LLU);
			_27013_rem = (_27013_rem % 4LL);
			_25743_leap=_27013_rem == 0LLU;
		}
	}
	_26713_leaps+=static_cast<jule::U64>(static_cast<jule::U64>(97LLU * _26913_cycles) + static_cast<jule::U64>(24LLU * _26813_centuries));
	if (_25743_leap) {
		(_26713_leaps)++;
	}
	return static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_25725_y - 100LLU) * 31536000LLU) + static_cast<jule::U64>(_26713_leaps * 86400LLU)) + 946684800LLU) + 86400LLU);
}



inline jule::U64 _1a69e4ba1_unix_month_to_seconds(jule::U64 _31426_m,jule::Bool _31439_leap) {
	jule::U64 _31613_t = 0LLU;
	{
		auto &_match_expr{ _31426_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1a9283c9a:;
			{
				_31613_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a92855e8:;
			{
				_31613_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a928565e:;
			{
				_31613_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a92856c5:;
			{
				_31613_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a928573b:;
			{
				_31613_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a92857a2:;
			{
				_31613_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1a9285829:;
			{
				_31613_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1a92858a1:;
			{
				_31613_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a9285928:;
			{
				_31613_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1a92859a0:;
			{
				_31613_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a9285a27:;
			{
				_31613_t=28857600LLU;
			}
		}
		_match_end_1a9285351:;
	}
	if (_31439_leap && (_31426_m >= 2LLU)) {
		_31613_t+=86400LLU;
	}
	return _31613_t;
}



inline jule::Bool _1dc4e9dbd_is_iter_copy_optimizable(jule::Ptr<_1a94c333b_Data>& _76830_expr,jule::Ptr<_1c3c3d174_Var>& _76844_v) {
	if ((!((*(_76830_expr))._field_lvalue)) && (!((*((*(_76830_expr))._field_kind))._method_mutable()))) {
		return true;
	}
	return (!((*(_76844_v))._field_mutable)) && (!((*(_76830_expr))._field_mutable));
}



inline jule::Str _1dcb0cd1b_concat_all_parts(jule::Slice<_1dd05db0c_Token> _112421_parts) {
	jule::Str _112513_s = jule::Str();
	{
		auto &expr = _112421_parts;
		auto it = expr.begin();
		_iter_begin_1a9728ea9:;
		if (it != expr.end()) {
			_1dd05db0c_Token &_1dcb0cd1b_p = *it;
			{
				_112513_s+=_1dcb0cd1b_p._field_kind;
			}
			_iter_next_1a9728ea9:;
			++it;
			goto _iter_begin_1a9728ea9;
		}
		_iter_end_1a9728ea9:;
	}
	return _112513_s;
}



inline std::tuple<jule::Bool,jule::U64> _1dcb0cd1b_check_for_bit_shift_opt(jule::Ptr<_1ddb3c047_OperandExprModel>& _114129_l,jule::Ptr<_1ddb3c047_OperandExprModel>& _114152_r) {
	jule::Bool _114176_ok = jule::Bool();
	jule::U64 _114186_x = jule::U64();
	if ((!(_1a6539949_is_int((*((*(_114129_l))._field_kind))._method_to_str()))) || (!(_1a6539949_is_int((*((*(_114152_r))._field_kind))._method_to_str())))) {
		_114176_ok = false;
		_114186_x = 0LLU;
		return std::make_tuple(_114176_ok,_114186_x);
	}
	{
		auto &_match_expr{ (*(_114152_r))._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a64669ca_Const>>()) {
			_case_begin_1a972bd14:;
			{
				goto _match_end_1a972b72b;
			}
		}
		else {
			_case_begin_1a972b781:;
			{
				_114176_ok = false;
				_114186_x = 0LLU;
				return std::make_tuple(_114176_ok,_114186_x);
			}
		}
		_match_end_1a972b72b:;
	}
	_114186_x=static_cast<jule::U64>((*((*(_114152_r))._field_model.operator jule::Ptr<_1a64669ca_Const>()))._method_as_u64());
	if ((_114186_x == 0LLU) || ((_114186_x % 2LL) != 0LLU)) {
		_114176_ok = false;
		_114186_x = 0LLU;
		return std::make_tuple(_114176_ok,_114186_x);
	}
	jule::F64 _11559_j = _1dd6cca83_log2(static_cast<jule::F64>(static_cast<jule::F64>(_114186_x)));
	jule::U64 _11569_z = static_cast<jule::U64>(_11559_j);
	if (static_cast<jule::F64>(_11569_z) != _11559_j) {
		_114176_ok = false;
		_114186_x = 0LLU;
		return std::make_tuple(_114176_ok,_114186_x);
	}
	_114176_ok = true;
	_114186_x = _11569_z;
	return std::make_tuple(_114176_ok,_114186_x);
}



inline jule::Str _1dcb0cd1b_decompose_common_esq(jule::U8 _116325_b) {
	{
		auto &_match_expr{ _116325_b };
		
		if (_match_expr == '\\') {
			_case_begin_1a97309e9:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a9730a60:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a9730ac6:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1a9730730:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1a97307a7:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1a973082e:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1a9730455:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1a97304cc:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1a9730554:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1a97305cb:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1a972de7b:;
			{
				return jule::Str();
			}
		}
		_match_end_1a972e4ba:;
	}
}



inline jule::Str _1dcb0cd1b_sbtoa(jule::U8 _119010_b) {
	if (_119010_b == 0LLU) {
		return jule::Str("\\x00", 4);
	}
	if (_119010_b < 128LLU) {
		jule::Str _119513_seq = _1dcb0cd1b_decompose_common_esq(_119010_b);
		if (_119513_seq != jule::Str()) {
			return _119513_seq;
		}
		if ((32LL <= _119010_b) && (_119010_b <= 126LLU)) {
			return static_cast<jule::Str>(_119010_b);
		}
	}
	jule::Str _12039_seq = _1dd4c1635_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_119010_b)),8LL);
	if (_12039_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _12039_seq;
	}
	return jule::Str("\\", 1) + _12039_seq;
}



inline jule::Str _1dcb0cd1b_cstr_bytes(jule::Slice<jule::U8> _121015_bytes) {
	jule::Str _121113_lit = jule::Str();
	{
		auto &expr = _121015_bytes;
		auto it = expr.begin();
		_iter_begin_1a97359dd:;
		if (it != expr.end()) {
			jule::U8 &_1dcb0cd1b_b = *it;
			{
				_121113_lit+=_1dcb0cd1b_sbtoa(_1dcb0cd1b_b);
			}
			_iter_next_1a97359dd:;
			++it;
			goto _iter_begin_1a97359dd;
		}
		_iter_end_1a97359dd:;
	}
	return _121113_lit;
}



inline jule::Str _1dcb0cd1b_cstr_lit(jule::Slice<jule::U8> _121813_bytes) {
	return (jule::Str("\"", 1) + _1dcb0cd1b_cstr_bytes(_121813_bytes)) + jule::Str("\"", 1);
}



inline jule::Str _1dcb0cd1b_ftoa(jule::F64 _12229_f,jule::Int _122217_bitsize) {
	if (_122217_bitsize != 32LL) {
		if (_12229_f == static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::I64>(_12229_f)))) {
			return _1dcb0cd1b_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12229_f)));
		}
		if (_12229_f == static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::U64>(_12229_f)))) {
			return _1dcb0cd1b_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12229_f)));
		}
	}
	jule::Str _123113_m = _1dd1ec6b3_fmt_float(_12229_f,'f',-1LL,_122217_bitsize);
	if ((!(_1db822922_contains(_123113_m,jule::Str(".", 1))))) {
		_123113_m+=jule::Str(".0", 2);
	}
	return _123113_m;
}



inline jule::Str _1dcb0cd1b_itoa(jule::I64 _12389_x) {
	{
		
		if (_12389_x == jule::MAX_I64) {
			_case_begin_1a973b120:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if (_12389_x == jule::MIN_I64) {
			_case_begin_1a973b186:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1a973aecc:;
	}
	jule::Str _12469_fmt = _1dd4c1635_fmt_int(_12389_x,10LL);
	if (_1db6462e5_is_64bit(jule::Str("arm64", 5))) {
		return _12469_fmt + jule::Str("LL", 2);
	}
	return _12469_fmt + jule::Str("L", 1);
}



inline jule::Str _1dcb0cd1b_utoa(jule::U64 _12539_x) {
	{
		
		if (_12539_x == jule::MAX_U64) {
			_case_begin_1a973d210:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1a973d122:;
	}
	jule::Str _12599_fmt = _1dd4c1635_fmt_uint(_12539_x,10LL);
	if (_1db6462e5_is_64bit(jule::Str("arm64", 5))) {
		return _12599_fmt + jule::Str("LLU", 3);
	}
	return _12599_fmt + jule::Str("LU", 2);
}



inline jule::Bool _1dcb0cd1b_is_forwarded(jule::Ptr<_1de0e938e_Scope>& _126618_s) {
	jule::Any _12679_last = (*(_126618_s))._field_stmts[(*(_126618_s))._field_stmts.len() - 1LL];
	{
		auto &_match_expr{ _12679_last };
		
		if (_match_expr.type_is<jule::Ptr<_1a94c333b_Data>>()) {
			_case_begin_1a973e244:;
			{
				{
					auto &_match_expr{ (*(_12679_last.operator jule::Ptr<_1a94c333b_Data>()))._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ddb3c047_BuiltinErrorCallExprModel>>()) {
						_case_begin_1a9741b2b:;
						{
							return true;
						}
					}
					else {
						_case_begin_1a97414bb:;
						{
							return false;
						}
					}
					_match_end_1a9741466:;
				}
			}
		}
		else {
			_case_begin_1a9740762:;
			{
				return true;
			}
		}
		_match_end_1a974070c:;
	}
}



inline jule::Bool _1a686ecd4_is_cpp_header_file(jule::Str _112323_path) {
	jule::Int _11249_offset = _1db822922_find_last_byte(_112323_path,'.');
	if (_11249_offset == -1LL) {
		return false;
	}
	return _1db676578_is_valid_header_ext(_112323_path.slice(_11249_offset));
}



inline jule::Ptr<_1dd05c765_Directive> _1a696bb06_find_directive(jule::Slice<jule::Ptr<_1dd05c765_Directive>>& _2824_directives,jule::Str _2855_tag) {
	{
		auto &expr = _2824_directives;
		auto it = expr.begin();
		_iter_begin_1a9742db3:;
		if (it != expr.end()) {
			jule::Ptr<_1dd05c765_Directive> _1a696bb06_dr = *it;
			{
				if ((*(_1a696bb06_dr))._field_tag._field_kind == _2855_tag) {
					return _1a696bb06_dr;
				}
			}
			_iter_next_1a9742db3:;
			++it;
			goto _iter_begin_1a9742db3;
		}
		_iter_end_1a9742db3:;
	}
	return nullptr;
}



inline jule::Bool _1a696bb06_has_directive(jule::Slice<jule::Ptr<_1dd05c765_Directive>>& _3819_directives,jule::Str _3850_tag) {
	return _1a696bb06_find_directive(_3819_directives,_3850_tag) != nullptr;
}



inline jule::Bool _1dc4c9760_is_std_package(jule::Str _19519_f,jule::Str _19527_p) {
	return _1db822922_has_prefix(_19519_f,_1db7b8830_join(jule::Slice<jule::Str>({_1db841039_PATH_STDLIB,_19527_p})));
}



inline jule::Bool _1dc4c9760_is_constant_valid_conditional_case(jule::Ptr<_1de0e938e_If>& _19940_i) {
	{
		auto &_match_expr{ (*(_19940_i))._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a64669ca_Const>>()) {
			_case_begin_1a9773421:;
			{
				jule::Ptr<_1a64669ca_Const> _20213_c = (*(_19940_i))._field_expr.operator jule::Ptr<_1a64669ca_Const>();
				return (*(_20213_c))._method_is_bool() && (*(_20213_c))._method_read_bool();
			}
		}
		_match_end_1a97733bb:;
	}
	return false;
}



inline jule::Bool _1dc4c9760_is_constant_valid_match_case(jule::Ptr<_1de0e938e_Case>& _20934_case) {
	{
		auto &expr = (*(_20934_case))._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a9774125:;
		if (it != expr.end()) {
			jule::Ptr<_1a94c333b_Data> &_1dc4c9760_expr = *it;
			{
				if (((*(_1dc4c9760_expr))._method_is_const() && (*((*(_1dc4c9760_expr))._field_constant))._method_is_bool()) && (*((*(_1dc4c9760_expr))._field_constant))._method_read_bool()) {
					return true;
				}
			}
			_iter_next_1a9774125:;
			++it;
			goto _iter_begin_1a9774125;
		}
		_iter_end_1a9774125:;
	}
	return false;
}



inline jule::Bool _1dc4c9760_is_unreachable_conditional_case(jule::Ptr<_1de0e938e_If>& _21937_i) {
	{
		auto &_match_expr{ (*(_21937_i))._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a64669ca_Const>>()) {
			_case_begin_1a9776b1c:;
			{
				jule::Ptr<_1a64669ca_Const> _22213_c = (*(_21937_i))._field_expr.operator jule::Ptr<_1a64669ca_Const>();
				return (*(_22213_c))._method_is_bool() && (!((*(_22213_c))._method_read_bool()));
			}
		}
		_match_end_1a9776ab7:;
	}
	return false;
}



inline jule::Bool _1dc4c9760_is_unreachable_match_case(jule::Ptr<_1de0e938e_Case>& _22931_case) {
	{
		auto &expr = (*(_22931_case))._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a9777007:;
		if (it != expr.end()) {
			jule::Ptr<_1a94c333b_Data> &_1dc4c9760_expr = *it;
			{
				if (((*(_1dc4c9760_expr))._method_is_const() && (*((*(_1dc4c9760_expr))._field_constant))._method_is_bool()) && (!((*((*(_1dc4c9760_expr))._field_constant))._method_read_bool()))) {
					return true;
				}
			}
			_iter_next_1a9777007:;
			++it;
			goto _iter_begin_1a9777007;
		}
		_iter_end_1a9777007:;
	}
	return false;
}



inline void _1db59dcca_print_error_message(jule::Str _3124_msg) {
	jule::outln(_3124_msg);
}



inline void _1db59dcca_help(jule::Slice<jule::Str>& _3410_args) {
	if (_3410_args.len() > 2LL) {
		_1db59dcca_print_error_message((jule::Str("invalid command: ", 17) + _3410_args[2LL]));
		return;
	}
	jule::Int _4013_max = _1db59dcca_HELP_MAP.__at(0LL).__at(0LL).len();
	{
		auto &expr = _1db59dcca_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1a97d0516:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_1db59dcca_k = *it;
			{
				jule::Int _4213_n = _1db59dcca_k.__at(0LL).len();
				if (_4213_n > _4013_max) {
					_4013_max=_4213_n;
				}
			}
			_iter_next_1a97d0516:;
			++it;
			goto _iter_begin_1a97d0516;
		}
		_iter_end_1a97d0516:;
	}
	jule::Str _4813_s = jule::Str();
	
	{
		auto &expr = _1db59dcca_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1a97d2161:;
		if (it != expr.end()) {
			jule::Int _1db59dcca_i = it - expr.begin();
			jule::Array<jule::Str,2> &_1db59dcca_part = *it;
			{
				_4813_s+=_1db59dcca_part.__at(0LL);
				_4813_s+=_1db822922_repeat(jule::Str(" ", 1),static_cast<jule::Int>(static_cast<jule::Int>(_4013_max - static_cast<jule::Int>(_1db59dcca_part.__at(0LL).len())) + 5LL));
				_4813_s+=_1db59dcca_part.__at(1LL);
				if ((_1db59dcca_i + 1LL) < 5LL) {
					_4813_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_1a97d2161:;
			++it;
			_1db59dcca_i++;
			goto _iter_begin_1a97d2161;
		}
		_iter_end_1a97d2161:;
	}
	jule::outln(_4813_s);
}



inline void _1db59dcca_version(jule::Slice<jule::Str>& _6213_args) {
	if (_6213_args.len() > 2LL) {
		_1db59dcca_print_error_message((jule::Str("invalid command: ", 17) + _6213_args[2LL]));
		return;
	}
	jule::outln(jule::Str("jule0.0.9 @master", 17));
}



inline void _1db59dcca_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _1db6462e5_DISTOS;
		auto it = expr.begin();
		_iter_begin_1a97d7023:;
		if (it != expr.end()) {
			jule::Str &_1db59dcca_os = *it;
			{
				jule::out(_1db59dcca_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1a97d7023:;
			++it;
			goto _iter_begin_1a97d7023;
		}
		_iter_end_1a97d7023:;
	}
	jule::outln(jule::Str());
}



inline void _1db59dcca_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _1db6462e5_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1a97d6c48:;
		if (it != expr.end()) {
			jule::Str &_1db59dcca_arch = *it;
			{
				jule::out(_1db59dcca_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1a97d6c48:;
			++it;
			goto _iter_begin_1a97d6c48;
		}
		_iter_end_1a97d6c48:;
	}
	jule::outln(jule::Str());
}



inline void _1db59dcca_tool(jule::Slice<jule::Str>& _9110_args) {
	if (_9110_args.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_9110_args.len() > 3LL) {
		_1db59dcca_print_error_message((jule::Str("invalid command: ", 17) + _9110_args[3LL]));
		return;
	}
	jule::Str _1029_cmd = _9110_args[2LL];
	{
		auto &_match_expr{ _1029_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1a97daca2:;
			{
				_1db59dcca_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1a97da631:;
			{
				_1db59dcca_tool_distarch();
			}
		}
		else {
			_case_begin_1a97da400:;
			{
				_1db59dcca_print_error_message((jule::Str("undefined command: ", 19) + _1029_cmd));
			}
		}
		_match_end_1a97da39a:;
	}
}



inline void _1db59dcca_julenv(jule::Slice<jule::Str>& _11112_args) {
	if (_11112_args.len() > 2LL) {
		_1db59dcca_print_error_message((jule::Str("invalid command: ", 17) + _11112_args[2LL]));
		return;
	}
	jule::outln(jule::Str("julec version: jule0.0.9 @master", 32));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln(jule::Str("default compiler: ", 18) + _1db634b1e_COMPILER);
	jule::outln(jule::Str("default C++ standard: ", 22) + _1db634b1e_CPP_STD);
}



inline void _1db59dcca_mod(jule::Slice<jule::Str>& _1249_args) {
	if (_1249_args.len() == 2LL) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;
	}
	if (_1249_args.len() > 3LL) {
		_1db59dcca_print_error_message((jule::Str("invalid command: ", 17) + _1249_args[3LL]));
		return;
	}
	{
		auto &_match_expr{ _1249_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1a97e07e0:;
			{
				({
					auto except = _1db6a29e4_File::_static_method_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1db59dcca_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1a97e024b:;
			{
				_1db59dcca_print_error_message((jule::Str("invalid command: ", 17) + _1249_args[2LL]));
			}
		}
		_match_end_1a97e01e6:;
	}
}



inline jule::Bool _1db59dcca_process_command(jule::Slice<jule::Str>& _14821_args) {
	{
		auto &_match_expr{ _14821_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1a97e2968:;
			{
				_1db59dcca_help(_14821_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1a97e29ce:;
			{
				_1db59dcca_version(_14821_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1a97e276a:;
			{
				_1db59dcca_tool(_14821_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1a97e27d1:;
			{
				_1db59dcca_julenv(_14821_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1a97e2847:;
			{
				_1db59dcca_mod(_14821_args);
			}
		}
		else {
			_case_begin_1a97e059d:;
			{
				return false;
			}
		}
		_match_end_1a97e1bba:;
	}
	return true;
}



inline void _1db59dcca_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _17813_args = _1db640cc3_args();
	if (_17813_args.len() < 2LL) {
		_1db59dcca_show_info();
		return;
	}
	if (_1db59dcca_process_command(_17813_args)) {
		return;
	}
	_1db5c40db_compile_command(_17813_args);
}



inline void _1db5bc711___init_common(void) {
	_1db634b1e_COMPILER=jule::Str("clang", 5);
}



inline void _1db5be0a3___enable_vtp(void) {
	jule::Uintptr _199_h_out = _1db653ae9_get_std_handle(static_cast<jule::Uintptr>(0LLU));
	if (_199_h_out == jule::MAX_U64) {
		return;
	}
	jule::Int _2413_dw_mode = 0LL;
	if ((!(_1db653ae9_get_console_mode(_199_h_out,_2413_dw_mode)))) {
		return;
	}
	_2413_dw_mode|=4LL;
	_1db653ae9_set_console_mode(_199_h_out,_2413_dw_mode);
}



inline void _1db5be0a3_init(void) {
	_1db5be0a3___enable_vtp();
	_1db5bc711___init_common();
}



inline void _1db5c40db_write_output(jule::Str _4417_path,jule::Str _4428_content) {
	jule::Str _459_dir = _1db7b8830_dir(_4417_path);
	({
		auto except = _1db6a27c4_Status::_static_method_of(_459_dir);
		if (!except.ok()) {
			({
				auto except = _1db69ceea_Directory::_static_method_create(_459_dir);
				if (!except.ok()) {
					_1dd0a6eda_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	({
		auto except = _1db6a29e4_File::_static_method_write(_4417_path,static_cast<jule::Slice<jule::U8>>(_4428_content),432LL);
		if (!except.ok()) {
			_1dd0a6eda_throw(jule::Str("a problem occurs when code generation", 37));
		}
	});
}



inline void _1db5c40db_clear_objects(void) {
	({
		auto except = _1db6a29e4_File::_static_method_remove(_1db5c40db_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;
		}
	});
	_1db69ceea_Directory::_static_method_remove(_1db5c40db_OUT_DIR);
}



inline void _1db5c40db_compile_ir(jule::Str _7215_compiler,jule::Str _7230_compiler_cmd) {
	jule::Ptr<_1dce5a696_Cmd> _7313_cmd = _1dce5a696_Cmd::_static_method_new(_7215_compiler);
	(*(_7313_cmd))._field_args=jule::Slice<jule::Str>({_7215_compiler});
	(*(_7313_cmd))._field_args=jule::append((*(_7313_cmd))._field_args,_1db822922_split(_7230_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::Int _769_status = ({
		auto except = (*(_7313_cmd))._method_spawn();
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (_match_expr == static_cast<jule::Int>(12LL)) {
					_case_begin_1a97ee348:;
					{
						_1dd0ba905_AnsiEscape::_static_method_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (_match_expr == static_cast<jule::Int>(3LL)) {
					_case_begin_1a97ee3ae:;
					{
						_1dd0ba905_AnsiEscape::_static_method_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (_match_expr == static_cast<jule::Int>(9LL)) {
					_case_begin_1a97ee425:;
					{
						_1dd0ba905_AnsiEscape::_static_method_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (_match_expr == static_cast<jule::Int>(0LL)) {
					_case_begin_1a97ee48b:;
					{
						_1dd0ba905_AnsiEscape::_static_method_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1a97edea2:;
					{
						_1dd0ba905_AnsiEscape::_static_method_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1a97ee090:;
			}
			_1dd0a6eda_throw(jule::Str());
			0LL;
		});
	});
	if (_769_status != 0LL) {
		jule::Str _9313_error_message = (jule::Str("\n>>> your backend compiler (", 28) + _1db634b1e_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149);
		_1dd0ba905_AnsiEscape::_static_method_print(jule::Str("\033[31m", 5),_9313_error_message);
		_1dd0a6eda_throw(jule::Str());
	}
	_1db5c40db_clear_objects();
}



inline void _1db5c40db_do_spell(jule::Str _10413_obj,jule::Str _10423_compiler,jule::Str _10438_compiler_cmd) {
	jule::Str _1059_path = _1db5c40db_get_compile_path();
	_1db5c40db_write_output(_1059_path,_10413_obj);
	if ((!(_1db634b1e_TRANSPILATION))) {
		_1db5c40db_compile_ir(_10423_compiler,_10438_compiler_cmd);
	}
}



inline jule::Bool _1db5c40db_is_cpp_source_file(jule::Str _11223_path) {
	jule::Int _1139_offset = _1db822922_find_last_byte(_11223_path,'.');
	if (_1139_offset == -1LL) {
		return false;
	}
	return _1db676578_is_valid_cpp_ext(_11223_path.slice(_1139_offset));
}



inline void _1db5c40db_push_comp_cmd_clang(jule::Str& _12029_cmd) {
	_12029_cmd+=jule::Str("-Wno-everything ", 16);
	_12029_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1db634b1e_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a9806b8b:;
			{
				_12029_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a9806c57:;
			{
				_12029_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a9806cbd:;
			{
				_12029_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1a9806b36:;
	}
	_12029_cmd+=jule::Str(" ", 1);
	if (_1db6263a2_PRODUCTION) {
		_12029_cmd+=jule::Str("-O3 ", 4);
		_12029_cmd+=jule::Str("-flto ", 6);
		_12029_cmd+=jule::Str("-DNDEBUG ", 9);
		_12029_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_12029_cmd+=jule::Str("-O0 ", 4);
	}
}



inline void _1db5c40db_push_comp_cmd_gcc(jule::Str& _14327_cmd) {
	_14327_cmd+=jule::Str("-w ", 3);
	_14327_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1db634b1e_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a9809540:;
			{
				_14327_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a98095a6:;
			{
				_14327_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a980961c:;
			{
				_14327_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1a98094da:;
	}
	_14327_cmd+=jule::Str(" ", 1);
	if (_1db6263a2_PRODUCTION) {
		_14327_cmd+=jule::Str("-O3 ", 4);
		_14327_cmd+=jule::Str("-DNDEBUG ", 9);
		_14327_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14327_cmd+=jule::Str("-O0 ", 4);
	}
}



inline std::tuple<jule::Str,jule::Str> _1db5c40db_gen_compile_cmd(jule::Str _16620_source_path,jule::Ptr<_1dcecd043_IR>& _16639_ir) {
	jule::Str &_16710_compiler = _1db634b1e_COMPILER_PATH;
	jule::Str _16813_cmd = jule::Str();
	{
		auto &_match_expr{ _1db634b1e_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a980c169:;
			{
				_1db5c40db_push_comp_cmd_gcc(_16813_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a980c1d0:;
			{
				_1db5c40db_push_comp_cmd_clang(_16813_cmd);
			}
		}
		_match_end_1a980c114:;
	}
	{
		auto &expr = (*(_16639_ir))._field_passes;
		auto it = expr.begin();
		_iter_begin_1a980c554:;
		if (it != expr.end()) {
			jule::Str &_1db5c40db_pass = *it;
			{
				_16813_cmd+=_1db5c40db_pass;
				_16813_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1a980c554:;
			++it;
			goto _iter_begin_1a980c554;
		}
		_iter_end_1a980c554:;
	}
	{
		auto &expr = (*(_16639_ir))._field_used;
		auto it = expr.begin();
		_iter_begin_1a980dd80:;
		if (it != expr.end()) {
			jule::Ptr<_1c2c4607e_ImportInfo> &_1db5c40db_u = *it;
			{
				if ((*(_1db5c40db_u))._field_cpp_linked && _1db5c40db_is_cpp_source_file((*(_1db5c40db_u))._field_path)) {
					_16813_cmd+=(*(_1db5c40db_u))._field_path;
					_16813_cmd+=jule::Str(" ", 1);
				}
			}
			_iter_next_1a980dd80:;
			++it;
			goto _iter_begin_1a980dd80;
		}
		_iter_end_1a980dd80:;
	}
	if (_1db5c40db_OUT != jule::Str()) {
		_16813_cmd+=jule::Str("-o ", 3);
		_16813_cmd+=_1db5c40db_OUT;
		_16813_cmd+=jule::Str(" ", 1);
	}
	_16813_cmd+=_16620_source_path;
	return std::make_tuple(_16710_compiler,_16813_cmd);
}



inline jule::Str _1db5c40db_get_compile_path(void) {
	return _1db7b8830_join(jule::Slice<jule::Str>({_1db5c40db_OUT_DIR,_1db5c40db_OUT_NAME}));
}



inline void _1db5c40db_apply_target_independent_optimizations(jule::Ptr<_1dcecd043_IR>& _20948_ir) {
	if (_1db6263a2_OPT_DEADCODE) {
		_1db67d74a_eliminate_defines(_20948_ir);
	}
	jule::Ptr<_1dce62659_Optimizer> _21613_opt = _1dce62659_Optimizer::_static_method_new(_20948_ir);
	(*(_21613_opt))._method_optimize();
	if (_1db6263a2_OPT_DEADCODE) {
		_1db71cbb3_eliminate_scopes(_20948_ir);
	}
}



inline void _1db5c40db_check_compiler_flag(void) {
	{
		auto &_match_expr{ _1db634b1e_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a9812911:;
			{
				_1dd0a6eda_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a9812977:;
			{
				if (_1db634b1e_COMPILER_PATH == jule::Str()) {
					_1db634b1e_COMPILER_PATH=jule::Str("clang++", 7);
				}
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a98129dd:;
			{
				if (_1db634b1e_COMPILER_PATH == jule::Str()) {
					_1db634b1e_COMPILER_PATH=jule::Str("g++", 3);
				}
			}
		}
		else {
			_case_begin_1a9812647:;
			{
				_1dd0a6eda_throw((jule::Str("invalid option value for --compiler: ", 37) + _1db634b1e_COMPILER));
			}
		}
		_match_end_1a98121b3:;
	}
}



inline void _1db5c40db_check_target_arch(jule::Str _24222_arch) {
	{
		auto &expr = _1db6462e5_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1a98148be:;
		if (it != expr.end()) {
			jule::Str &_1db5c40db_distarch = *it;
			{
				if (_24222_arch == _1db5c40db_distarch) {
					return;
				}
			}
			_iter_next_1a98148be:;
			++it;
			goto _iter_begin_1a98148be;
		}
		_iter_end_1a98148be:;
	}
	_1dd0a6eda_throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _24222_arch));
}



inline void _1db5c40db_check_target_os(jule::Str _25120_os) {
	{
		auto &expr = _1db6462e5_DISTOS;
		auto it = expr.begin();
		_iter_begin_1a9815b12:;
		if (it != expr.end()) {
			jule::Str &_1db5c40db_distos = *it;
			{
				if (_25120_os == _1db5c40db_distos) {
					return;
				}
			}
			_iter_next_1a9815b12:;
			++it;
			goto _iter_begin_1a9815b12;
		}
		_iter_end_1a9815b12:;
	}
	_1dd0a6eda_throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _25120_os));
}



inline void _1db5c40db_check_target_flag(jule::Str& _26023_target) {
	if (_26023_target == jule::Str()) {
		_1dd0a6eda_throw(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2659_parts = _1db822922_split(_26023_target,jule::Str("-", 1),-1LL);
	if (_2659_parts.len() != 2LL) {
		_1dd0a6eda_throw((jule::Str("--target: undefined platform target format: ", 44) + _26023_target));
	}
	jule::Str _27010_os = _2659_parts[0LL];
	jule::Str _27014_arch = _2659_parts[1LL];
	std::tie(_27010_os,_27014_arch) = std::make_tuple(_2659_parts[0LL],_2659_parts[1LL]);
	if (_27010_os != jule::Str("native", 6)) {
		_1db5c40db_check_target_os(_27010_os);
		_1db5be6be_OS=_27010_os;
	}
	if (_27014_arch != jule::Str("native", 6)) {
		_1db5c40db_check_target_arch(_27014_arch);
		_1db5be6be_ARCH=_27014_arch;
	}
}



inline void _1db5c40db_check_opt_flag(jule::Str& _28320_opt) {
	if (_28320_opt == jule::Str()) {
		_1dd0a6eda_throw(jule::Str("missing option value: --opt", 27));
	}
	{
		auto &_match_expr{ _28320_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1a981aac3:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1a981b497:;
			{
				_1db6263a2_push_opt_level(static_cast<jule::Int>(1LL));
			}
		}
		else {
			_case_begin_1a981ac8d:;
			{
				_1dd0a6eda_throw((jule::Str("--opt: invalid optimization level: ", 35) + _28320_opt));
			}
		}
		_match_end_1a981b354:;
	}
}



inline void _1db5c40db_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _1db634b1e_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a981c971:;
			{
				goto _match_end_1a981c223;
			}
		}
		else {
			_case_begin_1a981b50d:;
			{
				_1dd0a6eda_throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _1db634b1e_CPP_STD));
			}
		}
		_match_end_1a981c223:;
	}
}



inline jule::Slice<jule::Str> _1db5c40db_check_flags(jule::Slice<jule::Str>& _30617_args) {
	jule::Str _30713_opt = jule::Str("L0", 2);
	jule::Str _30813_target = jule::Str("native-native", 13);
	jule::Ptr<_1dc4768b6_FlagSet> _31013_fs = _1dc4768b6_FlagSet::_static_method_new();
	(*(_31013_fs))._method_add_var_0(((jule::Ptr<jule::Str>)((&(_30713_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	(*(_31013_fs))._method_add_var_0(((jule::Ptr<jule::Str>)((&(_30813_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	(*(_31013_fs))._method_add_var_0(((jule::Ptr<jule::Str>)((&(_1db5c40db_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db634b1e_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db634b1e_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	(*(_31013_fs))._method_add_var_0(((jule::Ptr<jule::Str>)((&(_1db634b1e_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	(*(_31013_fs))._method_add_var_0(((jule::Ptr<jule::Str>)((&(_1db634b1e_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db6263a2_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db634b1e_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db634b1e_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	(*(_31013_fs))._method_add_var_0(((jule::Ptr<jule::Str>)((&(_1db634b1e_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db6263a2_OPT_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db6263a2_OPT_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db6263a2_OPT_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db6263a2_OPT_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db6263a2_OPT_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db6263a2_OPT_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db6263a2_OPT_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	(*(_31013_fs))._method_add_var_1(((jule::Ptr<jule::Bool>)((&(_1db6263a2_OPT_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _33213_content = ({
		auto except = (*(_31013_fs))._method_parse(_30617_args);
		(except.ok()) ? (except.result) : ({
			_1dd0a6eda_throw(except.error.operator jule::Str());
			nullptr;
		});
	});
	_1db5c40db_check_compiler_flag();
	_1db5c40db_check_cpp_std_flag();
	_1db5c40db_check_target_flag(_30813_target);
	_1db5c40db_check_opt_flag(_30713_opt);
	return _33213_content;
}



inline void _1db5c40db_setup_sema_flags(jule::Int& _34526_flags) {
	if (_1db634b1e_SHADOWING) {
		_34526_flags|=static_cast<jule::Int>(1LL);
	}
}



inline jule::Ptr<_1dcecd043_IR> _1db5c40db_build_ir(jule::Slice<jule::Str>& _35114_args) {
	jule::Slice<jule::Str> _3529_content = _1db5c40db_check_flags(_35114_args);
	jule::Int _35413_sema_flags = static_cast<jule::Int>(0LL);
	_1db5c40db_setup_sema_flags(_35413_sema_flags);
	if (_3529_content.len() == 0LL) {
		_1dd0a6eda_throw(_1db678789_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if (_3529_content.len() > 1LL) {
		_1dd0a6eda_throw((jule::Str("undefined content: ", 19) + _3529_content[1LL]));
	}
	jule::Str _36214_path;
	jule::Bool _36220_ok;
	std::tie(_36214_path,_36220_ok) = _1db7b8830_abs(_3529_content[0LL]);
	if ((!(_36220_ok))) {
		_1dd0a6eda_throw(jule::Str("compile path could not processed because of a problem", 53));
	}
	jule::Ptr<_1db6a27c4_Status> _3689_inf = ({
		auto except = _1db6a27c4_Status::_static_method_of(_1db841039_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1dd0a6eda_throw(_1db678789_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1db6a27c4_Status>();});
	});
	if ((!((*(_3689_inf))._method_is_dir()))) {
		_1dd0a6eda_throw(_1db678789_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	}
	_1dd014068_init_vars();
	jule::Ptr<_1dcecd043_IR> _37914_ir;
	jule::Slice<_1db678789_Log> _37918_logs;
	std::tie(_37914_ir,_37918_logs) = _1dcecd043_IR::_static_method_build(_36214_path,_35413_sema_flags);
	if ((_37914_ir == nullptr) && (_37918_logs == nullptr)) {
		_1dd0a6eda_throw(_1db678789_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_36214_path)})));
	}
	if (_37918_logs != nullptr) {
		_1dd0bac02_Logger::_static_method_print_logs(_37918_logs);
		_1dd0a6eda_throw(jule::Str());
	}
	return _37914_ir;
}



inline void _1db5c40db_compile_command(jule::Slice<jule::Str>& _39425_args) {
	_39425_args=_39425_args.slice(1LL);
	if (_39425_args[0LL] == jule::Str("test", 4)) {
		_1db634b1e_TEST=true;
		_39425_args=_39425_args.slice(1LL);
	}
	jule::Ptr<_1dcecd043_IR> _40013_ir = _1db5c40db_build_ir(_39425_args);
	
	if ((!(_1db634b1e_TEST))) {
		jule::Ptr<_1dded9702_Fn> _40517_f = (*((*(_40013_ir))._field_main))._method_find_fn(jule::Str("main", 4),false);
		if (_40517_f == nullptr) {
			_1dd0a6eda_throw(_1db678789_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		}
		(*(_40517_f))._field_statically=true;
	}
	jule::Ptr<_1dded9702_Fn> _41113_f = (*((*(_40013_ir))._field_main))._method_find_fn(jule::Str("init", 4),false);
	if (_41113_f != nullptr) {
		(*(_41113_f))._field_statically=true;
	}
	_1db5c40db_apply_target_independent_optimizations(_40013_ir);
	(*(_40013_ir))._method_order();
	jule::Str _42110_compiler;
	jule::Str _42120_compiler_cmd;
	std::tie(_42110_compiler,_42120_compiler_cmd) = _1db5c40db_gen_compile_cmd(_1db5c40db_get_compile_path(),_40013_ir);
	jule::Ptr<_1a686ecd4_ObjectCoder> _42313_oc = _1a686ecd4_ObjectCoder::_static_method_new(_40013_ir,_1a686ecd4_SerializationInfo(_42110_compiler,_42120_compiler_cmd));
	jule::Str _42713_obj = (*(_42313_oc))._method_serialize();
	if (_1db634b1e_TEST) {
		jule::Ptr<_1db71bcb1_TestCoder> _43017_tc = _1db71bcb1_TestCoder::_static_method_new(_42313_oc);
		(*(_43017_tc))._method_serialize(_42713_obj);
	}
	(*(_42313_oc))._method_append_standard(_42713_obj);
	_1db5c40db_do_spell(_42713_obj,_42110_compiler,_42120_compiler_cmd);
}




void __jule_call_initializers(void) {
	_1db653ae9_STDIN = _1db653ae9_get_std_handle(static_cast<jule::Uintptr>(0LLU));
	_1db653ae9_STDOUT = _1db653ae9_get_std_handle(static_cast<jule::Uintptr>(0LLU));
	_1db653ae9_STDERR = _1db653ae9_get_std_handle(static_cast<jule::Uintptr>(0LLU));
	_1db5be6be_OS = jule::Str("windows", 7);
	_1db5be6be_ARCH = jule::Str("arm64", 5);
	_1db6263a2_PRODUCTION = false;
	_1db6263a2_OPT_COPY = false;
	_1db6263a2_OPT_DEADCODE = false;
	_1db6263a2_OPT_APPEND = false;
	_1db6263a2_OPT_MATH = false;
	_1db6263a2_OPT_ACCESS = false;
	_1db6263a2_OPT_INLINE = false;
	_1db6263a2_OPT_PTR = false;
	_1db6263a2_OPT_COND = false;
	_1db634b1e_COMPILER = jule::Str();
	_1db634b1e_COMPILER_PATH = jule::Str();
	_1db634b1e_CPP_STD = jule::Str("cpp17", 5);
	_1db634b1e_SHADOWING = false;
	_1db634b1e_TRANSPILATION = false;
	_1db634b1e_TEST = false;
	_1db634b1e_RC = true;
	_1db634b1e_SAFETY = true;
	_1db761ba2_FIRST = jule::Array<jule::U8,256>({});
	_1db761ba2_ACCEPT_RANGES = jule::Array<_1db761ba2_accept_range,16>({_1db761ba2_accept_range(128LLU,191LLU),_1db761ba2_accept_range(160LLU,191LLU),_1db761ba2_accept_range(128LLU,159LLU),_1db761ba2_accept_range(144LLU,191LLU),_1db761ba2_accept_range(128LLU,143LLU)});
	_1dc4ddcb3__L = jule::new_struct<_1dc4e2e71_RangeTable>(new( std::nothrow ) _1dc4e2e71_RangeTable(jule::Slice<_1dc4e2e71_Range16>({_1dc4e2e71_Range16(65LLU,90LLU,1LLU),_1dc4e2e71_Range16(97LLU,122LLU,1LLU),_1dc4e2e71_Range16(170LLU,181LLU,11LLU),_1dc4e2e71_Range16(186LLU,192LLU,6LLU),_1dc4e2e71_Range16(193LLU,214LLU,1LLU),_1dc4e2e71_Range16(216LLU,246LLU,1LLU),_1dc4e2e71_Range16(248LLU,705LLU,1LLU),_1dc4e2e71_Range16(710LLU,721LLU,1LLU),_1dc4e2e71_Range16(736LLU,740LLU,1LLU),_1dc4e2e71_Range16(748LLU,750LLU,2LLU),_1dc4e2e71_Range16(880LLU,884LLU,1LLU),_1dc4e2e71_Range16(886LLU,887LLU,1LLU),_1dc4e2e71_Range16(890LLU,893LLU,1LLU),_1dc4e2e71_Range16(895LLU,902LLU,7LLU),_1dc4e2e71_Range16(904LLU,906LLU,1LLU),_1dc4e2e71_Range16(908LLU,910LLU,2LLU),_1dc4e2e71_Range16(911LLU,929LLU,1LLU),_1dc4e2e71_Range16(931LLU,1013LLU,1LLU),_1dc4e2e71_Range16(1015LLU,1153LLU,1LLU),_1dc4e2e71_Range16(1162LLU,1327LLU,1LLU),_1dc4e2e71_Range16(1329LLU,1366LLU,1LLU),_1dc4e2e71_Range16(1369LLU,1376LLU,7LLU),_1dc4e2e71_Range16(1377LLU,1416LLU,1LLU),_1dc4e2e71_Range16(1488LLU,1514LLU,1LLU),_1dc4e2e71_Range16(1519LLU,1522LLU,1LLU),_1dc4e2e71_Range16(1568LLU,1610LLU,1LLU),_1dc4e2e71_Range16(1646LLU,1647LLU,1LLU),_1dc4e2e71_Range16(1649LLU,1747LLU,1LLU),_1dc4e2e71_Range16(1749LLU,1765LLU,16LLU),_1dc4e2e71_Range16(1766LLU,1774LLU,8LLU),_1dc4e2e71_Range16(1775LLU,1786LLU,11LLU),_1dc4e2e71_Range16(1787LLU,1788LLU,1LLU),_1dc4e2e71_Range16(1791LLU,1808LLU,17LLU),_1dc4e2e71_Range16(1810LLU,1839LLU,1LLU),_1dc4e2e71_Range16(1869LLU,1957LLU,1LLU),_1dc4e2e71_Range16(1969LLU,1994LLU,25LLU),_1dc4e2e71_Range16(1995LLU,2026LLU,1LLU),_1dc4e2e71_Range16(2036LLU,2037LLU,1LLU),_1dc4e2e71_Range16(2042LLU,2048LLU,6LLU),_1dc4e2e71_Range16(2049LLU,2069LLU,1LLU),_1dc4e2e71_Range16(2074LLU,2084LLU,10LLU),_1dc4e2e71_Range16(2088LLU,2112LLU,24LLU),_1dc4e2e71_Range16(2113LLU,2136LLU,1LLU),_1dc4e2e71_Range16(2144LLU,2154LLU,1LLU),_1dc4e2e71_Range16(2160LLU,2183LLU,1LLU),_1dc4e2e71_Range16(2185LLU,2190LLU,1LLU),_1dc4e2e71_Range16(2208LLU,2249LLU,1LLU),_1dc4e2e71_Range16(2308LLU,2361LLU,1LLU),_1dc4e2e71_Range16(2365LLU,2384LLU,19LLU),_1dc4e2e71_Range16(2392LLU,2401LLU,1LLU),_1dc4e2e71_Range16(2417LLU,2432LLU,1LLU),_1dc4e2e71_Range16(2437LLU,2444LLU,1LLU),_1dc4e2e71_Range16(2447LLU,2448LLU,1LLU),_1dc4e2e71_Range16(2451LLU,2472LLU,1LLU),_1dc4e2e71_Range16(2474LLU,2480LLU,1LLU),_1dc4e2e71_Range16(2482LLU,2486LLU,4LLU),_1dc4e2e71_Range16(2487LLU,2489LLU,1LLU),_1dc4e2e71_Range16(2493LLU,2510LLU,17LLU),_1dc4e2e71_Range16(2524LLU,2525LLU,1LLU),_1dc4e2e71_Range16(2527LLU,2529LLU,1LLU),_1dc4e2e71_Range16(2544LLU,2545LLU,1LLU),_1dc4e2e71_Range16(2556LLU,2565LLU,9LLU),_1dc4e2e71_Range16(2566LLU,2570LLU,1LLU),_1dc4e2e71_Range16(2575LLU,2576LLU,1LLU),_1dc4e2e71_Range16(2579LLU,2600LLU,1LLU),_1dc4e2e71_Range16(2602LLU,2608LLU,1LLU),_1dc4e2e71_Range16(2610LLU,2611LLU,1LLU),_1dc4e2e71_Range16(2613LLU,2614LLU,1LLU),_1dc4e2e71_Range16(2616LLU,2617LLU,1LLU),_1dc4e2e71_Range16(2649LLU,2652LLU,1LLU),_1dc4e2e71_Range16(2654LLU,2674LLU,20LLU),_1dc4e2e71_Range16(2675LLU,2676LLU,1LLU),_1dc4e2e71_Range16(2693LLU,2701LLU,1LLU),_1dc4e2e71_Range16(2703LLU,2705LLU,1LLU),_1dc4e2e71_Range16(2707LLU,2728LLU,1LLU),_1dc4e2e71_Range16(2730LLU,2736LLU,1LLU),_1dc4e2e71_Range16(2738LLU,2739LLU,1LLU),_1dc4e2e71_Range16(2741LLU,2745LLU,1LLU),_1dc4e2e71_Range16(2749LLU,2768LLU,19LLU),_1dc4e2e71_Range16(2784LLU,2785LLU,1LLU),_1dc4e2e71_Range16(2809LLU,2821LLU,12LLU),_1dc4e2e71_Range16(2822LLU,2828LLU,1LLU),_1dc4e2e71_Range16(2831LLU,2832LLU,1LLU),_1dc4e2e71_Range16(2835LLU,2856LLU,1LLU),_1dc4e2e71_Range16(2858LLU,2864LLU,1LLU),_1dc4e2e71_Range16(2866LLU,2867LLU,1LLU),_1dc4e2e71_Range16(2869LLU,2873LLU,1LLU),_1dc4e2e71_Range16(2877LLU,2908LLU,31LLU),_1dc4e2e71_Range16(2909LLU,2911LLU,2LLU),_1dc4e2e71_Range16(2912LLU,2913LLU,1LLU),_1dc4e2e71_Range16(2929LLU,2947LLU,18LLU),_1dc4e2e71_Range16(2949LLU,2954LLU,1LLU),_1dc4e2e71_Range16(2958LLU,2960LLU,1LLU),_1dc4e2e71_Range16(2962LLU,2965LLU,1LLU),_1dc4e2e71_Range16(2969LLU,2970LLU,1LLU),_1dc4e2e71_Range16(2972LLU,2974LLU,2LLU),_1dc4e2e71_Range16(2975LLU,2979LLU,4LLU),_1dc4e2e71_Range16(2980LLU,2984LLU,4LLU),_1dc4e2e71_Range16(2985LLU,2986LLU,1LLU),_1dc4e2e71_Range16(2990LLU,3001LLU,1LLU),_1dc4e2e71_Range16(3024LLU,3077LLU,53LLU),_1dc4e2e71_Range16(3078LLU,3084LLU,1LLU),_1dc4e2e71_Range16(3086LLU,3088LLU,1LLU),_1dc4e2e71_Range16(3090LLU,3112LLU,1LLU),_1dc4e2e71_Range16(3114LLU,3129LLU,1LLU),_1dc4e2e71_Range16(3133LLU,3160LLU,27LLU),_1dc4e2e71_Range16(3161LLU,3162LLU,1LLU),_1dc4e2e71_Range16(3165LLU,3168LLU,3LLU),_1dc4e2e71_Range16(3169LLU,3200LLU,31LLU),_1dc4e2e71_Range16(3205LLU,3212LLU,1LLU),_1dc4e2e71_Range16(3214LLU,3216LLU,1LLU),_1dc4e2e71_Range16(3218LLU,3240LLU,1LLU),_1dc4e2e71_Range16(3242LLU,3251LLU,1LLU),_1dc4e2e71_Range16(3253LLU,3257LLU,1LLU),_1dc4e2e71_Range16(3261LLU,3293LLU,32LLU),_1dc4e2e71_Range16(3294LLU,3296LLU,2LLU),_1dc4e2e71_Range16(3297LLU,3313LLU,16LLU),_1dc4e2e71_Range16(3314LLU,3332LLU,18LLU),_1dc4e2e71_Range16(3333LLU,3340LLU,1LLU),_1dc4e2e71_Range16(3342LLU,3344LLU,1LLU),_1dc4e2e71_Range16(3346LLU,3386LLU,1LLU),_1dc4e2e71_Range16(3389LLU,3406LLU,17LLU),_1dc4e2e71_Range16(3412LLU,3414LLU,1LLU),_1dc4e2e71_Range16(3423LLU,3425LLU,1LLU),_1dc4e2e71_Range16(3450LLU,3455LLU,1LLU),_1dc4e2e71_Range16(3461LLU,3478LLU,1LLU),_1dc4e2e71_Range16(3482LLU,3505LLU,1LLU),_1dc4e2e71_Range16(3507LLU,3515LLU,1LLU),_1dc4e2e71_Range16(3517LLU,3520LLU,3LLU),_1dc4e2e71_Range16(3521LLU,3526LLU,1LLU),_1dc4e2e71_Range16(3585LLU,3632LLU,1LLU),_1dc4e2e71_Range16(3634LLU,3635LLU,1LLU),_1dc4e2e71_Range16(3648LLU,3654LLU,1LLU),_1dc4e2e71_Range16(3713LLU,3714LLU,1LLU),_1dc4e2e71_Range16(3716LLU,3718LLU,2LLU),_1dc4e2e71_Range16(3719LLU,3722LLU,1LLU),_1dc4e2e71_Range16(3724LLU,3747LLU,1LLU),_1dc4e2e71_Range16(3749LLU,3751LLU,2LLU),_1dc4e2e71_Range16(3752LLU,3760LLU,1LLU),_1dc4e2e71_Range16(3762LLU,3763LLU,1LLU),_1dc4e2e71_Range16(3773LLU,3776LLU,3LLU),_1dc4e2e71_Range16(3777LLU,3780LLU,1LLU),_1dc4e2e71_Range16(3782LLU,3804LLU,22LLU),_1dc4e2e71_Range16(3805LLU,3807LLU,1LLU),_1dc4e2e71_Range16(3840LLU,3904LLU,64LLU),_1dc4e2e71_Range16(3905LLU,3911LLU,1LLU),_1dc4e2e71_Range16(3913LLU,3948LLU,1LLU),_1dc4e2e71_Range16(3976LLU,3980LLU,1LLU),_1dc4e2e71_Range16(4096LLU,4138LLU,1LLU),_1dc4e2e71_Range16(4159LLU,4176LLU,17LLU),_1dc4e2e71_Range16(4177LLU,4181LLU,1LLU),_1dc4e2e71_Range16(4186LLU,4189LLU,1LLU),_1dc4e2e71_Range16(4193LLU,4197LLU,4LLU),_1dc4e2e71_Range16(4198LLU,4206LLU,8LLU),_1dc4e2e71_Range16(4207LLU,4208LLU,1LLU),_1dc4e2e71_Range16(4213LLU,4225LLU,1LLU),_1dc4e2e71_Range16(4238LLU,4256LLU,18LLU),_1dc4e2e71_Range16(4257LLU,4293LLU,1LLU),_1dc4e2e71_Range16(4295LLU,4301LLU,6LLU),_1dc4e2e71_Range16(4304LLU,4346LLU,1LLU),_1dc4e2e71_Range16(4348LLU,4680LLU,1LLU),_1dc4e2e71_Range16(4682LLU,4685LLU,1LLU),_1dc4e2e71_Range16(4688LLU,4694LLU,1LLU),_1dc4e2e71_Range16(4696LLU,4698LLU,2LLU),_1dc4e2e71_Range16(4699LLU,4701LLU,1LLU),_1dc4e2e71_Range16(4704LLU,4744LLU,1LLU),_1dc4e2e71_Range16(4746LLU,4749LLU,1LLU),_1dc4e2e71_Range16(4752LLU,4784LLU,1LLU),_1dc4e2e71_Range16(4786LLU,4789LLU,1LLU),_1dc4e2e71_Range16(4792LLU,4798LLU,1LLU),_1dc4e2e71_Range16(4800LLU,4802LLU,2LLU),_1dc4e2e71_Range16(4803LLU,4805LLU,1LLU),_1dc4e2e71_Range16(4808LLU,4822LLU,1LLU),_1dc4e2e71_Range16(4824LLU,4880LLU,1LLU),_1dc4e2e71_Range16(4882LLU,4885LLU,1LLU),_1dc4e2e71_Range16(4888LLU,4954LLU,1LLU),_1dc4e2e71_Range16(4992LLU,5007LLU,1LLU),_1dc4e2e71_Range16(5024LLU,5109LLU,1LLU),_1dc4e2e71_Range16(5112LLU,5117LLU,1LLU),_1dc4e2e71_Range16(5121LLU,5740LLU,1LLU),_1dc4e2e71_Range16(5743LLU,5759LLU,1LLU),_1dc4e2e71_Range16(5761LLU,5786LLU,1LLU),_1dc4e2e71_Range16(5792LLU,5866LLU,1LLU),_1dc4e2e71_Range16(5873LLU,5880LLU,1LLU),_1dc4e2e71_Range16(5888LLU,5905LLU,1LLU),_1dc4e2e71_Range16(5919LLU,5937LLU,1LLU),_1dc4e2e71_Range16(5952LLU,5969LLU,1LLU),_1dc4e2e71_Range16(5984LLU,5996LLU,1LLU),_1dc4e2e71_Range16(5998LLU,6000LLU,1LLU),_1dc4e2e71_Range16(6016LLU,6067LLU,1LLU),_1dc4e2e71_Range16(6103LLU,6108LLU,5LLU),_1dc4e2e71_Range16(6176LLU,6264LLU,1LLU),_1dc4e2e71_Range16(6272LLU,6276LLU,1LLU),_1dc4e2e71_Range16(6279LLU,6312LLU,1LLU),_1dc4e2e71_Range16(6314LLU,6320LLU,6LLU),_1dc4e2e71_Range16(6321LLU,6389LLU,1LLU),_1dc4e2e71_Range16(6400LLU,6430LLU,1LLU),_1dc4e2e71_Range16(6480LLU,6509LLU,1LLU),_1dc4e2e71_Range16(6512LLU,6516LLU,1LLU),_1dc4e2e71_Range16(6528LLU,6571LLU,1LLU),_1dc4e2e71_Range16(6576LLU,6601LLU,1LLU),_1dc4e2e71_Range16(6656LLU,6678LLU,1LLU),_1dc4e2e71_Range16(6688LLU,6740LLU,1LLU),_1dc4e2e71_Range16(6823LLU,6917LLU,94LLU),_1dc4e2e71_Range16(6918LLU,6963LLU,1LLU),_1dc4e2e71_Range16(6981LLU,6988LLU,1LLU),_1dc4e2e71_Range16(7043LLU,7072LLU,1LLU),_1dc4e2e71_Range16(7086LLU,7087LLU,1LLU),_1dc4e2e71_Range16(7098LLU,7141LLU,1LLU),_1dc4e2e71_Range16(7168LLU,7203LLU,1LLU),_1dc4e2e71_Range16(7245LLU,7247LLU,1LLU),_1dc4e2e71_Range16(7258LLU,7293LLU,1LLU),_1dc4e2e71_Range16(7296LLU,7304LLU,1LLU),_1dc4e2e71_Range16(7312LLU,7354LLU,1LLU),_1dc4e2e71_Range16(7357LLU,7359LLU,1LLU),_1dc4e2e71_Range16(7401LLU,7404LLU,1LLU),_1dc4e2e71_Range16(7406LLU,7411LLU,1LLU),_1dc4e2e71_Range16(7413LLU,7414LLU,1LLU),_1dc4e2e71_Range16(7418LLU,7424LLU,6LLU),_1dc4e2e71_Range16(7425LLU,7615LLU,1LLU),_1dc4e2e71_Range16(7680LLU,7957LLU,1LLU),_1dc4e2e71_Range16(7960LLU,7965LLU,1LLU),_1dc4e2e71_Range16(7968LLU,8005LLU,1LLU),_1dc4e2e71_Range16(8008LLU,8013LLU,1LLU),_1dc4e2e71_Range16(8016LLU,8023LLU,1LLU),_1dc4e2e71_Range16(8025LLU,8031LLU,2LLU),_1dc4e2e71_Range16(8032LLU,8061LLU,1LLU),_1dc4e2e71_Range16(8064LLU,8116LLU,1LLU),_1dc4e2e71_Range16(8118LLU,8124LLU,1LLU),_1dc4e2e71_Range16(8126LLU,8130LLU,4LLU),_1dc4e2e71_Range16(8131LLU,8132LLU,1LLU),_1dc4e2e71_Range16(8134LLU,8140LLU,1LLU),_1dc4e2e71_Range16(8144LLU,8147LLU,1LLU),_1dc4e2e71_Range16(8150LLU,8155LLU,1LLU),_1dc4e2e71_Range16(8160LLU,8172LLU,1LLU),_1dc4e2e71_Range16(8178LLU,8180LLU,1LLU),_1dc4e2e71_Range16(8182LLU,8188LLU,1LLU),_1dc4e2e71_Range16(8305LLU,8319LLU,14LLU),_1dc4e2e71_Range16(8336LLU,8348LLU,1LLU),_1dc4e2e71_Range16(8450LLU,8455LLU,5LLU),_1dc4e2e71_Range16(8458LLU,8467LLU,1LLU),_1dc4e2e71_Range16(8469LLU,8473LLU,4LLU),_1dc4e2e71_Range16(8474LLU,8477LLU,1LLU),_1dc4e2e71_Range16(8484LLU,8490LLU,2LLU),_1dc4e2e71_Range16(8491LLU,8493LLU,1LLU),_1dc4e2e71_Range16(8495LLU,8505LLU,1LLU),_1dc4e2e71_Range16(8508LLU,8511LLU,1LLU),_1dc4e2e71_Range16(8517LLU,8521LLU,1LLU),_1dc4e2e71_Range16(8526LLU,8579LLU,53LLU),_1dc4e2e71_Range16(8580LLU,11264LLU,2684LLU),_1dc4e2e71_Range16(11265LLU,11492LLU,1LLU),_1dc4e2e71_Range16(11499LLU,11502LLU,1LLU),_1dc4e2e71_Range16(11506LLU,11507LLU,1LLU),_1dc4e2e71_Range16(11520LLU,11557LLU,1LLU),_1dc4e2e71_Range16(11559LLU,11565LLU,6LLU),_1dc4e2e71_Range16(11568LLU,11623LLU,1LLU),_1dc4e2e71_Range16(11631LLU,11648LLU,17LLU),_1dc4e2e71_Range16(11649LLU,11670LLU,1LLU),_1dc4e2e71_Range16(11680LLU,11686LLU,1LLU),_1dc4e2e71_Range16(11688LLU,11694LLU,1LLU),_1dc4e2e71_Range16(11696LLU,11702LLU,1LLU),_1dc4e2e71_Range16(11704LLU,11710LLU,1LLU),_1dc4e2e71_Range16(11712LLU,11718LLU,1LLU),_1dc4e2e71_Range16(11720LLU,11726LLU,1LLU),_1dc4e2e71_Range16(11728LLU,11734LLU,1LLU),_1dc4e2e71_Range16(11736LLU,11742LLU,1LLU),_1dc4e2e71_Range16(11823LLU,12293LLU,470LLU),_1dc4e2e71_Range16(12294LLU,12337LLU,43LLU),_1dc4e2e71_Range16(12338LLU,12341LLU,1LLU),_1dc4e2e71_Range16(12347LLU,12348LLU,1LLU),_1dc4e2e71_Range16(12353LLU,12438LLU,1LLU),_1dc4e2e71_Range16(12445LLU,12447LLU,1LLU),_1dc4e2e71_Range16(12449LLU,12538LLU,1LLU),_1dc4e2e71_Range16(12540LLU,12543LLU,1LLU),_1dc4e2e71_Range16(12549LLU,12591LLU,1LLU),_1dc4e2e71_Range16(12593LLU,12686LLU,1LLU),_1dc4e2e71_Range16(12704LLU,12735LLU,1LLU),_1dc4e2e71_Range16(12784LLU,12799LLU,1LLU),_1dc4e2e71_Range16(13312LLU,19903LLU,1LLU),_1dc4e2e71_Range16(19968LLU,42124LLU,1LLU),_1dc4e2e71_Range16(42192LLU,42237LLU,1LLU),_1dc4e2e71_Range16(42240LLU,42508LLU,1LLU),_1dc4e2e71_Range16(42512LLU,42527LLU,1LLU),_1dc4e2e71_Range16(42538LLU,42539LLU,1LLU),_1dc4e2e71_Range16(42560LLU,42606LLU,1LLU),_1dc4e2e71_Range16(42623LLU,42653LLU,1LLU),_1dc4e2e71_Range16(42656LLU,42725LLU,1LLU),_1dc4e2e71_Range16(42775LLU,42783LLU,1LLU),_1dc4e2e71_Range16(42786LLU,42888LLU,1LLU),_1dc4e2e71_Range16(42891LLU,42954LLU,1LLU),_1dc4e2e71_Range16(42960LLU,42961LLU,1LLU),_1dc4e2e71_Range16(42963LLU,42965LLU,2LLU),_1dc4e2e71_Range16(42966LLU,42969LLU,1LLU),_1dc4e2e71_Range16(42994LLU,43009LLU,1LLU),_1dc4e2e71_Range16(43011LLU,43013LLU,1LLU),_1dc4e2e71_Range16(43015LLU,43018LLU,1LLU),_1dc4e2e71_Range16(43020LLU,43042LLU,1LLU),_1dc4e2e71_Range16(43072LLU,43123LLU,1LLU),_1dc4e2e71_Range16(43138LLU,43187LLU,1LLU),_1dc4e2e71_Range16(43250LLU,43255LLU,1LLU),_1dc4e2e71_Range16(43259LLU,43261LLU,2LLU),_1dc4e2e71_Range16(43262LLU,43274LLU,12LLU),_1dc4e2e71_Range16(43275LLU,43301LLU,1LLU),_1dc4e2e71_Range16(43312LLU,43334LLU,1LLU),_1dc4e2e71_Range16(43360LLU,43388LLU,1LLU),_1dc4e2e71_Range16(43396LLU,43442LLU,1LLU),_1dc4e2e71_Range16(43471LLU,43488LLU,17LLU),_1dc4e2e71_Range16(43489LLU,43492LLU,1LLU),_1dc4e2e71_Range16(43494LLU,43503LLU,1LLU),_1dc4e2e71_Range16(43514LLU,43518LLU,1LLU),_1dc4e2e71_Range16(43520LLU,43560LLU,1LLU),_1dc4e2e71_Range16(43584LLU,43586LLU,1LLU),_1dc4e2e71_Range16(43588LLU,43595LLU,1LLU),_1dc4e2e71_Range16(43616LLU,43638LLU,1LLU),_1dc4e2e71_Range16(43642LLU,43646LLU,4LLU),_1dc4e2e71_Range16(43647LLU,43695LLU,1LLU),_1dc4e2e71_Range16(43697LLU,43701LLU,4LLU),_1dc4e2e71_Range16(43702LLU,43705LLU,3LLU),_1dc4e2e71_Range16(43706LLU,43709LLU,1LLU),_1dc4e2e71_Range16(43712LLU,43714LLU,2LLU),_1dc4e2e71_Range16(43739LLU,43741LLU,1LLU),_1dc4e2e71_Range16(43744LLU,43754LLU,1LLU),_1dc4e2e71_Range16(43762LLU,43764LLU,1LLU),_1dc4e2e71_Range16(43777LLU,43782LLU,1LLU),_1dc4e2e71_Range16(43785LLU,43790LLU,1LLU),_1dc4e2e71_Range16(43793LLU,43798LLU,1LLU),_1dc4e2e71_Range16(43808LLU,43814LLU,1LLU),_1dc4e2e71_Range16(43816LLU,43822LLU,1LLU),_1dc4e2e71_Range16(43824LLU,43866LLU,1LLU),_1dc4e2e71_Range16(43868LLU,43881LLU,1LLU),_1dc4e2e71_Range16(43888LLU,44002LLU,1LLU),_1dc4e2e71_Range16(44032LLU,55203LLU,1LLU),_1dc4e2e71_Range16(55216LLU,55238LLU,1LLU),_1dc4e2e71_Range16(55243LLU,55291LLU,1LLU),_1dc4e2e71_Range16(63744LLU,64109LLU,1LLU),_1dc4e2e71_Range16(64112LLU,64217LLU,1LLU),_1dc4e2e71_Range16(64256LLU,64262LLU,1LLU),_1dc4e2e71_Range16(64275LLU,64279LLU,1LLU),_1dc4e2e71_Range16(64285LLU,64287LLU,2LLU),_1dc4e2e71_Range16(64288LLU,64296LLU,1LLU),_1dc4e2e71_Range16(64298LLU,64310LLU,1LLU),_1dc4e2e71_Range16(64312LLU,64316LLU,1LLU),_1dc4e2e71_Range16(64318LLU,64320LLU,2LLU),_1dc4e2e71_Range16(64321LLU,64323LLU,2LLU),_1dc4e2e71_Range16(64324LLU,64326LLU,2LLU),_1dc4e2e71_Range16(64327LLU,64433LLU,1LLU),_1dc4e2e71_Range16(64467LLU,64829LLU,1LLU),_1dc4e2e71_Range16(64848LLU,64911LLU,1LLU),_1dc4e2e71_Range16(64914LLU,64967LLU,1LLU),_1dc4e2e71_Range16(65008LLU,65019LLU,1LLU),_1dc4e2e71_Range16(65136LLU,65140LLU,1LLU),_1dc4e2e71_Range16(65142LLU,65276LLU,1LLU),_1dc4e2e71_Range16(65313LLU,65338LLU,1LLU),_1dc4e2e71_Range16(65345LLU,65370LLU,1LLU),_1dc4e2e71_Range16(65382LLU,65470LLU,1LLU),_1dc4e2e71_Range16(65474LLU,65479LLU,1LLU),_1dc4e2e71_Range16(65482LLU,65487LLU,1LLU),_1dc4e2e71_Range16(65490LLU,65495LLU,1LLU),_1dc4e2e71_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1dc4e2e71_Range32>({_1dc4e2e71_Range32(65536LLU,65547LLU,1LLU),_1dc4e2e71_Range32(65549LLU,65574LLU,1LLU),_1dc4e2e71_Range32(65576LLU,65594LLU,1LLU),_1dc4e2e71_Range32(65596LLU,65597LLU,1LLU),_1dc4e2e71_Range32(65599LLU,65613LLU,1LLU),_1dc4e2e71_Range32(65616LLU,65629LLU,1LLU),_1dc4e2e71_Range32(65664LLU,65786LLU,1LLU),_1dc4e2e71_Range32(66176LLU,66204LLU,1LLU),_1dc4e2e71_Range32(66208LLU,66256LLU,1LLU),_1dc4e2e71_Range32(66304LLU,66335LLU,1LLU),_1dc4e2e71_Range32(66349LLU,66368LLU,1LLU),_1dc4e2e71_Range32(66370LLU,66377LLU,1LLU),_1dc4e2e71_Range32(66384LLU,66421LLU,1LLU),_1dc4e2e71_Range32(66432LLU,66461LLU,1LLU),_1dc4e2e71_Range32(66464LLU,66499LLU,1LLU),_1dc4e2e71_Range32(66504LLU,66511LLU,1LLU),_1dc4e2e71_Range32(66560LLU,66717LLU,1LLU),_1dc4e2e71_Range32(66736LLU,66771LLU,1LLU),_1dc4e2e71_Range32(66776LLU,66811LLU,1LLU),_1dc4e2e71_Range32(66816LLU,66855LLU,1LLU),_1dc4e2e71_Range32(66864LLU,66915LLU,1LLU),_1dc4e2e71_Range32(66928LLU,66938LLU,1LLU),_1dc4e2e71_Range32(66940LLU,66954LLU,1LLU),_1dc4e2e71_Range32(66956LLU,66962LLU,1LLU),_1dc4e2e71_Range32(66964LLU,66965LLU,1LLU),_1dc4e2e71_Range32(66967LLU,66977LLU,1LLU),_1dc4e2e71_Range32(66979LLU,66993LLU,1LLU),_1dc4e2e71_Range32(66995LLU,67001LLU,1LLU),_1dc4e2e71_Range32(67003LLU,67004LLU,1LLU),_1dc4e2e71_Range32(67072LLU,67382LLU,1LLU),_1dc4e2e71_Range32(67392LLU,67413LLU,1LLU),_1dc4e2e71_Range32(67424LLU,67431LLU,1LLU),_1dc4e2e71_Range32(67456LLU,67461LLU,1LLU),_1dc4e2e71_Range32(67463LLU,67504LLU,1LLU),_1dc4e2e71_Range32(67506LLU,67514LLU,1LLU),_1dc4e2e71_Range32(67584LLU,67589LLU,1LLU),_1dc4e2e71_Range32(67592LLU,67594LLU,2LLU),_1dc4e2e71_Range32(67595LLU,67637LLU,1LLU),_1dc4e2e71_Range32(67639LLU,67640LLU,1LLU),_1dc4e2e71_Range32(67644LLU,67647LLU,3LLU),_1dc4e2e71_Range32(67648LLU,67669LLU,1LLU),_1dc4e2e71_Range32(67680LLU,67702LLU,1LLU),_1dc4e2e71_Range32(67712LLU,67742LLU,1LLU),_1dc4e2e71_Range32(67808LLU,67826LLU,1LLU),_1dc4e2e71_Range32(67828LLU,67829LLU,1LLU),_1dc4e2e71_Range32(67840LLU,67861LLU,1LLU),_1dc4e2e71_Range32(67872LLU,67897LLU,1LLU),_1dc4e2e71_Range32(67968LLU,68023LLU,1LLU),_1dc4e2e71_Range32(68030LLU,68031LLU,1LLU),_1dc4e2e71_Range32(68096LLU,68112LLU,16LLU),_1dc4e2e71_Range32(68113LLU,68115LLU,1LLU),_1dc4e2e71_Range32(68117LLU,68119LLU,1LLU),_1dc4e2e71_Range32(68121LLU,68149LLU,1LLU),_1dc4e2e71_Range32(68192LLU,68220LLU,1LLU),_1dc4e2e71_Range32(68224LLU,68252LLU,1LLU),_1dc4e2e71_Range32(68288LLU,68295LLU,1LLU),_1dc4e2e71_Range32(68297LLU,68324LLU,1LLU),_1dc4e2e71_Range32(68352LLU,68405LLU,1LLU),_1dc4e2e71_Range32(68416LLU,68437LLU,1LLU),_1dc4e2e71_Range32(68448LLU,68466LLU,1LLU),_1dc4e2e71_Range32(68480LLU,68497LLU,1LLU),_1dc4e2e71_Range32(68608LLU,68680LLU,1LLU),_1dc4e2e71_Range32(68736LLU,68786LLU,1LLU),_1dc4e2e71_Range32(68800LLU,68850LLU,1LLU),_1dc4e2e71_Range32(68864LLU,68899LLU,1LLU),_1dc4e2e71_Range32(69248LLU,69289LLU,1LLU),_1dc4e2e71_Range32(69296LLU,69297LLU,1LLU),_1dc4e2e71_Range32(69376LLU,69404LLU,1LLU),_1dc4e2e71_Range32(69415LLU,69424LLU,9LLU),_1dc4e2e71_Range32(69425LLU,69445LLU,1LLU),_1dc4e2e71_Range32(69488LLU,69505LLU,1LLU),_1dc4e2e71_Range32(69552LLU,69572LLU,1LLU),_1dc4e2e71_Range32(69600LLU,69622LLU,1LLU),_1dc4e2e71_Range32(69635LLU,69687LLU,1LLU),_1dc4e2e71_Range32(69745LLU,69746LLU,1LLU),_1dc4e2e71_Range32(69749LLU,69763LLU,14LLU),_1dc4e2e71_Range32(69764LLU,69807LLU,1LLU),_1dc4e2e71_Range32(69840LLU,69864LLU,1LLU),_1dc4e2e71_Range32(69891LLU,69926LLU,1LLU),_1dc4e2e71_Range32(69956LLU,69959LLU,3LLU),_1dc4e2e71_Range32(69968LLU,70002LLU,1LLU),_1dc4e2e71_Range32(70006LLU,70019LLU,13LLU),_1dc4e2e71_Range32(70020LLU,70066LLU,1LLU),_1dc4e2e71_Range32(70081LLU,70084LLU,1LLU),_1dc4e2e71_Range32(70106LLU,70108LLU,2LLU),_1dc4e2e71_Range32(70144LLU,70161LLU,1LLU),_1dc4e2e71_Range32(70163LLU,70187LLU,1LLU),_1dc4e2e71_Range32(70207LLU,70208LLU,1LLU),_1dc4e2e71_Range32(70272LLU,70278LLU,1LLU),_1dc4e2e71_Range32(70280LLU,70282LLU,2LLU),_1dc4e2e71_Range32(70283LLU,70285LLU,1LLU),_1dc4e2e71_Range32(70287LLU,70301LLU,1LLU),_1dc4e2e71_Range32(70303LLU,70312LLU,1LLU),_1dc4e2e71_Range32(70320LLU,70366LLU,1LLU),_1dc4e2e71_Range32(70405LLU,70412LLU,1LLU),_1dc4e2e71_Range32(70415LLU,70416LLU,1LLU),_1dc4e2e71_Range32(70419LLU,70440LLU,1LLU),_1dc4e2e71_Range32(70442LLU,70448LLU,1LLU),_1dc4e2e71_Range32(70450LLU,70451LLU,1LLU),_1dc4e2e71_Range32(70453LLU,70457LLU,1LLU),_1dc4e2e71_Range32(70461LLU,70480LLU,19LLU),_1dc4e2e71_Range32(70493LLU,70497LLU,1LLU),_1dc4e2e71_Range32(70656LLU,70708LLU,1LLU),_1dc4e2e71_Range32(70727LLU,70730LLU,1LLU),_1dc4e2e71_Range32(70751LLU,70753LLU,1LLU),_1dc4e2e71_Range32(70784LLU,70831LLU,1LLU),_1dc4e2e71_Range32(70852LLU,70853LLU,1LLU),_1dc4e2e71_Range32(70855LLU,71040LLU,185LLU),_1dc4e2e71_Range32(71041LLU,71086LLU,1LLU),_1dc4e2e71_Range32(71128LLU,71131LLU,1LLU),_1dc4e2e71_Range32(71168LLU,71215LLU,1LLU),_1dc4e2e71_Range32(71236LLU,71296LLU,60LLU),_1dc4e2e71_Range32(71297LLU,71338LLU,1LLU),_1dc4e2e71_Range32(71352LLU,71424LLU,72LLU),_1dc4e2e71_Range32(71425LLU,71450LLU,1LLU),_1dc4e2e71_Range32(71488LLU,71494LLU,1LLU),_1dc4e2e71_Range32(71680LLU,71723LLU,1LLU),_1dc4e2e71_Range32(71840LLU,71903LLU,1LLU),_1dc4e2e71_Range32(71935LLU,71942LLU,1LLU),_1dc4e2e71_Range32(71945LLU,71948LLU,3LLU),_1dc4e2e71_Range32(71949LLU,71955LLU,1LLU),_1dc4e2e71_Range32(71957LLU,71958LLU,1LLU),_1dc4e2e71_Range32(71960LLU,71983LLU,1LLU),_1dc4e2e71_Range32(71999LLU,72001LLU,2LLU),_1dc4e2e71_Range32(72096LLU,72103LLU,1LLU),_1dc4e2e71_Range32(72106LLU,72144LLU,1LLU),_1dc4e2e71_Range32(72161LLU,72163LLU,2LLU),_1dc4e2e71_Range32(72192LLU,72203LLU,11LLU),_1dc4e2e71_Range32(72204LLU,72242LLU,1LLU),_1dc4e2e71_Range32(72250LLU,72272LLU,22LLU),_1dc4e2e71_Range32(72284LLU,72329LLU,1LLU),_1dc4e2e71_Range32(72349LLU,72368LLU,19LLU),_1dc4e2e71_Range32(72369LLU,72440LLU,1LLU),_1dc4e2e71_Range32(72704LLU,72712LLU,1LLU),_1dc4e2e71_Range32(72714LLU,72750LLU,1LLU),_1dc4e2e71_Range32(72768LLU,72818LLU,50LLU),_1dc4e2e71_Range32(72819LLU,72847LLU,1LLU),_1dc4e2e71_Range32(72960LLU,72966LLU,1LLU),_1dc4e2e71_Range32(72968LLU,72969LLU,1LLU),_1dc4e2e71_Range32(72971LLU,73008LLU,1LLU),_1dc4e2e71_Range32(73030LLU,73056LLU,26LLU),_1dc4e2e71_Range32(73057LLU,73061LLU,1LLU),_1dc4e2e71_Range32(73063LLU,73064LLU,1LLU),_1dc4e2e71_Range32(73066LLU,73097LLU,1LLU),_1dc4e2e71_Range32(73112LLU,73440LLU,328LLU),_1dc4e2e71_Range32(73441LLU,73458LLU,1LLU),_1dc4e2e71_Range32(73474LLU,73476LLU,2LLU),_1dc4e2e71_Range32(73477LLU,73488LLU,1LLU),_1dc4e2e71_Range32(73490LLU,73523LLU,1LLU),_1dc4e2e71_Range32(73648LLU,73728LLU,80LLU),_1dc4e2e71_Range32(73729LLU,74649LLU,1LLU),_1dc4e2e71_Range32(74880LLU,75075LLU,1LLU),_1dc4e2e71_Range32(77712LLU,77808LLU,1LLU),_1dc4e2e71_Range32(77824LLU,78895LLU,1LLU),_1dc4e2e71_Range32(78913LLU,78918LLU,1LLU),_1dc4e2e71_Range32(82944LLU,83526LLU,1LLU),_1dc4e2e71_Range32(92160LLU,92728LLU,1LLU),_1dc4e2e71_Range32(92736LLU,92766LLU,1LLU),_1dc4e2e71_Range32(92784LLU,92862LLU,1LLU),_1dc4e2e71_Range32(92880LLU,92909LLU,1LLU),_1dc4e2e71_Range32(92928LLU,92975LLU,1LLU),_1dc4e2e71_Range32(92992LLU,92995LLU,1LLU),_1dc4e2e71_Range32(93027LLU,93047LLU,1LLU),_1dc4e2e71_Range32(93053LLU,93071LLU,1LLU),_1dc4e2e71_Range32(93760LLU,93823LLU,1LLU),_1dc4e2e71_Range32(93952LLU,94026LLU,1LLU),_1dc4e2e71_Range32(94032LLU,94099LLU,67LLU),_1dc4e2e71_Range32(94100LLU,94111LLU,1LLU),_1dc4e2e71_Range32(94176LLU,94177LLU,1LLU),_1dc4e2e71_Range32(94179LLU,94208LLU,29LLU),_1dc4e2e71_Range32(94209LLU,100343LLU,1LLU),_1dc4e2e71_Range32(100352LLU,101589LLU,1LLU),_1dc4e2e71_Range32(101632LLU,101640LLU,1LLU),_1dc4e2e71_Range32(110576LLU,110579LLU,1LLU),_1dc4e2e71_Range32(110581LLU,110587LLU,1LLU),_1dc4e2e71_Range32(110589LLU,110590LLU,1LLU),_1dc4e2e71_Range32(110592LLU,110882LLU,1LLU),_1dc4e2e71_Range32(110898LLU,110928LLU,30LLU),_1dc4e2e71_Range32(110929LLU,110930LLU,1LLU),_1dc4e2e71_Range32(110933LLU,110948LLU,15LLU),_1dc4e2e71_Range32(110949LLU,110951LLU,1LLU),_1dc4e2e71_Range32(110960LLU,111355LLU,1LLU),_1dc4e2e71_Range32(113664LLU,113770LLU,1LLU),_1dc4e2e71_Range32(113776LLU,113788LLU,1LLU),_1dc4e2e71_Range32(113792LLU,113800LLU,1LLU),_1dc4e2e71_Range32(113808LLU,113817LLU,1LLU),_1dc4e2e71_Range32(119808LLU,119892LLU,1LLU),_1dc4e2e71_Range32(119894LLU,119964LLU,1LLU),_1dc4e2e71_Range32(119966LLU,119967LLU,1LLU),_1dc4e2e71_Range32(119970LLU,119973LLU,3LLU),_1dc4e2e71_Range32(119974LLU,119977LLU,3LLU),_1dc4e2e71_Range32(119978LLU,119980LLU,1LLU),_1dc4e2e71_Range32(119982LLU,119993LLU,1LLU),_1dc4e2e71_Range32(119995LLU,119997LLU,2LLU),_1dc4e2e71_Range32(119998LLU,120003LLU,1LLU),_1dc4e2e71_Range32(120005LLU,120069LLU,1LLU),_1dc4e2e71_Range32(120071LLU,120074LLU,1LLU),_1dc4e2e71_Range32(120077LLU,120084LLU,1LLU),_1dc4e2e71_Range32(120086LLU,120092LLU,1LLU),_1dc4e2e71_Range32(120094LLU,120121LLU,1LLU),_1dc4e2e71_Range32(120123LLU,120126LLU,1LLU),_1dc4e2e71_Range32(120128LLU,120132LLU,1LLU),_1dc4e2e71_Range32(120134LLU,120138LLU,4LLU),_1dc4e2e71_Range32(120139LLU,120144LLU,1LLU),_1dc4e2e71_Range32(120146LLU,120485LLU,1LLU),_1dc4e2e71_Range32(120488LLU,120512LLU,1LLU),_1dc4e2e71_Range32(120514LLU,120538LLU,1LLU),_1dc4e2e71_Range32(120540LLU,120570LLU,1LLU),_1dc4e2e71_Range32(120572LLU,120596LLU,1LLU),_1dc4e2e71_Range32(120598LLU,120628LLU,1LLU),_1dc4e2e71_Range32(120630LLU,120654LLU,1LLU),_1dc4e2e71_Range32(120656LLU,120686LLU,1LLU),_1dc4e2e71_Range32(120688LLU,120712LLU,1LLU),_1dc4e2e71_Range32(120714LLU,120744LLU,1LLU),_1dc4e2e71_Range32(120746LLU,120770LLU,1LLU),_1dc4e2e71_Range32(120772LLU,120779LLU,1LLU),_1dc4e2e71_Range32(122624LLU,122654LLU,1LLU),_1dc4e2e71_Range32(122661LLU,122666LLU,1LLU),_1dc4e2e71_Range32(122928LLU,122989LLU,1LLU),_1dc4e2e71_Range32(123136LLU,123180LLU,1LLU),_1dc4e2e71_Range32(123191LLU,123197LLU,1LLU),_1dc4e2e71_Range32(123214LLU,123536LLU,322LLU),_1dc4e2e71_Range32(123537LLU,123565LLU,1LLU),_1dc4e2e71_Range32(123584LLU,123627LLU,1LLU),_1dc4e2e71_Range32(124112LLU,124139LLU,1LLU),_1dc4e2e71_Range32(124896LLU,124902LLU,1LLU),_1dc4e2e71_Range32(124904LLU,124907LLU,1LLU),_1dc4e2e71_Range32(124909LLU,124910LLU,1LLU),_1dc4e2e71_Range32(124912LLU,124926LLU,1LLU),_1dc4e2e71_Range32(124928LLU,125124LLU,1LLU),_1dc4e2e71_Range32(125184LLU,125251LLU,1LLU),_1dc4e2e71_Range32(125259LLU,126464LLU,1205LLU),_1dc4e2e71_Range32(126465LLU,126467LLU,1LLU),_1dc4e2e71_Range32(126469LLU,126495LLU,1LLU),_1dc4e2e71_Range32(126497LLU,126498LLU,1LLU),_1dc4e2e71_Range32(126500LLU,126503LLU,3LLU),_1dc4e2e71_Range32(126505LLU,126514LLU,1LLU),_1dc4e2e71_Range32(126516LLU,126519LLU,1LLU),_1dc4e2e71_Range32(126521LLU,126523LLU,2LLU),_1dc4e2e71_Range32(126530LLU,126535LLU,5LLU),_1dc4e2e71_Range32(126537LLU,126541LLU,2LLU),_1dc4e2e71_Range32(126542LLU,126543LLU,1LLU),_1dc4e2e71_Range32(126545LLU,126546LLU,1LLU),_1dc4e2e71_Range32(126548LLU,126551LLU,3LLU),_1dc4e2e71_Range32(126553LLU,126561LLU,2LLU),_1dc4e2e71_Range32(126562LLU,126564LLU,2LLU),_1dc4e2e71_Range32(126567LLU,126570LLU,1LLU),_1dc4e2e71_Range32(126572LLU,126578LLU,1LLU),_1dc4e2e71_Range32(126580LLU,126583LLU,1LLU),_1dc4e2e71_Range32(126585LLU,126588LLU,1LLU),_1dc4e2e71_Range32(126590LLU,126592LLU,2LLU),_1dc4e2e71_Range32(126593LLU,126601LLU,1LLU),_1dc4e2e71_Range32(126603LLU,126619LLU,1LLU),_1dc4e2e71_Range32(126625LLU,126627LLU,1LLU),_1dc4e2e71_Range32(126629LLU,126633LLU,1LLU),_1dc4e2e71_Range32(126635LLU,126651LLU,1LLU),_1dc4e2e71_Range32(131072LLU,173791LLU,1LLU),_1dc4e2e71_Range32(173824LLU,177977LLU,1LLU),_1dc4e2e71_Range32(177984LLU,178205LLU,1LLU),_1dc4e2e71_Range32(178208LLU,183969LLU,1LLU),_1dc4e2e71_Range32(183984LLU,191456LLU,1LLU),_1dc4e2e71_Range32(194560LLU,195101LLU,1LLU),_1dc4e2e71_Range32(196608LLU,201546LLU,1LLU),_1dc4e2e71_Range32(201552LLU,205743LLU,1LLU)}),6LL));
	_1dc4ddcb3_LETTER = _1dc4ddcb3__L;
	_1dc4ddcb3__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
	_1db676578_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
	_1db676578_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
	_1db676578_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
	_1db6462e5_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
	_1db6462e5_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
	_1db841039_PATH_STDLIB = jule::Str();
	_1db841039_PATH_EXEC = jule::Str();
	_1db841039_PATH_WD = jule::Str();
	_1db841039_PATH_API = jule::Str();
	_1dd05db0c_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
	_1dd05db0c_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
	_1dd05db0c_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
	_1dd05db0c_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
	_1dd05db0c_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
	_1dd0ed32d_KEYWORDS = jule::Array<_1dd0ed32d_KindPair,47>({_1dd0ed32d_KindPair(jule::Str("i8", 2),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("i16", 3),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("i32", 3),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("i64", 3),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("u8", 2),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("u16", 3),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("u32", 3),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("u64", 3),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("f32", 3),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("f64", 3),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("uint", 4),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("int", 3),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("uintptr", 7),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("bool", 4),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("str", 3),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("any", 3),static_cast<jule::Uint>(1LLU)),_1dd0ed32d_KindPair(jule::Str("true", 4),static_cast<jule::Uint>(6LLU)),_1dd0ed32d_KindPair(jule::Str("false", 5),static_cast<jule::Uint>(6LLU)),_1dd0ed32d_KindPair(jule::Str("nil", 3),static_cast<jule::Uint>(6LLU)),_1dd0ed32d_KindPair(jule::Str("const", 5),static_cast<jule::Uint>(9LLU)),_1dd0ed32d_KindPair(jule::Str("ret", 3),static_cast<jule::Uint>(4LLU)),_1dd0ed32d_KindPair(jule::Str("type", 4),static_cast<jule::Uint>(10LLU)),_1dd0ed32d_KindPair(jule::Str("for", 3),static_cast<jule::Uint>(12LLU)),_1dd0ed32d_KindPair(jule::Str("break", 5),static_cast<jule::Uint>(13LLU)),_1dd0ed32d_KindPair(jule::Str("continue", 8),static_cast<jule::Uint>(14LLU)),_1dd0ed32d_KindPair(jule::Str("in", 2),static_cast<jule::Uint>(15LLU)),_1dd0ed32d_KindPair(jule::Str("if", 2),static_cast<jule::Uint>(16LLU)),_1dd0ed32d_KindPair(jule::Str("else", 4),static_cast<jule::Uint>(17LLU)),_1dd0ed32d_KindPair(jule::Str("use", 3),static_cast<jule::Uint>(19LLU)),_1dd0ed32d_KindPair(jule::Str("pub", 3),static_cast<jule::Uint>(21LLU)),_1dd0ed32d_KindPair(jule::Str("goto", 4),static_cast<jule::Uint>(22LLU)),_1dd0ed32d_KindPair(jule::Str("enum", 4),static_cast<jule::Uint>(24LLU)),_1dd0ed32d_KindPair(jule::Str("struct", 6),static_cast<jule::Uint>(25LLU)),_1dd0ed32d_KindPair(jule::Str("co", 2),static_cast<jule::Uint>(26LLU)),_1dd0ed32d_KindPair(jule::Str("match", 5),static_cast<jule::Uint>(27LLU)),_1dd0ed32d_KindPair(jule::Str("self", 4),static_cast<jule::Uint>(28LLU)),_1dd0ed32d_KindPair(jule::Str("trait", 5),static_cast<jule::Uint>(29LLU)),_1dd0ed32d_KindPair(jule::Str("impl", 4),static_cast<jule::Uint>(30LLU)),_1dd0ed32d_KindPair(jule::Str("cpp", 3),static_cast<jule::Uint>(31LLU)),_1dd0ed32d_KindPair(jule::Str("fall", 4),static_cast<jule::Uint>(32LLU)),_1dd0ed32d_KindPair(jule::Str("fn", 2),static_cast<jule::Uint>(33LLU)),_1dd0ed32d_KindPair(jule::Str("let", 3),static_cast<jule::Uint>(34LLU)),_1dd0ed32d_KindPair(jule::Str("unsafe", 6),static_cast<jule::Uint>(35LLU)),_1dd0ed32d_KindPair(jule::Str("mut", 3),static_cast<jule::Uint>(36LLU)),_1dd0ed32d_KindPair(jule::Str("defer", 5),static_cast<jule::Uint>(37LLU)),_1dd0ed32d_KindPair(jule::Str("static", 6),static_cast<jule::Uint>(38LLU)),_1dd0ed32d_KindPair(jule::Str("error", 5),static_cast<jule::Uint>(40LLU))});
	_1dd0ed32d_BASIC_OPS = jule::Array<_1dd0ed32d_KindPair,39>({_1dd0ed32d_KindPair(jule::Str("::", 2),static_cast<jule::Uint>(23LLU)),_1dd0ed32d_KindPair(jule::Str(":", 1),static_cast<jule::Uint>(11LLU)),_1dd0ed32d_KindPair(jule::Str(";", 1),static_cast<jule::Uint>(5LLU)),_1dd0ed32d_KindPair(jule::Str(",", 1),static_cast<jule::Uint>(8LLU)),_1dd0ed32d_KindPair(jule::Str("...", 3),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str(".", 1),static_cast<jule::Uint>(20LLU)),_1dd0ed32d_KindPair(jule::Str("+=", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("-=", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("*=", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("/=", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("%=", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("<<=", 3),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str(">>=", 3),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("^=", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("&=", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("|=", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("==", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("!=", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str(">=", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("<=", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("&&", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("||", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("<<", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str(">>", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("++", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("--", 2),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("+", 1),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("-", 1),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("*", 1),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("/", 1),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("%", 1),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("&", 1),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("|", 1),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("^", 1),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("!", 1),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("<", 1),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str(">", 1),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("=", 1),static_cast<jule::Uint>(7LLU)),_1dd0ed32d_KindPair(jule::Str("#", 1),static_cast<jule::Uint>(39LLU))});
	_1dd9bdadd_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
	_1dd9bdadd_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
	_1dd1ec6b3_F32_INFO = _1dd1ec6b3_FloatInfo(23LLU,8LLU,-127LL);
	_1dd1ec6b3_F64_INFO = _1dd1ec6b3_FloatInfo(52LLU,11LLU,-1023LL);
	_1dd203e28_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
	_1dd205b2d_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
	_1dd205b2d_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
	_1dd205b2d_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
	_1dd347577_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
	_1dd472b47_LEFTCHEATS = jule::Slice<_1dd472b47_LeftCheat>({_1dd472b47_LeftCheat(0LL,jule::Str()),_1dd472b47_LeftCheat(1LL,jule::Str("5", 1)),_1dd472b47_LeftCheat(1LL,jule::Str("25", 2)),_1dd472b47_LeftCheat(1LL,jule::Str("125", 3)),_1dd472b47_LeftCheat(2LL,jule::Str("625", 3)),_1dd472b47_LeftCheat(2LL,jule::Str("3125", 4)),_1dd472b47_LeftCheat(2LL,jule::Str("15625", 5)),_1dd472b47_LeftCheat(3LL,jule::Str("78125", 5)),_1dd472b47_LeftCheat(3LL,jule::Str("390625", 6)),_1dd472b47_LeftCheat(3LL,jule::Str("1953125", 7)),_1dd472b47_LeftCheat(4LL,jule::Str("9765625", 7)),_1dd472b47_LeftCheat(4LL,jule::Str("48828125", 8)),_1dd472b47_LeftCheat(4LL,jule::Str("244140625", 9)),_1dd472b47_LeftCheat(4LL,jule::Str("1220703125", 10)),_1dd472b47_LeftCheat(5LL,jule::Str("6103515625", 10)),_1dd472b47_LeftCheat(5LL,jule::Str("30517578125", 11)),_1dd472b47_LeftCheat(5LL,jule::Str("152587890625", 12)),_1dd472b47_LeftCheat(6LL,jule::Str("762939453125", 12)),_1dd472b47_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1dd472b47_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1dd472b47_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1dd472b47_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1dd472b47_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1dd472b47_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1dd472b47_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1dd472b47_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1dd472b47_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1dd472b47_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1dd472b47_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1dd472b47_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1dd472b47_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1dd472b47_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1dd472b47_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1dd472b47_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1dd472b47_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1dd472b47_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1dd472b47_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1dd472b47_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1dd472b47_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1dd472b47_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1dd472b47_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1dd472b47_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1dd472b47_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1dd472b47_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1dd472b47_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1dd472b47_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1dd472b47_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1dd472b47_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1dd472b47_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1dd472b47_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1dd472b47_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1dd472b47_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1dd472b47_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1dd472b47_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1dd472b47_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1dd472b47_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1dd472b47_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1dd472b47_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1dd472b47_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1dd472b47_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1dd472b47_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
	_1a634ca26_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_1a5e40a26_TypeAlias>(new( std::nothrow ) _1a5e40a26_TypeAlias(jule::Ptr<_1dd05c765_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1dd05db0c_Token(),jule::Str(),jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>()));
	_1a634ca26_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_1a5e40a26_TypeAlias>(new( std::nothrow ) _1a5e40a26_TypeAlias(jule::Ptr<_1dd05c765_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1dd05db0c_Token(),jule::Str(),jule::new_struct<_1a5e40a26_TypeSymbol>(new( std::nothrow ) _1a5e40a26_TypeSymbol(jule::Ptr<_1dd05c765_TypeDecl>(),jule::new_struct_ptr<_1a5e40a26_TypeKind>(new( std::nothrow ) _1a5e40a26_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1a5e40a26_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5e40a26_TypeAlias>>()));
	_1dd014068_VARS = nullptr;
	_1db67d74a_deads = nullptr;
	_1db67d74a_checking = nullptr;
	_1db67d74a_current = jule::Any(nullptr);
	_1db67d74a_main_current = jule::Any(nullptr);
	_1a69e4ba1_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
	_1db59dcca_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
	_1db5c40db_OUT_DIR = jule::Str("dist", 4);
	_1db5c40db_OUT_NAME = jule::Str("ir.cpp", 6);
	_1db5c40db_OUT = jule::Str();

	_1db841039_init();
	_1db5be0a3_init();
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}