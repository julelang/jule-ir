// Auto generated by JuleC.
// JuleC version: jule0.0.11 @master
// Date: 4/4/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>

struct _1a859deb7_Reader{};
struct _1a859e3e6_Writer{};
struct _1a859e9bd_WriterCloser{};
struct _1a85a021b_Stream{};
struct _1a8461be3_Importer{};
struct _1a850c7b6_Kind{};
struct _1a85260a4_Lookup{};
struct _1a8d8b331_CommonFlag{};
struct _20eb97070_accept_range;
struct _210bcc945_FoldPair;
struct _210bcce0c_CaseRange;
struct _210bcd380_Range16;
struct _210bcd847_Range32;
struct _210bcdcba_RangeTable;
struct _20ec88738_LazyBuff;
struct _20dd9e201_DirEntry;
struct _20eac0a9d_Directory;
struct _20eac0c8a_File;
struct _20eac0e77_Status;
struct _210c808a5_Cmd;
struct _210c3ee2a_Log;
struct _2110e7238_Token;
struct _2110ec628_File;
struct _2110ee6e6_KindPair;
struct _211105004_Lex;
struct _210eb3d6e_Ast;
struct _2110cc1c9_Node;
struct _210eb33e0_Directive;
struct _210e7e620_TypeDecl;
struct _210e7e80c_IdentTypeDecl;
struct _210e86c54_NamespaceTypeDecl;
struct _210e86e41_SptrTypeDecl;
struct _210e8712d_SlcTypeDecl;
struct _210e8731a_TupleTypeDecl;
struct _210e87507_PtrTypeDecl;
struct _210e876e4_ArrTypeDecl;
struct _210e878d1_MapTypeDecl;
struct _210e87abd_RetTypeDecl;
struct _210e87caa_Expr;
struct _211079907_UseExpr;
struct _211079ae4_TupleExpr;
struct _211109701_LitExpr;
struct _2111098dd_UnsafeExpr;
struct _211109aca_CoExpr;
struct _211109cb7_IdentExpr;
struct _211109ea4_UnaryExpr;
struct _21110a191_VariadicExpr;
struct _21110a37d_CastExpr;
struct _21110a56a_NsSelectionExpr;
struct _21110a757_SubIdentExpr;
struct _21110a944_BinopExpr;
struct _21110ab31_FnCallExpr;
struct _21110ad1d_FieldExprPair;
struct _21110b00a_StructLit;
struct _21110b1e7_BraceLit;
struct _21110b3d4_KeyValPair;
struct _21110b5c1_SliceExpr;
struct _2111094c0_IndexingExpr;
struct _21110bc31_SlicingExpr;
struct _21110be1d_GenericDecl;
struct _21110c10a_LabelSt;
struct _21110c2e7_GotoSt;
struct _21110c4d4_FallSt;
struct _21110c6c1_AssignLeft;
struct _21110c8ad_AssignSt;
struct _21110ca9a_ScopeTree;
struct _21110cc87_ParamDecl;
struct _21110ce74_FnDecl;
struct _21110d161_VarDecl;
struct _21110d34d_RetSt;
struct _21110d53a_Iter;
struct _21110d727_WhileKind;
struct _21110d914_RangeKind;
struct _21110db01_BreakSt;
struct _21110dcdd_ContSt;
struct _21110deca_If;
struct _21110e1b7_Else;
struct _21110e3a4_Conditional;
struct _21110e591_TypeAliasDecl;
struct _21110e77d_Case;
struct _21110e96a_MatchCase;
struct _21110eb57_UseDecl;
struct _21110ed44_EnumItemDecl;
struct _211110262_EnumDecl;
struct _211110c46_FieldDecl;
struct _2111115a4_StructDecl;
struct _211111bae_TraitDecl;
struct _2111122b9_Impl;
struct _21173e7a3_FileInfo;
struct _21173e990_PackageInfo;
struct _2117865db_Stmt;
struct _211786e16_ScopeParser;
struct _2117937d5_CallData;
struct _211794c37_ExprBuilder;
struct _2117a0061_AssignInfo;
struct _2117a3592_Parser;
struct _2117b3d88_TypeBuilder;
struct _1a808a6da_FloatInfo;
struct _1a6719101_DecimalSlice;
struct _1a83046ac_LeftCheat;
struct _1a8304899_Decimal;
struct _1a83a871c_Const;
struct _1a85995ab_FileStream;
struct _1a85a056d_ByteStream;
struct _1a85a2b14_Scanner;
struct _1b38b3d0a_Field;
struct _1b3963816_Operators;
struct _1b396462a_Struct;
struct _1b396694b_FieldIns;
struct _1b3968e15_OperandExprModel;
struct _1b39693cc_BinopExprModel;
struct _1b3969784_UnaryExprModel;
struct _1b3969b80_StructArgExprModel;
struct _1b396a037_StructLitExprModel;
struct _1b396a367_AllocStructLitExprModel;
struct _1b396a895_CastingExprModel;
struct _1b396b1c0_FnCallExprModel;
struct _1b396b577_SliceExprModel;
struct _1b396b9ea_IndexingExprModel;
struct _1b396bda2_AnonFnExprModel;
struct _1b396c259_KeyValPairExprModel;
struct _1b396c6cc_MapExprModel;
struct _1b396cc1b_SlicingExprModel;
struct _1b396d25a_TraitSubIdentExprModel;
struct _1b396d9ca_StructSubIdentExprModel;
struct _1b396de81_StructStaticIdentExprModel;
struct _1b396e327_ArrayExprModel;
struct _1b396e613_CommonIdentExprModel;
struct _1b396eb96_CommonSubIdentExprModel;
struct _1b396ee71_TupleExprModel;
struct _1b397036c_BuiltinOutCallExprModel;
struct _1b3970757_BuiltinOutlnCallExprModel;
struct _1b3970a76_BuiltinCloneCallExprModel;
struct _1b3970e61_BuiltinNewCallExprModel;
struct _1b397134b_BuiltinPanicCallExprModel;
struct _1b3971802_BuiltinAssertCallExprModel;
struct _1a5b2a568_BuiltinMakeCallExprModel;
struct _1a5b2a7bb_BuiltinAppendCallExprModel;
struct _1a5b2ab95_BuiltinErrorCallExprModel;
struct _1a5b2ae70_SizeofExprModel;
struct _1a5b2b5e1_AlignofExprModel;
struct _1a5b2b7cd_RuneExprModel;
struct _1a5b2bab9_IntegratedToStrExprModel;
struct _1a5b2be60_BackendEmitExprModel;
struct _1a5b2c24b_FreeExprModel;
struct _1a5b2cea5_RetType;
struct _1a5b2d67b_Param;
struct _1a5b2eeb8_Fn;
struct _1a5b322c8_ParamIns;
struct _1a5b33164_FnIns;
struct _1a5b36222_ReferenceStack;
struct _1a5b37586_Pass;
struct _1a5b3b139_SymbolBuilder;
struct _1a5e34531_Trait;
struct _1a8306406_EnumItem;
struct _1a83065e3_Enum;
struct _1a8306d30_Impl;
struct _1a8438e62_Scope;
struct _1a844085e_If;
struct _1a83da3db_Else;
struct _1a83da5c8_Conditional;
struct _1a83eb1ee_InfIter;
struct _1a83eb3db_WhileIter;
struct _1a83eb5c8_RangeIter;
struct _1a8429282_ContSt;
struct _1a842946e_BreakSt;
struct _1a844bb9a_Label;
struct _1a844bd87_GotoSt;
struct _1a844c074_Postfix;
struct _1a844c261_Assign;
struct _1a844c44d_MultiAssign;
struct _1a844c63a_Match;
struct _1a844ca58_Case;
struct _1a844cc45_FallSt;
struct _1a844ce32_RetSt;
struct _1a844d11e_ScopeLabel;
struct _1a844d30b_ScopeGoto;
struct _1a844d4e8_ScopeChecker;
struct _1a845d728_DirectiveChecker;
struct _1a8464058_ImportInfo;
struct _1a8466c1a_Package;
struct _1a846bc42_Sema;
struct _1a84845a6_MissingRetChecker;
struct _1a8486278_IterRelation;
struct _1a8487246_Var;
struct _1a8487c4c_FuncPattern;
struct _1a84b9c5c_TypeCompatibilityChecker;
struct _1a84baed3_AssignTypeChecker;
struct _1a84bc831_DynamicTypeAnnotation;
struct _1a84c05e2_FnCallArgChecker;
struct _1a84c2eeb_StructLitChecker;
struct _1a84c99d6_RangeChecker;
struct _1a84cbac6_RetTypeChecker;
struct _1a84cd7a9_SymbolTable;
struct _1a84d3869_Data;
struct _1a84d48e2_Value;
struct _1a84d53d7_Eval;
struct _1a8500017_UnaryEval;
struct _1a8501ca5_BinaryEval;
struct _1a850bead_TypeAlias;
struct _1a850cbe5_TypeKind;
struct _1a8511a84_TypeSymbol;
struct _1a8512447_Prim;
struct _1a8515956_Sptr;
struct _1a85163b3_Slc;
struct _1a8516da8_Tuple;
struct _1a8517969_Map;
struct _1a851855d_Arr;
struct _1a8518eba_Ptr;
struct _1a851b660_Referencer;
struct _1a851c2dc_TypeChecker;
struct _210ddd4d5_CompileInfo;
struct _210e3d733_DirectiveEval;
struct _1e552e218_JuleImporter;
struct _1a85aa875_OrderedDefines;
struct _1a85aaad9_DefineOrderer;
struct _1a85b1a9b_ScopeDeadCode;
struct _1a85d4c67_AnsiEscape;
struct _1a85d5e00_Logger;
struct _1a8cad9a1_UnsafeBinopExprModel;
struct _1a8cba815_UnsafeIndexingExprModel;
struct _1a8cbaa02_PushToSliceExprModel;
struct _1a8cbaded_MutSlicingExprModel;
struct _1a8cbb2e9_StrInsertBeginExprModel;
struct _1a8cbc6a2_ScopeOptimizer;
struct _1a8cc2d5b_ExprOptimizer;
struct _1a8cc9b76_Optimizer;
struct _1a8d4ab4d_AbsTime;
struct _1a8d4b324_Time;
struct _1a8d4d2e3_Duration;
struct _1a8bbc7b1_ScopeCoder;
struct _1a8b7e4cb_ExprCoder;
struct _1a8cd3894_DeriveCoder;
struct _1a8cd4e4a_TestCoder;
struct _1a8cd7612_IdentCoder;
struct _1a8d255a6_SerializationInfo;
struct _1a8d1409a_TraitHash;
struct _1a8d5696c_CustomType;
struct _1a8d57176_TypeCoder;
struct _1a8d8b650_Flag_0;
struct _1a8d8b650_Flag_1;
struct _1a8d8b650_Flag_2;
struct _1a8d8b650_Flag_3;
struct _1a8d8b650_Flag_4;
struct _1a8d8c73e_FlagSet;
struct _1b39672a9_StructIns;
struct _1a8d14287_ObjectCoder;
struct _1a85a8312_IR;
struct _1a8d8ee4a_ArgParser;
struct _20eb97070_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();


	_20eb97070_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_20eb97070_accept_range(void) = default;

	inline bool operator==(_20eb97070_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_20eb97070_accept_range _other) { return !this->operator==(_other); }


};
struct _210bcc945_FoldPair {
	jule::U16 _field_from = jule::U16();
	jule::U16 _field_to = jule::U16();


	_210bcc945_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_210bcc945_FoldPair(void) = default;

	inline bool operator==(_210bcc945_FoldPair _other) {
		return 
			this->_field_from == _other._field_from &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_210bcc945_FoldPair _other) { return !this->operator==(_other); }


};
struct _210bcce0c_CaseRange {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::Array<jule::I32,3> _field_delta = jule::Array<jule::I32,3>();


	_210bcce0c_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_210bcce0c_CaseRange(void) = default;

	inline bool operator==(_210bcce0c_CaseRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_delta == _other._field_delta;
	}

	inline bool operator!=(_210bcce0c_CaseRange _other) { return !this->operator==(_other); }


};
struct _210bcd380_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();


	_210bcd380_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_210bcd380_Range16(void) = default;

	inline bool operator==(_210bcd380_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_210bcd380_Range16 _other) { return !this->operator==(_other); }


};
struct _210bcd847_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();


	_210bcd847_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_210bcd847_Range32(void) = default;

	inline bool operator==(_210bcd847_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_210bcd847_Range32 _other) { return !this->operator==(_other); }


};
struct _210bcdcba_RangeTable {
	jule::Slice<_210bcd380_Range16> _field_r16 = jule::Slice<_210bcd380_Range16>();
	jule::Slice<_210bcd847_Range32> _field_r32 = jule::Slice<_210bcd847_Range32>();
	jule::I64 _field_latin_offset = jule::I64();


	_210bcdcba_RangeTable(jule::Slice<_210bcd380_Range16> __param_r16, jule::Slice<_210bcd847_Range32> __param_r32, jule::I64 __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_210bcdcba_RangeTable(void) = default;

	inline bool operator==(_210bcdcba_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_210bcdcba_RangeTable _other) { return !this->operator==(_other); }


};
inline jule::U8 _20ec8b9e4_index(_20ec88738_LazyBuff*, jule::I64);
inline void _20ec906a7_append(_20ec88738_LazyBuff*, jule::U8);
inline jule::Str _20ec937ba_string(_20ec88738_LazyBuff*);
struct _20ec88738_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();


	_20ec88738_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::I64 __param_w, jule::Str __param_vol_and_path, jule::I64 __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_20ec88738_LazyBuff(void) = default;

	inline bool operator==(_20ec88738_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_20ec88738_LazyBuff _other) { return !this->operator==(_other); }


};
struct _20dd9e201_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_20eac0e77_Status> _field_stat = jule::Ptr<_20eac0e77_Status>();


	_20dd9e201_DirEntry(jule::Str __param_name, jule::Ptr<_20eac0e77_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_20dd9e201_DirEntry(void) = default;

	inline bool operator==(_20dd9e201_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_20dd9e201_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_20dd9e201_DirEntry>>> static__20ebab6c2_read(jule::Str);
inline jule::VoidExceptional static__20ebacbe0_create(jule::Str);
inline jule::VoidExceptional static__20ebbbcba_remove(jule::Str);
struct _20eac0a9d_Directory {
	

	_20eac0a9d_Directory(void) = default;

	inline bool operator==(_20eac0a9d_Directory _other) { return true; }

	inline bool operator!=(_20eac0a9d_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_20eac0c8a_File> static__20dd9dd6b_new(jule::U64);
inline jule::Exceptional<jule::Ptr<_20eac0c8a_File>> static__20ddc947e_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__20ddd1200_read(jule::Str);
inline jule::VoidExceptional static__20ddd48a7_write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _20ddd6249_seek(_20eac0c8a_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _20dde78ba_close(_20eac0c8a_File*);
inline jule::Exceptional<jule::Ptr<_20eac0c8a_File>> static__20eb2b4bb_open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__20eb7acac_remove(jule::Str);
inline jule::Exceptional<jule::I64> _20eb29ee2_write(_20eac0c8a_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _20eb30503_read(_20eac0c8a_File*, jule::Slice<jule::U8>);
struct _20eac0c8a_File {
	jule::U64 _field_handle = jule::U64();


	_20eac0c8a_File(jule::U64 __param_handle): _field_handle(__param_handle) {}

	

	_20eac0c8a_File(void) = default;

	inline bool operator==(_20eac0c8a_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_20eac0c8a_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _20dde8cb7_is_dir(_20eac0e77_Status*);
inline jule::Bool _20dd90dc4_is_reg(_20eac0e77_Status*);
inline jule::Exceptional<jule::Ptr<_20eac0e77_Status>> static__20ebe7b81_of(jule::Str);
struct _20eac0e77_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();


	_20eac0e77_Status(jule::U64 __param_mode, jule::U64 __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_20eac0e77_Status(void) = default;

	inline bool operator==(_20eac0e77_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_20eac0e77_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_210c808a5_Cmd> static__210c80cd4_new(jule::Str);
inline jule::Exceptional<jule::I64> _210c8524a_spawn(_210c808a5_Cmd*);
inline jule::Exceptional<jule::I64> _210c90bd4___spawn(_210c808a5_Cmd*);
struct _210c808a5_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();


	_210c808a5_Cmd(jule::Str __param_path, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_env): _field_path(__param_path), _field_args(__param_args), _field_env(__param_env) {}

	

	_210c808a5_Cmd(void) = default;

	inline bool operator==(_210c808a5_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_210c808a5_Cmd _other) { return !this->operator==(_other); }


};
struct _210c3ee2a_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();


	_210c3ee2a_Log(jule::I64 __param_kind, jule::I64 __param_row, jule::I64 __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_210c3ee2a_Log(void) = default;

	inline bool operator==(_210c3ee2a_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_210c3ee2a_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _2110e7623_prec(_2110e7238_Token*);
struct _2110e7238_Token {
	jule::Ptr<_2110ec628_File> _field_file = jule::Ptr<_2110ec628_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;


	_2110e7238_Token(jule::Ptr<_2110ec628_File> __param_file, jule::I64 __param_row, jule::I64 __param_column, jule::Str __param_kind, jule::U64 __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_2110e7238_Token(void) = default;

	inline bool operator==(_2110e7238_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_2110e7238_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _2110eca35_is_ok(_2110ec628_File*);
inline void _2110eccaa_fill(_2110ec628_File*, jule::Slice<jule::U8>);
inline jule::Str _2110ed01e_dir(_2110ec628_File*);
inline jule::Str _2110ed283_name(_2110ec628_File*);
inline jule::U64 _2110ed4e7_addr(_2110ec628_File*);
inline jule::Str _2110ed805_get_row(_2110ec628_File*, jule::I64);
struct _2110ec628_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_tokens = jule::Slice<jule::Ptr<_2110e7238_Token>>();


	_2110ec628_File(jule::Str __param_path, jule::Slice<jule::U8> __param_data, jule::Slice<jule::Ptr<_2110e7238_Token>> __param_tokens): _field_path(__param_path), _field_data(__param_data), _field_tokens(__param_tokens) {}

	

	_2110ec628_File(void) = default;

	inline bool operator==(_2110ec628_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_2110ec628_File _other) { return !this->operator==(_other); }


};
struct _2110ee6e6_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;


	_2110ee6e6_KindPair(jule::Str __param_kind, jule::U64 __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_2110ee6e6_KindPair(void) = default;

	inline bool operator==(_2110ee6e6_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_2110ee6e6_KindPair _other) { return !this->operator==(_other); }


};
inline void _211105598_push_err(_211105004_Lex*, jule::Str, jule::Slice<jule::Any>);
inline void _2111058b7_push_err_tok(_211105004_Lex*, jule::Ptr<_2110e7238_Token>&, jule::Str);
inline void _211105a93_lex(_211105004_Lex*);
inline jule::Str _211105da1_id(_211105004_Lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _211106115_resume(_211105004_Lex*);
inline void _21110638a_lex_line_comment(_211105004_Lex*, jule::Ptr<_2110e7238_Token>&);
inline void _211106610_lex_range_comment(_211105004_Lex*, jule::Ptr<_2110e7238_Token>&);
inline jule::Str _21110691d_num(_211105004_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _211106c2b_escape_seq(_211105004_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _2111070d3_get_rune(_211105004_Lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _2111073e1_lex_rune(_211105004_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _211107655_lex_str(_211105004_Lex*);
inline jule::Bool _2111078b9_is_first_token_of_line(_211105004_Lex*);
inline void _211107a95_new_line(_211105004_Lex*);
inline jule::Bool _211108090_is_op(_211105004_Lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_2110e7238_Token>&);
inline jule::Bool _211108447_lex_basic_ops(_211105004_Lex*, jule::Slice<jule::U8>, jule::Ptr<_2110e7238_Token>&);
inline jule::Bool _2111087ee_lex_id(_211105004_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_2110e7238_Token>&);
inline jule::Bool _211108ba6_lex_num(_211105004_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_2110e7238_Token>&);
inline jule::Ptr<_2110e7238_Token> _211108e1a_token(_211105004_Lex*);
struct _211105004_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_tokens = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::Ptr<_2110ec628_File> _field_file = jule::Ptr<_2110ec628_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_210c3ee2a_Log> _field_errors = jule::Slice<_210c3ee2a_Log>();


	_211105004_Lex(jule::I64 __param_mode, jule::Slice<jule::Ptr<_2110e7238_Token>> __param_tokens, jule::Ptr<_2110ec628_File> __param_file, jule::I64 __param_pos, jule::I64 __param_column, jule::I64 __param_row, jule::Slice<_210c3ee2a_Log> __param_errors): _field_mode(__param_mode), _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_211105004_Lex(void) = default;

	inline bool operator==(_211105004_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_211105004_Lex _other) { return !this->operator==(_other); }


};
struct _210eb3d6e_Ast {
	jule::Ptr<_2110ec628_File> _field_file = jule::Ptr<_2110ec628_File>();
	jule::Slice<jule::Ptr<_210eb33e0_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_210eb33e0_Directive>>();
	jule::Slice<jule::Ptr<_21110eb57_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_21110eb57_UseDecl>>();
	jule::Slice<_2110cc1c9_Node> _field_nodes = jule::Slice<_2110cc1c9_Node>();


	_210eb3d6e_Ast(jule::Ptr<_2110ec628_File> __param_file, jule::Slice<jule::Ptr<_210eb33e0_Directive>> __param_top_directives, jule::Slice<jule::Ptr<_21110eb57_UseDecl>> __param_use_decls, jule::Slice<_2110cc1c9_Node> __param_nodes): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_nodes(__param_nodes) {}

	

	_210eb3d6e_Ast(void) = default;

	inline bool operator==(_210eb3d6e_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_210eb3d6e_Ast _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e94569_is_decl(_2110cc1c9_Node*);
inline jule::Bool _210e855c1_is_directive(_2110cc1c9_Node*);
inline jule::Bool _210e98eb9_is_impl(_2110cc1c9_Node*);
inline jule::Bool _210e99b02_is_use_decl(_2110cc1c9_Node*);
struct _2110cc1c9_Node {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Any _field_data = jule::Any();


	_2110cc1c9_Node(jule::Ptr<_2110e7238_Token> __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_2110cc1c9_Node(void) = default;

	inline bool operator==(_2110cc1c9_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_2110cc1c9_Node _other) { return !this->operator==(_other); }


};
struct _210eb33e0_Directive {
	jule::Ptr<_2110e7238_Token> _field_tag = jule::Ptr<_2110e7238_Token>();
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_args = jule::Slice<jule::Ptr<_2110e7238_Token>>();


	_210eb33e0_Directive(jule::Ptr<_2110e7238_Token> __param_tag, jule::Slice<jule::Ptr<_2110e7238_Token>> __param_args): _field_tag(__param_tag), _field_args(__param_args) {}

	

	_210eb33e0_Directive(void) = default;

	inline bool operator==(_210eb33e0_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_210eb33e0_Directive _other) { return !this->operator==(_other); }


};
struct _210e7e620_TypeDecl {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Any _field_kind = jule::Any();


	_210e7e620_TypeDecl(jule::Ptr<_2110e7238_Token> __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_210e7e620_TypeDecl(void) = default;

	inline bool operator==(_210e7e620_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_210e7e620_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e9a394_is_prim(_210e7e80c_IdentTypeDecl*);
struct _210e7e80c_IdentTypeDecl {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>();


	_210e7e80c_IdentTypeDecl(jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_210e7e80c_IdentTypeDecl(void) = default;

	inline bool operator==(_210e7e80c_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_210e7e80c_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e86c54_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_idents = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::Ptr<_210e7e80c_IdentTypeDecl> _field_kind = jule::Ptr<_210e7e80c_IdentTypeDecl>();


	_210e86c54_NamespaceTypeDecl(jule::Slice<jule::Ptr<_2110e7238_Token>> __param_idents, jule::Ptr<_210e7e80c_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_210e86c54_NamespaceTypeDecl(void) = default;

	inline bool operator==(_210e86c54_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_210e86c54_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e86e41_SptrTypeDecl {
	jule::Ptr<_210e7e620_TypeDecl> _field_elem = jule::Ptr<_210e7e620_TypeDecl>();


	_210e86e41_SptrTypeDecl(jule::Ptr<_210e7e620_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_210e86e41_SptrTypeDecl(void) = default;

	inline bool operator==(_210e86e41_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_210e86e41_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e8712d_SlcTypeDecl {
	jule::Ptr<_210e7e620_TypeDecl> _field_elem = jule::Ptr<_210e7e620_TypeDecl>();


	_210e8712d_SlcTypeDecl(jule::Ptr<_210e7e620_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_210e8712d_SlcTypeDecl(void) = default;

	inline bool operator==(_210e8712d_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_210e8712d_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e8731a_TupleTypeDecl {
	jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>();


	_210e8731a_TupleTypeDecl(jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_210e8731a_TupleTypeDecl(void) = default;

	inline bool operator==(_210e8731a_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_210e8731a_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e9aecc_is_unsafe(_210e87507_PtrTypeDecl*);
struct _210e87507_PtrTypeDecl {
	jule::Ptr<_210e7e620_TypeDecl> _field_elem = jule::Ptr<_210e7e620_TypeDecl>();


	_210e87507_PtrTypeDecl(jule::Ptr<_210e7e620_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_210e87507_PtrTypeDecl(void) = default;

	inline bool operator==(_210e87507_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_210e87507_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _210e9c62c_auto_sized(_210e876e4_ArrTypeDecl*);
struct _210e876e4_ArrTypeDecl {
	jule::Ptr<_210e7e620_TypeDecl> _field_elem = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Ptr<_210e87caa_Expr> _field_size = jule::Ptr<_210e87caa_Expr>();


	_210e876e4_ArrTypeDecl(jule::Ptr<_210e7e620_TypeDecl> __param_elem, jule::Ptr<_210e87caa_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_210e876e4_ArrTypeDecl(void) = default;

	inline bool operator==(_210e876e4_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_210e876e4_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e878d1_MapTypeDecl {
	jule::Ptr<_210e7e620_TypeDecl> _field_key = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Ptr<_210e7e620_TypeDecl> _field_val = jule::Ptr<_210e7e620_TypeDecl>();


	_210e878d1_MapTypeDecl(jule::Ptr<_210e7e620_TypeDecl> __param_key, jule::Ptr<_210e7e620_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_210e878d1_MapTypeDecl(void) = default;

	inline bool operator==(_210e878d1_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_210e878d1_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e87abd_RetTypeDecl {
	jule::Ptr<_210e7e620_TypeDecl> _field_kind = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_idents = jule::Slice<jule::Ptr<_2110e7238_Token>>();


	_210e87abd_RetTypeDecl(jule::Ptr<_210e7e620_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_2110e7238_Token>> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_210e87abd_RetTypeDecl(void) = default;

	inline bool operator==(_210e87abd_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_210e87abd_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _210e87caa_Expr {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_2110e7238_Token> _field_end = jule::Ptr<_2110e7238_Token>();
	jule::Bool _field_range = jule::Bool();
	jule::Any _field_kind = jule::Any();


	_210e87caa_Expr(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_2110e7238_Token> __param_end, jule::Bool __param_range, jule::Any __param_kind): _field_token(__param_token), _field_end(__param_end), _field_range(__param_range), _field_kind(__param_kind) {}

	

	_210e87caa_Expr(void) = default;

	inline bool operator==(_210e87caa_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_range == _other._field_range &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_210e87caa_Expr _other) { return !this->operator==(_other); }


};
struct _211079907_UseExpr {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();


	_211079907_UseExpr(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_210e87caa_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_211079907_UseExpr(void) = default;

	inline bool operator==(_211079907_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_211079907_UseExpr _other) { return !this->operator==(_other); }


};
struct _211079ae4_TupleExpr {
	jule::Slice<jule::Ptr<_210e87caa_Expr>> _field_expr = jule::Slice<jule::Ptr<_210e87caa_Expr>>();


	_211079ae4_TupleExpr(jule::Slice<jule::Ptr<_210e87caa_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_211079ae4_TupleExpr(void) = default;

	inline bool operator==(_211079ae4_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_211079ae4_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _210ea0861_is_nil(_211109701_LitExpr*);
struct _211109701_LitExpr {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_value = jule::Str();


	_211109701_LitExpr(jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_211109701_LitExpr(void) = default;

	inline bool operator==(_211109701_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_211109701_LitExpr _other) { return !this->operator==(_other); }


};
struct _2111098dd_UnsafeExpr {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();


	_2111098dd_UnsafeExpr(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_210e87caa_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_2111098dd_UnsafeExpr(void) = default;

	inline bool operator==(_2111098dd_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_2111098dd_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _211109aca_CoExpr {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();


	_211109aca_CoExpr(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_210e87caa_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_211109aca_CoExpr(void) = default;

	inline bool operator==(_211109aca_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_211109aca_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _210ea1103_is_self(_211109cb7_IdentExpr*);
struct _211109cb7_IdentExpr {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();


	_211109cb7_IdentExpr(jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_211109cb7_IdentExpr(void) = default;

	inline bool operator==(_211109cb7_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_211109cb7_IdentExpr _other) { return !this->operator==(_other); }


};
struct _211109ea4_UnaryExpr {
	jule::Ptr<_2110e7238_Token> _field_op = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();


	_211109ea4_UnaryExpr(jule::Ptr<_2110e7238_Token> __param_op, jule::Ptr<_210e87caa_Expr> __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_211109ea4_UnaryExpr(void) = default;

	inline bool operator==(_211109ea4_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_211109ea4_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _21110a191_VariadicExpr {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();


	_21110a191_VariadicExpr(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_210e87caa_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_21110a191_VariadicExpr(void) = default;

	inline bool operator==(_21110a191_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21110a191_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _21110a37d_CastExpr {
	jule::Ptr<_210e7e620_TypeDecl> _field_kind = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();


	_21110a37d_CastExpr(jule::Ptr<_210e7e620_TypeDecl> __param_kind, jule::Ptr<_210e87caa_Expr> __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_21110a37d_CastExpr(void) = default;

	inline bool operator==(_21110a37d_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21110a37d_CastExpr _other) { return !this->operator==(_other); }


};
struct _21110a56a_NsSelectionExpr {
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_ns = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::Ptr<_2110e7238_Token> _field_ident = jule::Ptr<_2110e7238_Token>();


	_21110a56a_NsSelectionExpr(jule::Slice<jule::Ptr<_2110e7238_Token>> __param_ns, jule::Ptr<_2110e7238_Token> __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_21110a56a_NsSelectionExpr(void) = default;

	inline bool operator==(_21110a56a_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21110a56a_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _21110a757_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();
	jule::Ptr<_2110e7238_Token> _field_ident = jule::Ptr<_2110e7238_Token>();


	_21110a757_SubIdentExpr(jule::Bool __param_is_self, jule::Ptr<_210e87caa_Expr> __param_expr, jule::Ptr<_2110e7238_Token> __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_21110a757_SubIdentExpr(void) = default;

	inline bool operator==(_21110a757_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21110a757_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _21110a944_BinopExpr {
	jule::Ptr<_210e87caa_Expr> _field_left = jule::Ptr<_210e87caa_Expr>();
	jule::Ptr<_210e87caa_Expr> _field_right = jule::Ptr<_210e87caa_Expr>();
	jule::Ptr<_2110e7238_Token> _field_op = jule::Ptr<_2110e7238_Token>();


	_21110a944_BinopExpr(jule::Ptr<_210e87caa_Expr> __param_left, jule::Ptr<_210e87caa_Expr> __param_right, jule::Ptr<_2110e7238_Token> __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_21110a944_BinopExpr(void) = default;

	inline bool operator==(_21110a944_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_21110a944_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _210ea3a1d_unhandled(_21110ab31_FnCallExpr*);
inline jule::Bool _210ea5ec6_ignored(_21110ab31_FnCallExpr*);
struct _21110ab31_FnCallExpr {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();
	jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>();
	jule::Slice<jule::Ptr<_210e87caa_Expr>> _field_args = jule::Slice<jule::Ptr<_210e87caa_Expr>>();
	jule::Ptr<_21110ca9a_ScopeTree> _field_exception = jule::Ptr<_21110ca9a_ScopeTree>();


	_21110ab31_FnCallExpr(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_210e87caa_Expr> __param_expr, jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> __param_generics, jule::Slice<jule::Ptr<_210e87caa_Expr>> __param_args, jule::Ptr<_21110ca9a_ScopeTree> __param_exception): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_exception(__param_exception) {}

	

	_21110ab31_FnCallExpr(void) = default;

	inline bool operator==(_21110ab31_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_21110ab31_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _210ea6ee9_is_targeted(_21110ad1d_FieldExprPair*);
struct _21110ad1d_FieldExprPair {
	jule::Ptr<_2110e7238_Token> _field_field = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();


	_21110ad1d_FieldExprPair(jule::Ptr<_2110e7238_Token> __param_field, jule::Ptr<_210e87caa_Expr> __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_21110ad1d_FieldExprPair(void) = default;

	inline bool operator==(_21110ad1d_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21110ad1d_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _21110b00a_StructLit {
	jule::Ptr<_2110e7238_Token> _field_end = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e7e620_TypeDecl> _field_kind = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Slice<jule::Ptr<_210e87caa_Expr>> _field_exprs = jule::Slice<jule::Ptr<_210e87caa_Expr>>();


	_21110b00a_StructLit(jule::Ptr<_2110e7238_Token> __param_end, jule::Ptr<_210e7e620_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_210e87caa_Expr>> __param_exprs): _field_end(__param_end), _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_21110b00a_StructLit(void) = default;

	inline bool operator==(_21110b00a_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_21110b00a_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _210ea9073_is_empty(_21110b1e7_BraceLit*);
struct _21110b1e7_BraceLit {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_2110e7238_Token> _field_end = jule::Ptr<_2110e7238_Token>();
	jule::Slice<jule::Ptr<_210e87caa_Expr>> _field_exprs = jule::Slice<jule::Ptr<_210e87caa_Expr>>();


	_21110b1e7_BraceLit(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_2110e7238_Token> __param_end, jule::Slice<jule::Ptr<_210e87caa_Expr>> __param_exprs): _field_token(__param_token), _field_end(__param_end), _field_exprs(__param_exprs) {}

	

	_21110b1e7_BraceLit(void) = default;

	inline bool operator==(_21110b1e7_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_21110b1e7_BraceLit _other) { return !this->operator==(_other); }


};
struct _21110b3d4_KeyValPair {
	jule::Ptr<_210e87caa_Expr> _field_key = jule::Ptr<_210e87caa_Expr>();
	jule::Ptr<_210e87caa_Expr> _field_val = jule::Ptr<_210e87caa_Expr>();
	jule::Ptr<_2110e7238_Token> _field_colon = jule::Ptr<_2110e7238_Token>();


	_21110b3d4_KeyValPair(jule::Ptr<_210e87caa_Expr> __param_key, jule::Ptr<_210e87caa_Expr> __param_val, jule::Ptr<_2110e7238_Token> __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_21110b3d4_KeyValPair(void) = default;

	inline bool operator==(_21110b3d4_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_21110b3d4_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _210eb507e_is_empty(_21110b5c1_SliceExpr*);
struct _21110b5c1_SliceExpr {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_2110e7238_Token> _field_end = jule::Ptr<_2110e7238_Token>();
	jule::Slice<jule::Ptr<_210e87caa_Expr>> _field_exprs = jule::Slice<jule::Ptr<_210e87caa_Expr>>();


	_21110b5c1_SliceExpr(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_2110e7238_Token> __param_end, jule::Slice<jule::Ptr<_210e87caa_Expr>> __param_exprs): _field_token(__param_token), _field_end(__param_end), _field_exprs(__param_exprs) {}

	

	_21110b5c1_SliceExpr(void) = default;

	inline bool operator==(_21110b5c1_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_21110b5c1_SliceExpr _other) { return !this->operator==(_other); }


};
struct _2111094c0_IndexingExpr {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_2110e7238_Token> _field_end = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();
	jule::Ptr<_210e87caa_Expr> _field_index = jule::Ptr<_210e87caa_Expr>();


	_2111094c0_IndexingExpr(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_2110e7238_Token> __param_end, jule::Ptr<_210e87caa_Expr> __param_expr, jule::Ptr<_210e87caa_Expr> __param_index): _field_token(__param_token), _field_end(__param_end), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_2111094c0_IndexingExpr(void) = default;

	inline bool operator==(_2111094c0_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_2111094c0_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _21110bc31_SlicingExpr {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_2110e7238_Token> _field_end = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();
	jule::Ptr<_210e87caa_Expr> _field_start = jule::Ptr<_210e87caa_Expr>();
	jule::Ptr<_210e87caa_Expr> _field_to = jule::Ptr<_210e87caa_Expr>();


	_21110bc31_SlicingExpr(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_2110e7238_Token> __param_end, jule::Ptr<_210e87caa_Expr> __param_expr, jule::Ptr<_210e87caa_Expr> __param_start, jule::Ptr<_210e87caa_Expr> __param_to): _field_token(__param_token), _field_end(__param_end), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_21110bc31_SlicingExpr(void) = default;

	inline bool operator==(_21110bc31_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_21110bc31_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _21110be1d_GenericDecl {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();


	_21110be1d_GenericDecl(jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_21110be1d_GenericDecl(void) = default;

	inline bool operator==(_21110be1d_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21110be1d_GenericDecl _other) { return !this->operator==(_other); }


};
struct _21110c10a_LabelSt {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();


	_21110c10a_LabelSt(jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_21110c10a_LabelSt(void) = default;

	inline bool operator==(_21110c10a_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21110c10a_LabelSt _other) { return !this->operator==(_other); }


};
struct _21110c2e7_GotoSt {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_2110e7238_Token> _field_label = jule::Ptr<_2110e7238_Token>();


	_21110c2e7_GotoSt(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_2110e7238_Token> __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_21110c2e7_GotoSt(void) = default;

	inline bool operator==(_21110c2e7_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_21110c2e7_GotoSt _other) { return !this->operator==(_other); }


};
struct _21110c4d4_FallSt {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();


	_21110c4d4_FallSt(jule::Ptr<_2110e7238_Token> __param_token): _field_token(__param_token) {}

	

	_21110c4d4_FallSt(void) = default;

	inline bool operator==(_21110c4d4_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_21110c4d4_FallSt _other) { return !this->operator==(_other); }


};
struct _21110c6c1_AssignLeft {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();


	_21110c6c1_AssignLeft(jule::Ptr<_2110e7238_Token> __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ptr<_210e87caa_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_21110c6c1_AssignLeft(void) = default;

	inline bool operator==(_21110c6c1_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21110c6c1_AssignLeft _other) { return !this->operator==(_other); }


};
struct _21110c8ad_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	jule::Ptr<_2110e7238_Token> _field_setter = jule::Ptr<_2110e7238_Token>();
	jule::Slice<jule::Ptr<_21110c6c1_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_21110c6c1_AssignLeft>>();
	jule::Ptr<_210e87caa_Expr> _field_right = jule::Ptr<_210e87caa_Expr>();


	_21110c8ad_AssignSt(jule::Bool __param_declarative, jule::Ptr<_2110e7238_Token> __param_setter, jule::Slice<jule::Ptr<_21110c6c1_AssignLeft>> __param_left, jule::Ptr<_210e87caa_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_21110c8ad_AssignSt(void) = default;

	inline bool operator==(_21110c8ad_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_21110c8ad_AssignSt _other) { return !this->operator==(_other); }


};
struct _21110ca9a_ScopeTree {
	jule::Ptr<_21110ca9a_ScopeTree> _field_parent = jule::Ptr<_21110ca9a_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_2110cc1c9_Node> _field_stmts = jule::Slice<_2110cc1c9_Node>();
	jule::Ptr<_2110e7238_Token> _field_end = jule::Ptr<_2110e7238_Token>();


	_21110ca9a_ScopeTree(jule::Ptr<_21110ca9a_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<_2110cc1c9_Node> __param_stmts, jule::Ptr<_2110e7238_Token> __param_end): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts), _field_end(__param_end) {}

	

	_21110ca9a_ScopeTree(void) = default;

	inline bool operator==(_21110ca9a_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_21110ca9a_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _21105e28d_is_self(_21110cc87_ParamDecl*);
inline jule::Bool _2110681ba_is_ref(_21110cc87_ParamDecl*);
struct _21110cc87_ParamDecl {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_210e7e620_TypeDecl> _field_kind = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Str _field_ident = jule::Str();


	_21110cc87_ParamDecl(jule::Ptr<_2110e7238_Token> __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_210e7e620_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_21110cc87_ParamDecl(void) = default;

	inline bool operator==(_21110cc87_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_21110cc87_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21107aead_is_anon(_21110ce74_FnDecl*);
struct _21110ce74_FnDecl {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_210eb33e0_Directive>> _field_directives = jule::Slice<jule::Ptr<_210eb33e0_Directive>>();
	jule::Ptr<_21110ca9a_ScopeTree> _field_scope = jule::Ptr<_21110ca9a_ScopeTree>();
	jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>();
	jule::Ptr<_210e87abd_RetTypeDecl> _field_result = jule::Ptr<_210e87abd_RetTypeDecl>();
	jule::Slice<jule::Ptr<_21110cc87_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_21110cc87_ParamDecl>>();


	_21110ce74_FnDecl(jule::Ptr<_2110e7238_Token> __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_210eb33e0_Directive>> __param_directives, jule::Ptr<_21110ca9a_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> __param_generics, jule::Ptr<_210e87abd_RetTypeDecl> __param_result, jule::Slice<jule::Ptr<_21110cc87_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_21110ce74_FnDecl(void) = default;

	inline bool operator==(_21110ce74_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_21110ce74_FnDecl _other) { return !this->operator==(_other); }


};
struct _21110d161_VarDecl {
	jule::Ptr<_21110ca9a_ScopeTree> _field_scope = jule::Ptr<_21110ca9a_ScopeTree>();
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_210eb33e0_Directive>> _field_directives = jule::Slice<jule::Ptr<_210eb33e0_Directive>>();
	jule::Ptr<_210e7e620_TypeDecl> _field_kind = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();


	_21110d161_VarDecl(jule::Ptr<_21110ca9a_ScopeTree> __param_scope, jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ptr<_210eb33e0_Directive>> __param_directives, jule::Ptr<_210e7e620_TypeDecl> __param_kind, jule::Ptr<_210e87caa_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_21110d161_VarDecl(void) = default;

	inline bool operator==(_21110d161_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21110d161_VarDecl _other) { return !this->operator==(_other); }


};
struct _21110d34d_RetSt {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();


	_21110d34d_RetSt(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_210e87caa_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_21110d34d_RetSt(void) = default;

	inline bool operator==(_21110d34d_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21110d34d_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _211080842_is_inf(_21110d53a_Iter*);
struct _21110d53a_Iter {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_21110ca9a_ScopeTree> _field_scope = jule::Ptr<_21110ca9a_ScopeTree>();


	_21110d53a_Iter(jule::Ptr<_2110e7238_Token> __param_token, jule::Any __param_kind, jule::Ptr<_21110ca9a_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_21110d53a_Iter(void) = default;

	inline bool operator==(_21110d53a_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_21110d53a_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _21109cd37_is_while_next(_21110d727_WhileKind*);
struct _21110d727_WhileKind {
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_2110e7238_Token> _field_next_token = jule::Ptr<_2110e7238_Token>();


	_21110d727_WhileKind(jule::Ptr<_210e87caa_Expr> __param_expr, jule::Any __param_next, jule::Ptr<_2110e7238_Token> __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_21110d727_WhileKind(void) = default;

	inline bool operator==(_21110d727_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_21110d727_WhileKind _other) { return !this->operator==(_other); }


};
struct _21110d914_RangeKind {
	jule::Ptr<_2110e7238_Token> _field_in_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();
	jule::Ptr<_21110d161_VarDecl> _field_key_a = jule::Ptr<_21110d161_VarDecl>();
	jule::Ptr<_21110d161_VarDecl> _field_key_b = jule::Ptr<_21110d161_VarDecl>();


	_21110d914_RangeKind(jule::Ptr<_2110e7238_Token> __param_in_token, jule::Ptr<_210e87caa_Expr> __param_expr, jule::Ptr<_21110d161_VarDecl> __param_key_a, jule::Ptr<_21110d161_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_21110d914_RangeKind(void) = default;

	inline bool operator==(_21110d914_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_21110d914_RangeKind _other) { return !this->operator==(_other); }


};
struct _21110db01_BreakSt {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_2110e7238_Token> _field_label = jule::Ptr<_2110e7238_Token>();


	_21110db01_BreakSt(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_2110e7238_Token> __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_21110db01_BreakSt(void) = default;

	inline bool operator==(_21110db01_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_21110db01_BreakSt _other) { return !this->operator==(_other); }


};
struct _21110dcdd_ContSt {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_2110e7238_Token> _field_label = jule::Ptr<_2110e7238_Token>();


	_21110dcdd_ContSt(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_2110e7238_Token> __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_21110dcdd_ContSt(void) = default;

	inline bool operator==(_21110dcdd_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_21110dcdd_ContSt _other) { return !this->operator==(_other); }


};
struct _21110deca_If {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();
	jule::Ptr<_21110ca9a_ScopeTree> _field_scope = jule::Ptr<_21110ca9a_ScopeTree>();


	_21110deca_If(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_210e87caa_Expr> __param_expr, jule::Ptr<_21110ca9a_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_21110deca_If(void) = default;

	inline bool operator==(_21110deca_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_21110deca_If _other) { return !this->operator==(_other); }


};
struct _21110e1b7_Else {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_21110ca9a_ScopeTree> _field_scope = jule::Ptr<_21110ca9a_ScopeTree>();


	_21110e1b7_Else(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_21110ca9a_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_21110e1b7_Else(void) = default;

	inline bool operator==(_21110e1b7_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_21110e1b7_Else _other) { return !this->operator==(_other); }


};
struct _21110e3a4_Conditional {
	jule::Ptr<_21110deca_If> _field_head = jule::Ptr<_21110deca_If>();
	jule::Slice<jule::Ptr<_21110deca_If>> _field_tail = jule::Slice<jule::Ptr<_21110deca_If>>();
	jule::Ptr<_21110e1b7_Else> _field_default = jule::Ptr<_21110e1b7_Else>();


	_21110e3a4_Conditional(jule::Ptr<_21110deca_If> __param_head, jule::Slice<jule::Ptr<_21110deca_If>> __param_tail, jule::Ptr<_21110e1b7_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_21110e3a4_Conditional(void) = default;

	inline bool operator==(_21110e3a4_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_21110e3a4_Conditional _other) { return !this->operator==(_other); }


};
struct _21110e591_TypeAliasDecl {
	jule::Ptr<_21110ca9a_ScopeTree> _field_scope = jule::Ptr<_21110ca9a_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_210e7e620_TypeDecl> _field_kind = jule::Ptr<_210e7e620_TypeDecl>();


	_21110e591_TypeAliasDecl(jule::Ptr<_21110ca9a_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident, jule::Ptr<_210e7e620_TypeDecl> __param_kind): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_21110e591_TypeAliasDecl(void) = default;

	inline bool operator==(_21110e591_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_21110e591_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _21110e77d_Case {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_21110ca9a_ScopeTree> _field_scope = jule::Ptr<_21110ca9a_ScopeTree>();
	jule::Slice<jule::Ptr<_210e87caa_Expr>> _field_exprs = jule::Slice<jule::Ptr<_210e87caa_Expr>>();


	_21110e77d_Case(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_21110ca9a_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_210e87caa_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_21110e77d_Case(void) = default;

	inline bool operator==(_21110e77d_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_21110e77d_Case _other) { return !this->operator==(_other); }


};
struct _21110e96a_MatchCase {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_2110e7238_Token> _field_end = jule::Ptr<_2110e7238_Token>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();
	jule::Slice<jule::Ptr<_21110e77d_Case>> _field_cases = jule::Slice<jule::Ptr<_21110e77d_Case>>();
	jule::Ptr<_21110e1b7_Else> _field_default = jule::Ptr<_21110e1b7_Else>();


	_21110e96a_MatchCase(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_2110e7238_Token> __param_end, jule::Bool __param_type_match, jule::Ptr<_210e87caa_Expr> __param_expr, jule::Slice<jule::Ptr<_21110e77d_Case>> __param_cases, jule::Ptr<_21110e1b7_Else> __param_default): _field_token(__param_token), _field_end(__param_end), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_21110e96a_MatchCase(void) = default;

	inline bool operator==(_21110e96a_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_21110e96a_MatchCase _other) { return !this->operator==(_other); }


};
struct _21110eb57_UseDecl {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_selected = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();


	_21110eb57_UseDecl(jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<jule::Ptr<_2110e7238_Token>> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_21110eb57_UseDecl(void) = default;

	inline bool operator==(_21110eb57_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_21110eb57_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _210eb6118_auto_expr(_21110ed44_EnumItemDecl*);
struct _21110ed44_EnumItemDecl {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();


	_21110ed44_EnumItemDecl(jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident, jule::Ptr<_210e87caa_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_21110ed44_EnumItemDecl(void) = default;

	inline bool operator==(_21110ed44_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_21110ed44_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _211110570_default_typed(_211110262_EnumDecl*);
struct _211110262_EnumDecl {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_210e7e620_TypeDecl> _field_kind = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Slice<jule::Ptr<_21110ed44_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_21110ed44_EnumItemDecl>>();
	jule::Ptr<_2110e7238_Token> _field_end = jule::Ptr<_2110e7238_Token>();


	_211110262_EnumDecl(jule::Ptr<_2110e7238_Token> __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_210e7e620_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_21110ed44_EnumItemDecl>> __param_items, jule::Ptr<_2110e7238_Token> __param_end): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_end(__param_end) {}

	

	_211110262_EnumDecl(void) = default;

	inline bool operator==(_211110262_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_211110262_EnumDecl _other) { return !this->operator==(_other); }


};
struct _211110c46_FieldDecl {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_210e7e620_TypeDecl> _field_kind = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Ptr<_210e87caa_Expr> _field_default = jule::Ptr<_210e87caa_Expr>();


	_211110c46_FieldDecl(jule::Ptr<_2110e7238_Token> __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_210e7e620_TypeDecl> __param_kind, jule::Ptr<_210e87caa_Expr> __param_default): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_211110c46_FieldDecl(void) = default;

	inline bool operator==(_211110c46_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_211110c46_FieldDecl _other) { return !this->operator==(_other); }


};
struct _2111115a4_StructDecl {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_2110e7238_Token> _field_end = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_211110c46_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_211110c46_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_210eb33e0_Directive>> _field_directives = jule::Slice<jule::Ptr<_210eb33e0_Directive>>();
	jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>();


	_2111115a4_StructDecl(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_2110e7238_Token> __param_end, jule::Str __param_ident, jule::Slice<jule::Ptr<_211110c46_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_210eb33e0_Directive>> __param_directives, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> __param_generics): _field_token(__param_token), _field_end(__param_end), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_generics(__param_generics) {}

	

	_2111115a4_StructDecl(void) = default;

	inline bool operator==(_2111115a4_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_2111115a4_StructDecl _other) { return !this->operator==(_other); }


};
struct _211111bae_TraitDecl {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_2110e7238_Token> _field_end = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_21110ce74_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_21110ce74_FnDecl>>();


	_211111bae_TraitDecl(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_2110e7238_Token> __param_end, jule::Str __param_ident, jule::Bool __param_public, jule::Slice<jule::Ptr<_21110ce74_FnDecl>> __param_methods): _field_token(__param_token), _field_end(__param_end), _field_ident(__param_ident), _field_public(__param_public), _field_methods(__param_methods) {}

	

	_211111bae_TraitDecl(void) = default;

	inline bool operator==(_211111bae_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_211111bae_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _21111262c_is_trait_impl(_2111122b9_Impl*);
inline jule::Bool _211112891_is_struct_impl(_2111122b9_Impl*);
struct _2111122b9_Impl {
	jule::Ptr<_2110e7238_Token> _field_end = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_210e7e620_TypeDecl> _field_base = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Ptr<_210e7e620_TypeDecl> _field_dest = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Slice<jule::Ptr<_21110ce74_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_21110ce74_FnDecl>>();
	jule::Slice<jule::Ptr<_21110d161_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_21110d161_VarDecl>>();


	_2111122b9_Impl(jule::Ptr<_2110e7238_Token> __param_end, jule::Ptr<_210e7e620_TypeDecl> __param_base, jule::Ptr<_210e7e620_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_21110ce74_FnDecl>> __param_methods, jule::Slice<jule::Ptr<_21110d161_VarDecl>> __param_statics): _field_end(__param_end), _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_2111122b9_Impl(void) = default;

	inline bool operator==(_2111122b9_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_2111122b9_Impl _other) { return !this->operator==(_other); }


};
struct _21173e7a3_FileInfo {
	jule::Ptr<_210eb3d6e_Ast> _field_ast = jule::Ptr<_210eb3d6e_Ast>();
	jule::Slice<_210c3ee2a_Log> _field_errors = jule::Slice<_210c3ee2a_Log>();


	_21173e7a3_FileInfo(jule::Ptr<_210eb3d6e_Ast> __param_ast, jule::Slice<_210c3ee2a_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_21173e7a3_FileInfo(void) = default;

	inline bool operator==(_21173e7a3_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_21173e7a3_FileInfo _other) { return !this->operator==(_other); }


};
struct _21173e990_PackageInfo {
	jule::Slice<jule::Ptr<_21173e7a3_FileInfo>> _field_files = jule::Slice<jule::Ptr<_21173e7a3_FileInfo>>();


	_21173e990_PackageInfo(jule::Slice<jule::Ptr<_21173e7a3_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_21173e990_PackageInfo(void) = default;

	inline bool operator==(_21173e990_PackageInfo _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_21173e990_PackageInfo _other) { return !this->operator==(_other); }


};
struct _2117865db_Stmt {
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_tokens = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::Bool _field_terminated = jule::Bool();


	_2117865db_Stmt(jule::Slice<jule::Ptr<_2110e7238_Token>> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_2117865db_Stmt(void) = default;

	inline bool operator==(_2117865db_Stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_2117865db_Stmt _other) { return !this->operator==(_other); }


};
inline void _211787598_stop(_211786e16_ScopeParser*);
inline jule::Bool _21178780c_stopped(_211786e16_ScopeParser*);
inline jule::Bool _211787a71_finished(_211786e16_ScopeParser*);
inline jule::Bool _211787cd5_is_last_st(_211786e16_ScopeParser*);
inline void _211788104_push_err(_211786e16_ScopeParser*, jule::Ptr<_2110e7238_Token>, jule::Str);
inline void _211788423_push_suggestion(_211786e16_ScopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _211788698_insert_as_next(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_2117865db_Stmt> _21178890c_next(_211786e16_ScopeParser*);
inline jule::Ptr<_21110ca9a_ScopeTree> _211788cb4_build_scope(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Ptr<_2110e7238_Token>);
inline jule::Any _2117890c2_build_var_st(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Any _2117893d0_build_ret_st(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Any _2117896dd_build_while_next_iter(_211786e16_ScopeParser*, jule::Ptr<_2117865db_Stmt>&);
inline jule::Ptr<_21110d727_WhileKind> _2117899eb_build_while_iter_kind(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _211789d4d_get_range_kind_keys_tokens(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_21110d161_VarDecl> _21178a14a_build_range_kind_key(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Slice<jule::Ptr<_21110d161_VarDecl>> _21178a458_build_range_kind_keys(_211786e16_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>>&);
inline void _21178a7bb_setup_range_kind_keys_plain(_211786e16_ScopeParser*, jule::Ptr<_21110d914_RangeKind>&, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _21178ab1d_setup_range_kind_keys_explicit(_211786e16_ScopeParser*, jule::Ptr<_21110d914_RangeKind>&, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _21178ae2b_setup_range_kind_keys(_211786e16_ScopeParser*, jule::Ptr<_21110d914_RangeKind>&, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_21110d914_RangeKind> _21178b37c_build_range_iter_kind(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Ptr<_2110e7238_Token>&);
inline jule::Any _21178b734_build_common_iter_kind(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Ptr<_2110e7238_Token>&);
inline jule::Any _21178ba42_build_common_iter(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Any _21178bd50_build_iter_st(_211786e16_ScopeParser*, jule::Ptr<_2117865db_Stmt>&);
inline jule::Any _21178c15d_build_break_st(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Any _21178c46b_build_cont_st(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_21110deca_If> _21178c779_build_if(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_21110e1b7_Else> _21178ca87_build_else(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Any _21178cd95_build_if_else_chain(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Any _21178d1a3_build_co_call_st(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Any _21178d4b1_build_goto_st(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Any _21178d7be_build_fall_st(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Any _21178dacc_build_type_alias_st(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _21178e03e_push_case_expr(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>, jule::Ptr<_2110e7238_Token>, jule::Bool, jule::Slice<jule::Ptr<_210e87caa_Expr>>&);
inline jule::Slice<jule::Ptr<_210e87caa_Expr>> _21178e3e6_build_case_exprs(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Bool);
inline jule::Ptr<_21110ca9a_ScopeTree> _21178e704_build_case_scope(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline std::tuple<jule::Ptr<_21110e77d_Case>,jule::Bool> _21178eaab_build_case(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_21110e77d_Case>>,jule::Ptr<_21110e1b7_Else>> _21178ee63_build_cases(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>, jule::Bool);
inline jule::Ptr<_21110e96a_MatchCase> _211790271_build_match_case(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110ca9a_ScopeTree> _21179057e_build_scope_st(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110c10a_LabelSt> _21179088c_build_label_st(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _211790b9a_build_id_st(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_2117a0061_AssignInfo> _211790ea8_build_assign_info(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_21110c6c1_AssignLeft> _2117912b6_build_assign_l(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Slice<jule::Ptr<_21110c6c1_AssignLeft>> _2117915c4_build_assign_ls(_211786e16_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>>&);
inline std::tuple<jule::Ptr<_21110c8ad_AssignSt>,jule::Bool> _2117918d2_build_plain_assign(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline std::tuple<jule::Ptr<_21110c8ad_AssignSt>,jule::Bool> _211791be0_build_decl_assign(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline std::tuple<jule::Ptr<_21110c8ad_AssignSt>,jule::Bool> _211791eed_build_assign_st(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Any _21179230b_build_use_expr(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Any _211792619_build_st(_211786e16_ScopeParser*, jule::Ptr<_2117865db_Stmt>&);
inline void _211792938_build(_211786e16_ScopeParser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Ptr<_21110ca9a_ScopeTree>&);
struct _211786e16_ScopeParser {
	jule::Ptr<_2117a3592_Parser> _field_p = jule::Ptr<_2117a3592_Parser>();
	jule::Ptr<_21110ca9a_ScopeTree> _field_s = jule::Ptr<_21110ca9a_ScopeTree>();
	jule::Slice<jule::Ptr<_2117865db_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_2117865db_Stmt>>();
	jule::I64 _field_pos = jule::I64();


	_211786e16_ScopeParser(jule::Ptr<_2117a3592_Parser> __param_p, jule::Ptr<_21110ca9a_ScopeTree> __param_s, jule::Slice<jule::Ptr<_2117865db_Stmt>> __param_stmts, jule::I64 __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stmts(__param_stmts), _field_pos(__param_pos) {}

	

	_211786e16_ScopeParser(void) = default;

	inline bool operator==(_211786e16_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_211786e16_ScopeParser _other) { return !this->operator==(_other); }


};
struct _2117937d5_CallData {
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_expr_tokens = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_args_tokens = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_generics_tokens = jule::Slice<jule::Ptr<_2110e7238_Token>>();


	_2117937d5_CallData(jule::Slice<jule::Ptr<_2110e7238_Token>> __param_expr_tokens, jule::Slice<jule::Ptr<_2110e7238_Token>> __param_args_tokens, jule::Slice<jule::Ptr<_2110e7238_Token>> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_2117937d5_CallData(void) = default;

	inline bool operator==(_2117937d5_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_2117937d5_CallData _other) { return !this->operator==(_other); }


};
inline void _21179552e_push_err(_211794c37_ExprBuilder*, jule::Ptr<_2110e7238_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _21179584d_push_suggestion(_211794c37_ExprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_211079ae4_TupleExpr> _211795b5b_build_tuple(_211794c37_ExprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>>&);
inline jule::Ptr<_211109701_LitExpr> _211795e69_build_lit(_211794c37_ExprBuilder*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_210e7e620_TypeDecl> _211796277_build_primitive_type(_211794c37_ExprBuilder*, jule::Ptr<_2110e7238_Token>&);
inline jule::Any _211796585_build_single(_211794c37_ExprBuilder*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_211109cb7_IdentExpr> _211796893_build_cpp_linked_ident(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_211109ea4_UnaryExpr> _211796ba1_build_unary(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110a757_SubIdentExpr> _211796eae_build_obj_sub_ident(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110a56a_NsSelectionExpr> _2117972bc_build_ns_sub_ident(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_210e7e620_TypeDecl> _2117975ca_build_type(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Any _2117978d8_build_sub_ident(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_21110a191_VariadicExpr> _211797be6_build_variadic(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Any _211798004_build_op_right(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_210e87caa_Expr> _211798356_build_between_parentheses(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110a37d_CastExpr> _211798653_try_build_cast(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _211798a1b_push_arg(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_210e87caa_Expr>>&, jule::Slice<jule::Ptr<_2110e7238_Token>>, jule::Ptr<_2110e7238_Token>);
inline jule::Slice<jule::Ptr<_210e87caa_Expr>> _211798d29_build_args(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> _211799137_build_call_generics(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110ab31_FnCallExpr> _2117994de_build_fn_call(_211794c37_ExprBuilder*, jule::Ptr<_2110e7238_Token>&, jule::Ptr<_2117937d5_CallData>&);
inline jule::Any _211799841_build_parentheses_range(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_2111098dd_UnsafeExpr> _211799b3d_build_unsafe_expr(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110ce74_FnDecl> _211799e4b_build_anon_fn(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Any _21179a259_build_unsafe(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _21179a622_push_range_lit_part(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>, jule::Ptr<_2110e7238_Token>, jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _21179a974_get_brace_range_lit_expr_parts(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110ad1d_FieldExprPair> _21179ac71_build_field_expr_pair(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_210e87caa_Expr> _21179b07e_build_struct_lit_expr(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Slice<jule::Ptr<_210e87caa_Expr>> _21179b38c_build_struct_lit_exprs(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_21110b00a_StructLit> _21179b6de_build_typed_struct_literal(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_210e87caa_Expr> _21179b9db_build_brace_lit_part(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_21110b1e7_BraceLit> _21179bce9_build_brace_lit(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Any _21179c107_build_brace_range(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _21179c415_get_enumerable_parts(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110b5c1_SliceExpr> _21179c723_build_slice(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_2111094c0_IndexingExpr> _21179cb74_build_indexing(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>, jule::Slice<jule::Ptr<_2110e7238_Token>>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_21110bc31_SlicingExpr> _21179d218_build_slicing(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::I64&, jule::Ptr<_2110e7238_Token>&, jule::Ptr<_2110e7238_Token>);
inline jule::Any _21179d526_build_bracket_range(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Any _21179d834_build_data(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_21110a944_BinopExpr> _21179dbdb_build_binop(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::I64);
inline jule::Any _21179dee9_build(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Any _21179e307_build_kind(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_210e87caa_Expr> _21179e615_build_from_tokens(_211794c37_ExprBuilder*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
struct _211794c37_ExprBuilder {
	jule::Ptr<_2117a3592_Parser> _field_p = jule::Ptr<_2117a3592_Parser>();


	_211794c37_ExprBuilder(jule::Ptr<_2117a3592_Parser> __param_p): _field_p(__param_p) {}

	

	_211794c37_ExprBuilder(void) = default;

	inline bool operator==(_211794c37_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_211794c37_ExprBuilder _other) { return !this->operator==(_other); }


};
struct _2117a0061_AssignInfo {
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_l = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_r = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::Ptr<_2110e7238_Token> _field_setter = jule::Ptr<_2110e7238_Token>();
	jule::Bool _field_ok = jule::Bool();


	_2117a0061_AssignInfo(jule::Slice<jule::Ptr<_2110e7238_Token>> __param_l, jule::Slice<jule::Ptr<_2110e7238_Token>> __param_r, jule::Ptr<_2110e7238_Token> __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_2117a0061_AssignInfo(void) = default;

	inline bool operator==(_2117a0061_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_2117a0061_AssignInfo _other) { return !this->operator==(_other); }


};
inline void _2117a38c2_stop(_2117a3592_Parser*);
inline jule::Bool _2117a3b36_stopped(_2117a3592_Parser*);
inline void _2117a3eee_push_err(_2117a3592_Parser*, jule::Ptr<_2110e7238_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2117a431d_push_suggestion(_2117a3592_Parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_210e87caa_Expr> _2117a462b_build_expr(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_210eb33e0_Directive> _2117a4939_build_directive(_2117a3592_Parser*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline void _2117a4bae_push_directive(_2117a3592_Parser*, jule::Ptr<_210eb33e0_Directive>);
inline jule::Ptr<_21110ca9a_ScopeTree> _2117a5066_build_scope(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Ptr<_2110e7238_Token>);
inline std::tuple<jule::Ptr<_210e7e620_TypeDecl>,jule::Bool> _2117a54b7___build_type(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::I64*, jule::Bool);
inline std::tuple<jule::Ptr<_210e7e620_TypeDecl>,jule::Bool> _2117a5918_build_type(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_21110e591_TypeAliasDecl> _2117a5c26_build_type_alias_decl(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _2117a6089_build_var_type_and_expr(jule::Ptr<_2117a3592_Parser>, jule::Ptr<_21110d161_VarDecl>&, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _2117a6397_build_var_common(jule::Ptr<_2117a3592_Parser>, jule::Ptr<_21110d161_VarDecl>&, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline void _2117a6760_build_var_begin(_2117a3592_Parser*, jule::Ptr<_21110d161_VarDecl>&, jule::Ptr<jule::I64>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_21110d161_VarDecl> _2117a6a6d_build_var(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110be1d_GenericDecl> _2117a6d7b_build_generic(_2117a3592_Parser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> _2117a7233_build_generics(_2117a3592_Parser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Ptr<_2110e7238_Token>&);
inline jule::Ptr<_21110cc87_ParamDecl> _2117a7541_build_self_param(_2117a3592_Parser*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline void _2117a7909_param_type_begin(_2117a3592_Parser*, jule::Ptr<_21110cc87_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _2117a7c28_build_param_type(jule::Ptr<_2117a3592_Parser>, jule::Ptr<_21110cc87_ParamDecl>&, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _2117a80e1_build_param_body(jule::Ptr<_2117a3592_Parser>, jule::Ptr<_21110cc87_ParamDecl>&, jule::Ptr<jule::I64>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110cc87_ParamDecl> _2117a83ee_build_param(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline void _2117a8674_check_params(_2117a3592_Parser*, jule::Slice<jule::Ptr<_21110cc87_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_21110cc87_ParamDecl>> _2117a8a2b_build_params(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_210e87abd_RetTypeDecl>,jule::Bool> _2117a8dd3_build_multi_ret_type(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::I64&);
inline std::tuple<jule::Ptr<_210e87abd_RetTypeDecl>,jule::Bool> _2117a928a_build_ret_type(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::I64&);
inline jule::Ptr<_21110ce74_FnDecl> _2117a96db_build_fn_prototype(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_21110ce74_FnDecl> _2117a9b3c_build_fn(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_2110e7238_Token>> _2117a9e4a_get_use_decl_selectors(_2117a3592_Parser*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline void _2117aa269_build_cpp_use_decl(_2117a3592_Parser*, jule::Ptr<_21110eb57_UseDecl>&, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _2117aa588_build_std_use_decl(_2117a3592_Parser*, jule::Ptr<_21110eb57_UseDecl>&, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline void _2117aa8a7_build_ident_use_decl(_2117a3592_Parser*, jule::Ptr<_21110eb57_UseDecl>&, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline void _2117aabc6_parse_use_decl(_2117a3592_Parser*, jule::Ptr<_21110eb57_UseDecl>&, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110eb57_UseDecl> _2117ab07d_build_use_decl(_2117a3592_Parser*, jule::Slice<jule::Ptr<_2110e7238_Token>>, jule::Bool);
inline jule::Ptr<_210e87caa_Expr> _2117ab435_build_enum_item_expr(jule::Ptr<_2117a3592_Parser>, jule::Ptr<jule::I64>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Slice<jule::Ptr<_21110ed44_EnumItemDecl>> _2117ab743_build_enum_items(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_211110262_EnumDecl> _2117aba51_build_enum_decl(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_211110c46_FieldDecl> _2117abd5e_build_field(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Slice<jule::Ptr<_211110c46_FieldDecl>> _2117ac1b1_build_struct_decl_fields(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_2111115a4_StructDecl> _2117ac4ad_build_struct_decl(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _2117ac733_check_method_receiver(_2117a3592_Parser*, jule::Ptr<_21110ce74_FnDecl>&);
inline jule::Slice<jule::Ptr<_21110ce74_FnDecl>> _2117aca41_build_trait_methods(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_211111bae_TraitDecl> _2117acd4e_build_trait_decl(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_21110ce74_FnDecl> _2117ad15c_build_cpp_link_fn(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110d161_VarDecl> _2117ad46a_build_cpp_link_var(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_2111115a4_StructDecl> _2117ad778_build_cpp_link_struct(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110e591_TypeAliasDecl> _2117adaca_build_cpp_link_type_alias(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_21110eb57_UseDecl> _2117addc7_build_cpp_link_use(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Any _2117ae1d5_build_cpp_link(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_21110ce74_FnDecl> _2117ae4e3_get_method(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _2117ae812_parse_impl_body(jule::Ptr<_2117a3592_Parser>, jule::Ptr<_2111122b9_Impl>&, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_2111122b9_Impl> _2117aeb20_build_impl(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Any _2117aee2d_build_node_data(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _2117b01a3_check_directive(_2117a3592_Parser*, _2110cc1c9_Node&);
inline void _2117b04c2_apply_fn_meta(_2117a3592_Parser*, jule::Ptr<_21110ce74_FnDecl>&, jule::Bool);
inline void _2117b07e1_apply_meta(_2117a3592_Parser*, _2110cc1c9_Node&, jule::Bool);
inline void _2117b0a66_check_use_decl(_2117a3592_Parser*, _2110cc1c9_Node&);
inline std::tuple<jule::Bool,jule::Any> _2117b0db8_build_general_scope_node_data(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline _2110cc1c9_Node _2117b11b5_parse_node(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _2117b143a_append_node(jule::Ptr<_2117a3592_Parser>, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _2117b189c_remove_range(_2117a3592_Parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Slice<jule::I64>&);
inline void _2117b1ca9_push_wrong_order_close_err(_2117a3592_Parser*, jule::Ptr<_2110e7238_Token>&, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Slice<jule::I64>&);
inline void _2117b220a_push_range_close(_2117a3592_Parser*, jule::Ptr<_2110e7238_Token>, jule::Str, jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::Slice<jule::I64>&);
inline void _2117b2480_check_ranges(_2117a3592_Parser*, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline void _2117b2705_parse(jule::Ptr<_2117a3592_Parser>, jule::Ptr<_2110ec628_File>&);
struct _2117a3592_Parser {
	jule::Ptr<_210eb3d6e_Ast> _field_ast = jule::Ptr<_210eb3d6e_Ast>();
	jule::Slice<jule::Ptr<_210eb33e0_Directive>> _field_directives = jule::Slice<jule::Ptr<_210eb33e0_Directive>>();
	jule::Slice<_210c3ee2a_Log> _field_errors = jule::Slice<_210c3ee2a_Log>();


	_2117a3592_Parser(jule::Ptr<_210eb3d6e_Ast> __param_ast, jule::Slice<jule::Ptr<_210eb33e0_Directive>> __param_directives, jule::Slice<_210c3ee2a_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_errors(__param_errors) {}

	

	_2117a3592_Parser(void) = default;

	inline bool operator==(_2117a3592_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_2117a3592_Parser _other) { return !this->operator==(_other); }


};
inline void _2117b4460_push_err(_2117b3d88_TypeBuilder*, jule::Ptr<_2110e7238_Token>, jule::Str);
inline void _2117b477e_push_suggestion(_2117b3d88_TypeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b49e3_build_prim(_2117b3d88_TypeBuilder*);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b4c57_build_namespace(_2117b3d88_TypeBuilder*);
inline jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> _2117b4ebb_build_generics(_2117b3d88_TypeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _2117b5230_ident_generics(_2117b3d88_TypeBuilder*);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b5494_build_ident(_2117b3d88_TypeBuilder*);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b5708_build_cpp_link(_2117b3d88_TypeBuilder*);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b596c_build_fn(_2117b3d88_TypeBuilder*);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b5bd1_build_ptr(_2117b3d88_TypeBuilder*);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b5e45_build_sptr(_2117b3d88_TypeBuilder*);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b61a9_build_op(_2117b3d88_TypeBuilder*);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b641d_build_slc(_2117b3d88_TypeBuilder*);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b6682_build_arr(_2117b3d88_TypeBuilder*);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b6a39_build_map(_2117b3d88_TypeBuilder*, jule::I64, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b6c9d_build_enumerable(_2117b3d88_TypeBuilder*);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b7012_step(_2117b3d88_TypeBuilder*);
inline std::tuple<jule::Ptr<_210e7e620_TypeDecl>,jule::Bool> _2117b7276_build(_2117b3d88_TypeBuilder*);
struct _2117b3d88_TypeBuilder {
	jule::Ptr<_2117a3592_Parser> _field_p = jule::Ptr<_2117a3592_Parser>();
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_tokens = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();


	_2117b3d88_TypeBuilder(jule::Ptr<_2117a3592_Parser> __param_p, jule::Slice<jule::Ptr<_2110e7238_Token>> __param_tokens, jule::I64* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_2117b3d88_TypeBuilder(void) = default;

	inline bool operator==(_2117b3d88_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_2117b3d88_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1a808a6da_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();


	_1a808a6da_FloatInfo(jule::U64 __param_mantbits, jule::U64 __param_expbits, jule::I64 __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_1a808a6da_FloatInfo(void) = default;

	inline bool operator==(_1a808a6da_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1a808a6da_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1a6719101_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();


	_1a6719101_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::I64 __param_nd, jule::I64 __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_1a6719101_DecimalSlice(void) = default;

	inline bool operator==(_1a6719101_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1a6719101_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1a83046ac_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();


	_1a83046ac_LeftCheat(jule::I64 __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_1a83046ac_LeftCheat(void) = default;

	inline bool operator==(_1a83046ac_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1a83046ac_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a65ee118_set(_1a8304899_Decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1a67158c2_float_bits(_1a8304899_Decimal*, _1a808a6da_FloatInfo&);
inline void _1a8304a86_assign(_1a8304899_Decimal*, jule::U64);
inline void _1a8304bb8_shift(_1a8304899_Decimal*, jule::I64);
inline void _1a8304cea_round_down(_1a8304899_Decimal*, jule::I64);
inline void _1a8304e2c_round_up(_1a8304899_Decimal*, jule::I64);
inline void _1a830505e_round(_1a8304899_Decimal*, jule::I64);
inline jule::U64 _1a8305191_rounded_integer(_1a8304899_Decimal*);
struct _1a8304899_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();


	_1a8304899_Decimal(jule::Array<jule::U8,800> __param_d, jule::I64 __param_nd, jule::I64 __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_1a8304899_Decimal(void) = default;

	inline bool operator==(_1a8304899_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1a8304899_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a83a871c_Const> static__1a83a8909_new_i64(jule::I64);
inline jule::Ptr<_1a83a871c_Const> static__1a83a8a3b_new_u64(jule::U64);
inline jule::Ptr<_1a83a871c_Const> static__1a83a8b6d_new_bool(jule::Bool);
inline jule::Ptr<_1a83a871c_Const> static__1a83a8de3_new_str(jule::Str);
inline jule::Ptr<_1a83a871c_Const> static__1a83a918a_new_f64(jule::F64);
inline jule::Ptr<_1a83a871c_Const> static__1a83a9388_new_nil(void);
inline jule::I64 _1a83a9982_read_i64(_1a83a871c_Const*);
inline jule::U64 _1a83a9be6_read_u64(_1a83a871c_Const*);
inline jule::Bool _1a83a9e5a_read_bool(_1a83a871c_Const*);
inline jule::Str _1a83aa1be_read_str(_1a83a871c_Const*);
inline jule::F64 _1a83aa433_read_f64(_1a83a871c_Const*);
inline jule::I64 _1a83aa697_as_i64(_1a83a871c_Const*);
inline jule::U64 _1a83aa90b_as_u64(_1a83a871c_Const*);
inline jule::F64 _1a83aab70_as_f64(_1a83a871c_Const*);
inline void _1a83aade5_set_i64(_1a83a871c_Const*, jule::I64);
inline void _1a83ab16a_set_u64(_1a83a871c_Const*, jule::U64);
inline void _1a83ab3e0_set_bool(_1a83a871c_Const*, jule::Bool);
inline void _1a83ab665_set_str(_1a83a871c_Const*, jule::Str);
inline void _1a83ab8da_set_f64(_1a83a871c_Const*, jule::F64);
inline void _1a83abab6_set_nil(_1a83a871c_Const*);
inline jule::Bool _1a83abd2a_is_i64(_1a83a871c_Const*);
inline jule::Bool _1a83ac08e_is_u64(_1a83a871c_Const*);
inline jule::Bool _1a83ac303_is_bool(_1a83a871c_Const*);
inline jule::Bool _1a83ac567_is_str(_1a83a871c_Const*);
inline jule::Bool _1a83ac7cb_is_f64(_1a83a871c_Const*);
inline jule::Bool _1a83aca40_is_nil(_1a83a871c_Const*);
inline jule::Bool _1a83acd4d_are_same_types(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83ad15b_and(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83ad469_or(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83ad777_eq(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83ada85_lt(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83add93_lt_eq(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83ae1a1_gt(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83ae4ae_gt_eq(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83ae7bc_add(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83aeaca_sub(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83aedd8_mul(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83b01e6_div(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83b0504_mod(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83b0812_bitwise_and(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83b0b20_bitwise_or(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83b0e2d_xor(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83b123b_lshift(_1a83a871c_Const*, _1a83a871c_Const);
inline jule::Bool _1a83b1549_rshift(_1a83a871c_Const*, _1a83a871c_Const);
struct _1a83a871c_Const {
	jule::Any _field_data = jule::Any();


	_1a83a871c_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_1a83a871c_Const(void) = default;

	inline jule::Bool operator==(_1a83a871c_Const _other) { return _1a83ad777_eq(this, _other); }

	inline bool operator!=(_1a83a871c_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1a83a871c_Const _other) { return _1a83ae1a1_gt(this, _other); }

	inline jule::Bool operator>=(_1a83a871c_Const _other) { return _1a83ae4ae_gt_eq(this, _other); }

	inline jule::Bool operator<(_1a83a871c_Const _other) { return _1a83ada85_lt(this, _other); }

	inline jule::Bool operator<=(_1a83a871c_Const _other) { return _1a83add93_lt_eq(this, _other); }


};
inline jule::Ptr<_1a85995ab_FileStream> static__1a8597972_new(jule::Ptr<_20eac0c8a_File>);
inline jule::Exceptional<jule::I64> _1a859d109_read(_1a85995ab_FileStream*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1a859d417_write(_1a85995ab_FileStream*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::Slice<jule::U8>> _1a859d769_read_line(_1a85995ab_FileStream*);
struct _1a85995ab_FileStream {
	jule::Ptr<_20eac0c8a_File> _field_buff = jule::Ptr<_20eac0c8a_File>();


	_1a85995ab_FileStream(jule::Ptr<_20eac0c8a_File> __param_buff): _field_buff(__param_buff) {}

	

	_1a85995ab_FileStream(void) = default;

	inline bool operator==(_1a85995ab_FileStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1a85995ab_FileStream _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::I64> _1a85a0c11_read(_1a85a056d_ByteStream*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1a85a101e_write(_1a85a056d_ByteStream*, jule::Slice<jule::U8>);
inline jule::Ptr<_1a85a056d_ByteStream> static__1a85a132c_new(void);
inline jule::Bool _1a85a1591_data(_1a85a056d_ByteStream*);
inline void _1a85a176c_fit(_1a85a056d_ByteStream*);
struct _1a85a056d_ByteStream {
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();


	_1a85a056d_ByteStream(jule::Slice<jule::U8> __param_buff): _field_buff(__param_buff) {}

	

	_1a85a056d_ByteStream(void) = default;

	inline bool operator==(_1a85a056d_ByteStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1a85a056d_ByteStream _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a85a2b14_Scanner> static__1a85a3043_new(jule::Trait<_1a859deb7_Reader>);
inline jule::Ptr<_1a85a2b14_Scanner> static__1a85a32da_newf(jule::Ptr<_20eac0c8a_File>);
inline void _1a85a35d7_reset(_1a85a2b14_Scanner*);
inline jule::Slice<jule::U8> _1a85a384b_bytes(_1a85a2b14_Scanner*);
inline jule::Str _1a85a3ab0_text(_1a85a2b14_Scanner*);
inline jule::Exceptional<jule::Bool> _1a85a3d24_scan(_1a85a2b14_Scanner*);
struct _1a85a2b14_Scanner {
	jule::Trait<_1a859deb7_Reader> _field_r = jule::Trait<_1a859deb7_Reader>();
	jule::Slice<jule::U8> _field_b = jule::Slice<jule::U8>();


	_1a85a2b14_Scanner(jule::Trait<_1a859deb7_Reader> __param_r, jule::Slice<jule::U8> __param_b): _field_r(__param_r), _field_b(__param_b) {}

	

	_1a85a2b14_Scanner(void) = default;

	inline bool operator==(_1a85a2b14_Scanner _other) {
		return 
			this->_field_r == _other._field_r &&
			this->_field_b == _other._field_b;
	}

	inline bool operator!=(_1a85a2b14_Scanner _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b396694b_FieldIns> _1b3961e85_instance(jule::Ptr<_1b38b3d0a_Field>);
struct _1b38b3d0a_Field {
	jule::Ptr<_1b396462a_Struct> _field_owner = jule::Ptr<_1b396462a_Struct>();
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a8511a84_TypeSymbol> _field_kind = jule::Ptr<_1a8511a84_TypeSymbol>();
	jule::Ptr<_210e87caa_Expr> _field_default = jule::Ptr<_210e87caa_Expr>();


	_1b38b3d0a_Field(jule::Ptr<_1b396462a_Struct> __param_owner, jule::Ptr<_2110e7238_Token> __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1a8511a84_TypeSymbol> __param_kind, jule::Ptr<_210e87caa_Expr> __param_default): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1b38b3d0a_Field(void) = default;

	inline bool operator==(_1b38b3d0a_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1b38b3d0a_Field _other) { return !this->operator==(_other); }


};
struct _1b3963816_Operators {
	jule::Ptr<_1a5b33164_FnIns> _field_eq = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_gt = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_gt_eq = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_lt = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_lt_eq = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_shl = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_shr = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_add = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_sub = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_div = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_mul = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_mod = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_bit_and = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_bit_or = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_bit_xor = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_neg = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_pos = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_bit_not = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_add_assign = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_sub_assign = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_div_assign = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_mul_assign = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_mod_assign = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_shl_assign = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_shr_assign = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_bit_or_assign = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_bit_and_assign = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b33164_FnIns> _field_bit_xor_assign = jule::Ptr<_1a5b33164_FnIns>();


	_1b3963816_Operators(jule::Ptr<_1a5b33164_FnIns> __param_eq, jule::Ptr<_1a5b33164_FnIns> __param_gt, jule::Ptr<_1a5b33164_FnIns> __param_gt_eq, jule::Ptr<_1a5b33164_FnIns> __param_lt, jule::Ptr<_1a5b33164_FnIns> __param_lt_eq, jule::Ptr<_1a5b33164_FnIns> __param_shl, jule::Ptr<_1a5b33164_FnIns> __param_shr, jule::Ptr<_1a5b33164_FnIns> __param_add, jule::Ptr<_1a5b33164_FnIns> __param_sub, jule::Ptr<_1a5b33164_FnIns> __param_div, jule::Ptr<_1a5b33164_FnIns> __param_mul, jule::Ptr<_1a5b33164_FnIns> __param_mod, jule::Ptr<_1a5b33164_FnIns> __param_bit_and, jule::Ptr<_1a5b33164_FnIns> __param_bit_or, jule::Ptr<_1a5b33164_FnIns> __param_bit_xor, jule::Ptr<_1a5b33164_FnIns> __param_neg, jule::Ptr<_1a5b33164_FnIns> __param_pos, jule::Ptr<_1a5b33164_FnIns> __param_bit_not, jule::Ptr<_1a5b33164_FnIns> __param_add_assign, jule::Ptr<_1a5b33164_FnIns> __param_sub_assign, jule::Ptr<_1a5b33164_FnIns> __param_div_assign, jule::Ptr<_1a5b33164_FnIns> __param_mul_assign, jule::Ptr<_1a5b33164_FnIns> __param_mod_assign, jule::Ptr<_1a5b33164_FnIns> __param_shl_assign, jule::Ptr<_1a5b33164_FnIns> __param_shr_assign, jule::Ptr<_1a5b33164_FnIns> __param_bit_or_assign, jule::Ptr<_1a5b33164_FnIns> __param_bit_and_assign, jule::Ptr<_1a5b33164_FnIns> __param_bit_xor_assign): _field_eq(__param_eq), _field_gt(__param_gt), _field_gt_eq(__param_gt_eq), _field_lt(__param_lt), _field_lt_eq(__param_lt_eq), _field_shl(__param_shl), _field_shr(__param_shr), _field_add(__param_add), _field_sub(__param_sub), _field_div(__param_div), _field_mul(__param_mul), _field_mod(__param_mod), _field_bit_and(__param_bit_and), _field_bit_or(__param_bit_or), _field_bit_xor(__param_bit_xor), _field_neg(__param_neg), _field_pos(__param_pos), _field_bit_not(__param_bit_not), _field_add_assign(__param_add_assign), _field_sub_assign(__param_sub_assign), _field_div_assign(__param_div_assign), _field_mul_assign(__param_mul_assign), _field_mod_assign(__param_mod_assign), _field_shl_assign(__param_shl_assign), _field_shr_assign(__param_shr_assign), _field_bit_or_assign(__param_bit_or_assign), _field_bit_and_assign(__param_bit_and_assign), _field_bit_xor_assign(__param_bit_xor_assign) {}

	

	_1b3963816_Operators(void) = default;

	inline bool operator==(_1b3963816_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1b3963816_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b39672a9_StructIns> _1b3964a59_instance(jule::Ptr<_1b396462a_Struct>);
inline jule::Ptr<_1b39672a9_StructIns> _1b3964d67_append_instance(_1b396462a_Struct*, jule::Ptr<_1b39672a9_StructIns>&);
inline jule::Ptr<_1a5b2eeb8_Fn> _1b396521e_find_method(_1b396462a_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1a8487246_Var> _1b396552c_find_static(_1b396462a_Struct*, jule::Str);
inline jule::Ptr<_1b38b3d0a_Field> _1b396583a_find_field(_1b396462a_Struct*, jule::Str);
inline jule::Bool _1b3965b48_is_implements(_1b396462a_Struct*, jule::Ptr<_1a5e34531_Trait>);
inline jule::Bool _1b3965e56_is_derives(_1b396462a_Struct*, jule::Str);
inline jule::Bool _1b3966264_is_uses(_1b396462a_Struct*, jule::Ptr<_1b396462a_Struct>);
inline jule::Bool _1b39664c8_has_ref_accessible(_1b396462a_Struct*);
struct _1b396462a_Struct {
	jule::Ptr<_1a846bc42_Sema> _field_sema = jule::Ptr<_1a846bc42_Sema>();
	jule::Slice<jule::Ptr<_1b396462a_Struct>> _field_depends = jule::Slice<jule::Ptr<_1b396462a_Struct>>();
	jule::Slice<jule::Ptr<_1b396462a_Struct>> _field_uses = jule::Slice<jule::Ptr<_1b396462a_Struct>>();
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1b38b3d0a_Field>> _field_fields = jule::Slice<jule::Ptr<_1b38b3d0a_Field>>();
	jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>();
	jule::Slice<jule::Ptr<_1a8487246_Var>> _field_statics = jule::Slice<jule::Ptr<_1a8487246_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_210eb33e0_Directive>> _field_directives = jule::Slice<jule::Ptr<_210eb33e0_Directive>>();
	jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a5e34531_Trait>> _field_implements = jule::Slice<jule::Ptr<_1a5e34531_Trait>>();
	jule::Slice<jule::Ptr<_1b39672a9_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1b39672a9_StructIns>>();


	_1b396462a_Struct(jule::Ptr<_1a846bc42_Sema> __param_sema, jule::Slice<jule::Ptr<_1b396462a_Struct>> __param_depends, jule::Slice<jule::Ptr<_1b396462a_Struct>> __param_uses, jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_1b38b3d0a_Field>> __param_fields, jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> __param_methods, jule::Slice<jule::Ptr<_1a8487246_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_210eb33e0_Directive>> __param_directives, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> __param_generics, jule::Slice<jule::Ptr<_1a5e34531_Trait>> __param_implements, jule::Slice<jule::Ptr<_1b39672a9_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {}

	

	_1b396462a_Struct(void) = default;

	inline bool operator==(_1b396462a_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1b396462a_Struct _other) { return !this->operator==(_other); }


};
struct _1b396694b_FieldIns {
	jule::Ptr<_1b38b3d0a_Field> _field_decl = jule::Ptr<_1b38b3d0a_Field>();
	jule::Ptr<_1a850cbe5_TypeKind> _field_kind = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Ptr<_1a84d3869_Data> _field_default = jule::Ptr<_1a84d3869_Data>();


	_1b396694b_FieldIns(jule::Ptr<_1b38b3d0a_Field> __param_decl, jule::Ptr<_1a850cbe5_TypeKind> __param_kind, jule::Ptr<_1a84d3869_Data> __param_default): _field_decl(__param_decl), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1b396694b_FieldIns(void) = default;

	inline bool operator==(_1b396694b_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1b396694b_FieldIns _other) { return !this->operator==(_other); }


};
struct _1b3968e15_OperandExprModel {
	jule::Ptr<_1a850cbe5_TypeKind> _field_kind = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Any _field_model = jule::Any();


	_1b3968e15_OperandExprModel(jule::Ptr<_1a850cbe5_TypeKind> __param_kind, jule::Any __param_model): _field_kind(__param_kind), _field_model(__param_model) {}

	

	_1b3968e15_OperandExprModel(void) = default;

	inline bool operator==(_1b3968e15_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1b3968e15_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1b39693cc_BinopExprModel {
	jule::Ptr<_1b3968e15_OperandExprModel> _field_left = jule::Ptr<_1b3968e15_OperandExprModel>();
	jule::Ptr<_1b3968e15_OperandExprModel> _field_right = jule::Ptr<_1b3968e15_OperandExprModel>();
	jule::Ptr<_2110e7238_Token> _field_op = jule::Ptr<_2110e7238_Token>();


	_1b39693cc_BinopExprModel(jule::Ptr<_1b3968e15_OperandExprModel> __param_left, jule::Ptr<_1b3968e15_OperandExprModel> __param_right, jule::Ptr<_2110e7238_Token> __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1b39693cc_BinopExprModel(void) = default;

	inline bool operator==(_1b39693cc_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1b39693cc_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1b3969784_UnaryExprModel {
	jule::Ptr<_1a84d3869_Data> _field_expr = jule::Ptr<_1a84d3869_Data>();
	jule::Ptr<_2110e7238_Token> _field_op = jule::Ptr<_2110e7238_Token>();


	_1b3969784_UnaryExprModel(jule::Ptr<_1a84d3869_Data> __param_expr, jule::Ptr<_2110e7238_Token> __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1b3969784_UnaryExprModel(void) = default;

	inline bool operator==(_1b3969784_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1b3969784_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1b3969b80_StructArgExprModel {
	jule::Ptr<_1b396694b_FieldIns> _field_field = jule::Ptr<_1b396694b_FieldIns>();
	jule::Any _field_expr = jule::Any();


	_1b3969b80_StructArgExprModel(jule::Ptr<_1b396694b_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1b3969b80_StructArgExprModel(void) = default;

	inline bool operator==(_1b3969b80_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1b3969b80_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1b396a037_StructLitExprModel {
	jule::Ptr<_1b39672a9_StructIns> _field_strct = jule::Ptr<_1b39672a9_StructIns>();
	jule::Slice<jule::Ptr<_1b3969b80_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1b3969b80_StructArgExprModel>>();


	_1b396a037_StructLitExprModel(jule::Ptr<_1b39672a9_StructIns> __param_strct, jule::Slice<jule::Ptr<_1b3969b80_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_1b396a037_StructLitExprModel(void) = default;

	inline bool operator==(_1b396a037_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1b396a037_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1b396a367_AllocStructLitExprModel {
	jule::Ptr<_1b396a037_StructLitExprModel> _field_lit = jule::Ptr<_1b396a037_StructLitExprModel>();


	_1b396a367_AllocStructLitExprModel(jule::Ptr<_1b396a037_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_1b396a367_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1b396a367_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1b396a367_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1b396a895_CastingExprModel {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a850cbe5_TypeKind> _field_kind = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Ptr<_1a850cbe5_TypeKind> _field_expr_kind = jule::Ptr<_1a850cbe5_TypeKind>();


	_1b396a895_CastingExprModel(jule::Ptr<_2110e7238_Token> __param_token, jule::Any __param_expr, jule::Ptr<_1a850cbe5_TypeKind> __param_kind, jule::Ptr<_1a850cbe5_TypeKind> __param_expr_kind): _field_token(__param_token), _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_1b396a895_CastingExprModel(void) = default;

	inline bool operator==(_1b396a895_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1b396a895_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1b396b1c0_FnCallExprModel {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_1a5b33164_FnIns> _field_func = jule::Ptr<_1a5b33164_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1a8438e62_Scope> _field_except = jule::Ptr<_1a8438e62_Scope>();
	jule::Bool _field_assigned = jule::Bool();


	_1b396b1c0_FnCallExprModel(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_1a5b33164_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args, jule::Ptr<_1a8438e62_Scope> __param_except, jule::Bool __param_assigned): _field_token(__param_token), _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args), _field_except(__param_except), _field_assigned(__param_assigned) {}

	

	_1b396b1c0_FnCallExprModel(void) = default;

	inline bool operator==(_1b396b1c0_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1b396b1c0_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b396b577_SliceExprModel {
	jule::Ptr<_1a850cbe5_TypeKind> _field_elem_kind = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1b396b577_SliceExprModel(jule::Ptr<_1a850cbe5_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_1b396b577_SliceExprModel(void) = default;

	inline bool operator==(_1b396b577_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1b396b577_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1b396b9ea_IndexingExprModel {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_1a84d3869_Data> _field_expr = jule::Ptr<_1a84d3869_Data>();
	jule::Ptr<_1a84d3869_Data> _field_index = jule::Ptr<_1a84d3869_Data>();


	_1b396b9ea_IndexingExprModel(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_1a84d3869_Data> __param_expr, jule::Ptr<_1a84d3869_Data> __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1b396b9ea_IndexingExprModel(void) = default;

	inline bool operator==(_1b396b9ea_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1b396b9ea_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1b396bda2_AnonFnExprModel {
	jule::Ptr<_1a5b33164_FnIns> _field_func = jule::Ptr<_1a5b33164_FnIns>();
	jule::Bool _field_global = jule::Bool();


	_1b396bda2_AnonFnExprModel(jule::Ptr<_1a5b33164_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_1b396bda2_AnonFnExprModel(void) = default;

	inline bool operator==(_1b396bda2_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1b396bda2_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1b396c259_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();


	_1b396c259_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1b396c259_KeyValPairExprModel(void) = default;

	inline bool operator==(_1b396c259_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1b396c259_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1b396c6cc_MapExprModel {
	jule::Ptr<_1a850cbe5_TypeKind> _field_key_kind = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Ptr<_1a850cbe5_TypeKind> _field_val_kind = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Slice<jule::Ptr<_1b396c259_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1b396c259_KeyValPairExprModel>>();


	_1b396c6cc_MapExprModel(jule::Ptr<_1a850cbe5_TypeKind> __param_key_kind, jule::Ptr<_1a850cbe5_TypeKind> __param_val_kind, jule::Slice<jule::Ptr<_1b396c259_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_1b396c6cc_MapExprModel(void) = default;

	inline bool operator==(_1b396c6cc_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1b396c6cc_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1b396cc1b_SlicingExprModel {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1b396cc1b_SlicingExprModel(jule::Ptr<_2110e7238_Token> __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1b396cc1b_SlicingExprModel(void) = default;

	inline bool operator==(_1b396cc1b_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1b396cc1b_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1b396d25a_TraitSubIdentExprModel {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a5b2eeb8_Fn> _field_method = jule::Ptr<_1a5b2eeb8_Fn>();
	jule::Ptr<_1a5e34531_Trait> _field_trt = jule::Ptr<_1a5e34531_Trait>();


	_1b396d25a_TraitSubIdentExprModel(jule::Ptr<_2110e7238_Token> __param_token, jule::Any __param_expr, jule::Ptr<_1a5b2eeb8_Fn> __param_method, jule::Ptr<_1a5e34531_Trait> __param_trt): _field_token(__param_token), _field_expr(__param_expr), _field_method(__param_method), _field_trt(__param_trt) {}

	

	_1b396d25a_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1b396d25a_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1b396d25a_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b396d9ca_StructSubIdentExprModel {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_1a84d3869_Data> _field_expr = jule::Ptr<_1a84d3869_Data>();
	jule::Ptr<_1a850cbe5_TypeKind> _field_expr_kind = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Ptr<_1a5b33164_FnIns> _field_method = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1b396694b_FieldIns> _field_field = jule::Ptr<_1b396694b_FieldIns>();


	_1b396d9ca_StructSubIdentExprModel(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_1a84d3869_Data> __param_expr, jule::Ptr<_1a850cbe5_TypeKind> __param_expr_kind, jule::Ptr<_1a5b33164_FnIns> __param_method, jule::Ptr<_1b396694b_FieldIns> __param_field): _field_token(__param_token), _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_1b396d9ca_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1b396d9ca_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1b396d9ca_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b396de81_StructStaticIdentExprModel {
	jule::Ptr<_1b39672a9_StructIns> _field_structure = jule::Ptr<_1b39672a9_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a5b33164_FnIns> _field_method = jule::Ptr<_1a5b33164_FnIns>();


	_1b396de81_StructStaticIdentExprModel(jule::Ptr<_1b39672a9_StructIns> __param_structure, jule::Any __param_expr, jule::Ptr<_1a5b33164_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_1b396de81_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1b396de81_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1b396de81_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b396e327_ArrayExprModel {
	jule::Ptr<_1a851855d_Arr> _field_kind = jule::Ptr<_1a851855d_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1b396e327_ArrayExprModel(jule::Ptr<_1a851855d_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_1b396e327_ArrayExprModel(void) = default;

	inline bool operator==(_1b396e327_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1b396e327_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1b396e613_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();


	_1b396e613_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1b396e613_CommonIdentExprModel(void) = default;

	inline bool operator==(_1b396e613_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1b396e613_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b396eb96_CommonSubIdentExprModel {
	jule::Ptr<_1a850cbe5_TypeKind> _field_expr_kind = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();


	_1b396eb96_CommonSubIdentExprModel(jule::Ptr<_1a850cbe5_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1b396eb96_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1b396eb96_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1b396eb96_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b396ee71_TupleExprModel {
	jule::Slice<jule::Ptr<_1a84d3869_Data>> _field_datas = jule::Slice<jule::Ptr<_1a84d3869_Data>>();


	_1b396ee71_TupleExprModel(jule::Slice<jule::Ptr<_1a84d3869_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_1b396ee71_TupleExprModel(void) = default;

	inline bool operator==(_1b396ee71_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1b396ee71_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1b397036c_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1b397036c_BuiltinOutCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1b397036c_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1b397036c_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1b397036c_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b3970757_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1b3970757_BuiltinOutlnCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1b3970757_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1b3970757_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1b3970757_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b3970a76_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1b3970a76_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1b3970a76_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1b3970a76_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1b3970a76_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b3970e61_BuiltinNewCallExprModel {
	jule::Ptr<_1a850cbe5_TypeKind> _field_kind = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Any _field_init = jule::Any();


	_1b3970e61_BuiltinNewCallExprModel(jule::Ptr<_1a850cbe5_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_1b3970e61_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1b3970e61_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1b3970e61_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b397134b_BuiltinPanicCallExprModel {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Any _field_expr = jule::Any();


	_1b397134b_BuiltinPanicCallExprModel(jule::Ptr<_2110e7238_Token> __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1b397134b_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1b397134b_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1b397134b_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b3971802_BuiltinAssertCallExprModel {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();


	_1b3971802_BuiltinAssertCallExprModel(jule::Ptr<_2110e7238_Token> __param_token, jule::Any __param_expr, jule::Str __param_log): _field_token(__param_token), _field_expr(__param_expr), _field_log(__param_log) {}

	

	_1b3971802_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1b3971802_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1b3971802_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5b2a568_BuiltinMakeCallExprModel {
	jule::Ptr<_1a850cbe5_TypeKind> _field_kind = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();


	_1a5b2a568_BuiltinMakeCallExprModel(jule::Ptr<_1a850cbe5_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_1a5b2a568_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1a5b2a568_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1a5b2a568_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5b2a7bb_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();


	_1a5b2a7bb_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_1a5b2a7bb_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1a5b2a7bb_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1a5b2a7bb_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5b2ab95_BuiltinErrorCallExprModel {
	jule::Ptr<_1a5b33164_FnIns> _field_func = jule::Ptr<_1a5b33164_FnIns>();
	jule::Any _field_err = jule::Any();


	_1a5b2ab95_BuiltinErrorCallExprModel(jule::Ptr<_1a5b33164_FnIns> __param_func, jule::Any __param_err): _field_func(__param_func), _field_err(__param_err) {}

	

	_1a5b2ab95_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1a5b2ab95_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1a5b2ab95_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a5b2ae70_SizeofExprModel {
	jule::Any _field_expr = jule::Any();


	_1a5b2ae70_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a5b2ae70_SizeofExprModel(void) = default;

	inline bool operator==(_1a5b2ae70_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a5b2ae70_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1a5b2b5e1_AlignofExprModel {
	jule::Any _field_expr = jule::Any();


	_1a5b2b5e1_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a5b2b5e1_AlignofExprModel(void) = default;

	inline bool operator==(_1a5b2b5e1_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a5b2b5e1_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1a5b2b7cd_RuneExprModel {
	jule::I32 _field_code = jule::I32();


	_1a5b2b7cd_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_1a5b2b7cd_RuneExprModel(void) = default;

	inline bool operator==(_1a5b2b7cd_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1a5b2b7cd_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1a5b2bab9_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();


	_1a5b2bab9_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a5b2bab9_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1a5b2bab9_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a5b2bab9_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1a5b2be60_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_1a5b2be60_BackendEmitExprModel(jule::Str __param_code, jule::Slice<jule::Any> __param_exprs): _field_code(__param_code), _field_exprs(__param_exprs) {}

	

	_1a5b2be60_BackendEmitExprModel(void) = default;

	inline bool operator==(_1a5b2be60_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1a5b2be60_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1a5b2c24b_FreeExprModel {
	jule::Any _field_expr = jule::Any();


	_1a5b2c24b_FreeExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a5b2c24b_FreeExprModel(void) = default;

	inline bool operator==(_1a5b2c24b_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a5b2c24b_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1a5b2cea5_RetType {
	jule::Ptr<_1a8511a84_TypeSymbol> _field_kind = jule::Ptr<_1a8511a84_TypeSymbol>();
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_idents = jule::Slice<jule::Ptr<_2110e7238_Token>>();


	_1a5b2cea5_RetType(jule::Ptr<_1a8511a84_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_2110e7238_Token>> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1a5b2cea5_RetType(void) = default;

	inline bool operator==(_1a5b2cea5_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1a5b2cea5_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a5b322c8_ParamIns> _1a5b2da44_instance(jule::Ptr<_1a5b2d67b_Param>);
inline jule::Bool _1a5b2dca8_is_self(_1a5b2d67b_Param*);
inline jule::Bool _1a5b2e01c_is_ref(_1a5b2d67b_Param*);
struct _1a5b2d67b_Param {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a8511a84_TypeSymbol> _field_kind = jule::Ptr<_1a8511a84_TypeSymbol>();
	jule::Str _field_ident = jule::Str();


	_1a5b2d67b_Param(jule::Ptr<_2110e7238_Token> __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1a8511a84_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1a5b2d67b_Param(void) = default;

	inline bool operator==(_1a5b2d67b_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a5b2d67b_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a5b30419_is_void(_1a5b2eeb8_Fn*);
inline jule::Bool _1a5b3067d_is_method(_1a5b2eeb8_Fn*);
inline jule::Bool _1a5b308e2_is_entry_point(_1a5b2eeb8_Fn*);
inline jule::Bool _1a5b30b56_is_init(_1a5b2eeb8_Fn*);
inline jule::Bool _1a5b30dba_is_anon(_1a5b2eeb8_Fn*);
inline jule::Bool _1a5b3112e_any_var(_1a5b2eeb8_Fn*);
inline jule::Bool _1a5b313d7_parameters_uses_generics(_1a5b2eeb8_Fn*);
inline jule::Bool _1a5b3163a_result_uses_generics(_1a5b2eeb8_Fn*);
inline jule::Ptr<_1a5b33164_FnIns> _1a5b3189e_instance_force(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Ptr<_1a5b33164_FnIns> _1a5b31b13_instance(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Ptr<_1a5b33164_FnIns> _1a5b31e21_append_instance(_1a5b2eeb8_Fn*, jule::Ptr<_1a5b33164_FnIns>&);
struct _1a5b2eeb8_Fn {
	jule::Ptr<_1a846bc42_Sema> _field_sema = jule::Ptr<_1a846bc42_Sema>();
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_210eb33e0_Directive>> _field_directives = jule::Slice<jule::Ptr<_210eb33e0_Directive>>();
	jule::Ptr<_21110ca9a_ScopeTree> _field_scope = jule::Ptr<_21110ca9a_ScopeTree>();
	jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>();
	jule::Ptr<_1a5b2cea5_RetType> _field_result = jule::Ptr<_1a5b2cea5_RetType>();
	jule::Slice<jule::Ptr<_1a5b2d67b_Param>> _field_params = jule::Slice<jule::Ptr<_1a5b2d67b_Param>>();
	jule::Ptr<_1b396462a_Struct> _field_owner = jule::Ptr<_1b396462a_Struct>();
	jule::Slice<jule::Ptr<_1a5b33164_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1a5b33164_FnIns>>();


	_1a5b2eeb8_Fn(jule::Ptr<_1a846bc42_Sema> __param_sema, jule::Ptr<_2110e7238_Token> __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_210eb33e0_Directive>> __param_directives, jule::Ptr<_21110ca9a_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> __param_generics, jule::Ptr<_1a5b2cea5_RetType> __param_result, jule::Slice<jule::Ptr<_1a5b2d67b_Param>> __param_params, jule::Ptr<_1b396462a_Struct> __param_owner, jule::Slice<jule::Ptr<_1a5b33164_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {}

	

	_1a5b2eeb8_Fn(void) = default;

	inline bool operator==(_1a5b2eeb8_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1a5b2eeb8_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1a5b326a2_to_str(_1a5b322c8_ParamIns*);
struct _1a5b322c8_ParamIns {
	jule::Ptr<_1a5b2d67b_Param> _field_decl = jule::Ptr<_1a5b2d67b_Param>();
	jule::Ptr<_1a850cbe5_TypeKind> _field_kind = jule::Ptr<_1a850cbe5_TypeKind>();


	_1a5b322c8_ParamIns(jule::Ptr<_1a5b2d67b_Param> __param_decl, jule::Ptr<_1a850cbe5_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1a5b322c8_ParamIns(void) = default;

	inline bool operator==(_1a5b322c8_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a5b322c8_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1a5b334c7_to_str(_1a5b33164_FnIns*);
inline jule::Bool _1a5b337d5_equals(jule::Ptr<_1a5b33164_FnIns>, jule::Ptr<_1a850cbe5_TypeKind>);
inline jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> _1a5b33b7b_types(_1a5b33164_FnIns*);
inline jule::Bool _1a5b33de0_is_builtin(_1a5b33164_FnIns*);
inline jule::Bool _1a5b34154_is_anon(_1a5b33164_FnIns*);
inline jule::Bool _1a5b34462_same(_1a5b33164_FnIns*, jule::Ptr<_1a5b33164_FnIns>);
inline jule::Str _1a5b34770_get_kind_str(_1a5b33164_FnIns*, jule::Bool);
struct _1a5b33164_FnIns {
	jule::Ptr<_1b39672a9_StructIns> _field_owner = jule::Ptr<_1b39672a9_StructIns>();
	jule::Ptr<_1a5b2eeb8_Fn> _field_decl = jule::Ptr<_1a5b2eeb8_Fn>();
	jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>();
	jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>();
	jule::Ptr<_1a850cbe5_TypeKind> _field_result = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Ptr<_1a8438e62_Scope> _field_scope = jule::Ptr<_1a8438e62_Scope>();
	jule::Ptr<_1a5b36222_ReferenceStack> _field_references = jule::Ptr<_1a5b36222_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();


	_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns> __param_owner, jule::Ptr<_1a5b2eeb8_Fn> __param_decl, jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>> __param_params, jule::Ptr<_1a850cbe5_TypeKind> __param_result, jule::Ptr<_1a8438e62_Scope> __param_scope, jule::Ptr<_1a5b36222_ReferenceStack> __param_references, jule::Bool __param_anon, jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)> __param_caller, jule::Bool __param_reloaded): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_anon(__param_anon), _field_caller(__param_caller), _field_reloaded(__param_reloaded) {}

	

	_1a5b33164_FnIns(void) = default;

	inline bool operator==(_1a5b33164_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_references == _other._field_references &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1a5b33164_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a5b36222_ReferenceStack> static__1a5b364a8_new(void);
inline jule::I64 _1a5b3683d_len(_1a5b36222_ReferenceStack*);
inline jule::Any _1a5b36b4b_at(_1a5b36222_ReferenceStack*, jule::I64);
inline void _1a5b36dc1_push(_1a5b36222_ReferenceStack*, jule::Any);
inline jule::Bool _1a5b371ce_exist_0(_1a5b36222_ReferenceStack*, jule::Ptr<_1a8487246_Var>);
inline jule::Bool _1a5b371ce_exist_1(_1a5b36222_ReferenceStack*, jule::Ptr<_1a5b33164_FnIns>);
struct _1a5b36222_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();


	_1a5b36222_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_1a5b36222_ReferenceStack(void) = default;

	inline bool operator==(_1a5b36222_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1a5b36222_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1a5b37586_Pass {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_text = jule::Str();


	_1a5b37586_Pass(jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1a5b37586_Pass(void) = default;

	inline bool operator==(_1a5b37586_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1a5b37586_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a5b3b139_SymbolBuilder> _1a5b3b700_get_root(jule::Ptr<_1a5b3b139_SymbolBuilder>);
inline void _1a5b3bab8_push_err(_1a5b3b139_SymbolBuilder*, jule::Ptr<_2110e7238_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1a5b3be81_push_err_text(_1a5b3b139_SymbolBuilder*, jule::Ptr<_2110e7238_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1a5b3c2a0_push_suggestion(_1a5b3b139_SymbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a5b3c69b_check_cpp_use_decl_path(_1a5b3b139_SymbolBuilder*, jule::Ptr<_21110eb57_UseDecl>&, jule::Str);
inline jule::Ptr<_1a8464058_ImportInfo> _1a5b3c9a9_build_cpp_header_import(_1a5b3b139_SymbolBuilder*, jule::Ptr<_21110eb57_UseDecl>&);
inline jule::Ptr<_1a8464058_ImportInfo> _1a5b3cca6_build_std_import(_1a5b3b139_SymbolBuilder*, jule::Ptr<_21110eb57_UseDecl>&);
inline jule::Ptr<_1a8464058_ImportInfo> _1a5b3d0b4_build_ident_import(jule::Ptr<_1a5b3b139_SymbolBuilder>, jule::Ptr<_21110eb57_UseDecl>&);
inline jule::Ptr<_1a8464058_ImportInfo> _1a5b3d3c2_build_import(jule::Ptr<_1a5b3b139_SymbolBuilder>, jule::Ptr<_21110eb57_UseDecl>&);
inline jule::Bool _1a5b3d724_check_duplicate_use_decl(_1a5b3b139_SymbolBuilder*, jule::Ptr<_1a8464058_ImportInfo>&);
inline void _1a5b3da32_impl_import_selections(_1a5b3b139_SymbolBuilder*, jule::Ptr<_1a8464058_ImportInfo>&, jule::Ptr<_21110eb57_UseDecl>&);
inline jule::Str _1a5b3dd40_get_as_link_path(jule::Ptr<_1a5b3b139_SymbolBuilder>, jule::Str);
inline void _1a5b3e208_push_cycle_error(jule::Ptr<_1a5b3b139_SymbolBuilder>, jule::Ptr<_1a5b3b139_SymbolBuilder>&, jule::Str, jule::Str&);
inline void _1a5b3e5c1_push_cross_cycle_error(jule::Ptr<_1a5b3b139_SymbolBuilder>, jule::Ptr<_1a5b3b139_SymbolBuilder>&, jule::Ptr<_1a8464058_ImportInfo>&, jule::Ptr<_2110e7238_Token>&);
inline jule::Bool _1a5b3e978_check_import_cycles(jule::Ptr<_1a5b3b139_SymbolBuilder>, jule::Ptr<_1a8464058_ImportInfo>, jule::Ptr<_21110eb57_UseDecl>&);
inline void _1a5b3ed85_check_package_accessibility(_1a5b3b139_SymbolBuilder*, jule::Ptr<_21110eb57_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1a5b4022b_import_package(jule::Ptr<_1a5b3b139_SymbolBuilder>, jule::Ptr<_1a8464058_ImportInfo>&, jule::Ptr<_21110eb57_UseDecl>&);
inline jule::Ptr<_1a8464058_ImportInfo> _1a5b40539_import_use_decl(jule::Ptr<_1a5b3b139_SymbolBuilder>, jule::Ptr<_21110eb57_UseDecl>&);
inline void _1a5b40715_import_use_decls(jule::Ptr<_1a5b3b139_SymbolBuilder>);
inline void _1a5b4098a_append_node(_1a5b3b139_SymbolBuilder*, _2110cc1c9_Node&);
inline void _1a5b40b66_append_nodes(_1a5b3b139_SymbolBuilder*);
inline void _1a5b40ddb_push_directive_pass(_1a5b3b139_SymbolBuilder*, jule::Ptr<_210eb33e0_Directive>&);
inline void _1a5b410b7_append_top_directives(_1a5b3b139_SymbolBuilder*);
inline void _1a5b41293_build(jule::Ptr<_1a5b3b139_SymbolBuilder>);
struct _1a5b3b139_SymbolBuilder {
	jule::Ptr<_1a5b3b139_SymbolBuilder> _field_owner = jule::Ptr<_1a5b3b139_SymbolBuilder>();
	jule::Trait<_1a8461be3_Importer> _field_importer = jule::Trait<_1a8461be3_Importer>();
	jule::Slice<_210c3ee2a_Log> _field_errors = jule::Slice<_210c3ee2a_Log>();
	jule::Ptr<_210eb3d6e_Ast> _field_ast = jule::Ptr<_210eb3d6e_Ast>();
	jule::Ptr<_1a84cd7a9_SymbolTable> _field_table = jule::Ptr<_1a84cd7a9_SymbolTable>();


	_1a5b3b139_SymbolBuilder(jule::Ptr<_1a5b3b139_SymbolBuilder> __param_owner, jule::Trait<_1a8461be3_Importer> __param_importer, jule::Slice<_210c3ee2a_Log> __param_errors, jule::Ptr<_210eb3d6e_Ast> __param_ast, jule::Ptr<_1a84cd7a9_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {}

	

	_1a5b3b139_SymbolBuilder(void) = default;

	inline bool operator==(_1a5b3b139_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1a5b3b139_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1e5553ccb_to_str(_1a5e34531_Trait*);
inline jule::Bool _1e55aeb4a_equals(jule::Ptr<_1a5e34531_Trait>, jule::Ptr<_1a850cbe5_TypeKind>);
inline jule::Bool _1e55b07c7_is_builtin(_1a5e34531_Trait*);
inline jule::Ptr<_1a5b2eeb8_Fn> _1a5de9caa_find_method(_1a5e34531_Trait*, jule::Str);
struct _1a5e34531_Trait {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>();
	jule::Slice<jule::Ptr<_1b396462a_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1b396462a_Struct>>();


	_1a5e34531_Trait(jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> __param_methods, jule::Slice<jule::Ptr<_1b396462a_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_methods(__param_methods), _field_implemented(__param_implemented) {}

	

	_1a5e34531_Trait(void) = default;

	inline bool operator==(_1a5e34531_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1a5e34531_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a5dea2b6_auto_expr(_1a8306406_EnumItem*);
struct _1a8306406_EnumItem {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a84d48e2_Value> _field_value = jule::Ptr<_1a84d48e2_Value>();


	_1a8306406_EnumItem(jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident, jule::Ptr<_1a84d48e2_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_1a8306406_EnumItem(void) = default;

	inline bool operator==(_1a8306406_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1a8306406_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1a83067d0_to_str(_1a83065e3_Enum*);
inline jule::Bool _1a8306912_equals(jule::Ptr<_1a83065e3_Enum>, jule::Ptr<_1a850cbe5_TypeKind>);
inline jule::Ptr<_1a8306406_EnumItem> _1a8306a44_find_item(_1a83065e3_Enum*, jule::Str);
struct _1a83065e3_Enum {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a8511a84_TypeSymbol> _field_kind = jule::Ptr<_1a8511a84_TypeSymbol>();
	jule::Slice<jule::Ptr<_1a8306406_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1a8306406_EnumItem>>();


	_1a83065e3_Enum(jule::Ptr<_2110e7238_Token> __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1a8511a84_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_1a8306406_EnumItem>> __param_items): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items) {}

	

	_1a83065e3_Enum(void) = default;

	inline bool operator==(_1a83065e3_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1a83065e3_Enum _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a830701c_is_trait_impl(_1a8306d30_Impl*);
inline jule::Bool _1a830714e_is_struct_impl(_1a8306d30_Impl*);
struct _1a8306d30_Impl {
	jule::Ptr<_210e7e620_TypeDecl> _field_base = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Ptr<_210e7e620_TypeDecl> _field_dest = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>();
	jule::Slice<jule::Ptr<_1a8487246_Var>> _field_statics = jule::Slice<jule::Ptr<_1a8487246_Var>>();


	_1a8306d30_Impl(jule::Ptr<_210e7e620_TypeDecl> __param_base, jule::Ptr<_210e7e620_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> __param_methods, jule::Slice<jule::Ptr<_1a8487246_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1a8306d30_Impl(void) = default;

	inline bool operator==(_1a8306d30_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1a8306d30_Impl _other) { return !this->operator==(_other); }


};
struct _1a8438e62_Scope {
	jule::Ptr<_1a8438e62_Scope> _field_parent = jule::Ptr<_1a8438e62_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_1a8438e62_Scope(jule::Ptr<_1a8438e62_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1a8438e62_Scope(void) = default;

	inline bool operator==(_1a8438e62_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1a8438e62_Scope _other) { return !this->operator==(_other); }


};
struct _1a844085e_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a8438e62_Scope> _field_scope = jule::Ptr<_1a8438e62_Scope>();


	_1a844085e_If(jule::Any __param_expr, jule::Ptr<_1a8438e62_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1a844085e_If(void) = default;

	inline bool operator==(_1a844085e_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a844085e_If _other) { return !this->operator==(_other); }


};
struct _1a83da3db_Else {
	jule::Ptr<_1a8438e62_Scope> _field_scope = jule::Ptr<_1a8438e62_Scope>();


	_1a83da3db_Else(jule::Ptr<_1a8438e62_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1a83da3db_Else(void) = default;

	inline bool operator==(_1a83da3db_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a83da3db_Else _other) { return !this->operator==(_other); }


};
struct _1a83da5c8_Conditional {
	jule::Slice<jule::Ptr<_1a844085e_If>> _field_elifs = jule::Slice<jule::Ptr<_1a844085e_If>>();
	jule::Ptr<_1a83da3db_Else> _field_default = jule::Ptr<_1a83da3db_Else>();


	_1a83da5c8_Conditional(jule::Slice<jule::Ptr<_1a844085e_If>> __param_elifs, jule::Ptr<_1a83da3db_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_1a83da5c8_Conditional(void) = default;

	inline bool operator==(_1a83da5c8_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a83da5c8_Conditional _other) { return !this->operator==(_other); }


};
struct _1a83eb1ee_InfIter {
	jule::Ptr<_1a8438e62_Scope> _field_scope = jule::Ptr<_1a8438e62_Scope>();


	_1a83eb1ee_InfIter(jule::Ptr<_1a8438e62_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1a83eb1ee_InfIter(void) = default;

	inline bool operator==(_1a83eb1ee_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a83eb1ee_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a8427a44_is_while_next(_1a83eb3db_WhileIter*);
struct _1a83eb3db_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1a8438e62_Scope> _field_scope = jule::Ptr<_1a8438e62_Scope>();


	_1a83eb3db_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ptr<_1a8438e62_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_1a83eb3db_WhileIter(void) = default;

	inline bool operator==(_1a83eb3db_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a83eb3db_WhileIter _other) { return !this->operator==(_other); }


};
struct _1a83eb5c8_RangeIter {
	jule::Ptr<_1a84d3869_Data> _field_expr = jule::Ptr<_1a84d3869_Data>();
	jule::Ptr<_1a8438e62_Scope> _field_scope = jule::Ptr<_1a8438e62_Scope>();
	jule::Ptr<_1a8487246_Var> _field_key_a = jule::Ptr<_1a8487246_Var>();
	jule::Ptr<_1a8487246_Var> _field_key_b = jule::Ptr<_1a8487246_Var>();


	_1a83eb5c8_RangeIter(jule::Ptr<_1a84d3869_Data> __param_expr, jule::Ptr<_1a8438e62_Scope> __param_scope, jule::Ptr<_1a8487246_Var> __param_key_a, jule::Ptr<_1a8487246_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1a83eb5c8_RangeIter(void) = default;

	inline bool operator==(_1a83eb5c8_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1a83eb5c8_RangeIter _other) { return !this->operator==(_other); }


};
struct _1a8429282_ContSt {
	jule::U64 _field_it = jule::U64();


	_1a8429282_ContSt(jule::U64 __param_it): _field_it(__param_it) {}

	

	_1a8429282_ContSt(void) = default;

	inline bool operator==(_1a8429282_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1a8429282_ContSt _other) { return !this->operator==(_other); }


};
struct _1a842946e_BreakSt {
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_mtch = jule::U64();


	_1a842946e_BreakSt(jule::U64 __param_it, jule::U64 __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_1a842946e_BreakSt(void) = default;

	inline bool operator==(_1a842946e_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1a842946e_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a844bb9a_Label {
	jule::Str _field_ident = jule::Str();


	_1a844bb9a_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1a844bb9a_Label(void) = default;

	inline bool operator==(_1a844bb9a_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a844bb9a_Label _other) { return !this->operator==(_other); }


};
struct _1a844bd87_GotoSt {
	jule::Str _field_ident = jule::Str();


	_1a844bd87_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1a844bd87_GotoSt(void) = default;

	inline bool operator==(_1a844bd87_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a844bd87_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a844c074_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_1a844c074_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1a844c074_Postfix(void) = default;

	inline bool operator==(_1a844c074_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a844c074_Postfix _other) { return !this->operator==(_other); }


};
struct _1a844c261_Assign {
	jule::Ptr<_1b3968e15_OperandExprModel> _field_l = jule::Ptr<_1b3968e15_OperandExprModel>();
	jule::Ptr<_1b3968e15_OperandExprModel> _field_r = jule::Ptr<_1b3968e15_OperandExprModel>();
	jule::Ptr<_2110e7238_Token> _field_op = jule::Ptr<_2110e7238_Token>();


	_1a844c261_Assign(jule::Ptr<_1b3968e15_OperandExprModel> __param_l, jule::Ptr<_1b3968e15_OperandExprModel> __param_r, jule::Ptr<_2110e7238_Token> __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1a844c261_Assign(void) = default;

	inline bool operator==(_1a844c261_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a844c261_Assign _other) { return !this->operator==(_other); }


};
struct _1a844c44d_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();


	_1a844c44d_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_1a844c44d_MultiAssign(void) = default;

	inline bool operator==(_1a844c44d_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1a844c44d_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a842965b_is_generic_type_match(_1a844c63a_Match*);
struct _1a844c63a_Match {
	jule::Ptr<_1a84d3869_Data> _field_expr = jule::Ptr<_1a84d3869_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1a844ca58_Case>> _field_cases = jule::Slice<jule::Ptr<_1a844ca58_Case>>();
	jule::Ptr<_1a844ca58_Case> _field_default = jule::Ptr<_1a844ca58_Case>();


	_1a844c63a_Match(jule::Ptr<_1a84d3869_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ptr<_1a844ca58_Case>> __param_cases, jule::Ptr<_1a844ca58_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1a844c63a_Match(void) = default;

	inline bool operator==(_1a844c63a_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a844c63a_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a842a10c_is_default(_1a844ca58_Case*);
struct _1a844ca58_Case {
	jule::Ptr<_1a844c63a_Match> _field_owner = jule::Ptr<_1a844c63a_Match>();
	jule::Ptr<_1a8438e62_Scope> _field_scope = jule::Ptr<_1a8438e62_Scope>();
	jule::Slice<jule::Ptr<_1a84d3869_Data>> _field_exprs = jule::Slice<jule::Ptr<_1a84d3869_Data>>();
	jule::Ptr<_1a844ca58_Case> _field_next = jule::Ptr<_1a844ca58_Case>();


	_1a844ca58_Case(jule::Ptr<_1a844c63a_Match> __param_owner, jule::Ptr<_1a8438e62_Scope> __param_scope, jule::Slice<jule::Ptr<_1a84d3869_Data>> __param_exprs, jule::Ptr<_1a844ca58_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_1a844ca58_Case(void) = default;

	inline bool operator==(_1a844ca58_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1a844ca58_Case _other) { return !this->operator==(_other); }


};
struct _1a844cc45_FallSt {
	jule::U64 _field_dest_case = jule::U64();


	_1a844cc45_FallSt(jule::U64 __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_1a844cc45_FallSt(void) = default;

	inline bool operator==(_1a844cc45_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1a844cc45_FallSt _other) { return !this->operator==(_other); }


};
struct _1a844ce32_RetSt {
	jule::Ptr<_1a5b33164_FnIns> _field_func = jule::Ptr<_1a5b33164_FnIns>();
	jule::Slice<jule::Ptr<_1a8487246_Var>> _field_vars = jule::Slice<jule::Ptr<_1a8487246_Var>>();
	jule::Any _field_expr = jule::Any();


	_1a844ce32_RetSt(jule::Ptr<_1a5b33164_FnIns> __param_func, jule::Slice<jule::Ptr<_1a8487246_Var>> __param_vars, jule::Any __param_expr): _field_func(__param_func), _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_1a844ce32_RetSt(void) = default;

	inline bool operator==(_1a844ce32_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a844ce32_RetSt _other) { return !this->operator==(_other); }


};
struct _1a844d11e_ScopeLabel {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_1a844bb9a_Label> _field_label = jule::Ptr<_1a844bb9a_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1a844d4e8_ScopeChecker> _field_scope = jule::Ptr<_1a844d4e8_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();


	_1a844d11e_ScopeLabel(jule::Ptr<_2110e7238_Token> __param_token, jule::Ptr<_1a844bb9a_Label> __param_label, jule::I64 __param_pos, jule::Ptr<_1a844d4e8_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_1a844d11e_ScopeLabel(void) = default;

	inline bool operator==(_1a844d11e_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1a844d11e_ScopeLabel _other) { return !this->operator==(_other); }


};
struct _1a844d30b_ScopeGoto {
	jule::Ptr<_21110c2e7_GotoSt> _field_gt = jule::Ptr<_21110c2e7_GotoSt>();
	jule::Ptr<_1a844d4e8_ScopeChecker> _field_scope = jule::Ptr<_1a844d4e8_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();


	_1a844d30b_ScopeGoto(jule::Ptr<_21110c2e7_GotoSt> __param_gt, jule::Ptr<_1a844d4e8_ScopeChecker> __param_scope, jule::I64 __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_1a844d30b_ScopeGoto(void) = default;

	inline bool operator==(_1a844d30b_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a844d30b_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8464058_ImportInfo> _1a843acee_find_package(_1a844d4e8_ScopeChecker*, jule::Str);
inline jule::Ptr<_1a8464058_ImportInfo> _1a842bd9a_select_package(_1a844d4e8_ScopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)>);
inline jule::Ptr<_1a8487246_Var> _1a8418958_find_var(_1a844d4e8_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a850bead_TypeAlias> _1a844d806_find_type_alias(_1a844d4e8_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b396462a_Struct> _1a844dbad_find_struct(_1a844d4e8_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5b2eeb8_Fn> _1a844e065_find_fn(_1a844d4e8_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5e34531_Trait> _1a844e373_find_trait(_1a844d4e8_ScopeChecker*, jule::Str);
inline jule::Ptr<_1a83065e3_Enum> _1a844e681_find_enum(_1a844d4e8_ScopeChecker*, jule::Str);
inline jule::Bool _1a844e9b1_is_unsafe(jule::Ptr<_1a844d4e8_ScopeChecker>);
inline jule::Bool _1a844ec25_is_root(_1a844d4e8_ScopeChecker*);
inline void _1a844ee01_stop(_1a844d4e8_ScopeChecker*);
inline jule::Bool _1a8450165_stopped(_1a844d4e8_ScopeChecker*);
inline jule::Bool _1a84503c9_is_deferred(jule::Ptr<_1a844d4e8_ScopeChecker>);
inline jule::Ptr<_1a844d4e8_ScopeChecker> _1a845063d_get_root(jule::Ptr<_1a844d4e8_ScopeChecker>);
inline jule::Ptr<_1a844d4e8_ScopeChecker> _1a84508a2_get_hard_root(jule::Ptr<_1a844d4e8_ScopeChecker>);
inline jule::Ptr<_1a844bb9a_Label> _1a8450bb0_find_label(_1a844d4e8_ScopeChecker*, jule::Str);
inline jule::Ptr<_1a844d11e_ScopeLabel> _1a8450ebd_find_label_scope(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Str);
inline jule::Ptr<_1a844d11e_ScopeLabel> _1a84512cb_find_label_all(_1a844d4e8_ScopeChecker*, jule::Str);
inline jule::Bool _1a8451683_is_duplicated_ident(_1a844d4e8_ScopeChecker*, jule::U64, jule::Str);
inline void _1a8451908_check_var_decl(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110d161_VarDecl>);
inline void _1a8451b7d_check_type_alias_decl(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110e591_TypeAliasDecl>);
inline jule::Ptr<_1a8438e62_Scope> _1a8451de2_get_child(_1a844d4e8_ScopeChecker*);
inline void _1a84522aa_check_child_ssc(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110ca9a_ScopeTree>&, jule::Ptr<_1a8438e62_Scope>&, jule::Ptr<_1a844d4e8_ScopeChecker>&);
inline jule::Ptr<_1a8438e62_Scope> _1a8452662_check_child_sc(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110ca9a_ScopeTree>&, jule::Ptr<_1a844d4e8_ScopeChecker>&);
inline jule::Ptr<_1a8438e62_Scope> _1a8452970_check_child(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110ca9a_ScopeTree>&);
inline void _1a8452be5_check_anon_scope(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110ca9a_ScopeTree>);
inline void _1a8453014_process_error_call(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>&, jule::Ptr<_2110e7238_Token>);
inline void _1a8453289_check_expr(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_210e87caa_Expr>);
inline void _1a845350e_check_co_expr(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_211109aca_CoExpr>);
inline jule::Ptr<_1a844085e_If> _1a845381c_check_if(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110deca_If>);
inline jule::Ptr<_1a83da3db_Else> _1a8453b2a_check_else(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110e1b7_Else>);
inline void _1a8453da0_check_conditional(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110e3a4_Conditional>);
inline void _1a8454312_check_iter_scope_ssc(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::U64, jule::Ptr<_21110ca9a_ScopeTree>, jule::Ptr<_1a8438e62_Scope>&, jule::Ptr<_1a844d4e8_ScopeChecker>);
inline jule::Ptr<_1a8438e62_Scope> _1a8454763_check_iter_scope_sc(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::U64, jule::Ptr<_21110ca9a_ScopeTree>, jule::Ptr<_1a844d4e8_ScopeChecker>);
inline jule::Ptr<_1a8438e62_Scope> _1a8454b1a_check_iter_scope(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::U64, jule::Ptr<_21110ca9a_ScopeTree>&);
inline void _1a8454d90_check_inf_iter(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110d53a_Iter>&);
inline void _1a8455115_check_while_iter(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110d53a_Iter>&);
inline void _1a845538a_check_range_iter(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110d53a_Iter>&);
inline void _1a8455610_check_iter(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110d53a_Iter>);
inline jule::Bool _1a845591d_check_valid_cont_label(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::U64);
inline jule::Bool _1a8455c70_check_valid_break_label(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::U64);
inline jule::Ptr<_1a8429282_ContSt> _1a845606c_check_cont_valid_scope(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110dcdd_ContSt>);
inline void _1a84562e2_check_cont(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110dcdd_ContSt>);
inline void _1a8456567_check_label(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110c10a_LabelSt>);
inline void _1a84567dc_push_goto(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110c2e7_GotoSt>);
inline void _1a8456a62_check_postfix(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110c8ad_AssignSt>);
inline jule::Bool _1a8456d70_is_new_assign_ident(_1a844d4e8_ScopeChecker*, jule::Str);
inline jule::Bool _1a8457315_check_structure_assign_op(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_1b39672a9_StructIns>&, jule::Ptr<_21110c8ad_AssignSt>&, jule::Ptr<_1a84d3869_Data>&);
inline void _1a8457579_check_single_assign(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110c8ad_AssignSt>&);
inline void _1a8457aeb___process_end_part_of_multi_assign(_1a844d4e8_ScopeChecker*, jule::Ptr<_1a844c44d_MultiAssign>, jule::Ptr<_21110c8ad_AssignSt>, jule::Ptr<_21110c6c1_AssignLeft>, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_1a84d3869_Data>);
inline void _1a8457d3d_check_ret_multi_assign(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110c8ad_AssignSt>&);
inline void _1a84580b3_check_multi_assign(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110c8ad_AssignSt>&);
inline void _1a8458338_check_assign_st(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110c8ad_AssignSt>);
inline jule::Ptr<_1a8438e62_Scope> _1a84586e0_check_case_scope(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_1a844ca58_Case>&, jule::Ptr<_21110ca9a_ScopeTree>&);
inline jule::Ptr<_1a844ca58_Case> _1a8458bda_check_case(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_1a844c63a_Match>, jule::I64, jule::Ptr<_21110e77d_Case>, jule::Ptr<_1a84d3869_Data>);
inline void _1a84590a3_check_cases(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110e96a_MatchCase>&, jule::Ptr<_1a844c63a_Match>, jule::Ptr<_1a84d3869_Data>);
inline jule::Ptr<_1a844ca58_Case> _1a845945a_check_default(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_1a844c63a_Match>, jule::Ptr<_21110e1b7_Else>);
inline void _1a84596d0_check_comptime_panic(_1a844d4e8_ScopeChecker*, jule::Ptr<_1a8438e62_Scope>&);
inline void _1a84599ee_push_type_match(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_1a844c63a_Match>, jule::Ptr<_21110e96a_MatchCase>&);
inline void _1a8459c74_check_type_match(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110e96a_MatchCase>&);
inline void _1a8459ee9_check_common_match(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110e96a_MatchCase>&);
inline void _1a845a26e_check_match(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110e96a_MatchCase>);
inline void _1a845a4e4_check_fall(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110c4d4_FallSt>);
inline jule::Ptr<_1a842946e_BreakSt> _1a845a802_check_break_with_label(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110db01_BreakSt>);
inline jule::Ptr<_1a842946e_BreakSt> _1a845ab10_check_plain_break(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110db01_BreakSt>);
inline void _1a845ad85_check_break(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110db01_BreakSt>);
inline void _1a845b10a_check_ret(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110d34d_RetSt>);
inline void _1a845b380_check_use_expr(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_211079907_UseExpr>);
inline void _1a845b605_check_node(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Any&);
inline void _1a845b7d1_check_result(jule::Ptr<_1a844d4e8_ScopeChecker>);
inline void _1a845b9ac_check_tree(jule::Ptr<_1a844d4e8_ScopeChecker>);
inline void _1a845bccb_check_goto(_1a844d4e8_ScopeChecker*, jule::Ptr<_1a844d30b_ScopeGoto>&, jule::Ptr<_1a844d11e_ScopeLabel>&);
inline void _1a845bea7_check_gotos(_1a844d4e8_ScopeChecker*);
inline void _1a845c183_check_labels(_1a844d4e8_ScopeChecker*);
inline void _1a845c35e_check_vars(_1a844d4e8_ScopeChecker*);
inline void _1a845c53a_check_aliases(_1a844d4e8_ScopeChecker*);
inline void _1a845c859_check(jule::Ptr<_1a844d4e8_ScopeChecker>, jule::Ptr<_21110ca9a_ScopeTree>&, jule::Ptr<_1a8438e62_Scope>&);
inline jule::Ptr<_1a844d4e8_ScopeChecker> _1a845cabd_new_child_checker(jule::Ptr<_1a844d4e8_ScopeChecker>);
struct _1a844d4e8_ScopeChecker {
	jule::Ptr<_2110e7238_Token> _field_called_from = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_1a846bc42_Sema> _field_s = jule::Ptr<_1a846bc42_Sema>();
	jule::Ptr<_1a5b33164_FnIns> _field_owner = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a844d4e8_ScopeChecker> _field_parent = jule::Ptr<_1a844d4e8_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_1a84cd7a9_SymbolTable> _field_table = jule::Ptr<_1a84cd7a9_SymbolTable>();
	jule::Ptr<_1a8438e62_Scope> _field_scope = jule::Ptr<_1a8438e62_Scope>();
	jule::Ptr<_21110ca9a_ScopeTree> _field_tree = jule::Ptr<_21110ca9a_ScopeTree>();
	jule::Ptr<_1a5b33164_FnIns> _field_result = jule::Ptr<_1a5b33164_FnIns>();
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_cse = jule::U64();
	jule::Ptr<jule::Slice<jule::Ptr<_1a844d11e_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1a844d11e_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1a844d30b_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1a844d30b_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();


	_1a844d4e8_ScopeChecker(jule::Ptr<_2110e7238_Token> __param_called_from, jule::Ptr<_1a846bc42_Sema> __param_s, jule::Ptr<_1a5b33164_FnIns> __param_owner, jule::Ptr<_1a844d4e8_ScopeChecker> __param_parent, jule::I64 __param_child_index, jule::Ptr<_1a84cd7a9_SymbolTable> __param_table, jule::Ptr<_1a8438e62_Scope> __param_scope, jule::Ptr<_21110ca9a_ScopeTree> __param_tree, jule::Ptr<_1a5b33164_FnIns> __param_result, jule::U64 __param_it, jule::U64 __param_cse, jule::Ptr<jule::Slice<jule::Ptr<_1a844d11e_ScopeLabel>>> __param_labels, jule::Ptr<jule::Slice<jule::Ptr<_1a844d30b_ScopeGoto>>> __param_gotos, jule::I64 __param_i): _field_called_from(__param_called_from), _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_result(__param_result), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {}

	

	_1a844d4e8_ScopeChecker(void) = default;

	inline bool operator==(_1a844d4e8_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a844d4e8_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1a845db68_check_cdef(_1a845d728_DirectiveChecker*, jule::Ptr<_210eb33e0_Directive>&);
inline void _1a845dddd_check_typedef(_1a845d728_DirectiveChecker*, jule::Ptr<_210eb33e0_Directive>&);
inline void _1a845e163_check_derive(_1a845d728_DirectiveChecker*, jule::Ptr<_210eb33e0_Directive>&);
inline void _1a845e3d8_check_namespace(_1a845d728_DirectiveChecker*, jule::Ptr<_210eb33e0_Directive>&);
inline void _1a845e65d_check_deprecated(_1a845d728_DirectiveChecker*, jule::Ptr<_210eb33e0_Directive>&);
inline void _1a845e8d3_check_test(_1a845d728_DirectiveChecker*, jule::Ptr<_210eb33e0_Directive>&);
inline void _1a845eb58_check_directive(_1a845d728_DirectiveChecker*, jule::Ptr<_210eb33e0_Directive>&);
inline void _1a845ed34_check(_1a845d728_DirectiveChecker*);
struct _1a845d728_DirectiveChecker {
	jule::Ptr<_1a846bc42_Sema> _field_s = jule::Ptr<_1a846bc42_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_210eb33e0_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_210eb33e0_Directive>>>();
	jule::Any _field_o = jule::Any();


	_1a845d728_DirectiveChecker(jule::Ptr<_1a846bc42_Sema> __param_s, jule::Ptr<jule::Slice<jule::Ptr<_210eb33e0_Directive>>> __param_d, jule::Any __param_o): _field_s(__param_s), _field_d(__param_d), _field_o(__param_o) {}

	

	_1a845d728_DirectiveChecker(void) = default;

	inline bool operator==(_1a845d728_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1a845d728_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8464058_ImportInfo> _1a8464564_find_package(_1a8464058_ImportInfo*, jule::Str);
inline jule::Ptr<_1a8464058_ImportInfo> _1a8464872_select_package(_1a8464058_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)>);
inline jule::Ptr<_1a8487246_Var> _1a8464c29_find_var(_1a8464058_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a850bead_TypeAlias> _1a84650d1_find_type_alias(_1a8464058_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b396462a_Struct> _1a8465488_find_struct(_1a8464058_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5b2eeb8_Fn> _1a8465840_find_fn(_1a8464058_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5e34531_Trait> _1a8465b4d_find_trait(_1a8464058_ImportInfo*, jule::Str);
inline jule::Ptr<_1a83065e3_Enum> _1a8465e5b_find_enum(_1a8464058_ImportInfo*, jule::Str);
inline jule::Bool _1a8466379_is_lookupable(_1a8464058_ImportInfo*, jule::Str);
inline jule::Bool _1a8466687_exist_ident(_1a8464058_ImportInfo*, jule::Str);
inline jule::Bool _1a8466940_is_accessible_via_selection(_1a8464058_ImportInfo*);
struct _1a8464058_ImportInfo {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<jule::Ptr<_2110e7238_Token>> _field_selected = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::Ptr<_1a8466c1a_Package> _field_package = jule::Ptr<_1a8466c1a_Package>();
	jule::I64 _field_mod_id = jule::I64();


	_1a8464058_ImportInfo(jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<jule::Ptr<_2110e7238_Token>> __param_selected, jule::Ptr<_1a8466c1a_Package> __param_package, jule::I64 __param_mod_id): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package), _field_mod_id(__param_mod_id) {}

	

	_1a8464058_ImportInfo(void) = default;

	inline bool operator==(_1a8464058_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1a8464058_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8464058_ImportInfo> _1a84671d2_find_package(_1a8466c1a_Package*, jule::Str);
inline jule::Ptr<_1a8464058_ImportInfo> _1a84674e0_select_package(_1a8466c1a_Package*, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)>);
inline jule::Ptr<_1a8487246_Var> _1a8467897_find_var(_1a8466c1a_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a850bead_TypeAlias> _1a8467c4e_find_type_alias(_1a8466c1a_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b396462a_Struct> _1a8468106_find_struct(_1a8466c1a_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5b2eeb8_Fn> _1a84684ad_find_fn(_1a8466c1a_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5e34531_Trait> _1a84687bb_find_trait(_1a8466c1a_Package*, jule::Str);
inline jule::Ptr<_1a83065e3_Enum> _1a8468ac9_find_enum(_1a8466c1a_Package*, jule::Str);
struct _1a8466c1a_Package {
	jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>();


	_1a8466c1a_Package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_1a8466c1a_Package(void) = default;

	inline bool operator==(_1a8466c1a_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1a8466c1a_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8464058_ImportInfo> _1a846c24d_find_package(_1a846bc42_Sema*, jule::Str);
inline jule::Ptr<_1a8464058_ImportInfo> _1a846c55b_select_package(_1a846bc42_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)>);
inline jule::Ptr<_1a8487246_Var> _1a846c913_find_var(_1a846bc42_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a850bead_TypeAlias> _1a846ccba_find_type_alias(_1a846bc42_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b396462a_Struct> _1a846d172_find_struct(_1a846bc42_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5b2eeb8_Fn> _1a846d529_find_fn(_1a846bc42_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5e34531_Trait> _1a846d837_find_trait(_1a846bc42_Sema*, jule::Str);
inline jule::Ptr<_1a83065e3_Enum> _1a846db45_find_enum(_1a846bc42_Sema*, jule::Str);
inline jule::Bool _1a846e01e_is_flag(_1a846bc42_Sema*, jule::I64);
inline void _1a846e294_set_current_file(_1a846bc42_Sema*, jule::Ptr<_1a84cd7a9_SymbolTable>);
inline void _1a846e65c_push_err(_1a846bc42_Sema*, jule::Ptr<_2110e7238_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a846e97b_push_suggestion(_1a846bc42_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a846ed33_is_accessible_define(_1a846bc42_Sema*, jule::Bool, jule::Ptr<_2110e7238_Token>);
inline jule::Bool _1a8470284_is_duplicated_ident(_1a846bc42_Sema*, jule::U64, jule::Str, jule::Bool);
inline void _1a84705a3_check_directives(jule::Ptr<_1a846bc42_Sema>, jule::Slice<jule::Ptr<_210eb33e0_Directive>>&, jule::Any);
inline jule::Bool _1a8470a04_check_generic_quantity(_1a846bc42_Sema*, jule::I64, jule::I64, jule::Ptr<_2110e7238_Token>);
inline jule::Bool _1a8470e00_is_duplicated_import_selection(_1a846bc42_Sema*, jule::U64, jule::Str);
inline jule::Any _1a8471296_get_import_def(_1a846bc42_Sema*, jule::Str, jule::Ptr<_1a8464058_ImportInfo>&);
inline jule::Bool _1a84715e8_check_import_selections(_1a846bc42_Sema*, jule::Ptr<_1a8464058_ImportInfo>&);
inline jule::Bool _1a8471939_is_use_alias_duplication(_1a846bc42_Sema*, jule::Ptr<_1a8464058_ImportInfo>&);
inline jule::Bool _1a8471c36_check_import(_1a846bc42_Sema*, jule::Ptr<_1a8464058_ImportInfo>&);
inline void _1a8471e12_check_imports(_1a846bc42_Sema*);
inline void _1a84720dd_impl_file_impls(jule::Ptr<_1a846bc42_Sema>);
inline void _1a84722b9_impl_impls(jule::Ptr<_1a846bc42_Sema>);
inline void _1a8472495_check_enums(jule::Ptr<_1a846bc42_Sema>);
inline jule::Bool _1a84728e6_check_type_with_refers(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a8511a84_TypeSymbol>&, jule::Trait<_1a85260a4_Lookup>, jule::Ptr<_1a851b660_Referencer>);
inline jule::Bool _1a8472c9d_check_type(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a8511a84_TypeSymbol>&, jule::Trait<_1a85260a4_Lookup>);
inline jule::Ptr<_1a850cbe5_TypeKind> _1a8473199_build_type_with_generics(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_210e7e620_TypeDecl>&, jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>);
inline jule::Ptr<_1a850cbe5_TypeKind> _1a8473496_build_type(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_210e7e620_TypeDecl>&);
inline jule::Ptr<_1a850cbe5_TypeKind> _1a84737a4_select_type(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_210e7e620_TypeDecl>&);
inline jule::Ptr<_1a84d53d7_Eval> _1a8473c05_evalpd(jule::Ptr<_1a846bc42_Sema>, jule::Trait<_1a85260a4_Lookup>, jule::Ptr<_1a850cbe5_TypeKind>, jule::Ptr<_1a8487246_Var>);
inline jule::Ptr<_1a84d53d7_Eval> _1a84740ac_evalp(jule::Ptr<_1a846bc42_Sema>, jule::Trait<_1a85260a4_Lookup>, jule::Ptr<_1a850cbe5_TypeKind>);
inline jule::Ptr<_1a84d53d7_Eval> _1a84743ba_eval(jule::Ptr<_1a846bc42_Sema>, jule::Trait<_1a85260a4_Lookup>);
inline jule::Bool _1a84748b5_check_assign_type(jule::Ptr<_1a846bc42_Sema>, jule::Bool, jule::Ptr<_1a850cbe5_TypeKind>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2110e7238_Token>);
inline jule::Bool _1a8474d5a_check_type_compatibility(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a850cbe5_TypeKind>&, jule::Ptr<_1a850cbe5_TypeKind>&, jule::Ptr<_2110e7238_Token>&);
inline jule::Ptr<_1a850cbe5_TypeKind> _1a8475245_build_non_generic_type_kind(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_210e7e620_TypeDecl>&, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>&);
inline void _1a84754ed_build_fn_non_generic_type_kinds(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5b33164_FnIns>&);
inline jule::Ptr<_1a5b33164_FnIns> _1a847583e_get_trait_check_fn_kind(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5b2eeb8_Fn>&);
inline jule::Bool _1a8475b3b_reload_fn_ins_types(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5b33164_FnIns>&);
inline jule::Bool _1a8476103_check_ref_validity_for_init_expr(jule::Ptr<_1a846bc42_Sema>, jule::Bool, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2110e7238_Token>&);
inline jule::Bool _1a84766db_check_validity_for_init_expr(jule::Ptr<_1a846bc42_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1a850cbe5_TypeKind>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2110e7238_Token>&);
inline jule::Bool _1a8476a93_check_type_alias_decl_kind(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a850bead_TypeAlias>&, jule::Trait<_1a85260a4_Lookup>);
inline void _1a8476da1_check_type_alias_decl(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a850bead_TypeAlias>&, jule::Trait<_1a85260a4_Lookup>);
inline void _1a847716a_check_type_alias_decl_dup(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a850bead_TypeAlias>&);
inline jule::Bool _1a84773bd_check_type_alias_decls(jule::Ptr<_1a846bc42_Sema>);
inline void _1a8477643_check_enum_items_dup(_1a846bc42_Sema*, jule::Ptr<_1a83065e3_Enum>);
inline void _1a84778b8_check_enum_items_str(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a83065e3_Enum>&);
inline void _1a8477b3d_check_enum_items_int(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a83065e3_Enum>&);
inline void _1a8477db3_check_enum_decl(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a83065e3_Enum>&);
inline jule::Bool _1a8478127_check_enum_decls(jule::Ptr<_1a846bc42_Sema>);
inline jule::Bool _1a8478435_check_decl_generics(_1a846bc42_Sema*, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>&);
inline jule::Bool _1a8478787_check_fn_decl_params_dup(_1a846bc42_Sema*, jule::Ptr<_1a5b2eeb8_Fn>&);
inline jule::Bool _1a8478ac8_check_fn_decl_result_dup(_1a846bc42_Sema*, jule::Ptr<_1a5b2eeb8_Fn>&);
inline void _1a8478d3c_check_fn_decl_types(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5b2eeb8_Fn>&);
inline void _1a8479106_check_fn_decl_prototype(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5b2eeb8_Fn>&);
inline void _1a84793ae_check_trait_decl_method(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5b2eeb8_Fn>&);
inline void _1a8479667_check_trait_decl_methods(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5e34531_Trait>&);
inline void _1a84798cb_check_trait_decl(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5e34531_Trait>&);
inline jule::Bool _1a8479b40_check_trait_decls(jule::Ptr<_1a846bc42_Sema>);
inline jule::Bool _1a847a03b_check_trait_impl_methods(_1a846bc42_Sema*, jule::Ptr<_1a5e34531_Trait>&, jule::Ptr<_1a8306d30_Impl>&);
inline jule::Bool _1a847a3d2_impl_to_struct(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b396462a_Struct>&, jule::Ptr<_1a8306d30_Impl>&);
inline void _1a847a657_impl_trait(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a8306d30_Impl>&);
inline void _1a847a8cc_impl_struct(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a8306d30_Impl>&);
inline void _1a847ab52_impl_impl(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a8306d30_Impl>&);
inline void _1a847ae71_check_var_decl(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a8487246_Var>&, jule::Trait<_1a85260a4_Lookup>);
inline void _1a847b1e6_check_global_var_decl(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a8487246_Var>&);
inline jule::Bool _1a847b45a_check_global_decls(jule::Ptr<_1a846bc42_Sema>);
inline jule::Bool _1a847b856_check_struct_trait_impl(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b396462a_Struct>&, jule::Ptr<_1a5e34531_Trait>&);
inline jule::Bool _1a847bb53_check_struct_impls(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b396462a_Struct>&);
inline jule::Bool _1a847be61_check_struct_fields(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b396462a_Struct>&);
inline jule::Bool _1a847c2b3_check_struct_decl_methods(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b396462a_Struct>&);
inline void _1a847c527_check_struct_decl(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b396462a_Struct>&);
inline jule::Bool _1a847c78b_check_struct_decls(jule::Ptr<_1a846bc42_Sema>);
inline void _1a847ca11_check_fn_decl(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5b2eeb8_Fn>&);
inline jule::Bool _1a847cc75_check_fn_decls(jule::Ptr<_1a846bc42_Sema>);
inline void _1a847d13d_push_cycle_error(_1a846bc42_Sema*, jule::Ptr<_1b396462a_Struct>&, jule::Ptr<_1b396462a_Struct>&, jule::Str&);
inline jule::Bool _1a847d58e_check_cross_cycle(_1a846bc42_Sema*, jule::Ptr<_1b396462a_Struct>&, jule::Ptr<_1b396462a_Struct>&, jule::Str&);
inline jule::Bool _1a847da56_check_struct_derive_illegal_cycles(_1a846bc42_Sema*, jule::Str, jule::Ptr<_1b396462a_Struct>&, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Bool _1a847dd75_check_struct_ins_derive_clone(_1a846bc42_Sema*, jule::Ptr<_1b39672a9_StructIns>);
inline jule::Bool _1a847e1b6_check_struct_derive_clone(_1a846bc42_Sema*, jule::Ptr<_1b396462a_Struct>&);
inline jule::Bool _1a847e419_check_file_derives(_1a846bc42_Sema*);
inline void _1a847e5e5_check_package_derives(_1a846bc42_Sema*);
inline void _1a847e7c1_check_package_decls(jule::Ptr<_1a846bc42_Sema>);
inline void _1a847eb34_check_data_for_type_inference(_1a846bc42_Sema*, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2110e7238_Token>&);
inline void _1a847ed98_check_var(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a8487246_Var>&);
inline void _1a84801b7_check_type_var(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a8487246_Var>&, jule::Trait<_1a85260a4_Lookup>);
inline void _1a8480393_check_global_types(jule::Ptr<_1a846bc42_Sema>);
inline jule::Ptr<_1a5b33164_FnIns> _1a848074a_ready_to_check_fn(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b39672a9_StructIns>&, jule::Ptr<_1a5b2eeb8_Fn>&);
inline void _1a8480a69_check_type_method(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b39672a9_StructIns>&, jule::Ptr<_1a5b2eeb8_Fn>&);
inline void _1a8480cde_check_field_defaults(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b39672a9_StructIns>&);
inline jule::Ptr<_1a5b33164_FnIns> _1a8481240_check_struct_ins_op(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b39672a9_StructIns>&, jule::Ptr<_1a5b2eeb8_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>);
inline void _1a84814b5_check_struct_ins(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b39672a9_StructIns>&);
inline void _1a848173a_check_type_struct(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b396462a_Struct>&);
inline void _1a8481916_check_struct_types(jule::Ptr<_1a846bc42_Sema>);
inline void _1a8481bd0_check_struct_ins_operators(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b39672a9_StructIns>);
inline void _1a8481e88_check_type_struct_operators(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1b396462a_Struct>&);
inline void _1a8482197_check_struct_types_operators(jule::Ptr<_1a846bc42_Sema>);
inline void _1a848240b_check_rets(_1a846bc42_Sema*, jule::Ptr<_1a5b33164_FnIns>&);
inline void _1a848272a_check_fn_ins_sc(_1a846bc42_Sema*, jule::Ptr<_1a5b33164_FnIns>&, jule::Ptr<_1a844d4e8_ScopeChecker>&);
inline void _1a8482a49_check_fn_ins_caller(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5b33164_FnIns>&, jule::Ptr<_2110e7238_Token>);
inline void _1a8482cbe_check_fn_ins(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5b33164_FnIns>&);
inline void _1a8483044_check_type_fn(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5b2eeb8_Fn>&);
inline void _1a84832b9_check_test_fn(_1a846bc42_Sema*, jule::Ptr<_1a5b33164_FnIns>&);
inline void _1a848353e_precheck_type_fn(jule::Ptr<_1a846bc42_Sema>, jule::Ptr<_1a5b2eeb8_Fn>&);
inline void _1a848371a_precheck_fn_types(jule::Ptr<_1a846bc42_Sema>);
inline void _1a84838e6_check_fn_types(jule::Ptr<_1a846bc42_Sema>);
inline void _1a8483ac2_check_package_types(jule::Ptr<_1a846bc42_Sema>);
inline void _1a8483c9d_set_file_sema_fields(jule::Ptr<_1a846bc42_Sema>);
inline void _1a8483e79_set_sema_fields(jule::Ptr<_1a846bc42_Sema>);
inline void _1a84841ee_check(jule::Ptr<_1a846bc42_Sema>, jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>&);
struct _1a846bc42_Sema {
	jule::Slice<_210c3ee2a_Log> _field_errors = jule::Slice<_210c3ee2a_Log>();
	jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>();
	jule::Ptr<_1a84cd7a9_SymbolTable> _field_file = jule::Ptr<_1a84cd7a9_SymbolTable>();
	jule::I64 _field_flags = 0LL;


	_1a846bc42_Sema(jule::Slice<_210c3ee2a_Log> __param_errors, jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>> __param_files, jule::Ptr<_1a84cd7a9_SymbolTable> __param_file, jule::I64 __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {}

	

	_1a846bc42_Sema(void) = default;

	inline bool operator==(_1a846bc42_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1a846bc42_Sema _other) { return !this->operator==(_other); }


};
inline _1a84845a6_MissingRetChecker static__1a848496e_new(void);
inline jule::Bool _1a8484c49_check_conditional(_1a84845a6_MissingRetChecker*, jule::Ptr<_1a83da5c8_Conditional>);
inline jule::Bool _1a8485057_check_match(_1a84845a6_MissingRetChecker*, jule::Ptr<_1a844c63a_Match>);
inline jule::Bool _1a8485365_check_inf_iter(_1a84845a6_MissingRetChecker*, jule::Ptr<_1a83eb1ee_InfIter>);
inline jule::Bool _1a8485673_check_scope(_1a84845a6_MissingRetChecker*, jule::Ptr<_1a8438e62_Scope>);
inline jule::Bool _1a8485981_check(_1a84845a6_MissingRetChecker*, jule::Ptr<_1a8438e62_Scope>);
struct _1a84845a6_MissingRetChecker {
	jule::Slice<jule::U64> _field_breaked = jule::Slice<jule::U64>();
	jule::Bool _field_falled = jule::Bool();


	_1a84845a6_MissingRetChecker(jule::Slice<jule::U64> __param_breaked, jule::Bool __param_falled): _field_breaked(__param_breaked), _field_falled(__param_falled) {}

	

	_1a84845a6_MissingRetChecker(void) = default;

	inline bool operator==(_1a84845a6_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1a84845a6_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1a8486278_IterRelation {
	jule::Ptr<_1a8487246_Var> _field_range = jule::Ptr<_1a8487246_Var>();


	_1a8486278_IterRelation(jule::Ptr<_1a8487246_Var> __param_range): _field_range(__param_range) {}

	

	_1a8486278_IterRelation(void) = default;

	inline bool operator==(_1a8486278_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1a8486278_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a84875ed_is_initialized(_1a8487246_Var*);
inline jule::Bool _1a8487862_is_type_inferred(_1a8487246_Var*);
struct _1a8487246_Var {
	jule::Ptr<_1a8438e62_Scope> _field_scope = jule::Ptr<_1a8438e62_Scope>();
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a8511a84_TypeSymbol> _field_kind = jule::Ptr<_1a8511a84_TypeSymbol>();
	jule::Ptr<_1a84d48e2_Value> _field_value = jule::Ptr<_1a84d48e2_Value>();
	jule::Ptr<_1a5b36222_ReferenceStack> _field_references = jule::Ptr<_1a5b36222_ReferenceStack>();
	jule::Slice<jule::Ptr<_210eb33e0_Directive>> _field_directives = jule::Slice<jule::Ptr<_210eb33e0_Directive>>();
	jule::Ptr<_1a8486278_IterRelation> _field_iter_relation = jule::Ptr<_1a8486278_IterRelation>();
	jule::Slice<jule::Ptr<_1a8487246_Var>> _field_depends = jule::Slice<jule::Ptr<_1a8487246_Var>>();


	_1a8487246_Var(jule::Ptr<_1a8438e62_Scope> __param_scope, jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Ptr<_1a8511a84_TypeSymbol> __param_kind, jule::Ptr<_1a84d48e2_Value> __param_value, jule::Ptr<_1a5b36222_ReferenceStack> __param_references, jule::Slice<jule::Ptr<_210eb33e0_Directive>> __param_directives, jule::Ptr<_1a8486278_IterRelation> __param_iter_relation, jule::Slice<jule::Ptr<_1a8487246_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_1a8487246_Var(void) = default;

	inline bool operator==(_1a8487246_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_references == _other._field_references &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1a8487246_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1a84883bd_dispose(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a8488665_to_str(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a84889a6_logical(jule::Ptr<_1a5b2eeb8_Fn>&, jule::Str);
inline jule::Bool static__1a8488c4d_eq(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a8488ee5_gt(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848928c_gt_eq(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a8489534_lt(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a84897cb_lt_eq(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a8489b1c_result(jule::Ptr<_1a5b2eeb8_Fn>&, jule::Str);
inline jule::Bool static__1a8489db4_shl(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848a15b_shr(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848a403_add(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848a69a_sub(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848a942_div(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848abd9_mul(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848ae81_mod(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848b228_bit_and(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848b4c0_bit_or(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848b767_bit_xor(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848baa8_unary(jule::Ptr<_1a5b2eeb8_Fn>&, jule::Str);
inline jule::Bool static__1a848bd50_neg(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848c0e7_pos(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848c38e_bit_not(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848c6d0_assign(jule::Ptr<_1a5b2eeb8_Fn>&, jule::Str);
inline jule::Bool static__1a848c977_add_assign(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848cc1e_sub_assign(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848ceb6_div_assign(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848d25d_mul_assign(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848d505_mod_assign(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848d79c_shl_assign(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848da44_shr_assign(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848dcdb_bit_or_assign(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848e083_bit_and_assign(jule::Ptr<_1a5b2eeb8_Fn>);
inline jule::Bool static__1a848e32a_bit_xor_assign(jule::Ptr<_1a5b2eeb8_Fn>);
struct _1a8487c4c_FuncPattern {
	

	_1a8487c4c_FuncPattern(void) = default;

	inline bool operator==(_1a8487c4c_FuncPattern _other) { return true; }

	inline bool operator!=(_1a8487c4c_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1a84b9ee3_push_err(_1a84b9c5c_TypeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a84ba257_check_trait(_1a84b9c5c_TypeCompatibilityChecker*);
inline jule::Bool _1a84ba4bb_check_ptr(_1a84b9c5c_TypeCompatibilityChecker*);
inline jule::Bool _1a84ba730_check_prim(_1a84b9c5c_TypeCompatibilityChecker*);
inline jule::Bool _1a84ba994_check(_1a84b9c5c_TypeCompatibilityChecker*);
struct _1a84b9c5c_TypeCompatibilityChecker {
	jule::Ptr<_1a846bc42_Sema> _field_s = jule::Ptr<_1a846bc42_Sema>();
	jule::Ptr<_1a850cbe5_TypeKind> _field_dest = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Ptr<_1a850cbe5_TypeKind> _field_src = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Ptr<_2110e7238_Token> _field_error_token = jule::Ptr<_2110e7238_Token>();


	_1a84b9c5c_TypeCompatibilityChecker(jule::Ptr<_1a846bc42_Sema> __param_s, jule::Ptr<_1a850cbe5_TypeKind> __param_dest, jule::Ptr<_1a850cbe5_TypeKind> __param_src, jule::Ptr<_2110e7238_Token> __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token) {}

	

	_1a84b9c5c_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1a84b9c5c_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1a84b9c5c_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1a84bb445_push_err(_1a84baed3_AssignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a84bb6a9_check_validity(_1a84baed3_AssignTypeChecker*);
inline jule::Bool _1a84bb91d_check_const(_1a84baed3_AssignTypeChecker*);
inline jule::Bool _1a84bbb82_is_prim(_1a84baed3_AssignTypeChecker*);
inline jule::Bool _1a84bbde6_check_compatibility(_1a84baed3_AssignTypeChecker*);
inline jule::Bool _1a84bc15a_check(_1a84baed3_AssignTypeChecker*);
struct _1a84baed3_AssignTypeChecker {
	jule::Ptr<_1a846bc42_Sema> _field_s = jule::Ptr<_1a846bc42_Sema>();
	jule::Ptr<_1a850cbe5_TypeKind> _field_dest = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Ptr<_1a84d3869_Data> _field_d = jule::Ptr<_1a84d3869_Data>();
	jule::Ptr<_2110e7238_Token> _field_error_token = jule::Ptr<_2110e7238_Token>();


	_1a84baed3_AssignTypeChecker(jule::Ptr<_1a846bc42_Sema> __param_s, jule::Ptr<_1a850cbe5_TypeKind> __param_dest, jule::Ptr<_1a84d3869_Data> __param_d, jule::Ptr<_2110e7238_Token> __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token) {}

	

	_1a84baed3_AssignTypeChecker(void) = default;

	inline bool operator==(_1a84baed3_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1a84baed3_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline void _1a84bcdb4_push_generic(_1a84bc831_DynamicTypeAnnotation*, jule::Ptr<_1a850cbe5_TypeKind>&, jule::I64);
inline jule::Bool _1a84bd18e_annotate_prim(_1a84bc831_DynamicTypeAnnotation*, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Bool _1a84bd49c_annotate_slc(_1a84bc831_DynamicTypeAnnotation*, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Bool _1a84bd854_check_map_key(_1a84bc831_DynamicTypeAnnotation*, jule::Ptr<_1a850cbe5_TypeKind>*, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Bool _1a84bdb62_annotate_map(_1a84bc831_DynamicTypeAnnotation*, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Bool _1a84bde70_annotate_fn(_1a84bc831_DynamicTypeAnnotation*, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Bool _1a84be27d_annotate_ptr(_1a84bc831_DynamicTypeAnnotation*, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Bool _1a84be58b_annotate_sptr(_1a84bc831_DynamicTypeAnnotation*, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Bool _1a84be899_annotate_any(_1a84bc831_DynamicTypeAnnotation*, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Bool _1a84beba7_annotate_kind(_1a84bc831_DynamicTypeAnnotation*, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Bool _1a84bee1b_annotate(_1a84bc831_DynamicTypeAnnotation*);
struct _1a84bc831_DynamicTypeAnnotation {
	jule::Ptr<_1a84d53d7_Eval> _field_e = jule::Ptr<_1a84d53d7_Eval>();
	jule::Ptr<_1a5b33164_FnIns> _field_f = jule::Ptr<_1a5b33164_FnIns>();
	jule::Ptr<_1a5b322c8_ParamIns> _field_p = jule::Ptr<_1a5b322c8_ParamIns>();
	jule::Ptr<_1a84d3869_Data> _field_a = jule::Ptr<_1a84d3869_Data>();
	jule::Ptr<_2110e7238_Token> _field_error_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_1a850cbe5_TypeKind>* _field_k = nullptr;


	_1a84bc831_DynamicTypeAnnotation(jule::Ptr<_1a84d53d7_Eval> __param_e, jule::Ptr<_1a5b33164_FnIns> __param_f, jule::Ptr<_1a5b322c8_ParamIns> __param_p, jule::Ptr<_1a84d3869_Data> __param_a, jule::Ptr<_2110e7238_Token> __param_error_token, jule::Ptr<_1a850cbe5_TypeKind>* __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_1a84bc831_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1a84bc831_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_1a84bc831_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1a84c0b42_push_err_token(_1a84c05e2_FnCallArgChecker*, jule::Ptr<_2110e7238_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a84c0e61_push_err(_1a84c05e2_FnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>> _1a84c11c5_get_params(_1a84c05e2_FnCallArgChecker*);
inline jule::Bool _1a84c14d3_check_counts(_1a84c05e2_FnCallArgChecker*, jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>&);
inline jule::Bool _1a84c1934_check_arg(_1a84c05e2_FnCallArgChecker*, jule::Ptr<_1a5b322c8_ParamIns>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2110e7238_Token>&);
inline jule::Bool _1a84c1cdb_push(_1a84c05e2_FnCallArgChecker*, jule::Ptr<_1a5b322c8_ParamIns>&, jule::Ptr<_210e87caa_Expr>);
inline jule::Bool _1a84c2193_push_variadic(_1a84c05e2_FnCallArgChecker*, jule::Ptr<_1a5b322c8_ParamIns>&, jule::I64);
inline jule::Bool _1a84c24a1_check_args(_1a84c05e2_FnCallArgChecker*, jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>&);
inline jule::Bool _1a84c2759_check_dynamic_type_annotation(_1a84c05e2_FnCallArgChecker*);
inline jule::Bool _1a84c29ac_check(_1a84c05e2_FnCallArgChecker*);
struct _1a84c05e2_FnCallArgChecker {
	jule::Ptr<_1a84d53d7_Eval> _field_e = jule::Ptr<_1a84d53d7_Eval>();
	jule::Slice<jule::Ptr<_210e87caa_Expr>> _field_args = jule::Slice<jule::Ptr<_210e87caa_Expr>>();
	jule::Ptr<_2110e7238_Token> _field_error_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_1a5b33164_FnIns> _field_f = jule::Ptr<_1a5b33164_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();


	_1a84c05e2_FnCallArgChecker(jule::Ptr<_1a84d53d7_Eval> __param_e, jule::Slice<jule::Ptr<_210e87caa_Expr>> __param_args, jule::Ptr<_2110e7238_Token> __param_error_token, jule::Ptr<_1a5b33164_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_1a84c05e2_FnCallArgChecker(void) = default;

	inline bool operator==(_1a84c05e2_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1a84c05e2_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1a84c3507_push_err(_1a84c2eeb_StructLitChecker*, jule::Ptr<_2110e7238_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a84c3826_push_suggestion(_1a84c2eeb_StructLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1a84c3bde_push_match(_1a84c2eeb_StructLitChecker*, jule::Ptr<_1b396694b_FieldIns>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2110e7238_Token>&);
inline void _1a84c400d_check_pair(_1a84c2eeb_StructLitChecker*, jule::Ptr<_21110ad1d_FieldExprPair>&, jule::Slice<jule::Ptr<_210e87caa_Expr>>&);
inline jule::Bool _1a84c431b_ready_exprs(_1a84c2eeb_StructLitChecker*, jule::Slice<jule::Ptr<_210e87caa_Expr>>&);
inline void _1a84c4591_check(_1a84c2eeb_StructLitChecker*, jule::Slice<jule::Ptr<_210e87caa_Expr>>&);
struct _1a84c2eeb_StructLitChecker {
	jule::Ptr<_1a84d53d7_Eval> _field_e = jule::Ptr<_1a84d53d7_Eval>();
	jule::Ptr<_2110e7238_Token> _field_error_token = jule::Ptr<_2110e7238_Token>();
	jule::Ptr<_1b39672a9_StructIns> _field_s = jule::Ptr<_1b39672a9_StructIns>();
	jule::Slice<jule::Ptr<_1b3969b80_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1b3969b80_StructArgExprModel>>();


	_1a84c2eeb_StructLitChecker(jule::Ptr<_1a84d53d7_Eval> __param_e, jule::Ptr<_2110e7238_Token> __param_error_token, jule::Ptr<_1b39672a9_StructIns> __param_s, jule::Slice<jule::Ptr<_1b3969b80_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_1a84c2eeb_StructLitChecker(void) = default;

	inline bool operator==(_1a84c2eeb_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1a84c2eeb_StructLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8487246_Var> _1a84c9dd2_build_var(_1a84c99d6_RangeChecker*, jule::Ptr<_21110d161_VarDecl>&);
inline void _1a84ca0ad_set_size_key(_1a84c99d6_RangeChecker*);
inline void _1a84ca4ba_check_range_expr_validity(_1a84c99d6_RangeChecker*, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a8487246_Var>&, jule::Ptr<_1a850cbe5_TypeKind>&);
inline void _1a84ca685_check_slice(_1a84c99d6_RangeChecker*);
inline void _1a84ca861_check_array(_1a84c99d6_RangeChecker*);
inline void _1a84caa3c_check_map_key_a(_1a84c99d6_RangeChecker*);
inline void _1a84cac18_check_map_key_b(_1a84c99d6_RangeChecker*);
inline void _1a84cade4_check_map(_1a84c99d6_RangeChecker*);
inline void _1a84cb0c0_check_str(_1a84c99d6_RangeChecker*);
inline jule::Bool _1a84cb334_check(_1a84c99d6_RangeChecker*);
struct _1a84c99d6_RangeChecker {
	jule::Ptr<_1a844d4e8_ScopeChecker> _field_sc = jule::Ptr<_1a844d4e8_ScopeChecker>();
	jule::Ptr<_21110d914_RangeKind> _field_rang = jule::Ptr<_21110d914_RangeKind>();
	jule::Ptr<_1a83eb5c8_RangeIter> _field_kind = jule::Ptr<_1a83eb5c8_RangeIter>();
	jule::Ptr<_1a84d3869_Data> _field_d = jule::Ptr<_1a84d3869_Data>();


	_1a84c99d6_RangeChecker(jule::Ptr<_1a844d4e8_ScopeChecker> __param_sc, jule::Ptr<_21110d914_RangeKind> __param_rang, jule::Ptr<_1a83eb5c8_RangeIter> __param_kind, jule::Ptr<_1a84d3869_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_1a84c99d6_RangeChecker(void) = default;

	inline bool operator==(_1a84c99d6_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a84c99d6_RangeChecker _other) { return !this->operator==(_other); }


};
inline void _1a84cc07c_prepare_types(_1a84cbac6_RetTypeChecker*);
inline void _1a84cc302_prepare_exprs(_1a84cbac6_RetTypeChecker*, jule::Ptr<_210e87caa_Expr>&);
inline void _1a84cc4cd_ret_vars(_1a84cbac6_RetTypeChecker*);
inline void _1a84cc6a9_check_exprs(_1a84cbac6_RetTypeChecker*);
inline jule::Bool _1a84cc9b7_check(_1a84cbac6_RetTypeChecker*, jule::Ptr<_210e87caa_Expr>&);
struct _1a84cbac6_RetTypeChecker {
	jule::Ptr<_1a844d4e8_ScopeChecker> _field_sc = jule::Ptr<_1a844d4e8_ScopeChecker>();
	jule::Ptr<_1a5b33164_FnIns> _field_f = jule::Ptr<_1a5b33164_FnIns>();
	jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>();
	jule::Slice<jule::Ptr<_210e87caa_Expr>> _field_exprs = jule::Slice<jule::Ptr<_210e87caa_Expr>>();
	jule::Slice<jule::Ptr<_1a8487246_Var>> _field_vars = jule::Slice<jule::Ptr<_1a8487246_Var>>();
	jule::Ptr<_2110e7238_Token> _field_error_token = jule::Ptr<_2110e7238_Token>();
	jule::Any _field_model = jule::Any();


	_1a84cbac6_RetTypeChecker(jule::Ptr<_1a844d4e8_ScopeChecker> __param_sc, jule::Ptr<_1a5b33164_FnIns> __param_f, jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> __param_types, jule::Slice<jule::Ptr<_210e87caa_Expr>> __param_exprs, jule::Slice<jule::Ptr<_1a8487246_Var>> __param_vars, jule::Ptr<_2110e7238_Token> __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_1a84cbac6_RetTypeChecker(void) = default;

	inline bool operator==(_1a84cbac6_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a84cbac6_RetTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8464058_ImportInfo> _1a84cdcb5_find_package(_1a84cd7a9_SymbolTable*, jule::Str);
inline jule::Ptr<_1a8464058_ImportInfo> _1a84ce0c3_select_package(_1a84cd7a9_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)>);
inline jule::Ptr<_1a8487246_Var> _1a84ce47a_find_var(_1a84cd7a9_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a850bead_TypeAlias> _1a84ce832_find_type_alias(_1a84cd7a9_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b396462a_Struct> _1a84cebd9_find_struct(_1a84cd7a9_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5b2eeb8_Fn> _1a84d0091_find_fn(_1a84cd7a9_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5e34531_Trait> _1a84d039e_find_trait(_1a84cd7a9_SymbolTable*, jule::Str);
inline jule::Ptr<_1a83065e3_Enum> _1a84d06ac_find_enum(_1a84cd7a9_SymbolTable*, jule::Str);
inline jule::Ptr<_1a8487246_Var> _1a84d0c2e___find_var(_1a84cd7a9_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1a850bead_TypeAlias> _1a84d1180___find_type_alias(_1a84cd7a9_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1a84d1537_def_by_ident(_1a84cd7a9_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1a84d1988_is_duplicated_ident(_1a84cd7a9_SymbolTable*, jule::U64, jule::Str, jule::Bool);
struct _1a84cd7a9_SymbolTable {
	jule::Ptr<_2110ec628_File> _field_file = jule::Ptr<_2110ec628_File>();
	jule::Slice<_1a5b37586_Pass> _field_passes = jule::Slice<_1a5b37586_Pass>();
	jule::Slice<jule::Ptr<_1a8464058_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1a8464058_ImportInfo>>();
	jule::Slice<jule::Ptr<_1a8487246_Var>> _field_vars = jule::Slice<jule::Ptr<_1a8487246_Var>>();
	jule::Slice<jule::Ptr<_1a850bead_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>();
	jule::Slice<jule::Ptr<_1b396462a_Struct>> _field_structs = jule::Slice<jule::Ptr<_1b396462a_Struct>>();
	jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>();
	jule::Slice<jule::Ptr<_1a5e34531_Trait>> _field_traits = jule::Slice<jule::Ptr<_1a5e34531_Trait>>();
	jule::Slice<jule::Ptr<_1a83065e3_Enum>> _field_enums = jule::Slice<jule::Ptr<_1a83065e3_Enum>>();
	jule::Slice<jule::Ptr<_1a8306d30_Impl>> _field_impls = jule::Slice<jule::Ptr<_1a8306d30_Impl>>();


	_1a84cd7a9_SymbolTable(jule::Ptr<_2110ec628_File> __param_file, jule::Slice<_1a5b37586_Pass> __param_passes, jule::Slice<jule::Ptr<_1a8464058_ImportInfo>> __param_imports, jule::Slice<jule::Ptr<_1a8487246_Var>> __param_vars, jule::Slice<jule::Ptr<_1a850bead_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ptr<_1b396462a_Struct>> __param_structs, jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> __param_funcs, jule::Slice<jule::Ptr<_1a5e34531_Trait>> __param_traits, jule::Slice<jule::Ptr<_1a83065e3_Enum>> __param_enums, jule::Slice<jule::Ptr<_1a8306d30_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_1a84cd7a9_SymbolTable(void) = default;

	inline bool operator==(_1a84cd7a9_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1a84cd7a9_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a84d3c54_is_nil(_1a84d3869_Data*);
inline jule::Bool _1a84d3eb8_is_void(_1a84d3869_Data*);
inline jule::Bool _1a84d422c_is_const(_1a84d3869_Data*);
inline jule::Bool _1a84d453a_good_operand(_1a84d3869_Data*, jule::Ptr<_1a84d3869_Data>&);
struct _1a84d3869_Data {
	jule::Ptr<_1a850cbe5_TypeKind> _field_kind = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1a83a871c_Const> _field_constant = jule::Ptr<_1a83a871c_Const>();


	_1a84d3869_Data(jule::Ptr<_1a850cbe5_TypeKind> __param_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ptr<_1a83a871c_Const> __param_constant): _field_kind(__param_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_1a84d3869_Data(void) = default;

	inline bool operator==(_1a84d3869_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1a84d3869_Data _other) { return !this->operator==(_other); }


};
struct _1a84d48e2_Value {
	jule::Ptr<_210e87caa_Expr> _field_expr = jule::Ptr<_210e87caa_Expr>();
	jule::Ptr<_1a84d3869_Data> _field_data = jule::Ptr<_1a84d3869_Data>();


	_1a84d48e2_Value(jule::Ptr<_210e87caa_Expr> __param_expr, jule::Ptr<_1a84d3869_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_1a84d48e2_Value(void) = default;

	inline bool operator==(_1a84d48e2_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a84d48e2_Value _other) { return !this->operator==(_other); }


};
inline void _1a84d58b0_push_err(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a84d5bce_push_suggestion(_1a84d53d7_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1a84d5daa_allow_builtin(_1a84d53d7_Eval*);
inline void _1a84d6086_disallow_builtin(_1a84d53d7_Eval*);
inline jule::Bool _1a84d62ea_is_unsafe(_1a84d53d7_Eval*);
inline jule::Bool _1a84d655e_is_global(_1a84d53d7_Eval*);
inline jule::Bool _1a84d686c_apply_numeric_prefix(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a84d6ad1_lit_nil(_1a84d53d7_Eval*);
inline jule::Ptr<_1a84d3869_Data> _1a84d6dde_lit_str(_1a84d53d7_Eval*, jule::Ptr<_211109701_LitExpr>&);
inline jule::Ptr<_1a84d3869_Data> _1a84d71ec_lit_bool(_1a84d53d7_Eval*, jule::Ptr<_211109701_LitExpr>&);
inline jule::Ptr<_1a84d3869_Data> _1a84d750a_lit_rune(_1a84d53d7_Eval*, jule::Ptr<_211109701_LitExpr>&);
inline jule::Ptr<_1a84d3869_Data> _1a84d7818_lit_float(_1a84d53d7_Eval*, jule::Ptr<_211109701_LitExpr>&);
inline jule::Ptr<_1a84d3869_Data> _1a84d7b26_lit_int(_1a84d53d7_Eval*, jule::Ptr<_211109701_LitExpr>&);
inline jule::Ptr<_1a84d3869_Data> _1a84d7e34_lit_num(_1a84d53d7_Eval*, jule::Ptr<_211109701_LitExpr>&);
inline jule::Ptr<_1a84d3869_Data> _1a84d8242_eval_lit(_1a84d53d7_Eval*, jule::Ptr<_211109701_LitExpr>);
inline jule::Any _1a84d8550_find_builtins(_1a84d53d7_Eval*, jule::Str);
inline jule::Any _1a84d8907_get_def(_1a84d53d7_Eval*, jule::Str, jule::Bool);
inline void _1a84d8b7c_push_reference(_1a84d53d7_Eval*, jule::Ptr<_1a5b36222_ReferenceStack>&);
inline void _1a84d8e02_push_reference_to_fn(_1a84d53d7_Eval*, jule::Ptr<_1a5b33164_FnIns>&);
inline void _1a84d9177_push_reference_to_var(_1a84d53d7_Eval*, jule::Ptr<_1a8487246_Var>&);
inline void _1a84d9441_push_reference_to_struct(_1a84d53d7_Eval*, jule::Ptr<_1b39672a9_StructIns>&);
inline jule::Ptr<_1a84d3869_Data> _1a84d973d___eval_enum(_1a84d53d7_Eval*, jule::Ptr<_1a83065e3_Enum>);
inline jule::Ptr<_1a84d3869_Data> _1a84d9ae5_eval_enum(_1a84d53d7_Eval*, jule::Ptr<_1a83065e3_Enum>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84d9e03___eval_struct(_1a84d53d7_Eval*, jule::Ptr<_1b39672a9_StructIns>);
inline jule::Ptr<_1a84d3869_Data> _1a84da2aa_eval_struct(_1a84d53d7_Eval*, jule::Ptr<_1b39672a9_StructIns>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84da5b8_eval_fn_ins(_1a84d53d7_Eval*, jule::Ptr<_1a5b33164_FnIns>);
inline void _1a84da8d7_check_deprecated(_1a84d53d7_Eval*, jule::Slice<jule::Ptr<_210eb33e0_Directive>>&, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84dac8e_eval_fn(_1a84d53d7_Eval*, jule::Ptr<_1a5b2eeb8_Fn>, jule::Ptr<_2110e7238_Token>);
inline void _1a84db19b_push_illegal_cycle_error(_1a84d53d7_Eval*, jule::Ptr<_1a8487246_Var>&, jule::Ptr<_1a8487246_Var>&, jule::Str&);
inline jule::Bool _1a84db542_check_cross_cycle(_1a84d53d7_Eval*, jule::Ptr<_1a8487246_Var>&, jule::Str&);
inline jule::Bool _1a84db8e9_check_illegal_cycles(_1a84d53d7_Eval*, jule::Ptr<_1a8487246_Var>&, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84dbca1_eval_var(_1a84d53d7_Eval*, jule::Ptr<_1a8487246_Var>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84dc158_eval_type_alias(_1a84d53d7_Eval*, jule::Ptr<_1a850bead_TypeAlias>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84dc510_eval_def(_1a84d53d7_Eval*, jule::Any, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84dc81d_eval_ident(_1a84d53d7_Eval*, jule::Ptr<_211109cb7_IdentExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84dcb2b_eval_unary(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_211109ea4_UnaryExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84dce39_eval_variadic(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110a191_VariadicExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84dd247_eval_unsafe(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_2111098dd_UnsafeExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84dd555_eval_arr(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110b5c1_SliceExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84dd90c_eval_exp_slc(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110b5c1_SliceExpr>, jule::Ptr<_1a850cbe5_TypeKind>);
inline jule::Ptr<_1a84d3869_Data> _1a84ddc1a_eval_slice_expr(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110b5c1_SliceExpr>);
inline void _1a84de07d_check_integer_indexing_by_data(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2110e7238_Token>);
inline void _1a84de435_indexing_ptr(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2111094c0_IndexingExpr>&);
inline void _1a84de7ed_indexing_arr(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2111094c0_IndexingExpr>&);
inline void _1a84debb6_indexing_slc(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2111094c0_IndexingExpr>&);
inline void _1a84e007e_indexing_map(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2111094c0_IndexingExpr>&);
inline void _1a84e0447_indexing_str(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2111094c0_IndexingExpr>&);
inline void _1a84e0810_to_indexing(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2111094c0_IndexingExpr>&);
inline jule::Bool _1a84e0c0b_push_generics_from_index_data(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_210e7e80c_IdentTypeDecl>&, jule::Ptr<_2111094c0_IndexingExpr>&);
inline jule::Ptr<_1a84d3869_Data> _1a84e10e6_eval_ident_decl_from_indexing(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_2111094c0_IndexingExpr>&);
inline jule::Ptr<_1a84d3869_Data> _1a84e13e3_eval_indexing(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_2111094c0_IndexingExpr>);
inline std::tuple<jule::Ptr<_1a84d3869_Data>,jule::Ptr<_1a84d3869_Data>> _1a84e1701_eval_slicing_exprs(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110bc31_SlicingExpr>&);
inline void _1a84e1976_slicing_arr(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>&);
inline void _1a84e1d3e_slicing_str(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>&);
inline void _1a84e22a1_check_slicing(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_21110bc31_SlicingExpr>&);
inline jule::Ptr<_1a84d3869_Data> _1a84e25ae_eval_slicing(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110bc31_SlicingExpr>);
inline void _1a84e2977_cast_ptr(_1a84d53d7_Eval*, jule::Ptr<_1a850cbe5_TypeKind>, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline void _1a84e2d40_cast_struct(_1a84d53d7_Eval*, jule::Ptr<_1a850cbe5_TypeKind>, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline void _1a84e3208_cast_ref(_1a84d53d7_Eval*, jule::Ptr<_1a850cbe5_TypeKind>, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline void _1a84e35c1_cast_slc(_1a84d53d7_Eval*, jule::Ptr<_1a850cbe5_TypeKind>, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline void _1a84e38e0_cast_str(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline void _1a84e3ca8_cast_int(_1a84d53d7_Eval*, jule::Ptr<_1a850cbe5_TypeKind>, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline void _1a84e4171_cast_num(_1a84d53d7_Eval*, jule::Ptr<_1a850cbe5_TypeKind>, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline void _1a84e4539_cast_prim(_1a84d53d7_Eval*, jule::Ptr<_1a850cbe5_TypeKind>, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline void _1a84e4858_cast_constant(_1a84d53d7_Eval*, jule::Ptr<_1a850cbe5_TypeKind>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a84e4ced_eval_cast_by_type_n_data(_1a84d53d7_Eval*, jule::Ptr<_1a850cbe5_TypeKind>, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84e50ea_eval_cast(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110a37d_CastExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84e5408_eval_ns_selection(_1a84d53d7_Eval*, jule::Ptr<_21110a56a_NsSelectionExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84e589d_eval_struct_lit_explicit(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_1b39672a9_StructIns>, jule::Slice<jule::Ptr<_210e87caa_Expr>>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84e5b9a_eval_struct_lit(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110b00a_StructLit>);
inline jule::Ptr<_1a84d3869_Data> _1a84e5ea8_eval_type(_1a84d53d7_Eval*, jule::Ptr<_210e7e620_TypeDecl>);
inline void _1a84e62c7_call_type_fn(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1a84e667e_check_fn_call_generics(_1a84d53d7_Eval*, jule::Ptr<_1a5b33164_FnIns>, jule::Ptr<_21110ab31_FnCallExpr>);
inline void _1a84e699d_call_builtin_fn(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline void _1a84e6d11_check_fn_of_concurrent_call(_1a84d53d7_Eval*, jule::Ptr<_1a5b33164_FnIns>&, jule::Ptr<_2110e7238_Token>);
inline void _1a84e720c_process_exceptional_handler(_1a84d53d7_Eval*, jule::Ptr<_1a5b33164_FnIns>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline void _1a84e751a_call_fn(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a84e7828_eval_fn_call(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110ab31_FnCallExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84e7bd0_eval_enum_static(_1a84d53d7_Eval*, jule::Ptr<_1a83065e3_Enum>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84e8087_eval_struct_static(_1a84d53d7_Eval*, jule::Ptr<_1b39672a9_StructIns>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84e84d8_eval_trait_sub_ident(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_1a5e34531_Trait>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84e89d3_eval_struct_sub_ident(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_1b39672a9_StructIns>, jule::Ptr<_21110a757_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1a84d3869_Data> _1a84e8d8a_eval_slice_sub_ident(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84e9242_eval_array_sub_ident(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84e95e9_eval_map_sub_ident(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84e99a1_eval_str_sub_ident(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84e9cae_eval_int_type_static(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84ea0bc_eval_uint_type_static(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84ea3ca_eval_i8_type_static(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84ea6d8_eval_i16_type_static(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84ea9e6_eval_i32_type_static(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84ead04_eval_i64_type_static(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84eb112_eval_u8_type_static(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84eb420_eval_u16_type_static(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84eb72d_eval_u32_type_static(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84eba3b_eval_u64_type_static(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84ebd49_eval_f32_type_tatic(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84ec157_eval_f64_type_static(_1a84d53d7_Eval*, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84ec50e_eval_prim_static(_1a84d53d7_Eval*, jule::Str, jule::Ptr<_2110e7238_Token>);
inline jule::Ptr<_1a84d3869_Data> _1a84ec8b6_eval_type_static(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_21110a757_SubIdentExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84ecc6d_eval_obj_sub_ident(_1a84d53d7_Eval*, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_21110a757_SubIdentExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84ed07b_eval_sub_ident(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110a757_SubIdentExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84ed389_eval_tuple(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_211079ae4_TupleExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84ed741_eval_map(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_1a8517969_Map>, jule::Ptr<_21110b1e7_BraceLit>);
inline jule::Ptr<_1a84d3869_Data> _1a84eda4e_eval_brace_lit(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110b1e7_BraceLit>);
inline jule::Ptr<_1a84d3869_Data> _1a84edd5c_eval_anon_fn(_1a84d53d7_Eval*, jule::Ptr<_21110ce74_FnDecl>);
inline jule::Ptr<_1a84d3869_Data> _1a84ee16a_eval_binop(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_21110a944_BinopExpr>);
inline jule::Ptr<_1a84d3869_Data> _1a84ee478_eval_expr_kind(jule::Ptr<_1a84d53d7_Eval>, jule::Any);
inline jule::Ptr<_1a84d3869_Data> _1a84ee786_eval(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_210e87caa_Expr>);
inline jule::Ptr<_1a84d3869_Data> _1a84eea94_eval_expr(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_210e87caa_Expr>);
struct _1a84d53d7_Eval {
	jule::Ptr<_1a846bc42_Sema> _field_s = jule::Ptr<_1a846bc42_Sema>();
	jule::Trait<_1a85260a4_Lookup> _field_lookup = jule::Trait<_1a85260a4_Lookup>();
	jule::Ptr<_1a850cbe5_TypeKind> _field_prefix = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1a8487246_Var> _field_owner = jule::Ptr<_1a8487246_Var>();
	jule::Ptr<_1b396694b_FieldIns> _field_field = jule::Ptr<_1b396694b_FieldIns>();
	jule::Bool _field_arg = jule::Bool();


	_1a84d53d7_Eval(jule::Ptr<_1a846bc42_Sema> __param_s, jule::Trait<_1a85260a4_Lookup> __param_lookup, jule::Ptr<_1a850cbe5_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Bool __param_ignored, jule::Bool __param_dis_builtin, jule::Ptr<_1a8487246_Var> __param_owner, jule::Ptr<_1b396694b_FieldIns> __param_field, jule::Bool __param_arg): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_ignored(__param_ignored), _field_dis_builtin(__param_dis_builtin), _field_owner(__param_owner), _field_field(__param_field), _field_arg(__param_arg) {}

	

	_1a84d53d7_Eval(void) = default;

	inline bool operator==(_1a84d53d7_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1a84d53d7_Eval _other) { return !this->operator==(_other); }


};
inline _1a8500017_UnaryEval static__1a85004bd_new(jule::Ptr<_1a84d53d7_Eval>);
inline void _1a8500699_minus(_1a8500017_UnaryEval*);
inline void _1a8500875_plus(_1a8500017_UnaryEval*);
inline void _1a8500a51_caret(_1a8500017_UnaryEval*);
inline void _1a8500c2c_excl(_1a8500017_UnaryEval*);
inline void _1a8500e08_star(_1a8500017_UnaryEval*);
inline void _1a85010d4_amper(_1a8500017_UnaryEval*);
inline void _1a85012b0_type_decl(_1a8500017_UnaryEval*);
inline void _1a850148b_eval_data(_1a8500017_UnaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a8501766_eval(_1a8500017_UnaryEval*, jule::Ptr<_211109ea4_UnaryExpr>);
struct _1a8500017_UnaryEval {
	jule::Ptr<_1a84d53d7_Eval> _field_e = jule::Ptr<_1a84d53d7_Eval>();
	jule::Ptr<_1a84d3869_Data> _field_d = jule::Ptr<_1a84d3869_Data>();
	jule::Ptr<_211109ea4_UnaryExpr> _field_u = jule::Ptr<_211109ea4_UnaryExpr>();


	_1a8500017_UnaryEval(jule::Ptr<_1a84d53d7_Eval> __param_e, jule::Ptr<_1a84d3869_Data> __param_d, jule::Ptr<_211109ea4_UnaryExpr> __param_u): _field_e(__param_e), _field_d(__param_d), _field_u(__param_u) {}

	

	_1a8500017_UnaryEval(void) = default;

	inline bool operator==(_1a8500017_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a8500017_UnaryEval _other) { return !this->operator==(_other); }


};
inline _1a8501ca5_BinaryEval static__1a850235a_new_plain(jule::Ptr<_1a84d53d7_Eval>);
inline _1a8501ca5_BinaryEval static__1a850269b_new(jule::Ptr<_1a84d53d7_Eval>, jule::Ptr<_2110e7238_Token>);
inline jule::Bool _1a8502954_check_type_compatibility(_1a8501ca5_BinaryEval*);
inline jule::Bool _1a8502c1d_check_struct_common_operator_compatibility(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a8502e82_eval_nil(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a85031e6_eval_enum(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a850345a_eval_sptr(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a85036be_eval_ptr(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a8503933_eval_arr(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a8503b97_eval_slc(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a8503e0b_eval_fn(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a8504170_eval_struct(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a85043d4_eval_trait(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a8504648_eval_any(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a85048ac_eval_bool(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a8504b21_eval_str(_1a8501ca5_BinaryEval*);
inline void _1a8504cec_set_type_to_greater(_1a8501ca5_BinaryEval*);
inline void _1a850503e_check_mod_data(_1a8501ca5_BinaryEval*, jule::Ptr<_1a84d3869_Data>&);
inline void _1a850521a_mod(_1a8501ca5_BinaryEval*);
inline jule::Bool _1a8505616_numbers_are_compatibile(_1a8501ca5_BinaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1a84d3869_Data> _1a8505869_eval_float(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a8505acd_eval_int(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a8505d42_eval_prim(_1a8501ca5_BinaryEval*);
inline jule::Ptr<_1a84d3869_Data> _1a85060a6_eval_op(_1a8501ca5_BinaryEval*);
inline void _1a850632b_eval_const(_1a8501ca5_BinaryEval*, jule::Ptr<_1a84d3869_Data>&);
inline void _1a85065a1_check_data(_1a8501ca5_BinaryEval*, jule::Ptr<_1a84d3869_Data>&);
inline void _1a850677c_check_datas(_1a8501ca5_BinaryEval*);
inline void _1a8506a02_set_model(_1a8501ca5_BinaryEval*, jule::Ptr<_1a84d3869_Data>&);
inline void _1a8506c77_post_eval(_1a8501ca5_BinaryEval*, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a850712e_solve_explicit(_1a8501ca5_BinaryEval*, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a850743c_eval(_1a8501ca5_BinaryEval*, jule::Ptr<_21110a944_BinopExpr>&);
struct _1a8501ca5_BinaryEval {
	jule::Ptr<_1a84d53d7_Eval> _field_e = jule::Ptr<_1a84d53d7_Eval>();
	jule::Ptr<_1a84d3869_Data> _field_l = jule::Ptr<_1a84d3869_Data>();
	jule::Ptr<_1a84d3869_Data> _field_r = jule::Ptr<_1a84d3869_Data>();
	jule::Ptr<_2110e7238_Token> _field_op = jule::Ptr<_2110e7238_Token>();


	_1a8501ca5_BinaryEval(jule::Ptr<_1a84d53d7_Eval> __param_e, jule::Ptr<_1a84d3869_Data> __param_l, jule::Ptr<_1a84d3869_Data> __param_r, jule::Ptr<_2110e7238_Token> __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1a8501ca5_BinaryEval(void) = default;

	inline bool operator==(_1a8501ca5_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a8501ca5_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1a850bead_TypeAlias {
	jule::Ptr<_21110ca9a_ScopeTree> _field_scope = jule::Ptr<_21110ca9a_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a8511a84_TypeSymbol> _field_kind = jule::Ptr<_1a8511a84_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1a850bead_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>();


	_1a850bead_TypeAlias(jule::Ptr<_21110ca9a_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, jule::Ptr<_2110e7238_Token> __param_token, jule::Str __param_ident, jule::Ptr<_1a8511a84_TypeSymbol> __param_kind, jule::Slice<jule::Any> __param_refers, jule::Slice<jule::Ptr<_1a850bead_TypeAlias>> __param_generics): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_refers(__param_refers), _field_generics(__param_generics) {}

	

	_1a850bead_TypeAlias(void) = default;

	inline bool operator==(_1a850bead_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1a850bead_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1a850d09c_to_str(_1a850cbe5_TypeKind*);
inline jule::Bool _1a850d3aa_equals(jule::Ptr<_1a850cbe5_TypeKind>, jule::Ptr<_1a850cbe5_TypeKind>);
inline jule::Bool _1a850d850_cpp_linked(_1a850cbe5_TypeKind*);
inline jule::Bool _1a850dab4_is_nil(_1a850cbe5_TypeKind*);
inline jule::Bool _1a850dd28_void(_1a850cbe5_TypeKind*);
inline jule::Bool _1a850e08c_mutable(_1a850cbe5_TypeKind*);
inline jule::Bool _1a850e301_nil_compatible(_1a850cbe5_TypeKind*);
inline jule::Bool _1a850e565_performs_rc(_1a850cbe5_TypeKind*);
inline jule::Bool _1a850e7c9_supports_cloning(_1a850cbe5_TypeKind*);
inline jule::Bool _1a850ea3d_variadicable(_1a850cbe5_TypeKind*);
inline jule::Ptr<_1a8512447_Prim> _1a850eca2_prim(_1a850cbe5_TypeKind*);
inline jule::Ptr<_1a8515956_Sptr> _1a8510016_sptr(_1a850cbe5_TypeKind*);
inline jule::Ptr<_1a8518eba_Ptr> _1a851027a_ptr(_1a850cbe5_TypeKind*);
inline jule::Ptr<_1a83065e3_Enum> _1a85104de_enm(_1a850cbe5_TypeKind*);
inline jule::Ptr<_1a851855d_Arr> _1a8510753_arr(_1a850cbe5_TypeKind*);
inline jule::Ptr<_1a85163b3_Slc> _1a85109b7_slc(_1a850cbe5_TypeKind*);
inline jule::Ptr<_1a5b33164_FnIns> _1a8510c2b_fnc(_1a850cbe5_TypeKind*);
inline jule::Ptr<_1b39672a9_StructIns> _1a8510e90_strct(_1a850cbe5_TypeKind*);
inline jule::Ptr<_1a5e34531_Trait> _1a8511204_trt(_1a850cbe5_TypeKind*);
inline jule::Ptr<_1a8517969_Map> _1a8511468_map(_1a850cbe5_TypeKind*);
inline jule::Ptr<_1a8516da8_Tuple> _1a85116cc_tup(_1a850cbe5_TypeKind*);
struct _1a850cbe5_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1a850c7b6_Kind> _field_kind = jule::Trait<_1a850c7b6_Kind>();


	_1a850cbe5_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_1a850c7b6_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {}

	

	_1a850cbe5_TypeKind(void) = default;

	inline bool operator==(_1a850cbe5_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a850cbe5_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a8511e80_checked(_1a8511a84_TypeSymbol*);
inline void _1a851215b_remove_kind(_1a8511a84_TypeSymbol*);
struct _1a8511a84_TypeSymbol {
	jule::Ptr<_210e7e620_TypeDecl> _field_decl = jule::Ptr<_210e7e620_TypeDecl>();
	jule::Ptr<_1a850cbe5_TypeKind> _field_kind = jule::Ptr<_1a850cbe5_TypeKind>();


	_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl> __param_decl, jule::Ptr<_1a850cbe5_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1a8511a84_TypeSymbol(void) = default;

	inline bool operator==(_1a8511a84_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a8511a84_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1a85127aa_to_str(_1a8512447_Prim*);
inline jule::Bool _1a8512ab8_equals(jule::Ptr<_1a8512447_Prim>, jule::Ptr<_1a850cbe5_TypeKind>);
inline jule::Bool _1a851302a_is_i8(_1a8512447_Prim*);
inline jule::Bool _1a851328e_is_i16(_1a8512447_Prim*);
inline jule::Bool _1a8513503_is_i32(_1a8512447_Prim*);
inline jule::Bool _1a8513767_is_i64(_1a8512447_Prim*);
inline jule::Bool _1a85139cb_is_u8(_1a8512447_Prim*);
inline jule::Bool _1a8513c40_is_u16(_1a8512447_Prim*);
inline jule::Bool _1a8513ea4_is_u32(_1a8512447_Prim*);
inline jule::Bool _1a8514218_is_u64(_1a8512447_Prim*);
inline jule::Bool _1a851447c_is_f32(_1a8512447_Prim*);
inline jule::Bool _1a85146e1_is_f64(_1a8512447_Prim*);
inline jule::Bool _1a8514955_is_int(_1a8512447_Prim*);
inline jule::Bool _1a8514bb9_is_uint(_1a8512447_Prim*);
inline jule::Bool _1a8514e2d_is_uintptr(_1a8512447_Prim*);
inline jule::Bool _1a8515192_is_bool(_1a8512447_Prim*);
inline jule::Bool _1a8515406_is_str(_1a8512447_Prim*);
inline jule::Bool _1a851566a_is_any(_1a8512447_Prim*);
struct _1a8512447_Prim {
	jule::Str _field_kind = jule::Str();


	_1a8512447_Prim(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_1a8512447_Prim(void) = default;

	inline bool operator==(_1a8512447_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a8512447_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1a8515cb9_to_str(_1a8515956_Sptr*);
inline jule::Bool _1a85160c7_equals(jule::Ptr<_1a8515956_Sptr>, jule::Ptr<_1a850cbe5_TypeKind>);
struct _1a8515956_Sptr {
	jule::Ptr<_1a850cbe5_TypeKind> _field_elem = jule::Ptr<_1a850cbe5_TypeKind>();


	_1a8515956_Sptr(jule::Ptr<_1a850cbe5_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a8515956_Sptr(void) = default;

	inline bool operator==(_1a8515956_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a8515956_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a8516836_to_str(_1a85163b3_Slc*);
inline jule::Bool _1a8516b44_equals(jule::Ptr<_1a85163b3_Slc>, jule::Ptr<_1a850cbe5_TypeKind>);
struct _1a85163b3_Slc {
	jule::Ptr<_1a850cbe5_TypeKind> _field_elem = jule::Ptr<_1a850cbe5_TypeKind>();


	_1a85163b3_Slc(jule::Ptr<_1a850cbe5_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a85163b3_Slc(void) = default;

	inline bool operator==(_1a85163b3_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a85163b3_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1a85172a4_to_str(_1a8516da8_Tuple*);
inline jule::Bool _1a85175b2_equals(jule::Ptr<_1a8516da8_Tuple>, jule::Ptr<_1a850cbe5_TypeKind>);
struct _1a8516da8_Tuple {
	jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>();


	_1a8516da8_Tuple(jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> __param_types): _field_types(__param_types) {}

	

	_1a8516da8_Tuple(void) = default;

	inline bool operator==(_1a8516da8_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1a8516da8_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1a8517ccc_to_str(_1a8517969_Map*);
inline jule::Bool _1a85180da_equals(jule::Ptr<_1a8517969_Map>, jule::Ptr<_1a850cbe5_TypeKind>);
struct _1a8517969_Map {
	jule::Ptr<_1a850cbe5_TypeKind> _field_key = jule::Ptr<_1a850cbe5_TypeKind>();
	jule::Ptr<_1a850cbe5_TypeKind> _field_val = jule::Ptr<_1a850cbe5_TypeKind>();


	_1a8517969_Map(jule::Ptr<_1a850cbe5_TypeKind> __param_key, jule::Ptr<_1a850cbe5_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1a8517969_Map(void) = default;

	inline bool operator==(_1a8517969_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1a8517969_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1a85188c1_to_str(_1a851855d_Arr*);
inline jule::Bool _1a8518bce_equals(jule::Ptr<_1a851855d_Arr>, jule::Ptr<_1a850cbe5_TypeKind>);
struct _1a851855d_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_1a850cbe5_TypeKind> _field_elem = jule::Ptr<_1a850cbe5_TypeKind>();


	_1a851855d_Arr(jule::Bool __param_auto, jule::I64 __param_n, jule::Ptr<_1a850cbe5_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {}

	

	_1a851855d_Arr(void) = default;

	inline bool operator==(_1a851855d_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a851855d_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a851932d_to_str(_1a8518eba_Ptr*);
inline jule::Bool _1a851963b_equals(jule::Ptr<_1a8518eba_Ptr>, jule::Ptr<_1a850cbe5_TypeKind>);
inline jule::Bool _1a851998d_is_unsafe(_1a8518eba_Ptr*);
struct _1a8518eba_Ptr {
	jule::Ptr<_1a850cbe5_TypeKind> _field_elem = jule::Ptr<_1a850cbe5_TypeKind>();


	_1a8518eba_Ptr(jule::Ptr<_1a850cbe5_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a8518eba_Ptr(void) = default;

	inline bool operator==(_1a8518eba_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a8518eba_Ptr _other) { return !this->operator==(_other); }


};
struct _1a851b660_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;


	_1a851b660_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_1a851b660_Referencer(void) = default;

	inline bool operator==(_1a851b660_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a851b660_Referencer _other) { return !this->operator==(_other); }


};
inline void _1a851c9a2_push_err(_1a851c2dc_TypeChecker*, jule::Ptr<_2110e7238_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a851cb7d_allow_builtin(_1a851c2dc_TypeChecker*);
inline void _1a851cd59_disallow_builtin(_1a851c2dc_TypeChecker*);
inline jule::Ptr<_1a8512447_Prim> _1a851d167_build_prim(_1a851c2dc_TypeChecker*, jule::Ptr<_210e7e80c_IdentTypeDecl>&);
inline void _1a851d530_push_cycle_error(_1a851c2dc_TypeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1a851d8d7_check_cross_cycle(_1a851c2dc_TypeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1a851dc8e_check_illegal_cycles(_1a851c2dc_TypeChecker*, jule::Ptr<_210e7e80c_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1a850c7b6_Kind> _1a851e146_from_type_alias(_1a851c2dc_TypeChecker*, jule::Ptr<_210e7e80c_IdentTypeDecl>&, jule::Ptr<_1a850bead_TypeAlias>&);
inline jule::Ptr<_1a83065e3_Enum> _1a851e4ed_from_enum(_1a851c2dc_TypeChecker*, jule::Ptr<_210e7e80c_IdentTypeDecl>&, jule::Ptr<_1a83065e3_Enum>&);
inline jule::Ptr<_1a5e34531_Trait> _1a851e8a5_from_trait(_1a851c2dc_TypeChecker*, jule::Ptr<_210e7e80c_IdentTypeDecl>&, jule::Ptr<_1a5e34531_Trait>&);
inline jule::Bool _1a851ec5c_check_struct_ins(_1a851c2dc_TypeChecker*, jule::Ptr<_1b39672a9_StructIns>&, jule::Ptr<_2110e7238_Token>&);
inline void _1a8520026_append_used_struct_reference(_1a851c2dc_TypeChecker*, jule::Ptr<_1b396462a_Struct>&);
inline jule::Ptr<_1b39672a9_StructIns> _1a85203bc_build_struct_instance(_1a851c2dc_TypeChecker*, jule::Ptr<_210e7e80c_IdentTypeDecl>&, jule::Ptr<_1b396462a_Struct>&);
inline jule::Ptr<_1b39672a9_StructIns> _1a8520774_from_struct(_1a851c2dc_TypeChecker*, jule::Ptr<_210e7e80c_IdentTypeDecl>&, jule::Ptr<_1b396462a_Struct>&);
inline jule::Trait<_1a850c7b6_Kind> _1a8520b2b_get_def(_1a851c2dc_TypeChecker*, jule::Trait<_1a85260a4_Lookup>, jule::Ptr<_210e7e80c_IdentTypeDecl>&);
inline jule::Trait<_1a850c7b6_Kind> _1a8520e39_build_ident(_1a851c2dc_TypeChecker*, jule::Ptr<_210e7e80c_IdentTypeDecl>);
inline jule::Ptr<_1a8515956_Sptr> _1a8521247_build_sptr_from_type(_1a851c2dc_TypeChecker*, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Ptr<_1a8515956_Sptr> _1a8521555_build_sptr(_1a851c2dc_TypeChecker*, jule::Ptr<_210e86e41_SptrTypeDecl>);
inline jule::Ptr<_1a8518eba_Ptr> _1a8521863_build_ptr_from_type(_1a851c2dc_TypeChecker*, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Ptr<_1a8518eba_Ptr> _1a8521b71_build_ptr(_1a851c2dc_TypeChecker*, jule::Ptr<_210e87507_PtrTypeDecl>);
inline jule::Ptr<_1a85163b3_Slc> _1a8521e7e_build_slc(_1a851c2dc_TypeChecker*, jule::Ptr<_210e8712d_SlcTypeDecl>);
inline jule::Ptr<_1a851855d_Arr> _1a852228c_build_arr(_1a851c2dc_TypeChecker*, jule::Ptr<_210e876e4_ArrTypeDecl>);
inline jule::Ptr<_1a8517969_Map> _1a852259a_build_map(_1a851c2dc_TypeChecker*, jule::Ptr<_210e878d1_MapTypeDecl>);
inline jule::Ptr<_1a8516da8_Tuple> _1a85228a8_build_tuple(_1a851c2dc_TypeChecker*, jule::Ptr<_210e8731a_TupleTypeDecl>);
inline jule::Bool _1a8522bb6_check_fn_types(_1a851c2dc_TypeChecker*, jule::Ptr<_1a5b33164_FnIns>&);
inline jule::Ptr<_1a5b33164_FnIns> _1a8522ec4_build_fn(_1a851c2dc_TypeChecker*, jule::Ptr<_21110ce74_FnDecl>);
inline jule::Trait<_1a850c7b6_Kind> _1a85232d2_build_by_namespace(_1a851c2dc_TypeChecker*, jule::Ptr<_210e86c54_NamespaceTypeDecl>);
inline jule::Ptr<_1a850cbe5_TypeKind> _1a85235e0_build(_1a851c2dc_TypeChecker*, jule::Any&);
inline jule::Ptr<_1a850cbe5_TypeKind> _1a85238ed_check_decl(_1a851c2dc_TypeChecker*, jule::Ptr<_210e7e620_TypeDecl>&);
inline void _1a8523b73_check(_1a851c2dc_TypeChecker*, jule::Ptr<_1a8511a84_TypeSymbol>&);
struct _1a851c2dc_TypeChecker {
	jule::Ptr<_1a846bc42_Sema> _field_s = jule::Ptr<_1a846bc42_Sema>();
	jule::Trait<_1a85260a4_Lookup> _field_lookup = jule::Trait<_1a85260a4_Lookup>();
	jule::Ptr<_1a851b660_Referencer> _field_referencer = jule::Ptr<_1a851b660_Referencer>();
	jule::Ptr<_2110e7238_Token> _field_error_token = jule::Ptr<_2110e7238_Token>();
	jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a850bead_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1a850bead_TypeAlias> _field_owner_alias = jule::Ptr<_1a850bead_TypeAlias>();
	jule::Slice<jule::Ptr<_1a850bead_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();


	_1a851c2dc_TypeChecker(jule::Ptr<_1a846bc42_Sema> __param_s, jule::Trait<_1a85260a4_Lookup> __param_lookup, jule::Ptr<_1a851b660_Referencer> __param_referencer, jule::Ptr<_2110e7238_Token> __param_error_token, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ptr<_1a850bead_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain, jule::Bool __param_dis_builtin, jule::Bool __param_selection, jule::Ptr<_1a850bead_TypeAlias> __param_owner_alias, jule::Slice<jule::Ptr<_1a850bead_TypeAlias>> __param_banned_generics, jule::Bool __param_inscatch): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain), _field_dis_builtin(__param_dis_builtin), _field_selection(__param_selection), _field_owner_alias(__param_owner_alias), _field_banned_generics(__param_banned_generics), _field_inscatch(__param_inscatch) {}

	

	_1a851c2dc_TypeChecker(void) = default;

	inline bool operator==(_1a851c2dc_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1a851c2dc_TypeChecker _other) { return !this->operator==(_other); }


};
struct _210ddd4d5_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);


	_210ddd4d5_CompileInfo(jule::Bool __param_prod, jule::Bool __param_test, jule::Str __param_compiler, jule::Str __param_cpp_std): _field_prod(__param_prod), _field_test(__param_test), _field_compiler(__param_compiler), _field_cpp_std(__param_cpp_std) {}

	

	_210ddd4d5_CompileInfo(void) = default;

	inline bool operator==(_210ddd4d5_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_210ddd4d5_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _210e28355_push_err(_210e3d733_DirectiveEval*, jule::Ptr<_2110e7238_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _210e2bad9_split_operans(_210e3d733_DirectiveEval*, jule::Str, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Bool _210e2c0a1_eval_directive_ident(_210e3d733_DirectiveEval*, jule::Str);
inline jule::Bool _210e2c304_eval_directive_part(_210e3d733_DirectiveEval*, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Bool _210e2c5e0_eval(_210e3d733_DirectiveEval*);
struct _210e3d733_DirectiveEval {
	jule::Slice<_210c3ee2a_Log> _field_logs = jule::Slice<_210c3ee2a_Log>();
	jule::Ptr<_210eb33e0_Directive> _field_d = jule::Ptr<_210eb33e0_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();


	_210e3d733_DirectiveEval(jule::Slice<_210c3ee2a_Log> __param_logs, jule::Ptr<_210eb33e0_Directive> __param_d, jule::Slice<jule::Str> __param_vars): _field_logs(__param_logs), _field_d(__param_d), _field_vars(__param_vars) {}

	

	_210e3d733_DirectiveEval(void) = default;

	inline bool operator==(_210e3d733_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_210e3d733_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e552e218_JuleImporter> static__1e5534196_new(_210ddd4d5_CompileInfo);
inline jule::Slice<jule::Ptr<_1a8464058_ImportInfo>> _1e5535d02_all_packages(_1e552e218_JuleImporter*);
inline void _1e5537e8b_set_mod_path(_1e552e218_JuleImporter*, jule::Str);
inline jule::Str _1a85a67a5_get_mod_path(_1e552e218_JuleImporter*);
inline jule::Str _1a85a6ab3_mod_by_id(_1e552e218_JuleImporter*, jule::I64);
inline jule::Ptr<_1a8464058_ImportInfo> _1a85a6dc1_get_import(_1e552e218_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_210eb3d6e_Ast>>,jule::Slice<_210c3ee2a_Log>> _1a85a7278_import_package(_1e552e218_JuleImporter*, jule::Str, jule::Bool);
inline void _1a85a74ed_imported(_1e552e218_JuleImporter*, jule::Ptr<_1a8464058_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_210c3ee2a_Log>> _1a85a7982_is_pass_build_directives(_1e552e218_JuleImporter*, jule::Ptr<_210eb3d6e_Ast>&);
struct _1e552e218_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1a8464058_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1a8464058_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();


	_1e552e218_JuleImporter(jule::Slice<jule::Str> __param_mods, jule::Str __param_mod, jule::Slice<jule::Ptr<_1a8464058_ImportInfo>> __param_pkgs, jule::Slice<jule::Str> __param_vars): _field_mods(__param_mods), _field_mod(__param_mod), _field_pkgs(__param_pkgs), _field_vars(__param_vars) {}

	

	_1e552e218_JuleImporter(void) = default;

	inline bool operator==(_1e552e218_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1e552e218_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1a85aa875_OrderedDefines {
	jule::Slice<jule::Ptr<_1b396462a_Struct>> _field_structs = jule::Slice<jule::Ptr<_1b396462a_Struct>>();
	jule::Slice<jule::Ptr<_1a8487246_Var>> _field_globals = jule::Slice<jule::Ptr<_1a8487246_Var>>();


	_1a85aa875_OrderedDefines(jule::Slice<jule::Ptr<_1b396462a_Struct>> __param_structs, jule::Slice<jule::Ptr<_1a8487246_Var>> __param_globals): _field_structs(__param_structs), _field_globals(__param_globals) {}

	

	_1a85aa875_OrderedDefines(void) = default;

	inline bool operator==(_1a85aa875_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs &&
			this->_field_globals == _other._field_globals;
	}

	inline bool operator!=(_1a85aa875_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1a85ab090_is_common_ordered_0(jule::Slice<jule::Ptr<_1b396462a_Struct>>&, jule::Ptr<_1b396462a_Struct>);
inline jule::Bool static__1a85ab090_is_common_ordered_1(jule::Slice<jule::Ptr<_1a8487246_Var>>&, jule::Ptr<_1a8487246_Var>);
inline void static__1a85ab29e_order_common_0(jule::Slice<jule::Ptr<_1b396462a_Struct>>&);
inline void static__1a85ab29e_order_common_1(jule::Slice<jule::Ptr<_1a8487246_Var>>&);
inline void static__1a85ab4ad_order_structures(jule::Slice<jule::Ptr<_1b396462a_Struct>>&);
inline void static__1a85ab6bc_order_vars(jule::Slice<jule::Ptr<_1a8487246_Var>>&);
struct _1a85aaad9_DefineOrderer {
	

	_1a85aaad9_DefineOrderer(void) = default;

	inline bool operator==(_1a85aaad9_DefineOrderer _other) { return true; }

	inline bool operator!=(_1a85aaad9_DefineOrderer _other) { return !this->operator==(_other); }


};
inline void _1a85b1eca_optimize_child(jule::Ptr<_1a85b1a9b_ScopeDeadCode>, jule::Ptr<_1a8438e62_Scope>&);
inline void _1a85b21a6_eliminate_followed(_1a85b1a9b_ScopeDeadCode*);
inline void _1a85b242b_optimize_stmt(jule::Ptr<_1a85b1a9b_ScopeDeadCode>, jule::Any);
inline void _1a85b2607_optimize_stmts(jule::Ptr<_1a85b1a9b_ScopeDeadCode>);
struct _1a85b1a9b_ScopeDeadCode {
	jule::Ptr<_1a85b1a9b_ScopeDeadCode> _field_parent = jule::Ptr<_1a85b1a9b_ScopeDeadCode>();
	jule::Ptr<_1a8438e62_Scope> _field_s = jule::Ptr<_1a8438e62_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();


	_1a85b1a9b_ScopeDeadCode(jule::Ptr<_1a85b1a9b_ScopeDeadCode> __param_parent, jule::Ptr<_1a8438e62_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::I64 __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {}

	

	_1a85b1a9b_ScopeDeadCode(void) = default;

	inline bool operator==(_1a85b1a9b_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a85b1a9b_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline void static__1a85d4e54_reset(void);
inline void static__1a85d5086_print(jule::Str, jule::Str);
struct _1a85d4c67_AnsiEscape {
	

	_1a85d4c67_AnsiEscape(void) = default;

	inline bool operator==(_1a85d4c67_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a85d4c67_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1a85d6175_log_flat(_210c3ee2a_Log&);
inline void static__1a85d6384_log_error(_210c3ee2a_Log&);
inline void static__1a85d6593_log(_210c3ee2a_Log&);
inline void static__1a85d67a2_print_logs(jule::Slice<_210c3ee2a_Log>&);
struct _1a85d5e00_Logger {
	

	_1a85d5e00_Logger(void) = default;

	inline bool operator==(_1a85d5e00_Logger _other) { return true; }

	inline bool operator!=(_1a85d5e00_Logger _other) { return !this->operator==(_other); }


};
struct _1a8cad9a1_UnsafeBinopExprModel {
	jule::Ptr<_1b39693cc_BinopExprModel> _field_node = jule::Ptr<_1b39693cc_BinopExprModel>();


	_1a8cad9a1_UnsafeBinopExprModel(jule::Ptr<_1b39693cc_BinopExprModel> __param_node): _field_node(__param_node) {}

	

	_1a8cad9a1_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1a8cad9a1_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1a8cad9a1_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a8cba815_UnsafeIndexingExprModel {
	jule::Ptr<_1b396b9ea_IndexingExprModel> _field_node = jule::Ptr<_1b396b9ea_IndexingExprModel>();


	_1a8cba815_UnsafeIndexingExprModel(jule::Ptr<_1b396b9ea_IndexingExprModel> __param_node): _field_node(__param_node) {}

	

	_1a8cba815_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1a8cba815_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1a8cba815_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a8cbaa02_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1b396b577_SliceExprModel> _field_elems = jule::Ptr<_1b396b577_SliceExprModel>();


	_1a8cbaa02_PushToSliceExprModel(jule::Any __param_dest, jule::Ptr<_1b396b577_SliceExprModel> __param_elems): _field_dest(__param_dest), _field_elems(__param_elems) {}

	

	_1a8cbaa02_PushToSliceExprModel(void) = default;

	inline bool operator==(_1a8cbaa02_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1a8cbaa02_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a8cbaded_MutSlicingExprModel {
	jule::Ptr<_2110e7238_Token> _field_token = jule::Ptr<_2110e7238_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1a8cbaded_MutSlicingExprModel(jule::Ptr<_2110e7238_Token> __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1a8cbaded_MutSlicingExprModel(void) = default;

	inline bool operator==(_1a8cbaded_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1a8cbaded_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a8cbb2e9_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();


	_1a8cbb2e9_StrInsertBeginExprModel(jule::Any __param_dest, jule::Any __param_expr): _field_dest(__param_dest), _field_expr(__param_expr) {}

	

	_1a8cbb2e9_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1a8cbb2e9_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a8cbb2e9_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8cbc6a2_ScopeOptimizer> static__1a8cbcb7a_new(jule::Ptr<_1a8438e62_Scope>);
inline void _1a8cbce00_set_current_stmt(_1a8cbc6a2_ScopeOptimizer*, jule::Any);
inline void _1a8cbd175_optimize_data(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a84d3869_Data>);
inline void _1a8cbd3ea_optimize_var(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a8487246_Var>);
inline void _1a8cbd670_optimize_conditional(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a83da5c8_Conditional>);
inline void _1a8cbda7c_build_default_constat_true_case(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a844ca58_Case>, jule::I64&, jule::Ptr<_1a844c63a_Match>&);
inline void _1a8cbdce1_optimize_match(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a844c63a_Match>);
inline void _1a8cbe066_optimize_range_iter(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a83eb5c8_RangeIter>);
inline void _1a8cbe2db_optimize_while_iter(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a83eb3db_WhileIter>);
inline jule::Bool _1a8cbe5e9_substr(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a844c261_Assign>);
inline jule::Bool _1a8cbe907_str_insert(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a844c261_Assign>);
inline jule::Bool _1a8cbec15_str_assign(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a844c261_Assign>);
inline void _1a8cbee8a_optimize_assign(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a844c261_Assign>);
inline void _1a8cc0210_optimize_multi_assign(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a844c44d_MultiAssign>);
inline void _1a8cc0485_optimize_ret(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a844ce32_RetSt>);
inline void _1a8cc070a_optimize_stmt(_1a8cbc6a2_ScopeOptimizer*, jule::Any);
inline void _1a8cc0980_optimize_child(_1a8cbc6a2_ScopeOptimizer*, jule::Ptr<_1a8438e62_Scope>);
inline void _1a8cc0b5b_optimize(_1a8cbc6a2_ScopeOptimizer*);
struct _1a8cbc6a2_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1a8438e62_Scope> _field_scope = jule::Ptr<_1a8438e62_Scope>();


	_1a8cbc6a2_ScopeOptimizer(jule::I64 __param_i, jule::Ptr<_1a8438e62_Scope> __param_scope): _field_i(__param_i), _field_scope(__param_scope) {}

	

	_1a8cbc6a2_ScopeOptimizer(void) = default;

	inline bool operator==(_1a8cbc6a2_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a8cbc6a2_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1a8cc3785_optimize(jule::Any&);
inline jule::Bool _1a8cc3a93_str_cond(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b39693cc_BinopExprModel>);
inline void _1a8cc3d18_binary(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b39693cc_BinopExprModel>);
inline void _1a8cc408d_unary(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b3969784_UnaryExprModel>);
inline void _1a8cc4313_structure_lit(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396a037_StructLitExprModel>);
inline void _1a8cc4588_alloc_structure(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396a367_AllocStructLitExprModel>);
inline void _1a8cc480d_casting(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396a895_CastingExprModel>);
inline void _1a8cc4a83_args(_1a8cc2d5b_ExprOptimizer*, jule::Slice<jule::Any>);
inline void _1a8cc4d08_scope(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1a8438e62_Scope>&);
inline void _1a8cc507d_func_call(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396b1c0_FnCallExprModel>);
inline void _1a8cc5303_slice(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396b577_SliceExprModel>);
inline void _1a8cc5578_array(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396e327_ArrayExprModel>);
inline void _1a8cc57ed_indexing(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396b9ea_IndexingExprModel>);
inline void _1a8cc5a73_anon_func(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396bda2_AnonFnExprModel>);
inline void _1a8cc5ce8_map(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396c6cc_MapExprModel>);
inline void _1a8cc606d_slicing(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396cc1b_SlicingExprModel>);
inline void _1a8cc62e3_trait_sub(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396d25a_TraitSubIdentExprModel>);
inline void _1a8cc6568_structure_sub(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396d9ca_StructSubIdentExprModel>);
inline void _1a8cc67dd_common_sub(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396eb96_CommonSubIdentExprModel>);
inline void _1a8cc6a63_tuple(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b396ee71_TupleExprModel>);
inline void _1a8cc6cd8_new_call(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b3970e61_BuiltinNewCallExprModel>);
inline void _1a8cc705d_out_call(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b397036c_BuiltinOutCallExprModel>);
inline void _1a8cc72d3_outln_call(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b3970757_BuiltinOutlnCallExprModel>);
inline void _1a8cc7558_panic_call(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b397134b_BuiltinPanicCallExprModel>);
inline void _1a8cc77cd_assert_call(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b3971802_BuiltinAssertCallExprModel>);
inline void _1a8cc7a53_error_call(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>);
inline void _1a8cc7cc8_make_call(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1a5b2a568_BuiltinMakeCallExprModel>);
inline void _1a8cc804d_append_call(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1a5b2a7bb_BuiltinAppendCallExprModel>);
inline void _1a8cc82c3_clone_call(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1b3970a76_BuiltinCloneCallExprModel>);
inline void _1a8cc8548_sizeof(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1a5b2ae70_SizeofExprModel>);
inline void _1a8cc87bd_alignof(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1a5b2b5e1_AlignofExprModel>);
inline void _1a8cc8a43_integrated_to_str(_1a8cc2d5b_ExprOptimizer*, jule::Ptr<_1a5b2bab9_IntegratedToStrExprModel>);
inline void _1a8cc8c1e_do(_1a8cc2d5b_ExprOptimizer*);
struct _1a8cc2d5b_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();


	_1a8cc2d5b_ExprOptimizer(jule::Ptr<jule::Any> __param_model): _field_model(__param_model) {}

	

	_1a8cc2d5b_ExprOptimizer(void) = default;

	inline bool operator==(_1a8cc2d5b_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a8cc2d5b_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8cc9b76_Optimizer> static__1a8cca094_new(jule::Ptr<_1a85a8312_IR>&);
inline void _1a8cca319_optimize_global(_1a8cc9b76_Optimizer*, jule::Ptr<_1a8487246_Var>&);
inline void _1a8cca58e_optimize_function(_1a8cc9b76_Optimizer*, jule::Ptr<_1a5b2eeb8_Fn>&);
inline void _1a8cca814_optimize_struct(_1a8cc9b76_Optimizer*, jule::Ptr<_1b396462a_Struct>&);
inline void _1a8ccaa89_optimize_globals(_1a8cc9b76_Optimizer*, jule::Ptr<_1a8466c1a_Package>&);
inline void _1a8ccad0e_optimize_functions(_1a8cc9b76_Optimizer*, jule::Ptr<_1a8466c1a_Package>&);
inline void _1a8ccb084_optimize_structs(_1a8cc9b76_Optimizer*, jule::Ptr<_1a8466c1a_Package>&);
inline void _1a8ccb309_optimize_package(_1a8cc9b76_Optimizer*, jule::Ptr<_1a8466c1a_Package>&);
inline void _1a8ccb4d5_optimize(_1a8cc9b76_Optimizer*);
struct _1a8cc9b76_Optimizer {
	jule::Ptr<_1a85a8312_IR> _field_ir = jule::Ptr<_1a85a8312_IR>();


	_1a8cc9b76_Optimizer(jule::Ptr<_1a85a8312_IR> __param_ir): _field_ir(__param_ir) {}

	

	_1a8cc9b76_Optimizer(void) = default;

	inline bool operator==(_1a8cc9b76_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a8cc9b76_Optimizer _other) { return !this->operator==(_other); }


};
inline jule::U64 _1a8d4b038_unix(_1a8d4ab4d_AbsTime*);
struct _1a8d4ab4d_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();


	_1a8d4ab4d_AbsTime(jule::U64 __param_day, jule::U64 __param_week_day, jule::U64 __param_year_day, jule::U64 __param_month, jule::U64 __param_year, jule::U64 __param_second, jule::U64 __param_minute, jule::U64 __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_1a8d4ab4d_AbsTime(void) = default;

	inline bool operator==(_1a8d4ab4d_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1a8d4ab4d_AbsTime _other) { return !this->operator==(_other); }


};
inline _1a8d4b324_Time static__1a8d4b6ba_unix(jule::U64);
inline _1a8d4b324_Time static__1a8d4b8b8_now(void);
inline jule::U64 _1a8d4bd19_unix(_1a8d4b324_Time*);
inline jule::U64 _1a8d4c07d_day(_1a8d4b324_Time*);
inline jule::U64 _1a8d4c2e2_month(_1a8d4b324_Time*);
inline jule::U64 _1a8d4c556_year(_1a8d4b324_Time*);
inline jule::U64 _1a8d4c7ba_second(_1a8d4b324_Time*);
inline jule::U64 _1a8d4ca2e_minute(_1a8d4b324_Time*);
inline jule::U64 _1a8d4cc93_hour(_1a8d4b324_Time*);
inline _1a8d4ab4d_AbsTime _1a8d4d007_abs(_1a8d4b324_Time*);
struct _1a8d4b324_Time {
	jule::U64 _field_sec = jule::U64();


	_1a8d4b324_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_1a8d4b324_Time(void) = default;

	inline bool operator==(_1a8d4b324_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a8d4b324_Time _other) { return !this->operator==(_other); }


};
inline jule::I64 static__1a8d4d722_nanoseconds(jule::I64);
inline jule::I64 static__1a8d4d9b9_microseconds(jule::I64);
inline jule::I64 static__1a8d4dc61_milliseconds(jule::I64);
inline jule::I64 static__1a8d4e008_seconds(jule::I64);
inline jule::I64 static__1a8d4e2a0_minutes(jule::I64);
inline jule::I64 static__1a8d4e547_hours(jule::I64);
struct _1a8d4d2e3_Duration {
	

	_1a8d4d2e3_Duration(void) = default;

	inline bool operator==(_1a8d4d2e3_Duration _other) { return true; }

	inline bool operator!=(_1a8d4d2e3_Duration _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8bbc7b1_ScopeCoder> static__1a8bc4345_new(jule::Ptr<_1a8d14287_ObjectCoder>&);
inline void _1a8bdeae1_range_index_iter(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a83eb5c8_RangeIter>&);
inline void _1a8be2242_range_hashmap_iter(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a83eb5c8_RangeIter>&);
inline void _1a8beeeec_if_case(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844085e_If>);
inline void _1a8c07796_conditional(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a83da5c8_Conditional>);
inline void _1a8c08456_inf_iter(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a83eb1ee_InfIter>);
inline void _1a8c69385_while_iter(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a83eb3db_WhileIter>);
inline void _1a8c69c37_range_iter(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a83eb5c8_RangeIter>);
inline void _1a8c6e148_cont(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a8429282_ContSt>);
inline void _1a8c76c11_label(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844bb9a_Label>);
inline void _1a8c7a7c5_goto_st(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844bd87_GotoSt>);
inline void _1a8c7ab27_postfix(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844c074_Postfix>);
inline void _1a8c7b5b7_assign(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844c261_Assign>);
inline void _1a8c7db2a_multi_assign(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844c44d_MultiAssign>);
inline jule::Fn<void(void)> _1a8c7e510_match_expr(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844c63a_Match>);
inline void _1a8c7ede5_case(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844c63a_Match>, jule::Ptr<_1a844ca58_Case>);
inline void _1a8c807ca_match_st(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844c63a_Match>);
inline void _1a8c811b0_fall_st(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844cc45_FallSt>);
inline void _1a8c832b1_break_st(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a842946e_BreakSt>);
inline void _1a8c840d6_ret_with_vars(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844ce32_RetSt>);
inline void _1a8c84988_ret_tuple(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844ce32_RetSt>);
inline void _1a8c8533a_ret_with_exprs(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844ce32_RetSt>);
inline void _1a8c85e62_ret_st(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a844ce32_RetSt>);
inline void _1a8bbd097_ret_with_defaults(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a850cbe5_TypeKind>);
inline void _1a8bbd54d_var(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a8487246_Var>);
inline void _1a8bc3c3a_st(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Any);
inline void _1a8cb05da_scope_stmts(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a8438e62_Scope>&);
inline void _1a8c098ec_scope(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a8438e62_Scope>);
inline void _1a8c111c8_func_scope(jule::Ptr<_1a8bbc7b1_ScopeCoder>, jule::Ptr<_1a5b33164_FnIns>);
struct _1a8bbc7b1_ScopeCoder {
	jule::Ptr<_1a8d14287_ObjectCoder> _field_oc = jule::Ptr<_1a8d14287_ObjectCoder>();


	_1a8bbc7b1_ScopeCoder(jule::Ptr<_1a8d14287_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1a8bbc7b1_ScopeCoder(void) = default;

	inline bool operator==(_1a8bbc7b1_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a8bbc7b1_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8b7e4cb_ExprCoder> static__1a8c511a2_new(jule::Ptr<_1a8d14287_ObjectCoder>&);
inline void _1a8c512d4_string(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a83a871c_Const>&);
inline void _1a8cad066_boolean(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a83a871c_Const>&);
inline void _1a8cad198_nil_lit(jule::Ptr<_1a8b7e4cb_ExprCoder>);
inline jule::Bool _1a8cad2ca_ftoa_special_cases(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::F64&);
inline void _1a8c5158c_float32(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a83a871c_Const>&);
inline void _1a8c516be_float64(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a83a871c_Const>&);
inline void _1a8c51801_constant(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a83a871c_Const>, jule::Bool);
inline void _1a8ccb6c2_div_by_zero_binary(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_2110e7238_Token>&, jule::Ptr<_1b3968e15_OperandExprModel>&, jule::Ptr<_1b3968e15_OperandExprModel>&);
inline void _1a8ccb804_unsafe_binary(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b39693cc_BinopExprModel>);
inline void _1a8ccb936_binary(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b39693cc_BinopExprModel>);
inline void _1a8ccba68_var(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a8487246_Var>);
inline void _1a8ccbb9a_structure(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396462a_Struct>);
inline void _1a8ccbccc_structure_ins(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b39672a9_StructIns>);
inline void _1a8ccbe0e_unary(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b3969784_UnaryExprModel>);
inline void _1a8ccc041_cpp_structure_lit(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396a037_StructLitExprModel>);
inline void _1a8ccc173_structure_lit(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396a037_StructLitExprModel>);
inline void _1a8ccc2a5_alloc_structure(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396a367_AllocStructLitExprModel>);
inline void _1a8ccc3d7_casting(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396a895_CastingExprModel>);
inline void _1a8ccc519_args(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Slice<jule::Any>);
inline void _1a8ccc64b_model_for_call(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Any);
inline void _1a8ccc77d_push_call_inf(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396b1c0_FnCallExprModel>&);
inline jule::Bool _1a8ccc8b0_is_wrapped(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396b1c0_FnCallExprModel>&);
inline void _1a8ccc9e2_pure_func_call(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396b1c0_FnCallExprModel>&);
inline void _1a8cccb24_func_call(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396b1c0_FnCallExprModel>);
inline void _1a8cccc56_slice(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396b577_SliceExprModel>);
inline void _1a8cccd88_indexing(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396b9ea_IndexingExprModel>);
inline void _1a8ccceba_unsafe_indexing(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a8cba815_UnsafeIndexingExprModel>);
inline void _1a8ccd0ec_anon_func(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396bda2_AnonFnExprModel>);
inline void _1a8ccd22e_map(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396c6cc_MapExprModel>);
inline void _1a8ccd361_slicing(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396cc1b_SlicingExprModel>);
inline void _1a8ccd493_trait_sub(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396d25a_TraitSubIdentExprModel>);
inline void _1a8ccd5c5_structure_sub(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396d9ca_StructSubIdentExprModel>);
inline void _1a8ccd707_common_ident(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396e613_CommonIdentExprModel>);
inline void _1a8ccd839_common_sub(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396eb96_CommonSubIdentExprModel>);
inline void _1a8ccd96b_array(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396e327_ArrayExprModel>);
inline void _1a8ccda9d_func_ins_common(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a5b33164_FnIns>);
inline void _1a8ccdbd0_func_ins(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a5b33164_FnIns>);
inline void _1a8ccdd12_tuple(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396ee71_TupleExprModel>);
inline void _1a8ccde44_new_call(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b3970e61_BuiltinNewCallExprModel>);
inline void _1a8cce076_out_call(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b397036c_BuiltinOutCallExprModel>);
inline void _1a8cce1a8_outln_call(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b3970757_BuiltinOutlnCallExprModel>);
inline void _1a8cce2da_panic_call(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b397134b_BuiltinPanicCallExprModel>);
inline void _1a8cce41c_assert_call(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b3971802_BuiltinAssertCallExprModel>);
inline void _1a8cce54e_error_call(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>);
inline void _1a8cce681_make_call(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a5b2a568_BuiltinMakeCallExprModel>);
inline void _1a8cce7b3_push_to_slice(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a8cbaa02_PushToSliceExprModel>);
inline void _1a8cce8e5_append_call(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a5b2a7bb_BuiltinAppendCallExprModel>);
inline void _1a8ccea27_clone_call(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b3970a76_BuiltinCloneCallExprModel>);
inline void _1a8cceb59_sizeof(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a5b2ae70_SizeofExprModel>);
inline void _1a8ccec8b_alignof(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a5b2b5e1_AlignofExprModel>);
inline jule::Str _1a8ccedbd_rune_lit(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a5b2b7cd_RuneExprModel>);
inline void _1a8cd0000_structure_static(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1b396de81_StructStaticIdentExprModel>);
inline void _1a8cd0176_integrated_to_str(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a5b2bab9_IntegratedToStrExprModel>);
inline void _1a8cd03c9_backend_emit(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a5b2be60_BackendEmitExprModel>);
inline void _1a8cd064e_free(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a5b2c24b_FreeExprModel>);
inline void _1a8cd08c4_mut_slicing(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a8cbaded_MutSlicingExprModel>);
inline void _1a8cd0b49_str_insert_begin(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a8cbb2e9_StrInsertBeginExprModel>);
inline void _1a8cd0dbe_model(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Any);
inline void _1a8cd1144_expr(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Any);
inline void _1a8cd13b9_val(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a84d48e2_Value>);
inline void _1a8cd163e_init_expr(jule::Ptr<_1a8b7e4cb_ExprCoder>, jule::Ptr<_1a850cbe5_TypeKind>);
struct _1a8b7e4cb_ExprCoder {
	jule::Ptr<_1a8d14287_ObjectCoder> _field_oc = jule::Ptr<_1a8d14287_ObjectCoder>();


	_1a8b7e4cb_ExprCoder(jule::Ptr<_1a8d14287_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1a8b7e4cb_ExprCoder(void) = default;

	inline bool operator==(_1a8b7e4cb_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a8b7e4cb_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a8cd3bc4_clone_func_decl(jule::Ptr<_1b396462a_Struct>&);
inline jule::Str static__1a8cd3e6b_clone_func_def(jule::Ptr<_1b396462a_Struct>&);
struct _1a8cd3894_DeriveCoder {
	

	_1a8cd3894_DeriveCoder(void) = default;

	inline bool operator==(_1a8cd3894_DeriveCoder _other) { return true; }

	inline bool operator!=(_1a8cd3894_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8cd4e4a_TestCoder> static__1a8cd53bd_new(jule::Ptr<_1a8d14287_ObjectCoder>&);
inline jule::Ptr<_1a8464058_ImportInfo> _1a8cd5632_find_testing_package(jule::Ptr<_1a8cd4e4a_TestCoder>);
inline void _1a8cd58a7_append_test(jule::Ptr<_1a8cd4e4a_TestCoder>, jule::Ptr<_1a5b33164_FnIns>);
inline void _1a8cd5b2c_append_package_tests(jule::Ptr<_1a8cd4e4a_TestCoder>, jule::Ptr<_1a8466c1a_Package>&);
inline jule::Bool _1a8cd5d91_ready_testing_package(jule::Ptr<_1a8cd4e4a_TestCoder>);
inline void _1a8cd606c_call_tm_reset(jule::Ptr<_1a8cd4e4a_TestCoder>);
inline void _1a8cd6248_call_tm_failed(jule::Ptr<_1a8cd4e4a_TestCoder>);
inline void _1a8cd6424_call_tm_skipped(jule::Ptr<_1a8cd4e4a_TestCoder>);
inline void _1a8cd6600_serialize(jule::Ptr<_1a8cd4e4a_TestCoder>);
struct _1a8cd4e4a_TestCoder {
	jule::Ptr<_1b39672a9_StructIns> _field_t = jule::Ptr<_1b39672a9_StructIns>();
	jule::Ptr<_1a5b2eeb8_Fn> _field_tm_reset = jule::Ptr<_1a5b2eeb8_Fn>();
	jule::Ptr<_1a5b2eeb8_Fn> _field_tm_failed = jule::Ptr<_1a5b2eeb8_Fn>();
	jule::Ptr<_1a5b2eeb8_Fn> _field_tm_skipped = jule::Ptr<_1a5b2eeb8_Fn>();
	jule::Ptr<_1a8d14287_ObjectCoder> _field_oc = jule::Ptr<_1a8d14287_ObjectCoder>();


	_1a8cd4e4a_TestCoder(jule::Ptr<_1b39672a9_StructIns> __param_t, jule::Ptr<_1a5b2eeb8_Fn> __param_tm_reset, jule::Ptr<_1a5b2eeb8_Fn> __param_tm_failed, jule::Ptr<_1a5b2eeb8_Fn> __param_tm_skipped, jule::Ptr<_1a8d14287_ObjectCoder> __param_oc): _field_t(__param_t), _field_tm_reset(__param_tm_reset), _field_tm_failed(__param_tm_failed), _field_tm_skipped(__param_tm_skipped), _field_oc(__param_oc) {}

	

	_1a8cd4e4a_TestCoder(void) = default;

	inline bool operator==(_1a8cd4e4a_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a8cd4e4a_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a8cd7a74_to_ident(jule::Str);
inline jule::Str static__1a8cd7d1b_addr(jule::U64);
inline jule::Str static__1a8cd815c_to_out(jule::Str, jule::U64);
inline jule::Str static__1a8cd8547_to_local(jule::I64, jule::I64, jule::Str);
inline jule::Str static__1a8cd87de_func(jule::Ptr<_1a5b2eeb8_Fn>&);
inline jule::Str static__1a8cd8a86_func_ins(jule::Ptr<_1a5b33164_FnIns>&);
inline jule::Str static__1a8cd8d2d_trait_decl(jule::Ptr<_1a5e34531_Trait>);
inline jule::Str static__1a8cd90c5_param(jule::Ptr<_1a5b2d67b_Param>&);
inline jule::Str static__1a8cd936c_structure(jule::Ptr<_1b396462a_Struct>&);
inline jule::Str static__1a8cd9614_structure_ins(jule::Ptr<_1b39672a9_StructIns>&);
inline jule::Str static__1a8cd98ab_field(jule::Ptr<_1b38b3d0a_Field>&);
inline jule::Str static__1a8cd9b53_var(jule::Ptr<_1a8487246_Var>);
inline jule::Str static__1a8cd9dea_iter_begin(jule::U64);
inline jule::Str static__1a8cda192_iter_end(jule::U64);
inline jule::Str static__1a8cda439_iter_next(jule::U64);
inline jule::Str static__1a8cda6d1_label(jule::Str);
inline jule::Str static__1a8cda978_match_end(jule::U64);
inline jule::Str static__1a8cdac20_case_begin(jule::U64);
struct _1a8cd7612_IdentCoder {
	

	_1a8cd7612_IdentCoder(void) = default;

	inline bool operator==(_1a8cd7612_IdentCoder _other) { return true; }

	inline bool operator!=(_1a8cd7612_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1a8d255a6_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();


	_1a8d255a6_SerializationInfo(jule::Str __param_compiler, jule::Str __param_compiler_command): _field_compiler(__param_compiler), _field_compiler_command(__param_compiler_command) {}

	

	_1a8d255a6_SerializationInfo(void) = default;

	inline bool operator==(_1a8d255a6_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1a8d255a6_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a8d1409a_TraitHash {
	jule::Ptr<_1a5e34531_Trait> _field_t = jule::Ptr<_1a5e34531_Trait>();
	jule::Ptr<_1b39672a9_StructIns> _field_s = jule::Ptr<_1b39672a9_StructIns>();
	jule::I64 _field_i = jule::I64();


	_1a8d1409a_TraitHash(jule::Ptr<_1a5e34531_Trait> __param_t, jule::Ptr<_1b39672a9_StructIns> __param_s, jule::I64 __param_i): _field_t(__param_t), _field_s(__param_s), _field_i(__param_i) {}

	

	_1a8d1409a_TraitHash(void) = default;

	inline bool operator==(_1a8d1409a_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a8d1409a_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1a8d56b59_to_str(_1a8d5696c_CustomType*);
inline jule::Bool _1a8d56e56_equals(jule::Ptr<_1a8d5696c_CustomType>, jule::Ptr<_1a850cbe5_TypeKind>);
struct _1a8d5696c_CustomType {
	jule::Str _field_kind = jule::Str();


	_1a8d5696c_CustomType(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_1a8d5696c_CustomType(void) = default;

	inline bool operator==(_1a8d5696c_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a8d5696c_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a8d57693_to_type(jule::Str);
inline jule::Str static__1a8d5793a_prim(jule::Ptr<_1a8512447_Prim>);
inline jule::Str static__1a8d57bd2_tuple(jule::Ptr<_1a8516da8_Tuple>);
inline jule::Str static__1a8d57e79_as_sptr(jule::Str);
inline jule::Str static__1a8d58221_as_ptr(jule::Str);
inline jule::Str static__1a8d584b8_sptr(jule::Ptr<_1a8515956_Sptr>);
inline jule::Str static__1a8d58760_ptr(jule::Ptr<_1a8518eba_Ptr>);
inline jule::Str static__1a8d58a07_enum_decl(jule::Ptr<_1a83065e3_Enum>);
inline jule::Str static__1a8d58c9e_as_slice(jule::Ptr<_1a850cbe5_TypeKind>);
inline jule::Str static__1a8d59046_slice(jule::Ptr<_1a85163b3_Slc>);
inline jule::Str static__1a8d592dd_map(jule::Ptr<_1a8517969_Map>);
inline jule::Str static__1a8d59585_trait_ident(jule::Str);
inline jule::Str static__1a8d5982c_trait_decl(jule::Ptr<_1a5e34531_Trait>);
inline jule::Str static__1a8d59ac4_structure(jule::Ptr<_1b396462a_Struct>);
inline jule::Str static__1a8d59d6b_structure_ins(jule::Ptr<_1b39672a9_StructIns>);
inline jule::Str static__1a8d5a113_array(jule::Ptr<_1a851855d_Arr>);
inline jule::Str static__1a8d5a3aa_param(jule::Ptr<_1a5b2d67b_Param>&);
inline jule::Str static__1a8d5a652_param_ins(jule::Ptr<_1a5b322c8_ParamIns>&);
inline jule::Str static__1a8d5a8e9_func_result(jule::Ptr<_1a5b2eeb8_Fn>&);
inline jule::Str static__1a8d5ab91_func_ins_result(jule::Ptr<_1a5b33164_FnIns>&);
inline jule::Str static__1a8d5ae38_anon_func(jule::Ptr<_1a5b33164_FnIns>);
inline jule::Str static__1a8d5b1d0_func(jule::Ptr<_1a5b33164_FnIns>);
inline jule::Str static__1a8d5b477_kind(jule::Ptr<_1a850cbe5_TypeKind>);
struct _1a8d57176_TypeCoder {
	

	_1a8d57176_TypeCoder(void) = default;

	inline bool operator==(_1a8d57176_TypeCoder _other) { return true; }

	inline bool operator!=(_1a8d57176_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1ab36035d_name(_1a8d8b650_Flag_0*);
inline jule::Str _1ab360490_what(_1a8d8b650_Flag_0*);
inline void _1ab3605c2_reset(_1a8d8b650_Flag_0*);
inline jule::I32 _1ab360704_short(_1a8d8b650_Flag_0*);
struct _1a8d8b650_Flag_0 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();


	_1a8d8b650_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::I64 __param__default, jule::Str __param__what, jule::Ptr<jule::I64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a8d8b650_Flag_0(void) = default;

	inline bool operator==(_1a8d8b650_Flag_0 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a8d8b650_Flag_0 _other) { return !this->operator==(_other); }


};inline jule::Str _1ab3630ca_name(_1a8d8b650_Flag_1*);
inline jule::Str _1ab3632ea_what(_1a8d8b650_Flag_1*);
inline void _1ab3608ad_reset(_1a8d8b650_Flag_1*);
inline jule::I32 _1ab362d33_short(_1a8d8b650_Flag_1*);
struct _1a8d8b650_Flag_1 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();


	_1a8d8b650_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::U64 __param__default, jule::Str __param__what, jule::Ptr<jule::U64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a8d8b650_Flag_1(void) = default;

	inline bool operator==(_1a8d8b650_Flag_1 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a8d8b650_Flag_1 _other) { return !this->operator==(_other); }


};inline jule::Str _1ab3661ee_name(_1a8d8b650_Flag_2*);
inline jule::Str _1ab36641e_what(_1a8d8b650_Flag_2*);
inline void _1ab365e57_reset(_1a8d8b650_Flag_2*);
inline jule::I32 _1ab366b8e_short(_1a8d8b650_Flag_2*);
struct _1a8d8b650_Flag_2 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();


	_1a8d8b650_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ptr<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a8d8b650_Flag_2(void) = default;

	inline bool operator==(_1a8d8b650_Flag_2 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a8d8b650_Flag_2 _other) { return !this->operator==(_other); }


};inline jule::Str _1ab369367_name(_1a8d8b650_Flag_3*);
inline jule::Str _1ab369587_what(_1a8d8b650_Flag_3*);
inline void _1ab3690c0_reset(_1a8d8b650_Flag_3*);
inline jule::I32 _1ab369d07_short(_1a8d8b650_Flag_3*);
struct _1a8d8b650_Flag_3 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();


	_1a8d8b650_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ptr<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a8d8b650_Flag_3(void) = default;

	inline bool operator==(_1a8d8b650_Flag_3 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a8d8b650_Flag_3 _other) { return !this->operator==(_other); }


};inline jule::Str _1ab36c48b_name(_1a8d8b650_Flag_4*);
inline jule::Str _1ab36c6ab_what(_1a8d8b650_Flag_4*);
inline void _1ab36c1e4_reset(_1a8d8b650_Flag_4*);
inline jule::I32 _1ab36ce2b_short(_1a8d8b650_Flag_4*);
struct _1a8d8b650_Flag_4 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();


	_1a8d8b650_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ptr<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a8d8b650_Flag_4(void) = default;

	inline bool operator==(_1a8d8b650_Flag_4 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a8d8b650_Flag_4 _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8d8c73e_FlagSet> static__1a8d8ca2a_new(void);
inline jule::Trait<_1a8d8b331_CommonFlag> _1a8d8cee2_find_flag(_1a8d8c73e_FlagSet*, jule::Str);
inline jule::Trait<_1a8d8b331_CommonFlag> _1a8d8d300_find_flag_short(_1a8d8c73e_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1a8d8b331_CommonFlag>> _1a8d8d564_flags(_1a8d8c73e_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a8d8d872_parse(_1a8d8c73e_FlagSet*, jule::Slice<jule::Str>);
inline void _1a8d8da4d_reset(_1a8d8c73e_FlagSet*);
inline jule::Ptr<_1a8d8b650_Flag_4> _1a8d8de9e_add_flag_common_0(_1a8d8c73e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1a8d8b650_Flag_3> _1a8d8de9e_add_flag_common_1(_1a8d8c73e_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1a8d8e90b_add_var_0(_1a8d8c73e_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1a8d8e90b_add_var_1(_1a8d8c73e_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1a8d8c73e_FlagSet {
	jule::Slice<jule::Trait<_1a8d8b331_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1a8d8b331_CommonFlag>>();


	_1a8d8c73e_FlagSet(jule::Slice<jule::Trait<_1a8d8b331_CommonFlag>> __param__flags): _field__flags(__param__flags) {}

	

	_1a8d8c73e_FlagSet(void) = default;

	inline bool operator==(_1a8d8c73e_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1a8d8c73e_FlagSet _other) { return !this->operator==(_other); }


};
inline jule::Str _1b3967661_to_str(_1b39672a9_StructIns*);
inline jule::Bool _1b396796e_equals(jule::Ptr<_1b39672a9_StructIns>, jule::Ptr<_1a850cbe5_TypeKind>);
inline jule::Bool _1b3967d8c_same(_1b39672a9_StructIns*, jule::Ptr<_1b39672a9_StructIns>);
inline jule::Ptr<_1a5b2eeb8_Fn> _1b3968244_find_method(_1b39672a9_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1b396694b_FieldIns> _1b3968552_find_field(_1b39672a9_StructIns*, jule::Str);
struct _1b39672a9_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1b396462a_Struct> _field_decl = jule::Ptr<_1b396462a_Struct>();
	jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>();
	jule::Slice<jule::Ptr<_1b396694b_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1b396694b_FieldIns>>();
	jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1a5b36222_ReferenceStack> _field_references = jule::Ptr<_1a5b36222_ReferenceStack>();
	_1b3963816_Operators _field_operators = _1b3963816_Operators();


	_1b39672a9_StructIns(jule::Bool __param_checked, jule::Ptr<_1b396462a_Struct> __param_decl, jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1b396694b_FieldIns>> __param_fields, jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ptr<_1a5b36222_ReferenceStack> __param_references, _1b3963816_Operators __param_operators): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references), _field_operators(__param_operators) {}

	

	_1b39672a9_StructIns(void) = default;

	inline bool operator==(_1b39672a9_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_references == _other._field_references &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1b39672a9_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8d14287_ObjectCoder> static__1a8d22ecc_new(jule::Ptr<_1a85a8312_IR>&, _1a8d255a6_SerializationInfo);
inline void _1a8d23e56_write(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Str);
inline void _1a8d24671_add_indent(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d24d8b_done_indent(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d35385_indent(jule::Ptr<_1a8d14287_ObjectCoder>);
inline jule::I64 _1a8d26376_find_type_offset(_1a8d14287_ObjectCoder*, jule::Ptr<_1a5e34531_Trait>, jule::Ptr<_1a850cbe5_TypeKind>);
inline void _1a8d20b45_loc_info(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_2110e7238_Token>&);
inline void _1a8d16047_head(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d236e7_links(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d1540e_prepare_structures(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d36b5b_iter_packages(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Fn<void(jule::Ptr<_1a8466c1a_Package>&)>);
inline void _1a8d510a4_build_trait_map(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d511d6_trait_decls(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d51318_structure_plain_decl(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b396462a_Struct>&);
inline void _1a8d5144a_structure_plain_decls(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d5157c_field_decl(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b396694b_FieldIns>&);
inline void _1a8d516ae_structure_constructor(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b39672a9_StructIns>&);
inline void _1a8d517e1_structure_destructor(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b39672a9_StructIns>&);
inline void _1a8d51923_structure_derive_defs_decls(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b39672a9_StructIns>&);
inline void _1a8d51a55_structure_operator_eq(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Str&, jule::Ptr<_1b39672a9_StructIns>&);
inline void _1a8d51b87_structure_operator_not_eq(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Str&, jule::Ptr<_1b39672a9_StructIns>&);
inline void _1a8d51cb9_structure_operator(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Str&, jule::Ptr<_1a5b33164_FnIns>&, jule::Str);
inline void _1a8d51deb_structure_operators(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b39672a9_StructIns>&);
inline void _1a8d5202d_structure_ins_decl(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b39672a9_StructIns>&);
inline void _1a8d52160_structure_decl(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b396462a_Struct>&);
inline void _1a8d52292_structure_decls(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d523c4_params_decls(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>&);
inline void _1a8d52506_func_head(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1a5b33164_FnIns>&, jule::Bool);
inline void _1a8d52638_func_decl(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1a5b2eeb8_Fn>&, jule::Bool);
inline void _1a8d5276a_func_decls(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d5289c_trait_data_types(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d529ce_param_ins(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1a5b322c8_ParamIns>&);
inline void _1a8d52b11_params_ins(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>&);
inline void _1a8d52c43_var_init_expr(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1a8487246_Var>&, jule::Fn<void(void)>);
inline void _1a8d52d75_var(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1a8487246_Var>);
inline void _1a8d52ea7_func(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1a5b2eeb8_Fn>&);
inline void _1a8d530d9_trait_wrappers(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d5321b_trait_datas(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d5334d_globals(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d53491_decls(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d53716_structure_methods(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b39672a9_StructIns>&);
inline void _1a8d5398b_structure_derive_defs(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b39672a9_StructIns>&);
inline void _1a8d53c11_structure_ostream(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b39672a9_StructIns>&);
inline void _1a8d53e86_structure_ins(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b39672a9_StructIns>&);
inline void _1a8d5420b_structure(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1b396462a_Struct>&);
inline void _1a8d543d7_structures(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d545b3_funcs(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d54838_push_init(jule::Ptr<_1a8d14287_ObjectCoder>, jule::Ptr<_1a8466c1a_Package>&);
inline void _1a8d54a14_init_caller(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d54be0_end(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d54dbb_serialize_head(jule::Ptr<_1a8d14287_ObjectCoder>);
inline void _1a8d55097_serialize(jule::Ptr<_1a8d14287_ObjectCoder>);
struct _1a8d14287_ObjectCoder {
	jule::Str _field_obj = jule::Str();
	jule::Ptr<_1a85a8312_IR> _field_ir = jule::Ptr<_1a85a8312_IR>();
	_1a8d255a6_SerializationInfo _field_info = _1a8d255a6_SerializationInfo();
	jule::Slice<jule::Ptr<_1a8d1409a_TraitHash>> _field_tmap = jule::Slice<jule::Ptr<_1a8d1409a_TraitHash>>();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Ptr<_1a8b7e4cb_ExprCoder> _field_ec = jule::Ptr<_1a8b7e4cb_ExprCoder>();
	jule::Ptr<_1a8bbc7b1_ScopeCoder> _field_sc = jule::Ptr<_1a8bbc7b1_ScopeCoder>();


	_1a8d14287_ObjectCoder(jule::Str __param_obj, jule::Ptr<_1a85a8312_IR> __param_ir, _1a8d255a6_SerializationInfo __param_info, jule::Slice<jule::Ptr<_1a8d1409a_TraitHash>> __param_tmap, jule::Str __param_indent_buffer, jule::Ptr<_1a8b7e4cb_ExprCoder> __param_ec, jule::Ptr<_1a8bbc7b1_ScopeCoder> __param_sc): _field_obj(__param_obj), _field_ir(__param_ir), _field_info(__param_info), _field_tmap(__param_tmap), _field_indent_buffer(__param_indent_buffer), _field_ec(__param_ec), _field_sc(__param_sc) {}

	

	_1a8d14287_ObjectCoder(void) = default;

	inline bool operator==(_1a8d14287_ObjectCoder _other) {
		return 
			this->_field_obj == _other._field_obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1a8d14287_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1a85a8312_IR>,jule::Slice<_210c3ee2a_Log>> static__1a85a8796_build(jule::Str, jule::I64);
inline void _1a85a8be7_append_structs(_1a85a8312_IR*, jule::Ptr<_1a8466c1a_Package>&, jule::Slice<jule::Ptr<_1b396462a_Struct>>&);
inline jule::Slice<jule::Ptr<_1b396462a_Struct>> _1a85a8e5b_get_all_structures(_1a85a8312_IR*);
inline void _1a85a927a_append_globals(_1a85a8312_IR*, jule::Ptr<_1a8466c1a_Package>&, jule::Slice<jule::Ptr<_1a8487246_Var>>&);
inline jule::Slice<jule::Ptr<_1a8487246_Var>> _1a85a94de_get_all_globals(_1a85a8312_IR*);
inline void _1a85a96ba_order(_1a85a8312_IR*);
struct _1a85a8312_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1a8466c1a_Package> _field_main = jule::Ptr<_1a8466c1a_Package>();
	jule::Slice<jule::Ptr<_1a8464058_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1a8464058_ImportInfo>>();
	_1a85aa875_OrderedDefines _field_ordered = _1a85aa875_OrderedDefines();


	_1a85a8312_IR(jule::Str __param_root, jule::Slice<jule::Str> __param_passes, jule::Ptr<_1a8466c1a_Package> __param_main, jule::Slice<jule::Ptr<_1a8464058_ImportInfo>> __param_used, _1a85aa875_OrderedDefines __param_ordered): _field_root(__param_root), _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_1a85a8312_IR(void) = default;

	inline bool operator==(_1a85a8312_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1a85a8312_IR _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1a8d9049a_parse_integer_0(_1a8d8ee4a_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1a8d9049a_parse_integer_1(_1a8d8ee4a_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1a8d9070e_get_data(_1a8d8ee4a_ArgParser*);
inline jule::VoidExceptional _1a8d90984_process_flag(_1a8d8ee4a_ArgParser*, jule::Trait<_1a8d8b331_CommonFlag>&);
inline jule::VoidExceptional _1a8d90c09_single_dash(_1a8d8ee4a_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1a8d90e7e_double_dash(_1a8d8ee4a_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1a8d9115a_try_arg(_1a8d8ee4a_ArgParser*);
inline jule::VoidExceptional _1a8d91336_parse(_1a8d8ee4a_ArgParser*);
struct _1a8d8ee4a_ArgParser {
	_1a8d8c73e_FlagSet _field_set = _1a8d8c73e_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();


	_1a8d8ee4a_ArgParser(_1a8d8c73e_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_content, jule::I64 __param_i): _field_set(__param_set), _field_args(__param_args), _field_content(__param_content), _field_i(__param_i) {}

	

	_1a8d8ee4a_ArgParser(void) = default;

	inline bool operator==(_1a8d8ee4a_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a8d8ee4a_ArgParser _other) { return !this->operator==(_other); }


};
inline void _20dc78086_push_opt_level(jule::I64);
inline jule::I32 _20eab1781_decode_rune(jule::I32, jule::I32);
inline std::tuple<jule::I32,jule::I32> _20eab1a28_encode_rune(jule::I32);
inline jule::Slice<jule::I32> _20eab20ab_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _20eab23ec_append_rune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _20ea9b54b_utf16_from_str(jule::Str);
inline jule::Str _20eaa7458_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _20eaa1243_u16_ptr_to_str(jule::U16*);
inline jule::I64 _20de45154_get_last_errno(void);
inline jule::U64 _20eab2ed0_get_std_handle(jule::U64);
inline jule::I64 _20eab35a7_wstat(jule::U16*, struct stat*);
inline jule::I64 _20eab3992__wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _20eab3b90_get_last_error(void);
inline jule::U32 _20eab3ed1_get_current_directory(jule::U32, jule::U16*);
inline jule::Bool _20eab4520_delete_file(jule::U16*);
inline jule::Bool _20eab47b7_create_directory(jule::U16*);
inline jule::Bool _20eab4a5e_remove_directory(jule::U16*);
inline _WDIR* _20eab4d06__wopendir(jule::U16*);
inline struct _wdirent* _20eab509d__wreaddir(_WDIR*);
inline jule::I64 _20eab5345__wclosedir(_WDIR*);
inline jule::U32 _20eab5a1b_get_full_path_name(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _20eab5d5c_get_console_mode(jule::U64, jule::I64&);
inline jule::Bool _20eab619d_set_console_mode(jule::U64, jule::I64);
inline jule::Bool _20eab66cb_write_console(jule::U64, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::Bool _20eab6c09_read_console(jule::U64, jule::U16*, jule::I64, jule::I64&, void*);
inline jule::I64 _20eab903b_seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _20eab9426_read(jule::I64, void*, jule::U64);
inline jule::I64 _20eab9756_close(jule::I64);
inline jule::I64 _20eab9b41_write(jule::I64, void*, jule::U64);
inline void _20eab9d50_exit(jule::I64);
inline std::tuple<jule::I32,jule::I64> _20eb97acb_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _20eb9815e_decode_last_rune(jule::Slice<jule::U8>);
inline jule::I64 _20eb9869d_rune_len(jule::I32);
inline jule::I64 _20eb98a77_encode_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _20eb98db8_append_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _20eb99209_append_rune_non_ascii(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _20eb99748_rune_count_str(jule::Str);
inline jule::Bool _20eb999e0_rune_start(jule::U8);
inline jule::I64 _20ec4ea40_get_last_os_error_windows(void);
inline jule::Slice<jule::Str> _20ec508ba_args(void);
inline jule::Exceptional<jule::Str> _20ec50d0a_working_dir(void);
inline jule::Exceptional<jule::Str> _20ec51745___getwd(void);
inline jule::Slice<jule::U8> _20ecd33ed_stobs(jule::Str&);
inline jule::Bool _210b95721_is_letter(jule::I32);
inline jule::Bool _210bceeb9_is16(jule::Slice<_210bcd380_Range16>, jule::U16);
inline jule::Bool _210bd030a_is32(jule::Slice<_210bcd847_Range32>, jule::U32);
inline jule::Bool _210bd0a25_is_excluding_latin(jule::Ptr<_210bcdcba_RangeTable>, jule::I32);
inline jule::Str _20ecdd3a3_repeat(jule::Str, jule::I64);
inline jule::Bool _210b6ec4a__has_prefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _210b8d120_has_prefix(jule::Str, jule::Str);
inline jule::Bool _210b89814__has_suffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _210b702bc_has_suffix(jule::Str, jule::Str);
inline jule::I64 _210b707ea_find_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20ece2cae_find_last_at(jule::Str, jule::Str, jule::I64);
inline jule::I64 _20ece2de1_find_last(jule::Str, jule::Str);
inline jule::I64 _210913291__find_rune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _210913736_find_last_byte(jule::Str, jule::U8);
inline jule::I64 _210913c0e_find_any(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _210913e73_split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _2109140a5_contains(jule::Str, jule::Str);
inline jule::Bool _210b7108c_contains_any(jule::Str, jule::Str);
inline jule::Str _210bd1196_replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _210913505__trim_left(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _210bd1ae2_trim_left(jule::Str, jule::Str);
inline void _210bd1c24__trim_right(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _210bd1e88_trim(jule::Str, jule::Str);
inline jule::Bool _20ec2a532_is_path_sep(jule::U8);
inline jule::Bool _20ec28684_is_slash(jule::U8);
inline jule::U8 _20ec287b6_to_upper(jule::U8);
inline jule::I64 _20ec28464_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _20ec26242_cut_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _20ec264d9_full_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _20ec26819___abs(jule::Str);
inline jule::Str _20ec26ab1___join(jule::Slice<jule::Str>);
inline jule::Str _20ec983c4_clean(jule::Str);
inline jule::Str _20eca68ee_from_slash(jule::Str);
inline jule::Str _20ecb5a51_join(jule::Slice<jule::Str>);
inline jule::Str _20ecb6623_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _20ecb81a2_abs(jule::Str);
inline jule::Str _20eca119b_base(jule::Str);
inline jule::Str _20ec93c93_dir(jule::Str);
inline jule::Str _20eca9429_volume_name(jule::Str);
inline jule::I64 _20dd16245_get_last_fs_error(void);
inline jule::Bool _20eb9a55c_is_console_handle(jule::U64);
inline jule::I64 _210c80146_get_last_process_error(void);
inline jule::Slice<wchar_t*> _210c8ed6a_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _210c90145_str_slice_to_ustr_slice(jule::Slice<jule::Str>);
inline jule::I64 _210c90475_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _210c90860_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _210c91564_exit(jule::I64);
inline jule::Str _210c91762_executable(void);
inline jule::Bool _210c33704_is_std_header_path(jule::Str);
inline jule::Bool _210c33836_is_valid_header_ext(jule::Str);
inline jule::Bool _210c33abc_is_valid_cpp_ext(jule::Str);
inline jule::Str _210c4036a_logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _210c40656_arg_to_str(jule::Any);
inline jule::I64 _210c408ed_find_next_fmt(jule::Str);
inline jule::Str _210c40c83_apply_fmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _210c41b96_is_top_directive(jule::Str);
inline jule::Bool _210c43428_is_windows(jule::Str);
inline jule::Bool _210c43714_is_darwin(jule::Str);
inline jule::Bool _210c439ab_is_linux(jule::Str);
inline jule::Bool _210c43c97_is_i386(jule::Str);
inline jule::Bool _210c4403e_is_amd64(jule::Str);
inline jule::Bool _210c442d6_is_arm64(jule::Str);
inline jule::Bool _210c4457d_is_unix(jule::Str);
inline jule::Bool _210c448ad_is_32bit(jule::Str);
inline jule::Bool _210c44b55_is_64bit(jule::Str);
inline void _210c7db7d_init(void);
inline jule::Bool _2110e7975_is_unary_op(jule::Str);
inline jule::Bool _2110e7c61_is_bin_op(jule::Str);
inline jule::Bool _2110e82e4_is_str(jule::Str);
inline jule::Bool _2110e858b_is_raw_str(jule::Str);
inline jule::Bool _2110e8833_is_rune(jule::Str);
inline jule::Bool _2110e8e0a_is_bool(jule::Str);
inline jule::Bool _2110e91a2_is_float(jule::Str);
inline jule::Bool _2110e9449_is_num(jule::Str);
inline jule::Bool _2110e9988_is_ignore_ident(jule::Str);
inline jule::Bool _2110e9c30_is_anon_ident(jule::Str);
inline jule::Bool _2110ea26e_is_space(jule::I32);
inline jule::Bool _2110ea637_is_letter(jule::I32);
inline jule::Bool _2110eab76_is_decimal(jule::U8);
inline jule::Bool _2110eae1d_is_binary(jule::U8);
inline jule::Bool _2110eb1b5_is_octal(jule::U8);
inline jule::Bool _2110eb45c_is_hex(jule::U8);
inline jule::Bool _2110eb704_is_assign(jule::U64);
inline jule::Bool _2110eb99b_is_postfix_op(jule::Str);
inline jule::Bool _2110ebc43_is_assign_op(jule::Str);
inline jule::Ptr<_2110ec628_File> _2110edb57_new_file_set(jule::Str);
inline _210c3ee2a_Log _2111001ca_make_err(jule::I64, jule::I64, jule::Ptr<_2110ec628_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _211100560_bytes_has_prefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _2111008a1_float_fmt_e(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _211100c36_float_fmt_p(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _211101077_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _2111013b8_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _211101709_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _211101ad3_float_num(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _211101d7a_common_num(jule::Slice<jule::U8>&);
inline jule::Str _211102122_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _211102463_is_float_fmt_e(jule::U8, jule::I64);
inline jule::Bool _2111027a4_is_float_fmt_p(jule::U8, jule::I64);
inline jule::Bool _211102ae5_is_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _211102e36_is_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _211103277_is_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _211103640_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _2111038d7_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _211103c28_hex_escape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _211104014_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _2111042de_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _211104575_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _21110481c_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_210c3ee2a_Log> _211109316_lex(jule::Ptr<_2110ec628_File>, jule::I64);
inline jule::Bool _210e3929a_find_module_file(jule::Slice<jule::Ptr<_20dd9e201_DirEntry>>&);
inline jule::Str _210e3aa3d_find_module_file_deep(jule::Str);
inline jule::Slice<_210c3ee2a_Log> _210e4d897_check_module_file(jule::Str);
inline jule::Ptr<_21173e7a3_FileInfo> _21173eb7c_parse_file(jule::Ptr<_2110ec628_File>);
inline std::tuple<jule::Ptr<_210eb3d6e_Ast>,jule::Slice<_210c3ee2a_Log>> _211784782_parse_fileset(jule::Ptr<_2110ec628_File>);
inline jule::Ptr<_21110ca9a_ScopeTree> _211785486_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _211785794_is_st(jule::Ptr<_2110e7238_Token>, jule::Ptr<_2110e7238_Token>);
inline jule::Bool _211785b29_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _211785e9d_next_st_pos(jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::I64);
inline std::tuple<jule::Slice<jule::Ptr<_2110e7238_Token>>,jule::Bool> _2117862de_skip_st(jule::I64&, jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Slice<jule::Ptr<_2117865db_Stmt>> _211786982_split_stmts(jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_2117937d5_CallData> _211793b48_get_call_data(jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Slice<jule::Ptr<_2110e7238_Token>> _211793e34_get_block_expr(jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_2110e7238_Token>>,jule::Slice<jule::Ptr<_2110e7238_Token>>> _2117941cb_split_colon(jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::I64 _2117944b7_find_lowest_prec_op(jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_211109cb7_IdentExpr> _21179475e_build_ident_expr(jule::Ptr<_2110e7238_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_2110e7238_Token>>,jule::I64> _211794a06_get_range_expr_tokens(jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Bool _2117a0407_check_assign_tokens(jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline _210c3ee2a_Log _2117a1716_make_err(jule::I64, jule::I64, jule::Ptr<_2110ec628_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_2110e7238_Token>> _2117a1bab_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_2110e7238_Token>>,jule::Slice<jule::Ptr<_2110e7238_Token>>> _2117a1e53_range_last(jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>>,jule::Slice<_210c3ee2a_Log>> _2117a2382_parts(jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::U64, jule::Bool);
inline jule::Str _2117a266d_get_close_kind_of_brace(jule::Str);
inline _210c3ee2a_Log _2117a2a47_compiler_err(jule::Ptr<_2110e7238_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _2117a2d99_push_suggestion(_210c3ee2a_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _2117a31c9_tokstoa(jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b32e9_build_void_type(void);
inline jule::Ptr<_210e7e620_TypeDecl> _2117b356e_build_prim_type(jule::Ptr<_2110e7238_Token>);
inline std::tuple<jule::Slice<jule::Ptr<_2110e7238_Token>>,jule::I64> _2117b38b0_split_map_range(jule::Slice<jule::Ptr<_2110e7238_Token>>&, jule::I64&);
inline jule::I64 _1a82c7e33_leading_zeros64(jule::U64);
inline jule::I64 _1a82c887e_trailing_zeros(jule::U64);
inline jule::I64 _1a82c91ed_trailing_zeros32(jule::U32);
inline jule::I64 _1a82c9495_trailing_zeros64(jule::U64);
inline jule::I64 _1a82ce4bc_len32(jule::U32);
inline jule::I64 _1a82ce764_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1a82d0424_add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1a82d1aa7_mul64(jule::U64, jule::U64);
inline jule::U32 _1a81e5b64_f32_bits(jule::F32);
inline jule::F32 _1a81e5e50_f32_from_bits(jule::U32);
inline jule::U64 _1a81e61e7_f64_bits(jule::F64);
inline jule::F64 _1a81e64d3_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1a81e844c_frexp(jule::F64);
inline jule::F64 _1a829597d_nan(void);
inline jule::Bool _1a826ee52_is_nan(jule::F64);
inline jule::F64 _1a8249657_inf(jule::I64);
inline jule::Bool _1a824a625_is_inf(jule::F64, jule::I64);
inline std::tuple<jule::F64,jule::I64> _1a8261a37_normalize(jule::F64);
inline jule::F64 _1a82d558e_log(jule::F64);
inline jule::F64 _1a82d5b66_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1a82d7470_modf(jule::F64);
inline jule::F64 _1a82d788d_log2(jule::F64);
inline jule::Str _1a6035368_fmt_float(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1a6044e8d_generic_ftoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1a65ec9b8_big_ftoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1a808a6da_FloatInfo&);
inline jule::Slice<jule::U8> _1a65ee778_fmt_digits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1a6719101_DecimalSlice, jule::I64, jule::U8);
inline void _1a662eda2_round_shortest(_1a8304899_Decimal&, jule::U64, jule::I64, _1a808a6da_FloatInfo&);
inline jule::Slice<jule::U8> _1a6699724_fmt_e(jule::Slice<jule::U8>, jule::Bool, _1a6719101_DecimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1a66a838c_fmt_f(jule::Slice<jule::U8>, jule::Bool, _1a6719101_DecimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1a7e7d446_fmt_b(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1a808a6da_FloatInfo&);
inline jule::Slice<jule::U8> _1a8057ae7_fmt_x(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1a808a6da_FloatInfo&);
inline jule::I64 _1a808c18c_min(jule::I64, jule::I64);
inline jule::I64 _1a80d20b1_max(jule::I64, jule::I64);
inline jule::U8 _1a80d2402_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1a81b7949___parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1a81c9032_parse_uint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1a5e68b09_parse_int(jule::Str, jule::I64, jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1a66c5662_eisel_lemire64(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1a5e6908d_eisel_lemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1a7eaa220_common_prefix_len_ignore_case(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1a7eaa5e9_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1a80cdeae_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1a6042562_atof64exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1a66a5e28_atof32exact(jule::U64, jule::I64, jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1a66a605a_atof_hex(jule::Str, _1a808a6da_FloatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1a66a618c_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1a8302bc7_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1a8302d09_parse_float_prefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1a8302e3b_parse_float(jule::Str, jule::I64);
inline void _1a8303337_ryu_ftoa_fixed32(_1a6719101_DecimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1a8303469_ryu_ftoa_fixed64(_1a6719101_DecimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1a830359b_format_decimal(_1a6719101_DecimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1a83036cd_ryu_ftoa_shortest(_1a6719101_DecimalSlice&, jule::U64, jule::I64, _1a808a6da_FloatInfo&);
inline jule::I64 _1a8303810_mul_by_log2_log10(jule::I64);
inline jule::I64 _1a8303942_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1a8303a74_compute_bounds(jule::U64, jule::I64, _1a808a6da_FloatInfo&);
inline void _1a8303cb6_ryu_digits(_1a6719101_DecimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1a8303de8_ryu_digits32(_1a6719101_DecimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1a830402a_mult64bit_pow10(jule::U32, jule::I64, jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1a830415c_mult128bit_pow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1a830428e_divisible_by_pow5(jule::U64, jule::I64);
inline std::tuple<jule::U32,jule::U32> _1a83043c1_divmod1e9(jule::U64);
inline void _1a8305405_trim(_1a8304899_Decimal&);
inline void _1a8305537_right_shift(_1a8304899_Decimal&, jule::U64);
inline jule::Bool _1a8305669_prefix_is_less_than(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1a830579b_left_shift(_1a8304899_Decimal&, jule::U64);
inline jule::Bool _1a83058cd_should_round_up(_1a8304899_Decimal&, jule::I64);
inline jule::Str _1a8305bb9_fmt_uint(jule::U64, jule::I64);
inline jule::Str _1a8305ceb_fmt_int(jule::I64, jule::I64);
inline jule::Str _1a8305e2d_itoa(jule::I64);
inline jule::Str _1a8306060_small(jule::I64);
inline jule::Bool _1a8306192_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1a83062c4_fmt_bits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline void _1a83b18ac_lshift_unsig(_1a83a871c_Const&, _1a83a871c_Const&);
inline void _1a83b1ba9_rshift_unsig(_1a83a871c_Const&, _1a83a871c_Const&);
inline jule::Str _1a84413dc_real_kind_of(jule::Str);
inline jule::I64 _1a8441684_bitsize_of(jule::Str);
inline jule::Str _1a8441970_int_from_bits(jule::I64);
inline jule::Str _1a8441c17_uint_from_bits(jule::I64);
inline jule::Str _1a8441eae_float_from_bits(jule::I64);
inline jule::Bool _1a8442a1a_check_bit_float(jule::Str, jule::I64);
inline jule::I64 _1a8442cb2_bitsize_of_float(jule::F64);
inline jule::I64 _1a8443059_bitsize_of_int(jule::I64);
inline jule::I64 _1a8443301_bitsize_of_uint(jule::U64);
inline void _1a8443466_update_target(void);
inline void _1a84435cb_init(void);
inline jule::F64 _1a84459a7_min(jule::Str);
inline jule::F64 _1a8445c93_max(jule::Str);
inline jule::Bool _1a8446205_is_i8_compatible(jule::Str);
inline jule::Bool _1a84464e1_is_i16_compatible(jule::Str);
inline jule::Bool _1a8446788_is_i32_compatible(jule::Str);
inline jule::Bool _1a8446a74_is_i64_compatible(jule::Str);
inline jule::Bool _1a8446d1b_is_u8_compatible(jule::Str);
inline jule::Bool _1a84470b3_is_u16_compatible(jule::Str);
inline jule::Bool _1a844735a_is_u32_compatible(jule::Str);
inline jule::Bool _1a844768a_is_u64_compatible(jule::Str);
inline jule::Bool _1a8447932_is_f32_compatible(jule::Str);
inline jule::Bool _1a8447bc9_is_f64_compatible(jule::Str);
inline jule::Bool _1a844801a_types_are_compatible(jule::Str, jule::Str);
inline jule::Bool _1a84482b2_is_i16_greater(jule::Str);
inline jule::Bool _1a8448559_is_i32_greater(jule::Str);
inline jule::Bool _1a8448801_is_i64_greater(jule::Str);
inline jule::Bool _1a8448a98_is_u16_greater(jule::Str);
inline jule::Bool _1a8448e61_is_u32_greater(jule::Str);
inline jule::Bool _1a8449208_is_u64_greater(jule::Str);
inline jule::Bool _1a84494a0_is_f32_greater(jule::Str);
inline jule::Bool _1a8449747_is_f64_greater(jule::Str);
inline jule::Bool _1a8449a88_is_greater(jule::Str, jule::Str);
inline jule::Bool _1a844abaa_is_sig_int(jule::Str);
inline jule::Bool _1a844ae96_is_unsig_int(jule::Str);
inline jule::Bool _1a844b23d_is_int(jule::Str);
inline jule::Bool _1a844b529_is_float(jule::Str);
inline jule::Bool _1a844b7c1_is_num(jule::Str);
inline jule::Bool _1a84b6c7b_is_ascii(jule::I32);
inline jule::I32 _1a84b8750_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1a84b8882_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1a84b8b07_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1a84b8d9e_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1a84b91e0_rune_from_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1a84b9531_str_esq_seq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1a857aa76_find_format_prefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1a857aba8_get_format_range(jule::I64&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1a857a37d_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1a857a4b0_apply_fmt_by_default(jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a857b25d_apply_fmt(jule::Slice<jule::U8>&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a857b390_format_bytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a857b4c2_format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a5b34b6b_kind_uses_generics(jule::Ptr<_1a850cbe5_TypeKind>, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>&);
inline jule::Bool _1a5b35045_parameter_uses_generics(jule::Ptr<_1a5b2d67b_Param>&, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>&);
inline jule::Ptr<_1a8511a84_TypeSymbol> _1a5b378d8_build_type(jule::Ptr<_210e7e620_TypeDecl>);
inline jule::Ptr<_1a84d48e2_Value> _1a5b37bc4_build_expr(jule::Ptr<_210e87caa_Expr>);
inline jule::Ptr<_1a850bead_TypeAlias> _1a5b37e6b_build_type_alias(jule::Ptr<_21110e591_TypeAliasDecl>);
inline jule::Ptr<_1b38b3d0a_Field> _1a5b38257_build_field(jule::Ptr<_211110c46_FieldDecl>);
inline jule::Slice<jule::Ptr<_1b38b3d0a_Field>> _1a5b384ee_build_fields(jule::Slice<jule::Ptr<_211110c46_FieldDecl>>&);
inline jule::Ptr<_1b396462a_Struct> _1a5b38796_build_struct(jule::Ptr<_2111115a4_StructDecl>);
inline jule::Ptr<_1a5b2d67b_Param> _1a5b38a3d_build_param(jule::Ptr<_21110cc87_ParamDecl>);
inline jule::Slice<jule::Ptr<_1a5b2d67b_Param>> _1a5b38d6d_build_params(jule::Slice<jule::Ptr<_21110cc87_ParamDecl>>&);
inline jule::Ptr<_1a5b2cea5_RetType> _1a5b39115_build_ret_type(jule::Ptr<_210e87abd_RetTypeDecl>);
inline jule::Ptr<_1a5b2eeb8_Fn> _1a5b393ac_build_fn(jule::Ptr<_21110ce74_FnDecl>);
inline jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> _1a5b39654_build_methods(jule::Slice<jule::Ptr<_21110ce74_FnDecl>>&);
inline jule::Ptr<_1a5e34531_Trait> _1a5b398eb_build_trait(jule::Ptr<_211111bae_TraitDecl>);
inline jule::Ptr<_1a8306406_EnumItem> _1a5b39b93_build_enum_item(jule::Ptr<_21110ed44_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1a8306406_EnumItem>> _1a5b39e3a_build_enum_items(jule::Slice<jule::Ptr<_21110ed44_EnumItemDecl>>&);
inline jule::Ptr<_1a83065e3_Enum> _1a5b3a1d2_build_enum(jule::Ptr<_211110262_EnumDecl>);
inline jule::Ptr<_1a8487246_Var> _1a5b3a59a_build_var(jule::Ptr<_21110d161_VarDecl>);
inline jule::Slice<jule::Ptr<_1a8487246_Var>> _1a5b3a842_build_vars(jule::Slice<jule::Ptr<_21110d161_VarDecl>>);
inline jule::Ptr<_1a8306d30_Impl> _1a5b3aad9_build_impl(jule::Ptr<_2111122b9_Impl>);
inline jule::Ptr<_1a844d4e8_ScopeChecker> _1a83c25d2_new_scope_checker_base(jule::Ptr<_1a846bc42_Sema>&, jule::Ptr<_1a5b33164_FnIns>);
inline jule::Ptr<_1a844d4e8_ScopeChecker> _1a83d7d12_new_scope_checker(jule::Ptr<_1a846bc42_Sema>&, jule::Ptr<_1a5b33164_FnIns>);
inline jule::Ptr<_1a844d11e_ScopeLabel> _1a83eb8b4_find_label_parent(jule::Str, jule::Ptr<_1a844d4e8_ScopeChecker>);
inline jule::Bool _1a8417616_stmt_is_goto_scope(jule::Any&, jule::Ptr<_1a8438e62_Scope>&);
inline jule::I64 _1a8419d33_count_match_type(jule::Ptr<_1a844c63a_Match>&, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Slice<jule::Ptr<_1a84d3869_Data>> _1a841a5b4_get_datas_from_tuple_data(jule::Ptr<_1a84d3869_Data>&);
inline jule::Slice<jule::Any> _1a841b1ec_get_expr_models(jule::Any&);
inline jule::Bool _1a841d61c_check_mut(jule::Ptr<_1a846bc42_Sema>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline jule::Bool _1a841dd9d_check_assign(jule::Ptr<_1a846bc42_Sema>&, jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a84d3869_Data>, jule::Ptr<_2110e7238_Token>);
inline jule::Bool _1a841e640_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1a84266be_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1a8426e0b_st_is_def(jule::Any&);
inline jule::Ptr<_1a8487246_Var> _1a8462078_find_var_in_package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a850bead_TypeAlias> _1a84624eb_find_type_alias_in_package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1b396462a_Struct> _1a84628c5_find_struct_in_package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a5b2eeb8_Fn> _1a8462d04_find_fn_in_package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1a5e34531_Trait> _1a8463145_find_trait_in_package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1a83065e3_Enum> _1a8463486_find_enum_in_package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>&, jule::Str);
inline jule::Bool _1a8468ec5_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1a8469e60_is_valid_model_for_ref(jule::Any&);
inline _210c3ee2a_Log _1a846a3a0_compiler_err(jule::Ptr<_2110e7238_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a846a6e1_imp_is_lookupable(jule::Ptr<_1a8464058_ImportInfo>&, jule::Str);
inline void _1a846a9dd_append_ret_vars(jule::Slice<jule::Ptr<_1a8487246_Var>>&, jule::Ptr<_1a5b33164_FnIns>&);
inline void _1a846ac96_append_param_vars(jule::Slice<jule::Ptr<_1a8487246_Var>>&, jule::Ptr<_1a5b33164_FnIns>&);
inline void _1a846b093_append_generic_type_aliases(jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>&, jule::Ptr<_1a5b33164_FnIns>&);
inline jule::Ptr<_1a84cd7a9_SymbolTable> _1a846b3c3_find_file(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>&, jule::Ptr<_2110ec628_File>&);
inline void _1a846b7ad_push_suggestion(_210c3ee2a_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a84a0a34_trait_has_reference_receiver(jule::Ptr<_1a5e34531_Trait>&);
inline jule::Bool _1a84b9784_float_assignable(jule::Str, jule::Ptr<_1a84d3869_Data>&);
inline jule::Bool _1a84b98b6_sig_assignable(jule::Str, jule::Ptr<_1a84d3869_Data>&);
inline jule::Bool _1a84b99e8_unsig_assignable(jule::Str, jule::Ptr<_1a84d3869_Data>&);
inline jule::Bool _1a84b9b2a_int_assignable(jule::Str, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_210eb33e0_Directive> _1a8507838_find_directive(jule::Slice<jule::Ptr<_210eb33e0_Directive>>&, jule::Str);
inline jule::Any _1a8507bbd_find_builtins_import(jule::Str, jule::Ptr<_1a8464058_ImportInfo>);
inline void _1a8507dcc_fit_bitsize(jule::Ptr<_1a84d3869_Data>&);
inline void _1a85081c9_make_struct_lit_alloc(jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1b396a037_StructLitExprModel>&);
inline jule::Ptr<_1a8487246_Var> _1a850851a_build_error_var(jule::Ptr<_1a8438e62_Scope>&, jule::Ptr<_21110ab31_FnCallExpr>&);
inline jule::Any _1a850885b_find_builtins_sema(jule::Str, jule::Ptr<_1a846bc42_Sema>);
inline jule::Bool _1a8508b03_is_ok_for_shifting(jule::Ptr<_1a84d3869_Data>&);
inline jule::Bool _1a8508e33_is_instanced_struct(jule::Ptr<_1b39672a9_StructIns>);
inline jule::Bool _1a8509241_is_ptr_arithmetic_compatible_int(jule::Ptr<_1a84d3869_Data>&);
inline void _1a85094b6_apply_cast_kind_model(jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a850cbe5_TypeKind>&);
inline void _1a850976e_apply_cast_kind(jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Ptr<_1a84d3869_Data> _1a850996c_build_void_data(void);
inline jule::Str _1a8509c58_check_data_for_integer_indexing(jule::Ptr<_1a84d3869_Data>&);
inline void _1a850a044_apply_cast_model_by_enum(jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a83065e3_Enum>);
inline void _1a850a2db_cast_const_by_type(jule::Str&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Bool _1a850b52e_has_directive(jule::Slice<jule::Ptr<_210eb33e0_Directive>>&, jule::Str);
inline jule::Bool _1a8519ce0_can_get_ptr(jule::Ptr<_1a84d3869_Data>&);
inline jule::Bool _1a851a087_is_valid_for_sptr_type(jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Bool _1a851a373_is_valid_for_ref(jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Bool _1a851a65e_is_builtin_str_convertable(jule::Ptr<_1a850cbe5_TypeKind>&);
inline jule::Str _1a851a939_build_link_path_by_tokens(jule::Slice<jule::Ptr<_2110e7238_Token>>&);
inline jule::Ptr<_1a8512447_Prim> _1a851abc0_build_prim_type(jule::Str);
inline jule::Ptr<_1b396462a_Struct> _1a851b000_get_struct_from_kind(jule::Ptr<_1a850cbe5_TypeKind>);
inline jule::Bool _1a851b297_is_prim(jule::Str);
inline void _1a8523ed6_apply_implicit_cast(jule::Ptr<_1a850cbe5_TypeKind>&, jule::Ptr<_1a84d3869_Data>&);
inline std::tuple<jule::Ptr<_1a84cd7a9_SymbolTable>,jule::Slice<_210c3ee2a_Log>> _1a8526b76_build_symbols(jule::Ptr<_210eb3d6e_Ast>&, jule::Trait<_1a8461be3_Importer>&, jule::Ptr<_1a5b3b139_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1a8466c1a_Package>,jule::Slice<_210c3ee2a_Log>> _1a85270a5___analyze_package(jule::Slice<jule::Ptr<_210eb3d6e_Ast>>&, jule::Trait<_1a8461be3_Importer>&, jule::I64&);
inline std::tuple<jule::Ptr<_1a8466c1a_Package>,jule::Slice<_210c3ee2a_Log>> _1a8527490_analyze_package(jule::Slice<jule::Ptr<_210eb3d6e_Ast>>, jule::Trait<_1a8461be3_Importer>, jule::I64);
inline jule::Ptr<_1a5b33164_FnIns> _1a8531158_find_builtin_fn(jule::Str);
inline jule::Ptr<_1a850bead_TypeAlias> _1a8533215_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1a5e34531_Trait> _1a8533c4e_find_builtin_trait(jule::Str);
inline jule::Any _1a853469a_find_builtin_def(jule::Str);
inline jule::Any _1a855d4b5_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1a855e61a_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1a854b4d6_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1a852e6ea_find_package_builtin_def(jule::Str, jule::Str);
inline jule::Ptr<_1a84d3869_Data> _1a8536845_builtin_caller_common_plain(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a8568a75_builtin_caller_common(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a854ac44_builtin_caller_common_mut(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a854ad76_builtin_caller_error(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a4484_builtin_caller_out(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a45b6_builtin_caller_outln(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a46e8_builtin_caller_new(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a4a5b_builtin_caller_panic(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a4b8d_builtin_caller_make(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a4cc0_builtin_caller_append(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a4e02_builtin_caller_copy(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a5034_builtin_caller_clone(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a5166_builtin_caller_assert(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a5298_builtin_caller_std_mem_size_of(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a53ca_builtin_caller_std_mem_align_of(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a550c_builtin_caller_std_mem_free(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a5809_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a5c27_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a6123_builtin_caller_std_debug_out(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline jule::Ptr<_1a84d3869_Data> _1a85a6541_builtin_caller_std_debug_outln(jule::Ptr<_1a84d53d7_Eval>&, jule::Ptr<_21110ab31_FnCallExpr>&, jule::Ptr<_1a84d3869_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _210dc3047_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _210dc3179_check_arch(jule::Str);
inline jule::Bool _210ddc638_is_pass_file_annotation(jule::Str);
inline void _210ddd7e3_set_os_vars(jule::Slice<jule::Str>&);
inline void _210ddda46_set_arch_vars(jule::Slice<jule::Str>&);
inline void _210dddcee_init_vars(jule::Slice<jule::Str>&, _210ddd4d5_CompileInfo&);
inline jule::Slice<jule::U8> _1e551a8db_read_buff(jule::Str);
inline _210c3ee2a_Log _1e55307be_flat_compiler_err(jule::Str);
inline void _1a85a9a2d_push_passes(jule::Ptr<_1a8466c1a_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1a85a9db3_get_all_unique_passes(jule::Ptr<_1a8466c1a_Package>&, jule::Slice<jule::Ptr<_1a8464058_ImportInfo>>);
inline _210ddd4d5_CompileInfo _1a85aa0b1_build_compile_info(void);
inline jule::Ptr<_210eb33e0_Directive> _1a85ac987_find_directive(jule::Slice<jule::Ptr<_210eb33e0_Directive>>&, jule::Str);
inline jule::Bool _1a85acd1c_has_directive(jule::Slice<jule::Ptr<_210eb33e0_Directive>>&, jule::Str);
inline jule::Bool _1a85ad15d_is_exist(jule::Slice<jule::Any>, jule::Any);
inline jule::Bool _1a85ad449_is_dead(jule::Any);
inline void _1a85ad702_drop_ref(jule::Slice<jule::Any>&, jule::I64);
inline jule::Bool _1a85ad9dd_is_all_references_are_dead(jule::Ptr<_1a5b36222_ReferenceStack>);
inline jule::Bool _1a85adc74_is_fn_dead(jule::Ptr<_1a5b33164_FnIns>);
inline jule::Bool _1a85ae0a4_is_var_dead(jule::Ptr<_1a8487246_Var>);
inline jule::Bool _1a85ae88a_is_struct_dead(jule::Ptr<_1b39672a9_StructIns>);
inline jule::Bool _1a85aeb32_is_trait_dead(jule::Ptr<_1a5e34531_Trait>);
inline void _1a85aed85_eliminate_dead_functions(jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>&);
inline void _1a85b0083_eliminate_dead_globals(jule::Ptr<_1a8466c1a_Package>&);
inline void _1a85b0308_eliminate_dead_functions_package(jule::Ptr<_1a8466c1a_Package>&);
inline void _1a85b0a23_keep_alive_init(jule::Ptr<_1a8466c1a_Package>&);
inline void _1a85b0c32_eliminate_package(jule::Ptr<_1a8466c1a_Package>&);
inline void _1a85b0e41_eliminate_defines(jule::Ptr<_1a85a8312_IR>&);
inline void _1a85b2915_eliminate_dead_code_of_scope(jule::Ptr<_1a8438e62_Scope>);
inline void _1a85b2b9b_eliminate_scope_functions(jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>&);
inline void _1a85b2e10_eliminate_functions_scope_package(jule::Ptr<_1a8466c1a_Package>&);
inline void _1a85b3174_eliminate_scope_package(jule::Ptr<_1a8466c1a_Package>&);
inline void _1a85b3372_eliminate_scopes(jule::Ptr<_1a85a8312_IR>&);
inline void _1a85d7066_throw(jule::Str);
inline jule::Bool _1a8cc1057_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1a8cc13a9_is_constant_valid_conditional_case(jule::Ptr<_1a844085e_If>&);
inline jule::Bool _1a8cc161d_is_unreachable_expr(jule::Any&);
inline jule::Bool _1a8cc194d_is_constant_valid_match_case(jule::Ptr<_1a844ca58_Case>&);
inline jule::Bool _1a8cc1c28_is_unreachable_conditional_case(jule::Ptr<_1a844085e_If>&);
inline jule::Bool _1a8cc2003_is_unreachable_match_case(jule::Ptr<_1a844ca58_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1a8cc915e_check_for_bit_shift_opt(jule::Ptr<_1b3968e15_OperandExprModel>&, jule::Ptr<_1b3968e15_OperandExprModel>&);
inline jule::U64 _1a8d503a0_unix(void);
inline jule::U64 _1a8d506e1_unix_year_to_seconds(jule::U64, jule::Bool&);
inline jule::U64 _1a8d50a76_unix_month_to_seconds(jule::U64, jule::Bool);
inline jule::Bool _1a8cb7636_is_copy_optimizable(jule::Ptr<_1a84d3869_Data>&);
inline jule::Bool _1a8cb7768_is_iter_copy_optimizable(jule::Ptr<_1a84d3869_Data>&, jule::Ptr<_1a8487246_Var>&);
inline jule::Str _1a8cd1991_decompose_common_esq(jule::U8);
inline jule::Str _1a8cd1c7c_sbtoa(jule::U8);
inline jule::Str _1a8cd2024_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1a8cd2310_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1a8cd2651_ftoa(jule::F64, jule::I64);
inline jule::Str _1a8cd28e8_itoa(jule::I64);
inline jule::Str _1a8cd2b90_utoa(jule::U64);
inline jule::Bool _1a8cd2ec0_is_forwarded(jule::Ptr<_1a8438e62_Scope>&);
inline jule::Bool _1a8cd32ab_is_builtin_call_has_debuginf(jule::Ptr<_1b396b1c0_FnCallExprModel>&);
inline void _1a8d5540a_iter_files(jule::Ptr<_1a8466c1a_Package>&, jule::Fn<void(jule::Ptr<_1a84cd7a9_SymbolTable>&)>);
inline void _1a8d5565d_prepare_structure(jule::Ptr<_1b396462a_Struct>&);
inline jule::Str _1a8d55905_concat_all_parts(jule::Slice<jule::Ptr<_2110e7238_Token>>);
inline jule::Ptr<_210eb33e0_Directive> _1a8d5c91d_find_directive(jule::Slice<jule::Ptr<_210eb33e0_Directive>>&, jule::Str);
inline jule::Bool _1a8d5cca3_has_directive(jule::Slice<jule::Ptr<_210eb33e0_Directive>>&, jule::Str);
inline void _210c07134_print_error_message(jule::Str);
inline void _210c1e668_help(jule::Slice<jule::Str>&);
inline void _210c20c74_version(jule::Slice<jule::Str>&);
inline void _210c21516_tool_distos(void);
inline void _210c21ca8_tool_distarch(void);
inline void _210c2254a_tool(jule::Slice<jule::Str>&);
inline void _210c22cdc_julenv(jule::Slice<jule::Str>&);
inline void _210c32a99_mod(jule::Slice<jule::Str>&);
inline jule::Bool _210c045a4_process_command(jule::Slice<jule::Str>&);
inline void _210c1da85_show_info(void);
void entry_point(void);
inline void _210c304c0_enable_vtp(void);
inline void _210c334e5_init(void);
inline jule::Ptr<_20eac0c8a_File> _1a8939d58_open_output(jule::Str&);
inline void _1a8970377_clear_objects(void);
inline void _1a8d614d2_compile_ir(jule::Str, jule::Str);
inline jule::Bool _1a8d73eea_is_cpp_source_file(jule::Str);
inline void _1a8d6b355_push_comp_cmd_clang(jule::Str&);
inline void _1a8d5de91_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1a8ababcb_gen_compile_cmd(jule::Str, jule::Ptr<_1a85a8312_IR>&);
inline jule::Str _1a87e7ac3_get_compile_path(void);
inline void _1a8d62c75_apply_target_independent_optimizations(jule::Ptr<_1a85a8312_IR>&);
inline void _1a8663be7_check_compiler_flag(void);
inline void _1a8d5d347_check_target_arch(jule::Str);
inline void _1a8d5d479_check_target_os(jule::Str);
inline void _1a8d91556_check_target_flag(jule::Str&);
inline void _1a8d91688_check_opt_flag(jule::Str&);
inline void _1a8d919eb_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1a8d91b2d_check_flags(jule::Slice<jule::Str>&);
inline void _1a8d91c60_setup_sema_flags(jule::I64&);
inline jule::Ptr<_1a85a8312_IR> _1a8d91d92_build_ir(jule::Slice<jule::Str>&);
inline void _1a8d91ec4_compile_command(jule::Slice<jule::Str>&);


struct _1a859deb7_ReaderMptrData {
	jule::Exceptional<jule::I64>(*_1a859dd74_read)(jule::Trait<_1a859deb7_Reader>, jule::Slice<jule::U8>);
};

struct _1a859e3e6_WriterMptrData {
	jule::Exceptional<jule::I64>(*_1a859e2a3_write)(jule::Trait<_1a859e3e6_Writer>, jule::Slice<jule::U8>);
};

struct _1a859e9bd_WriterCloserMptrData {
	jule::Exceptional<jule::I64>(*_1a859e69e_write)(jule::Trait<_1a859e9bd_WriterCloser>, jule::Slice<jule::U8>);
	jule::VoidExceptional(*_1a859e87a_close)(jule::Trait<_1a859e9bd_WriterCloser>);
};

struct _1a85a021b_StreamMptrData {
	jule::Exceptional<jule::I64>(*_1a859ecba_read)(jule::Trait<_1a85a021b_Stream>, jule::Slice<jule::U8>);
	jule::Exceptional<jule::I64>(*_1a85a00c8_write)(jule::Trait<_1a85a021b_Stream>, jule::Slice<jule::U8>);
};

struct _1a8461be3_ImporterMptrData {
	void(*_1a8460b15_set_mod_path)(jule::Trait<_1a8461be3_Importer>, jule::Str);
	jule::Str(*_1a8460d57_get_mod_path)(jule::Trait<_1a8461be3_Importer>);
	jule::Str(*_1a8461165_mod_by_id)(jule::Trait<_1a8461be3_Importer>, jule::I64);
	jule::Ptr<_1a8464058_ImportInfo>(*_1a8461473_get_import)(jule::Trait<_1a8461be3_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_210eb3d6e_Ast>>,jule::Slice<_210c3ee2a_Log>>(*_1a846182a_import_package)(jule::Trait<_1a8461be3_Importer>, jule::Str, jule::Bool);
	void(*_1a8461aa0_imported)(jule::Trait<_1a8461be3_Importer>, jule::Ptr<_1a8464058_ImportInfo>);
};

struct _1a850c7b6_KindMptrData {
	jule::Str(*_1a850c365_to_str)(jule::Trait<_1a850c7b6_Kind>);
	jule::Bool(*_1a850c673_equals)(jule::Trait<_1a850c7b6_Kind>, jule::Ptr<_1a850cbe5_TypeKind>);
};

struct _1a85260a4_LookupMptrData {
	jule::Ptr<_1a8464058_ImportInfo>(*_1a8524569_find_package)(jule::Trait<_1a85260a4_Lookup>, jule::Str);
	jule::Ptr<_1a8464058_ImportInfo>(*_1a8524877_select_package)(jule::Trait<_1a85260a4_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)>);
	jule::Ptr<_1a8487246_Var>(*_1a8524c2e_find_var)(jule::Trait<_1a85260a4_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a850bead_TypeAlias>(*_1a85250d6_find_type_alias)(jule::Trait<_1a85260a4_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b396462a_Struct>(*_1a852548d_find_struct)(jule::Trait<_1a85260a4_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a5b2eeb8_Fn>(*_1a8525845_find_fn)(jule::Trait<_1a85260a4_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a5e34531_Trait>(*_1a8525b53_find_trait)(jule::Trait<_1a85260a4_Lookup>, jule::Str);
	jule::Ptr<_1a83065e3_Enum>(*_1a8525e61_find_enum)(jule::Trait<_1a85260a4_Lookup>, jule::Str);
};

struct _1a8d8b331_CommonFlagMptrData {
	jule::Str(*_1a8d8ad58_name)(jule::Trait<_1a8d8b331_CommonFlag>);
	jule::I32(*_1a8d8ae8a_short)(jule::Trait<_1a8d8b331_CommonFlag>);
	jule::Str(*_1a8d8b0bc_what)(jule::Trait<_1a8d8b331_CommonFlag>);
	void(*_1a8d8b1ee_reset)(jule::Trait<_1a8d8b331_CommonFlag>);
};



inline jule::Exceptional<jule::I64> _1a859dd74_read_0(jule::Trait<_1a859deb7_Reader> _self_, jule::Slice<jule::U8> _731_buff) {
	return _1a859d109_read(_self_.safe_ptr<_1a85995ab_FileStream>(), _731_buff);
}
inline jule::Exceptional<jule::I64> _1a859dd74_read_1(jule::Trait<_1a859deb7_Reader> _self_, jule::Slice<jule::U8> _731_buff) {
	return _1a85a0c11_read(_self_.safe_ptr<_1a85a056d_ByteStream>(), _731_buff);
}
inline jule::Exceptional<jule::I64> _1a859e2a3_write_0(jule::Trait<_1a859e3e6_Writer> _self_, jule::Slice<jule::U8> _1228_buff) {
	return _1a859d417_write(_self_.safe_ptr<_1a85995ab_FileStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I64> _1a859e2a3_write_1(jule::Trait<_1a859e3e6_Writer> _self_, jule::Slice<jule::U8> _1228_buff) {
	return _1a85a101e_write(_self_.safe_ptr<_1a85a056d_ByteStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I64> _1a859e69e_write_0(jule::Trait<_1a859e9bd_WriterCloser> _self_, jule::Slice<jule::U8> _1728_buff)  { jule::panic(__JULE_ERROR__INVALID_MEMORY); }
inline jule::VoidExceptional _1a859e87a_close_0(jule::Trait<_1a859e9bd_WriterCloser> _self_)  { jule::panic(__JULE_ERROR__INVALID_MEMORY); }
inline jule::Exceptional<jule::I64> _1a859ecba_read_0(jule::Trait<_1a85a021b_Stream> _self_, jule::Slice<jule::U8> _2331_buff) {
	return _1a859d109_read(_self_.safe_ptr<_1a85995ab_FileStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I64> _1a85a00c8_write_0(jule::Trait<_1a85a021b_Stream> _self_, jule::Slice<jule::U8> _2428_buff) {
	return _1a859d417_write(_self_.safe_ptr<_1a85995ab_FileStream>(), _2428_buff);
}
inline jule::Exceptional<jule::I64> _1a859ecba_read_1(jule::Trait<_1a85a021b_Stream> _self_, jule::Slice<jule::U8> _2331_buff) {
	return _1a85a0c11_read(_self_.safe_ptr<_1a85a056d_ByteStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I64> _1a85a00c8_write_1(jule::Trait<_1a85a021b_Stream> _self_, jule::Slice<jule::U8> _2428_buff) {
	return _1a85a101e_write(_self_.safe_ptr<_1a85a056d_ByteStream>(), _2428_buff);
}
inline void _1a8460b15_set_mod_path_0(jule::Trait<_1a8461be3_Importer> _self_, jule::Str _1735_path) {
	_1e5537e8b_set_mod_path(_self_.safe_ptr<_1e552e218_JuleImporter>(), _1735_path);
}
inline jule::Str _1a8460d57_get_mod_path_0(jule::Trait<_1a8461be3_Importer> _self_) {
	return _1a85a67a5_get_mod_path(_self_.safe_ptr<_1e552e218_JuleImporter>());
}
inline jule::Str _1a8461165_mod_by_id_0(jule::Trait<_1a8461be3_Importer> _self_, jule::I64 _2528_id) {
	return _1a85a6ab3_mod_by_id(_self_.safe_ptr<_1e552e218_JuleImporter>(), _2528_id);
}
inline jule::Ptr<_1a8464058_ImportInfo> _1a8461473_get_import_0(jule::Trait<_1a8461be3_Importer> _self_, jule::Str _3133_path) {
	return _1a85a6dc1_get_import(_self_.safe_ptr<_1e552e218_JuleImporter>(), _3133_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_210eb3d6e_Ast>>,jule::Slice<_210c3ee2a_Log>> _1a846182a_import_package_0(jule::Trait<_1a8461be3_Importer> _self_, jule::Str _3737_path, jule::Bool _3748_update_mod) {
	return _1a85a7278_import_package(_self_.safe_ptr<_1e552e218_JuleImporter>(), _3737_path, _3748_update_mod);
}
inline void _1a8461aa0_imported_0(jule::Trait<_1a8461be3_Importer> _self_, jule::Ptr<_1a8464058_ImportInfo> _4135__0) {
	_1a85a74ed_imported(_self_.safe_ptr<_1e552e218_JuleImporter>(), _4135__0);
}
inline jule::Str _1a850c365_to_str_0(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1b3967661_to_str(_self_.safe_ptr<_1b39672a9_StructIns>());
}
inline jule::Bool _1a850c673_equals_0(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1b396796e_equals(_self_.data.as<_1b39672a9_StructIns>(), _5926_other);
}
inline jule::Str _1a850c365_to_str_1(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1a5b334c7_to_str(_self_.safe_ptr<_1a5b33164_FnIns>());
}
inline jule::Bool _1a850c673_equals_1(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1a5b337d5_equals(_self_.data.as<_1a5b33164_FnIns>(), _5926_other);
}
inline jule::Str _1a850c365_to_str_2(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1e5553ccb_to_str(_self_.safe_ptr<_1a5e34531_Trait>());
}
inline jule::Bool _1a850c673_equals_2(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1e55aeb4a_equals(_self_.data.as<_1a5e34531_Trait>(), _5926_other);
}
inline jule::Str _1a850c365_to_str_3(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1a83067d0_to_str(_self_.safe_ptr<_1a83065e3_Enum>());
}
inline jule::Bool _1a850c673_equals_3(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1a8306912_equals(_self_.data.as<_1a83065e3_Enum>(), _5926_other);
}
inline jule::Str _1a850c365_to_str_4(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1a850d09c_to_str(_self_.safe_ptr<_1a850cbe5_TypeKind>());
}
inline jule::Bool _1a850c673_equals_4(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1a850d3aa_equals(_self_.data.as<_1a850cbe5_TypeKind>(), _5926_other);
}
inline jule::Str _1a850c365_to_str_5(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1a85127aa_to_str(_self_.safe_ptr<_1a8512447_Prim>());
}
inline jule::Bool _1a850c673_equals_5(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1a8512ab8_equals(_self_.data.as<_1a8512447_Prim>(), _5926_other);
}
inline jule::Str _1a850c365_to_str_6(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1a8515cb9_to_str(_self_.safe_ptr<_1a8515956_Sptr>());
}
inline jule::Bool _1a850c673_equals_6(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1a85160c7_equals(_self_.data.as<_1a8515956_Sptr>(), _5926_other);
}
inline jule::Str _1a850c365_to_str_7(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1a8516836_to_str(_self_.safe_ptr<_1a85163b3_Slc>());
}
inline jule::Bool _1a850c673_equals_7(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1a8516b44_equals(_self_.data.as<_1a85163b3_Slc>(), _5926_other);
}
inline jule::Str _1a850c365_to_str_8(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1a85172a4_to_str(_self_.safe_ptr<_1a8516da8_Tuple>());
}
inline jule::Bool _1a850c673_equals_8(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1a85175b2_equals(_self_.data.as<_1a8516da8_Tuple>(), _5926_other);
}
inline jule::Str _1a850c365_to_str_9(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1a8517ccc_to_str(_self_.safe_ptr<_1a8517969_Map>());
}
inline jule::Bool _1a850c673_equals_9(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1a85180da_equals(_self_.data.as<_1a8517969_Map>(), _5926_other);
}
inline jule::Str _1a850c365_to_str_10(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1a85188c1_to_str(_self_.safe_ptr<_1a851855d_Arr>());
}
inline jule::Bool _1a850c673_equals_10(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1a8518bce_equals(_self_.data.as<_1a851855d_Arr>(), _5926_other);
}
inline jule::Str _1a850c365_to_str_11(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1a851932d_to_str(_self_.safe_ptr<_1a8518eba_Ptr>());
}
inline jule::Bool _1a850c673_equals_11(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1a851963b_equals(_self_.data.as<_1a8518eba_Ptr>(), _5926_other);
}
inline jule::Str _1a850c365_to_str_12(jule::Trait<_1a850c7b6_Kind> _self_) {
	return _1a8d56b59_to_str(_self_.safe_ptr<_1a8d5696c_CustomType>());
}
inline jule::Bool _1a850c673_equals_12(jule::Trait<_1a850c7b6_Kind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _5926_other) {
	return _1a8d56e56_equals(_self_.data.as<_1a8d5696c_CustomType>(), _5926_other);
}
inline jule::Ptr<_1a8464058_ImportInfo> _1a8524569_find_package_0(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _935_ident) {
	return _1a843acee_find_package(_self_.safe_ptr<_1a844d4e8_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1a8464058_ImportInfo> _1a8524877_select_package_0(jule::Trait<_1a85260a4_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)> _1337_selector) {
	return _1a842bd9a_select_package(_self_.safe_ptr<_1a844d4e8_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1a8487246_Var> _1a8524c2e_find_var_0(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1a8418958_find_var(_self_.safe_ptr<_1a844d4e8_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a850bead_TypeAlias> _1a85250d6_find_type_alias_0(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1a844d806_find_type_alias(_self_.safe_ptr<_1a844d4e8_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1b396462a_Struct> _1a852548d_find_struct_0(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1a844dbad_find_struct(_self_.safe_ptr<_1a844d4e8_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a5b2eeb8_Fn> _1a8525845_find_fn_0(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1a844e065_find_fn(_self_.safe_ptr<_1a844d4e8_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a5e34531_Trait> _1a8525b53_find_trait_0(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _3333_ident) {
	return _1a844e373_find_trait(_self_.safe_ptr<_1a844d4e8_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1a83065e3_Enum> _1a8525e61_find_enum_0(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _3732_ident) {
	return _1a844e681_find_enum(_self_.safe_ptr<_1a844d4e8_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1a8464058_ImportInfo> _1a8524569_find_package_1(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _935_ident) {
	return _1a8464564_find_package(_self_.safe_ptr<_1a8464058_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1a8464058_ImportInfo> _1a8524877_select_package_1(jule::Trait<_1a85260a4_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)> _1337_selector) {
	return _1a8464872_select_package(_self_.safe_ptr<_1a8464058_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1a8487246_Var> _1a8524c2e_find_var_1(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1a8464c29_find_var(_self_.safe_ptr<_1a8464058_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a850bead_TypeAlias> _1a85250d6_find_type_alias_1(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1a84650d1_find_type_alias(_self_.safe_ptr<_1a8464058_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1b396462a_Struct> _1a852548d_find_struct_1(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1a8465488_find_struct(_self_.safe_ptr<_1a8464058_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a5b2eeb8_Fn> _1a8525845_find_fn_1(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1a8465840_find_fn(_self_.safe_ptr<_1a8464058_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a5e34531_Trait> _1a8525b53_find_trait_1(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _3333_ident) {
	return _1a8465b4d_find_trait(_self_.safe_ptr<_1a8464058_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1a83065e3_Enum> _1a8525e61_find_enum_1(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _3732_ident) {
	return _1a8465e5b_find_enum(_self_.safe_ptr<_1a8464058_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1a8464058_ImportInfo> _1a8524569_find_package_2(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _935_ident) {
	return _1a84671d2_find_package(_self_.safe_ptr<_1a8466c1a_Package>(), _935_ident);
}
inline jule::Ptr<_1a8464058_ImportInfo> _1a8524877_select_package_2(jule::Trait<_1a85260a4_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)> _1337_selector) {
	return _1a84674e0_select_package(_self_.safe_ptr<_1a8466c1a_Package>(), _1337_selector);
}
inline jule::Ptr<_1a8487246_Var> _1a8524c2e_find_var_2(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1a8467897_find_var(_self_.safe_ptr<_1a8466c1a_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a850bead_TypeAlias> _1a85250d6_find_type_alias_2(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1a8467c4e_find_type_alias(_self_.safe_ptr<_1a8466c1a_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1b396462a_Struct> _1a852548d_find_struct_2(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1a8468106_find_struct(_self_.safe_ptr<_1a8466c1a_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a5b2eeb8_Fn> _1a8525845_find_fn_2(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1a84684ad_find_fn(_self_.safe_ptr<_1a8466c1a_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a5e34531_Trait> _1a8525b53_find_trait_2(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _3333_ident) {
	return _1a84687bb_find_trait(_self_.safe_ptr<_1a8466c1a_Package>(), _3333_ident);
}
inline jule::Ptr<_1a83065e3_Enum> _1a8525e61_find_enum_2(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _3732_ident) {
	return _1a8468ac9_find_enum(_self_.safe_ptr<_1a8466c1a_Package>(), _3732_ident);
}
inline jule::Ptr<_1a8464058_ImportInfo> _1a8524569_find_package_3(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _935_ident) {
	return _1a846c24d_find_package(_self_.safe_ptr<_1a846bc42_Sema>(), _935_ident);
}
inline jule::Ptr<_1a8464058_ImportInfo> _1a8524877_select_package_3(jule::Trait<_1a85260a4_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)> _1337_selector) {
	return _1a846c55b_select_package(_self_.safe_ptr<_1a846bc42_Sema>(), _1337_selector);
}
inline jule::Ptr<_1a8487246_Var> _1a8524c2e_find_var_3(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1a846c913_find_var(_self_.safe_ptr<_1a846bc42_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a850bead_TypeAlias> _1a85250d6_find_type_alias_3(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1a846ccba_find_type_alias(_self_.safe_ptr<_1a846bc42_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1b396462a_Struct> _1a852548d_find_struct_3(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1a846d172_find_struct(_self_.safe_ptr<_1a846bc42_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a5b2eeb8_Fn> _1a8525845_find_fn_3(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1a846d529_find_fn(_self_.safe_ptr<_1a846bc42_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a5e34531_Trait> _1a8525b53_find_trait_3(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _3333_ident) {
	return _1a846d837_find_trait(_self_.safe_ptr<_1a846bc42_Sema>(), _3333_ident);
}
inline jule::Ptr<_1a83065e3_Enum> _1a8525e61_find_enum_3(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _3732_ident) {
	return _1a846db45_find_enum(_self_.safe_ptr<_1a846bc42_Sema>(), _3732_ident);
}
inline jule::Ptr<_1a8464058_ImportInfo> _1a8524569_find_package_4(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _935_ident) {
	return _1a84cdcb5_find_package(_self_.safe_ptr<_1a84cd7a9_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1a8464058_ImportInfo> _1a8524877_select_package_4(jule::Trait<_1a85260a4_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)> _1337_selector) {
	return _1a84ce0c3_select_package(_self_.safe_ptr<_1a84cd7a9_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1a8487246_Var> _1a8524c2e_find_var_4(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1a84ce47a_find_var(_self_.safe_ptr<_1a84cd7a9_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a850bead_TypeAlias> _1a85250d6_find_type_alias_4(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1a84ce832_find_type_alias(_self_.safe_ptr<_1a84cd7a9_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1b396462a_Struct> _1a852548d_find_struct_4(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1a84cebd9_find_struct(_self_.safe_ptr<_1a84cd7a9_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a5b2eeb8_Fn> _1a8525845_find_fn_4(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1a84d0091_find_fn(_self_.safe_ptr<_1a84cd7a9_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a5e34531_Trait> _1a8525b53_find_trait_4(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _3333_ident) {
	return _1a84d039e_find_trait(_self_.safe_ptr<_1a84cd7a9_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1a83065e3_Enum> _1a8525e61_find_enum_4(jule::Trait<_1a85260a4_Lookup> _self_, jule::Str _3732_ident) {
	return _1a84d06ac_find_enum(_self_.safe_ptr<_1a84cd7a9_SymbolTable>(), _3732_ident);
}
inline jule::Str _1a8d8ad58_name_0(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab36035d_name(_self_.safe_ptr<_1a8d8b650_Flag_0>());
}
inline jule::I32 _1a8d8ae8a_short_0(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab360704_short(_self_.safe_ptr<_1a8d8b650_Flag_0>());
}
inline jule::Str _1a8d8b0bc_what_0(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab360490_what(_self_.safe_ptr<_1a8d8b650_Flag_0>());
}
inline void _1a8d8b1ee_reset_0(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	_1ab3605c2_reset(_self_.safe_ptr<_1a8d8b650_Flag_0>());
}
inline jule::Str _1a8d8ad58_name_1(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab3630ca_name(_self_.safe_ptr<_1a8d8b650_Flag_1>());
}
inline jule::I32 _1a8d8ae8a_short_1(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab362d33_short(_self_.safe_ptr<_1a8d8b650_Flag_1>());
}
inline jule::Str _1a8d8b0bc_what_1(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab3632ea_what(_self_.safe_ptr<_1a8d8b650_Flag_1>());
}
inline void _1a8d8b1ee_reset_1(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	_1ab3608ad_reset(_self_.safe_ptr<_1a8d8b650_Flag_1>());
}
inline jule::Str _1a8d8ad58_name_2(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab3661ee_name(_self_.safe_ptr<_1a8d8b650_Flag_2>());
}
inline jule::I32 _1a8d8ae8a_short_2(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab366b8e_short(_self_.safe_ptr<_1a8d8b650_Flag_2>());
}
inline jule::Str _1a8d8b0bc_what_2(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab36641e_what(_self_.safe_ptr<_1a8d8b650_Flag_2>());
}
inline void _1a8d8b1ee_reset_2(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	_1ab365e57_reset(_self_.safe_ptr<_1a8d8b650_Flag_2>());
}
inline jule::Str _1a8d8ad58_name_3(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab369367_name(_self_.safe_ptr<_1a8d8b650_Flag_3>());
}
inline jule::I32 _1a8d8ae8a_short_3(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab369d07_short(_self_.safe_ptr<_1a8d8b650_Flag_3>());
}
inline jule::Str _1a8d8b0bc_what_3(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab369587_what(_self_.safe_ptr<_1a8d8b650_Flag_3>());
}
inline void _1a8d8b1ee_reset_3(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	_1ab3690c0_reset(_self_.safe_ptr<_1a8d8b650_Flag_3>());
}
inline jule::Str _1a8d8ad58_name_4(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab36c48b_name(_self_.safe_ptr<_1a8d8b650_Flag_4>());
}
inline jule::I32 _1a8d8ae8a_short_4(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab36ce2b_short(_self_.safe_ptr<_1a8d8b650_Flag_4>());
}
inline jule::Str _1a8d8b0bc_what_4(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	return _1ab36c6ab_what(_self_.safe_ptr<_1a8d8b650_Flag_4>());
}
inline void _1a8d8b1ee_reset_4(jule::Trait<_1a8d8b331_CommonFlag> _self_) {
	_1ab36c1e4_reset(_self_.safe_ptr<_1a8d8b650_Flag_4>());
}


static _1a859deb7_ReaderMptrData _1a859deb7_Reader_mptr_data[] = {
	{
		._1a859dd74_read=_1a859dd74_read_0,
	},
	{
		._1a859dd74_read=_1a859dd74_read_1,
	},
};
static _1a859e3e6_WriterMptrData _1a859e3e6_Writer_mptr_data[] = {
	{
		._1a859e2a3_write=_1a859e2a3_write_0,
	},
	{
		._1a859e2a3_write=_1a859e2a3_write_1,
	},
};
static _1a859e9bd_WriterCloserMptrData _1a859e9bd_WriterCloser_mptr_data[] = {
	{
		._1a859e69e_write=_1a859e69e_write_0,
		._1a859e87a_close=_1a859e87a_close_0,
	},
};
static _1a85a021b_StreamMptrData _1a85a021b_Stream_mptr_data[] = {
	{
		._1a859ecba_read=_1a859ecba_read_0,
		._1a85a00c8_write=_1a85a00c8_write_0,
	},
	{
		._1a859ecba_read=_1a859ecba_read_1,
		._1a85a00c8_write=_1a85a00c8_write_1,
	},
};
static _1a8461be3_ImporterMptrData _1a8461be3_Importer_mptr_data[] = {
	{
		._1a8460b15_set_mod_path=_1a8460b15_set_mod_path_0,
		._1a8460d57_get_mod_path=_1a8460d57_get_mod_path_0,
		._1a8461165_mod_by_id=_1a8461165_mod_by_id_0,
		._1a8461473_get_import=_1a8461473_get_import_0,
		._1a846182a_import_package=_1a846182a_import_package_0,
		._1a8461aa0_imported=_1a8461aa0_imported_0,
	},
};
static _1a850c7b6_KindMptrData _1a850c7b6_Kind_mptr_data[] = {
	{
		._1a850c365_to_str=_1a850c365_to_str_0,
		._1a850c673_equals=_1a850c673_equals_0,
	},
	{
		._1a850c365_to_str=_1a850c365_to_str_1,
		._1a850c673_equals=_1a850c673_equals_1,
	},
	{
		._1a850c365_to_str=_1a850c365_to_str_2,
		._1a850c673_equals=_1a850c673_equals_2,
	},
	{
		._1a850c365_to_str=_1a850c365_to_str_3,
		._1a850c673_equals=_1a850c673_equals_3,
	},
	{
		._1a850c365_to_str=_1a850c365_to_str_4,
		._1a850c673_equals=_1a850c673_equals_4,
	},
	{
		._1a850c365_to_str=_1a850c365_to_str_5,
		._1a850c673_equals=_1a850c673_equals_5,
	},
	{
		._1a850c365_to_str=_1a850c365_to_str_6,
		._1a850c673_equals=_1a850c673_equals_6,
	},
	{
		._1a850c365_to_str=_1a850c365_to_str_7,
		._1a850c673_equals=_1a850c673_equals_7,
	},
	{
		._1a850c365_to_str=_1a850c365_to_str_8,
		._1a850c673_equals=_1a850c673_equals_8,
	},
	{
		._1a850c365_to_str=_1a850c365_to_str_9,
		._1a850c673_equals=_1a850c673_equals_9,
	},
	{
		._1a850c365_to_str=_1a850c365_to_str_10,
		._1a850c673_equals=_1a850c673_equals_10,
	},
	{
		._1a850c365_to_str=_1a850c365_to_str_11,
		._1a850c673_equals=_1a850c673_equals_11,
	},
	{
		._1a850c365_to_str=_1a850c365_to_str_12,
		._1a850c673_equals=_1a850c673_equals_12,
	},
};
static _1a85260a4_LookupMptrData _1a85260a4_Lookup_mptr_data[] = {
	{
		._1a8524569_find_package=_1a8524569_find_package_0,
		._1a8524877_select_package=_1a8524877_select_package_0,
		._1a8524c2e_find_var=_1a8524c2e_find_var_0,
		._1a85250d6_find_type_alias=_1a85250d6_find_type_alias_0,
		._1a852548d_find_struct=_1a852548d_find_struct_0,
		._1a8525845_find_fn=_1a8525845_find_fn_0,
		._1a8525b53_find_trait=_1a8525b53_find_trait_0,
		._1a8525e61_find_enum=_1a8525e61_find_enum_0,
	},
	{
		._1a8524569_find_package=_1a8524569_find_package_1,
		._1a8524877_select_package=_1a8524877_select_package_1,
		._1a8524c2e_find_var=_1a8524c2e_find_var_1,
		._1a85250d6_find_type_alias=_1a85250d6_find_type_alias_1,
		._1a852548d_find_struct=_1a852548d_find_struct_1,
		._1a8525845_find_fn=_1a8525845_find_fn_1,
		._1a8525b53_find_trait=_1a8525b53_find_trait_1,
		._1a8525e61_find_enum=_1a8525e61_find_enum_1,
	},
	{
		._1a8524569_find_package=_1a8524569_find_package_2,
		._1a8524877_select_package=_1a8524877_select_package_2,
		._1a8524c2e_find_var=_1a8524c2e_find_var_2,
		._1a85250d6_find_type_alias=_1a85250d6_find_type_alias_2,
		._1a852548d_find_struct=_1a852548d_find_struct_2,
		._1a8525845_find_fn=_1a8525845_find_fn_2,
		._1a8525b53_find_trait=_1a8525b53_find_trait_2,
		._1a8525e61_find_enum=_1a8525e61_find_enum_2,
	},
	{
		._1a8524569_find_package=_1a8524569_find_package_3,
		._1a8524877_select_package=_1a8524877_select_package_3,
		._1a8524c2e_find_var=_1a8524c2e_find_var_3,
		._1a85250d6_find_type_alias=_1a85250d6_find_type_alias_3,
		._1a852548d_find_struct=_1a852548d_find_struct_3,
		._1a8525845_find_fn=_1a8525845_find_fn_3,
		._1a8525b53_find_trait=_1a8525b53_find_trait_3,
		._1a8525e61_find_enum=_1a8525e61_find_enum_3,
	},
	{
		._1a8524569_find_package=_1a8524569_find_package_4,
		._1a8524877_select_package=_1a8524877_select_package_4,
		._1a8524c2e_find_var=_1a8524c2e_find_var_4,
		._1a85250d6_find_type_alias=_1a85250d6_find_type_alias_4,
		._1a852548d_find_struct=_1a852548d_find_struct_4,
		._1a8525845_find_fn=_1a8525845_find_fn_4,
		._1a8525b53_find_trait=_1a8525b53_find_trait_4,
		._1a8525e61_find_enum=_1a8525e61_find_enum_4,
	},
};
static _1a8d8b331_CommonFlagMptrData _1a8d8b331_CommonFlag_mptr_data[] = {
	{
		._1a8d8ad58_name=_1a8d8ad58_name_0,
		._1a8d8ae8a_short=_1a8d8ae8a_short_0,
		._1a8d8b0bc_what=_1a8d8b0bc_what_0,
		._1a8d8b1ee_reset=_1a8d8b1ee_reset_0,
	},
	{
		._1a8d8ad58_name=_1a8d8ad58_name_1,
		._1a8d8ae8a_short=_1a8d8ae8a_short_1,
		._1a8d8b0bc_what=_1a8d8b0bc_what_1,
		._1a8d8b1ee_reset=_1a8d8b1ee_reset_1,
	},
	{
		._1a8d8ad58_name=_1a8d8ad58_name_2,
		._1a8d8ae8a_short=_1a8d8ae8a_short_2,
		._1a8d8b0bc_what=_1a8d8b0bc_what_2,
		._1a8d8b1ee_reset=_1a8d8b1ee_reset_2,
	},
	{
		._1a8d8ad58_name=_1a8d8ad58_name_3,
		._1a8d8ae8a_short=_1a8d8ae8a_short_3,
		._1a8d8b0bc_what=_1a8d8b0bc_what_3,
		._1a8d8b1ee_reset=_1a8d8b1ee_reset_3,
	},
	{
		._1a8d8ad58_name=_1a8d8ad58_name_4,
		._1a8d8ae8a_short=_1a8d8ae8a_short_4,
		._1a8d8b0bc_what=_1a8d8b0bc_what_4,
		._1a8d8b1ee_reset=_1a8d8b1ee_reset_4,
	},
};


jule::Str _1a8d645c3_OUT_DIR = jule::Str("dist", 4);
jule::Str _1a8d64eb9_OUT_NAME = jule::Str("ir.cpp", 6);
jule::Str _1a8d6a046_OUT = jule::Str();
jule::Bool _20dbaa925_PRODUCTION = false;
jule::Bool _20dc7741a_OPT_COPY = false;
jule::Bool _20dc77508_OPT_DEADCODE = false;
jule::Bool _20dc775e6_OPT_APPEND = false;
jule::Bool _20dc77739_OPT_MATH = false;
jule::Bool _20dc778b0_OPT_ACCESS = false;
jule::Bool _20dc77a36_OPT_INLINE = false;
jule::Bool _20dc77c45_OPT_PTR = false;
jule::Bool _20dc77dbb_OPT_COND = false;
jule::Str _20dc784a4_COMPILER = jule::Str();
jule::Str _20dc7866e_COMPILER_PATH = jule::Str();
jule::Str _20dc787e5_CPP_STD = jule::Str("cpp17", 5);
jule::Bool _20dc789b0_SHADOWING = false;
jule::Bool _20dc78b36_TRANSPILATION = false;
jule::Bool _20dc78cac_TEST = false;
jule::Bool _20dc78e33_RC = true;
jule::Bool _20dc79142_SAFETY = true;
jule::Ptr<_210bcdcba_RangeTable> _210b96dd7__L = jule::new_ptr<_210bcdcba_RangeTable>(_210bcdcba_RangeTable(jule::Slice<_210bcd380_Range16>({_210bcd380_Range16(65LLU,90LLU,1LLU),_210bcd380_Range16(97LLU,122LLU,1LLU),_210bcd380_Range16(170LLU,181LLU,11LLU),_210bcd380_Range16(186LLU,192LLU,6LLU),_210bcd380_Range16(193LLU,214LLU,1LLU),_210bcd380_Range16(216LLU,246LLU,1LLU),_210bcd380_Range16(248LLU,705LLU,1LLU),_210bcd380_Range16(710LLU,721LLU,1LLU),_210bcd380_Range16(736LLU,740LLU,1LLU),_210bcd380_Range16(748LLU,750LLU,2LLU),_210bcd380_Range16(880LLU,884LLU,1LLU),_210bcd380_Range16(886LLU,887LLU,1LLU),_210bcd380_Range16(890LLU,893LLU,1LLU),_210bcd380_Range16(895LLU,902LLU,7LLU),_210bcd380_Range16(904LLU,906LLU,1LLU),_210bcd380_Range16(908LLU,910LLU,2LLU),_210bcd380_Range16(911LLU,929LLU,1LLU),_210bcd380_Range16(931LLU,1013LLU,1LLU),_210bcd380_Range16(1015LLU,1153LLU,1LLU),_210bcd380_Range16(1162LLU,1327LLU,1LLU),_210bcd380_Range16(1329LLU,1366LLU,1LLU),_210bcd380_Range16(1369LLU,1376LLU,7LLU),_210bcd380_Range16(1377LLU,1416LLU,1LLU),_210bcd380_Range16(1488LLU,1514LLU,1LLU),_210bcd380_Range16(1519LLU,1522LLU,1LLU),_210bcd380_Range16(1568LLU,1610LLU,1LLU),_210bcd380_Range16(1646LLU,1647LLU,1LLU),_210bcd380_Range16(1649LLU,1747LLU,1LLU),_210bcd380_Range16(1749LLU,1765LLU,16LLU),_210bcd380_Range16(1766LLU,1774LLU,8LLU),_210bcd380_Range16(1775LLU,1786LLU,11LLU),_210bcd380_Range16(1787LLU,1788LLU,1LLU),_210bcd380_Range16(1791LLU,1808LLU,17LLU),_210bcd380_Range16(1810LLU,1839LLU,1LLU),_210bcd380_Range16(1869LLU,1957LLU,1LLU),_210bcd380_Range16(1969LLU,1994LLU,25LLU),_210bcd380_Range16(1995LLU,2026LLU,1LLU),_210bcd380_Range16(2036LLU,2037LLU,1LLU),_210bcd380_Range16(2042LLU,2048LLU,6LLU),_210bcd380_Range16(2049LLU,2069LLU,1LLU),_210bcd380_Range16(2074LLU,2084LLU,10LLU),_210bcd380_Range16(2088LLU,2112LLU,24LLU),_210bcd380_Range16(2113LLU,2136LLU,1LLU),_210bcd380_Range16(2144LLU,2154LLU,1LLU),_210bcd380_Range16(2160LLU,2183LLU,1LLU),_210bcd380_Range16(2185LLU,2190LLU,1LLU),_210bcd380_Range16(2208LLU,2249LLU,1LLU),_210bcd380_Range16(2308LLU,2361LLU,1LLU),_210bcd380_Range16(2365LLU,2384LLU,19LLU),_210bcd380_Range16(2392LLU,2401LLU,1LLU),_210bcd380_Range16(2417LLU,2432LLU,1LLU),_210bcd380_Range16(2437LLU,2444LLU,1LLU),_210bcd380_Range16(2447LLU,2448LLU,1LLU),_210bcd380_Range16(2451LLU,2472LLU,1LLU),_210bcd380_Range16(2474LLU,2480LLU,1LLU),_210bcd380_Range16(2482LLU,2486LLU,4LLU),_210bcd380_Range16(2487LLU,2489LLU,1LLU),_210bcd380_Range16(2493LLU,2510LLU,17LLU),_210bcd380_Range16(2524LLU,2525LLU,1LLU),_210bcd380_Range16(2527LLU,2529LLU,1LLU),_210bcd380_Range16(2544LLU,2545LLU,1LLU),_210bcd380_Range16(2556LLU,2565LLU,9LLU),_210bcd380_Range16(2566LLU,2570LLU,1LLU),_210bcd380_Range16(2575LLU,2576LLU,1LLU),_210bcd380_Range16(2579LLU,2600LLU,1LLU),_210bcd380_Range16(2602LLU,2608LLU,1LLU),_210bcd380_Range16(2610LLU,2611LLU,1LLU),_210bcd380_Range16(2613LLU,2614LLU,1LLU),_210bcd380_Range16(2616LLU,2617LLU,1LLU),_210bcd380_Range16(2649LLU,2652LLU,1LLU),_210bcd380_Range16(2654LLU,2674LLU,20LLU),_210bcd380_Range16(2675LLU,2676LLU,1LLU),_210bcd380_Range16(2693LLU,2701LLU,1LLU),_210bcd380_Range16(2703LLU,2705LLU,1LLU),_210bcd380_Range16(2707LLU,2728LLU,1LLU),_210bcd380_Range16(2730LLU,2736LLU,1LLU),_210bcd380_Range16(2738LLU,2739LLU,1LLU),_210bcd380_Range16(2741LLU,2745LLU,1LLU),_210bcd380_Range16(2749LLU,2768LLU,19LLU),_210bcd380_Range16(2784LLU,2785LLU,1LLU),_210bcd380_Range16(2809LLU,2821LLU,12LLU),_210bcd380_Range16(2822LLU,2828LLU,1LLU),_210bcd380_Range16(2831LLU,2832LLU,1LLU),_210bcd380_Range16(2835LLU,2856LLU,1LLU),_210bcd380_Range16(2858LLU,2864LLU,1LLU),_210bcd380_Range16(2866LLU,2867LLU,1LLU),_210bcd380_Range16(2869LLU,2873LLU,1LLU),_210bcd380_Range16(2877LLU,2908LLU,31LLU),_210bcd380_Range16(2909LLU,2911LLU,2LLU),_210bcd380_Range16(2912LLU,2913LLU,1LLU),_210bcd380_Range16(2929LLU,2947LLU,18LLU),_210bcd380_Range16(2949LLU,2954LLU,1LLU),_210bcd380_Range16(2958LLU,2960LLU,1LLU),_210bcd380_Range16(2962LLU,2965LLU,1LLU),_210bcd380_Range16(2969LLU,2970LLU,1LLU),_210bcd380_Range16(2972LLU,2974LLU,2LLU),_210bcd380_Range16(2975LLU,2979LLU,4LLU),_210bcd380_Range16(2980LLU,2984LLU,4LLU),_210bcd380_Range16(2985LLU,2986LLU,1LLU),_210bcd380_Range16(2990LLU,3001LLU,1LLU),_210bcd380_Range16(3024LLU,3077LLU,53LLU),_210bcd380_Range16(3078LLU,3084LLU,1LLU),_210bcd380_Range16(3086LLU,3088LLU,1LLU),_210bcd380_Range16(3090LLU,3112LLU,1LLU),_210bcd380_Range16(3114LLU,3129LLU,1LLU),_210bcd380_Range16(3133LLU,3160LLU,27LLU),_210bcd380_Range16(3161LLU,3162LLU,1LLU),_210bcd380_Range16(3165LLU,3168LLU,3LLU),_210bcd380_Range16(3169LLU,3200LLU,31LLU),_210bcd380_Range16(3205LLU,3212LLU,1LLU),_210bcd380_Range16(3214LLU,3216LLU,1LLU),_210bcd380_Range16(3218LLU,3240LLU,1LLU),_210bcd380_Range16(3242LLU,3251LLU,1LLU),_210bcd380_Range16(3253LLU,3257LLU,1LLU),_210bcd380_Range16(3261LLU,3293LLU,32LLU),_210bcd380_Range16(3294LLU,3296LLU,2LLU),_210bcd380_Range16(3297LLU,3313LLU,16LLU),_210bcd380_Range16(3314LLU,3332LLU,18LLU),_210bcd380_Range16(3333LLU,3340LLU,1LLU),_210bcd380_Range16(3342LLU,3344LLU,1LLU),_210bcd380_Range16(3346LLU,3386LLU,1LLU),_210bcd380_Range16(3389LLU,3406LLU,17LLU),_210bcd380_Range16(3412LLU,3414LLU,1LLU),_210bcd380_Range16(3423LLU,3425LLU,1LLU),_210bcd380_Range16(3450LLU,3455LLU,1LLU),_210bcd380_Range16(3461LLU,3478LLU,1LLU),_210bcd380_Range16(3482LLU,3505LLU,1LLU),_210bcd380_Range16(3507LLU,3515LLU,1LLU),_210bcd380_Range16(3517LLU,3520LLU,3LLU),_210bcd380_Range16(3521LLU,3526LLU,1LLU),_210bcd380_Range16(3585LLU,3632LLU,1LLU),_210bcd380_Range16(3634LLU,3635LLU,1LLU),_210bcd380_Range16(3648LLU,3654LLU,1LLU),_210bcd380_Range16(3713LLU,3714LLU,1LLU),_210bcd380_Range16(3716LLU,3718LLU,2LLU),_210bcd380_Range16(3719LLU,3722LLU,1LLU),_210bcd380_Range16(3724LLU,3747LLU,1LLU),_210bcd380_Range16(3749LLU,3751LLU,2LLU),_210bcd380_Range16(3752LLU,3760LLU,1LLU),_210bcd380_Range16(3762LLU,3763LLU,1LLU),_210bcd380_Range16(3773LLU,3776LLU,3LLU),_210bcd380_Range16(3777LLU,3780LLU,1LLU),_210bcd380_Range16(3782LLU,3804LLU,22LLU),_210bcd380_Range16(3805LLU,3807LLU,1LLU),_210bcd380_Range16(3840LLU,3904LLU,64LLU),_210bcd380_Range16(3905LLU,3911LLU,1LLU),_210bcd380_Range16(3913LLU,3948LLU,1LLU),_210bcd380_Range16(3976LLU,3980LLU,1LLU),_210bcd380_Range16(4096LLU,4138LLU,1LLU),_210bcd380_Range16(4159LLU,4176LLU,17LLU),_210bcd380_Range16(4177LLU,4181LLU,1LLU),_210bcd380_Range16(4186LLU,4189LLU,1LLU),_210bcd380_Range16(4193LLU,4197LLU,4LLU),_210bcd380_Range16(4198LLU,4206LLU,8LLU),_210bcd380_Range16(4207LLU,4208LLU,1LLU),_210bcd380_Range16(4213LLU,4225LLU,1LLU),_210bcd380_Range16(4238LLU,4256LLU,18LLU),_210bcd380_Range16(4257LLU,4293LLU,1LLU),_210bcd380_Range16(4295LLU,4301LLU,6LLU),_210bcd380_Range16(4304LLU,4346LLU,1LLU),_210bcd380_Range16(4348LLU,4680LLU,1LLU),_210bcd380_Range16(4682LLU,4685LLU,1LLU),_210bcd380_Range16(4688LLU,4694LLU,1LLU),_210bcd380_Range16(4696LLU,4698LLU,2LLU),_210bcd380_Range16(4699LLU,4701LLU,1LLU),_210bcd380_Range16(4704LLU,4744LLU,1LLU),_210bcd380_Range16(4746LLU,4749LLU,1LLU),_210bcd380_Range16(4752LLU,4784LLU,1LLU),_210bcd380_Range16(4786LLU,4789LLU,1LLU),_210bcd380_Range16(4792LLU,4798LLU,1LLU),_210bcd380_Range16(4800LLU,4802LLU,2LLU),_210bcd380_Range16(4803LLU,4805LLU,1LLU),_210bcd380_Range16(4808LLU,4822LLU,1LLU),_210bcd380_Range16(4824LLU,4880LLU,1LLU),_210bcd380_Range16(4882LLU,4885LLU,1LLU),_210bcd380_Range16(4888LLU,4954LLU,1LLU),_210bcd380_Range16(4992LLU,5007LLU,1LLU),_210bcd380_Range16(5024LLU,5109LLU,1LLU),_210bcd380_Range16(5112LLU,5117LLU,1LLU),_210bcd380_Range16(5121LLU,5740LLU,1LLU),_210bcd380_Range16(5743LLU,5759LLU,1LLU),_210bcd380_Range16(5761LLU,5786LLU,1LLU),_210bcd380_Range16(5792LLU,5866LLU,1LLU),_210bcd380_Range16(5873LLU,5880LLU,1LLU),_210bcd380_Range16(5888LLU,5905LLU,1LLU),_210bcd380_Range16(5919LLU,5937LLU,1LLU),_210bcd380_Range16(5952LLU,5969LLU,1LLU),_210bcd380_Range16(5984LLU,5996LLU,1LLU),_210bcd380_Range16(5998LLU,6000LLU,1LLU),_210bcd380_Range16(6016LLU,6067LLU,1LLU),_210bcd380_Range16(6103LLU,6108LLU,5LLU),_210bcd380_Range16(6176LLU,6264LLU,1LLU),_210bcd380_Range16(6272LLU,6276LLU,1LLU),_210bcd380_Range16(6279LLU,6312LLU,1LLU),_210bcd380_Range16(6314LLU,6320LLU,6LLU),_210bcd380_Range16(6321LLU,6389LLU,1LLU),_210bcd380_Range16(6400LLU,6430LLU,1LLU),_210bcd380_Range16(6480LLU,6509LLU,1LLU),_210bcd380_Range16(6512LLU,6516LLU,1LLU),_210bcd380_Range16(6528LLU,6571LLU,1LLU),_210bcd380_Range16(6576LLU,6601LLU,1LLU),_210bcd380_Range16(6656LLU,6678LLU,1LLU),_210bcd380_Range16(6688LLU,6740LLU,1LLU),_210bcd380_Range16(6823LLU,6917LLU,94LLU),_210bcd380_Range16(6918LLU,6963LLU,1LLU),_210bcd380_Range16(6981LLU,6988LLU,1LLU),_210bcd380_Range16(7043LLU,7072LLU,1LLU),_210bcd380_Range16(7086LLU,7087LLU,1LLU),_210bcd380_Range16(7098LLU,7141LLU,1LLU),_210bcd380_Range16(7168LLU,7203LLU,1LLU),_210bcd380_Range16(7245LLU,7247LLU,1LLU),_210bcd380_Range16(7258LLU,7293LLU,1LLU),_210bcd380_Range16(7296LLU,7304LLU,1LLU),_210bcd380_Range16(7312LLU,7354LLU,1LLU),_210bcd380_Range16(7357LLU,7359LLU,1LLU),_210bcd380_Range16(7401LLU,7404LLU,1LLU),_210bcd380_Range16(7406LLU,7411LLU,1LLU),_210bcd380_Range16(7413LLU,7414LLU,1LLU),_210bcd380_Range16(7418LLU,7424LLU,6LLU),_210bcd380_Range16(7425LLU,7615LLU,1LLU),_210bcd380_Range16(7680LLU,7957LLU,1LLU),_210bcd380_Range16(7960LLU,7965LLU,1LLU),_210bcd380_Range16(7968LLU,8005LLU,1LLU),_210bcd380_Range16(8008LLU,8013LLU,1LLU),_210bcd380_Range16(8016LLU,8023LLU,1LLU),_210bcd380_Range16(8025LLU,8031LLU,2LLU),_210bcd380_Range16(8032LLU,8061LLU,1LLU),_210bcd380_Range16(8064LLU,8116LLU,1LLU),_210bcd380_Range16(8118LLU,8124LLU,1LLU),_210bcd380_Range16(8126LLU,8130LLU,4LLU),_210bcd380_Range16(8131LLU,8132LLU,1LLU),_210bcd380_Range16(8134LLU,8140LLU,1LLU),_210bcd380_Range16(8144LLU,8147LLU,1LLU),_210bcd380_Range16(8150LLU,8155LLU,1LLU),_210bcd380_Range16(8160LLU,8172LLU,1LLU),_210bcd380_Range16(8178LLU,8180LLU,1LLU),_210bcd380_Range16(8182LLU,8188LLU,1LLU),_210bcd380_Range16(8305LLU,8319LLU,14LLU),_210bcd380_Range16(8336LLU,8348LLU,1LLU),_210bcd380_Range16(8450LLU,8455LLU,5LLU),_210bcd380_Range16(8458LLU,8467LLU,1LLU),_210bcd380_Range16(8469LLU,8473LLU,4LLU),_210bcd380_Range16(8474LLU,8477LLU,1LLU),_210bcd380_Range16(8484LLU,8490LLU,2LLU),_210bcd380_Range16(8491LLU,8493LLU,1LLU),_210bcd380_Range16(8495LLU,8505LLU,1LLU),_210bcd380_Range16(8508LLU,8511LLU,1LLU),_210bcd380_Range16(8517LLU,8521LLU,1LLU),_210bcd380_Range16(8526LLU,8579LLU,53LLU),_210bcd380_Range16(8580LLU,11264LLU,2684LLU),_210bcd380_Range16(11265LLU,11492LLU,1LLU),_210bcd380_Range16(11499LLU,11502LLU,1LLU),_210bcd380_Range16(11506LLU,11507LLU,1LLU),_210bcd380_Range16(11520LLU,11557LLU,1LLU),_210bcd380_Range16(11559LLU,11565LLU,6LLU),_210bcd380_Range16(11568LLU,11623LLU,1LLU),_210bcd380_Range16(11631LLU,11648LLU,17LLU),_210bcd380_Range16(11649LLU,11670LLU,1LLU),_210bcd380_Range16(11680LLU,11686LLU,1LLU),_210bcd380_Range16(11688LLU,11694LLU,1LLU),_210bcd380_Range16(11696LLU,11702LLU,1LLU),_210bcd380_Range16(11704LLU,11710LLU,1LLU),_210bcd380_Range16(11712LLU,11718LLU,1LLU),_210bcd380_Range16(11720LLU,11726LLU,1LLU),_210bcd380_Range16(11728LLU,11734LLU,1LLU),_210bcd380_Range16(11736LLU,11742LLU,1LLU),_210bcd380_Range16(11823LLU,12293LLU,470LLU),_210bcd380_Range16(12294LLU,12337LLU,43LLU),_210bcd380_Range16(12338LLU,12341LLU,1LLU),_210bcd380_Range16(12347LLU,12348LLU,1LLU),_210bcd380_Range16(12353LLU,12438LLU,1LLU),_210bcd380_Range16(12445LLU,12447LLU,1LLU),_210bcd380_Range16(12449LLU,12538LLU,1LLU),_210bcd380_Range16(12540LLU,12543LLU,1LLU),_210bcd380_Range16(12549LLU,12591LLU,1LLU),_210bcd380_Range16(12593LLU,12686LLU,1LLU),_210bcd380_Range16(12704LLU,12735LLU,1LLU),_210bcd380_Range16(12784LLU,12799LLU,1LLU),_210bcd380_Range16(13312LLU,19903LLU,1LLU),_210bcd380_Range16(19968LLU,42124LLU,1LLU),_210bcd380_Range16(42192LLU,42237LLU,1LLU),_210bcd380_Range16(42240LLU,42508LLU,1LLU),_210bcd380_Range16(42512LLU,42527LLU,1LLU),_210bcd380_Range16(42538LLU,42539LLU,1LLU),_210bcd380_Range16(42560LLU,42606LLU,1LLU),_210bcd380_Range16(42623LLU,42653LLU,1LLU),_210bcd380_Range16(42656LLU,42725LLU,1LLU),_210bcd380_Range16(42775LLU,42783LLU,1LLU),_210bcd380_Range16(42786LLU,42888LLU,1LLU),_210bcd380_Range16(42891LLU,42954LLU,1LLU),_210bcd380_Range16(42960LLU,42961LLU,1LLU),_210bcd380_Range16(42963LLU,42965LLU,2LLU),_210bcd380_Range16(42966LLU,42969LLU,1LLU),_210bcd380_Range16(42994LLU,43009LLU,1LLU),_210bcd380_Range16(43011LLU,43013LLU,1LLU),_210bcd380_Range16(43015LLU,43018LLU,1LLU),_210bcd380_Range16(43020LLU,43042LLU,1LLU),_210bcd380_Range16(43072LLU,43123LLU,1LLU),_210bcd380_Range16(43138LLU,43187LLU,1LLU),_210bcd380_Range16(43250LLU,43255LLU,1LLU),_210bcd380_Range16(43259LLU,43261LLU,2LLU),_210bcd380_Range16(43262LLU,43274LLU,12LLU),_210bcd380_Range16(43275LLU,43301LLU,1LLU),_210bcd380_Range16(43312LLU,43334LLU,1LLU),_210bcd380_Range16(43360LLU,43388LLU,1LLU),_210bcd380_Range16(43396LLU,43442LLU,1LLU),_210bcd380_Range16(43471LLU,43488LLU,17LLU),_210bcd380_Range16(43489LLU,43492LLU,1LLU),_210bcd380_Range16(43494LLU,43503LLU,1LLU),_210bcd380_Range16(43514LLU,43518LLU,1LLU),_210bcd380_Range16(43520LLU,43560LLU,1LLU),_210bcd380_Range16(43584LLU,43586LLU,1LLU),_210bcd380_Range16(43588LLU,43595LLU,1LLU),_210bcd380_Range16(43616LLU,43638LLU,1LLU),_210bcd380_Range16(43642LLU,43646LLU,4LLU),_210bcd380_Range16(43647LLU,43695LLU,1LLU),_210bcd380_Range16(43697LLU,43701LLU,4LLU),_210bcd380_Range16(43702LLU,43705LLU,3LLU),_210bcd380_Range16(43706LLU,43709LLU,1LLU),_210bcd380_Range16(43712LLU,43714LLU,2LLU),_210bcd380_Range16(43739LLU,43741LLU,1LLU),_210bcd380_Range16(43744LLU,43754LLU,1LLU),_210bcd380_Range16(43762LLU,43764LLU,1LLU),_210bcd380_Range16(43777LLU,43782LLU,1LLU),_210bcd380_Range16(43785LLU,43790LLU,1LLU),_210bcd380_Range16(43793LLU,43798LLU,1LLU),_210bcd380_Range16(43808LLU,43814LLU,1LLU),_210bcd380_Range16(43816LLU,43822LLU,1LLU),_210bcd380_Range16(43824LLU,43866LLU,1LLU),_210bcd380_Range16(43868LLU,43881LLU,1LLU),_210bcd380_Range16(43888LLU,44002LLU,1LLU),_210bcd380_Range16(44032LLU,55203LLU,1LLU),_210bcd380_Range16(55216LLU,55238LLU,1LLU),_210bcd380_Range16(55243LLU,55291LLU,1LLU),_210bcd380_Range16(63744LLU,64109LLU,1LLU),_210bcd380_Range16(64112LLU,64217LLU,1LLU),_210bcd380_Range16(64256LLU,64262LLU,1LLU),_210bcd380_Range16(64275LLU,64279LLU,1LLU),_210bcd380_Range16(64285LLU,64287LLU,2LLU),_210bcd380_Range16(64288LLU,64296LLU,1LLU),_210bcd380_Range16(64298LLU,64310LLU,1LLU),_210bcd380_Range16(64312LLU,64316LLU,1LLU),_210bcd380_Range16(64318LLU,64320LLU,2LLU),_210bcd380_Range16(64321LLU,64323LLU,2LLU),_210bcd380_Range16(64324LLU,64326LLU,2LLU),_210bcd380_Range16(64327LLU,64433LLU,1LLU),_210bcd380_Range16(64467LLU,64829LLU,1LLU),_210bcd380_Range16(64848LLU,64911LLU,1LLU),_210bcd380_Range16(64914LLU,64967LLU,1LLU),_210bcd380_Range16(65008LLU,65019LLU,1LLU),_210bcd380_Range16(65136LLU,65140LLU,1LLU),_210bcd380_Range16(65142LLU,65276LLU,1LLU),_210bcd380_Range16(65313LLU,65338LLU,1LLU),_210bcd380_Range16(65345LLU,65370LLU,1LLU),_210bcd380_Range16(65382LLU,65470LLU,1LLU),_210bcd380_Range16(65474LLU,65479LLU,1LLU),_210bcd380_Range16(65482LLU,65487LLU,1LLU),_210bcd380_Range16(65490LLU,65495LLU,1LLU),_210bcd380_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_210bcd847_Range32>({_210bcd847_Range32(65536LLU,65547LLU,1LLU),_210bcd847_Range32(65549LLU,65574LLU,1LLU),_210bcd847_Range32(65576LLU,65594LLU,1LLU),_210bcd847_Range32(65596LLU,65597LLU,1LLU),_210bcd847_Range32(65599LLU,65613LLU,1LLU),_210bcd847_Range32(65616LLU,65629LLU,1LLU),_210bcd847_Range32(65664LLU,65786LLU,1LLU),_210bcd847_Range32(66176LLU,66204LLU,1LLU),_210bcd847_Range32(66208LLU,66256LLU,1LLU),_210bcd847_Range32(66304LLU,66335LLU,1LLU),_210bcd847_Range32(66349LLU,66368LLU,1LLU),_210bcd847_Range32(66370LLU,66377LLU,1LLU),_210bcd847_Range32(66384LLU,66421LLU,1LLU),_210bcd847_Range32(66432LLU,66461LLU,1LLU),_210bcd847_Range32(66464LLU,66499LLU,1LLU),_210bcd847_Range32(66504LLU,66511LLU,1LLU),_210bcd847_Range32(66560LLU,66717LLU,1LLU),_210bcd847_Range32(66736LLU,66771LLU,1LLU),_210bcd847_Range32(66776LLU,66811LLU,1LLU),_210bcd847_Range32(66816LLU,66855LLU,1LLU),_210bcd847_Range32(66864LLU,66915LLU,1LLU),_210bcd847_Range32(66928LLU,66938LLU,1LLU),_210bcd847_Range32(66940LLU,66954LLU,1LLU),_210bcd847_Range32(66956LLU,66962LLU,1LLU),_210bcd847_Range32(66964LLU,66965LLU,1LLU),_210bcd847_Range32(66967LLU,66977LLU,1LLU),_210bcd847_Range32(66979LLU,66993LLU,1LLU),_210bcd847_Range32(66995LLU,67001LLU,1LLU),_210bcd847_Range32(67003LLU,67004LLU,1LLU),_210bcd847_Range32(67072LLU,67382LLU,1LLU),_210bcd847_Range32(67392LLU,67413LLU,1LLU),_210bcd847_Range32(67424LLU,67431LLU,1LLU),_210bcd847_Range32(67456LLU,67461LLU,1LLU),_210bcd847_Range32(67463LLU,67504LLU,1LLU),_210bcd847_Range32(67506LLU,67514LLU,1LLU),_210bcd847_Range32(67584LLU,67589LLU,1LLU),_210bcd847_Range32(67592LLU,67594LLU,2LLU),_210bcd847_Range32(67595LLU,67637LLU,1LLU),_210bcd847_Range32(67639LLU,67640LLU,1LLU),_210bcd847_Range32(67644LLU,67647LLU,3LLU),_210bcd847_Range32(67648LLU,67669LLU,1LLU),_210bcd847_Range32(67680LLU,67702LLU,1LLU),_210bcd847_Range32(67712LLU,67742LLU,1LLU),_210bcd847_Range32(67808LLU,67826LLU,1LLU),_210bcd847_Range32(67828LLU,67829LLU,1LLU),_210bcd847_Range32(67840LLU,67861LLU,1LLU),_210bcd847_Range32(67872LLU,67897LLU,1LLU),_210bcd847_Range32(67968LLU,68023LLU,1LLU),_210bcd847_Range32(68030LLU,68031LLU,1LLU),_210bcd847_Range32(68096LLU,68112LLU,16LLU),_210bcd847_Range32(68113LLU,68115LLU,1LLU),_210bcd847_Range32(68117LLU,68119LLU,1LLU),_210bcd847_Range32(68121LLU,68149LLU,1LLU),_210bcd847_Range32(68192LLU,68220LLU,1LLU),_210bcd847_Range32(68224LLU,68252LLU,1LLU),_210bcd847_Range32(68288LLU,68295LLU,1LLU),_210bcd847_Range32(68297LLU,68324LLU,1LLU),_210bcd847_Range32(68352LLU,68405LLU,1LLU),_210bcd847_Range32(68416LLU,68437LLU,1LLU),_210bcd847_Range32(68448LLU,68466LLU,1LLU),_210bcd847_Range32(68480LLU,68497LLU,1LLU),_210bcd847_Range32(68608LLU,68680LLU,1LLU),_210bcd847_Range32(68736LLU,68786LLU,1LLU),_210bcd847_Range32(68800LLU,68850LLU,1LLU),_210bcd847_Range32(68864LLU,68899LLU,1LLU),_210bcd847_Range32(69248LLU,69289LLU,1LLU),_210bcd847_Range32(69296LLU,69297LLU,1LLU),_210bcd847_Range32(69376LLU,69404LLU,1LLU),_210bcd847_Range32(69415LLU,69424LLU,9LLU),_210bcd847_Range32(69425LLU,69445LLU,1LLU),_210bcd847_Range32(69488LLU,69505LLU,1LLU),_210bcd847_Range32(69552LLU,69572LLU,1LLU),_210bcd847_Range32(69600LLU,69622LLU,1LLU),_210bcd847_Range32(69635LLU,69687LLU,1LLU),_210bcd847_Range32(69745LLU,69746LLU,1LLU),_210bcd847_Range32(69749LLU,69763LLU,14LLU),_210bcd847_Range32(69764LLU,69807LLU,1LLU),_210bcd847_Range32(69840LLU,69864LLU,1LLU),_210bcd847_Range32(69891LLU,69926LLU,1LLU),_210bcd847_Range32(69956LLU,69959LLU,3LLU),_210bcd847_Range32(69968LLU,70002LLU,1LLU),_210bcd847_Range32(70006LLU,70019LLU,13LLU),_210bcd847_Range32(70020LLU,70066LLU,1LLU),_210bcd847_Range32(70081LLU,70084LLU,1LLU),_210bcd847_Range32(70106LLU,70108LLU,2LLU),_210bcd847_Range32(70144LLU,70161LLU,1LLU),_210bcd847_Range32(70163LLU,70187LLU,1LLU),_210bcd847_Range32(70207LLU,70208LLU,1LLU),_210bcd847_Range32(70272LLU,70278LLU,1LLU),_210bcd847_Range32(70280LLU,70282LLU,2LLU),_210bcd847_Range32(70283LLU,70285LLU,1LLU),_210bcd847_Range32(70287LLU,70301LLU,1LLU),_210bcd847_Range32(70303LLU,70312LLU,1LLU),_210bcd847_Range32(70320LLU,70366LLU,1LLU),_210bcd847_Range32(70405LLU,70412LLU,1LLU),_210bcd847_Range32(70415LLU,70416LLU,1LLU),_210bcd847_Range32(70419LLU,70440LLU,1LLU),_210bcd847_Range32(70442LLU,70448LLU,1LLU),_210bcd847_Range32(70450LLU,70451LLU,1LLU),_210bcd847_Range32(70453LLU,70457LLU,1LLU),_210bcd847_Range32(70461LLU,70480LLU,19LLU),_210bcd847_Range32(70493LLU,70497LLU,1LLU),_210bcd847_Range32(70656LLU,70708LLU,1LLU),_210bcd847_Range32(70727LLU,70730LLU,1LLU),_210bcd847_Range32(70751LLU,70753LLU,1LLU),_210bcd847_Range32(70784LLU,70831LLU,1LLU),_210bcd847_Range32(70852LLU,70853LLU,1LLU),_210bcd847_Range32(70855LLU,71040LLU,185LLU),_210bcd847_Range32(71041LLU,71086LLU,1LLU),_210bcd847_Range32(71128LLU,71131LLU,1LLU),_210bcd847_Range32(71168LLU,71215LLU,1LLU),_210bcd847_Range32(71236LLU,71296LLU,60LLU),_210bcd847_Range32(71297LLU,71338LLU,1LLU),_210bcd847_Range32(71352LLU,71424LLU,72LLU),_210bcd847_Range32(71425LLU,71450LLU,1LLU),_210bcd847_Range32(71488LLU,71494LLU,1LLU),_210bcd847_Range32(71680LLU,71723LLU,1LLU),_210bcd847_Range32(71840LLU,71903LLU,1LLU),_210bcd847_Range32(71935LLU,71942LLU,1LLU),_210bcd847_Range32(71945LLU,71948LLU,3LLU),_210bcd847_Range32(71949LLU,71955LLU,1LLU),_210bcd847_Range32(71957LLU,71958LLU,1LLU),_210bcd847_Range32(71960LLU,71983LLU,1LLU),_210bcd847_Range32(71999LLU,72001LLU,2LLU),_210bcd847_Range32(72096LLU,72103LLU,1LLU),_210bcd847_Range32(72106LLU,72144LLU,1LLU),_210bcd847_Range32(72161LLU,72163LLU,2LLU),_210bcd847_Range32(72192LLU,72203LLU,11LLU),_210bcd847_Range32(72204LLU,72242LLU,1LLU),_210bcd847_Range32(72250LLU,72272LLU,22LLU),_210bcd847_Range32(72284LLU,72329LLU,1LLU),_210bcd847_Range32(72349LLU,72368LLU,19LLU),_210bcd847_Range32(72369LLU,72440LLU,1LLU),_210bcd847_Range32(72704LLU,72712LLU,1LLU),_210bcd847_Range32(72714LLU,72750LLU,1LLU),_210bcd847_Range32(72768LLU,72818LLU,50LLU),_210bcd847_Range32(72819LLU,72847LLU,1LLU),_210bcd847_Range32(72960LLU,72966LLU,1LLU),_210bcd847_Range32(72968LLU,72969LLU,1LLU),_210bcd847_Range32(72971LLU,73008LLU,1LLU),_210bcd847_Range32(73030LLU,73056LLU,26LLU),_210bcd847_Range32(73057LLU,73061LLU,1LLU),_210bcd847_Range32(73063LLU,73064LLU,1LLU),_210bcd847_Range32(73066LLU,73097LLU,1LLU),_210bcd847_Range32(73112LLU,73440LLU,328LLU),_210bcd847_Range32(73441LLU,73458LLU,1LLU),_210bcd847_Range32(73474LLU,73476LLU,2LLU),_210bcd847_Range32(73477LLU,73488LLU,1LLU),_210bcd847_Range32(73490LLU,73523LLU,1LLU),_210bcd847_Range32(73648LLU,73728LLU,80LLU),_210bcd847_Range32(73729LLU,74649LLU,1LLU),_210bcd847_Range32(74880LLU,75075LLU,1LLU),_210bcd847_Range32(77712LLU,77808LLU,1LLU),_210bcd847_Range32(77824LLU,78895LLU,1LLU),_210bcd847_Range32(78913LLU,78918LLU,1LLU),_210bcd847_Range32(82944LLU,83526LLU,1LLU),_210bcd847_Range32(92160LLU,92728LLU,1LLU),_210bcd847_Range32(92736LLU,92766LLU,1LLU),_210bcd847_Range32(92784LLU,92862LLU,1LLU),_210bcd847_Range32(92880LLU,92909LLU,1LLU),_210bcd847_Range32(92928LLU,92975LLU,1LLU),_210bcd847_Range32(92992LLU,92995LLU,1LLU),_210bcd847_Range32(93027LLU,93047LLU,1LLU),_210bcd847_Range32(93053LLU,93071LLU,1LLU),_210bcd847_Range32(93760LLU,93823LLU,1LLU),_210bcd847_Range32(93952LLU,94026LLU,1LLU),_210bcd847_Range32(94032LLU,94099LLU,67LLU),_210bcd847_Range32(94100LLU,94111LLU,1LLU),_210bcd847_Range32(94176LLU,94177LLU,1LLU),_210bcd847_Range32(94179LLU,94208LLU,29LLU),_210bcd847_Range32(94209LLU,100343LLU,1LLU),_210bcd847_Range32(100352LLU,101589LLU,1LLU),_210bcd847_Range32(101632LLU,101640LLU,1LLU),_210bcd847_Range32(110576LLU,110579LLU,1LLU),_210bcd847_Range32(110581LLU,110587LLU,1LLU),_210bcd847_Range32(110589LLU,110590LLU,1LLU),_210bcd847_Range32(110592LLU,110882LLU,1LLU),_210bcd847_Range32(110898LLU,110928LLU,30LLU),_210bcd847_Range32(110929LLU,110930LLU,1LLU),_210bcd847_Range32(110933LLU,110948LLU,15LLU),_210bcd847_Range32(110949LLU,110951LLU,1LLU),_210bcd847_Range32(110960LLU,111355LLU,1LLU),_210bcd847_Range32(113664LLU,113770LLU,1LLU),_210bcd847_Range32(113776LLU,113788LLU,1LLU),_210bcd847_Range32(113792LLU,113800LLU,1LLU),_210bcd847_Range32(113808LLU,113817LLU,1LLU),_210bcd847_Range32(119808LLU,119892LLU,1LLU),_210bcd847_Range32(119894LLU,119964LLU,1LLU),_210bcd847_Range32(119966LLU,119967LLU,1LLU),_210bcd847_Range32(119970LLU,119973LLU,3LLU),_210bcd847_Range32(119974LLU,119977LLU,3LLU),_210bcd847_Range32(119978LLU,119980LLU,1LLU),_210bcd847_Range32(119982LLU,119993LLU,1LLU),_210bcd847_Range32(119995LLU,119997LLU,2LLU),_210bcd847_Range32(119998LLU,120003LLU,1LLU),_210bcd847_Range32(120005LLU,120069LLU,1LLU),_210bcd847_Range32(120071LLU,120074LLU,1LLU),_210bcd847_Range32(120077LLU,120084LLU,1LLU),_210bcd847_Range32(120086LLU,120092LLU,1LLU),_210bcd847_Range32(120094LLU,120121LLU,1LLU),_210bcd847_Range32(120123LLU,120126LLU,1LLU),_210bcd847_Range32(120128LLU,120132LLU,1LLU),_210bcd847_Range32(120134LLU,120138LLU,4LLU),_210bcd847_Range32(120139LLU,120144LLU,1LLU),_210bcd847_Range32(120146LLU,120485LLU,1LLU),_210bcd847_Range32(120488LLU,120512LLU,1LLU),_210bcd847_Range32(120514LLU,120538LLU,1LLU),_210bcd847_Range32(120540LLU,120570LLU,1LLU),_210bcd847_Range32(120572LLU,120596LLU,1LLU),_210bcd847_Range32(120598LLU,120628LLU,1LLU),_210bcd847_Range32(120630LLU,120654LLU,1LLU),_210bcd847_Range32(120656LLU,120686LLU,1LLU),_210bcd847_Range32(120688LLU,120712LLU,1LLU),_210bcd847_Range32(120714LLU,120744LLU,1LLU),_210bcd847_Range32(120746LLU,120770LLU,1LLU),_210bcd847_Range32(120772LLU,120779LLU,1LLU),_210bcd847_Range32(122624LLU,122654LLU,1LLU),_210bcd847_Range32(122661LLU,122666LLU,1LLU),_210bcd847_Range32(122928LLU,122989LLU,1LLU),_210bcd847_Range32(123136LLU,123180LLU,1LLU),_210bcd847_Range32(123191LLU,123197LLU,1LLU),_210bcd847_Range32(123214LLU,123536LLU,322LLU),_210bcd847_Range32(123537LLU,123565LLU,1LLU),_210bcd847_Range32(123584LLU,123627LLU,1LLU),_210bcd847_Range32(124112LLU,124139LLU,1LLU),_210bcd847_Range32(124896LLU,124902LLU,1LLU),_210bcd847_Range32(124904LLU,124907LLU,1LLU),_210bcd847_Range32(124909LLU,124910LLU,1LLU),_210bcd847_Range32(124912LLU,124926LLU,1LLU),_210bcd847_Range32(124928LLU,125124LLU,1LLU),_210bcd847_Range32(125184LLU,125251LLU,1LLU),_210bcd847_Range32(125259LLU,126464LLU,1205LLU),_210bcd847_Range32(126465LLU,126467LLU,1LLU),_210bcd847_Range32(126469LLU,126495LLU,1LLU),_210bcd847_Range32(126497LLU,126498LLU,1LLU),_210bcd847_Range32(126500LLU,126503LLU,3LLU),_210bcd847_Range32(126505LLU,126514LLU,1LLU),_210bcd847_Range32(126516LLU,126519LLU,1LLU),_210bcd847_Range32(126521LLU,126523LLU,2LLU),_210bcd847_Range32(126530LLU,126535LLU,5LLU),_210bcd847_Range32(126537LLU,126541LLU,2LLU),_210bcd847_Range32(126542LLU,126543LLU,1LLU),_210bcd847_Range32(126545LLU,126546LLU,1LLU),_210bcd847_Range32(126548LLU,126551LLU,3LLU),_210bcd847_Range32(126553LLU,126561LLU,2LLU),_210bcd847_Range32(126562LLU,126564LLU,2LLU),_210bcd847_Range32(126567LLU,126570LLU,1LLU),_210bcd847_Range32(126572LLU,126578LLU,1LLU),_210bcd847_Range32(126580LLU,126583LLU,1LLU),_210bcd847_Range32(126585LLU,126588LLU,1LLU),_210bcd847_Range32(126590LLU,126592LLU,2LLU),_210bcd847_Range32(126593LLU,126601LLU,1LLU),_210bcd847_Range32(126603LLU,126619LLU,1LLU),_210bcd847_Range32(126625LLU,126627LLU,1LLU),_210bcd847_Range32(126629LLU,126633LLU,1LLU),_210bcd847_Range32(126635LLU,126651LLU,1LLU),_210bcd847_Range32(131072LLU,173791LLU,1LLU),_210bcd847_Range32(173824LLU,177977LLU,1LLU),_210bcd847_Range32(177984LLU,178205LLU,1LLU),_210bcd847_Range32(178208LLU,183969LLU,1LLU),_210bcd847_Range32(183984LLU,191456LLU,1LLU),_210bcd847_Range32(194560LLU,195101LLU,1LLU),_210bcd847_Range32(196608LLU,201546LLU,1LLU),_210bcd847_Range32(201552LLU,205743LLU,1LLU)}),6LL));
jule::Array<jule::Str,4> _210c31d84_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _210c3258d_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _20dcb77ac_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Array<jule::Str,3> _210c42ec7_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
jule::Array<jule::Str,3> _210c431c5_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
jule::Str _210c5359d_PATH_STDLIB = jule::Str();
jule::Str _210c52943_PATH_EXEC = jule::Str();
jule::Str _210c616ee_PATH_WD = jule::Str();
jule::Str _210c618ca_PATH_API = jule::Str();
jule::Array<jule::I32,5> _2110442ea_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _2110443d8_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _2110444c6_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _211044718_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _2110448c2_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_2110ee6e6_KindPair,47> _2110ee9e3_KEYWORDS = jule::Array<_2110ee6e6_KindPair,47>({_2110ee6e6_KindPair(jule::Str("i8", 2),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("i16", 3),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("i32", 3),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("i64", 3),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("u8", 2),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("u16", 3),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("u32", 3),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("u64", 3),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("f32", 3),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("f64", 3),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("uint", 4),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("int", 3),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("uintptr", 7),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("bool", 4),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("str", 3),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("any", 3),static_cast<jule::U64>(1LLU)),_2110ee6e6_KindPair(jule::Str("true", 4),static_cast<jule::U64>(6LLU)),_2110ee6e6_KindPair(jule::Str("false", 5),static_cast<jule::U64>(6LLU)),_2110ee6e6_KindPair(jule::Str("nil", 3),static_cast<jule::U64>(6LLU)),_2110ee6e6_KindPair(jule::Str("const", 5),static_cast<jule::U64>(9LLU)),_2110ee6e6_KindPair(jule::Str("ret", 3),static_cast<jule::U64>(4LLU)),_2110ee6e6_KindPair(jule::Str("type", 4),static_cast<jule::U64>(10LLU)),_2110ee6e6_KindPair(jule::Str("for", 3),static_cast<jule::U64>(12LLU)),_2110ee6e6_KindPair(jule::Str("break", 5),static_cast<jule::U64>(13LLU)),_2110ee6e6_KindPair(jule::Str("continue", 8),static_cast<jule::U64>(14LLU)),_2110ee6e6_KindPair(jule::Str("in", 2),static_cast<jule::U64>(15LLU)),_2110ee6e6_KindPair(jule::Str("if", 2),static_cast<jule::U64>(16LLU)),_2110ee6e6_KindPair(jule::Str("else", 4),static_cast<jule::U64>(17LLU)),_2110ee6e6_KindPair(jule::Str("use", 3),static_cast<jule::U64>(19LLU)),_2110ee6e6_KindPair(jule::Str("pub", 3),static_cast<jule::U64>(21LLU)),_2110ee6e6_KindPair(jule::Str("goto", 4),static_cast<jule::U64>(22LLU)),_2110ee6e6_KindPair(jule::Str("enum", 4),static_cast<jule::U64>(24LLU)),_2110ee6e6_KindPair(jule::Str("struct", 6),static_cast<jule::U64>(25LLU)),_2110ee6e6_KindPair(jule::Str("co", 2),static_cast<jule::U64>(26LLU)),_2110ee6e6_KindPair(jule::Str("match", 5),static_cast<jule::U64>(27LLU)),_2110ee6e6_KindPair(jule::Str("self", 4),static_cast<jule::U64>(28LLU)),_2110ee6e6_KindPair(jule::Str("trait", 5),static_cast<jule::U64>(29LLU)),_2110ee6e6_KindPair(jule::Str("impl", 4),static_cast<jule::U64>(30LLU)),_2110ee6e6_KindPair(jule::Str("cpp", 3),static_cast<jule::U64>(31LLU)),_2110ee6e6_KindPair(jule::Str("fall", 4),static_cast<jule::U64>(32LLU)),_2110ee6e6_KindPair(jule::Str("fn", 2),static_cast<jule::U64>(33LLU)),_2110ee6e6_KindPair(jule::Str("let", 3),static_cast<jule::U64>(34LLU)),_2110ee6e6_KindPair(jule::Str("unsafe", 6),static_cast<jule::U64>(35LLU)),_2110ee6e6_KindPair(jule::Str("mut", 3),static_cast<jule::U64>(36LLU)),_2110ee6e6_KindPair(jule::Str("defer", 5),static_cast<jule::U64>(37LLU)),_2110ee6e6_KindPair(jule::Str("static", 6),static_cast<jule::U64>(38LLU)),_2110ee6e6_KindPair(jule::Str("error", 5),static_cast<jule::U64>(40LLU))});
jule::Array<_2110ee6e6_KindPair,39> _2110eebe1_BASIC_OPS = jule::Array<_2110ee6e6_KindPair,39>({_2110ee6e6_KindPair(jule::Str("::", 2),static_cast<jule::U64>(23LLU)),_2110ee6e6_KindPair(jule::Str(":", 1),static_cast<jule::U64>(11LLU)),_2110ee6e6_KindPair(jule::Str(";", 1),static_cast<jule::U64>(5LLU)),_2110ee6e6_KindPair(jule::Str(",", 1),static_cast<jule::U64>(8LLU)),_2110ee6e6_KindPair(jule::Str("...", 3),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str(".", 1),static_cast<jule::U64>(20LLU)),_2110ee6e6_KindPair(jule::Str("+=", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("-=", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("*=", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("/=", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("%=", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("<<=", 3),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str(">>=", 3),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("^=", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("&=", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("|=", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("==", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("!=", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str(">=", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("<=", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("&&", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("||", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("<<", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str(">>", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("++", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("--", 2),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("+", 1),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("-", 1),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("*", 1),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("/", 1),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("%", 1),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("&", 1),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("|", 1),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("^", 1),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("!", 1),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("<", 1),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str(">", 1),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("=", 1),static_cast<jule::U64>(7LLU)),_2110ee6e6_KindPair(jule::Str("#", 1),static_cast<jule::U64>(39LLU))});
jule::Array<jule::U8,32> _1a82c82eb_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1a82c862b_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1a808a6da_FloatInfo _1a5e44c4a_F32_INFO = _1a808a6da_FloatInfo(23LLU,8LLU,-127LL);
_1a808a6da_FloatInfo _1a5e6dd0c_F64_INFO = _1a808a6da_FloatInfo(52LLU,11LLU,-1023LL);
jule::Array<jule::Array<jule::U64,2>,696> _1a65ec226_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1a6634956_POWTAB = jule::Slice<jule::I64>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1a6667b10_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1a66a560e_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1a66cbd61_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1a83046ac_LeftCheat> _1a7e6ec51_LEFTCHEATS = jule::Slice<_1a83046ac_LeftCheat>({_1a83046ac_LeftCheat(0LL,jule::Str()),_1a83046ac_LeftCheat(1LL,jule::Str("5", 1)),_1a83046ac_LeftCheat(1LL,jule::Str("25", 2)),_1a83046ac_LeftCheat(1LL,jule::Str("125", 3)),_1a83046ac_LeftCheat(2LL,jule::Str("625", 3)),_1a83046ac_LeftCheat(2LL,jule::Str("3125", 4)),_1a83046ac_LeftCheat(2LL,jule::Str("15625", 5)),_1a83046ac_LeftCheat(3LL,jule::Str("78125", 5)),_1a83046ac_LeftCheat(3LL,jule::Str("390625", 6)),_1a83046ac_LeftCheat(3LL,jule::Str("1953125", 7)),_1a83046ac_LeftCheat(4LL,jule::Str("9765625", 7)),_1a83046ac_LeftCheat(4LL,jule::Str("48828125", 8)),_1a83046ac_LeftCheat(4LL,jule::Str("244140625", 9)),_1a83046ac_LeftCheat(4LL,jule::Str("1220703125", 10)),_1a83046ac_LeftCheat(5LL,jule::Str("6103515625", 10)),_1a83046ac_LeftCheat(5LL,jule::Str("30517578125", 11)),_1a83046ac_LeftCheat(5LL,jule::Str("152587890625", 12)),_1a83046ac_LeftCheat(6LL,jule::Str("762939453125", 12)),_1a83046ac_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1a83046ac_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1a83046ac_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1a83046ac_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1a83046ac_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1a83046ac_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1a83046ac_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1a83046ac_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1a83046ac_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1a83046ac_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1a83046ac_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1a83046ac_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1a83046ac_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1a83046ac_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1a83046ac_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1a83046ac_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1a83046ac_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1a83046ac_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1a83046ac_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1a83046ac_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1a83046ac_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1a83046ac_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1a83046ac_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1a83046ac_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1a83046ac_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1a83046ac_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1a83046ac_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1a83046ac_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1a83046ac_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1a83046ac_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1a83046ac_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1a83046ac_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1a83046ac_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1a83046ac_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1a83046ac_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1a83046ac_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1a83046ac_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1a83046ac_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1a83046ac_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1a83046ac_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1a83046ac_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1a83046ac_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1a83046ac_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
jule::I64 _1a8440c8d_BIT_SIZE = 0LL;
jule::Str _1a8440d7b_SYS_INT = jule::Str();
jule::Str _1a8440e69_SYS_UINT = jule::Str();
jule::Slice<jule::Any> _1a85ac217_deads = nullptr;
jule::Slice<jule::Any> _1a85ac305_checking = nullptr;
jule::Any _1a85ac48c_current = nullptr;
jule::Any _1a85ac68a_main_current = nullptr;
jule::Array<jule::U64,12> _1a8d4a19c_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Ptr<_210bcdcba_RangeTable> _210b9ad20_LETTER = _210b96dd7__L;
jule::U64 _20de58ae6_STDIN = _20eab2ed0_get_std_handle(static_cast<jule::U64>(18446744073709551606LLU));
jule::Str _210c62e92_OS = jule::Str("windows", 7);
jule::Str _210c63d2d_ARCH = jule::Str("arm64", 5);
jule::U64 _20ea82a4e_STDOUT = _20eab2ed0_get_std_handle(static_cast<jule::U64>(18446744073709551605LLU));
jule::U64 _20ea8071c_STDERR = _20eab2ed0_get_std_handle(static_cast<jule::U64>(18446744073709551604LLU));
jule::Array<_20eb97070_accept_range,16> _20eb972e5_ACCEPT_RANGES = jule::Array<_20eb97070_accept_range,16>({_20eb97070_accept_range(128LLU,191LLU),_20eb97070_accept_range(160LLU,191LLU),_20eb97070_accept_range(128LLU,159LLU),_20eb97070_accept_range(144LLU,191LLU),_20eb97070_accept_range(128LLU,143LLU)});
jule::Array<jule::Array<jule::Str,2>,5> _210c08135_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Array<jule::U8,256> _210bc9733__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _20eb969ed_FIRST = jule::Array<jule::U8,256>({});





std::ostream &operator<<(std::ostream &_Stream, _20eb97070_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210bcc945_FoldPair _Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210bcce0c_CaseRange _Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210bcd380_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210bcd847_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210bcdcba_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20ec8b9e4_index(_20ec88738_LazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _20ec906a7_append(_20ec88738_LazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		copy((*_self_)._field_buff,static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w)));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _20ec937ba_string(_20ec88738_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,((*_self_)._field_vol_len + (*_self_)._field_w));
	};
	return ((*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _20ec88738_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _20dd9e201_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_20dd9e201_DirEntry>>> static__20ebab6c2_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_20dd9e201_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_20dd9e201_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16_path = _20ea9b54b_utf16_from_str(_1524_path);;
	_WDIR* _1717_dir = _20eab4d06__wopendir((&(_1613_utf16_path[0LL])));;
	if ((_1717_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_20dd9e201_DirEntry>>>(_20dd16245_get_last_fs_error());
	};
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _20eab509d__wreaddir(_1717_dir);;
			if ((_2217_dirent == nullptr)) {
				goto _iter_end_1a958e616;
			};
			jule::Str _2617_name = _20eaa1243_u16_ptr_to_str(((jule::U16*)(_2217_dirent->d_name)));;
			jule::Ptr<_20eac0e77_Status> _2721_stat = ({
				auto except = static__20ebe7b81_of(_20ecb5a51_join(jule::Slice<jule::Str>({_1524_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_20dd9e201_DirEntry>>>(except.error);
				} jule::Ptr<_20eac0e77_Status>();});
			});;
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_20dd9e201_DirEntry>(_20dd9e201_DirEntry(_2617_name,_2721_stat)));;
		}
	_iter_next_1a958e616:;
	}
	_iter_end_1a958e616:;;
	_20eab5345__wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_20dd9e201_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__20ebacbe0_create(jule::Str _4026_path) {
	jule::Slice<jule::U16> _4513_utf16_path = _20ea9b54b_utf16_from_str(_4026_path);;
	if ((!(_20eab47b7_create_directory((&(_4513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_20dd16245_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__20ebbbcba_remove(jule::Str _5426_path) {
	jule::Slice<jule::U16> _5513_utf16_path = _20ea9b54b_utf16_from_str(_5426_path);;
	if ((!(_20eab4a5e_remove_directory((&(_5513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_20dd16245_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _20eac0a9d_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_20eac0c8a_File> static__20dd9dd6b_new(jule::U64 _4523_handle) {
	return jule::new_ptr<_20eac0c8a_File>(_20eac0c8a_File(_4523_handle));
}



inline jule::Exceptional<jule::Ptr<_20eac0c8a_File>> static__20ddc947e_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_20eac0c8a_File>>(jule::Any(),({
		auto except = static__20eb2b4bb_open(_5526_path,((static_cast<jule::I64>(770LL) | 770LL) | 770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_20eac0c8a_File>>(except.error);
		} jule::Ptr<_20eac0c8a_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__20ddd1200_read(jule::Str _6724_path) {
	jule::Ptr<_20eac0e77_Status> _6813_s = ({
		auto except = static__20ebe7b81_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_20eac0e77_Status>();});
	});;
	if ((!(_20dd90dc4_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	};
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_20eac0c8a_File> _7817_f = ({
		auto except = static__20eb2b4bb_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_20eac0c8a_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _20dde78ba_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));;
	jule::I64 _8213_n = ({
		auto except = _20eb30503_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__20ddd48a7_write(jule::Str _9125_path, jule::Slice<jule::U8> _9136_data, jule::I64 _9150_perm) {
	jule::Ptr<_20eac0c8a_File> _9217_f = ({
		auto except = static__20eb2b4bb_open(_9125_path,((static_cast<jule::I64>(769LL) | 769LL) | 769LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_20eac0c8a_File>();});
	});;
	({
		auto except = _20eb29ee2_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _20dde78ba_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _20ddd6249_seek(_20eac0c8a_File* _self_, jule::I64 _10527_offset, jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _20eab903b_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_20dd16245_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _20dde78ba_close(_20eac0c8a_File* _self_) {
	if ((_20eab9756_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_20dd16245_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_20eac0c8a_File>> static__20eb2b4bb_open(jule::Str _2124_path, jule::I64 _2135_flag, jule::I64 _2148_mode) {
	jule::Slice<jule::U16> _2213_utf16_path = _20ea9b54b_utf16_from_str(_2124_path);;
	jule::I64 _2313_handle = _20eab3992__wopen((&(_2213_utf16_path[0LL])),static_cast<jule::I64>(_2135_flag),_2148_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_20eac0c8a_File>>(_20dd16245_get_last_fs_error());
	};
	return jule::Exceptional<jule::Ptr<_20eac0c8a_File>>(jule::Any(),static__20dd9dd6b_new(static_cast<jule::U64>(static_cast<jule::U64>(_2313_handle))));
}



inline jule::VoidExceptional static__20eb7acac_remove(jule::Str _3426_path) {
	jule::Slice<jule::U16> _3513_utf16_path = _20ea9b54b_utf16_from_str(_3426_path);;
	if ((!(_20eab4520_delete_file((&(_3513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_20dd16245_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _20eb29ee2_write(_20eac0c8a_File* _self_, jule::Slice<jule::U8> _4928_buff) {
	jule::I64 _4945_n = jule::I64();
	if ((_4928_buff.len() == 0LL)) {
		_4945_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	if (_20eb9a55c_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16_buff = _20ea9b54b_utf16_from_str(static_cast<jule::Str>(_4928_buff));;
		jule::Bool _5617_ok = _20eab66cb_write_console((*_self_)._field_handle,(&(_5517_utf16_buff[0LL])),static_cast<jule::I64>(_5517_utf16_buff.len()),_4945_n,nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(_20dd16245_get_last_fs_error());
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
	};
	_4945_n=static_cast<jule::I64>(_20eab9b41_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4928_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4928_buff.len()))));
	if ((_4945_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_20dd16245_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_4945_n);
}



inline jule::Exceptional<jule::I64> _20eb30503_read(_20eac0c8a_File* _self_, jule::Slice<jule::U8> _8231_buff) {
	jule::I64 _8248_n = jule::I64();
	if ((_8231_buff.len() == 0LL)) {
		_8248_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	};
	if (_20eb9a55c_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _8821_codepage = jule::Slice<jule::U16>::alloc(_8231_buff.len());;
		jule::Bool _8917_ok = _20eab6c09_read_console((*_self_)._field_handle,(&(_8821_codepage[0LL])),static_cast<jule::I64>(_8231_buff.len()),_8248_n,nullptr);;
		if ((!(_8917_ok))) {
			return jule::Exceptional<jule::I64>(_20dd16245_get_last_fs_error());
		};
		jule::Slice<jule::I32> _9417_runes = _20eab20ab_decode(_8821_codepage.slice(0LL,_8248_n));;
		_8248_n=0LL;
		{
			auto &expr = _9417_runes;
			auto it = expr.begin();
			_iter_begin_1a95add3e:;
			if (it != expr.end()) {
				jule::I32 &_9620_r = *it;
				{
					jule::I64 _9721_size = _20eb9869d_rune_len(_9620_r);;
					if (((_8248_n + _9721_size) > _8231_buff.len())) {
						goto _iter_end_1a95add3e;
					};
					_20eb98a77_encode_rune(_8231_buff.slice(_8248_n),_9620_r);
					_8248_n+=_9721_size;
				}
				_iter_next_1a95add3e:;
				++it;
				goto _iter_begin_1a95add3e;
			}
			_iter_end_1a95add3e:;
		};
		return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
	};
	_8248_n=static_cast<jule::I64>(_20eab9426_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_8231_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_8231_buff.len()))));
	if ((_8248_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_20dd16245_get_last_fs_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_8248_n);
}







std::ostream &operator<<(std::ostream &_Stream, _20eac0c8a_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20dde8cb7_is_dir(_20eac0e77_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _20dd90dc4_is_reg(_20eac0e77_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}



inline jule::Exceptional<jule::Ptr<_20eac0e77_Status>> static__20ebe7b81_of(jule::Str _1222_path) {
	jule::Slice<jule::U16> _1313_utf16_path = _20ea9b54b_utf16_from_str(_1222_path);;
	struct stat _1417_handle = (struct stat){};;
	jule::I64 _1513_code = _20eab35a7_wstat((&(_1313_utf16_path[0LL])),(&(_1417_handle)));;
	if ((_1513_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_20eac0e77_Status>>(jule::Any(),jule::new_ptr<_20eac0e77_Status>(_20eac0e77_Status(static_cast<jule::U64>(static_cast<jule::U64>(_1417_handle.st_mode)),static_cast<jule::U64>(static_cast<jule::U64>(_1417_handle.st_size)))));
	};
	return jule::Exceptional<jule::Ptr<_20eac0e77_Status>>(_20dd16245_get_last_fs_error());
}







std::ostream &operator<<(std::ostream &_Stream, _20eac0e77_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_210c808a5_Cmd> static__210c80cd4_new(jule::Str _2023_path) {
	return jule::new_ptr<_210c808a5_Cmd>(_210c808a5_Cmd(_2023_path,jule::Slice<jule::Str>(),jule::Slice<jule::Str>()));
}



inline jule::Exceptional<jule::I64> _210c8524a_spawn(_210c808a5_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _210c90bd4___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _210c90bd4___spawn(_210c808a5_Cmd* _self_) {
	jule::I64 _5217_pid = 0LL;;
	if (((*_self_)._field_env == nullptr)) {
		_5217_pid=static_cast<jule::I64>(_210c90475_execvp((*_self_)._field_path,(*_self_)._field_args));
	} else {
		_5217_pid=static_cast<jule::I64>(_210c90860_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
	};
	if ((_5217_pid == -1LL)) {
		return jule::Exceptional<jule::I64>(_210c80146_get_last_process_error());
	};
	jule::I64 _6113_status = 0LL;;
	if ((_cwait(((signed*)((&(_6113_status)))),_5217_pid,0LL) == -1LL)) {
		return jule::Exceptional<jule::I64>(_210c80146_get_last_process_error());
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, _210c808a5_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210c3ee2a_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _2110e7623_prec(_2110e7238_Token* _self_) {
	if (((*_self_)._field_id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a965c283:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a965c096:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a965c10c:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a965c173:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a965be20:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1a965b7b0:;
			{
				return 0LLU;
			}
		}
		_match_end_1a965b75a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2110e7238_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2110eca35_is_ok(_2110ec628_File* _self_) {
	({
		auto except = static__20ebe7b81_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::Ptr<_20eac0e77_Status>();});
	});
	return true;
}



inline void _2110eccaa_fill(_2110ec628_File* _self_, jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _2110ed01e_dir(_2110ec628_File* _self_) {
	return _20ec93c93_dir((*_self_)._field_path);
}



inline jule::Str _2110ed283_name(_2110ec628_File* _self_) {
	return _20eca119b_base((*_self_)._field_path);
}



inline jule::U64 _2110ed4e7_addr(_2110ec628_File* _self_) {
	return static_cast<jule::U64>(((jule::U64)((&((*_self_))))));
}



inline jule::Str _2110ed805_get_row(_2110ec628_File* _self_, jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_line_start = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_data[_4717_i] != '\n')) {
				goto _iter_next_1a96687bc;
			};
			(_4517_n)++;
			if ((_4517_n == _4426_row)) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			};
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1a96687bc:;
	}
	_iter_end_1a96687bc:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _2110ec628_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2110ee6e6_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _211105598_push_err(_211105004_Lex* _self_, jule::Str _45827_fmt, jule::Slice<jule::Any> _45840_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_2111001ca_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45827_fmt,jule::Any(_45840_args)));;
}



inline void _2111058b7_push_err_tok(_211105004_Lex* _self_, jule::Ptr<_2110e7238_Token>& _46332_token, jule::Str _46347_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_2111001ca_make_err(_46332_token.get()._field_row,_46332_token.get()._field_column,(*_self_)._field_file,_46347_fmt,jule::Slice<jule::Any>()));;
}



inline void _211105a93_lex(_211105004_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_211107a95_new_line(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::Ptr<_2110e7238_Token> _47321_token = _211108e1a_token(&(*_self_));;
			if ((_47321_token.get()._field_id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1a966d53b:;
	}
	_iter_end_1a966d53b:;;
}



inline jule::Str _211105da1_id(_211105004_Lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I64 _48621_i;;
	std::tie(_48614_r,_48621_i) = _20eb97acb_decode_rune(_48222_ln);
	if (((_48614_r != '_') && (!(_2110ea637_is_letter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I64 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _20eb97acb_decode_rune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_2110eab76_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_2110ea637_is_letter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1a9672485:;
	}
	_iter_end_1a9672485:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _211106115_resume(_211105004_Lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50717_i]);;
			if (_2110ea26e_is_space(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a96768eb:;
						{
							_211107a95_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1a9676ac7:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1a96765aa:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1a96764cd:;
				};
				goto _iter_next_1a9674c18;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_data[_52421_j] == '\n')) {
						goto _iter_end_1a96755a9;
					};
				}
			_iter_next_1a96755a9:;
			}
			_iter_end_1a96755a9:;;
			return (*_self_)._field_file.get()._field_data.slice(_50717_i,_52421_j);
		}
	_iter_next_1a9674c18:;
	}
	_iter_end_1a9674c18:;;
	return nullptr;
}



inline void _21110638a_lex_line_comment(_211105004_Lex* _self_, jule::Ptr<_2110e7238_Token>& _53640_token) {
	jule::I64 _53713_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _54017_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if (((_54017_r == '\n') || (_54017_r == '\r'))) {
				goto _iter_end_1a967959c;
			};
		}
	_iter_next_1a967959c:;
	}
	_iter_end_1a967959c:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53640_token.get()._field_id=static_cast<jule::U64>(18LLU);
		_53640_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53713_start,(*_self_)._field_pos));
	};
}



inline void _211106610_lex_range_comment(_211105004_Lex* _self_, jule::Ptr<_2110e7238_Token>& _55141_token) {
	jule::I64 _55213_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55517_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_55517_r == '\r')) {
				goto _iter_next_1a967ca89;
			};
			if ((_55517_r == '\n')) {
				_211107a95_new_line(&(*_self_));
				goto _iter_next_1a967ca89;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_data.len()) && (_55517_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55141_token.get()._field_id=static_cast<jule::U64>(18LLU);
					_55141_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55213_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1a967ca89:;
	}
	_iter_end_1a967ca89:;;
	_211105598_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _21110691d_num(_211105004_Lex* _self_, jule::Slice<jule::U8>& _57923_txt) {
	jule::Str _57938_lit = jule::Str();
	if ((_57923_txt[0LL] == '_')) {
		_57938_lit = jule::Str();
		return _57938_lit;
	};
	_57938_lit=_2111038d7_hex_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_211103640_octal_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_211102122_binary_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_211101d7a_common_num(_57923_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57938_lit.len();
	return _57938_lit;
}



inline jule::Str _211106c2b_escape_seq(_211105004_Lex* _self_, jule::Slice<jule::U8>& _60130_txt) {
	jule::Str _60217_seq = jule::Str();;
	if ((_60130_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60130_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a9688457:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60130_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a9688853:;
			{
				_60217_seq=_211104014_big_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a9688358:;
			{
				_60217_seq=_2111042de_little_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a968807d:;
			{
				_60217_seq=_211104575_hex_byte_escape(_60130_txt);
			}
		}
		else {
			_case_begin_1a96878b8:;
			{
				_60217_seq=_21110481c_byte_escape(_60130_txt);
			}
		}
		_match_end_1a9687b93:;
	};
	_julec_label_end:;
	if (_60217_seq.empty()) {
		((*_self_)._field_pos)++;
		_211105598_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60217_seq.len();
	return _60217_seq;
}



inline jule::Str _2111070d3_get_rune(_211105004_Lex* _self_, jule::Slice<jule::U8>& _63128_txt, jule::Bool _63141_raw) {
	if (((!(_63141_raw)) && (_63128_txt[0LL] == '\\'))) {
		return _211106c2b_escape_seq(&(*_self_), _63128_txt);
	};
	jule::I32 _63614_r;;
	jule::I64 _63617_n;;
	std::tie(_63614_r,_63617_n) = _20eb97acb_decode_rune(_63128_txt);
	(*_self_)._field_pos+=_63617_n;
	return static_cast<jule::Str>(_63614_r);
}



inline jule::Str _2111073e1_lex_rune(_211105004_Lex* _self_, jule::Slice<jule::U8>& _64128_txt) {
	jule::Str _64217_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64417_n = 0LL;;
	jule::I64 _64517_i = 1LL;;
	for (; (_64517_i < _64128_txt.len()); (_64517_i)++) {
		{
			if ((_64128_txt[_64517_i] == '\r')) {
				goto _iter_next_1a9690a14;
			};
			if ((_64128_txt[_64517_i] == '\n')) {
				_211105598_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_211107a95_new_line(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65717_part = _64128_txt.slice(_64517_i);;
			jule::Str _65817_r = _2111070d3_get_rune(&(*_self_), _65717_part,false);;
			_64217_run+=_65817_r;
			(*_self_)._field_column+=_20eb99748_rune_count_str(_65817_r);
			if ((_65817_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1a9690a14;
			};
			if ((_65817_r.len() > 1LL)) {
				_64517_i+=(_65817_r.len() - 1LL);
			};
			(_64417_n)++;
		}
	_iter_next_1a9690a14:;
	}
	_iter_end_1a9690a14:;;
	if ((_64417_n == 0LL)) {
		_211105598_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64417_n > 1LL)) {
		_211105598_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64217_run;
}



inline jule::Str _211107655_lex_str(_211105004_Lex* _self_) {
	jule::Str _68117_s = jule::Str();;
	jule::U8 _68213_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68413_raw = (_68213_mark == '`');;
	_68117_s+=static_cast<jule::Str>(_68213_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::U8 _68917_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_68917_ch == '\r')) {
				goto _iter_next_1a9696be6;
			};
			if ((_68917_ch == '\n')) {
				_211107a95_new_line(&(*_self_));
				if ((!(_68413_raw))) {
					_211105598_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _70121_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);;
			jule::Str _70217_r = _2111070d3_get_rune(&(*_self_), _70121_part,_68413_raw);;
			_68117_s+=_70217_r;
			(*_self_)._field_column+=_20eb99748_rune_count_str(_70217_r);
			if ((_68917_ch == _68213_mark)) {
				goto _iter_end_1a9696be6;
			};
		}
	_iter_next_1a9696be6:;
	}
	_iter_end_1a9696be6:;;
	return _68117_s;
}



inline jule::Bool _2111078b9_is_first_token_of_line(_211105004_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _211107a95_new_line(_211105004_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _211108090_is_op(_211105004_Lex* _self_, jule::Slice<jule::U8>& _72225_txt, jule::Str _72238_kind, jule::U64 _72249_id, jule::Ptr<_2110e7238_Token>& _72267_t) {
	if ((!(_211100560_bytes_has_prefix(_72225_txt,_72238_kind)))) {
		return false;
	};
	_72267_t.get()._field_kind=_72238_kind;
	_72267_t.get()._field_id=_72249_id;
	(*_self_)._field_pos+=_72238_kind.len();
	return true;
}



inline jule::Bool _211108447_lex_basic_ops(_211105004_Lex* _self_, jule::Slice<jule::U8> _73332_txt, jule::Ptr<_2110e7238_Token>& _73350_tok) {
	{
		auto &expr = _2110eebe1_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1a969e23c:;
		if (it != expr.end()) {
			_2110ee6e6_KindPair &_73416_pair = *it;
			{
				if (_211108090_is_op(&(*_self_), _73332_txt,_73416_pair._field_kind,_73416_pair._field_id,_73350_tok)) {
					return true;
				};
			}
			_iter_next_1a969e23c:;
			++it;
			goto _iter_begin_1a969e23c;
		}
		_iter_end_1a969e23c:;
	};
	return false;
}



inline jule::Bool _2111087ee_lex_id(_211105004_Lex* _self_, jule::Slice<jule::U8>& _74326_txt, jule::Ptr<_2110e7238_Token>& _74344_t) {
	jule::Str _74413_lex = _211105da1_id(&(*_self_), _74326_txt);;
	if (_74413_lex.empty()) {
		return false;
	};
	_74344_t.get()._field_kind=_74413_lex;
	_74344_t.get()._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _211108ba6_lex_num(_211105004_Lex* _self_, jule::Slice<jule::U8>& _75427_txt, jule::Ptr<_2110e7238_Token>& _75445_t) {
	jule::Str _75513_lex = _21110691d_num(&(*_self_), _75427_txt);;
	if (_75513_lex.empty()) {
		return false;
	};
	_75445_t.get()._field_kind=_75513_lex;
	_75445_t.get()._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline jule::Ptr<_2110e7238_Token> _211108e1a_token(_211105004_Lex* _self_) {
	jule::Ptr<_2110e7238_Token> _76717_t = jule::new_ptr<_2110e7238_Token>(_2110e7238_Token((*_self_)._field_file,jule::I64(),jule::I64(),jule::Str(),static_cast<jule::U64>(0LLU)));;
	jule::Slice<jule::U8> _77213_txt = _211106115_resume(&(*_self_));;
	if ((_77213_txt == nullptr)) {
		return _76717_t;
	};
	_76717_t.get()._field_column=(*_self_)._field_column;
	_76717_t.get()._field_row=(*_self_)._field_row;
	{
		
		if (_211108ba6_lex_num(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1a96a60bd:;
			{
				goto _match_end_1a96a53a8;
			}
		}
		else if ((_77213_txt[0LL] == '\'')) {
			_case_begin_1a96a5496:;
			{
				_76717_t.get()._field_kind=_2111073e1_lex_rune(&(*_self_), _77213_txt);
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`'))) {
			_case_begin_1a96a550c:;
			{
				_76717_t.get()._field_kind=_211107655_lex_str(&(*_self_));
				_76717_t.get()._field_id=static_cast<jule::U64>(6LLU);
				return _76717_t;
			}
		}
		else if (_211100560_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1a96a5573:;
			{
				_21110638a_lex_line_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_211100560_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1a96a55d9:;
			{
				_211106610_lex_range_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_211108090_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76717_t) || _211108090_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76717_t) || _211108090_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76717_t) || _211108090_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76717_t) || _211108090_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76717_t) || _211108090_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76717_t) || _211108447_lex_basic_ops(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1a96a6ad5:;
			{
				goto _match_end_1a96a53a8;
			}
		}
		else if (_2111087ee_lex_id(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1a96a6b4b:;
			{
				{
					auto &expr = _2110ee9e3_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1a96ad8bc:;
					if (it != expr.end()) {
						_2110ee6e6_KindPair &_81020_pair = *it;
						{
							if ((_81020_pair._field_kind == _76717_t.get()._field_kind)) {
								_76717_t.get()._field_id=_81020_pair._field_id;
								goto _iter_end_1a96ad8bc;
							};
						}
						_iter_next_1a96ad8bc:;
						++it;
						goto _iter_begin_1a96ad8bc;
					}
					_iter_end_1a96ad8bc:;
				};
			}
		}
		else {
			_case_begin_1a96a540d:;
			{
				jule::I32 _81718_r;;
				jule::I64 _81721_sz;;
				std::tie(_81718_r,_81721_sz) = _20eb97acb_decode_rune(_77213_txt);
				_211105598_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _76717_t;
			}
		}
		_match_end_1a96a53a8:;
	};
	(*_self_)._field_column+=_20eb99748_rune_count_str(_76717_t.get()._field_kind);
	return _76717_t;
}







std::ostream &operator<<(std::ostream &_Stream, _211105004_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210eb3d6e_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e94569_is_decl(_2110cc1c9_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_211110262_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_21110ce74_FnDecl>>() || _match_expr.type_is<jule::Ptr<_2111115a4_StructDecl>>() || _match_expr.type_is<jule::Ptr<_211111bae_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_21110e591_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_211110c46_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_21110eb57_UseDecl>>() || _match_expr.type_is<jule::Ptr<_21110d161_VarDecl>>() || _match_expr.type_is<jule::Ptr<_210e7e620_TypeDecl>>()) {
			_case_begin_1a97339b9:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a9733c0b:;
			{
				return false;
			}
		}
		_match_end_1a9733ba6:;
	};
}



inline jule::Bool _210e855c1_is_directive(_2110cc1c9_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_210eb33e0_Directive>>()) {
			_case_begin_1a9735108:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a9735801:;
			{
				return false;
			}
		}
		_match_end_1a973579b:;
	};
}



inline jule::Bool _210e98eb9_is_impl(_2110cc1c9_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_2111122b9_Impl>>()) {
			_case_begin_1a9735acb:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a973666a:;
			{
				return false;
			}
		}
		_match_end_1a9736615:;
	};
}



inline jule::Bool _210e99b02_is_use_decl(_2110cc1c9_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_21110eb57_UseDecl>>()) {
			_case_begin_1a9736945:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a9737506:;
			{
				return false;
			}
		}
		_match_end_1a97374a1:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2110cc1c9_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210eb33e0_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e7e620_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e9a394_is_prim(_210e7e80c_IdentTypeDecl* _self_) {
	return ((*_self_)._field_token.get()._field_id == static_cast<jule::U64>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _210e7e80c_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e86c54_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e86e41_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e8712d_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e8731a_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e9aecc_is_unsafe(_210e87507_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _210e87507_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210e9c62c_auto_sized(_210e876e4_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _210e876e4_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e878d1_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e87abd_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210e87caa_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "range:" << _Src._field_range << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211079907_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211079ae4_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210ea0861_is_nil(_211109701_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _211109701_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2111098dd_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211109aca_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210ea1103_is_self(_211109cb7_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _211109cb7_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211109ea4_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110a191_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110a37d_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110a56a_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110a757_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110a944_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210ea3a1d_unhandled(_21110ab31_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _210ea5ec6_ignored(_21110ab31_FnCallExpr* _self_) {
	return (((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _21110ab31_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210ea6ee9_is_targeted(_21110ad1d_FieldExprPair* _self_) {
	return ((*_self_)._field_field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21110ad1d_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110b00a_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210ea9073_is_empty(_21110b1e7_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _21110b1e7_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110b3d4_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210eb507e_is_empty(_21110b5c1_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _21110b5c1_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2111094c0_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110bc31_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110be1d_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110c10a_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110c2e7_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110c4d4_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110c6c1_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110c8ad_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110ca9a_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21105e28d_is_self(_21110cc87_ParamDecl* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _2110681ba_is_ref(_21110cc87_ParamDecl* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _21110cc87_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21107aead_is_anon(_21110ce74_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _21110ce74_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110d161_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110d34d_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _211080842_is_inf(_21110d53a_Iter* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21110d53a_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21109cd37_is_while_next(_21110d727_WhileKind* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21110d727_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110d914_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110db01_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110dcdd_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110deca_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110e1b7_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110e3a4_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110e591_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110e77d_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110e96a_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21110eb57_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _210eb6118_auto_expr(_21110ed44_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _21110ed44_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _211110570_default_typed(_211110262_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _211110262_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211110c46_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2111115a4_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211111bae_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _21111262c_is_trait_impl(_2111122b9_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _211112891_is_struct_impl(_2111122b9_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _2111122b9_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21173e7a3_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21173e990_PackageInfo _Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2117865db_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _211787598_stop(_211786e16_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _21178780c_stopped(_211786e16_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _211787a71_finished(_211786e16_ScopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _211787cd5_is_last_st(_211786e16_ScopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _211788104_push_err(_211786e16_ScopeParser* _self_, jule::Ptr<_2110e7238_Token> _18927_token, jule::Str _18942_fmt) {
	_2117a3eee_push_err((*_self_)._field_p.ptr(), _18927_token,_18942_fmt,jule::Slice<jule::Any>());
}



inline void _211788423_push_suggestion(_211786e16_ScopeParser* _self_, jule::Str _19434_fmt, jule::Slice<jule::Any> _19447_args) {
	_2117a431d_push_suggestion((*_self_)._field_p.ptr(), _19434_fmt,jule::Any(_19447_args));
}



inline void _211788698_insert_as_next(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _19838_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_2117865db_Stmt>(_2117865db_Stmt(_19838_tokens,jule::Bool()));
}



inline jule::Ptr<_2117865db_Stmt> _21178890c_next(_211786e16_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_21110ca9a_ScopeTree> _211788cb4_build_scope(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _20835_tokens, jule::Ptr<_2110e7238_Token> _20857_end) {
	jule::Ptr<_21110ca9a_ScopeTree> _20917_s = _211785486_new_scope();;
	_20917_s.get()._field_parent=(*_self_)._field_s;
	_20917_s.get()._field_end=_20857_end;
	_211786e16_ScopeParser _21217_ssp = _211786e16_ScopeParser((*_self_)._field_p,jule::Ptr<_21110ca9a_ScopeTree>(),jule::Slice<jule::Ptr<_2117865db_Stmt>>(),jule::I64());;
	_211792938_build(&_21217_ssp, _20835_tokens,_20917_s);
	return _20917_s;
}



inline jule::Any _2117890c2_build_var_st(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _21936_tokens) {
	jule::Ptr<_21110d161_VarDecl> _22017_v = _2117a6a6d_build_var((*_self_)._field_p, _21936_tokens);;
	_22017_v.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_22017_v);
}



inline jule::Any _2117893d0_build_ret_st(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _22535_tokens) {
	jule::Ptr<_21110d34d_RetSt> _22617_st = jule::new_ptr<_21110d34d_RetSt>(_21110d34d_RetSt(_22535_tokens[0LL],jule::Ptr<_210e87caa_Expr>()));;
	if ((_22535_tokens.len() > 1LL)) {
		_22535_tokens=_22535_tokens.slice(1LL);
		_22617_st.get()._field_expr=_2117a462b_build_expr((*_self_)._field_p, _22535_tokens);
	};
	return jule::Any(_22617_st);
}



inline jule::Any _2117896dd_build_while_next_iter(_211786e16_ScopeParser* _self_, jule::Ptr<_2117865db_Stmt>& _23645_s) {
	jule::Ptr<_21110d53a_Iter> _23717_it = jule::new_ptr<_21110d53a_Iter>(_21110d53a_Iter(_23645_s.get()._field_tokens[0LL],jule::Any(),jule::Ptr<_21110ca9a_ScopeTree>()));;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _24017_tokens = _23645_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_21110d727_WhileKind> _24117_kind = jule::new_ptr<_21110d727_WhileKind>(_21110d727_WhileKind());;
	if ((_24017_tokens.len() > 0LL)) {
		_24117_kind.get()._field_expr=_2117a462b_build_expr((*_self_)._field_p, _24017_tokens);
	};
	if (_211787cd5_is_last_st(&(*_self_))) {
		_211788104_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24017_tokens=_21178890c_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _25317_st_tokens = _211793e34_get_block_expr(_24017_tokens);;
	if ((_25317_st_tokens.len() > 0LL)) {
		jule::Ptr<_2117865db_Stmt> _25521_stmt = jule::new_ptr<_2117865db_Stmt>(_2117865db_Stmt(_25317_st_tokens,_23645_s.get()._field_terminated));;
		_24117_kind.get()._field_next_token=_25317_st_tokens[0LL];
		_24117_kind.get()._field_next=jule::Any(_211792619_build_st(&(*_self_), _25521_stmt));
	};
	jule::I64 _26317_i = _25317_st_tokens.len();;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _26417_block_tokens = _2117a1bab_range(_26317_i,jule::Str("{", 1),jule::Str("}", 1),_24017_tokens);;
	if ((_26417_block_tokens == nullptr)) {
		_211787598_stop(&(*_self_));
		_211788104_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("body is not exist", 17));
		_211788423_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26317_i < _24017_tokens.len())) {
		_211788104_push_err(&(*_self_), _24017_tokens[_26317_i],jule::Str("invalid syntax", 14));
	};
	_23717_it.get()._field_scope=_211788cb4_build_scope(&(*_self_), _26417_block_tokens,_24017_tokens[(_26317_i - 1LL)]);
	_23717_it.get()._field_kind=jule::Any(_24117_kind);
	return jule::Any(_23717_it);
}



inline jule::Ptr<_21110d727_WhileKind> _2117899eb_build_while_iter_kind(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _28145_tokens) {
	return jule::new_ptr<_21110d727_WhileKind>(_21110d727_WhileKind(_2117a462b_build_expr((*_self_)._field_p, _28145_tokens),jule::Any(),jule::Ptr<_2110e7238_Token>()));
}



inline jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _211789d4d_get_range_kind_keys_tokens(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _28750_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _28818_vars;;
	jule::Slice<_210c3ee2a_Log> _28824_errs;;
	std::tie(_28818_vars,_28824_errs) = _2117a2382_parts(_28750_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_28824_errs);
	return _28818_vars;
}



inline jule::Ptr<_21110d161_VarDecl> _21178a14a_build_range_kind_key(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _29344_tokens) {
	if ((_29344_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_21110d161_VarDecl> _29717_key = jule::new_ptr<_21110d161_VarDecl>(_21110d161_VarDecl(jule::Ptr<_21110ca9a_ScopeTree>(),_29344_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_210eb33e0_Directive>>(),jule::Ptr<_210e7e620_TypeDecl>(),jule::Ptr<_210e87caa_Expr>()));;
	if ((_29717_key.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_29717_key.get()._field_mutable=true;
		if ((_29344_tokens.len() == 1LL)) {
			_211788104_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		};
		_29717_key.get()._field_token=_29344_tokens[1LL];
	} else if ((_29344_tokens.len() > 1LL)) {
		_211788104_push_err(&(*_self_), _29344_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_29717_key.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_211788104_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		_211788423_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_29717_key.get()._field_ident=_29717_key.get()._field_token.get()._field_kind;
	return _29717_key;
}



inline jule::Slice<jule::Ptr<_21110d161_VarDecl>> _21178a458_build_range_kind_keys(_211786e16_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>>& _31845_parts) {
	jule::Slice<jule::Ptr<_21110d161_VarDecl>> _31917_keys = nullptr;;
	{
		auto &expr = _31845_parts;
		auto it = expr.begin();
		_iter_begin_1a97a7015:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _32021_tokens = *it;
			{
				_31917_keys = jule::alloc_for_append(_31917_keys,1);_31917_keys.__push(_21178a14a_build_range_kind_key(&(*_self_), _32021_tokens));;
			}
			_iter_next_1a97a7015:;
			++it;
			goto _iter_begin_1a97a7015;
		}
		_iter_end_1a97a7015:;
	};
	return _31917_keys;
}



inline void _21178a7bb_setup_range_kind_keys_plain(_211786e16_ScopeParser* _self_, jule::Ptr<_21110d914_RangeKind>& _32651_rng, jule::Slice<jule::Ptr<_2110e7238_Token>>& _32673_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _32717_key_tokens = _211789d4d_get_range_kind_keys_tokens(&(*_self_), _32673_tokens);;
	if ((_32717_key_tokens.len() == 0LL)) {
		return;;
	};
	if ((_32717_key_tokens.len() > 2LL)) {
		_211788104_push_err(&(*_self_), _32651_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_21110d161_VarDecl>> _33417_keys = _21178a458_build_range_kind_keys(&(*_self_), _32717_key_tokens);;
	_32651_rng.get()._field_key_a=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		_32651_rng.get()._field_key_b=_33417_keys[1LL];
	};
}



inline void _21178ab1d_setup_range_kind_keys_explicit(_211786e16_ScopeParser* _self_, jule::Ptr<_21110d914_RangeKind>& _34154_rng, jule::Slice<jule::Ptr<_2110e7238_Token>>& _34176_tokens) {
	jule::I64 _34217_i = 0LL;;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _34317_rang = _2117a1bab_range(_34217_i,jule::Str("(", 1),jule::Str(")", 1),_34176_tokens);;
	if ((_34217_i < _34176_tokens.len())) {
		_211788104_push_err(&(*_self_), _34154_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	};
	_21178a7bb_setup_range_kind_keys_plain(&(*_self_), _34154_rng,_34317_rang);
}



inline void _21178ae2b_setup_range_kind_keys(_211786e16_ScopeParser* _self_, jule::Ptr<_21110d914_RangeKind>& _35045_rng, jule::Slice<jule::Ptr<_2110e7238_Token>>& _35067_tokens) {
	if ((_35067_tokens[0LL].get()._field_id == static_cast<jule::U64>(3LLU))) {
		if ((_35067_tokens[0LL].get()._field_kind != jule::Str("(", 1))) {
			_211788104_push_err(&(*_self_), _35067_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_21178ab1d_setup_range_kind_keys_explicit(&(*_self_), _35045_rng,_35067_tokens);
		return;;
	};
	_21178a7bb_setup_range_kind_keys_plain(&(*_self_), _35045_rng,_35067_tokens);
}



inline jule::Ptr<_21110d914_RangeKind> _21178b37c_build_range_iter_kind(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _36245_var_tokens, jule::Slice<jule::Ptr<_2110e7238_Token>>& _36314_expr_tokens, jule::Ptr<_2110e7238_Token>& _36342_in_token) {
	jule::Ptr<_21110d914_RangeKind> _36417_rng = jule::new_ptr<_21110d914_RangeKind>(_21110d914_RangeKind(_36342_in_token,jule::Ptr<_210e87caa_Expr>(),jule::Ptr<_21110d161_VarDecl>(),jule::Ptr<_21110d161_VarDecl>()));;
	if ((_36314_expr_tokens.len() == 0LL)) {
		_211788104_push_err(&(*_self_), _36417_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36417_rng;
	};
	_36417_rng.get()._field_expr=_2117a462b_build_expr((*_self_)._field_p, _36314_expr_tokens);
	if ((_36245_var_tokens.len() > 0LL)) {
		_21178ae2b_setup_range_kind_keys(&(*_self_), _36417_rng,_36245_var_tokens);
	};
	return _36417_rng;
}



inline jule::Any _21178b734_build_common_iter_kind(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _37846_tokens, jule::Ptr<_2110e7238_Token>& _37865_err_tok) {
	jule::I64 _37917_brace_n = 0LL;;
	{
		auto &expr = _37846_tokens;
		auto it = expr.begin();
		_iter_begin_1a97b54c9:;
		if (it != expr.end()) {
			jule::I64 _38014_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> _38021_tok = *it;
			{
				if ((_38021_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38021_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a97b6761:;
							{
								(_37917_brace_n)++;
								goto _iter_next_1a97b54c9;
							}
						}
						else {
							_case_begin_1a97b6156:;
							{
								(_37917_brace_n)--;
							}
						}
						_match_end_1a97b63a9:;
					};
				};
				if ((_37917_brace_n != 0LL)) {
					goto _iter_next_1a97b54c9;
				};
				{
					auto &_match_expr{ _38021_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1a97b7355:;
						{
							jule::Slice<jule::Ptr<_2110e7238_Token>> _39725_decl_tokens = _37846_tokens.slice(0LL,_38014_i);;
							jule::Slice<jule::Ptr<_2110e7238_Token>> _39825_expr_tokens = _37846_tokens.slice((_38014_i + 1LL));;
							return jule::Any(_21178b37c_build_range_iter_kind(&(*_self_), _39725_decl_tokens,_39825_expr_tokens,_38021_tok));
						}
					}
					_match_end_1a97b7278:;
				};
			}
			_iter_next_1a97b54c9:;
			++it;
			_38014_i++;
			goto _iter_begin_1a97b54c9;
		}
		_iter_end_1a97b54c9:;
	};
	return jule::Any(_2117899eb_build_while_iter_kind(&(*_self_), _37846_tokens));
}



inline jule::Any _21178ba42_build_common_iter(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _40540_tokens) {
	jule::Ptr<_21110d53a_Iter> _40617_it = jule::new_ptr<_21110d53a_Iter>(_21110d53a_Iter(_40540_tokens[0LL],jule::Any(),jule::Ptr<_21110ca9a_ScopeTree>()));;
	_40540_tokens=_40540_tokens.slice(1LL);
	if ((_40540_tokens.len() == 0LL)) {
		_211787598_stop(&(*_self_));
		_211788104_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_211788423_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2110e7238_Token>> _41617_expr_tokens = _211793e34_get_block_expr(_40540_tokens);;
	if ((_41617_expr_tokens.len() > 0LL)) {
		_40617_it.get()._field_kind=jule::Any(_21178b734_build_common_iter_kind(&(*_self_), _41617_expr_tokens,_40617_it.get()._field_token));
	};
	jule::I64 _42017_i = _41617_expr_tokens.len();;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _42117_scope_tokens = _2117a1bab_range(_42017_i,jule::Str("{", 1),jule::Str("}", 1),_40540_tokens);;
	if ((_42117_scope_tokens == nullptr)) {
		_211787598_stop(&(*_self_));
		_211788104_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_211788423_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42017_i < _40540_tokens.len())) {
		_211788104_push_err(&(*_self_), _40540_tokens[_42017_i],jule::Str("invalid syntax", 14));
	};
	_40617_it.get()._field_scope=_211788cb4_build_scope(&(*_self_), _42117_scope_tokens,_40540_tokens[(_42017_i - 1LL)]);
	return jule::Any(_40617_it);
}



inline jule::Any _21178bd50_build_iter_st(_211786e16_ScopeParser* _self_, jule::Ptr<_2117865db_Stmt>& _43537_st) {
	if (_43537_st.get()._field_terminated) {
		return jule::Any(_2117896dd_build_while_next_iter(&(*_self_), _43537_st));
	};
	return jule::Any(_21178ba42_build_common_iter(&(*_self_), _43537_st.get()._field_tokens));
}



inline jule::Any _21178c15d_build_break_st(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _44238_tokens) {
	jule::Ptr<_21110db01_BreakSt> _44317_brk = jule::new_ptr<_21110db01_BreakSt>(_21110db01_BreakSt(_44238_tokens[0LL],jule::Ptr<_2110e7238_Token>()));;
	if ((_44238_tokens.len() > 1LL)) {
		if ((_44238_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_211788104_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			_211788423_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44317_brk.get()._field_label=_44238_tokens[1LL];
			if ((_44238_tokens.len() > 2LL)) {
				_211788104_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return jule::Any(_44317_brk);
}



inline jule::Any _21178c46b_build_cont_st(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _46037_tokens) {
	jule::Ptr<_21110dcdd_ContSt> _46117_cont = jule::new_ptr<_21110dcdd_ContSt>(_21110dcdd_ContSt(_46037_tokens[0LL],jule::Ptr<_2110e7238_Token>()));;
	if ((_46037_tokens.len() > 1LL)) {
		if ((_46037_tokens[1LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_211788104_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			_211788423_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46117_cont.get()._field_label=_46037_tokens[1LL];
			if ((_46037_tokens.len() > 2LL)) {
				_211788104_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return jule::Any(_46117_cont);
}



inline jule::Ptr<_21110deca_If> _21178c779_build_if(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _47832_tokens) {
	jule::Ptr<_21110deca_If> _47917_model = jule::new_ptr<_21110deca_If>(_21110deca_If(_47832_tokens[0LL],jule::Ptr<_210e87caa_Expr>(),jule::Ptr<_21110ca9a_ScopeTree>()));;
	_47832_tokens=_47832_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_2110e7238_Token>> _48317_expr_tokens = _211793e34_get_block_expr(_47832_tokens);;
	jule::I64 _48417_i = 0LL;;
	if ((_48317_expr_tokens.len() == 0LL)) {
		_211788104_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48417_i=static_cast<jule::I64>(_48317_expr_tokens.len());
	};
	jule::Slice<jule::Ptr<_2110e7238_Token>> _49017_scope_tokens = _2117a1bab_range(_48417_i,jule::Str("{", 1),jule::Str("}", 1),_47832_tokens);;
	if ((_49017_scope_tokens == nullptr)) {
		_211787598_stop(&(*_self_));
		_211788104_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("body is not exist", 17));
		_211788423_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2110e7238_Token> _49717_end = _47832_tokens[(_48417_i - 1LL)];;
	if ((_48417_i < _47832_tokens.len())) {
		if ((_47832_tokens[_48417_i].get()._field_id == static_cast<jule::U64>(17LLU))) {
			_47832_tokens=_47832_tokens.slice(_48417_i);
		} else {
			_211788104_push_err(&(*_self_), _47832_tokens[_48417_i],jule::Str("invalid syntax", 14));
			_47832_tokens=nullptr;
		};
	};
	_47917_model.get()._field_expr=_2117a462b_build_expr((*_self_)._field_p, _48317_expr_tokens);
	_47917_model.get()._field_scope=_211788cb4_build_scope(&(*_self_), _49017_scope_tokens,_49717_end);
	return _47917_model;
}



inline jule::Ptr<_21110e1b7_Else> _21178ca87_build_else(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _51134_tokens) {
	jule::Ptr<_21110e1b7_Else> _51217_els = jule::new_ptr<_21110e1b7_Else>(_21110e1b7_Else(_51134_tokens[0LL],jule::Ptr<_21110ca9a_ScopeTree>()));;
	_51134_tokens=_51134_tokens.slice(1LL);
	jule::I64 _51617_i = 0LL;;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _51717_scope_tokens = _2117a1bab_range(_51617_i,jule::Str("{", 1),jule::Str("}", 1),_51134_tokens);;
	if ((_51717_scope_tokens == nullptr)) {
		if ((_51617_i < _51134_tokens.len())) {
			_211788104_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_211787598_stop(&(*_self_));
			_211788104_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("body is not exist", 17));
			_211788423_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51617_i < _51134_tokens.len())) {
		_211788104_push_err(&(*_self_), _51134_tokens[_51617_i],jule::Str("invalid syntax", 14));
	};
	_51217_els.get()._field_scope=_211788cb4_build_scope(&(*_self_), _51717_scope_tokens,_51134_tokens[(_51617_i - 1LL)]);
	return _51217_els;
}



inline jule::Any _21178cd95_build_if_else_chain(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _53542_tokens) {
	jule::Ptr<_21110e3a4_Conditional> _53617_chain = jule::new_ptr<_21110e3a4_Conditional>(_21110e3a4_Conditional(_21178c779_build_if(&(*_self_), _53542_tokens),jule::Slice<jule::Ptr<_21110deca_If>>(),jule::Ptr<_21110e1b7_Else>()));;
	if ((_53617_chain.get()._field_head == nullptr)) {
		return nullptr;
	};
	while ((_53542_tokens.len() != 0LL)) {
		{
			if ((_53542_tokens[0LL].get()._field_id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1a97dbb0a;
			};
			if (((_53542_tokens.len() > 1LL) && (_53542_tokens[1LL].get()._field_id == static_cast<jule::U64>(16LLU)))) {
				_53542_tokens=_53542_tokens.slice(1LL);
				jule::Ptr<_21110deca_If> _54825_elif = _21178c779_build_if(&(*_self_), _53542_tokens);;
				_53617_chain.get()._field_tail = jule::alloc_for_append(_53617_chain.get()._field_tail,1);_53617_chain.get()._field_tail.__push(_54825_elif);;
				goto _iter_next_1a97dbb0a;
			};
			_53617_chain.get()._field_default=_21178ca87_build_else(&(*_self_), _53542_tokens);
			goto _iter_end_1a97dbb0a;
		}
	_iter_next_1a97dbb0a:;
	}
	_iter_end_1a97dbb0a:;;
	return jule::Any(_53617_chain);
}



inline jule::Any _21178d1a3_build_co_call_st(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _55839_tokens) {
	jule::Ptr<_211109aca_CoExpr> _55917_c = jule::new_ptr<_211109aca_CoExpr>(_211109aca_CoExpr(_55839_tokens[0LL],jule::Ptr<_210e87caa_Expr>()));;
	_55839_tokens=_55839_tokens.slice(1LL);
	_55917_c.get()._field_expr=_2117a462b_build_expr((*_self_)._field_p, _55839_tokens);
	return jule::Any(_55917_c);
}



inline jule::Any _21178d4b1_build_goto_st(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _56737_tokens) {
	jule::Ptr<_21110c2e7_GotoSt> _56817_gt = jule::new_ptr<_21110c2e7_GotoSt>(_21110c2e7_GotoSt(_56737_tokens[0LL],jule::Ptr<_2110e7238_Token>()));;
	if ((_56737_tokens.len() == 1LL)) {
		_211788104_push_err(&(*_self_), _56817_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_56737_tokens.len() > 2LL)) {
		_211788104_push_err(&(*_self_), _56737_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_2110e7238_Token> _57717_ident_token = _56737_tokens[1LL];;
	if ((_57717_ident_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_211788104_push_err(&(*_self_), _57717_ident_token,jule::Str("invalid syntax", 14));
		_211788423_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_56817_gt);
	};
	_56817_gt.get()._field_label=_57717_ident_token;
	return jule::Any(_56817_gt);
}



inline jule::Any _21178d7be_build_fall_st(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _58737_tokens) {
	jule::Ptr<_21110c4d4_FallSt> _58817_fll = jule::new_ptr<_21110c4d4_FallSt>(_21110c4d4_FallSt(_58737_tokens[0LL]));;
	if ((_58737_tokens.len() > 1LL)) {
		_211788104_push_err(&(*_self_), _58737_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return jule::Any(_58817_fll);
}



inline jule::Any _21178dacc_build_type_alias_st(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _59743_tokens) {
	jule::Ptr<_21110e591_TypeAliasDecl> _59817_tad = _2117a5c26_build_type_alias_decl((*_self_)._field_p, _59743_tokens);;
	_59817_tad.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_59817_tad);
}



inline void _21178e03e_push_case_expr(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _60337_tokens, jule::Ptr<_2110e7238_Token> _60359_token, jule::Bool _6049_type_match, jule::Slice<jule::Ptr<_210e87caa_Expr>>& _60432_exprs) {
	if ((_60337_tokens.len() == 0LL)) {
		return;;
	};
	if (_6049_type_match) {
		jule::I64 _61021_i = 0LL;;
		jule::Ptr<_210e7e620_TypeDecl> _61122_t;;
		jule::Bool _61125_ok;;
		std::tie(_61122_t,_61125_ok) = _2117a5918_build_type((*_self_)._field_p, _60337_tokens,(&(_61021_i)),true);
		if (_61125_ok) {
			_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(jule::new_ptr<_210e87caa_Expr>(_210e87caa_Expr(_60337_tokens[0LL],jule::Ptr<_2110e7238_Token>(),jule::Bool(),jule::Any(_61122_t))));;
			if ((_61021_i < _60337_tokens.len())) {
				_211788104_push_err(&(*_self_), _60337_tokens[_61021_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(_2117a462b_build_expr((*_self_)._field_p, _60337_tokens));;
}



inline jule::Slice<jule::Ptr<_210e87caa_Expr>> _21178e3e6_build_case_exprs(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _62640_tokens, jule::Bool _62658_type_match) {
	jule::Slice<jule::Ptr<_210e87caa_Expr>> _62717_exprs = jule::Slice<jule::Ptr<_210e87caa_Expr>>::alloc(0LL,1LL);;
	jule::I64 _62917_brace_n = 0LL;;
	jule::I64 _63017_j = 0LL;;
	{
		auto &expr = _62640_tokens;
		auto it = expr.begin();
		_iter_begin_1a980004c:;
		if (it != expr.end()) {
			jule::I64 _63114_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> _63121_tok = *it;
			{
				if ((_63121_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _63121_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1a980126d:;
							{
								(_62917_brace_n)++;
							}
						}
						else {
							_case_begin_1a9800b63:;
							{
								(_62917_brace_n)--;
							}
						}
						_match_end_1a9800db6:;
					};
					goto _iter_next_1a980004c;
				} else if ((_62917_brace_n != 0LL)) {
					goto _iter_next_1a980004c;
				};
				{
					
					if (((_63121_tok.get()._field_id == static_cast<jule::U64>(7LLU)) && (_63121_tok.get()._field_kind == jule::Str("|", 1)))) {
						_case_begin_1a980149e:;
						{
							jule::Slice<jule::Ptr<_2110e7238_Token>> _64721_expr_tokens = _62640_tokens.slice(_63017_j,_63114_i);;
							if ((_64721_expr_tokens.len() == 0LL)) {
								_211788104_push_err(&(*_self_), _63121_tok,jule::Str("expression missing", 18));
							} else {
								_21178e03e_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_63114_i),_63121_tok,_62658_type_match,_62717_exprs);
							};
							_63017_j=static_cast<jule::I64>((_63114_i + 1LL));
						}
					}
					else if ((_63121_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1a9801c1e:;
						{
							_21178e03e_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_63114_i),_63121_tok,_62658_type_match,_62717_exprs);
							_62640_tokens=_62640_tokens.slice((_63114_i + 1LL));
							return _62717_exprs;
						}
					}
					_match_end_1a9800932:;
				};
			}
			_iter_next_1a980004c:;
			++it;
			_63114_i++;
			goto _iter_begin_1a980004c;
		}
		_iter_end_1a980004c:;
	};
	_211788104_push_err(&(*_self_), _62640_tokens[0LL],jule::Str("invalid syntax", 14));
	_62640_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_21110ca9a_ScopeTree> _21178e704_build_case_scope(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _66540_tokens) {
	jule::I64 _66617_n = 0LL;;
	for (;;) {
		{
			jule::I64 _66821_i = 0LL;;
			jule::Slice<jule::Ptr<_2110e7238_Token>> _66922_next;;
			std::tie(_66922_next,std::ignore) = _2117862de_skip_st(_66821_i,_66540_tokens.slice(_66617_n));
			if ((_66922_next.len() == 0LL)) {
				goto _iter_end_1a9806460;
			};
			jule::Ptr<_2110e7238_Token> _67317_tok = _66922_next[0LL];;
			if (((_67317_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_67317_tok.get()._field_kind != jule::Str("|", 1)))) {
				_66617_n+=_66821_i;
				goto _iter_next_1a9806460;
			};
			jule::Slice<jule::Ptr<_2110e7238_Token>> _67821_scope_tokens = _66540_tokens.slice(0LL,_66617_n);;
			jule::Ptr<_21110ca9a_ScopeTree> _67921_scope = _211788cb4_build_scope(&(*_self_), _67821_scope_tokens,_66540_tokens[_66617_n]);;
			_66540_tokens=_66540_tokens.slice(_66617_n);
			return _67921_scope;
		}
	_iter_next_1a9806460:;
	}
	_iter_end_1a9806460:;;
	jule::Ptr<_2110e7238_Token> _68317_end = jule::Ptr<_2110e7238_Token>();;
	if ((_66540_tokens.len() > 0LL)) {
		_68317_end=_66540_tokens[(_66540_tokens.len() - 1LL)];
	};
	jule::Ptr<_21110ca9a_ScopeTree> _68717_scope = _211788cb4_build_scope(&(*_self_), _66540_tokens,_68317_end);;
	_66540_tokens=nullptr;
	return _68717_scope;
}



inline std::tuple<jule::Ptr<_21110e77d_Case>,jule::Bool> _21178eaab_build_case(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _69234_tokens, jule::Bool _69252_type_match) {
	jule::Ptr<_21110e77d_Case> _69317_c = jule::new_ptr<_21110e77d_Case>(_21110e77d_Case(_69234_tokens[0LL],jule::Ptr<_21110ca9a_ScopeTree>(),jule::Slice<jule::Ptr<_210e87caa_Expr>>()));;
	_69234_tokens=_69234_tokens.slice(1LL);
	_69317_c.get()._field_exprs=_21178e3e6_build_case_exprs(&(*_self_), _69234_tokens,_69252_type_match);
	_69317_c.get()._field_scope=_21178e704_build_case_scope(&(*_self_), _69234_tokens);
	jule::Bool _69913_is_default = (_69317_c.get()._field_exprs.len() == 0LL);;
	return std::make_tuple(_69317_c,_69913_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_21110e77d_Case>>,jule::Ptr<_21110e1b7_Else>> _21178ee63_build_cases(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _70334_tokens, jule::Bool _70352_type_match) {
	jule::Slice<jule::Ptr<_21110e77d_Case>> _70417_cases = nullptr;;
	jule::Ptr<_21110e1b7_Else> _70517_def = nullptr;;
	jule::Bool _70617_def_not_last = false;;
	while ((_70334_tokens.len() > 0LL)) {
		{
			jule::Ptr<_2110e7238_Token> _70821_tok = _70334_tokens[0LL];;
			if (((_70821_tok.get()._field_id != static_cast<jule::U64>(7LLU)) || (_70821_tok.get()._field_kind != jule::Str("|", 1)))) {
				_211788104_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1a9810029;
			};
			jule::Ptr<_21110e77d_Case> _71322_c;;
			jule::Bool _71325_is_default;;
			std::tie(_71322_c,_71325_is_default) = _21178eaab_build_case(&(*_self_), _70334_tokens,_70352_type_match);
			if (_71325_is_default) {
				_71322_c.get()._field_token=_70821_tok;
				if ((_70517_def == nullptr)) {
					_70517_def=jule::new_ptr<_21110e1b7_Else>(_21110e1b7_Else(_71322_c.get()._field_token,_71322_c.get()._field_scope));
				} else {
					_211788104_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_70617_def_not_last=(_70617_def_not_last || (_70517_def != nullptr));
				_70417_cases = jule::alloc_for_append(_70417_cases,1);_70417_cases.__push(_71322_c);;
			};
		}
	_iter_next_1a9810029:;
	}
	_iter_end_1a9810029:;;
	if (_70617_def_not_last) {
		_211788104_push_err(&(*_self_), _70517_def.get()._field_token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70417_cases,_70517_def);
}



inline jule::Ptr<_21110e96a_MatchCase> _211790271_build_match_case(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _73739_tokens) {
	jule::Ptr<_21110e96a_MatchCase> _73817_m = jule::new_ptr<_21110e96a_MatchCase>(_21110e96a_MatchCase(_73739_tokens[0LL],jule::Ptr<_2110e7238_Token>(),jule::Bool(),jule::Ptr<_210e87caa_Expr>(),jule::Slice<jule::Ptr<_21110e77d_Case>>(),jule::Ptr<_21110e1b7_Else>()));;
	_73739_tokens=_73739_tokens.slice(1LL);
	if (((_73739_tokens.len() > 0LL) && (_73739_tokens[0LL].get()._field_id == static_cast<jule::U64>(10LLU)))) {
		_73817_m.get()._field_type_match=true;
		_73739_tokens=_73739_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_2110e7238_Token>> _74817_expr_tokens = _211793e34_get_block_expr(_73739_tokens);;
	if ((_74817_expr_tokens.len() > 0LL)) {
		_73817_m.get()._field_expr=_2117a462b_build_expr((*_self_)._field_p, _74817_expr_tokens);
	} else if (_73817_m.get()._field_type_match) {
		_211788104_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("expression missing", 18));
	};
	jule::I64 _75517_i = _74817_expr_tokens.len();;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _75617_block_toks = _2117a1bab_range(_75517_i,jule::Str("{", 1),jule::Str("}", 1),_73739_tokens);;
	if ((_75617_block_toks == nullptr)) {
		_211787598_stop(&(*_self_));
		_211788104_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("body is not exist", 17));
		_211788423_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75517_i < _73739_tokens.len())) {
		_211788104_push_err(&(*_self_), _73739_tokens[_75517_i],jule::Str("invalid syntax", 14));
	};
	_73817_m.get()._field_end=_73739_tokens[(_75517_i - 1LL)];
	std::tie(_73817_m.get()._field_cases,_73817_m.get()._field_default) = _21178ee63_build_cases(&(*_self_), _75617_block_toks,_73817_m.get()._field_type_match);
	return _73817_m;
}



inline jule::Ptr<_21110ca9a_ScopeTree> _21179057e_build_scope_st(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _77037_tokens) {
	jule::Bool _77117_is_unsafe = false;;
	jule::Bool _77217_is_deferred = false;;
	jule::Ptr<_2110e7238_Token> _77317_token = _77037_tokens[0LL];;
	if ((_77317_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_77117_is_unsafe=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_211788104_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77317_token=_77037_tokens[0LL];
		if ((_77317_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
			_77217_is_deferred=true;
			_77037_tokens=_77037_tokens.slice(1LL);
			if ((_77037_tokens.len() == 0LL)) {
				_211788104_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77317_token.get()._field_id == static_cast<jule::U64>(37LLU))) {
		_77217_is_deferred=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_211788104_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I64 _79917_i = 0LL;;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _80017_scope_tokens = _2117a1bab_range(_79917_i,jule::Str("{", 1),jule::Str("}", 1),_77037_tokens);;
	if ((_80017_scope_tokens == nullptr)) {
		_211788104_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_79917_i < _77037_tokens.len())) {
		_211788104_push_err(&(*_self_), _77037_tokens[_79917_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_21110ca9a_ScopeTree> _80717_scope = _211788cb4_build_scope(&(*_self_), _80017_scope_tokens,_77037_tokens[(_79917_i - 1LL)]);;
	_80717_scope.get()._field_unsafety=_77117_is_unsafe;
	_80717_scope.get()._field_deferred=_77217_is_deferred;
	return _80717_scope;
}



inline jule::Ptr<_21110c10a_LabelSt> _21179088c_build_label_st(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _81338_tokens) {
	jule::Ptr<_21110c10a_LabelSt> _81417_lbl = jule::new_ptr<_21110c10a_LabelSt>(_21110c10a_LabelSt(_81338_tokens[0LL],_81338_tokens[0LL].get()._field_kind));;
	if ((_81338_tokens.len() > 2LL)) {
		_81338_tokens=_81338_tokens.slice(2LL);
		_211788698_insert_as_next(&(*_self_), _81338_tokens);
	};
	return _81417_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _211790b9a_build_id_st(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _82835_tokens) {
	jule::Bool _82865_ok = jule::Bool();
	if ((_82835_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_82865_ok);
	};
	jule::Ptr<_2110e7238_Token> _83317_token = _82835_tokens[1LL];;
	{
		auto &_match_expr{ _83317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a9827580:;
			{
				_82865_ok = true;
				return std::make_tuple(jule::Any(_21179088c_build_label_st(&(*_self_), _82835_tokens)),_82865_ok);
			}
		}
		_match_end_1a9827daa:;
	};
	return std::make_tuple(jule::Any(),_82865_ok);
}



inline jule::Ptr<_2117a0061_AssignInfo> _211790ea8_build_assign_info(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _84241_tokens) {
	jule::Ptr<_2117a0061_AssignInfo> _84317_info = jule::new_ptr<_2117a0061_AssignInfo>(_2117a0061_AssignInfo(jule::Slice<jule::Ptr<_2110e7238_Token>>(),jule::Slice<jule::Ptr<_2110e7238_Token>>(),jule::Ptr<_2110e7238_Token>(),true));;
	jule::I64 _84617_brace_n = 0LL;;
	{
		auto &expr = _84241_tokens;
		auto it = expr.begin();
		_iter_begin_1a9829ecd:;
		if (it != expr.end()) {
			jule::I64 _84714_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> _84721_token = *it;
			{
				if ((_84721_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _84721_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a982b2a9:;
							{
								(_84617_brace_n)++;
							}
						}
						else {
							_case_begin_1a982ab9e:;
							{
								(_84617_brace_n)--;
							}
						}
						_match_end_1a982ae02:;
					};
				};
				{
					
					if ((_84617_brace_n > 0LL)) {
						_case_begin_1a982b72c:;
						{
							goto _iter_next_1a9829ecd;
						}
					}
					else if ((_84721_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1a982b793:;
						{
							goto _iter_next_1a9829ecd;
						}
					}
					else if ((!(_2110ebc43_is_assign_op(_84721_token.get()._field_kind)))) {
						_case_begin_1a982b809:;
						{
							goto _iter_next_1a9829ecd;
						}
					}
					_match_end_1a982b4da:;
				};
				_84317_info.get()._field_l=_84241_tokens.slice(0LL,_84714_i);
				if ((_84317_info.get()._field_l.len() == 0LL)) {
					_84317_info.get()._field_ok=false;
				};
				_84317_info.get()._field_setter=_84721_token;
				if (((_84714_i + 1LL) >= _84241_tokens.len())) {
					_84317_info.get()._field_r=nullptr;
					_84317_info.get()._field_ok=_2110eb99b_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind);
					goto _iter_end_1a9829ecd;
				};
				_84317_info.get()._field_r=_84241_tokens.slice((_84714_i + 1LL));
				if (_2110eb99b_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind)) {
					if ((_84317_info.get()._field_r.len() > 0LL)) {
						_211788104_push_err(&(*_self_), _84317_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84317_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1a9829ecd;
			}
			_iter_next_1a9829ecd:;
			++it;
			_84714_i++;
			goto _iter_begin_1a9829ecd;
		}
		_iter_end_1a9829ecd:;
	};
	return _84317_info;
}



inline jule::Ptr<_21110c6c1_AssignLeft> _2117912b6_build_assign_l(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _89038_tokens) {
	jule::Ptr<_21110c6c1_AssignLeft> _89117_l = jule::new_ptr<_21110c6c1_AssignLeft>(_21110c6c1_AssignLeft(_89038_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ptr<_210e87caa_Expr>()));;
	if ((_89038_tokens[0LL].get()._field_id == static_cast<jule::U64>(2LLU))) {
		_89117_l.get()._field_ident=_89117_l.get()._field_token.get()._field_kind;
	};
	_89117_l.get()._field_expr=_2117a462b_build_expr((*_self_)._field_p, _89038_tokens);
	return _89117_l;
}



inline jule::Slice<jule::Ptr<_21110c6c1_AssignLeft>> _2117915c4_build_assign_ls(_211786e16_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>>& _90339_parts) {
	jule::Slice<jule::Ptr<_21110c6c1_AssignLeft>> _90417_lefts = nullptr;;
	{
		auto &expr = _90339_parts;
		auto it = expr.begin();
		_iter_begin_1a9833ee8:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _90521_part = *it;
			{
				jule::Ptr<_21110c6c1_AssignLeft> _90621_l = _2117912b6_build_assign_l(&(*_self_), _90521_part);;
				_90417_lefts = jule::alloc_for_append(_90417_lefts,1);_90417_lefts.__push(_90621_l);;
			}
			_iter_next_1a9833ee8:;
			++it;
			goto _iter_begin_1a9833ee8;
		}
		_iter_end_1a9833ee8:;
	};
	return _90417_lefts;
}



inline std::tuple<jule::Ptr<_21110c8ad_AssignSt>,jule::Bool> _2117918d2_build_plain_assign(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _91342_tokens) {
	jule::Ptr<_2117a0061_AssignInfo> _91417_info = _211790ea8_build_assign_info(&(*_self_), _91342_tokens);;
	if ((!(_91417_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_21110c8ad_AssignSt> _91917_assign = jule::new_ptr<_21110c8ad_AssignSt>(_21110c8ad_AssignSt(jule::Bool(),_91417_info.get()._field_setter,jule::Slice<jule::Ptr<_21110c6c1_AssignLeft>>(),jule::Ptr<_210e87caa_Expr>()));;
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _92318_parts;;
	jule::Slice<_210c3ee2a_Log> _92325_errs;;
	std::tie(_92318_parts,_92325_errs) = _2117a2382_parts(_91417_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_92325_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92325_errs);
		return std::make_tuple(nullptr,false);
	};
	_91917_assign.get()._field_left=_2117915c4_build_assign_ls(&(*_self_), _92318_parts);
	if ((_91417_info.get()._field_r != nullptr)) {
		_91917_assign.get()._field_right=_2117a462b_build_expr((*_self_)._field_p, _91417_info.get()._field_r);
	};
	return std::make_tuple(_91917_assign,true);
}



inline std::tuple<jule::Ptr<_21110c8ad_AssignSt>,jule::Bool> _211791be0_build_decl_assign(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _93740_tokens) {
	if ((_93740_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_93740_tokens=_93740_tokens.slice(1LL);
	jule::Ptr<_2110e7238_Token> _94317_token = _93740_tokens[0LL];;
	if (((_94317_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_94317_token.get()._field_kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_21110c8ad_AssignSt> _94817_assign = jule::new_ptr<_21110c8ad_AssignSt>(_21110c8ad_AssignSt(true,jule::Ptr<_2110e7238_Token>(),jule::Slice<jule::Ptr<_21110c6c1_AssignLeft>>(),jule::Ptr<_210e87caa_Expr>()));;
	jule::I64 _95217_i = 0LL;;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _95317_rang = _2117a1bab_range(_95217_i,jule::Str("(", 1),jule::Str(")", 1),_93740_tokens);;
	if ((_95317_rang == nullptr)) {
		_211788104_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95217_i + 1LL) < _93740_tokens.len())) {
		_94817_assign.get()._field_setter=_93740_tokens[_95217_i];
		(_95217_i)++;
		jule::Slice<jule::Ptr<_2110e7238_Token>> _96021_expr_tokens = _93740_tokens.slice(_95217_i);;
		_94817_assign.get()._field_right=_2117a462b_build_expr((*_self_)._field_p, _96021_expr_tokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _96518_parts;;
	jule::Slice<_210c3ee2a_Log> _96525_errs;;
	std::tie(_96518_parts,_96525_errs) = _2117a2382_parts(_95317_rang,static_cast<jule::U64>(8LLU),true);
	if ((_96525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96525_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96518_parts;
		auto it = expr.begin();
		_iter_begin_1a9840d4b:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _97121_part = *it;
			{
				jule::Bool _97221_is_mut = false;;
				jule::Bool _97321_is_ref = false;;
				_94317_token=_97121_part[0LL];
				if ((_94317_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
					_97221_is_mut=true;
					_97121_part=_97121_part.slice(1LL);
					if ((_97121_part.len() == 0LL)) {
						_211788104_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1a9840d4b;
					};
				};
				if (((_97121_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_97121_part[0LL].get()._field_kind == jule::Str("&", 1)))) {
					_97321_is_ref=true;
					_97121_part=_97121_part.slice(1LL);
					if ((_97121_part.len() == 0LL)) {
						_211788104_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1a9840d4b;
					};
				};
				if ((((_97121_part[0LL].get()._field_id != static_cast<jule::U64>(2LLU)) && (_97121_part[0LL].get()._field_id != static_cast<jule::U64>(3LLU))) && (_97121_part[0LL].get()._field_kind != jule::Str("(", 1)))) {
					_211788104_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1a9840d4b;
				};
				jule::Ptr<_21110c6c1_AssignLeft> _100121_l = _2117912b6_build_assign_l(&(*_self_), _97121_part);;
				_100121_l.get()._field_mutable=_97221_is_mut;
				_100121_l.get()._field_reference=_97321_is_ref;
				_94817_assign.get()._field_left = jule::alloc_for_append(_94817_assign.get()._field_left,1);_94817_assign.get()._field_left.__push(_100121_l);;
			}
			_iter_next_1a9840d4b:;
			++it;
			goto _iter_begin_1a9840d4b;
		}
		_iter_end_1a9840d4b:;
	};
	return std::make_tuple(_94817_assign,true);
}



inline std::tuple<jule::Ptr<_21110c8ad_AssignSt>,jule::Bool> _211791eed_build_assign_st(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _101039_tokens) {
	jule::Ptr<_21110c8ad_AssignSt> _101059_st = jule::Ptr<_21110c8ad_AssignSt>();
	jule::Bool _101074_ok = jule::Bool();
	if ((!(_2117a0407_check_assign_tokens(_101039_tokens)))) {
		_101059_st = nullptr;
		_101074_ok = false;
		return std::make_tuple(_101059_st,_101074_ok);
	};
	{
		auto &_match_expr{ _101039_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a984a10d:;
			{
				std::tie(_101059_st,_101074_ok) = _211791be0_build_decl_assign(&(*_self_), _101039_tokens);
			}
		}
		else {
			_case_begin_1a98495a2:;
			{
				std::tie(_101059_st,_101074_ok) = _2117918d2_build_plain_assign(&(*_self_), _101039_tokens);
			}
		}
		_match_end_1a9849b8a:;
	};
	return std::make_tuple(_101059_st,_101074_ok);
}



inline jule::Any _21179230b_build_use_expr(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _102538_tokens) {
	if ((_102538_tokens.len() == 1LL)) {
		_211788104_push_err(&(*_self_), _102538_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_211079907_UseExpr> _103117_ue = jule::new_ptr<_211079907_UseExpr>(_211079907_UseExpr(_102538_tokens[0LL],jule::Ptr<_210e87caa_Expr>()));;
	_102538_tokens=_102538_tokens.slice(1LL);
	_103117_ue.get()._field_expr=_2117a462b_build_expr((*_self_)._field_p, _102538_tokens);
	return jule::Any(_103117_ue);
}



inline jule::Any _211792619_build_st(_211786e16_ScopeParser* _self_, jule::Ptr<_2117865db_Stmt>& _104032_st) {
	jule::Ptr<_2110e7238_Token> _104117_token = _104032_st.get()._field_tokens[0LL];;
	if ((_104117_token.get()._field_id == static_cast<jule::U64>(2LLU))) {
		jule::Any _104322_s;;
		jule::Bool _104325_ok;;
		std::tie(_104322_s,_104325_ok) = _211790b9a_build_id_st(&(*_self_), _104032_st.get()._field_tokens);
		if (_104325_ok) {
			return jule::Any(_104322_s);
		};
	};
	jule::Ptr<_21110c8ad_AssignSt> _104918_s;;
	jule::Bool _104921_ok;;
	std::tie(_104918_s,_104921_ok) = _211791eed_build_assign_st(&(*_self_), _104032_st.get()._field_tokens);
	if (_104921_ok) {
		return jule::Any(_104918_s);
	};
	{
		auto &_match_expr{ _104117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a9850300:;
			{
				return jule::Any(_21179230b_build_use_expr(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1a9850a09:;
			{
				return jule::Any(_2117890c2_build_var_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1a98505db:;
			{
				return jule::Any(_2117893d0_build_ret_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1a9850652:;
			{
				return jule::Any(_21178bd50_build_iter_st(&(*_self_), _104032_st));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1a98506b8:;
			{
				return jule::Any(_21178c15d_build_break_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1a9850d39:;
			{
				return jule::Any(_21178c46b_build_cont_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1a9850da0:;
			{
				return jule::Any(_21178cd95_build_if_else_chain(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1a9850e16:;
			{
				return jule::Any(_21178d1a3_build_co_call_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1a9850e7c:;
			{
				return jule::Any(_21178d4b1_build_goto_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a9850ee3:;
			{
				return jule::Any(_21178d7be_build_fall_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a9851059:;
			{
				return jule::Any(_21178dacc_build_type_alias_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1a98510c0:;
			{
				return jule::Any(_211790271_build_match_case(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1a9851136:;
			{
				return jule::Any(_21179057e_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a985119c:;
			{
				if ((_104117_token.get()._field_kind == jule::Str("{", 1))) {
					return jule::Any(_21179057e_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
				};
			}
		}
		_match_end_1a985092c:;
	};
	jule::Ptr<_210e87caa_Expr> _109017_expr = _2117a462b_build_expr((*_self_)._field_p, _104032_st.get()._field_tokens);;
	if ((_109017_expr != nullptr)) {
		return jule::Any(_109017_expr);
	};
	_211788104_push_err(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _211792938_build(_211786e16_ScopeParser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _109829_tokens, jule::Ptr<_21110ca9a_ScopeTree>& _109852_s) {
	if ((_109852_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_211786982_split_stmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109852_s;
	while (((!(_211787cd5_is_last_st(&(*_self_)))) && (!(_211787a71_finished(&(*_self_)))))) {
		{
			jule::Ptr<_2117865db_Stmt> _110721_st = _21178890c_next(&(*_self_));;
			jule::Any _110821_data = _211792619_build_st(&(*_self_), _110721_st);;
			if ((_110821_data != nullptr)) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_2110cc1c9_Node(_110721_st.get()._field_tokens[0LL],jule::Any(_110821_data)));;
			};
			if (_21178780c_stopped(&(*_self_))) {
				goto _iter_end_1a985a607;
			};
		}
	_iter_next_1a985a607:;
	}
	_iter_end_1a985a607:;;
}







std::ostream &operator<<(std::ostream &_Stream, _211786e16_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2117937d5_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _21179552e_push_err(_211794c37_ExprBuilder* _self_, jule::Ptr<_2110e7238_Token> _21827_token, jule::Str _21842_fmt, jule::Slice<jule::Any> _21855_args) {
	_2117a3eee_push_err((*_self_)._field_p.ptr(), _21827_token,_21842_fmt,jule::Any(_21855_args));
}



inline void _21179584d_push_suggestion(_211794c37_ExprBuilder* _self_, jule::Str _22334_fmt, jule::Slice<jule::Any> _22347_args) {
	_2117a431d_push_suggestion((*_self_)._field_p.ptr(), _22334_fmt,jule::Any(_22347_args));
}



inline jule::Ptr<_211079ae4_TupleExpr> _211795b5b_build_tuple(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>>& _22735_parts) {
	jule::Ptr<_211079ae4_TupleExpr> _22817_tuple = jule::new_ptr<_211079ae4_TupleExpr>(_211079ae4_TupleExpr(jule::Slice<jule::Ptr<_210e87caa_Expr>>::alloc(0LL,_22735_parts.len())));;
	{
		auto &expr = _22735_parts;
		auto it = expr.begin();
		_iter_begin_1a986194e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _23121_part = *it;
			{
				_22817_tuple.get()._field_expr = jule::alloc_for_append(_22817_tuple.get()._field_expr,1);_22817_tuple.get()._field_expr.__push(_21179e615_build_from_tokens(&(*_self_), _23121_part));;
			}
			_iter_next_1a986194e:;
			++it;
			goto _iter_begin_1a986194e;
		}
		_iter_end_1a986194e:;
	};
	return _22817_tuple;
}



inline jule::Ptr<_211109701_LitExpr> _211795e69_build_lit(_211794c37_ExprBuilder* _self_, jule::Ptr<_2110e7238_Token> _23728_token) {
	return jule::new_ptr<_211109701_LitExpr>(_211109701_LitExpr(_23728_token,_23728_token.get()._field_kind));
}



inline jule::Ptr<_210e7e620_TypeDecl> _211796277_build_primitive_type(_211794c37_ExprBuilder* _self_, jule::Ptr<_2110e7238_Token>& _24440_token) {
	return _2117b356e_build_prim_type(_24440_token);
}



inline jule::Any _211796585_build_single(_211794c37_ExprBuilder* _self_, jule::Ptr<_2110e7238_Token> _24835_token) {
	{
		auto &_match_expr{ _24835_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a9864b94:;
			{
				return jule::Any(_211795e69_build_lit(&(*_self_), _24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a9864c2c:;
			{
				if ((_24835_token.get()._field_kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_21110a191_VariadicExpr>(_21110a191_VariadicExpr(_24835_token,jule::Ptr<_210e87caa_Expr>())));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a9864c93:;
			{
				return jule::Any(_21179475e_build_ident_expr(_24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a9864d09:;
			{
				return jule::Any(_211796277_build_primitive_type(&(*_self_), _24835_token));
			}
		}
		_match_end_1a9864ad9:;
	};
	_21179552e_push_err(&(*_self_), _24835_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_211109cb7_IdentExpr> _211796893_build_cpp_linked_ident(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _26946_tokens) {
	if ((_26946_tokens[0LL].get()._field_id != static_cast<jule::U64>(31LLU))) {
		return nullptr;
	} else if ((_26946_tokens[1LL].get()._field_id != static_cast<jule::U64>(20LLU))) {
		_21179552e_push_err(&(*_self_), _26946_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21179584d_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2110e7238_Token> _27717_token = _26946_tokens[2LL];;
	if ((_27717_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_21179552e_push_err(&(*_self_), _26946_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21179584d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_211109cb7_IdentExpr> _28317_expr = _21179475e_build_ident_expr(_27717_token);;
	_28317_expr.get()._field_cpp_linked=true;
	return _28317_expr;
}



inline jule::Ptr<_211109ea4_UnaryExpr> _211796ba1_build_unary(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _28834_tokens) {
	jule::Ptr<_2110e7238_Token> _28917_op = _28834_tokens[0LL];;
	if ((_28834_tokens.len() == 1LL)) {
		_21179552e_push_err(&(*_self_), _28917_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_2110e7975_is_unary_op(_28917_op.get()._field_kind)))) {
		_21179552e_push_err(&(*_self_), _28917_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>({jule::Any(_28917_op.get()._field_kind)}));
		return nullptr;
	};
	_28834_tokens=_28834_tokens.slice(1LL);
	return jule::new_ptr<_211109ea4_UnaryExpr>(_211109ea4_UnaryExpr(_28917_op,_21179e615_build_from_tokens(&(*_self_), _28834_tokens)));
}



inline jule::Ptr<_21110a757_SubIdentExpr> _211796eae_build_obj_sub_ident(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _30942_tokens) {
	jule::I64 _31017_i = (_30942_tokens.len() - 1LL);;
	jule::Ptr<_2110e7238_Token> _31117_ident_token = _30942_tokens[_31017_i];;
	(_31017_i)--;
	_30942_tokens=_30942_tokens.slice(0LL,_31017_i);
	if ((_30942_tokens.len() == 0LL)) {
		_21179552e_push_err(&(*_self_), _31117_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_21110a757_SubIdentExpr>(_21110a757_SubIdentExpr(jule::Bool(),_21179e615_build_from_tokens(&(*_self_), _30942_tokens),_31117_ident_token));
}



inline jule::Ptr<_21110a56a_NsSelectionExpr> _2117972bc_build_ns_sub_ident(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _32442_tokens) {
	jule::Ptr<_21110a56a_NsSelectionExpr> _32517_ns = jule::new_ptr<_21110a56a_NsSelectionExpr>(_21110a56a_NsSelectionExpr());;
	{
		auto &expr = _32442_tokens;
		auto it = expr.begin();
		_iter_begin_1a9873169:;
		if (it != expr.end()) {
			jule::I64 _32614_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> _32621_token = *it;
			{
				if (((_32614_i & 1LL) == 0LL)) {
					if ((_32621_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
						_21179552e_push_err(&(*_self_), _32621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_21179584d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_32517_ns.get()._field_ns = jule::alloc_for_append(_32517_ns.get()._field_ns,1);_32517_ns.get()._field_ns.__push(_32621_token);;
				} else if ((_32621_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_21179552e_push_err(&(*_self_), _32621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_21179584d_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a9873169:;
			++it;
			_32614_i++;
			goto _iter_begin_1a9873169;
		}
		_iter_end_1a9873169:;
	};
	_32517_ns.get()._field_ident=_32517_ns.get()._field_ns[(_32517_ns.get()._field_ns.len() - 1LL)];
	_32517_ns.get()._field_ns=_32517_ns.get()._field_ns.slice(0LL,(_32517_ns.get()._field_ns.len() - 1LL));
	return _32517_ns;
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117975ca_build_type(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _34334_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Ptr<_210e7e620_TypeDecl> _34518_t;;
	jule::Bool _34521_ok;;
	std::tie(_34518_t,_34521_ok) = _2117a5918_build_type((*_self_)._field_p, _34334_tokens,(&(_34417_i)),false);
	if ((!(_34521_ok))) {
		_21179552e_push_err(&(*_self_), _34334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_34417_i < _34334_tokens.len())) {
		_21179552e_push_err(&(*_self_), _34334_tokens[_34417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _34518_t;
}



inline jule::Any _2117978d8_build_sub_ident(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _35739_tokens) {
	jule::I64 _35813_i = (_35739_tokens.len() - 2LL);;
	jule::Ptr<_2110e7238_Token> _35913_token = _35739_tokens[_35813_i];;
	{
		auto &_match_expr{ _35913_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1a987b408:;
			{
				return jule::Any(_211796eae_build_obj_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a987b925:;
			{
				return jule::Any(_2117972bc_build_ns_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a987b98b:;
			{
				if ((_35913_token.get()._field_kind == jule::Str("]", 1))) {
					return jule::Any(_2117975ca_build_type(&(*_self_), _35739_tokens));
				};
			}
		}
		_match_end_1a987b815:;
	};
	_21179552e_push_err(&(*_self_), _35913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_21110a191_VariadicExpr> _211797be6_build_variadic(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _37537_tokens) {
	jule::Ptr<_2110e7238_Token> _37617_token = _37537_tokens[(_37537_tokens.len() - 1LL)];;
	_37537_tokens=_37537_tokens.slice(0LL,(_37537_tokens.len() - 1LL));
	return jule::new_ptr<_21110a191_VariadicExpr>(_21110a191_VariadicExpr(_37617_token,_21179e615_build_from_tokens(&(*_self_), _37537_tokens)));
}



inline jule::Any _211798004_build_op_right(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _38438_tokens) {
	jule::Ptr<_2110e7238_Token> _38517_token = _38438_tokens[(_38438_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _38517_token.get()._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a9880ee0:;
			{
				_38438_tokens=_38438_tokens.slice(0LL,(_38438_tokens.len() - 1LL));
				jule::Any _38921_d = _21179dee9_build(&(*_self_), _38438_tokens);;
				if ((_38921_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _38921_d };
					
					if (_match_expr.type_is<jule::Ptr<_21110ab31_FnCallExpr>>()) {
						_case_begin_1a9883377:;
						{
							_38921_d.operator jule::Ptr<_21110ab31_FnCallExpr>().get()._field_exception=jule::new_ptr<_21110ca9a_ScopeTree>(_21110ca9a_ScopeTree(jule::Ptr<_21110ca9a_ScopeTree>(),jule::Bool(),true,jule::Slice<_2110cc1c9_Node>(),jule::Ptr<_2110e7238_Token>()));
							return jule::Any(_38921_d);
						}
					}
					_match_end_1a9883586:;
				};
			}
		}
		_match_end_1a9881793:;
	};
	_21179552e_push_err(&(*_self_), _38517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_210e87caa_Expr> _211798356_build_between_parentheses(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _40548_tokens) {
	if ((_40548_tokens.len() == 2LL)) {
		_21179552e_push_err(&(*_self_), _40548_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_21179584d_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_40548_tokens=_40548_tokens.slice(1LL,(_40548_tokens.len() - 1LL));
	jule::Ptr<_210e87caa_Expr> _41217_expr = _21179e615_build_from_tokens(&(*_self_), _40548_tokens);;
	_41217_expr.get()._field_range=true;
	return _41217_expr;
}



inline jule::Ptr<_21110a37d_CastExpr> _211798653_try_build_cast(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _41738_tokens) {
	jule::I64 _41817_range_n = 0LL;;
	{
		auto &expr = _41738_tokens;
		auto it = expr.begin();
		_iter_begin_1a9887aeb:;
		if (it != expr.end()) {
			jule::I64 _41913_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> _41916_token = *it;
			{
				if ((_41916_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _41916_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a9888cb7:;
							{
								(_41817_range_n)++;
								goto _iter_next_1a9887aeb;
							}
						}
						else {
							_case_begin_1a98886ac:;
							{
								(_41817_range_n)--;
							}
						}
						_match_end_1a9888910:;
					};
				};
				if ((_41817_range_n > 0LL)) {
					goto _iter_next_1a9887aeb;
				} else if (((_41913_i + 1LL) == _41738_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_2110e7238_Token>> _43821_type_tokens = _41738_tokens.slice(0LL,(_41913_i + 1LL));;
				jule::Slice<jule::Ptr<_2110e7238_Token>> _43921_expr_tokens = _41738_tokens.slice((_41913_i + 1LL));;
				if ((_43921_expr_tokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_2110e7238_Token> _44617_tok = _43921_expr_tokens[0LL];;
				if (((_44617_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_44617_tok.get()._field_kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_21110a37d_CastExpr> _45121_cast = jule::new_ptr<_21110a37d_CastExpr>(_21110a37d_CastExpr());;
				if ((_43921_expr_tokens.len() == 2LL)) {
					_21179552e_push_err(&(*_self_), _43921_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_21179584d_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_43821_type_tokens.len() == 2LL)) {
					_21179552e_push_err(&(*_self_), _43821_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_21179584d_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_43821_type_tokens=_43821_type_tokens.slice(1LL,(_43821_type_tokens.len() - 1LL));
					jule::I64 _46525_type_index = 0LL;;
					jule::Ptr<_210e7e620_TypeDecl> _46626_t;;
					jule::Bool _46629_ok;;
					std::tie(_46626_t,_46629_ok) = _2117a5918_build_type((*_self_)._field_p, _43821_type_tokens,(&(_46525_type_index)),true);
					if ((_46629_ok && (_46525_type_index < _43821_type_tokens.len()))) {
						_21179552e_push_err(&(*_self_), _43821_type_tokens[_46525_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_46629_ok))) {
						return _45121_cast;
					};
					_45121_cast.get()._field_kind=_46626_t;
					if ((_43921_expr_tokens.len() > 2LL)) {
						jule::I64 _47629_j = 0LL;;
						_2117a1bab_range(_47629_j,jule::Str("(", 1),jule::Str(")", 1),_43921_expr_tokens);
						if ((_47629_j < _43921_expr_tokens.len())) {
							return nullptr;
						};
						_43921_expr_tokens=_43921_expr_tokens.slice(0LL,_47629_j);
						_45121_cast.get()._field_expr=_21179e615_build_from_tokens(&(*_self_), _43921_expr_tokens);
					};
				};
				return _45121_cast;
			}
			_iter_next_1a9887aeb:;
			++it;
			_41913_i++;
			goto _iter_begin_1a9887aeb;
		}
		_iter_end_1a9887aeb:;
	};
	return nullptr;
}



inline void _211798a1b_push_arg(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_210e87caa_Expr>>& _49132_args, jule::Slice<jule::Ptr<_2110e7238_Token>> _49151_tokens, jule::Ptr<_2110e7238_Token> _49169_err_token) {
	if ((_49151_tokens.len() == 0LL)) {
		_21179552e_push_err(&(*_self_), _49169_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21179584d_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_49132_args = jule::alloc_for_append(_49132_args,1);_49132_args.__push(_21179e615_build_from_tokens(&(*_self_), _49151_tokens));;
}



inline jule::Slice<jule::Ptr<_210e87caa_Expr>> _211798d29_build_args(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _50033_tokens) {
	if ((_50033_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_210e87caa_Expr>> _50617_args = nullptr;;
	jule::I64 _50717_last = 0LL;;
	jule::I64 _50817_range_n = 0LL;;
	_50033_tokens=_50033_tokens.slice(1LL,(_50033_tokens.len() - 1LL));
	{
		auto &expr = _50033_tokens;
		auto it = expr.begin();
		_iter_begin_1a9897831:;
		if (it != expr.end()) {
			jule::I64 _51013_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> _51016_token = *it;
			{
				if ((_51016_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _51016_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a9898ab8:;
							{
								(_50817_range_n)++;
							}
						}
						else {
							_case_begin_1a98984ad:;
							{
								(_50817_range_n)--;
							}
						}
						_match_end_1a9898711:;
					};
				};
				if (((_50817_range_n > 0LL) || (_51016_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1a9897831;
				};
				_211798a1b_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last,_51013_i),_51016_token);
				_50717_last=static_cast<jule::I64>((_51013_i + 1LL));
			}
			_iter_next_1a9897831:;
			++it;
			_51013_i++;
			goto _iter_begin_1a9897831;
		}
		_iter_end_1a9897831:;
	};
	if ((_50717_last < _50033_tokens.len())) {
		if ((_50717_last == 0LL)) {
			if ((_50033_tokens.len() > 0LL)) {
				_211798a1b_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last),_50033_tokens[_50717_last]);
			};
		} else {
			_211798a1b_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last),_50033_tokens[(_50717_last - 1LL)]);
		};
	};
	return _50617_args;
}



inline jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> _211799137_build_call_generics(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _54242_tokens) {
	if ((_54242_tokens.len() == 0LL)) {
		return nullptr;
	};
	_54242_tokens=_54242_tokens.slice(1LL,(_54242_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _54818_parts;;
	jule::Slice<_210c3ee2a_Log> _54825_errs;;
	std::tie(_54818_parts,_54825_errs) = _2117a2382_parts(_54242_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> _54917_generics = jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>::alloc(0LL,_54818_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_54825_errs);
	{
		auto &expr = _54818_parts;
		auto it = expr.begin();
		_iter_begin_1a989e591:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _55121_part = *it;
			{
				if ((_55121_part.len() == 0LL)) {
					goto _iter_next_1a989e591;
				};
				jule::I64 _55521_j = 0LL;;
				jule::Ptr<_210e7e620_TypeDecl> _55622_generic;;
				std::tie(_55622_generic,std::ignore) = _2117a5918_build_type((*_self_)._field_p, _55121_part,(&(_55521_j)),true);
				if ((_55521_j < _55121_part.len())) {
					_21179552e_push_err(&(*_self_), _55121_part[_55521_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_54917_generics = jule::alloc_for_append(_54917_generics,1);_54917_generics.__push(_55622_generic);;
			}
			_iter_next_1a989e591:;
			++it;
			goto _iter_begin_1a989e591;
		}
		_iter_end_1a989e591:;
	};
	return _54917_generics;
}



inline jule::Ptr<_21110ab31_FnCallExpr> _2117994de_build_fn_call(_211794c37_ExprBuilder* _self_, jule::Ptr<_2110e7238_Token>& _56637_token, jule::Ptr<_2117937d5_CallData>& _56657_data) {
	return jule::new_ptr<_21110ab31_FnCallExpr>(_21110ab31_FnCallExpr(_56637_token,_21179e615_build_from_tokens(&(*_self_), _56657_data.get()._field_expr_tokens),_211799137_build_call_generics(&(*_self_), _56657_data.get()._field_generics_tokens),_211798d29_build_args(&(*_self_), _56657_data.get()._field_args_tokens),jule::Ptr<_21110ca9a_ScopeTree>()));
}



inline jule::Any _211799841_build_parentheses_range(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _57547_tokens) {
	jule::Ptr<_2110e7238_Token> _57617_token = _57547_tokens[0LL];;
	{
		auto &_match_expr{ _57617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a98a43ba:;
			{
				{
					auto &_match_expr{ _57617_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a98a5300:;
						{
							jule::Ptr<_21110a37d_CastExpr> _58125_expr = _211798653_try_build_cast(&(*_self_), _57547_tokens);;
							if ((_58125_expr != nullptr)) {
								return jule::Any(_58125_expr);
							};
						}
					}
					_match_end_1a98a5245:;
				};
			}
		}
		_match_end_1a98a49a3:;
	};
	jule::Ptr<_2117937d5_CallData> _58817_data = _211793b48_get_call_data(_57547_tokens);;
	if ((_58817_data.get()._field_expr_tokens.len() == 0LL)) {
		return jule::Any(_211798356_build_between_parentheses(&(*_self_), _58817_data.get()._field_args_tokens));
	};
	return jule::Any(_2117994de_build_fn_call(&(*_self_), _57617_token,_58817_data));
}



inline jule::Ptr<_2111098dd_UnsafeExpr> _211799b3d_build_unsafe_expr(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _59940_tokens) {
	jule::Ptr<_2110e7238_Token> _60017_token = _59940_tokens[0LL];;
	_59940_tokens=_59940_tokens.slice(1LL);
	jule::I64 _60217_i = 0LL;;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _60317_range_tokens = _2117a1bab_range(_60217_i,jule::Str("{", 1),jule::Str("}", 1),_59940_tokens);;
	if ((_60317_range_tokens.len() == 0LL)) {
		_21179552e_push_err(&(*_self_), _59940_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_2111098dd_UnsafeExpr>(_2111098dd_UnsafeExpr(_60017_token,_21179e615_build_from_tokens(&(*_self_), _60317_range_tokens)));
}



inline jule::Ptr<_21110ce74_FnDecl> _211799e4b_build_anon_fn(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _61437_tokens) {
	jule::Ptr<_21110ce74_FnDecl> _61517_f = _2117a9b3c_build_fn((*_self_)._field_p, _61437_tokens,false,false);;
	if ((!(_21107aead_is_anon(_61517_f.ptr())))) {
		_21179552e_push_err(&(*_self_), _61517_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21179584d_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _61517_f;
}



inline jule::Any _21179a259_build_unsafe(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _62336_tokens) {
	{
		auto &_match_expr{ _62336_tokens[1LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a98ae309:;
			{
				return jule::Any(_211799e4b_build_anon_fn(&(*_self_), _62336_tokens));
			}
		}
		else {
			_case_begin_1a98ad6c1:;
			{
				return jule::Any(_211799b3d_build_unsafe_expr(&(*_self_), _62336_tokens));
			}
		}
		_match_end_1a98adabc:;
	};
}



inline void _21179a622_push_range_lit_part(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _63342_part, jule::Ptr<_2110e7238_Token> _6349_error_token, jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>>& _63435_parts) {
	if ((_63342_part.len() == 0LL)) {
		_21179552e_push_err(&(*_self_), _6349_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21179584d_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_63435_parts = jule::alloc_for_append(_63435_parts,1);_63435_parts.__push(_63342_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _21179a974_get_brace_range_lit_expr_parts(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _64453_tokens) {
	if ((_64453_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _65017_parts = nullptr;;
	jule::I64 _65217_last = 0LL;;
	jule::I64 _65317_range_n = 0LL;;
	_64453_tokens=_64453_tokens.slice(1LL,(_64453_tokens.len() - 1LL));
	{
		auto &expr = _64453_tokens;
		auto it = expr.begin();
		_iter_begin_1a98b40ab:;
		if (it != expr.end()) {
			jule::I64 _65513_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> _65516_token = *it;
			{
				if ((_65516_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _65516_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a98b5343:;
							{
								(_65317_range_n)++;
							}
						}
						else {
							_case_begin_1a98b4c38:;
							{
								(_65317_range_n)--;
							}
						}
						_match_end_1a98b4e8b:;
					};
				};
				if (((_65317_range_n > 0LL) || (_65516_token.get()._field_id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1a98b40ab;
				};
				_21179a622_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last,_65513_i),_65516_token,_65017_parts);
				_65217_last=static_cast<jule::I64>((_65513_i + 1LL));
			}
			_iter_next_1a98b40ab:;
			++it;
			_65513_i++;
			goto _iter_begin_1a98b40ab;
		}
		_iter_end_1a98b40ab:;
	};
	if ((_65217_last < _64453_tokens.len())) {
		if ((_65217_last == 0LL)) {
			if ((_64453_tokens.len() > 0LL)) {
				_21179a622_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last),_64453_tokens[_65217_last],_65017_parts);
			};
		} else {
			_21179a622_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last),_64453_tokens[(_65217_last - 1LL)],_65017_parts);
		};
	};
	return _65017_parts;
}



inline jule::Ptr<_21110ad1d_FieldExprPair> _21179ac71_build_field_expr_pair(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _68644_tokens) {
	if (((_68644_tokens.len() - 2LL) == 0LL)) {
		_21179552e_push_err(&(*_self_), _68644_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_21110ad1d_FieldExprPair> _69117_pair = jule::new_ptr<_21110ad1d_FieldExprPair>(_21110ad1d_FieldExprPair(_68644_tokens[0LL],jule::Ptr<_210e87caa_Expr>()));;
	_68644_tokens=_68644_tokens.slice(2LL);
	_69117_pair.get()._field_expr=_21179e615_build_from_tokens(&(*_self_), _68644_tokens);
	return _69117_pair;
}



inline jule::Ptr<_210e87caa_Expr> _21179b07e_build_struct_lit_expr(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _69945_tokens) {
	jule::Ptr<_2110e7238_Token> _70017_token = _69945_tokens[0LL];;
	if (((_70017_token.get()._field_id == static_cast<jule::U64>(2LLU)) && (_69945_tokens.len() > 1LL))) {
		_70017_token=_69945_tokens[1LL];
		if ((_70017_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_210e87caa_Expr>(_210e87caa_Expr(_70017_token,_69945_tokens[(_69945_tokens.len() - 1LL)],jule::Bool(),jule::Any(_21179ac71_build_field_expr_pair(&(*_self_), _69945_tokens))));
		};
	};
	return _21179e615_build_from_tokens(&(*_self_), _69945_tokens);
}



inline jule::Slice<jule::Ptr<_210e87caa_Expr>> _21179b38c_build_struct_lit_exprs(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _71446_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _71517_parts = _21179a974_get_brace_range_lit_expr_parts(&(*_self_), _71446_tokens);;
	if ((_71517_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_210e87caa_Expr>> _72017_pairs = jule::Slice<jule::Ptr<_210e87caa_Expr>>::alloc(0LL,_71517_parts.len());;
	{
		auto &expr = _71517_parts;
		auto it = expr.begin();
		_iter_begin_1a98c09d0:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _72121_part = *it;
			{
				_72017_pairs = jule::alloc_for_append(_72017_pairs,1);_72017_pairs.__push(_21179b07e_build_struct_lit_expr(&(*_self_), _72121_part));;
			}
			_iter_next_1a98c09d0:;
			++it;
			goto _iter_begin_1a98c09d0;
		}
		_iter_end_1a98c09d0:;
	};
	return _72017_pairs;
}



inline jule::Ptr<_21110b00a_StructLit> _21179b6de_build_typed_struct_literal(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _72749_tokens) {
	jule::I64 _72817_i = 0LL;;
	jule::Ptr<_210e7e620_TypeDecl> _72918_t;;
	jule::Bool _72921_ok;;
	std::tie(_72918_t,_72921_ok) = _2117a5918_build_type((*_self_)._field_p, _72749_tokens,(&(_72817_i)),true);
	if ((!(_72921_ok))) {
		return nullptr;
	} else if ((_72817_i >= _72749_tokens.len())) {
		_21179552e_push_err(&(*_self_), _72749_tokens[_72817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_72749_tokens=_72749_tokens.slice(_72817_i);
	jule::Ptr<_2110e7238_Token> _73813_token = _72749_tokens[0LL];;
	if (((_73813_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_73813_token.get()._field_kind != jule::Str("{", 1)))) {
		_21179552e_push_err(&(*_self_), _73813_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_21110b00a_StructLit>(_21110b00a_StructLit(_72749_tokens[(_72749_tokens.len() - 1LL)],_72918_t,_21179b38c_build_struct_lit_exprs(&(*_self_), _72749_tokens)));
}



inline jule::Ptr<_210e87caa_Expr> _21179b9db_build_brace_lit_part(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _75144_tokens) {
	jule::Slice<jule::Ptr<_2110e7238_Token>> _75218_l;;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _75225_r;;
	std::tie(_75218_l,_75225_r) = _2117941cb_split_colon(_75144_tokens);
	if ((_75218_l != nullptr)) {
		return jule::new_ptr<_210e87caa_Expr>(_210e87caa_Expr(_75144_tokens[0LL],jule::Ptr<_2110e7238_Token>(),jule::Bool(),jule::Any(jule::new_ptr<_21110b3d4_KeyValPair>(_21110b3d4_KeyValPair(_21179e615_build_from_tokens(&(*_self_), _75218_l),_21179e615_build_from_tokens(&(*_self_), _75225_r),_75144_tokens[_75218_l.len()])))));
	};
	return _21179e615_build_from_tokens(&(*_self_), _75144_tokens);
}



inline jule::Ptr<_21110b1e7_BraceLit> _21179bce9_build_brace_lit(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _76739_tokens) {
	jule::Ptr<_21110b1e7_BraceLit> _76817_lit = jule::new_ptr<_21110b1e7_BraceLit>(_21110b1e7_BraceLit(_76739_tokens[0LL],_76739_tokens[(_76739_tokens.len() - 1LL)],jule::Slice<jule::Ptr<_210e87caa_Expr>>()));;
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _77317_parts = _21179a974_get_brace_range_lit_expr_parts(&(*_self_), _76739_tokens);;
	if ((_77317_parts == nullptr)) {
		return _76817_lit;
	};
	_76817_lit.get()._field_exprs=jule::Slice<jule::Ptr<_210e87caa_Expr>>::alloc(0LL,_77317_parts.len());
	{
		auto &expr = _77317_parts;
		auto it = expr.begin();
		_iter_begin_1a98cab3e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _77921_part = *it;
			{
				_76817_lit.get()._field_exprs = jule::alloc_for_append(_76817_lit.get()._field_exprs,1);_76817_lit.get()._field_exprs.__push(_21179b9db_build_brace_lit_part(&(*_self_), _77921_part));;
			}
			_iter_next_1a98cab3e:;
			++it;
			goto _iter_begin_1a98cab3e;
		}
		_iter_end_1a98cab3e:;
	};
	return _76817_lit;
}



inline jule::Any _21179c107_build_brace_range(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _78641_tokens) {
	jule::Slice<jule::Ptr<_2110e7238_Token>> _78718_expr_tokens;;
	jule::I64 _78731_range_n;;
	std::tie(_78718_expr_tokens,_78731_range_n) = _211794a06_get_range_expr_tokens(_78641_tokens);
	{
		
		if ((_78718_expr_tokens.len() == 0LL)) {
			_case_begin_1a98cc6ce:;
			{
				return jule::Any(_21179bce9_build_brace_lit(&(*_self_), _78641_tokens));
			}
		}
		else if ((_78731_range_n > 0LL)) {
			_case_begin_1a98cc756:;
			{
				_21179552e_push_err(&(*_self_), _78641_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a98cc624:;
	};
	jule::Ptr<_2110e7238_Token> _79813_else_token = _78718_expr_tokens[(_78718_expr_tokens.len() - 1LL)];;
	if ((_78718_expr_tokens[(_78718_expr_tokens.len() - 1LL)].get()._field_id == static_cast<jule::U64>(17LLU))) {
		_78718_expr_tokens=_78718_expr_tokens.slice(0LL,(_78718_expr_tokens.len() - 1LL));
		jule::Any _80121_d = _21179dee9_build(&(*_self_), _78718_expr_tokens);;
		if ((_80121_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _80121_d };
			
			if (_match_expr.type_is<jule::Ptr<_21110ab31_FnCallExpr>>()) {
				_case_begin_1a98d1590:;
				{
					_78641_tokens=_78641_tokens.slice((_78718_expr_tokens.len() + 1LL));
					jule::I64 _80825_i = 0LL;;
					jule::Slice<jule::Ptr<_2110e7238_Token>> _80925_range_tokens = _2117a1bab_range(_80825_i,jule::Str("{", 1),jule::Str("}", 1),_78641_tokens);;
					jule::Ptr<_21110ab31_FnCallExpr> _81025_model = _80121_d.operator jule::Ptr<_21110ab31_FnCallExpr>();;
					if (_210ea5ec6_ignored(_81025_model.ptr())) {
						_21179552e_push_err(&(*_self_), _79813_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_21179584d_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_81025_model.get()._field_exception=_2117a5066_build_scope((*_self_)._field_p, _80925_range_tokens,_78641_tokens[(_80825_i - 1LL)]);
					return jule::Any(_80121_d);
				}
			}
			else {
				_case_begin_1a98d078c:;
				{
					_21179552e_push_err(&(*_self_), _78718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1a98d099b:;
		};
	};
	{
		auto &_match_expr{ _78718_expr_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a98d6232:;
			{
				return jule::Any(_21179a259_build_unsafe(&(*_self_), _78641_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a98d6133:;
			{
				return jule::Any(_211799e4b_build_anon_fn(&(*_self_), _78641_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a98d6199:;
			{
				return jule::Any(_21179b6de_build_typed_struct_literal(&(*_self_), _78641_tokens));
			}
		}
		else {
			_case_begin_1a98cc558:;
			{
				_21179552e_push_err(&(*_self_), _78718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a98ce714:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _21179c415_get_enumerable_parts(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _83843_tokens) {
	_83843_tokens=_83843_tokens.slice(1LL,(_83843_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _84018_parts;;
	jule::Slice<_210c3ee2a_Log> _84025_errors;;
	std::tie(_84018_parts,_84025_errors) = _2117a2382_parts(_83843_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84025_errors);
	return _84018_parts;
}



inline jule::Ptr<_21110b5c1_SliceExpr> _21179c723_build_slice(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _84534_tokens) {
	jule::Ptr<_21110b5c1_SliceExpr> _84617_slc = jule::new_ptr<_21110b5c1_SliceExpr>(_21110b5c1_SliceExpr(_84534_tokens[0LL],_84534_tokens[(_84534_tokens.len() - 1LL)],jule::Slice<jule::Ptr<_210e87caa_Expr>>()));;
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _85117_parts = _21179c415_get_enumerable_parts(&(*_self_), _84534_tokens);;
	if ((_85117_parts.len() == 0LL)) {
		return _84617_slc;
	};
	_84617_slc.get()._field_exprs=jule::Slice<jule::Ptr<_210e87caa_Expr>>::alloc(0LL,_85117_parts.len());
	{
		auto &expr = _85117_parts;
		auto it = expr.begin();
		_iter_begin_1a98dba0c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _85721_p = *it;
			{
				if ((_85721_p.len() == 0LL)) {
					goto _iter_next_1a98dba0c;
				};
				_84617_slc.get()._field_exprs = jule::alloc_for_append(_84617_slc.get()._field_exprs,1);_84617_slc.get()._field_exprs.__push(_21179e615_build_from_tokens(&(*_self_), _85721_p));;
			}
			_iter_next_1a98dba0c:;
			++it;
			goto _iter_begin_1a98dba0c;
		}
		_iter_end_1a98dba0c:;
	};
	return _84617_slc;
}



inline jule::Ptr<_2111094c0_IndexingExpr> _21179cb74_build_indexing(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _86737_expr_tokens, jule::Slice<jule::Ptr<_2110e7238_Token>> _86813_tokens, jule::Ptr<_2110e7238_Token> _86835_error_token) {
	jule::Ptr<_2110e7238_Token> _86917_end = _86813_tokens[(_86813_tokens.len() - 1LL)];;
	_86813_tokens=_86813_tokens.slice(1LL,(_86813_tokens.len() - 1LL));
	if ((_86813_tokens.len() == 0LL)) {
		_21179552e_push_err(&(*_self_), _86835_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_210e87caa_Expr> _87517_expr = _21179e615_build_from_tokens(&(*_self_), _86737_expr_tokens);;
	if ((_87517_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_210e87caa_Expr> _87917_index = _21179e615_build_from_tokens(&(*_self_), _86813_tokens);;
	if ((_87917_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_2111094c0_IndexingExpr>(_2111094c0_IndexingExpr(_86835_error_token,_86917_end,_87517_expr,_87917_index));
}



inline jule::Ptr<_21110bc31_SlicingExpr> _21179d218_build_slicing(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _89137_expr_tokens, jule::Slice<jule::Ptr<_2110e7238_Token>>& _89165_slicing_tokens, jule::I64& _89210_colon, jule::Ptr<_2110e7238_Token>& _89227_error_token, jule::Ptr<_2110e7238_Token> _89252_end) {
	jule::Ptr<_21110bc31_SlicingExpr> _89317_slc = jule::new_ptr<_21110bc31_SlicingExpr>(_21110bc31_SlicingExpr(_89227_error_token,_89252_end,_21179e615_build_from_tokens(&(*_self_), _89137_expr_tokens),jule::Ptr<_210e87caa_Expr>(),jule::Ptr<_210e87caa_Expr>()));;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _89917_start_expr_tokens = _89165_slicing_tokens.slice(0LL,_89210_colon);;
	if ((_89917_start_expr_tokens.len() > 0LL)) {
		_89317_slc.get()._field_start=_21179e615_build_from_tokens(&(*_self_), _89917_start_expr_tokens);
	};
	jule::Slice<jule::Ptr<_2110e7238_Token>> _90417_to_expr_tokens = _89165_slicing_tokens.slice((_89210_colon + 1LL));;
	if ((_90417_to_expr_tokens.len() > 0LL)) {
		_89317_slc.get()._field_to=_21179e615_build_from_tokens(&(*_self_), _90417_to_expr_tokens);
	};
	return _89317_slc;
}



inline jule::Any _21179d526_build_bracket_range(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _91242_tokens) {
	jule::Ptr<_2110e7238_Token> _91317_error_token = _91242_tokens[0LL];;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _91418_expr_tokens;;
	jule::I64 _91431_range_n;;
	std::tie(_91418_expr_tokens,_91431_range_n) = _211794a06_get_range_expr_tokens(_91242_tokens);
	{
		
		if ((_91418_expr_tokens.len() == 0LL)) {
			_case_begin_1a98e7056:;
			{
				return jule::Any(_21179c723_build_slice(&(*_self_), _91242_tokens));
			}
		}
		else if (((_91418_expr_tokens.len() == 0LL) || (_91431_range_n > 0LL))) {
			_case_begin_1a98e70cd:;
			{
				_21179552e_push_err(&(*_self_), _91317_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a98e6e9b:;
	};
	_91242_tokens=_91242_tokens.slice(_91418_expr_tokens.len());
	jule::I64 _93217_i = 0LL;;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _93318_slicing_tokens;;
	jule::I64 _93334_colon;;
	std::tie(_93318_slicing_tokens,_93334_colon) = _2117b38b0_split_map_range(_91242_tokens,_93217_i);
	if ((_93334_colon != -1LL)) {
		return jule::Any(_21179d218_build_slicing(&(*_self_), _91418_expr_tokens,_93318_slicing_tokens,_93334_colon,_91317_error_token,_91242_tokens[(_91242_tokens.len() - 1LL)]));
	};
	return jule::Any(_21179cb74_build_indexing(&(*_self_), _91418_expr_tokens,_91242_tokens,_91317_error_token));
}



inline jule::Any _21179d834_build_data(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _94034_tokens) {
	{
		auto _match_expr{ _94034_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a98eb3bd:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a98eb6dc:;
			{
				return jule::Any(_211796585_build_single(&(*_self_), _94034_tokens[0LL]));
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a98eb764:;
			{
				if ((_94034_tokens[0LL].get()._field_id == static_cast<jule::U64>(31LLU))) {
					return jule::Any(_211796893_build_cpp_linked_ident(&(*_self_), _94034_tokens));
				};
			}
		}
		_match_end_1a98eb49a:;
	};
	jule::Ptr<_2110e7238_Token> _95217_token = _94034_tokens[(_94034_tokens.len() - 1LL)];;
	if (((_95217_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_95217_token.get()._field_kind == jule::Str("...", 3)))) {
		return jule::Any(_211797be6_build_variadic(&(*_self_), _94034_tokens));
	};
	_95217_token=_94034_tokens[0LL];
	{
		auto &_match_expr{ _95217_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a98eeb0d:;
			{
				if (((_94034_tokens.len() > 1LL) && (_95217_token.get()._field_kind == jule::Str("*", 1)))) {
					_95217_token=_94034_tokens[1LL];
					if (((_95217_token.get()._field_id == static_cast<jule::U64>(1LLU)) || (_95217_token.get()._field_id == static_cast<jule::U64>(35LLU)))) {
						return jule::Any(_2117975ca_build_type(&(*_self_), _94034_tokens));
					};
				};
				return jule::Any(_211796ba1_build_unary(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a98eeb74:;
			{
				if ((_94034_tokens.len() < 3LL)) {
					goto _match_end_1a98eeaa8;
				};
				if ((_94034_tokens.len() > 3LL)) {
					jule::Ptr<_2110e7238_Token> _97521_t = _94034_tokens[(_94034_tokens.len() - 1LL)];;
					if (((_97521_t.get()._field_id == static_cast<jule::U64>(3LLU)) && (_97521_t.get()._field_kind == jule::Str(")", 1)))) {
						goto _match_end_1a98eeaa8;
					};
				};
				jule::Ptr<_2110e7238_Token> _98117_next = _94034_tokens[1LL];;
				if (((_98117_next.get()._field_id != static_cast<jule::U64>(3LLU)) || (_98117_next.get()._field_kind != jule::Str("]", 1)))) {
					goto _match_end_1a98eeaa8;
				};
				return jule::Any(_2117975ca_build_type(&(*_self_), _94034_tokens));
			}
		}
		_match_end_1a98eeaa8:;
	};
	_95217_token=_94034_tokens[(_94034_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _95217_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a9905240:;
			{
				return jule::Any(_2117978d8_build_sub_ident(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a99001d5:;
			{
				return jule::Any(_2117975ca_build_type(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a99054d7:;
			{
				return jule::Any(_211798004_build_op_right(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a990554d:;
			{
				{
					auto &_match_expr{ _95217_token.get()._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a9907165:;
						{
							return jule::Any(_211799841_build_parentheses_range(&(*_self_), _94034_tokens));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a99071cb:;
						{
							return jule::Any(_21179c107_build_brace_range(&(*_self_), _94034_tokens));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a9907242:;
						{
							return jule::Any(_21179d526_build_bracket_range(&(*_self_), _94034_tokens));
						}
					}
					_match_end_1a99070dd:;
				};
			}
		}
		_match_end_1a9900180:;
	};
	_21179552e_push_err(&(*_self_), _95217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_21110a944_BinopExpr> _21179dbdb_build_binop(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _101235_tokens, jule::I64 _101253_i) {
	jule::Slice<jule::Ptr<_2110e7238_Token>> _101317_left_tokens = _101235_tokens.slice(0LL,_101253_i);;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _101417_right_tokens = _101235_tokens.slice((_101253_i + 1LL));;
	if ((_101317_left_tokens.len() == 0LL)) {
		_21179552e_push_err(&(*_self_), _101235_tokens[_101253_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21179584d_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_101417_right_tokens.len() == 0LL)) {
		_21179552e_push_err(&(*_self_), _101235_tokens[_101253_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_21179584d_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_21110a944_BinopExpr>(_21110a944_BinopExpr(_21179e615_build_from_tokens(&(*_self_), _101317_left_tokens),_21179e615_build_from_tokens(&(*_self_), _101417_right_tokens),_101235_tokens[_101253_i]));
}



inline jule::Any _21179dee9_build(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _103229_tokens) {
	jule::I64 _103313_i = _2117944b7_find_lowest_prec_op(_103229_tokens);;
	if ((_103313_i == -1LL)) {
		return jule::Any(_21179d834_build_data(&(*_self_), _103229_tokens));
	};
	return jule::Any(_21179dbdb_build_binop(&(*_self_), _103229_tokens,_103313_i));
}



inline jule::Any _21179e307_build_kind(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _104034_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _104118_parts;;
	jule::Slice<_210c3ee2a_Log> _104125_errors;;
	std::tie(_104118_parts,_104125_errors) = _2117a2382_parts(_104034_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_104125_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_104125_errors);
		return nullptr;
	} else if ((_104118_parts.len() > 1LL)) {
		return jule::Any(_211795b5b_build_tuple(&(*_self_), _104118_parts));
	};
	return jule::Any(_21179dee9_build(&(*_self_), _104034_tokens));
}



inline jule::Ptr<_210e87caa_Expr> _21179e615_build_from_tokens(_211794c37_ExprBuilder* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _105140_tokens) {
	if ((_105140_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_210e87caa_Expr>(_210e87caa_Expr(_105140_tokens[0LL],_105140_tokens[(_105140_tokens.len() - 1LL)],jule::Bool(),jule::Any(_21179e307_build_kind(&(*_self_), _105140_tokens))));
}







std::ostream &operator<<(std::ostream &_Stream, _211794c37_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2117a0061_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _2117a38c2_stop(_2117a3592_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _2117a3b36_stopped(_2117a3592_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _2117a3eee_push_err(_2117a3592_Parser* _self_, jule::Ptr<_2110e7238_Token> _23327_token, jule::Str _23342_fmt, jule::Slice<jule::Any> _23355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_2117a2a47_compiler_err(_23327_token,_23342_fmt,jule::Any(_23355_args)));;
}



inline void _2117a431d_push_suggestion(_2117a3592_Parser* _self_, jule::Str _23834_fmt, jule::Slice<jule::Any> _23847_args) {
	{
		_2117a2d99_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_23834_fmt,jule::Any(_23847_args));
	};
}



inline jule::Ptr<_210e87caa_Expr> _2117a462b_build_expr(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _24235_tokens) {
	jule::Ptr<_211794c37_ExprBuilder> _24317_ep = jule::new_ptr<_211794c37_ExprBuilder>(_211794c37_ExprBuilder(_self_));;
	jule::Ptr<_210e87caa_Expr> _24617_expr = _21179e615_build_from_tokens(_24317_ep.ptr(), _24235_tokens);;
	return _24617_expr;
}



inline jule::Ptr<_210eb33e0_Directive> _2117a4939_build_directive(_2117a3592_Parser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _25038_tokens) {
	if ((_25038_tokens.len() == 1LL)) {
		_2117a3eee_push_err(&(*_self_), _25038_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_25038_tokens[1LL].get()._field_column != (_25038_tokens[0LL].get()._field_column + 1LL))) {
		_2117a3eee_push_err(&(*_self_), _25038_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_210eb33e0_Directive>(_210eb33e0_Directive(_25038_tokens[1LL],_25038_tokens.slice(2LL)));
}



inline void _2117a4bae_push_directive(_2117a3592_Parser* _self_, jule::Ptr<_210eb33e0_Directive> _26737_d) {
	if ((_26737_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1a991bb3b:;
		if (it != expr.end()) {
			jule::Ptr<_210eb33e0_Directive> _27316_pd = *it;
			{
				if ((_26737_d.get()._field_tag.get()._field_kind == _27316_pd.get()._field_tag.get()._field_kind)) {
					return;;
				};
			}
			_iter_next_1a991bb3b:;
			++it;
			goto _iter_begin_1a991bb3b;
		}
		_iter_end_1a991bb3b:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_26737_d);;
}



inline jule::Ptr<_21110ca9a_ScopeTree> _2117a5066_build_scope(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _28136_tokens, jule::Ptr<_2110e7238_Token> _28158_end) {
	jule::Ptr<_21110ca9a_ScopeTree> _28217_s = _211785486_new_scope();;
	_28217_s.get()._field_end=_28158_end;
	_211786e16_ScopeParser _28417_sp = _211786e16_ScopeParser(_self_,jule::Ptr<_21110ca9a_ScopeTree>(),jule::Slice<jule::Ptr<_2117865db_Stmt>>(),jule::I64());;
	_211792938_build(&_28417_sp, _28136_tokens,_28217_s);
	return _28217_s;
}



inline std::tuple<jule::Ptr<_210e7e620_TypeDecl>,jule::Bool> _2117a54b7___build_type(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _29144_tokens, jule::I64* _29213_i, jule::Bool _29222_err) {
	_2117b3d88_TypeBuilder _29317_tb = _2117b3d88_TypeBuilder(_self_,_29144_tokens,_29213_i,_29222_err);;
	jule::Ptr<_210e7e620_TypeDecl> _29918_decl;;
	jule::Bool _29924_ok;;
	std::tie(_29918_decl,_29924_ok) = _2117b7276_build(&_29317_tb);
	return std::make_tuple(_29918_decl,_29924_ok);
}



inline std::tuple<jule::Ptr<_210e7e620_TypeDecl>,jule::Bool> _2117a5918_build_type(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _30442_tokens, jule::I64* _30513_i, jule::Bool _30522_err) {
	jule::Ptr<_2110e7238_Token> _30613_token = _30442_tokens[(*(_30513_i))];;
	jule::Ptr<_210e7e620_TypeDecl> _30718_t;;
	jule::Bool _30721_ok;;
	std::tie(_30718_t,_30721_ok) = _2117a54b7___build_type(_self_, _30442_tokens,_30513_i,_30522_err);
	if ((_30522_err && (!(_30721_ok)))) {
		_2117a3eee_push_err(_self_.ptr(), _30613_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_30718_t,_30721_ok);
}



inline jule::Ptr<_21110e591_TypeAliasDecl> _2117a5c26_build_type_alias_decl(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _31446_tokens) {
	jule::I64 _31517_i = 1LL;;
	if ((_31517_i >= _31446_tokens.len())) {
		_2117a3eee_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_21110e591_TypeAliasDecl> _32017_tad = jule::new_ptr<_21110e591_TypeAliasDecl>(_21110e591_TypeAliasDecl(jule::Ptr<_21110ca9a_ScopeTree>(),jule::Bool(),jule::Bool(),_31446_tokens[1LL],_31446_tokens[1LL].get()._field_kind,jule::Ptr<_210e7e620_TypeDecl>()));;
	jule::Ptr<_2110e7238_Token> _32417_token = _31446_tokens[_31517_i];;
	if ((_32417_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_2117a3eee_push_err(_self_.ptr(), _32417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_31517_i)++;
	if ((_31517_i >= _31446_tokens.len())) {
		_2117a3eee_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _32017_tad;
	};
	_32417_token=_31446_tokens[_31517_i];
	if ((_32417_token.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_2117a3eee_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _32017_tad;
	};
	(_31517_i)++;
	if ((_31517_i >= _31446_tokens.len())) {
		_2117a3eee_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _32017_tad;
	};
	jule::Ptr<_210e7e620_TypeDecl> _34518_t;;
	jule::Bool _34521_ok;;
	std::tie(_34518_t,_34521_ok) = _2117a5918_build_type(_self_, _31446_tokens,(&(_31517_i)),true);
	_32017_tad.get()._field_kind=_34518_t;
	if ((_34521_ok && (_31517_i < _31446_tokens.len()))) {
		_2117a3eee_push_err(_self_.ptr(), _31446_tokens[_31517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _32017_tad;
}



inline void _2117a6089_build_var_type_and_expr(jule::Ptr<_2117a3592_Parser> _self_, jule::Ptr<_21110d161_VarDecl>& _35348_v, jule::Slice<jule::Ptr<_2110e7238_Token>>& _35366_tokens) {
	jule::I64 _35417_i = 0LL;;
	jule::Ptr<_2110e7238_Token> _35517_tok = _35366_tokens[_35417_i];;
	if ((_35517_tok.get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_35417_i)++;
		if (((_35417_i >= _35366_tokens.len()) || ((_35366_tokens[_35417_i].get()._field_id == static_cast<jule::U64>(7LLU)) && (_35366_tokens[_35417_i].get()._field_kind == jule::Str("=", 1))))) {
			_2117a3eee_push_err(_self_.ptr(), _35517_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_210e7e620_TypeDecl> _36322_t;;
		jule::Bool _36325_ok;;
		std::tie(_36322_t,_36325_ok) = _2117a5918_build_type(_self_, _35366_tokens,(&(_35417_i)),true);
		if (_36325_ok) {
			_35348_v.get()._field_kind=_36322_t;
			if ((_35417_i >= _35366_tokens.len())) {
				return;;
			};
			_35517_tok=_35366_tokens[_35417_i];
		};
	};
	if ((_35517_tok.get()._field_id == static_cast<jule::U64>(7LLU))) {
		if ((_35517_tok.get()._field_kind != jule::Str("=", 1))) {
			_2117a3eee_push_err(_self_.ptr(), _35517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_2110e7238_Token>> _37821_expr_tokens = _35366_tokens.slice((_35417_i + 1LL));;
		if ((_37821_expr_tokens.len() == 0LL)) {
			_2117a3eee_push_err(_self_.ptr(), _35517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_35348_v.get()._field_expr=_2117a462b_build_expr(_self_, _37821_expr_tokens);
	} else {
		_2117a3eee_push_err(_self_.ptr(), _35517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _2117a6397_build_var_common(jule::Ptr<_2117a3592_Parser> _self_, jule::Ptr<_21110d161_VarDecl>& _38941_v, jule::Slice<jule::Ptr<_2110e7238_Token>> _38958_tokens) {
	_38941_v.get()._field_token=_38958_tokens[0LL];
	if ((_38941_v.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_2117a3eee_push_err(_self_.ptr(), _38941_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_38941_v.get()._field_ident=_38941_v.get()._field_token.get()._field_kind;
	_38941_v.get()._field_kind=nullptr;
	if ((_38958_tokens.len() > 1LL)) {
		_38958_tokens=_38958_tokens.slice(1LL);
		_2117a6089_build_var_type_and_expr(_self_, _38941_v,_38958_tokens);
	};
}



inline void _2117a6760_build_var_begin(_2117a3592_Parser* _self_, jule::Ptr<_21110d161_VarDecl>& _40439_v, jule::Ptr<jule::I64> _40456_i, jule::Slice<jule::Ptr<_2110e7238_Token>>& _40466_tokens) {
	jule::Ptr<_2110e7238_Token> _40513_tok = _40466_tokens[(*(_40456_i))];;
	{
		auto &_match_expr{ _40513_tok.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1a993e39a:;
			{
				_40439_v.get()._field_statically=true;
				goto _case_begin_1a993d91b;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a993d91b:;
			{
				((*(_40456_i)))++;
				if (((*(_40456_i)) >= _40466_tokens.len())) {
					_2117a3eee_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_40466_tokens[(*(_40456_i))].get()._field_id == static_cast<jule::U64>(36LLU))) {
					_40439_v.get()._field_mutable=true;
					((*(_40456_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1a993d982:;
			{
				((*(_40456_i)))++;
				_40439_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1a993d311:;
			{
				_2117a3eee_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a993d82d:;
	};
	if (((*(_40456_i)) >= _40466_tokens.len())) {
		_2117a3eee_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_21110d161_VarDecl> _2117a6a6d_build_var(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _43533_tokens) {
	jule::Ptr<jule::I64> _43617_i = jule::new_ptr<jule::I64>(0LL);;
	jule::Ptr<_21110d161_VarDecl> _43717_v = jule::new_ptr<_21110d161_VarDecl>(_21110d161_VarDecl(jule::Ptr<_21110ca9a_ScopeTree>(),_43533_tokens[(*(_43617_i))],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_210eb33e0_Directive>>(),jule::Ptr<_210e7e620_TypeDecl>(),jule::Ptr<_210e87caa_Expr>()));;
	_2117a6760_build_var_begin(_self_.ptr(), _43717_v,_43617_i,_43533_tokens);
	if (((*(_43617_i)) >= _43533_tokens.len())) {
		return nullptr;
	};
	_43533_tokens=_43533_tokens.slice((*(_43617_i)));
	if (((_43533_tokens[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_43533_tokens[0LL].get()._field_kind == jule::Str("&", 1)))) {
		_43717_v.get()._field_reference=true;
		if ((_43533_tokens.len() == 1LL)) {
			return nullptr;
		};
		_43533_tokens=_43533_tokens.slice(1LL);
	};
	_2117a6397_build_var_common(_self_, _43717_v,_43533_tokens);
	return _43717_v;
}



inline jule::Ptr<_21110be1d_GenericDecl> _2117a6d7b_build_generic(_2117a3592_Parser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _45737_tokens) {
	if ((_45737_tokens.len() > 1LL)) {
		_2117a3eee_push_err(&(*_self_), _45737_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_21110be1d_GenericDecl> _46117_g = jule::new_ptr<_21110be1d_GenericDecl>(_21110be1d_GenericDecl(_45737_tokens[0LL],jule::Str()));;
	if ((_46117_g.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_2117a3eee_push_err(&(*_self_), _46117_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_46117_g.get()._field_ident=_46117_g.get()._field_token.get()._field_kind;
	return _46117_g;
}



inline jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> _2117a7233_build_generics(_2117a3592_Parser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _47238_tokens, jule::Ptr<_2110e7238_Token>& _47257_error_token) {
	if ((_47238_tokens.len() == 0LL)) {
		_2117a3eee_push_err(&(*_self_), _47257_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _47818_parts;;
	jule::Slice<_210c3ee2a_Log> _47825_errors;;
	std::tie(_47818_parts,_47825_errors) = _2117a2382_parts(_47238_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_47825_errors.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_47825_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> _48417_generics = jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>::alloc(0LL,_47818_parts.len());;
	{
		auto &expr = _47818_parts;
		auto it = expr.begin();
		_iter_begin_1a994c9a2:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _48521_part = *it;
			{
				_48417_generics = jule::alloc_for_append(_48417_generics,1);_48417_generics.__push(_2117a6d7b_build_generic(&(*_self_), _48521_part));;
			}
			_iter_next_1a994c9a2:;
			++it;
			goto _iter_begin_1a994c9a2;
		}
		_iter_end_1a994c9a2:;
	};
	return _48417_generics;
}



inline jule::Ptr<_21110cc87_ParamDecl> _2117a7541_build_self_param(_2117a3592_Parser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _49239_tokens) {
	if ((_49239_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_21110cc87_ParamDecl> _49717_param = jule::new_ptr<_21110cc87_ParamDecl>();;
	jule::I64 _50017_i = 0LL;;
	if ((_49239_tokens[_50017_i].get()._field_id == static_cast<jule::U64>(36LLU))) {
		_49717_param.get()._field_mutable=true;
		(_50017_i)++;
		if ((_50017_i >= _49239_tokens.len())) {
			_2117a3eee_push_err(&(*_self_), _49239_tokens[(_50017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49239_tokens[_50017_i].get()._field_kind == jule::Str("&", 1))) {
		_49717_param.get()._field_ident=jule::Str("&", 1);
		(_50017_i)++;
		if ((_50017_i >= _49239_tokens.len())) {
			_2117a3eee_push_err(&(*_self_), _49239_tokens[(_50017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49239_tokens[_50017_i].get()._field_id == static_cast<jule::U64>(28LLU))) {
		_49717_param.get()._field_ident+=jule::Str("self", 4);
		_49717_param.get()._field_token=_49239_tokens[_50017_i];
		(_50017_i)++;
		if ((_50017_i < _49239_tokens.len())) {
			_2117a3eee_push_err(&(*_self_), _49239_tokens[_50017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _49717_param;
}



inline void _2117a7909_param_type_begin(_2117a3592_Parser* _self_, jule::Ptr<_21110cc87_ParamDecl>& _53140_param, jule::I64& _53164_i, jule::Slice<jule::Ptr<_2110e7238_Token>>& _53173_tokens) {
	for (; (_53164_i < _53173_tokens.len()); (_53164_i)++) {
		{
			jule::Ptr<_2110e7238_Token> _53317_token = _53173_tokens[_53164_i];;
			if ((_53317_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_53317_token.get()._field_kind != jule::Str("...", 3))) {
				return;;
			};
			if (_53140_param.get()._field_variadic) {
				_2117a3eee_push_err(&(*_self_), _53317_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1a9954701;
			};
			_53140_param.get()._field_variadic=true;
		}
	_iter_next_1a9954701:;
	}
	_iter_end_1a9954701:;;
}



inline void _2117a7c28_build_param_type(jule::Ptr<_2117a3592_Parser> _self_, jule::Ptr<_21110cc87_ParamDecl>& _54841_param, jule::Slice<jule::Ptr<_2110e7238_Token>>& _54865_tokens) {
	jule::I64 _54917_i = 0LL;;
	_2117a7909_param_type_begin(_self_.ptr(), _54841_param,_54917_i,_54865_tokens);
	if ((_54917_i >= _54865_tokens.len())) {
		return;;
	};
	std::tie(_54841_param.get()._field_kind,std::ignore) = _2117a5918_build_type(_self_, _54865_tokens,(&(_54917_i)),true);
	if ((_54917_i < _54865_tokens.len())) {
		_2117a3eee_push_err(_self_.ptr(), _54865_tokens[_54917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _2117a80e1_build_param_body(jule::Ptr<_2117a3592_Parser> _self_, jule::Ptr<_21110cc87_ParamDecl>& _56141_param, jule::Ptr<jule::I64> _56164_i, jule::Slice<jule::Ptr<_2110e7238_Token>> _56177_tokens) {
	jule::Ptr<_2110e7238_Token> _56217_tok = _56177_tokens[(*(_56164_i))];;
	_56141_param.get()._field_ident=_56217_tok.get()._field_kind;
	if ((((*(_56164_i)) + 1LL) >= _56177_tokens.len())) {
		return;;
	} else if ((((_56177_tokens.len() - (*(_56164_i))) - 1LL) < 2LL)) {
		_2117a3eee_push_err(_self_.ptr(), _56217_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	_56217_tok=_56177_tokens[((*(_56164_i)) + 1LL)];
	if ((_56217_tok.get()._field_id != static_cast<jule::U64>(11LLU))) {
		_2117a7c28_build_param_type(_self_, _56141_param,_56177_tokens);
		return;;
	};
	_56177_tokens=_56177_tokens.slice(((*(_56164_i)) + 2LL));
	_2117a7c28_build_param_type(_self_, _56141_param,_56177_tokens);
}



inline jule::Ptr<_21110cc87_ParamDecl> _2117a83ee_build_param(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _58235_tokens) {
	jule::Ptr<_21110cc87_ParamDecl> _58317_param = jule::new_ptr<_21110cc87_ParamDecl>(_21110cc87_ParamDecl(_58235_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_210e7e620_TypeDecl>(),jule::Str()));;
	if ((_58317_param.get()._field_token.get()._field_id == static_cast<jule::U64>(36LLU))) {
		_58317_param.get()._field_mutable=true;
		if ((_58235_tokens.len() == 1LL)) {
			_2117a3eee_push_err(_self_.ptr(), _58235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_58235_tokens=_58235_tokens.slice(1LL);
		_58317_param.get()._field_token=_58235_tokens[0LL];
	};
	if ((_58235_tokens.len() >= 3LL)) {
		if (((_58317_param.get()._field_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_58317_param.get()._field_token.get()._field_kind == jule::Str("&", 1)))) {
			if ((_58235_tokens.len() == 1LL)) {
				_2117a3eee_push_err(_self_.ptr(), _58235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_58235_tokens[1LL].get()._field_id == static_cast<jule::U64>(2LLU)) && (_58235_tokens[2LL].get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_58317_param.get()._field_reference=true;
				_58235_tokens=_58235_tokens.slice(1LL);
				_58317_param.get()._field_token=_58235_tokens[0LL];
			};
		};
	};
	if ((_58317_param.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_58317_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_2117a7c28_build_param_type(_self_, _58317_param,_58235_tokens);
	} else {
		jule::Ptr<jule::I64> _61921_i = jule::new_ptr<jule::I64>(0LL);;
		_2117a80e1_build_param_body(_self_, _58317_param,_61921_i,_58235_tokens);
	};
	return _58317_param;
}



inline void _2117a8674_check_params(_2117a3592_Parser* _self_, jule::Slice<jule::Ptr<_21110cc87_ParamDecl>>& _62636_params) {
	{
		auto &expr = _62636_params;
		auto it = expr.begin();
		_iter_begin_1a996735c:;
		if (it != expr.end()) {
			jule::Ptr<_21110cc87_ParamDecl> _62721_param = *it;
			{
				if ((_21105e28d_is_self(_62721_param.ptr()) || (_62721_param.get()._field_kind != nullptr))) {
					goto _iter_next_1a996735c;
				};
				if ((_62721_param.get()._field_token == nullptr)) {
					_2117a3eee_push_err(&(*_self_), _62721_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_62721_param.get()._field_kind=jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(_62721_param.get()._field_token,jule::Any(jule::new_ptr<_210e7e80c_IdentTypeDecl>(_210e7e80c_IdentTypeDecl(_62721_param.get()._field_token,_62721_param.get()._field_token.get()._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>())))));
					_62721_param.get()._field_ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1a996735c:;
			++it;
			goto _iter_begin_1a996735c;
		}
		_iter_end_1a996735c:;
	};
}



inline jule::Slice<jule::Ptr<_21110cc87_ParamDecl>> _2117a8a2b_build_params(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _64637_tokens, jule::Bool _64655_method) {
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _64718_parts;;
	jule::Slice<_210c3ee2a_Log> _64725_errs;;
	std::tie(_64718_parts,_64725_errs) = _2117a2382_parts(_64637_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_64725_errs);
	if ((_64718_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_21110cc87_ParamDecl>> _65317_params = nullptr;;
	if ((_64655_method && (_64718_parts.len() > 0LL))) {
		jule::Ptr<_21110cc87_ParamDecl> _65521_param = _2117a7541_build_self_param(_self_.ptr(), _64718_parts[0LL]);;
		if (((_65521_param != nullptr) && _21105e28d_is_self(_65521_param.ptr()))) {
			_65317_params = jule::alloc_for_append(_65317_params,1);_65317_params.__push(_65521_param);;
			_64718_parts=_64718_parts.slice(1LL);
		};
	};
	{
		auto &expr = _64718_parts;
		auto it = expr.begin();
		_iter_begin_1a996d5d8:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _66221_part = *it;
			{
				jule::Ptr<_21110cc87_ParamDecl> _66321_param = _2117a83ee_build_param(_self_, _66221_part);;
				if ((_66321_param != nullptr)) {
					_65317_params = jule::alloc_for_append(_65317_params,1);_65317_params.__push(_66321_param);;
				};
			}
			_iter_next_1a996d5d8:;
			++it;
			goto _iter_begin_1a996d5d8;
		}
		_iter_end_1a996d5d8:;
	};
	_2117a8674_check_params(_self_.ptr(), _65317_params);
	return _65317_params;
}



inline std::tuple<jule::Ptr<_210e87abd_RetTypeDecl>,jule::Bool> _2117a8dd3_build_multi_ret_type(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _67345_tokens, jule::I64& _67368_i) {
	jule::Ptr<_210e87abd_RetTypeDecl> _67378_t = jule::Ptr<_210e87abd_RetTypeDecl>();
	jule::Bool _67395_ok = jule::Bool();
	_67378_t=jule::new_ptr<_210e87abd_RetTypeDecl>();
	(_67368_i)++;
	if ((_67368_i >= _67345_tokens.len())) {
		(_67368_i)--;
		std::tie(_67378_t.get()._field_kind,_67395_ok) = _2117a5918_build_type(_self_, _67345_tokens,(&(_67368_i)),false);
		return std::make_tuple(_67378_t,_67395_ok);
	};
	(_67368_i)--;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _68317_range_tokens = _2117a1bab_range(_67368_i,jule::Str("(", 1),jule::Str(")", 1),_67345_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _68518_parts;;
	jule::Slice<_210c3ee2a_Log> _68525_errs;;
	std::tie(_68518_parts,_68525_errs) = _2117a2382_parts(_68317_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_68525_errs);
	if ((_68518_parts.len() == 0LL)) {
		return std::make_tuple(_67378_t,_67395_ok);
	};
	jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> _69117_types = jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>::alloc(0LL,_68518_parts.len());;
	_67378_t.get()._field_idents=jule::Slice<jule::Ptr<_2110e7238_Token>>::alloc(0LL,_68518_parts.len());
	{
		auto &expr = _68518_parts;
		auto it = expr.begin();
		_iter_begin_1a9974963:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _69321_part = *it;
			{
				jule::Ptr<_2110e7238_Token> _69421_token = _69321_part[0LL];;
				jule::I64 _69521_offset = 0LL;;
				if ((_69321_part.len() > 1LL)) {
					_69421_token=_69321_part[1LL];
					if ((_69421_token.get()._field_id == static_cast<jule::U64>(11LLU))) {
						_69521_offset=2LL;
						if ((_69321_part.len() < 3LL)) {
							_2117a3eee_push_err(_self_.ptr(), _69421_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1a9974963;
						};
					};
				};
				_69421_token=_69321_part[0LL];
				if ((_69521_offset != 2LL)) {
					jule::Ptr<_2110e7238_Token> _71125_new_token = jule::new_ptr<_2110e7238_Token>((*(_69421_token)));;
					_71125_new_token.get()._field_kind=jule::Str("<anonymous>", 11);
					_67378_t.get()._field_idents = jule::alloc_for_append(_67378_t.get()._field_idents,1);_67378_t.get()._field_idents.__push(_71125_new_token);;
				} else {
					_67378_t.get()._field_idents = jule::alloc_for_append(_67378_t.get()._field_idents,1);_67378_t.get()._field_idents.__push(_69421_token);;
				};
				jule::Ptr<_210e7e620_TypeDecl> _71822_tk;;
				std::tie(_71822_tk,std::ignore) = _2117a5918_build_type(_self_, _69321_part,(&(_69521_offset)),true);
				if ((_69521_offset < _69321_part.len())) {
					_2117a3eee_push_err(_self_.ptr(), _69321_part[_69521_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_69117_types = jule::alloc_for_append(_69117_types,1);_69117_types.__push(_71822_tk);;
			}
			_iter_next_1a9974963:;
			++it;
			goto _iter_begin_1a9974963;
		}
		_iter_end_1a9974963:;
	};
	if ((_69117_types.len() > 1LL)) {
		_67378_t.get()._field_kind=jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(_67345_tokens[0LL],jule::Any(jule::new_ptr<_210e8731a_TupleTypeDecl>(_210e8731a_TupleTypeDecl(_69117_types)))));
	} else {
		_67378_t.get()._field_kind=_69117_types[0LL];
	};
	_67395_ok=true;
	return std::make_tuple(_67378_t,_67395_ok);
}



inline std::tuple<jule::Ptr<_210e87abd_RetTypeDecl>,jule::Bool> _2117a928a_build_ret_type(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _74139_tokens, jule::I64& _74162_i) {
	jule::Ptr<_210e87abd_RetTypeDecl> _74172_t = jule::Ptr<_210e87abd_RetTypeDecl>();
	jule::Bool _74189_ok = jule::Bool();
	_74172_t=jule::new_ptr<_210e87abd_RetTypeDecl>();
	if ((_74162_i >= _74139_tokens.len())) {
		return std::make_tuple(_74172_t,_74189_ok);
	};
	jule::Ptr<_2110e7238_Token> _74717_token = _74139_tokens[_74162_i];;
	{
		auto &_match_expr{ _74717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a997ce99:;
			{
				if ((_74717_token.get()._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_74172_t,_74189_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a997d791:;
			{
				if ((_74717_token.get()._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_74172_t,_74189_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a997d807:;
			{
				if (((_74162_i + 1LL) >= _74139_tokens.len())) {
					_2117a3eee_push_err(_self_.ptr(), _74717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_74172_t,_74189_ok);
				};
				(_74162_i)++;
				_74717_token=_74139_tokens[_74162_i];
				if ((_74717_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _74717_token.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1a99813a9:;
							{
								std::tie(_74172_t,_74189_ok) = _2117a8dd3_build_multi_ret_type(_self_, _74139_tokens,_74162_i);
								return std::make_tuple(_74172_t,_74189_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1a9981442:;
							{
								_2117a3eee_push_err(_self_.ptr(), _74717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_74172_t,_74189_ok);
							}
						}
						_match_end_1a9981332:;
					};
				};
				std::tie(_74172_t.get()._field_kind,_74189_ok) = _2117a5918_build_type(_self_, _74139_tokens,(&(_74162_i)),true);
				return std::make_tuple(_74172_t,_74189_ok);
			}
		}
		_match_end_1a997d6d6:;
	};
	(_74162_i)++;
	_2117a3eee_push_err(_self_.ptr(), _74717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_74172_t,_74189_ok);
}



inline jule::Ptr<_21110ce74_FnDecl> _2117a96db_build_fn_prototype(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _78643_tokens, jule::I64& _78666_i, jule::Bool _78674_method) {
	jule::Ptr<_21110ce74_FnDecl> _78717_f = jule::new_ptr<_21110ce74_FnDecl>(_21110ce74_FnDecl(_78643_tokens[_78666_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_210eb33e0_Directive>>(),jule::Ptr<_21110ca9a_ScopeTree>(),jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>(),jule::Ptr<_210e87abd_RetTypeDecl>(),jule::Slice<jule::Ptr<_21110cc87_ParamDecl>>()));;
	if ((_78717_f.get()._field_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		_78717_f.get()._field_statically=true;
		(_78666_i)++;
		if ((_78666_i >= _78643_tokens.len())) {
			_2117a3eee_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78717_f.get()._field_token=_78643_tokens[_78666_i];
	};
	if ((_78717_f.get()._field_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		_78717_f.get()._field_unsafety=true;
		(_78666_i)++;
		if ((_78666_i >= _78643_tokens.len())) {
			_2117a3eee_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78717_f.get()._field_token=_78643_tokens[_78666_i];
	};
	(_78666_i)++;
	if ((_78666_i >= _78643_tokens.len())) {
		_2117a3eee_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2110e7238_Token> _82013_tok = _78643_tokens[_78666_i];;
	if ((_82013_tok.get()._field_id == static_cast<jule::U64>(2LLU))) {
		(_78666_i)++;
		if ((_78666_i >= _78643_tokens.len())) {
			_2117a3eee_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78717_f.get()._field_ident=_82013_tok.get()._field_kind;
	} else {
		_78717_f.get()._field_ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_2110e7238_Token> _83213_error_token = _78643_tokens[_78666_i];;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _83317_generics_tokens = _2117a1bab_range(_78666_i,jule::Str("[", 1),jule::Str("]", 1),_78643_tokens);;
	if ((_83317_generics_tokens != nullptr)) {
		_78717_f.get()._field_generics=_2117a7233_build_generics(_self_.ptr(), _83317_generics_tokens,_83213_error_token);
	};
	if ((_78643_tokens[_78666_i].get()._field_kind != jule::Str("(", 1))) {
		_2117a3eee_push_err(_self_.ptr(), _78643_tokens[_78666_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2110e7238_Token>> _84317_params_toks = _2117a1bab_range(_78666_i,jule::Str("(", 1),jule::Str(")", 1),_78643_tokens);;
	if ((_84317_params_toks.len() > 0LL)) {
		_78717_f.get()._field_params=_2117a8a2b_build_params(_self_, _84317_params_toks,_78674_method);
	};
	if ((_78666_i < _78643_tokens.len())) {
		jule::Ptr<_2110e7238_Token> _84917_token = _78643_tokens[_78666_i];;
		if (((_84917_token.get()._field_id == static_cast<jule::U64>(7LLU)) && (_84917_token.get()._field_kind == jule::Str("!", 1)))) {
			_78717_f.get()._field_exceptional=true;
			(_78666_i)++;
		};
	};
	std::tie(_78717_f.get()._field_result,std::ignore) = _2117a928a_build_ret_type(_self_, _78643_tokens,_78666_i);
	return _78717_f;
}



inline jule::Ptr<_21110ce74_FnDecl> _2117a9b3c_build_fn(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _86233_tokens, jule::Bool _86251_method, jule::Bool _86265_prototype) {
	jule::I64 _86317_i = 0LL;;
	jule::Ptr<_21110ce74_FnDecl> _86417_f = _2117a96db_build_fn_prototype(_self_, _86233_tokens,_86317_i,_86251_method);;
	if (_86265_prototype) {
		if ((_86317_i < _86233_tokens.len())) {
			_2117a3eee_push_err(_self_.ptr(), _86233_tokens[(_86317_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _86417_f;
	} else if ((_86417_f == nullptr)) {
		return _86417_f;
	};
	if ((_86317_i >= _86233_tokens.len())) {
		_2117a38c2_stop(_self_.ptr());
		_2117a3eee_push_err(_self_.ptr(), _86417_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2110e7238_Token>> _88017_block_tokens = _2117a1bab_range(_86317_i,jule::Str("{", 1),jule::Str("}", 1),_86233_tokens);;
	if ((_88017_block_tokens != nullptr)) {
		_86417_f.get()._field_scope=_2117a5066_build_scope(_self_, _88017_block_tokens,_86233_tokens[(_86317_i - 1LL)]);
		_86417_f.get()._field_scope.get()._field_unsafety=_86417_f.get()._field_unsafety;
		if ((_86317_i < _86233_tokens.len())) {
			_2117a3eee_push_err(_self_.ptr(), _86233_tokens[_86317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_2117a38c2_stop(_self_.ptr());
		_2117a3eee_push_err(_self_.ptr(), _86417_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _86417_f;
}



inline jule::Slice<jule::Ptr<_2110e7238_Token>> _2117a9e4a_get_use_decl_selectors(_2117a3592_Parser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _89645_tokens) {
	jule::I64 _89717_i = 0LL;;
	_89645_tokens=_2117a1bab_range(_89717_i,jule::Str("{", 1),jule::Str("}", 1),_89645_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _89918_parts;;
	jule::Slice<_210c3ee2a_Log> _89925_errs;;
	std::tie(_89918_parts,_89925_errs) = _2117a2382_parts(_89645_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_89925_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_89925_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2110e7238_Token>> _90517_selectors = jule::Slice<jule::Ptr<_2110e7238_Token>>::alloc(0LL,_89918_parts.len());;
	{
		auto &expr = _89918_parts;
		auto it = expr.begin();
		_iter_begin_1a999a0e8:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _90621_part = *it;
			{
				if ((_90621_part.len() > 1LL)) {
					_2117a3eee_push_err(&(*_self_), _90621_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_2110e7238_Token> _91021_tok = _90621_part[0LL];;
				if (((_91021_tok.get()._field_id != static_cast<jule::U64>(2LLU)) && (_91021_tok.get()._field_id != static_cast<jule::U64>(28LLU)))) {
					_2117a3eee_push_err(&(*_self_), _91021_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_2117a431d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1a999a0e8;
				};
				_90517_selectors = jule::alloc_for_append(_90517_selectors,1);_90517_selectors.__push(_91021_tok);;
			}
			_iter_next_1a999a0e8:;
			++it;
			goto _iter_begin_1a999a0e8;
		}
		_iter_end_1a999a0e8:;
	};
	return _90517_selectors;
}



inline void _2117aa269_build_cpp_use_decl(_2117a3592_Parser* _self_, jule::Ptr<_21110eb57_UseDecl>& _92142_decl, jule::Slice<jule::Ptr<_2110e7238_Token>>& _92159_tokens) {
	if ((_92159_tokens.len() > 1LL)) {
		_2117a3eee_push_err(&(*_self_), _92159_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_2110e7238_Token> _92513_token = _92159_tokens[0LL];;
	if (((_92513_token.get()._field_id != static_cast<jule::U64>(6LLU)) || ((_92513_token.get()._field_kind[0LL] != '`') && (_92513_token.get()._field_kind[0LL] != '\"')))) {
		_2117a3eee_push_err(&(*_self_), _92513_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_92142_decl.get()._field_cpp_linked=true;
	_92142_decl.get()._field_link_path=_92513_token.get()._field_kind.slice(1LL,(_92513_token.get()._field_kind.len() - 1LL));
}



inline void _2117aa588_build_std_use_decl(_2117a3592_Parser* _self_, jule::Ptr<_21110eb57_UseDecl>& _93442_decl, jule::Slice<jule::Ptr<_2110e7238_Token>> _93462_tokens) {
	_93442_decl.get()._field_std=true;
	jule::Ptr<_2110e7238_Token> _93717_token = _93462_tokens[0LL];;
	if ((_93462_tokens.len() < 3LL)) {
		_2117a3eee_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_93462_tokens=_93462_tokens.slice(2LL);
	_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _93717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a99a4795:;
			{
				_2117a3eee_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a99a4850:;
			{
				if ((_93717_token.get()._field_kind != jule::Str("}", 1))) {
					_2117a3eee_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_2110e7238_Token>> _95421_selectors = nullptr;;
				std::tie(_93462_tokens,_95421_selectors) = _2117a1e53_range_last(_93462_tokens);
				_93442_decl.get()._field_selected=_2117a9e4a_get_use_decl_selectors(&(*_self_), _95421_selectors);
				if ((_93462_tokens.len() == 0LL)) {
					_2117a3eee_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
				if ((_93717_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_2117a3eee_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_2117a3eee_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a99a48b6:;
			{
				if ((_93717_token.get()._field_kind != jule::Str("*", 1))) {
					_2117a3eee_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_2117a3eee_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
				if ((_93717_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_2117a3eee_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_2117a3eee_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93442_decl.get()._field_full=true;
			}
		}
		_match_end_1a99a4740:;
	};
	_93442_decl.get()._field_link_path=(jule::Str("std::", 5) + _2117a31c9_tokstoa(_93462_tokens));
}



inline void _2117aa8a7_build_ident_use_decl(_2117a3592_Parser* _self_, jule::Ptr<_21110eb57_UseDecl>& _99644_decl, jule::Slice<jule::Ptr<_2110e7238_Token>> _99664_tokens) {
	_99644_decl.get()._field_std=false;
	jule::Ptr<_2110e7238_Token> _99917_token = _99664_tokens[(_99664_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _99917_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a99b066e:;
			{
				_2117a3eee_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a99b06d5:;
			{
				if ((_99917_token.get()._field_kind != jule::Str("}", 1))) {
					_2117a3eee_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_2110e7238_Token>> _101021_selectors = nullptr;;
				std::tie(_99664_tokens,_101021_selectors) = _2117a1e53_range_last(_99664_tokens);
				_99644_decl.get()._field_selected=_2117a9e4a_get_use_decl_selectors(&(*_self_), _101021_selectors);
				if ((_99664_tokens.len() == 0LL)) {
					_2117a3eee_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99917_token=_99664_tokens[(_99664_tokens.len() - 1LL)];
				if ((_99917_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_2117a3eee_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_2117a3eee_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a99b074b:;
			{
				if ((_99917_token.get()._field_kind != jule::Str("*", 1))) {
					_2117a3eee_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_2117a3eee_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99917_token=_99664_tokens[(_99664_tokens.len() - 1LL)];
				if ((_99917_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
					_2117a3eee_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_2117a3eee_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99644_decl.get()._field_full=true;
			}
		}
		_match_end_1a99b0581:;
	};
	_99644_decl.get()._field_link_path=_2117a31c9_tokstoa(_99664_tokens);
}



inline void _2117aabc6_parse_use_decl(_2117a3592_Parser* _self_, jule::Ptr<_21110eb57_UseDecl>& _105938_decl, jule::Slice<jule::Ptr<_2110e7238_Token>> _105958_tokens) {
	if (_105938_decl.get()._field_cpp_linked) {
		_2117aa269_build_cpp_use_decl(&(*_self_), _105938_decl,_105958_tokens);
		return;;
	};
	jule::Ptr<_2110e7238_Token> _106517_token = _105958_tokens[0LL];;
	if ((_106517_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_2117a3eee_push_err(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_105958_tokens.len() > 2LL) && (_105958_tokens[1LL].get()._field_id == static_cast<jule::U64>(12LLU)))) {
		_105938_decl.get()._field_alias=_106517_token.get()._field_kind;
		if ((_105958_tokens[2LL].get()._field_id != static_cast<jule::U64>(2LLU))) {
			_2117a3eee_push_err(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_2117a431d_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_105958_tokens=_105958_tokens.slice(2LL);
		_106517_token=_105958_tokens[0LL];
	};
	;
	{
		
		if ((_106517_token.get()._field_kind == jule::Str("std", 3))) {
			_case_begin_1a99c02b6:;
			{
				_2117aa588_build_std_use_decl(&(*_self_), _105938_decl,_105958_tokens);
			}
		}
		else {
			_case_begin_1a99becee:;
			{
				_2117aa8a7_build_ident_use_decl(&(*_self_), _105938_decl,_105958_tokens);
			}
		}
		_match_end_1a99bec77:;
	};
}



inline jule::Ptr<_21110eb57_UseDecl> _2117ab07d_build_use_decl(_2117a3592_Parser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _109337_tokens, jule::Bool _109355_cpp_linked) {
	jule::Ptr<_21110eb57_UseDecl> _109417_decl = jule::new_ptr<_21110eb57_UseDecl>(_21110eb57_UseDecl(_109337_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<jule::Ptr<_2110e7238_Token>>(),_109355_cpp_linked,jule::Bool()));;
	if ((_109337_tokens.len() < 2LL)) {
		_2117a3eee_push_err(&(*_self_), _109417_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_109337_tokens=_109337_tokens.slice(1LL);
	_2117aabc6_parse_use_decl(&(*_self_), _109417_decl,_109337_tokens);
	return _109417_decl;
}



inline jule::Ptr<_210e87caa_Expr> _2117ab435_build_enum_item_expr(jule::Ptr<_2117a3592_Parser> _self_, jule::Ptr<jule::I64> _110744_i, jule::Slice<jule::Ptr<_2110e7238_Token>>& _110758_tokens) {
	jule::I64 _110817_brace_n = 0LL;;
	jule::I64 _110913_expr_start = (*(_110744_i));;
	for (; ((*(_110744_i)) < _110758_tokens.len()); ((*(_110744_i)))++) {
		{
			jule::Ptr<_2110e7238_Token> _111117_t = _110758_tokens[(*(_110744_i))];;
			if ((_111117_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _111117_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a99c5ec0:;
						{
							(_110817_brace_n)++;
							goto _iter_next_1a99c4a4b;
						}
					}
					else {
						_case_begin_1a99c58c6:;
						{
							(_110817_brace_n)--;
						}
					}
					_match_end_1a99c5b18:;
				};
			};
			if ((_110817_brace_n > 0LL)) {
				goto _iter_next_1a99c4a4b;
			};
			if (((_111117_t.get()._field_id == static_cast<jule::U64>(8LLU)) || (((*(_110744_i)) + 1LL) >= _110758_tokens.len()))) {
				jule::Slice<jule::Ptr<_2110e7238_Token>> _112925_expr_tokens = nullptr;;
				if ((_111117_t.get()._field_id == static_cast<jule::U64>(8LLU))) {
					_112925_expr_tokens=_110758_tokens.slice(_110913_expr_start,(*(_110744_i)));
				} else {
					_112925_expr_tokens=_110758_tokens.slice(_110913_expr_start);
				};
				return _2117a462b_build_expr(_self_, _112925_expr_tokens);
			};
		}
	_iter_next_1a99c4a4b:;
	}
	_iter_end_1a99c4a4b:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_21110ed44_EnumItemDecl>> _2117ab743_build_enum_items(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _114141_tokens) {
	jule::Slice<jule::Ptr<_21110ed44_EnumItemDecl>> _114217_items = jule::Slice<jule::Ptr<_21110ed44_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::Ptr<jule::I64> _114317_i = jule::new_ptr<jule::I64>(0LL);;
	for (; ((*(_114317_i)) < _114141_tokens.len()); ((*(_114317_i)))++) {
		{
			jule::Ptr<_2110e7238_Token> _114521_t = _114141_tokens[(*(_114317_i))];;
			jule::Ptr<_21110ed44_EnumItemDecl> _114621_item = jule::new_ptr<_21110ed44_EnumItemDecl>(_21110ed44_EnumItemDecl());;
			_114621_item.get()._field_token=_114521_t;
			if ((_114621_item.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
				_2117a3eee_push_err(_self_.ptr(), _114621_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_2117a431d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_114621_item.get()._field_ident=_114621_item.get()._field_token.get()._field_kind;
			if (((((*(_114317_i)) + 1LL) >= _114141_tokens.len()) || (_114141_tokens[((*(_114317_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				if ((((*(_114317_i)) + 1LL) < _114141_tokens.len())) {
					((*(_114317_i)))++;
				};
				_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);;
				goto _iter_next_1a99c9de7;
			};
			((*(_114317_i)))++;
			_114521_t=_114141_tokens[(*(_114317_i))];
			((*(_114317_i)))++;
			if (((_114521_t.get()._field_id != static_cast<jule::U64>(7LLU)) || (_114521_t.get()._field_kind != jule::Str("=", 1)))) {
				_2117a3eee_push_err(_self_.ptr(), _114521_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_1a99c9de7;
			};
			if ((((*(_114317_i)) >= _114141_tokens.len()) || (_114141_tokens[(*(_114317_i))].get()._field_id == static_cast<jule::U64>(8LLU)))) {
				_2117a3eee_push_err(_self_.ptr(), _114521_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1a99c9de7;
			};
			_114621_item.get()._field_expr=_2117ab435_build_enum_item_expr(_self_, _114317_i,_114141_tokens);
			_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);;
		}
	_iter_next_1a99c9de7:;
	}
	_iter_end_1a99c9de7:;;
	return _114217_items;
}



inline jule::Ptr<_211110262_EnumDecl> _2117aba51_build_enum_decl(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _117840_tokens) {
	if (((_117840_tokens.len() < 2LL) || (_117840_tokens.len() < 3LL))) {
		_2117a3eee_push_err(_self_.ptr(), _117840_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_211110262_EnumDecl> _118317_e = jule::new_ptr<_211110262_EnumDecl>(_211110262_EnumDecl(_117840_tokens[1LL],jule::Bool(),jule::Str(),jule::Ptr<_210e7e620_TypeDecl>(),jule::Slice<jule::Ptr<_21110ed44_EnumItemDecl>>(),jule::Ptr<_2110e7238_Token>()));;
	if ((_118317_e.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_2117a3eee_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_118317_e.get()._field_ident=_118317_e.get()._field_token.get()._field_kind;
	jule::I64 _119117_i = 2LL;;
	if ((_117840_tokens[_119117_i].get()._field_id == static_cast<jule::U64>(11LLU))) {
		(_119117_i)++;
		if ((_119117_i >= _117840_tokens.len())) {
			_2117a3eee_push_err(_self_.ptr(), _117840_tokens[(_119117_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _118317_e;
		};
		std::tie(_118317_e.get()._field_kind,std::ignore) = _2117a5918_build_type(_self_, _117840_tokens,(&(_119117_i)),true);
		if ((_119117_i >= _117840_tokens.len())) {
			_2117a38c2_stop(_self_.ptr());
			_2117a3eee_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _118317_e;
		};
	} else {
		_118317_e.get()._field_kind=nullptr;
	};
	jule::Slice<jule::Ptr<_2110e7238_Token>> _120817_item_tokens = _2117a1bab_range(_119117_i,jule::Str("{", 1),jule::Str("}", 1),_117840_tokens);;
	if ((_120817_item_tokens == nullptr)) {
		_2117a38c2_stop(_self_.ptr());
		_2117a3eee_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _118317_e;
	} else if ((_119117_i < _117840_tokens.len())) {
		_2117a3eee_push_err(_self_.ptr(), _117840_tokens[_119117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_118317_e.get()._field_end=_117840_tokens[(_119117_i - 1LL)];
	_118317_e.get()._field_items=_2117ab743_build_enum_items(_self_, _120817_item_tokens);
	return _118317_e;
}



inline jule::Ptr<_211110c46_FieldDecl> _2117abd5e_build_field(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _122235_tokens) {
	jule::Ptr<_211110c46_FieldDecl> _122317_f = jule::new_ptr<_211110c46_FieldDecl>(_211110c46_FieldDecl());;
	_122317_f.get()._field_public=(_122235_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU));
	if (_122317_f.get()._field_public) {
		if ((_122235_tokens.len() == 1LL)) {
			_2117a3eee_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122235_tokens=_122235_tokens.slice(1LL);
	};
	_122317_f.get()._field_mutable=(_122235_tokens[0LL].get()._field_id == static_cast<jule::U64>(36LLU));
	if (_122317_f.get()._field_mutable) {
		if ((_122235_tokens.len() == 1LL)) {
			_2117a3eee_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122235_tokens=_122235_tokens.slice(1LL);
	};
	_122317_f.get()._field_token=_122235_tokens[0LL];
	if ((_122317_f.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_2117a3eee_push_err(_self_.ptr(), _122317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_122317_f.get()._field_ident=_122317_f.get()._field_token.get()._field_kind;
	if ((_122235_tokens.len() == 1LL)) {
		_2117a3eee_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_122235_tokens[1LL].get()._field_id != static_cast<jule::U64>(11LLU))) {
		_2117a3eee_push_err(_self_.ptr(), _122235_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_122235_tokens=_122235_tokens.slice(2LL);
	jule::I64 _126017_i = 0LL;;
	std::tie(_122317_f.get()._field_kind,std::ignore) = _2117a5918_build_type(_self_, _122235_tokens,(&(_126017_i)),true);
	if ((_126017_i < _122235_tokens.len())) {
		jule::Ptr<_2110e7238_Token> _126317_token = _122235_tokens[_126017_i];;
		if (((_126317_token.get()._field_id != static_cast<jule::U64>(7LLU)) || (_126317_token.get()._field_kind != jule::Str("=", 1)))) {
			_2117a3eee_push_err(_self_.ptr(), _122235_tokens[_126017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_126017_i)++;
		if ((_126017_i >= _122235_tokens.len())) {
			_2117a3eee_push_err(_self_.ptr(), _126317_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122235_tokens=_122235_tokens.slice(_126017_i);
		_122317_f.get()._field_default=_2117a462b_build_expr(_self_, _122235_tokens);
	};
	return _122317_f;
}



inline jule::Slice<jule::Ptr<_211110c46_FieldDecl>> _2117ac1b1_build_struct_decl_fields(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _128048_tokens) {
	jule::Slice<jule::Ptr<_211110c46_FieldDecl>> _128117_fields = nullptr;;
	jule::Slice<jule::Ptr<_2117865db_Stmt>> _128217_stmts = _211786982_split_stmts(_128048_tokens);;
	{
		auto &expr = _128217_stmts;
		auto it = expr.begin();
		_iter_begin_1a99e992d:;
		if (it != expr.end()) {
			jule::Ptr<_2117865db_Stmt> _128321_stmt = *it;
			{
				_128048_tokens=_128321_stmt.get()._field_tokens;
				jule::Ptr<_211110c46_FieldDecl> _128521_f = _2117abd5e_build_field(_self_, _128048_tokens);;
				_128117_fields = jule::alloc_for_append(_128117_fields,1);_128117_fields.__push(_128521_f);;
			}
			_iter_next_1a99e992d:;
			++it;
			goto _iter_begin_1a99e992d;
		}
		_iter_end_1a99e992d:;
	};
	return _128117_fields;
}



inline jule::Ptr<_2111115a4_StructDecl> _2117ac4ad_build_struct_decl(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _129142_tokens) {
	if ((_129142_tokens.len() < 3LL)) {
		_2117a3eee_push_err(_self_.ptr(), _129142_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _129717_i = 1LL;;
	jule::Ptr<_2111115a4_StructDecl> _129817_s = jule::new_ptr<_2111115a4_StructDecl>(_2111115a4_StructDecl(_129142_tokens[_129717_i],jule::Ptr<_2110e7238_Token>(),jule::Str(),jule::Slice<jule::Ptr<_211110c46_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_210eb33e0_Directive>>(),jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>()));;
	if ((_129817_s.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_2117a3eee_push_err(_self_.ptr(), _129817_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_129717_i)++;
	if ((_129717_i >= _129142_tokens.len())) {
		_2117a3eee_push_err(_self_.ptr(), _129142_tokens[_129717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _129817_s;
	};
	_129817_s.get()._field_ident=_129817_s.get()._field_token.get()._field_kind;
	jule::Ptr<_2110e7238_Token> _131213_error_token = _129142_tokens[_129717_i];;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _131317_generics_tokens = _2117a1bab_range(_129717_i,jule::Str("[", 1),jule::Str("]", 1),_129142_tokens);;
	if ((_131317_generics_tokens != nullptr)) {
		_129817_s.get()._field_generics=_2117a7233_build_generics(_self_.ptr(), _131317_generics_tokens,_131213_error_token);
	};
	if ((_129717_i >= _129142_tokens.len())) {
		_2117a3eee_push_err(_self_.ptr(), _129142_tokens[(_129717_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _129817_s;
	};
	jule::Slice<jule::Ptr<_2110e7238_Token>> _132317_body_tokens = _2117a1bab_range(_129717_i,jule::Str("{", 1),jule::Str("}", 1),_129142_tokens);;
	if ((_132317_body_tokens == nullptr)) {
		_2117a38c2_stop(_self_.ptr());
		_2117a3eee_push_err(_self_.ptr(), _129817_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _129817_s;
	};
	if ((_129717_i < _129142_tokens.len())) {
		_2117a3eee_push_err(_self_.ptr(), _129142_tokens[_129717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_129817_s.get()._field_fields=_2117ac1b1_build_struct_decl_fields(_self_, _132317_body_tokens);
	_129817_s.get()._field_end=_129142_tokens[(_129717_i - 1LL)];
	return _129817_s;
}



inline void _2117ac733_check_method_receiver(_2117a3592_Parser* _self_, jule::Ptr<_21110ce74_FnDecl>& _133841_f) {
	if (_133841_f.get()._field_statically) {
		if (((_133841_f.get()._field_params.len() > 0LL) && _21105e28d_is_self(_133841_f.get()._field_params[0LL].ptr()))) {
			_2117a3eee_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_133841_f.get()._field_params.len() == 0LL)) {
		_2117a3eee_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_21110cc87_ParamDecl> _135113_param = _133841_f.get()._field_params[0LL];;
	if ((!(_21105e28d_is_self(_135113_param.ptr())))) {
		_2117a3eee_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_21110ce74_FnDecl>> _2117aca41_build_trait_methods(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _135843_tokens) {
	jule::Slice<jule::Ptr<_21110ce74_FnDecl>> _135917_methods = nullptr;;
	jule::Slice<jule::Ptr<_2117865db_Stmt>> _136017_stmts = _211786982_split_stmts(_135843_tokens);;
	{
		auto &expr = _136017_stmts;
		auto it = expr.begin();
		_iter_begin_1a9a0ae5b:;
		if (it != expr.end()) {
			jule::Ptr<_2117865db_Stmt> _136121_stmt = *it;
			{
				_135843_tokens=_136121_stmt.get()._field_tokens;
				if ((_135843_tokens.len() == 0LL)) {
					goto _iter_next_1a9a0ae5b;
				};
				jule::Bool _136721_is_pub = false;;
				if ((_135843_tokens[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
					_136721_is_pub=true;
					if ((_135843_tokens.len() == 1LL)) {
						_2117a3eee_push_err(_self_.ptr(), _135843_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1a9a0ae5b;
					};
					_135843_tokens=_135843_tokens.slice(1LL);
				};
				jule::Ptr<_21110ce74_FnDecl> _137721_f = _2117a9b3c_build_fn(_self_, _135843_tokens,true,true);;
				if ((_137721_f != nullptr)) {
					if (_21107aead_is_anon(_137721_f.ptr())) {
						_2117a3eee_push_err(_self_.ptr(), _137721_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_2117ac733_check_method_receiver(_self_.ptr(), _137721_f);
					if ((_137721_f.get()._field_generics.len() > 0LL)) {
						_2117a3eee_push_err(_self_.ptr(), _137721_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_137721_f.get()._field_public=_136721_is_pub;
					_135917_methods = jule::alloc_for_append(_135917_methods,1);_135917_methods.__push(_137721_f);;
				};
			}
			_iter_next_1a9a0ae5b:;
			++it;
			goto _iter_begin_1a9a0ae5b;
		}
		_iter_end_1a9a0ae5b:;
	};
	return _135917_methods;
}



inline jule::Ptr<_211111bae_TraitDecl> _2117acd4e_build_trait_decl(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _139341_tokens) {
	if ((_139341_tokens.len() < 3LL)) {
		_2117a3eee_push_err(_self_.ptr(), _139341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_211111bae_TraitDecl> _139817_t = jule::new_ptr<_211111bae_TraitDecl>(_211111bae_TraitDecl(_139341_tokens[1LL],jule::Ptr<_2110e7238_Token>(),jule::Str(),jule::Bool(),jule::Slice<jule::Ptr<_21110ce74_FnDecl>>()));;
	if ((_139817_t.get()._field_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
		_2117a3eee_push_err(_self_.ptr(), _139817_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_139817_t.get()._field_ident=_139817_t.get()._field_token.get()._field_kind;
	jule::I64 _140617_i = 2LL;;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _140717_body_tokens = _2117a1bab_range(_140617_i,jule::Str("{", 1),jule::Str("}", 1),_139341_tokens);;
	if ((_140717_body_tokens == nullptr)) {
		_2117a38c2_stop(_self_.ptr());
		_2117a3eee_push_err(_self_.ptr(), _139817_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_140617_i < _139341_tokens.len())) {
		_2117a3eee_push_err(_self_.ptr(), _139341_tokens[_140617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_139817_t.get()._field_methods=_2117aca41_build_trait_methods(_self_, _140717_body_tokens);
	_139817_t.get()._field_end=_139341_tokens[(_140617_i - 1LL)];
	return _139817_t;
}



inline jule::Ptr<_21110ce74_FnDecl> _2117ad15c_build_cpp_link_fn(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _142241_tokens) {
	_142241_tokens=_142241_tokens.slice(1LL);
	jule::Ptr<_21110ce74_FnDecl> _142417_f = _2117a9b3c_build_fn(_self_, _142241_tokens,false,true);;
	if ((_142417_f != nullptr)) {
		if (_21107aead_is_anon(_142417_f.ptr())) {
			_2117a3eee_push_err(_self_.ptr(), _142417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_142417_f.get()._field_cpp_linked=true;
	};
	return _142417_f;
}



inline jule::Ptr<_21110d161_VarDecl> _2117ad46a_build_cpp_link_var(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _143442_tokens) {
	_143442_tokens=_143442_tokens.slice(1LL);
	jule::Ptr<_21110d161_VarDecl> _143617_v = _2117a6a6d_build_var(_self_, _143442_tokens);;
	if ((_143617_v != nullptr)) {
		_143617_v.get()._field_cpp_linked=true;
		if ((_143617_v.get()._field_expr != nullptr)) {
			_2117a3eee_push_err(_self_.ptr(), _143617_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _143617_v;
}



inline jule::Ptr<_2111115a4_StructDecl> _2117ad778_build_cpp_link_struct(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _144645_tokens) {
	_144645_tokens=_144645_tokens.slice(1LL);
	jule::Ptr<_2111115a4_StructDecl> _144817_s = _2117ac4ad_build_struct_decl(_self_, _144645_tokens);;
	if ((_144817_s != nullptr)) {
		_144817_s.get()._field_cpp_linked=true;
	};
	return _144817_s;
}



inline jule::Ptr<_21110e591_TypeAliasDecl> _2117adaca_build_cpp_link_type_alias(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _145549_tokens) {
	_145549_tokens=_145549_tokens.slice(1LL);
	jule::Ptr<_21110e591_TypeAliasDecl> _145717_t = _2117a5c26_build_type_alias_decl(_self_, _145549_tokens);;
	if ((_145717_t != nullptr)) {
		_145717_t.get()._field_cpp_linked=true;
	};
	return _145717_t;
}



inline jule::Ptr<_21110eb57_UseDecl> _2117addc7_build_cpp_link_use(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _146442_tokens) {
	if ((_146442_tokens.len() == 1LL)) {
		_2117a3eee_push_err(_self_.ptr(), _146442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_146442_tokens=_146442_tokens.slice(1LL);
	;
	return _2117ab07d_build_use_decl(_self_.ptr(), _146442_tokens,true);
}



inline jule::Any _2117ae1d5_build_cpp_link(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _147539_tokens) {
	jule::Ptr<_2110e7238_Token> _147617_token = _147539_tokens[0LL];;
	if ((_147539_tokens.len() == 1LL)) {
		_2117a3eee_push_err(_self_.ptr(), _147617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_147617_token=_147539_tokens[1LL];
	{
		auto &_match_expr{ _147617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a9a24ea8:;
			{
				return jule::Any(_2117addc7_build_cpp_link_use(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a9a2501e:;
			{
				return jule::Any(_2117ad15c_build_cpp_link_fn(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a9a25085:;
			{
				return jule::Any(_2117ad46a_build_cpp_link_var(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1a9a250eb:;
			{
				return jule::Any(_2117ad778_build_cpp_link_struct(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a9a258c1:;
			{
				return jule::Any(_2117adaca_build_cpp_link_type_alias(_self_, _147539_tokens));
			}
		}
		else {
			_case_begin_1a9a24062:;
			{
				_2117a3eee_push_err(_self_.ptr(), _147617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9a24d98:;
	};
	return nullptr;
}



inline jule::Ptr<_21110ce74_FnDecl> _2117ae4e3_get_method(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _150135_tokens) {
	jule::I64 _150217_i = 0LL;;
	jule::Ptr<_2110e7238_Token> _150317_token = _150135_tokens[_150217_i];;
	if ((_150317_token.get()._field_id == static_cast<jule::U64>(38LLU))) {
		if (((_150217_i + 1LL) >= _150135_tokens.len())) {
			_2117a3eee_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_150217_i)++;
		_150317_token=_150135_tokens[_150217_i];
	};
	if ((_150317_token.get()._field_id == static_cast<jule::U64>(35LLU))) {
		if (((_150217_i + 1LL) >= _150135_tokens.len())) {
			_2117a3eee_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_150217_i)++;
		_150317_token=_150135_tokens[_150217_i];
	};
	if ((_150317_token.get()._field_id != static_cast<jule::U64>(33LLU))) {
		_2117a3eee_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_21110ce74_FnDecl> _152717_f = _2117a9b3c_build_fn(_self_, _150135_tokens,true,false);;
	if (((_152717_f != nullptr) && _21107aead_is_anon(_152717_f.ptr()))) {
		_2117a3eee_push_err(_self_.ptr(), _152717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _152717_f;
}



inline void _2117ae812_parse_impl_body(jule::Ptr<_2117a3592_Parser> _self_, jule::Ptr<_2111122b9_Impl>& _153440_ipl, jule::Slice<jule::Ptr<_2110e7238_Token>>& _153457_tokens) {
	jule::Slice<jule::Ptr<_2117865db_Stmt>> _153517_stmts = _211786982_split_stmts(_153457_tokens);;
	{
		auto &expr = _153517_stmts;
		auto it = expr.begin();
		_iter_begin_1a9a2ed5e:;
		if (it != expr.end()) {
			jule::Ptr<_2117865db_Stmt> _153621_stmt = *it;
			{
				_153457_tokens=_153621_stmt.get()._field_tokens;
				jule::Ptr<_2110e7238_Token> _153821_token = _153457_tokens[0LL];;
				jule::Bool _153921_is_pub = false;;
				{
					auto &_match_expr{ _153821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1a9a30da4:;
						{
							_2117a4bae_push_directive(_self_.ptr(), _2117a4939_build_directive(_self_.ptr(), _153457_tokens));
							goto _iter_next_1a9a2ed5e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1a9a3113a:;
						{
							_153921_is_pub=true;
							if ((_153457_tokens.len() == 1LL)) {
								_2117a3eee_push_err(_self_.ptr(), _153457_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1a9a2ed5e;
							};
							_153457_tokens=_153457_tokens.slice(1LL);
							if ((_153457_tokens.len() > 0LL)) {
								_153821_token=_153457_tokens[0LL];
							};
						}
					}
					_match_end_1a9a31080:;
				};
				{
					auto &_match_expr{ _153821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1a9a33c42:;
						{
							jule::Ptr<_21110d161_VarDecl> _155825_v = _2117a6a6d_build_var(_self_, _153457_tokens);;
							if ((_155825_v != nullptr)) {
								_155825_v.get()._field_public=_153921_is_pub;
								_153440_ipl.get()._field_statics = jule::alloc_for_append(_153440_ipl.get()._field_statics,1);_153440_ipl.get()._field_statics.__push(_155825_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1a9a3202b:;
						{
							jule::Ptr<_21110ce74_FnDecl> _156625_f = _2117ae4e3_get_method(_self_, _153457_tokens);;
							if ((_156625_f != nullptr)) {
								_2117ac733_check_method_receiver(_self_.ptr(), _156625_f);
								_2117b04c2_apply_fn_meta(_self_.ptr(), _156625_f,_153921_is_pub);
								_153440_ipl.get()._field_methods = jule::alloc_for_append(_153440_ipl.get()._field_methods,1);_153440_ipl.get()._field_methods.__push(_156625_f);;
							};
						}
					}
					else {
						_case_begin_1a9a335e3:;
						{
							_2117a3eee_push_err(_self_.ptr(), _153821_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1a9a2ed5e;
						}
					}
					_match_end_1a9a3358d:;
				};
			}
			_iter_next_1a9a2ed5e:;
			++it;
			goto _iter_begin_1a9a2ed5e;
		}
		_iter_end_1a9a2ed5e:;
	};
}



inline jule::Ptr<_2111122b9_Impl> _2117aeb20_build_impl(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _157934_tokens) {
	jule::Ptr<_2110e7238_Token> _158017_token = _157934_tokens[0LL];;
	if ((_157934_tokens.len() < 2LL)) {
		_2117a3eee_push_err(_self_.ptr(), _158017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I64 _158617_i = 1LL;;
	jule::Ptr<_210e7e620_TypeDecl> _158818_base;;
	jule::Bool _158828_ok;;
	std::tie(_158818_base,_158828_ok) = _2117a5918_build_type(_self_, _157934_tokens,(&(_158617_i)),true);
	if ((!(_158828_ok))) {
		return nullptr;
	};
	if ((_158617_i >= _157934_tokens.len())) {
		_2117a3eee_push_err(_self_.ptr(), _158017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_2111122b9_Impl> _159717_ipl = jule::new_ptr<_2111122b9_Impl>(_2111122b9_Impl(jule::Ptr<_2110e7238_Token>(),_158818_base,jule::Ptr<_210e7e620_TypeDecl>(),jule::Slice<jule::Ptr<_21110ce74_FnDecl>>(),jule::Slice<jule::Ptr<_21110d161_VarDecl>>()));;
	_158017_token=_157934_tokens[_158617_i];
	if ((_158017_token.get()._field_id != static_cast<jule::U64>(12LLU))) {
		if (((_158017_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_158017_token.get()._field_kind == jule::Str("{", 1)))) {
			std::tie(_159717_ipl.get()._field_base,_159717_ipl.get()._field_dest) = std::make_tuple(_159717_ipl.get()._field_dest,_159717_ipl.get()._field_base);
			goto _julec_label_body;
		};
		_2117a38c2_stop(_self_.ptr());
		_2117a3eee_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_158617_i)++;
	if ((_158617_i >= _157934_tokens.len())) {
		_2117a38c2_stop(_self_.ptr());
		_2117a3eee_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_159717_ipl.get()._field_dest,_158828_ok) = _2117a5918_build_type(_self_, _157934_tokens,(&(_158617_i)),true);
	if ((!(_158828_ok))) {
		return nullptr;
	};
	if ((_158617_i >= _157934_tokens.len())) {
		_2117a38c2_stop(_self_.ptr());
		_2117a3eee_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _163717_body_tokens = _2117a1bab_range(_158617_i,jule::Str("{", 1),jule::Str("}", 1),_157934_tokens);;
	if ((_163717_body_tokens == nullptr)) {
		_2117a38c2_stop(_self_.ptr());
		_2117a3eee_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_158617_i < _157934_tokens.len())) {
		_2117a3eee_push_err(_self_.ptr(), _157934_tokens[_158617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_159717_ipl.get()._field_end=_157934_tokens[(_158617_i - 1LL)];
	_2117ae812_parse_impl_body(_self_, _159717_ipl,_163717_body_tokens);
	return _159717_ipl;
}



inline jule::Any _2117aee2d_build_node_data(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _165240_tokens) {
	jule::Ptr<_2110e7238_Token> _165317_token = _165240_tokens[0LL];;
	{
		auto &_match_expr{ _165317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a9a46e75:;
			{
				;
				return jule::Any(_2117ab07d_build_use_decl(_self_.ptr(), _165240_tokens,false));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a9a46edb:;
			{
				jule::Ptr<_21110ce74_FnDecl> _166021_f = _2117a9b3c_build_fn(_self_, _165240_tokens,false,false);;
				if ((_166021_f != nullptr)) {
					_166021_f.get()._field_global=true;
					if (_21107aead_is_anon(_166021_f.ptr())) {
						_2117a3eee_push_err(_self_.ptr(), _166021_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_166021_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1a9a47162:;
			{
				return jule::Any(_2117a6a6d_build_var(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a9a471c8:;
			{
				return jule::Any(_2117a5c26_build_type_alias_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1a9a46529:;
			{
				return jule::Any(_2117aba51_build_enum_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1a9a46590:;
			{
				return jule::Any(_2117ac4ad_build_struct_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a9a46606:;
			{
				return jule::Any(_2117acd4e_build_trait_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a9a4666c:;
			{
				return jule::Any(_2117aeb20_build_impl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a9a47261:;
			{
				return jule::Any(_2117ae1d5_build_cpp_link(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1a9a472c7:;
			{
				return jule::Any(_2117a4939_build_directive(_self_.ptr(), _165240_tokens));
			}
		}
		else {
			_case_begin_1a9a45da8:;
			{
				_2117a3eee_push_err(_self_.ptr(), _165317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a9a46491:;
	};
}



inline void _2117b01a3_check_directive(_2117a3592_Parser* _self_, _2110cc1c9_Node& _169335_node) {
	if (((*_self_)._field_directives == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _169335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_210eb33e0_Directive>>()) {
			_case_begin_1a9a4e972:;
			{
				goto _match_end_1a9a4dce5;
			}
		}
		else {
			_case_begin_1a9a4dd4a:;
			{
				if (((*_self_)._field_directives.len() != 0LL)) {
					_2117a3eee_push_err(&(*_self_), (*_self_)._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
				};
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1a9a4dce5:;
	};
}



inline void _2117b04c2_apply_fn_meta(_2117a3592_Parser* _self_, jule::Ptr<_21110ce74_FnDecl>& _171037_f, jule::Bool _171049_is_pub) {
	_171037_f.get()._field_public=_171049_is_pub;
	_171037_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _2117b07e1_apply_meta(_2117a3592_Parser* _self_, _2110cc1c9_Node& _171634_node, jule::Bool _171646_is_pub) {
	{
		auto &_match_expr{ _171634_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_21110d161_VarDecl>>()) {
			_case_begin_1a9a52513:;
			{
				jule::Ptr<_21110d161_VarDecl> _171921_v = _171634_node._field_data.operator jule::Ptr<_21110d161_VarDecl>();;
				if ((_171921_v == nullptr)) {
					return;;
				};
				_171921_v.get()._field_public=_171646_is_pub;
				_171921_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110ce74_FnDecl>>()) {
			_case_begin_1a9a52579:;
			{
				jule::Ptr<_21110ce74_FnDecl> _172721_f = _171634_node._field_data.operator jule::Ptr<_21110ce74_FnDecl>();;
				if ((_172721_f == nullptr)) {
					return;;
				};
				_2117b04c2_apply_fn_meta(&(*_self_), _172721_f,_171646_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110e591_TypeAliasDecl>>()) {
			_case_begin_1a9a525e0:;
			{
				jule::Ptr<_21110e591_TypeAliasDecl> _173321_tad = _171634_node._field_data.operator jule::Ptr<_21110e591_TypeAliasDecl>();;
				if ((_173321_tad == nullptr)) {
					return;;
				};
				_173321_tad.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211110262_EnumDecl>>()) {
			_case_begin_1a9a52656:;
			{
				jule::Ptr<_211110262_EnumDecl> _173921_ed = _171634_node._field_data.operator jule::Ptr<_211110262_EnumDecl>();;
				if ((_173921_ed == nullptr)) {
					return;;
				};
				_173921_ed.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2111115a4_StructDecl>>()) {
			_case_begin_1a9a52843:;
			{
				jule::Ptr<_2111115a4_StructDecl> _174521_sd = _171634_node._field_data.operator jule::Ptr<_2111115a4_StructDecl>();;
				if ((_174521_sd == nullptr)) {
					return;;
				};
				_174521_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_174521_sd.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211111bae_TraitDecl>>()) {
			_case_begin_1a9a528a9:;
			{
				jule::Ptr<_211111bae_TraitDecl> _175321_td = _171634_node._field_data.operator jule::Ptr<_211111bae_TraitDecl>();;
				if ((_175321_td == nullptr)) {
					return;;
				};
				_175321_td.get()._field_public=_171646_is_pub;
			}
		}
		else {
			_case_begin_1a9a52458:;
			{
				if (_171646_is_pub) {
					_2117a3eee_push_err(&(*_self_), _171634_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1a9a52403:;
	};
}



inline void _2117b0a66_check_use_decl(_2117a3592_Parser* _self_, _2110cc1c9_Node& _176534_node) {
	{
		auto &_match_expr{ _176534_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_21110eb57_UseDecl>>()) {
			_case_begin_1a9a596e6:;
			{
				goto _match_end_1a9a598d3;
			}
		}
		else {
			_case_begin_1a9a59938:;
			{
				return;;
			}
		}
		_match_end_1a9a598d3:;
	};
	if (((*_self_)._field_ast.get()._field_nodes.len() > 0LL)) {
		_2117a3eee_push_err(&(*_self_), _176534_node._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_2117a431d_push_suggestion(&(*_self_), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline std::tuple<jule::Bool,jule::Any> _2117b0db8_build_general_scope_node_data(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _178053_st) {
	jule::Bool _178069_is_pub = jule::Bool();
	jule::Any _178083_data = jule::Any();
	if ((_178053_st[0LL].get()._field_id == static_cast<jule::U64>(21LLU))) {
		_178069_is_pub=true;
		_178053_st=_178053_st.slice(1LL);
		if ((_178053_st.len() == 0LL)) {
			_2117a3eee_push_err(_self_.ptr(), _178053_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_178069_is_pub,_178083_data);
		};
	};
	_178083_data=jule::Any(_2117aee2d_build_node_data(_self_, _178053_st));
	_178083_data = jule::Any(_178083_data);
	return std::make_tuple(_178069_is_pub,_178083_data);
}



inline _2110cc1c9_Node _2117b11b5_parse_node(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _179535_st) {
	_2110cc1c9_Node _179617_node = _2110cc1c9_Node(_179535_st[0LL],jule::Any());;
	jule::Bool _180014_is_pub;;
	jule::Any _180026_data;;
	std::tie(_180014_is_pub,_180026_data) = _2117b0db8_build_general_scope_node_data(_self_, _179535_st);
	if ((_180026_data == nullptr)) {
		return _179617_node;
	};
	_179617_node._field_data=jule::Any(_180026_data);
	_2117b07e1_apply_meta(_self_.ptr(), _179617_node,_180014_is_pub);
	_2117b01a3_check_directive(_self_.ptr(), _179617_node);
	_2117b0a66_check_use_decl(_self_.ptr(), _179617_node);
	return _179617_node;
}



inline void _2117b143a_append_node(jule::Ptr<_2117a3592_Parser> _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _181336_st) {
	if ((_181336_st.len() == 0LL)) {
		return;;
	};
	_2110cc1c9_Node _181817_node = _2117b11b5_parse_node(_self_, _181336_st);;
	if (((_181817_node._field_data == nullptr) || _2117a3b36_stopped(_self_.ptr()))) {
		return;;
	};
	{
		
		if (_210e855c1_is_directive(&_181817_node)) {
			_case_begin_1a9a64547:;
			{
				_2117a4bae_push_directive(_self_.ptr(), _181817_node._field_data.operator jule::Ptr<_210eb33e0_Directive>());
			}
		}
		else if (_210e99b02_is_use_decl(&_181817_node)) {
			_case_begin_1a9a6425b:;
			{
				_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_181817_node._field_data.operator jule::Ptr<_21110eb57_UseDecl>());;
			}
		}
		else if ((_210e94569_is_decl(&_181817_node) || _210e98eb9_is_impl(&_181817_node))) {
			_case_begin_1a9a642c2:;
			{
				_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_181817_node);;
			}
		}
		else {
			_case_begin_1a9a641e5:;
			{
				_2117a3eee_push_err(_self_.ptr(), _181817_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9a64190:;
	};
}



inline void _2117b189c_remove_range(_2117a3592_Parser* _self_, jule::I64 _183631_i, jule::Str _183639_kind, jule::Slice<jule::Ptr<_2110e7238_Token>>& _183651_tokens, jule::Slice<jule::I64>& _183674_ranges) {
	jule::Str _183713_close = _2117a266d_get_close_kind_of_brace(_183639_kind);;
	for (; (_183631_i >= 0LL); (_183631_i)--) {
		{
			jule::Ptr<_2110e7238_Token> _183917_tok = _183651_tokens[_183674_ranges[_183631_i]];;
			if ((_183917_tok.get()._field_kind != _183713_close)) {
				goto _iter_next_1a9a682a4;
			};
			_183674_ranges=jule::append(_183674_ranges.slice(0LL,_183631_i),_183674_ranges.slice((_183631_i + 1LL)));
			goto _iter_end_1a9a682a4;
		}
	_iter_next_1a9a682a4:;
	}
	_iter_end_1a9a682a4:;;
}



inline void _2117b1ca9_push_wrong_order_close_err(_2117a3592_Parser* _self_, jule::Ptr<_2110e7238_Token>& _184846_t, jule::Slice<jule::Ptr<_2110e7238_Token>>& _184858_tokens, jule::Slice<jule::I64>& _184877_ranges) {
	{
		auto &_match_expr{ _184858_tokens[_184877_ranges[(_184877_ranges.len() - 1LL)]].get()._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1a9a6ae22:;
			{
				_2117a3eee_push_err(&(*_self_), _184846_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1a9a6ae88:;
			{
				_2117a3eee_push_err(&(*_self_), _184846_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1a9a6aeee:;
			{
				_2117a3eee_push_err(&(*_self_), _184846_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9a6ad89:;
	};
}



inline void _2117b220a_push_range_close(_2117a3592_Parser* _self_, jule::Ptr<_2110e7238_Token> _185935_t, jule::Str _185946_left, jule::Slice<jule::Ptr<_2110e7238_Token>>& _185958_tokens, jule::Slice<jule::I64>& _185981_ranges) {
	jule::I64 _186013_n = _185981_ranges.len();;
	if ((_186013_n == 0LL)) {
		{
			auto &_match_expr{ _185935_t.get()._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1a9a6e5c9:;
				{
					_2117a3eee_push_err(&(*_self_), _185935_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1a9a6e662:;
				{
					_2117a3eee_push_err(&(*_self_), _185935_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1a9a6e6c8:;
				{
					_2117a3eee_push_err(&(*_self_), _185935_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1a9a6e51e:;
		};
		return;;
	} else if ((_185958_tokens[_185981_ranges[(_186013_n - 1LL)]].get()._field_kind != _185946_left)) {
		_2117b1ca9_push_wrong_order_close_err(&(*_self_), _185935_t,_185958_tokens,_185981_ranges);
	};
	_2117b189c_remove_range(&(*_self_), static_cast<jule::I64>((_186013_n - 1LL)),_185935_t.get()._field_kind,_185958_tokens,_185981_ranges);
}



inline void _2117b2480_check_ranges(_2117a3592_Parser* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>>& _187732_tokens) {
	jule::Slice<jule::I64> _187817_ranges = nullptr;;
	{
		auto &expr = _187732_tokens;
		auto it = expr.begin();
		_iter_begin_1a9a73303:;
		if (it != expr.end()) {
			jule::I64 _188013_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> &_188016_token = *it;
			{
				if ((_188016_token.get()._field_id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1a9a73303;
				};
				{
					auto &_match_expr{ _188016_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1a9a7439d:;
						{
							_187817_ranges = jule::alloc_for_append(_187817_ranges,1);_187817_ranges.__push(_188013_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a9a74414:;
						{
							_2117b220a_push_range_close(&(*_self_), _188016_token,jule::Str("(", 1),_187732_tokens,_187817_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a9a744d0:;
						{
							_2117b220a_push_range_close(&(*_self_), _188016_token,jule::Str("{", 1),_187732_tokens,_187817_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a9a74546:;
						{
							_2117b220a_push_range_close(&(*_self_), _188016_token,jule::Str("[", 1),_187732_tokens,_187817_ranges);
						}
					}
					_match_end_1a9a73c1b:;
				};
			}
			_iter_next_1a9a73303:;
			++it;
			_188013_i++;
			goto _iter_begin_1a9a73303;
		}
		_iter_end_1a9a73303:;
	};
	{
		auto &expr = _187817_ranges;
		auto it = expr.begin();
		_iter_begin_1a9a763e4:;
		if (it != expr.end()) {
			jule::I64 _189816_i = *it;
			{
				jule::Ptr<_2110e7238_Token> _189917_token = _187732_tokens[_189816_i];;
				{
					auto &_match_expr{ _189917_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a9a771d6:;
						{
							_2117a3eee_push_err(&(*_self_), _189917_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1a9a77280:;
						{
							_2117a3eee_push_err(&(*_self_), _189917_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a9a772e6:;
						{
							_2117a3eee_push_err(&(*_self_), _189917_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1a9a77181:;
				};
			}
			_iter_next_1a9a763e4:;
			++it;
			goto _iter_begin_1a9a763e4;
		}
		_iter_end_1a9a763e4:;
	};
}



inline void _2117b2705_parse(jule::Ptr<_2117a3592_Parser> _self_, jule::Ptr<_2110ec628_File>& _191130_f) {
	_self_.get()._field_ast=jule::new_ptr<_210eb3d6e_Ast>(_210eb3d6e_Ast(_191130_f,jule::Slice<jule::Ptr<_210eb33e0_Directive>>(),jule::Slice<jule::Ptr<_21110eb57_UseDecl>>(),jule::Slice<_2110cc1c9_Node>()));
	_2117b2480_check_ranges(_self_.ptr(), _191130_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_2117865db_Stmt>> _192117_stmts = _211786982_split_stmts(_191130_f.get()._field_tokens);;
	jule::I64 _192417_i = 0LL;;
	_julec_label_iter:;
	for (; (_192417_i < _192117_stmts.len()); (_192417_i)++) {
		{
			jule::Ptr<_2117865db_Stmt> _192721_stmt = _192117_stmts[_192417_i];;
			if ((_192721_stmt.get()._field_tokens.len() == 0LL)) {
				return;;
			};
			jule::Any _193225_data;;
			std::tie(std::ignore,_193225_data) = _2117b0db8_build_general_scope_node_data(_self_, _192721_stmt.get()._field_tokens);
			if ((_193225_data == nullptr)) {
				goto _iter_end_1a9a7aae1;
			};
			if (_2117a3b36_stopped(_self_.ptr())) {
				return;;
			};
			{
				auto &_match_expr{ _193225_data };
				
				if (_match_expr.type_is<jule::Ptr<_210eb33e0_Directive>>()) {
					_case_begin_1a9a7cbe2:;
					{
						jule::Ptr<_210eb33e0_Directive> _194325_d = _193225_data.operator jule::Ptr<_210eb33e0_Directive>();;
						if (((_194325_d != nullptr) && _210c41b96_is_top_directive(_194325_d.get()._field_tag.get()._field_kind))) {
							_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_194325_d);;
						} else {
							goto _iter_end_1a9a7aae1;
						};
					}
				}
				else {
					_case_begin_1a9a7ca38:;
					{
						goto _iter_end_1a9a7aae1;
					}
				}
				_match_end_1a9a7c461:;
			};
		}
	_iter_next_1a9a7aae1:;
	}
	_iter_end_1a9a7aae1:;;
	_self_.get()._field_errors=nullptr;
	for (; (_192417_i < _192117_stmts.len()); (_192417_i)++) {
		{
			jule::Ptr<_2117865db_Stmt> _195821_stmt = _192117_stmts[_192417_i];;
			_2117b143a_append_node(_self_, _195821_stmt.get()._field_tokens);
			if (_2117a3b36_stopped(_self_.ptr())) {
				goto _iter_end_1a9a7e353;
			};
		}
	_iter_next_1a9a7e353:;
	}
	_iter_end_1a9a7e353:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_2117a3eee_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2117a3592_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _2117b4460_push_err(_2117b3d88_TypeBuilder* _self_, jule::Ptr<_2110e7238_Token> _7727_token, jule::Str _7742_fmt) {
	if ((*_self_)._field_err) {
		_2117a3eee_push_err((*_self_)._field_p.ptr(), _7727_token,_7742_fmt,jule::Slice<jule::Any>());
	};
}



inline void _2117b477e_push_suggestion(_2117b3d88_TypeBuilder* _self_, jule::Str _8434_fmt, jule::Slice<jule::Any> _8447_args) {
	if ((*_self_)._field_err) {
		_2117a431d_push_suggestion((*_self_)._field_p.ptr(), _8434_fmt,jule::Any(_8447_args));
	};
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b49e3_build_prim(_2117b3d88_TypeBuilder* _self_) {
	jule::Ptr<_210e7e620_TypeDecl> _9117_t = _2117b356e_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _9117_t;
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b4c57_build_namespace(_2117b3d88_TypeBuilder* _self_) {
	jule::Ptr<_210e7e620_TypeDecl> _9717_t = jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl((*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Any()));;
	jule::Ptr<_210e86c54_NamespaceTypeDecl> _10117_nst = jule::new_ptr<_210e86c54_NamespaceTypeDecl>();;
	jule::I64 _10217_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_2110e7238_Token> _10421_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_10217_n & 1LL) == 0LL)) {
				if ((_10421_token.get()._field_id != static_cast<jule::U64>(2LLU))) {
					_2117b4460_push_err(&(*_self_), _10421_token,jule::Str("invalid syntax", 14));
					_2117b477e_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_10117_nst.get()._field_idents = jule::alloc_for_append(_10117_nst.get()._field_idents,1);_10117_nst.get()._field_idents.__push(_10421_token);;
			} else if ((_10421_token.get()._field_id != static_cast<jule::U64>(23LLU))) {
				goto _iter_end_1a9a8b96a;
			};
			(_10217_n)++;
		}
	_iter_next_1a9a8b96a:;
	}
	_iter_end_1a9a8b96a:;;
	_10117_nst.get()._field_idents=_10117_nst.get()._field_idents.slice(0LL,(_10117_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10117_nst.get()._field_kind=_2117b5494_build_ident(&(*_self_)).get()._field_kind.operator jule::Ptr<_210e7e80c_IdentTypeDecl>();
	_9717_t.get()._field_kind=jule::Any(_10117_nst);
	return _9717_t;
}



inline jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> _2117b4ebb_build_generics(_2117b3d88_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_2110e7238_Token> _13013_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_13013_token.get()._field_id != static_cast<jule::U64>(3LLU)) || (_13013_token.get()._field_kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _13517_parts = _2117b5230_ident_generics(&(*_self_));;
	if ((_13517_parts.len() == 0LL)) {
		_2117b4460_push_err(&(*_self_), _13013_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_210e7e620_TypeDecl>> _14117_types = jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>::alloc(0LL,_13517_parts.len());;
	{
		auto &expr = _13517_parts;
		auto it = expr.begin();
		_iter_begin_1a9a939c7:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _14221_part = *it;
			{
				jule::I64 _14321_j = 0LL;;
				jule::Ptr<_210e7e620_TypeDecl> _14422_t;;
				std::tie(_14422_t,std::ignore) = _2117a5918_build_type((*_self_)._field_p, _14221_part,(&(_14321_j)),true);
				if ((_14321_j < _14221_part.len())) {
					_2117b4460_push_err(&(*_self_), _14221_part[_14321_j],jule::Str("invalid syntax", 14));
				};
				_14117_types = jule::alloc_for_append(_14117_types,1);_14117_types.__push(_14422_t);;
			}
			_iter_next_1a9a939c7:;
			++it;
			goto _iter_begin_1a9a939c7;
		}
		_iter_end_1a9a939c7:;
	};
	return _14117_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _2117b5230_ident_generics(_2117b3d88_TypeBuilder* _self_) {
	jule::I64 _15413_first = (*((*_self_)._field_i));;
	jule::I64 _15517_range_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_2110e7238_Token> _15717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15717_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _15717_token.get()._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a9a9803c:;
						{
							(_15517_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a9a9835b:;
						{
							(_15517_range_n)--;
						}
					}
					_match_end_1a9a9827e:;
				};
			};
			if ((_15517_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1a9a96205;
			};
		}
	_iter_next_1a9a96205:;
	}
	_iter_end_1a9a96205:;;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _17117_tokens = (*_self_)._field_tokens.slice((_15413_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _17218_parts;;
	jule::Slice<_210c3ee2a_Log> _17225_errors;;
	std::tie(_17218_parts,_17225_errors) = _2117a2382_parts(_17117_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17225_errors);
	};
	return _17218_parts;
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b5494_build_ident(_2117b3d88_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len()) && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return _2117b4c57_build_namespace(&(*_self_));
	};
	jule::Ptr<_2110e7238_Token> _18317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_210e7e80c_IdentTypeDecl> _18417_it = jule::new_ptr<_210e7e80c_IdentTypeDecl>(_210e7e80c_IdentTypeDecl(_18317_token,_18317_token.get()._field_kind,false,jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>()));;
	((*((*_self_)._field_i)))++;
	_18417_it.get()._field_generics=_2117b4ebb_build_generics(&(*_self_));
	return jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(_18317_token,jule::Any(_18417_it)));
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b5708_build_cpp_link(_2117b3d88_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id != static_cast<jule::U64>(20LLU)))) {
		_2117b4460_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_210e7e620_TypeDecl> _20317_t = _2117b5494_build_ident(&(*_self_));;
	_20317_t.get()._field_kind.operator jule::Ptr<_210e7e80c_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _20317_t;
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b596c_build_fn(_2117b3d88_TypeBuilder* _self_) {
	jule::Ptr<_2110e7238_Token> _20917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_21110ce74_FnDecl> _21017_f = _2117a96db_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_21017_f == nullptr)) {
		return nullptr;
	};
	if ((!(_21107aead_is_anon(_21017_f.ptr())))) {
		_2117b4460_push_err(&(*_self_), _21017_f.get()._field_token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(_20917_token,jule::Any(_21017_f)));
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b5bd1_build_ptr(_2117b3d88_TypeBuilder* _self_) {
	jule::Ptr<_2110e7238_Token> _22417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_2117b4460_push_err(&(*_self_), _22417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id == static_cast<jule::U64>(35LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(_22417_token,jule::Any(jule::new_ptr<_210e87507_PtrTypeDecl>(_210e87507_PtrTypeDecl(nullptr)))));
	};
	jule::Ptr<_210e7e620_TypeDecl> _24117_elem = _2117b7012_step(&(*_self_));;
	if ((_24117_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(_22417_token,jule::Any(jule::new_ptr<_210e87507_PtrTypeDecl>(_210e87507_PtrTypeDecl(_24117_elem)))));
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b5e45_build_sptr(_2117b3d88_TypeBuilder* _self_) {
	jule::Ptr<_2110e7238_Token> _25517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_2117b4460_push_err(&(*_self_), _25517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_210e7e620_TypeDecl> _26217_elem = _2117b7012_step(&(*_self_));;
	if ((_26217_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(_25517_token,jule::Any(jule::new_ptr<_210e86e41_SptrTypeDecl>(_210e86e41_SptrTypeDecl(_26217_elem)))));
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b61a9_build_op(_2117b3d88_TypeBuilder* _self_) {
	jule::Ptr<_2110e7238_Token> _27617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _27617_token.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a9aad01e:;
			{
				return _2117b5bd1_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a9aad085:;
			{
				return _2117b5e45_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a9aacd54:;
			{
				return jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(jule::Ptr<_2110e7238_Token>(),jule::Any(jule::new_ptr<_210e86e41_SptrTypeDecl>(_210e86e41_SptrTypeDecl(_2117b5e45_build_sptr(&(*_self_)))))));
			}
		}
		else {
			_case_begin_1a9aac381:;
			{
				_2117b4460_push_err(&(*_self_), _27617_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1a9aac32b:;
	};
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b641d_build_slc(_2117b3d88_TypeBuilder* _self_) {
	jule::Ptr<_2110e7238_Token> _29517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_210e7e620_TypeDecl> _29717_elem = _2117b7012_step(&(*_self_));;
	if ((_29717_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(_29517_token,jule::Any(jule::new_ptr<_210e8712d_SlcTypeDecl>(_210e8712d_SlcTypeDecl(_29717_elem)))));
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b6682_build_arr(_2117b3d88_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_2117b4460_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I64 _31813_expr_delta = (*((*_self_)._field_i));;
	jule::Ptr<_210e7e620_TypeDecl> _32017_elem = _2117b7012_step(&(*_self_));;
	if ((_32017_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_210e876e4_ArrTypeDecl> _32517_arrt = jule::new_ptr<_210e876e4_ArrTypeDecl>(_210e876e4_ArrTypeDecl(_32017_elem,jule::Ptr<_210e87caa_Expr>()));;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _32917_expr_tokens = (*_self_)._field_tokens.slice(0LL,_31813_expr_delta);;
	std::tie(std::ignore,_32917_expr_tokens) = _2117a1e53_range_last(_32917_expr_tokens);
	_32917_expr_tokens=_32917_expr_tokens.slice(1LL,(_32917_expr_tokens.len() - 1LL));
	jule::Ptr<_2110e7238_Token> _33217_token = _32917_expr_tokens[0LL];;
	if ((((_32917_expr_tokens.len() == 1LL) && (_33217_token.get()._field_id == static_cast<jule::U64>(7LLU))) && (_33217_token.get()._field_kind == jule::Str("...", 3)))) {
	} else {
		_32517_arrt.get()._field_size=_2117a462b_build_expr((*_self_)._field_p, _32917_expr_tokens);
	};
	return jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(_33217_token,jule::Any(_32517_arrt)));
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b6a39_build_map(_2117b3d88_TypeBuilder* _self_, jule::I64 _34528_colon, jule::Slice<jule::Ptr<_2110e7238_Token>>& _34545_tokens) {
	jule::Ptr<_2110e7238_Token> _34617_colon_token = (*_self_)._field_tokens[_34528_colon];;
	if (((_34528_colon == 0LL) || ((_34528_colon + 1LL) >= _34545_tokens.len()))) {
		_2117b4460_push_err(&(*_self_), _34617_colon_token,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_2110e7238_Token>> _35117_key_tokens = _34545_tokens.slice(0LL,_34528_colon);;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _35217_val_tokens = _34545_tokens.slice((_34528_colon + 1LL));;
	jule::Ptr<_210e878d1_MapTypeDecl> _35317_mapt = jule::new_ptr<_210e878d1_MapTypeDecl>(_210e878d1_MapTypeDecl());;
	jule::I64 _35517_j = 0LL;;
	jule::Ptr<_210e7e620_TypeDecl> _35618_keyt;;
	jule::Bool _35628_ok;;
	std::tie(_35618_keyt,_35628_ok) = _2117a5918_build_type((*_self_)._field_p, _35117_key_tokens,(&(_35517_j)),(*_self_)._field_err);
	if ((!(_35628_ok))) {
		return nullptr;
	} else if ((_35517_j < _35117_key_tokens.len())) {
		_2117b4460_push_err(&(*_self_), _35117_key_tokens[_35517_j],jule::Str("invalid syntax", 14));
	};
	_35317_mapt.get()._field_key=_35618_keyt;
	_35517_j=0LL;
	jule::Ptr<_210e7e620_TypeDecl> _36518_valt;;
	std::tie(_36518_valt,_35628_ok) = _2117a5918_build_type((*_self_)._field_p, _35217_val_tokens,(&(_35517_j)),(*_self_)._field_err);
	if ((!(_35628_ok))) {
		return nullptr;
	} else if ((_35517_j < _35217_val_tokens.len())) {
		_2117b4460_push_err(&(*_self_), _35217_val_tokens[_35517_j],jule::Str("invalid syntax", 14));
	};
	_35317_mapt.get()._field_val=_36518_valt;
	return jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(_34617_colon_token,jule::Any(_35317_mapt)));
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b6c9d_build_enumerable(_2117b3d88_TypeBuilder* _self_) {
	jule::Ptr<_2110e7238_Token> _38017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_38017_token.get()._field_id != static_cast<jule::U64>(3LLU))) || (_38017_token.get()._field_kind != jule::Str("[", 1)))) {
		_2117b4460_push_err(&(*_self_), _38017_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_38017_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_38017_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_38017_token.get()._field_kind == jule::Str("]", 1)))) {
		return _2117b641d_build_slc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::Slice<jule::Ptr<_2110e7238_Token>> _39418_map_tokens;;
	jule::I64 _39430_colon;;
	std::tie(_39418_map_tokens,_39430_colon) = _2117b38b0_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_39430_colon == -1LL)) {
		return _2117b6682_build_arr(&(*_self_));
	};
	return _2117b6a39_build_map(&(*_self_), _39430_colon,_39418_map_tokens);
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b7012_step(_2117b3d88_TypeBuilder* _self_) {
	jule::Ptr<_2110e7238_Token> _40313_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _40313_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a9ac381a:;
			{
				return _2117b49e3_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a9ac3881:;
			{
				return _2117b5494_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a9ac38e7:;
			{
				return _2117b5708_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a9ac4420:;
			{
				return _2117b596c_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a9ac4486:;
			{
				return _2117b61a9_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a9ac44ec:;
			{
				return _2117b6c9d_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1a9ac372c:;
			{
				((*((*_self_)._field_i)))++;
				_2117b4460_push_err(&(*_self_), _40313_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1a9ac36c7:;
	};
}



inline std::tuple<jule::Ptr<_210e7e620_TypeDecl>,jule::Bool> _2117b7276_build(_2117b3d88_TypeBuilder* _self_) {
	jule::Bool _42644_ok = jule::Bool();
	jule::Ptr<_210e7e620_TypeDecl> _42717_root = _2117b7012_step(&(*_self_));;
	if ((_42717_root == nullptr)) {
		_42644_ok = false;
		return std::make_tuple(_2117b32e9_build_void_type(),_42644_ok);
	};
	_42644_ok = true;
	return std::make_tuple(_42717_root,_42644_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _2117b3d88_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a808a6da_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6719101_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a83046ac_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a65ee118_set(_1a8304899_Decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1a9eb12ac:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1a9eb17a7:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1a9eb1543:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1a9eb34ce:;
					{
						goto _iter_next_1a9eb1158;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1a9eb3556:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1a9eb1158;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1a9eb35cd:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1a9eb1158;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1a9eb1158;
					}
				}
				_match_end_1a9eb33ad:;
			};
			goto _iter_end_1a9eb1158;
		}
	_iter_next_1a9eb1158:;
	}
	_iter_end_1a9eb1158:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1a80d2402_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1a9ebac23;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1a9ebac23:;
		}
		_iter_end_1a9ebac23:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1a67158c2_float_bits(_1a8304899_Decimal* _self_, _1a808a6da_FloatInfo& _32730_flt) {
	jule::U64 _32748_b = jule::U64();
	jule::Bool _32756_overflow = jule::Bool();
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1a6634956_POWTAB.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1a6634956_POWTAB[(*_self_)._field_dp];
			};
			_1a8304bb8_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1a9ec2983:;
	}
	_iter_end_1a9ec2983:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1a6634956_POWTAB.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1a6634956_POWTAB[(-((*_self_)._field_dp))];
			};
			_1a8304bb8_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1a9ec4a95:;
	}
	_iter_end_1a9ec4a95:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32730_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32730_flt._field_bias + 1LL) - _32817_exp);;
		_1a8304bb8_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1a8304bb8_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32730_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1a8305191_rounded_integer(&(*_self_)));
	if ((_32917_mant == (2LLU << _32730_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32730_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32730_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32730_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32730_flt._field_bias))));
	_32756_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32730_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32730_flt._field_bias) & static_cast<jule::I64>(((1LL << _32730_flt._field_expbits) - 1LL)))) << _32730_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32730_flt._field_mantbits) << _32730_flt._field_expbits);
	};
	_32748_b = _41717_bits;
	return std::make_tuple(_32748_b,_32756_overflow);
}



inline void _1a8304a86_assign(_1a8304899_Decimal* _self_, jule::U64 _21029_v) {
	jule::Array<jule::U8,24> _21117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _21417_n = 0LL;;
	while ((_21029_v > 0LLU)) {
		{
			jule::U64 _21617_v1 = (_21029_v / 10LLU);;
			_21029_v-=(10LLU * _21617_v1);
			_21117_buf[_21417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_21029_v + '0')));
			(_21417_n)++;
			_21029_v=_21617_v1;
		}
	_iter_next_1a9ed11ab:;
	}
	_iter_end_1a9ed11ab:;;
	(*_self_)._field_nd=0LL;
	(_21417_n)--;
	for (; (_21417_n >= 0LL); (_21417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_21117_buf[_21417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1a9ed1c39:;
	}
	_iter_end_1a9ed1c39:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1a8305405_trim((*_self_));
}



inline void _1a8304bb8_shift(_1a8304899_Decimal* _self_, jule::I64 _23528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1a9ed3bc5:;
		}
		else if ((_23528_k > 0LL)) {
			_case_begin_1a9ed3c4c:;
			{
				while ((_23528_k > 60LL)) {
					{
						_1a830579b_left_shift((*_self_),60LLU);
						_23528_k-=60LL;
					}
				_iter_next_1a9ed43e0:;
				}
				_iter_end_1a9ed43e0:;;
				_1a830579b_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_23528_k)));
			}
		}
		else if ((_23528_k < 0LL)) {
			_case_begin_1a9ed3cc4:;
			{
				while ((_23528_k < -60LL)) {
					{
						_1a8305537_right_shift((*_self_),60LLU);
						_23528_k+=60LL;
					}
				_iter_next_1a9ed4cb4:;
				}
				_iter_end_1a9ed4cb4:;;
				_1a8305537_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_23528_k)))));
			}
		}
		_match_end_1a9ed3aa4:;
	};
}



inline void _1a8304cea_round_down(_1a8304899_Decimal* _self_, jule::I64 _25529_nd) {
	if (((_25529_nd < 0LL) || (_25529_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_25529_nd;
	_1a8305405_trim((*_self_));
}



inline void _1a8304e2c_round_up(_1a8304899_Decimal* _self_, jule::I64 _26427_nd) {
	if (((_26427_nd < 0LL) || (_26427_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _27017_i = (_26427_nd - 1LL);;
	for (; (_27017_i >= 0LL); (_27017_i)--) {
		{
			jule::U8 _27217_c = (*_self_)._field_d[_27017_i];;
			if ((_27217_c < '9')) {
				((*_self_)._field_d[_27017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_27017_i + 1LL));
				return;;
			};
		}
	_iter_next_1a9ed81e6:;
	}
	_iter_end_1a9ed81e6:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1a830505e_round(_1a8304899_Decimal* _self_, jule::I64 _29124_nd) {
	if (((_29124_nd < 0LL) || (_29124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1a83058cd_should_round_up((*_self_),_29124_nd)) {
		_1a8304e2c_round_up(&(*_self_), _29124_nd);
	} else {
		_1a8304cea_round_down(&(*_self_), _29124_nd);
	};
}



inline jule::U64 _1a8305191_rounded_integer(_1a8304899_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I64 _30817_i = 0LL;;
	jule::U64 _30917_n = 0LLU;;
	for (; ((_30817_i < (*_self_)._field_dp) && (_30817_i < (*_self_)._field_nd)); (_30817_i)++) {
		{
			_30917_n=static_cast<jule::U64>(((_30917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_30817_i] - '0'))));
		}
	_iter_next_1a9edc173:;
	}
	_iter_end_1a9edc173:;;
	for (; (_30817_i < (*_self_)._field_dp); (_30817_i)++) {
		{
			_30917_n*=10LLU;
		}
	_iter_next_1a9eddc24:;
	}
	_iter_end_1a9eddc24:;;
	if (_1a83058cd_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_30917_n)++;
	};
	return _30917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8304899_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a83a871c_Const> static__1a83a8909_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1a83a871c_Const>(_1a83a871c_Const(jule::Any(_1327_x)));
}



inline jule::Ptr<_1a83a871c_Const> static__1a83a8a3b_new_u64(jule::U64 _1627_x) {
	return jule::new_ptr<_1a83a871c_Const>(_1a83a871c_Const(jule::Any(_1627_x)));
}



inline jule::Ptr<_1a83a871c_Const> static__1a83a8b6d_new_bool(jule::Bool _1928_x) {
	return jule::new_ptr<_1a83a871c_Const>(_1a83a871c_Const(jule::Any(_1928_x)));
}



inline jule::Ptr<_1a83a871c_Const> static__1a83a8de3_new_str(jule::Str _2227_x) {
	return jule::new_ptr<_1a83a871c_Const>(_1a83a871c_Const(jule::Any(_2227_x)));
}



inline jule::Ptr<_1a83a871c_Const> static__1a83a918a_new_f64(jule::F64 _2527_x) {
	return jule::new_ptr<_1a83a871c_Const>(_1a83a871c_Const(jule::Any(_2527_x)));
}



inline jule::Ptr<_1a83a871c_Const> static__1a83a9388_new_nil(void) {
	return jule::new_ptr<_1a83a871c_Const>(_1a83a871c_Const(nullptr));
}



inline jule::I64 _1a83a9982_read_i64(_1a83a871c_Const* _self_) {
	if ((!(_1a83abd2a_is_i64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1a83a9be6_read_u64(_1a83a871c_Const* _self_) {
	if ((!(_1a83ac08e_is_u64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1a83a9e5a_read_bool(_1a83a871c_Const* _self_) {
	if ((!(_1a83ac303_is_bool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1a83aa1be_read_str(_1a83a871c_Const* _self_) {
	if ((!(_1a83ac567_is_str(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1a83aa433_read_f64(_1a83a871c_Const* _self_) {
	if ((!(_1a83ac7cb_is_f64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1a83aa697_as_i64(_1a83a871c_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1aa1814c1:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1aa181537:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1aa181735:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1aa181092:;
			{
				return 0LL;
			}
		}
		_match_end_1aa18103c:;
	};
}



inline jule::U64 _1a83aa90b_as_u64(_1a83a871c_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1aa1832e7:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1aa18335d:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1aa18355b:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1aa182dc9:;
			{
				return 0LLU;
			}
		}
		_match_end_1aa18126d:;
	};
}



inline jule::F64 _1a83aab70_as_f64(_1a83a871c_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1aa18511d:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1aa185184:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1aa185382:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1aa184c00:;
			{
				return 0LL;
			}
		}
		_match_end_1aa1830c7:;
	};
}



inline void _1a83aade5_set_i64(_1a83a871c_Const* _self_, jule::I64 _13530_x) {
	(*_self_)._field_data=jule::Any(_13530_x);
}



inline void _1a83ab16a_set_u64(_1a83a871c_Const* _self_, jule::U64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1a83ab3e0_set_bool(_1a83a871c_Const* _self_, jule::Bool _14131_x) {
	(*_self_)._field_data=jule::Any(_14131_x);
}



inline void _1a83ab665_set_str(_1a83a871c_Const* _self_, jule::Str _14430_x) {
	(*_self_)._field_data=jule::Any(_14430_x);
}



inline void _1a83ab8da_set_f64(_1a83a871c_Const* _self_, jule::F64 _14730_x) {
	(*_self_)._field_data=jule::Any(_14730_x);
}



inline void _1a83abab6_set_nil(_1a83a871c_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1a83abd2a_is_i64(_1a83a871c_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1aa18a343:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa18a574:;
			{
				return false;
			}
		}
		_match_end_1aa18a51e:;
	};
}



inline jule::Bool _1a83ac08e_is_u64(_1a83a871c_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1aa18ae37:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa18a750:;
			{
				return false;
			}
		}
		_match_end_1aa18b179:;
	};
}



inline jule::Bool _1a83ac303_is_bool(_1a83a871c_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1aa189a07:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa18b81c:;
			{
				return false;
			}
		}
		_match_end_1aa18b7b7:;
	};
}



inline jule::Bool _1a83ac567_is_str(_1a83a871c_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1aa18bb5d:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa18c2ac:;
			{
				return false;
			}
		}
		_match_end_1aa18c257:;
	};
}



inline jule::Bool _1a83ac7cb_is_f64(_1a83a871c_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1aa18c5ed:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa18cc4c:;
			{
				return false;
			}
		}
		_match_end_1aa18cbe7:;
	};
}



inline jule::Bool _1a83aca40_is_nil(_1a83a871c_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1a83acd4d_are_same_types(_1a83a871c_Const* _self_, _1a83a871c_Const _21033_x) {
	{
		
		if ((_1a83abd2a_is_i64(&(*_self_)) == _1a83abd2a_is_i64(&_21033_x))) {
			_case_begin_1aa19005c:;
			{
				return true;
			}
		}
		else if ((_1a83ac08e_is_u64(&(*_self_)) == _1a83ac08e_is_u64(&_21033_x))) {
			_case_begin_1aa18e842:;
			{
				return true;
			}
		}
		else if ((_1a83ac7cb_is_f64(&(*_self_)) == _1a83ac7cb_is_f64(&_21033_x))) {
			_case_begin_1aa18e8a8:;
			{
				return true;
			}
		}
		else if ((_1a83ac303_is_bool(&(*_self_)) == _1a83ac303_is_bool(&_21033_x))) {
			_case_begin_1aa18e930:;
			{
				return true;
			}
		}
		else if ((_1a83ac567_is_str(&(*_self_)) == _1a83ac567_is_str(&_21033_x))) {
			_case_begin_1aa18e9a7:;
			{
				return true;
			}
		}
		else if ((_1a83aca40_is_nil(&(*_self_)) == _1a83aca40_is_nil(&_21033_x))) {
			_case_begin_1aa18ec4e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa18e7cb:;
			{
				return false;
			}
		}
		_match_end_1aa18e710:;
	};
}



inline jule::Bool _1a83ad15b_and(_1a83a871c_Const* _self_, _1a83a871c_Const _23522_x) {
	{
		
		if ((_1a83ac303_is_bool(&(*_self_)) && _1a83ac303_is_bool(&_23522_x))) {
			_case_begin_1aa1937d0:;
			{
				return (_1a83a9e5a_read_bool(&(*_self_)) && _1a83a9e5a_read_bool(&_23522_x));
			}
		}
		else {
			_case_begin_1aa1930a4:;
			{
				return false;
			}
		}
		_match_end_1aa192ed8:;
	};
}



inline jule::Bool _1a83ad469_or(_1a83a871c_Const* _self_, _1a83a871c_Const _24621_x) {
	{
		
		if ((_1a83ac303_is_bool(&(*_self_)) && _1a83ac303_is_bool(&_24621_x))) {
			_case_begin_1aa195161:;
			{
				return (_1a83a9e5a_read_bool(&(*_self_)) || _1a83a9e5a_read_bool(&_24621_x));
			}
		}
		else {
			_case_begin_1aa194935:;
			{
				return false;
			}
		}
		_match_end_1aa194869:;
	};
}



inline jule::Bool _1a83ad777_eq(_1a83a871c_Const* _self_, _1a83a871c_Const _25721_x) {
	{
		
		if (_1a83aca40_is_nil(&(*_self_))) {
			_case_begin_1aa19655d:;
			{
				return _1a83aca40_is_nil(&_25721_x);
			}
		}
		else if (_1a83ac303_is_bool(&(*_self_))) {
			_case_begin_1aa195d98:;
			{
				return (_1a83ac303_is_bool(&_25721_x) && (_1a83a9e5a_read_bool(&(*_self_)) == _1a83a9e5a_read_bool(&_25721_x)));
			}
		}
		else if (_1a83ac567_is_str(&(*_self_))) {
			_case_begin_1aa195e0e:;
			{
				return (_1a83ac567_is_str(&_25721_x) && (_1a83aa1be_read_str(&(*_self_)) == _1a83aa1be_read_str(&_25721_x)));
			}
		}
		else if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa195e75:;
			{
				return (_1a83a9982_read_i64(&(*_self_)) == _1a83aa697_as_i64(&_25721_x));
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa195edb:;
			{
				return (_1a83a9be6_read_u64(&(*_self_)) == _1a83aa90b_as_u64(&_25721_x));
			}
		}
		else if (_1a83ac7cb_is_f64(&(*_self_))) {
			_case_begin_1aa196250:;
			{
				return (_1a83aa433_read_f64(&(*_self_)) == _1a83aab70_as_f64(&_25721_x));
			}
		}
		else {
			_case_begin_1aa1954b3:;
			{
				return false;
			}
		}
		_match_end_1aa1953e7:;
	};
}



inline jule::Bool _1a83ada85_lt(_1a83a871c_Const* _self_, _1a83a871c_Const _28421_x) {
	{
		
		if (_1a83ac567_is_str(&(*_self_))) {
			_case_begin_1aa19a991:;
			{
				return (_1a83ac567_is_str(&_28421_x) && (_1a83aa1be_read_str(&(*_self_)) < _1a83aa1be_read_str(&_28421_x)));
			}
		}
		else if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa19a40d:;
			{
				return (_1a83a9982_read_i64(&(*_self_)) < _1a83aa697_as_i64(&_28421_x));
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa19a474:;
			{
				return (_1a83a9be6_read_u64(&(*_self_)) < _1a83aa90b_as_u64(&_28421_x));
			}
		}
		else if (_1a83ac7cb_is_f64(&(*_self_))) {
			_case_begin_1aa19a4da:;
			{
				return (_1a83aa433_read_f64(&(*_self_)) < _1a83aab70_as_f64(&_28421_x));
			}
		}
		else {
			_case_begin_1aa1970ec:;
			{
				return false;
			}
		}
		_match_end_1aa199264:;
	};
}



inline jule::Bool _1a83add93_lt_eq(_1a83a871c_Const* _self_, _1a83a871c_Const _30724_x) {
	{
		
		if (_1a83ac567_is_str(&(*_self_))) {
			_case_begin_1aa19d862:;
			{
				return (_1a83ac567_is_str(&_30724_x) && (_1a83aa1be_read_str(&(*_self_)) <= _1a83aa1be_read_str(&_30724_x)));
			}
		}
		else if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa19d2ce:;
			{
				return (_1a83a9982_read_i64(&(*_self_)) <= _1a83aa697_as_i64(&_30724_x));
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa19d345:;
			{
				return (_1a83a9be6_read_u64(&(*_self_)) <= _1a83aa90b_as_u64(&_30724_x));
			}
		}
		else if (_1a83ac7cb_is_f64(&(*_self_))) {
			_case_begin_1aa19d3ab:;
			{
				return (_1a83aa433_read_f64(&(*_self_)) <= _1a83aab70_as_f64(&_30724_x));
			}
		}
		else {
			_case_begin_1aa19b992:;
			{
				return false;
			}
		}
		_match_end_1aa19abc2:;
	};
}



inline jule::Bool _1a83ae1a1_gt(_1a83a871c_Const* _self_, _1a83a871c_Const _33021_x) {
	{
		
		if (_1a83ac567_is_str(&(*_self_))) {
			_case_begin_1aa1a1931:;
			{
				return (_1a83ac567_is_str(&_33021_x) && (_1a83aa1be_read_str(&(*_self_)) > _1a83aa1be_read_str(&_33021_x)));
			}
		}
		else if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa1a139d:;
			{
				return (_1a83a9982_read_i64(&(*_self_)) > _1a83aa697_as_i64(&_33021_x));
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa1a1414:;
			{
				return (_1a83a9be6_read_u64(&(*_self_)) > _1a83aa90b_as_u64(&_33021_x));
			}
		}
		else if (_1a83ac7cb_is_f64(&(*_self_))) {
			_case_begin_1aa1a147a:;
			{
				return (_1a83aa433_read_f64(&(*_self_)) > _1a83aab70_as_f64(&_33021_x));
			}
		}
		else {
			_case_begin_1aa19e8b8:;
			{
				return false;
			}
		}
		_match_end_1aa1a1128:;
	};
}



inline jule::Bool _1a83ae4ae_gt_eq(_1a83a871c_Const* _self_, _1a83a871c_Const _35324_x) {
	{
		
		if (_1a83ac567_is_str(&(*_self_))) {
			_case_begin_1aa1a4802:;
			{
				return (_1a83ac567_is_str(&_35324_x) && (_1a83aa1be_read_str(&(*_self_)) >= _1a83aa1be_read_str(&_35324_x)));
			}
		}
		else if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa1a426e:;
			{
				return (_1a83a9982_read_i64(&(*_self_)) >= _1a83aa697_as_i64(&_35324_x));
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa1a42d5:;
			{
				return (_1a83a9be6_read_u64(&(*_self_)) >= _1a83aa90b_as_u64(&_35324_x));
			}
		}
		else if (_1a83ac7cb_is_f64(&(*_self_))) {
			_case_begin_1aa1a434b:;
			{
				return (_1a83aa433_read_f64(&(*_self_)) >= _1a83aab70_as_f64(&_35324_x));
			}
		}
		else {
			_case_begin_1aa1a2932:;
			{
				return false;
			}
		}
		_match_end_1aa1a1b62:;
	};
}



inline jule::Bool _1a83ae7bc_add(_1a83a871c_Const* _self_, _1a83a871c_Const _37426_x) {
	{
		
		if (_1a83ac567_is_str(&(*_self_))) {
			_case_begin_1aa1a7915:;
			{
				if ((!(_1a83ac567_is_str(&_37426_x)))) {
					return false;
				};
				_1a83ab665_set_str(&(*_self_), (_1a83aa1be_read_str(&(*_self_)) + _1a83aa1be_read_str(&_37426_x)));
			}
		}
		else if (_1a83ac7cb_is_f64(&(*_self_))) {
			_case_begin_1aa1a7382:;
			{
				_1a83ab8da_set_f64(&(*_self_), static_cast<jule::F64>((_1a83aa433_read_f64(&(*_self_)) + _1a83aab70_as_f64(&_37426_x))));
			}
		}
		else if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa1a73e8:;
			{
				if (_1a83ac7cb_is_f64(&_37426_x)) {
					_1a83ab8da_set_f64(&(*_self_), static_cast<jule::F64>((_1a83aab70_as_f64(&(*_self_)) + _1a83aa433_read_f64(&_37426_x))));
				} else {
					_1a83aade5_set_i64(&(*_self_), static_cast<jule::I64>((_1a83a9982_read_i64(&(*_self_)) + _1a83aa697_as_i64(&_37426_x))));
				};
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa1a745e:;
			{
				if (_1a83ac7cb_is_f64(&_37426_x)) {
					_1a83ab8da_set_f64(&(*_self_), static_cast<jule::F64>((_1a83aab70_as_f64(&(*_self_)) + _1a83aa433_read_f64(&_37426_x))));
				} else {
					_1a83ab16a_set_u64(&(*_self_), static_cast<jule::U64>((_1a83a9be6_read_u64(&(*_self_)) + _1a83aa90b_as_u64(&_37426_x))));
				};
			}
		}
		else {
			_case_begin_1aa1a4a00:;
			{
				return false;
			}
		}
		_match_end_1aa1a4945:;
	};
	return true;
}



inline jule::Bool _1a83aeaca_sub(_1a83a871c_Const* _self_, _1a83a871c_Const _40326_x) {
	{
		
		if (_1a83ac7cb_is_f64(&(*_self_))) {
			_case_begin_1aa1ad399:;
			{
				_1a83ab8da_set_f64(&(*_self_), static_cast<jule::F64>((_1a83aa433_read_f64(&(*_self_)) - _1a83aab70_as_f64(&_40326_x))));
			}
		}
		else if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa1acbe5:;
			{
				if (_1a83ac7cb_is_f64(&_40326_x)) {
					_1a83ab8da_set_f64(&(*_self_), static_cast<jule::F64>((_1a83aab70_as_f64(&(*_self_)) - _1a83aa433_read_f64(&_40326_x))));
				} else {
					_1a83aade5_set_i64(&(*_self_), static_cast<jule::I64>((_1a83a9982_read_i64(&(*_self_)) - _1a83aa697_as_i64(&_40326_x))));
				};
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa1acc5b:;
			{
				if (_1a83ac7cb_is_f64(&_40326_x)) {
					_1a83ab8da_set_f64(&(*_self_), static_cast<jule::F64>((_1a83aab70_as_f64(&(*_self_)) - _1a83aa433_read_f64(&_40326_x))));
				} else {
					_1a83ab16a_set_u64(&(*_self_), static_cast<jule::U64>((_1a83a9be6_read_u64(&(*_self_)) - _1a83aa90b_as_u64(&_40326_x))));
				};
			}
		}
		else {
			_case_begin_1aa1acb7e:;
			{
				return false;
			}
		}
		_match_end_1aa1ac211:;
	};
	return true;
}



inline jule::Bool _1a83aedd8_mul(_1a83a871c_Const* _self_, _1a83a871c_Const _42726_x) {
	{
		
		if (_1a83ac7cb_is_f64(&(*_self_))) {
			_case_begin_1aa1b2e4d:;
			{
				_1a83ab8da_set_f64(&(*_self_), static_cast<jule::F64>((_1a83aa433_read_f64(&(*_self_)) * _1a83aab70_as_f64(&_42726_x))));
			}
		}
		else if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa1b2799:;
			{
				if (_1a83ac7cb_is_f64(&_42726_x)) {
					_1a83ab8da_set_f64(&(*_self_), static_cast<jule::F64>((_1a83aab70_as_f64(&(*_self_)) * _1a83aa433_read_f64(&_42726_x))));
				} else {
					_1a83aade5_set_i64(&(*_self_), static_cast<jule::I64>((_1a83a9982_read_i64(&(*_self_)) * _1a83aa697_as_i64(&_42726_x))));
				};
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa1b2810:;
			{
				if (_1a83ac7cb_is_f64(&_42726_x)) {
					_1a83ab8da_set_f64(&(*_self_), static_cast<jule::F64>((_1a83aab70_as_f64(&(*_self_)) * _1a83aa433_read_f64(&_42726_x))));
				} else {
					_1a83ab16a_set_u64(&(*_self_), static_cast<jule::U64>((_1a83a9be6_read_u64(&(*_self_)) * _1a83aa90b_as_u64(&_42726_x))));
				};
			}
		}
		else {
			_case_begin_1aa1b2733:;
			{
				return false;
			}
		}
		_match_end_1aa1b1c0a:;
	};
	return true;
}



inline jule::Bool _1a83b01e6_div(_1a83a871c_Const* _self_, _1a83a871c_Const _45526_x) {
	{
		
		if (_1a83ac7cb_is_f64(&(*_self_))) {
			_case_begin_1aa1b776b:;
			{
				jule::F64 _45817_l = _1a83aab70_as_f64(&_45526_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1a83ab8da_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1a83aa433_read_f64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa1b70b7:;
			{
				jule::F64 _46417_l = _1a83aab70_as_f64(&_45526_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1a83ab8da_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1a83aab70_as_f64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa1b712d:;
			{
				jule::F64 _47017_l = _1a83aab70_as_f64(&_45526_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1a83ab8da_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1a83aab70_as_f64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1aa1b7051:;
			{
				return false;
			}
		}
		_match_end_1aa1b6605:;
	};
	return true;
}



inline jule::Bool _1a83b0504_mod(_1a83a871c_Const* _self_, _1a83a871c_Const _48426_x) {
	{
		
		if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa1bbaa0:;
			{
				jule::I64 _48717_l = _1a83aa697_as_i64(&_48426_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1a83aade5_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(_1a83a9982_read_i64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa1bb3c9:;
			{
				jule::U64 _49317_l = _1a83aa90b_as_u64(&_48426_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1a83ab16a_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(_1a83a9be6_read_u64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1aa1bb363:;
			{
				return false;
			}
		}
		_match_end_1aa1bb2ca:;
	};
	return true;
}



inline jule::Bool _1a83b0812_bitwise_and(_1a83a871c_Const* _self_, _1a83a871c_Const _50634_x) {
	{
		
		if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa1c0048:;
			{
				_1a83aade5_set_i64(&(*_self_), static_cast<jule::I64>((_1a83a9982_read_i64(&(*_self_)) & _1a83aa697_as_i64(&_50634_x))));
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa1be872:;
			{
				_1a83ab16a_set_u64(&(*_self_), static_cast<jule::U64>((_1a83a9be6_read_u64(&(*_self_)) & _1a83aa90b_as_u64(&_50634_x))));
			}
		}
		else {
			_case_begin_1aa1be80b:;
			{
				return false;
			}
		}
		_match_end_1aa1be740:;
	};
	return true;
}



inline jule::Bool _1a83b0b20_bitwise_or(_1a83a871c_Const* _self_, _1a83a871c_Const _52033_x) {
	{
		
		if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa1c2688:;
			{
				_1a83aade5_set_i64(&(*_self_), static_cast<jule::I64>((_1a83a9982_read_i64(&(*_self_)) | _1a83aa697_as_i64(&_52033_x))));
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa1c1eb2:;
			{
				_1a83ab16a_set_u64(&(*_self_), static_cast<jule::U64>((_1a83a9be6_read_u64(&(*_self_)) | _1a83aa90b_as_u64(&_52033_x))));
			}
		}
		else {
			_case_begin_1aa1c1e4b:;
			{
				return false;
			}
		}
		_match_end_1aa1c1d80:;
	};
	return true;
}



inline jule::Bool _1a83b0e2d_xor(_1a83a871c_Const* _self_, _1a83a871c_Const _53426_x) {
	{
		
		if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa1c4cc8:;
			{
				_1a83aade5_set_i64(&(*_self_), static_cast<jule::I64>((_1a83a9982_read_i64(&(*_self_)) ^ _1a83aa697_as_i64(&_53426_x))));
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa1c4602:;
			{
				_1a83ab16a_set_u64(&(*_self_), static_cast<jule::U64>((_1a83a9be6_read_u64(&(*_self_)) ^ _1a83aa90b_as_u64(&_53426_x))));
			}
		}
		else {
			_case_begin_1aa1c458b:;
			{
				return false;
			}
		}
		_match_end_1aa1c44c0:;
	};
	return true;
}



inline jule::Bool _1a83b123b_lshift(_1a83a871c_Const* _self_, _1a83a871c_Const _54829_x) {
	{
		
		if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa1c777b:;
			{
				jule::I64 _55117_l = _1a83aa697_as_i64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1a83aa90b_as_u64(&_54829_x);;
					_1a83aade5_set_i64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1a83b18ac_lshift_unsig((*_self_),_54829_x);
				};
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa1c70a5:;
			{
				_1a83b18ac_lshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1aa1c703e:;
			{
				return false;
			}
		}
		_match_end_1aa1c6e73:;
	};
	return true;
}



inline jule::Bool _1a83b1549_rshift(_1a83a871c_Const* _self_, _1a83a871c_Const _56829_x) {
	{
		
		if (_1a83abd2a_is_i64(&(*_self_))) {
			_case_begin_1aa1ca65d:;
			{
				jule::I64 _57117_l = _1a83aa697_as_i64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1a83aa90b_as_u64(&_56829_x);;
					_1a83aade5_set_i64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1a83b1ba9_rshift_unsig((*_self_),_56829_x);
				};
			}
		}
		else if (_1a83ac08e_is_u64(&(*_self_))) {
			_case_begin_1aa1c9e87:;
			{
				_1a83b1ba9_rshift_unsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1aa1c9e21:;
			{
				return false;
			}
		}
		_match_end_1aa1c9d55:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a83a871c_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a85995ab_FileStream> static__1a8597972_new(jule::Ptr<_20eac0c8a_File> _1527_f) {
	return jule::new_ptr<_1a85995ab_FileStream>(_1a85995ab_FileStream(_1527_f));
}



inline jule::Exceptional<jule::I64> _1a859d109_read(_1a85995ab_FileStream* _self_, jule::Slice<jule::U8> _3131_buff) {
	jule::I64 _3148_n = jule::I64();
	_3148_n = static_cast<jule::I64>(({
		auto except = _20eb30503_read((*_self_)._field_buff.ptr(), _3131_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_3148_n);
}



inline jule::Exceptional<jule::I64> _1a859d417_write(_1a85995ab_FileStream* _self_, jule::Slice<jule::U8> _3728_buff) {
	jule::I64 _3745_n = jule::I64();
	_3745_n = static_cast<jule::I64>(({
		auto except = _20eb29ee2_write((*_self_)._field_buff.ptr(), _3728_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_3745_n);
}



inline jule::Exceptional<jule::Slice<jule::U8>> _1a859d769_read_line(_1a85995ab_FileStream* _self_) {
	;
	jule::Slice<jule::U8> _4917_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);;
	jule::Slice<jule::U8> _5017_part = jule::Slice<jule::U8>::alloc(1LL);;
	for (;;) {
		{
			jule::I64 _5217_n = ({
				auto except = _20eb30503_read((*_self_)._field_buff.ptr(), _5017_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
				} jule::I64();});
			});;
			if ((_5217_n == 0LL)) {
				goto _iter_end_211e8a5b4;
			};
			jule::U8 _5717_b = _5017_part[0LL];;
			_4917_buff = jule::alloc_for_append(_4917_buff,1);_4917_buff.__push(_5717_b);;
			if ((_5717_b == 10LLU)) {
				goto _iter_end_211e8a5b4;
			};
		}
	_iter_next_211e8a5b4:;
	}
	_iter_end_211e8a5b4:;;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_4917_buff);
}







std::ostream &operator<<(std::ostream &_Stream, _1a85995ab_FileStream _Src) {
	_Stream << "FileStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::I64> _1a85a0c11_read(_1a85a056d_ByteStream* _self_, jule::Slice<jule::U8> _2431_buff) {
	jule::I64 _2448_n = jule::I64();
	if ((!(_1a85a1591_data(&(*_self_))))) {
		_2448_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_2448_n);
	};
	_2448_n=static_cast<jule::I64>(copy(_2431_buff,(*_self_)._field_buff));
	(*_self_)._field_buff=(*_self_)._field_buff.slice(_2448_n);
	return jule::Exceptional<jule::I64>(jule::Any(), _2448_n);
}



inline jule::Exceptional<jule::I64> _1a85a101e_write(_1a85a056d_ByteStream* _self_, jule::Slice<jule::U8> _3528_buff) {
	jule::I64 _3545_n = jule::I64();
	_3545_n=static_cast<jule::I64>(_3528_buff.len());
	(*_self_)._field_buff=jule::append((*_self_)._field_buff,_3528_buff);
	return jule::Exceptional<jule::I64>(jule::Any(), _3545_n);
}



inline jule::Ptr<_1a85a056d_ByteStream> static__1a85a132c_new(void) {
	return jule::new_ptr<_1a85a056d_ByteStream>();
}



inline jule::Bool _1a85a1591_data(_1a85a056d_ByteStream* _self_) {
	return ((*_self_)._field_buff.len() != 0LL);
}



inline void _1a85a176c_fit(_1a85a056d_ByteStream* _self_) {
	if ((!(_1a85a1591_data(&(*_self_))))) {
		(*_self_)._field_buff=nullptr;
		return;;
	};
	jule::Slice<jule::U8> _6017_buff = jule::Slice<jule::U8>::alloc((*_self_)._field_buff.len());;
	copy(_6017_buff,(*_self_)._field_buff);
	(*_self_)._field_buff=_6017_buff;
}







std::ostream &operator<<(std::ostream &_Stream, _1a85a056d_ByteStream _Src) {
	_Stream << "ByteStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a85a2b14_Scanner> static__1a85a3043_new(jule::Trait<_1a859deb7_Reader> _1627_r) {
	return jule::new_ptr<_1a85a2b14_Scanner>(_1a85a2b14_Scanner(_1627_r,jule::Slice<jule::U8>()));
}



inline jule::Ptr<_1a85a2b14_Scanner> static__1a85a32da_newf(jule::Ptr<_20eac0c8a_File> _2428_f) {
	return jule::new_ptr<_1a85a2b14_Scanner>(_1a85a2b14_Scanner(jule::Trait<_1a859deb7_Reader>(static__1a8597972_new(_2428_f), 0),jule::Slice<jule::U8>()));
}



inline void _1a85a35d7_reset(_1a85a2b14_Scanner* _self_) {
	(*_self_)._field_b=nullptr;
}



inline jule::Slice<jule::U8> _1a85a384b_bytes(_1a85a2b14_Scanner* _self_) {
	return (*_self_)._field_b;
}



inline jule::Str _1a85a3ab0_text(_1a85a2b14_Scanner* _self_) {
	return static_cast<jule::Str>((*_self_)._field_b);
}



inline jule::Exceptional<jule::Bool> _1a85a3d24_scan(_1a85a2b14_Scanner* _self_) {
	;
	_1a85a35d7_reset(&(*_self_));
	jule::Slice<jule::U8> _5117_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);;
	jule::Slice<jule::U8> _5217_part = jule::Slice<jule::U8>::alloc(1LL);;
	for (;;) {
		{
			jule::I64 _5417_n = ({
				auto except = _1a859deb7_Reader_mptr_data[((*_self_)._field_r).type_offset]._1a859dd74_read((*_self_)._field_r, _5217_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
				} jule::I64();});
			});;
			if ((_5417_n == 0LL)) {
				goto _iter_end_1b34c6874;
			};
			jule::U8 _6117_b = _5217_part[0LL];;
			if ((_6117_b == 10LLU)) {
				goto _iter_end_1b34c6874;
			};
			_5117_buff = jule::alloc_for_append(_5117_buff,1);_5117_buff.__push(_6117_b);;
		}
	_iter_next_1b34c6874:;
	}
	_iter_end_1b34c6874:;;
	(*_self_)._field_b=_5117_buff;
	return jule::Exceptional<jule::Bool>(jule::Any(),(_5217_part[0LL] != 0LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1a85a2b14_Scanner _Src) {
	_Stream << "Scanner{";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "b:" << _Src._field_b;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b396694b_FieldIns> _1b3961e85_instance(jule::Ptr<_1b38b3d0a_Field> _self_) {
	return jule::new_ptr<_1b396694b_FieldIns>(_1b396694b_FieldIns(_self_,_self_.get()._field_kind.get()._field_kind,jule::Ptr<_1a84d3869_Data>()));
}







std::ostream &operator<<(std::ostream &_Stream, _1b38b3d0a_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3963816_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b39672a9_StructIns> _1b3964a59_instance(jule::Ptr<_1b396462a_Struct> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	jule::Ptr<_1b39672a9_StructIns> _10017_ins = jule::new_ptr<_1b39672a9_StructIns>(_1b39672a9_StructIns(jule::Bool(),_self_,jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1b396694b_FieldIns>>::alloc(0LL,_self_.get()._field_fields.len()),jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>(),jule::Bool(),static__1a5b364a8_new(),_1b3963816_Operators()));;
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1b37c0cb1:;
		if (it != expr.end()) {
			jule::Ptr<_1b38b3d0a_Field> _10621_f = *it;
			{
				_10017_ins.get()._field_fields = jule::alloc_for_append(_10017_ins.get()._field_fields,1);_10017_ins.get()._field_fields.__push(_1b3961e85_instance(_10621_f));;
				if ((((!(_10621_f.get()._field_mutable)) && (_10621_f.get()._field_kind.get()._field_kind != nullptr)) && _1a850e08c_mutable(_10621_f.get()._field_kind.get()._field_kind.ptr()))) {
					_10017_ins.get()._field_mutable=true;
				};
			}
			_iter_next_1b37c0cb1:;
			++it;
			goto _iter_begin_1b37c0cb1;
		}
		_iter_end_1b37c0cb1:;
	};
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_10017_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_10017_ins.get()._field_methods=jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>::alloc(0LL,_self_.get()._field_methods.len());
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1b37c3e18:;
			if (it != expr.end()) {
				jule::Ptr<_1a5b2eeb8_Fn> _11725_f = *it;
				{
					jule::Ptr<_1a5b2eeb8_Fn> _11825_fins = jule::new_ptr<_1a5b2eeb8_Fn>((*(_11725_f)));;
					_11825_fins.get()._field_instances=nullptr;
					_10017_ins.get()._field_methods = jule::alloc_for_append(_10017_ins.get()._field_methods,1);_10017_ins.get()._field_methods.__push(_11825_fins);;
				}
				_iter_next_1b37c3e18:;
				++it;
				goto _iter_begin_1b37c3e18;
			}
			_iter_end_1b37c3e18:;
		};
	};
	return _10017_ins;
}



inline jule::Ptr<_1b39672a9_StructIns> _1b3964d67_append_instance(_1b396462a_Struct* _self_, jule::Ptr<_1b39672a9_StructIns>& _12939_ins) {
	if ((((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL))) {
		return (*_self_)._field_instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1b37c65be:;
		if (it != expr.end()) {
			jule::Ptr<_1b39672a9_StructIns> _13521_ains = *it;
			{
				if (_1b3967d8c_same(_13521_ains.ptr(), _12939_ins)) {
					return _13521_ains;
				};
			}
			_iter_next_1b37c65be:;
			++it;
			goto _iter_begin_1b37c65be;
		}
		_iter_end_1b37c65be:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12939_ins);;
	return nullptr;
}



inline jule::Ptr<_1a5b2eeb8_Fn> _1b396521e_find_method(_1b396462a_Struct* _self_, jule::Str _14734_ident, jule::Bool _14746_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1b37c868c:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _14821_f = *it;
			{
				if (((_14821_f.get()._field_statically == _14746_statically) && (_14821_f.get()._field_ident == _14734_ident))) {
					return _14821_f;
				};
			}
			_iter_next_1b37c868c:;
			++it;
			goto _iter_begin_1b37c868c;
		}
		_iter_end_1b37c868c:;
	};
	return nullptr;
}



inline jule::Ptr<_1a8487246_Var> _1b396552c_find_static(_1b396462a_Struct* _self_, jule::Str _15834_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1b37c9bcc:;
		if (it != expr.end()) {
			jule::Ptr<_1a8487246_Var> _15921_v = *it;
			{
				if ((_15921_v.get()._field_ident == _15834_ident)) {
					return _15921_v;
				};
			}
			_iter_next_1b37c9bcc:;
			++it;
			goto _iter_begin_1b37c9bcc;
		}
		_iter_end_1b37c9bcc:;
	};
	return nullptr;
}



inline jule::Ptr<_1b38b3d0a_Field> _1b396583a_find_field(_1b396462a_Struct* _self_, jule::Str _16933_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1b37cae97:;
		if (it != expr.end()) {
			jule::Ptr<_1b38b3d0a_Field> _17021_f = *it;
			{
				if ((_17021_f.get()._field_ident == _16933_ident)) {
					return _17021_f;
				};
			}
			_iter_next_1b37cae97:;
			++it;
			goto _iter_begin_1b37cae97;
		}
		_iter_end_1b37cae97:;
	};
	return nullptr;
}



inline jule::Bool _1b3965b48_is_implements(_1b396462a_Struct* _self_, jule::Ptr<_1a5e34531_Trait> _17932_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1b37cc262:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e34531_Trait> &_18016_it = *it;
			{
				if ((_17932_t == _18016_it)) {
					return true;
				};
			}
			_iter_next_1b37cc262:;
			++it;
			goto _iter_begin_1b37cc262;
		}
		_iter_end_1b37cc262:;
	};
	return false;
}



inline jule::Bool _1b3965e56_is_derives(_1b396462a_Struct* _self_, jule::Str _18929_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1b37cd43e:;
		if (it != expr.end()) {
			jule::Ptr<_210eb33e0_Directive> &_19016_d = *it;
			{
				if ((_19016_d.get()._field_tag.get()._field_kind == jule::Str("derive", 6))) {
					if (((_19016_d.get()._field_args.len() == 1LL) && (_19016_d.get()._field_args[0LL].get()._field_kind == _18929_ident))) {
						return true;
					};
				};
			}
			_iter_next_1b37cd43e:;
			++it;
			goto _iter_begin_1b37cd43e;
		}
		_iter_end_1b37cd43e:;
	};
	return false;
}



inline jule::Bool _1b3966264_is_uses(_1b396462a_Struct* _self_, jule::Ptr<_1b396462a_Struct> _20126_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1b37d0595:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> &_20216_u = *it;
			{
				while ((_20126_s == _20216_u)) {
					{
						return true;
					}
				_iter_next_1b37d0a90:;
				}
				_iter_end_1b37d0a90:;;
			}
			_iter_next_1b37d0595:;
			++it;
			goto _iter_begin_1b37d0595;
		}
		_iter_end_1b37d0595:;
	};
	return false;
}



inline jule::Bool _1b39664c8_has_ref_accessible(_1b396462a_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1b37d1442:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> &_21216_m = *it;
			{
				if (((_21216_m.get()._field_params.len() > 0LL) && _1a5b2e01c_is_ref(_21216_m.get()._field_params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1b37d1442:;
			++it;
			goto _iter_begin_1b37d1442;
		}
		_iter_end_1b37d1442:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396462a_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396694b_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3968e15_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b39693cc_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3969784_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3969b80_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396a037_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396a367_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396a895_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396b1c0_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396b577_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396b9ea_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396bda2_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396c259_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396c6cc_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396cc1b_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396d25a_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396d9ca_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396de81_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396e327_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396e613_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396eb96_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b396ee71_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b397036c_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3970757_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3970a76_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3970e61_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b397134b_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b3971802_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b2a568_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b2a7bb_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b2ab95_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b2ae70_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b2b5e1_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b2b7cd_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b2bab9_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b2be60_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b2c24b_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b2cea5_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5b322c8_ParamIns> _1a5b2da44_instance(jule::Ptr<_1a5b2d67b_Param> _self_) {
	return jule::new_ptr<_1a5b322c8_ParamIns>(_1a5b322c8_ParamIns(_self_,jule::Ptr<_1a850cbe5_TypeKind>()));
}



inline jule::Bool _1a5b2dca8_is_self(_1a5b2d67b_Param* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1a5b2e01c_is_ref(_1a5b2d67b_Param* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b2d67b_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a5b30419_is_void(_1a5b2eeb8_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1a5b3067d_is_method(_1a5b2eeb8_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1a5b308e2_is_entry_point(_1a5b2eeb8_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1a5b30b56_is_init(_1a5b2eeb8_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1a5b30dba_is_anon(_1a5b2eeb8_Fn* _self_) {
	return _2110e9c30_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1a5b3112e_any_var(_1a5b2eeb8_Fn* _self_) {
	return (((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL));
}



inline jule::Bool _1a5b313d7_parameters_uses_generics(_1a5b2eeb8_Fn* _self_) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_params;
		auto it = expr.begin();
		_iter_begin_1b37e639c:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2d67b_Param> &_10516_p = *it;
			{
				if (_1a5b35045_parameter_uses_generics(_10516_p,(*_self_)._field_generics)) {
					return true;
				};
			}
			_iter_next_1b37e639c:;
			++it;
			goto _iter_begin_1b37e639c;
		}
		_iter_end_1b37e639c:;
	};
	return false;
}



inline jule::Bool _1a5b3163a_result_uses_generics(_1a5b2eeb8_Fn* _self_) {
	if (_1a5b30419_is_void(&(*_self_))) {
		return false;
	} else if ((((*_self_)._field_result.get()._field_kind == nullptr) || ((*_self_)._field_result.get()._field_kind.get()._field_kind == nullptr))) {
		return false;
	};
	return _1a5b34b6b_kind_uses_generics((*_self_)._field_result.get()._field_kind.get()._field_kind,(*_self_)._field_generics);
}



inline jule::Ptr<_1a5b33164_FnIns> _1a5b3189e_instance_force(jule::Ptr<_1a5b2eeb8_Fn> _self_) {
	jule::Ptr<_1a5b33164_FnIns> _12717_ins = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),_self_,jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::new_ptr<_1a8438e62_Scope>(),static__1a5b364a8_new(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(),jule::Bool()));;
	_12717_ins.get()._field_params=jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>::alloc(0LL,_self_.get()._field_params.len());
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1b37ea66a:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2d67b_Param> _13421_p = *it;
			{
				_12717_ins.get()._field_params = jule::alloc_for_append(_12717_ins.get()._field_params,1);_12717_ins.get()._field_params.__push(_1a5b2da44_instance(_13421_p));;
			}
			_iter_next_1b37ea66a:;
			++it;
			goto _iter_begin_1b37ea66a;
		}
		_iter_end_1b37ea66a:;
	};
	if ((_12717_ins.get()._field_decl.get()._field_result != nullptr)) {
		_12717_ins.get()._field_result=_12717_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	};
	return _12717_ins;
}



inline jule::Ptr<_1a5b33164_FnIns> _1a5b31b13_instance(jule::Ptr<_1a5b2eeb8_Fn> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	return _1a5b3189e_instance_force(_self_);
}



inline jule::Ptr<_1a5b33164_FnIns> _1a5b31e21_append_instance(_1a5b2eeb8_Fn* _self_, jule::Ptr<_1a5b33164_FnIns>& _15539_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return (*_self_)._field_instances[0LL];
		};
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15539_ins);;
		return nullptr;
	};
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15539_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1b3800a6b:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b33164_FnIns> _17121_ains = *it;
			{
				if (_1a5b34462_same(_17121_ains.ptr(), _15539_ins)) {
					return _17121_ains;
				};
			}
			_iter_next_1b3800a6b:;
			++it;
			goto _iter_begin_1b3800a6b;
		}
		_iter_end_1b3800a6b:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15539_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b2eeb8_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5b326a2_to_str(_1a5b322c8_ParamIns* _self_) {
	jule::Str _19317_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_mutable) {
		_19317_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_decl.get()._field_reference) {
		_19317_s+=jule::Str("&_:", 3);
	};
	if (_1a5b2dca8_is_self((*_self_)._field_decl.ptr())) {
		if (_1a5b2e01c_is_ref((*_self_)._field_decl.ptr())) {
			_19317_s+=jule::Str("&", 1);
		};
		_19317_s+=jule::Str("self", 4);
		return _19317_s;
	};
	if ((*_self_)._field_decl.get()._field_variadic) {
		_19317_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_kind != nullptr)) {
		_19317_s+=_1a850d09c_to_str((*_self_)._field_kind.ptr());
	};
	return _19317_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b322c8_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5b334c7_to_str(_1a5b33164_FnIns* _self_) {
	;
	return _1a5b34770_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1a5b337d5_equals(jule::Ptr<_1a5b33164_FnIns> _self_, jule::Ptr<_1a850cbe5_TypeKind> _24426_other) {
	jule::Ptr<_1a5b33164_FnIns> _24513_f = _1a8510c2b_fnc(_24426_other.ptr());;
	if ((_24513_f == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_exceptional != _24513_f.get()._field_decl.get()._field_exceptional)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_unsafety != _24513_f.get()._field_decl.get()._field_unsafety)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _24513_f.get()._field_generics.len())) {
		return false;
	};
	if ((_1a5b30419_is_void(_self_.get()._field_decl.ptr()) != _1a5b30419_is_void(_24513_f.get()._field_decl.ptr()))) {
		return false;
	};
	jule::I64 _26617_i = 0LL;;
	for (; (_26617_i < _self_.get()._field_generics.len()); (_26617_i)++) {
		{
			if ((!(_1a850d3aa_equals(_self_.get()._field_generics[_26617_i], _24513_f.get()._field_generics[_26617_i])))) {
				return false;
			};
		}
	_iter_next_1b38082d2:;
	}
	_iter_end_1b38082d2:;;
	jule::Fn<jule::Bool(jule::Ptr<_1a5b322c8_ParamIns>,jule::Ptr<_1a5b322c8_ParamIns>)> _27313_check_params = jule::Fn<jule::Bool(jule::Ptr<_1a5b322c8_ParamIns>,jule::Ptr<_1a5b322c8_ParamIns>)>([=](jule::Ptr<_1a5b322c8_ParamIns> _27331_p1, jule::Ptr<_1a5b322c8_ParamIns> _27346_p2) mutable -> jule::Bool {
		if ((_27331_p1.get()._field_decl.get()._field_mutable != _27346_p2.get()._field_decl.get()._field_mutable)) {
			return false;
		};
		if (_1a5b2dca8_is_self(_27331_p1.get()._field_decl.ptr())) {
			if ((!(_1a5b2dca8_is_self(_27346_p2.get()._field_decl.ptr())))) {
				return false;
			};
			if ((_1a5b2e01c_is_ref(_27331_p1.get()._field_decl.ptr()) != _1a5b2e01c_is_ref(_27346_p2.get()._field_decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_27331_p1.get()._field_decl.get()._field_reference != _27346_p2.get()._field_decl.get()._field_reference)) {
			return false;
		};
		if ((_27331_p1.get()._field_decl.get()._field_variadic != _27346_p2.get()._field_decl.get()._field_variadic)) {
			return false;
		};
		return _1a850d3aa_equals(_27331_p1.get()._field_kind, _27346_p2.get()._field_kind);
	});;
	if ((_24513_f.get()._field_params.len() != _self_.get()._field_params.len())) {
		return false;
	};
	_26617_i=0LL;
	for (; (_26617_i < _self_.get()._field_params.len()); (_26617_i)++) {
		{
			if ((!(_27313_check_params(_self_.get()._field_params[_26617_i],_24513_f.get()._field_params[_26617_i])))) {
				return false;
			};
		}
	_iter_next_1b380bc75:;
	}
	_iter_end_1b380bc75:;;
	if ((!(_1a5b30419_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1a850d3aa_equals(_self_.get()._field_result, _24513_f.get()._field_result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> _1a5b33b7b_types(_1a5b33164_FnIns* _self_) {
	{
		
		if (((*_self_)._field_result == nullptr)) {
			_case_begin_1b38134c9:;
			{
				return nullptr;
			}
		}
		else if ((_1a85116cc_tup((*_self_)._field_result.ptr()) == nullptr)) {
			_case_begin_1b3813540:;
			{
				return jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>({(*_self_)._field_result});
			}
		}
		else {
			_case_begin_1b3812e02:;
			{
				return _1a85116cc_tup((*_self_)._field_result.ptr()).get()._field_types;
			}
		}
		_match_end_1b3812d36:;
	};
}



inline jule::Bool _1a5b33de0_is_builtin(_1a5b33164_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1a5b34154_is_anon(_1a5b33164_FnIns* _self_) {
	return ((*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1a5b30dba_is_anon((*_self_)._field_decl.ptr())));
}



inline jule::Bool _1a5b34462_same(_1a5b33164_FnIns* _self_, jule::Ptr<_1a5b33164_FnIns> _35023_f) {
	if ((((*_self_)._field_decl != _35023_f.get()._field_decl) || (_35023_f.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1aa26e735:;
		if (it != expr.end()) {
			jule::I64 _35513_i = it - expr.begin();
			jule::Ptr<_1a850cbe5_TypeKind> &_35516_g = *it;
			{
				if ((!(_1a850d3aa_equals(_35516_g, _35023_f.get()._field_generics[_35513_i])))) {
					return false;
				};
			}
			_iter_next_1aa26e735:;
			++it;
			_35513_i++;
			goto _iter_begin_1aa26e735;
		}
		_iter_end_1aa26e735:;
	};
	return true;
}



inline jule::Str _1a5b34770_get_kind_str(_1a5b33164_FnIns* _self_, jule::Bool _36631_ident) {
	jule::Str _36717_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_36717_s+=jule::Str("unsafe ", 7);
	};
	_36717_s+=jule::Str("fn", 2);
	if ((_36631_ident && ((*_self_)._field_decl != nullptr))) {
		_36717_s+=(jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident);
	};
	if (((*_self_)._field_generics.len() > 0LL)) {
		_36717_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1aa272826:;
			if (it != expr.end()) {
				jule::I64 _38117_i = it - expr.begin();
				jule::Ptr<_1a850cbe5_TypeKind> &_38120_t = *it;
				{
					_36717_s+=_1a850d09c_to_str(_38120_t.ptr());
					if (((_38117_i + 1LL) < (*_self_)._field_generics.len())) {
						_36717_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1aa272826:;
				++it;
				_38117_i++;
				goto _iter_begin_1aa272826;
			}
			_iter_end_1aa272826:;
		};
		_36717_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_36717_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1aa2744b5:;
			if (it != expr.end()) {
				jule::I64 _39017_i = it - expr.begin();
				jule::Ptr<_21110be1d_GenericDecl> &_39020_g = *it;
				{
					_36717_s+=_39020_g.get()._field_ident;
					if (((_39017_i + 1LL) < (*_self_)._field_decl.get()._field_generics.len())) {
						_36717_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1aa2744b5:;
				++it;
				_39017_i++;
				goto _iter_begin_1aa2744b5;
			}
			_iter_end_1aa2744b5:;
		};
		_36717_s+=jule::Str("]", 1);
	};
	_36717_s+=jule::Str("(", 1);
	jule::I64 _40013_n = (*_self_)._field_params.len();;
	if ((_40013_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1aa27661b:;
			if (it != expr.end()) {
				jule::Ptr<_1a5b322c8_ParamIns> &_40220_p = *it;
				{
					_36717_s+=_1a5b326a2_to_str(_40220_p.ptr());
					_36717_s+=jule::Str(",", 1);
				}
				_iter_next_1aa27661b:;
				++it;
				goto _iter_begin_1aa27661b;
			}
			_iter_end_1aa27661b:;
		};
		(_36717_s).mut_slice(0LL,(_36717_s.len() - 1LL));;
	};
	_36717_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_36717_s+=jule::Str("!", 1);
	};
	if ((!(_1a5b30419_is_void((*_self_)._field_decl.ptr())))) {
		_36717_s+=jule::Str(":", 1);
		_36717_s+=_1a850d09c_to_str((*_self_)._field_result.ptr());
	};
	return _36717_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b33164_FnIns _Src) {
	_Stream << _1a5b334c7_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a5b36222_ReferenceStack> static__1a5b364a8_new(void) {
	return jule::new_ptr<_1a5b36222_ReferenceStack>();
}



inline jule::I64 _1a5b3683d_len(_1a5b36222_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1a5b36b4b_at(_1a5b36222_ReferenceStack* _self_, jule::I64 _5825_i) {
	return jule::Any((*_self_)._field_buffer[_5825_i]);
}



inline void _1a5b36dc1_push(_1a5b36222_ReferenceStack* _self_, jule::Any _6331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_6331_ref));;
}



inline jule::Bool _1a5b371ce_exist_0(_1a5b36222_ReferenceStack* _self_, jule::Ptr<_1a8487246_Var> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1aa7cc402:;
		if (it != expr.end()) {
			jule::Any &_6916_ref = *it;
			{
				if ((_6916_ref == _6827_t)) {
					return true;
				};
			}
			_iter_next_1aa7cc402:;
			++it;
			goto _iter_begin_1aa7cc402;
		}
		_iter_end_1aa7cc402:;
	};
	return false;
}

inline jule::Bool _1a5b371ce_exist_1(_1a5b36222_ReferenceStack* _self_, jule::Ptr<_1a5b33164_FnIns> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1aa7ced1c:;
		if (it != expr.end()) {
			jule::Any &_6916_ref = *it;
			{
				if ((_6916_ref == _6827_t)) {
					return true;
				};
			}
			_iter_next_1aa7ced1c:;
			++it;
			goto _iter_begin_1aa7ced1c;
		}
		_iter_end_1aa7ced1c:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b36222_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b37586_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5b3b139_SymbolBuilder> _1a5b3b700_get_root(jule::Ptr<_1a5b3b139_SymbolBuilder> _self_) {
	jule::Ptr<_1a5b3b139_SymbolBuilder> _28117_root = _self_;;
	while ((_28117_root.get()._field_owner != nullptr)) {
		{
			_28117_root=_28117_root.get()._field_owner;
		}
	_iter_next_1aa27b2be:;
	}
	_iter_end_1aa27b2be:;;
	return _28117_root;
}



inline void _1a5b3bab8_push_err(_1a5b3b139_SymbolBuilder* _self_, jule::Ptr<_2110e7238_Token>& _28828_token, jule::Str _28843_fmt, jule::Slice<jule::Any> _28856_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a846a3a0_compiler_err(_28828_token,true,_28843_fmt,jule::Any(_28856_args)));;
}



inline void _1a5b3be81_push_err_text(_1a5b3b139_SymbolBuilder* _self_, jule::Ptr<_2110e7238_Token>& _29233_token, jule::Str _29248_fmt, jule::Slice<jule::Any> _29261_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a846a3a0_compiler_err(_29233_token,false,_29248_fmt,jule::Any(_29261_args)));;
}



inline void _1a5b3c2a0_push_suggestion(_1a5b3b139_SymbolBuilder* _self_, jule::Str _29734_fmt, jule::Slice<jule::Any> _29747_args) {
	{
		_1a846b7ad_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29734_fmt,jule::Any(_29747_args));
	};
}



inline jule::Bool _1a5b3c69b_check_cpp_use_decl_path(_1a5b3b139_SymbolBuilder* _self_, jule::Ptr<_21110eb57_UseDecl>& _30143_decl, jule::Str _30159_path) {
	jule::Bool _30172_ok = jule::Bool();
	jule::Str _30213_ext = _20ecb6623_ext(_30159_path);;
	if (((!(_210c33836_is_valid_header_ext(_30213_ext))) && (!(_210c33abc_is_valid_cpp_ext(_30213_ext))))) {
		_1a5b3bab8_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_30213_ext)}));
		_30172_ok = false;
		return _30172_ok;
	};
	jule::Ptr<_20eac0e77_Status> _30913_info = ({
		auto except = static__20ebe7b81_of(_30159_path);
		(except.ok()) ? (except.result) : ({{
			_1a5b3bab8_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_30143_decl.get()._field_link_path)}));
			_30172_ok = false;
			return _30172_ok;
			_30172_ok = false;
			return _30172_ok;
		} jule::Ptr<_20eac0e77_Status>();});
	});;
	if (_20dde8cb7_is_dir(_30913_info.ptr())) {
		_1a5b3bab8_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_30143_decl.get()._field_link_path)}));
		_30172_ok = false;
		return _30172_ok;
	};
	_30172_ok = true;
	return _30172_ok;
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a5b3c9a9_build_cpp_header_import(_1a5b3b139_SymbolBuilder* _self_, jule::Ptr<_21110eb57_UseDecl>& _32147_decl) {
	jule::Str _32217_path = _32147_decl.get()._field_link_path;;
	if ((!(_210c33704_is_std_header_path(_32147_decl.get()._field_link_path)))) {
		_32217_path=_20ecb5a51_join(jule::Slice<jule::Str>({_2110ed01e_dir(_32147_decl.get()._field_token.get()._field_file.ptr()),_32147_decl.get()._field_link_path}));
		jule::Bool _32621_ok = _1a5b3c69b_check_cpp_use_decl_path(&(*_self_), _32147_decl,_32217_path);;
		if ((!(_32621_ok))) {
			return nullptr;
		};
		std::tie(_32217_path,_32621_ok) = _20ecb81a2_abs(_32217_path);
		if ((!(_32621_ok))) {
			_1a5b3bab8_push_err(&(*_self_), _32147_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_32147_decl.get()._field_link_path)}));
		};
	};
	return jule::new_ptr<_1a8464058_ImportInfo>(_1a8464058_ImportInfo(_32147_decl.get()._field_token,_32217_path,_32147_decl.get()._field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<jule::Ptr<_2110e7238_Token>>(),nullptr,jule::I64()));
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a5b3cca6_build_std_import(_1a5b3b139_SymbolBuilder* _self_, jule::Ptr<_21110eb57_UseDecl>& _34940_decl) {
	jule::Str _35017_path = _34940_decl.get()._field_link_path.slice(5LL);;
	_35017_path=_210bd1196_replace(_35017_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_35017_path=_20ecb5a51_join(jule::Slice<jule::Str>({_210c5359d_PATH_STDLIB,_35017_path}));
	jule::Bool _35320_ok;;
	std::tie(_35017_path,_35320_ok) = _20ecb81a2_abs(_35017_path);
	if ((!(_35320_ok))) {
		_1a5b3bab8_push_err(&(*_self_), _34940_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_34940_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_20eac0e77_Status> _36013_info = ({
		auto except = static__20ebe7b81_of(_35017_path);
		(except.ok()) ? (except.result) : ({{
			_1a5b3bab8_push_err(&(*_self_), _34940_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_34940_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_20eac0e77_Status>();});
	});;
	if ((!(_20dde8cb7_is_dir(_36013_info.ptr())))) {
		_1a5b3bab8_push_err(&(*_self_), _34940_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_34940_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _37013_i = (_20ece2de1_find_last(_34940_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _37113_ident = _34940_decl.get()._field_link_path.slice(_37013_i);;
	return jule::new_ptr<_1a8464058_ImportInfo>(_1a8464058_ImportInfo(_34940_decl.get()._field_token,_35017_path,_34940_decl.get()._field_link_path,_37113_ident,_34940_decl.get()._field_alias,jule::Bool(),false,true,_34940_decl.get()._field_full,jule::Slice<jule::Ptr<_2110e7238_Token>>(),jule::new_ptr<_1a8466c1a_Package>(_1a8466c1a_Package(nullptr)),jule::I64()));
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a5b3d0b4_build_ident_import(jule::Ptr<_1a5b3b139_SymbolBuilder> _self_, jule::Ptr<_21110eb57_UseDecl>& _38843_decl) {
	jule::Str _38913_mod_path = _1a8461be3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8460d57_get_mod_path(_self_.get()._field_importer);;
	if ((_38913_mod_path.len() == 0LL)) {
		_1a5b3bab8_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1a5b3c2a0_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _39617_path = _38843_decl.get()._field_link_path;;
	_39617_path=_210bd1196_replace(_39617_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_39617_path=_20ecb5a51_join(jule::Slice<jule::Str>({_38913_mod_path,_39617_path}));
	jule::Bool _40020_ok;;
	std::tie(_39617_path,_40020_ok) = _20ecb81a2_abs(_39617_path);
	if ((!(_40020_ok))) {
		_1a5b3bab8_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38843_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_20eac0e77_Status> _40713_info = ({
		auto except = static__20ebe7b81_of(_39617_path);
		(except.ok()) ? (except.result) : ({{
			_1a5b3bab8_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38843_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_20eac0e77_Status>();});
	});;
	if ((!(_20dde8cb7_is_dir(_40713_info.ptr())))) {
		_1a5b3bab8_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38843_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I64 _41713_i = (_20ece2de1_find_last(_38843_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _41813_ident = _38843_decl.get()._field_link_path.slice(_41713_i);;
	return jule::new_ptr<_1a8464058_ImportInfo>(_1a8464058_ImportInfo(_38843_decl.get()._field_token,_39617_path,_38843_decl.get()._field_link_path,_41813_ident,_38843_decl.get()._field_alias,jule::Bool(),false,false,_38843_decl.get()._field_full,jule::Slice<jule::Ptr<_2110e7238_Token>>(),jule::new_ptr<_1a8466c1a_Package>(_1a8466c1a_Package(nullptr)),jule::I64()));
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a5b3d3c2_build_import(jule::Ptr<_1a5b3b139_SymbolBuilder> _self_, jule::Ptr<_21110eb57_UseDecl>& _43537_decl) {
	{
		
		if (_43537_decl.get()._field_cpp_linked) {
			_case_begin_1aa2995ea:;
			{
				return _1a5b3c9a9_build_cpp_header_import(_self_.ptr(), _43537_decl);
			}
		}
		else if (_43537_decl.get()._field_std) {
			_case_begin_1aa29981a:;
			{
				return _1a5b3cca6_build_std_import(_self_.ptr(), _43537_decl);
			}
		}
		else {
			_case_begin_1aa298c8c:;
			{
				return _1a5b3d0b4_build_ident_import(_self_, _43537_decl);
			}
		}
		_match_end_1aa298bc1:;
	};
}



inline jule::Bool _1a5b3d724_check_duplicate_use_decl(_1a5b3b139_SymbolBuilder* _self_, jule::Ptr<_1a8464058_ImportInfo>& _44644_pkg) {
	jule::Bool _44664_ok = jule::Bool();
	jule::Ptr<_1a8464058_ImportInfo> _44813_lpkg = _1a84ce0c3_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)>([=](jule::Ptr<_1a8464058_ImportInfo> _44849_spkg) mutable -> jule::Bool {
		return (_44644_pkg.get()._field_path == _44849_spkg.get()._field_path);
	}));;
	if ((_44813_lpkg == nullptr)) {
		_44664_ok = true;
		return _44664_ok;
	};
	_1a5b3bab8_push_err(&(*_self_), _44644_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>({jule::Any(_44644_pkg.get()._field_link_path)}));
	_1a5b3c2a0_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_44664_ok = false;
	return _44664_ok;
}



inline void _1a5b3da32_impl_import_selections(_1a5b3b139_SymbolBuilder* _self_, jule::Ptr<_1a8464058_ImportInfo>& _46046_imp, jule::Ptr<_21110eb57_UseDecl>& _46069_decl) {
	{
		auto &expr = _46069_decl.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1aa29ec0a:;
		if (it != expr.end()) {
			jule::Ptr<_2110e7238_Token> _46121_ident = *it;
			{
				if (_1a8466687_exist_ident(_46046_imp.ptr(), _46121_ident.get()._field_kind)) {
					_1a5b3bab8_push_err(&(*_self_), _46121_ident,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>({jule::Any(_46121_ident.get()._field_kind)}));
					_1a5b3c2a0_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_1aa29ec0a;
				};
				_46046_imp.get()._field_selected = jule::alloc_for_append(_46046_imp.get()._field_selected,1);_46046_imp.get()._field_selected.__push(_46121_ident);;
			}
			_iter_next_1aa29ec0a:;
			++it;
			goto _iter_begin_1aa29ec0a;
		}
		_iter_end_1aa29ec0a:;
	};
}



inline jule::Str _1a5b3dd40_get_as_link_path(jule::Ptr<_1a5b3b139_SymbolBuilder> _self_, jule::Str _47240_path) {
	if (_210b8d120_has_prefix(_47240_path,_210c5359d_PATH_STDLIB)) {
		(_47240_path).mut_slice(_210c5359d_PATH_STDLIB.len());;
		return (jule::Str("std", 3) + _210bd1196_replace(_47240_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _47814_root;;
	std::tie(_47814_root,std::ignore) = _20ecb81a2_abs(_1a8461be3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8460d57_get_mod_path(_self_.get()._field_importer));
	(_47240_path).mut_slice(_47814_root.len());;
	if ((_47240_path[0LL] == 92LLU)) {
		(_47240_path).mut_slice(1LL);;
	};
	return _210bd1196_replace(_47240_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1a5b3e208_push_cycle_error(jule::Ptr<_1a5b3b139_SymbolBuilder> _self_, jule::Ptr<_1a5b3b139_SymbolBuilder>& _48637_sb, jule::Str _48657_path, jule::Str& _48673_message) {
	;
	jule::Str _48913_refers_to = _210c4036a_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_1a5b3dd40_get_as_link_path(_self_, _2110ed01e_dir(_48637_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1a5b3dd40_get_as_link_path(_self_, _48657_path))}));;
	(_48673_message).buffer.insert(0, (((_20ecdd3a3_repeat(jule::Str(" ", 1),4LL) + _48913_refers_to) + jule::Str("\n", 1))));;
}



inline void _1a5b3e5c1_push_cross_cycle_error(jule::Ptr<_1a5b3b139_SymbolBuilder> _self_, jule::Ptr<_1a5b3b139_SymbolBuilder>& _49643_target, jule::Ptr<_1a8464058_ImportInfo>& _49668_imp, jule::Ptr<_2110e7238_Token>& _49687_error_token) {
	jule::Str _49717_message = jule::Str();;
	_1a5b3e208_push_cycle_error(_self_, _self_,_49668_imp.get()._field_path,_49717_message);
	jule::Ptr<_1a5b3b139_SymbolBuilder> _50117_owner = _self_.get()._field_owner;;
	jule::Ptr<_1a5b3b139_SymbolBuilder> _50217_old = _self_;;
	while ((_50117_owner.get()._field_owner != nullptr)) {
		{
			_1a5b3e208_push_cycle_error(_self_, _50217_old.get()._field_owner,_2110ed01e_dir(_50217_old.get()._field_table.get()._field_file.ptr()),_49717_message);
			if ((_50117_owner.get()._field_owner == _49643_target)) {
				_1a5b3e208_push_cycle_error(_self_, _49643_target,_2110ed01e_dir(_50117_owner.get()._field_table.get()._field_file.ptr()),_49717_message);
				goto _iter_end_1aa2a8917;
			};
			_50217_old=_50117_owner;
			_50117_owner=_50117_owner.get()._field_owner;
		}
	_iter_next_1aa2a8917:;
	}
	_iter_end_1aa2a8917:;;
	_1a5b3bab8_push_err(_self_.ptr(), _49687_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_49717_message)}));
}



inline jule::Bool _1a5b3e978_check_import_cycles(jule::Ptr<_1a5b3b139_SymbolBuilder> _self_, jule::Ptr<_1a8464058_ImportInfo> _51939_imp, jule::Ptr<_21110eb57_UseDecl>& _51958_decl) {
	if ((_51939_imp.get()._field_path == _2110ed01e_dir(_self_.get()._field_table.get()._field_file.ptr()))) {
		_1a5b3bab8_push_err(_self_.ptr(), _51958_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(_1a5b3dd40_get_as_link_path(_self_, _51939_imp.get()._field_path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_2110ed01e_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path)) {
		_1a5b3e5c1_push_cross_cycle_error(_self_, _self_.get()._field_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	};
	jule::Ptr<_1a5b3b139_SymbolBuilder> _53417_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_2110ed01e_dir(_53417_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path)) {
		_1a5b3e5c1_push_cross_cycle_error(_self_, _53417_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	};
	if ((_53417_owner.get()._field_owner != nullptr)) {
		_53417_owner=_53417_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1a5b3ed85_check_package_accessibility(_1a5b3b139_SymbolBuilder* _self_, jule::Ptr<_21110eb57_UseDecl>& _55547_decl, jule::Str& _55564_mod, jule::Str& _55575_path) {
	if (((_1a8461be3_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1a8460d57_get_mod_path((*_self_)._field_importer) != _55564_mod) && _2109140a5_contains(_55575_path,jule::Str("internal", 8)))) {
		_1a5b3bab8_push_err(&(*_self_), _55547_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a5b4022b_import_package(jule::Ptr<_1a5b3b139_SymbolBuilder> _self_, jule::Ptr<_1a8464058_ImportInfo>& _56139_imp, jule::Ptr<_21110eb57_UseDecl>& _56162_decl) {
	jule::Bool _56180_ok = jule::Bool();
	if (_56139_imp.get()._field_cpp_linked) {
		_56180_ok = true;
		return _56180_ok;
	};
	jule::Ptr<_1a8464058_ImportInfo> _56617_port = _1a8461be3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8461473_get_import(_self_.get()._field_importer, _56139_imp.get()._field_path);;
	if ((_56617_port != nullptr)) {
		_56139_imp.get()._field_package=_56617_port.get()._field_package;
		_56139_imp.get()._field_duplicate=true;
		jule::Str _57117_old_mod = _1a8461be3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8460d57_get_mod_path(_self_.get()._field_importer);;
		_1a8461be3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8460b15_set_mod_path(_self_.get()._field_importer, _1a8461be3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8461165_mod_by_id(_self_.get()._field_importer, _56139_imp.get()._field_mod_id));
		_1a5b3ed85_check_package_accessibility(_self_.ptr(), _56162_decl,_57117_old_mod,_56617_port.get()._field_path);
		_1a8461be3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8460b15_set_mod_path(_self_.get()._field_importer, _57117_old_mod);
	} else {
		if ((!(_1a5b3e978_check_import_cycles(_self_, _56139_imp,_56162_decl)))) {
			_56180_ok = false;
			return _56180_ok;
		};
		jule::Str _58017_old_mod = _1a8461be3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8460d57_get_mod_path(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1a8461be3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8460b15_set_mod_path(_self_.get()._field_importer, _58017_old_mod);
		});;
		if (_56139_imp.get()._field_std) {
			_1a8461be3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8460b15_set_mod_path(_self_.get()._field_importer, _210c5359d_PATH_STDLIB);
		};
		jule::Slice<jule::Ptr<_210eb3d6e_Ast>> _58522_asts;;
		jule::Slice<_210c3ee2a_Log> _58532_errors;;
		std::tie(_58522_asts,_58532_errors) = _1a8461be3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a846182a_import_package(_self_.get()._field_importer, _56139_imp.get()._field_path,(!(_56139_imp.get()._field_std)));
		if ((_58532_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
			_56180_ok = false;
			return _56180_ok;
		};
		_1a5b3ed85_check_package_accessibility(_self_.ptr(), _56162_decl,_58017_old_mod,_56139_imp.get()._field_path);
		{
			auto &expr = _58522_asts;
			auto it = expr.begin();
			_iter_begin_1aa2bbe25:;
			if (it != expr.end()) {
				jule::Ptr<_210eb3d6e_Ast> _59325_ast = *it;
				{
					jule::Ptr<_1a84cd7a9_SymbolTable> _59425_table = nullptr;;
					std::tie(_59425_table,_58532_errors) = _1a8526b76_build_symbols(_59325_ast,_self_.get()._field_importer,_self_);
					if ((_58532_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
						_1a5b3be81_push_err_text(_self_.ptr(), _56139_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56139_imp.get()._field_link_path)}));
						_56180_ok = false;
						return _56180_ok;
					};
					_56139_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_56139_imp.get()._field_package.get()._field_files,1);_56139_imp.get()._field_package.get()._field_files.__push(_59425_table);;
				}
				_iter_next_1aa2bbe25:;
				++it;
				goto _iter_begin_1aa2bbe25;
			}
			_iter_end_1aa2bbe25:;
		};
	};
	_1a5b3da32_impl_import_selections(_self_.ptr(), _56139_imp,_56162_decl);
	_56180_ok = true;
	return _56180_ok;
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a5b40539_import_use_decl(jule::Ptr<_1a5b3b139_SymbolBuilder> _self_, jule::Ptr<_21110eb57_UseDecl>& _61340_decl) {
	jule::Ptr<_1a8464058_ImportInfo> _61417_imp = _1a5b3d3c2_build_import(_self_, _61340_decl);;
	if ((_61417_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _62017_ok = _1a5b3d724_check_duplicate_use_decl(_self_.ptr(), _61417_imp);;
	if ((!(_62017_ok))) {
		return nullptr;
	};
	_62017_ok=_1a5b4022b_import_package(_self_, _61417_imp,_61340_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_61417_imp);;
	if (_62017_ok) {
		_1a8461be3_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8461aa0_imported(_self_.get()._field_importer, _61417_imp);
		return _61417_imp;
	};
	return nullptr;
}



inline void _1a5b40715_import_use_decls(jule::Ptr<_1a5b3b139_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1aa2c316d:;
		if (it != expr.end()) {
			jule::Ptr<_21110eb57_UseDecl> _63521_decl = *it;
			{
				_1a5b40539_import_use_decl(_self_, _63521_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1aa2c316d;
				};
			}
			_iter_next_1aa2c316d:;
			++it;
			goto _iter_begin_1aa2c316d;
		}
		_iter_end_1aa2c316d:;
	};
}



inline void _1a5b4098a_append_node(_1a5b3b139_SymbolBuilder* _self_, _2110cc1c9_Node& _64535_node) {
	{
		auto &_match_expr{ _64535_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_2111122b9_Impl>>()) {
			_case_begin_1aa2c4834:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1a5b3aad9_build_impl(_64535_node._field_data.operator jule::Ptr<_2111122b9_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110e591_TypeAliasDecl>>()) {
			_case_begin_1aa2c489a:;
			{
				jule::Ptr<_1a850bead_TypeAlias> _65021_ta = _1a5b37e6b_build_type_alias(_64535_node._field_data.operator jule::Ptr<_21110e591_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_65021_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2111115a4_StructDecl>>()) {
			_case_begin_1aa2c4911:;
			{
				jule::Ptr<_1b396462a_Struct> _65321_srct = _1a5b38796_build_struct(_64535_node._field_data.operator jule::Ptr<_2111115a4_StructDecl>());;
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_65321_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110ce74_FnDecl>>()) {
			_case_begin_1aa2c4977:;
			{
				jule::Ptr<_1a5b2eeb8_Fn> _65621_f = _1a5b393ac_build_fn(_64535_node._field_data.operator jule::Ptr<_21110ce74_FnDecl>());;
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_65621_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211111bae_TraitDecl>>()) {
			_case_begin_1aa2c5329:;
			{
				jule::Ptr<_1a5e34531_Trait> _65921_t = _1a5b398eb_build_trait(_64535_node._field_data.operator jule::Ptr<_211111bae_TraitDecl>());;
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_65921_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110d161_VarDecl>>()) {
			_case_begin_1aa2c5390:;
			{
				jule::Ptr<_1a8487246_Var> _66221_v = _1a5b3a59a_build_var(_64535_node._field_data.operator jule::Ptr<_21110d161_VarDecl>());;
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_66221_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211110262_EnumDecl>>()) {
			_case_begin_1aa2c5406:;
			{
				jule::Ptr<_1a83065e3_Enum> _66521_e = _1a5b3a1d2_build_enum(_64535_node._field_data.operator jule::Ptr<_211110262_EnumDecl>());;
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_66521_e);;
			}
		}
		else {
			_case_begin_1aa2c4746:;
			{
				_1a5b3bab8_push_err(&(*_self_), _64535_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa2c46e1:;
	};
}



inline void _1a5b40b66_append_nodes(_1a5b3b139_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1aa2cc386:;
		if (it != expr.end()) {
			_2110cc1c9_Node _67321_node = *it;
			{
				_1a5b4098a_append_node(&(*_self_), _67321_node);
			}
			_iter_next_1aa2cc386:;
			++it;
			goto _iter_begin_1aa2cc386;
		}
		_iter_end_1aa2cc386:;
	};
}



inline void _1a5b40ddb_push_directive_pass(_1a5b3b139_SymbolBuilder* _self_, jule::Ptr<_210eb33e0_Directive>& _67843_d) {
	if ((_67843_d.get()._field_args.len() == 0LL)) {
		_1a5b3bab8_push_err(&(*_self_), _67843_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_67843_d.get()._field_args.len() > 1LL)) {
		jule::Ptr<_2110e7238_Token> _68317_arg = _67843_d.get()._field_args[1LL];;
		_1a5b3bab8_push_err(&(*_self_), _68317_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_2110e7238_Token> _68713_arg = _67843_d.get()._field_args[0LL];;
	if ((_68713_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1a5b3bab8_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_68713_arg.get()._field_kind[0LL] != '\"')) {
		_1a5b3bab8_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1a5b37586_Pass(_67843_d.get()._field_tag,_68713_arg.get()._field_kind.slice(1LL,(_68713_arg.get()._field_kind.len() - 1LL))));;
}



inline void _1a5b410b7_append_top_directives(_1a5b3b139_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1aa2d2c82:;
		if (it != expr.end()) {
			jule::Ptr<_210eb33e0_Directive> _70521_d = *it;
			{
				{
					auto &_match_expr{ _70521_d.get()._field_tag.get()._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1aa2d4459:;
						{
							_1a5b40ddb_push_directive_pass(&(*_self_), _70521_d);
						}
					}
					_match_end_1aa2d43d2:;
				};
			}
			_iter_next_1aa2d2c82:;
			++it;
			goto _iter_begin_1aa2d2c82;
		}
		_iter_end_1aa2d2c82:;
	};
}



inline void _1a5b41293_build(jule::Ptr<_1a5b3b139_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1a84cd7a9_SymbolTable>(_1a84cd7a9_SymbolTable(_self_.get()._field_ast.get()._field_file,jule::Slice<_1a5b37586_Pass>(),jule::Slice<jule::Ptr<_1a8464058_ImportInfo>>(),jule::Slice<jule::Ptr<_1a8487246_Var>>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Slice<jule::Ptr<_1b396462a_Struct>>(),jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>(),jule::Slice<jule::Ptr<_1a5e34531_Trait>>(),jule::Slice<jule::Ptr<_1a83065e3_Enum>>(),jule::Slice<jule::Ptr<_1a8306d30_Impl>>()));
	_1a5b410b7_append_top_directives(_self_.ptr());
	_1a5b40715_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1a5b40b66_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a5b3b139_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e5553ccb_to_str(_1a5e34531_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1e55aeb4a_equals(jule::Ptr<_1a5e34531_Trait> _self_, jule::Ptr<_1a850cbe5_TypeKind> _2626_other) {
	jule::Ptr<_1a5e34531_Trait> _2713_trt = _1a8511204_trt(_2626_other.ptr());;
	return (_self_ == _2713_trt);
}



inline jule::Bool _1e55b07c7_is_builtin(_1a5e34531_Trait* _self_) {
	return ((*_self_)._field_token == nullptr);
}



inline jule::Ptr<_1a5b2eeb8_Fn> _1a5de9caa_find_method(_1a5e34531_Trait* _self_, jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1aa2d9e87:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_ident == _4034_ident)) {
					return _4121_f;
				};
			}
			_iter_next_1aa2d9e87:;
			++it;
			goto _iter_begin_1aa2d9e87;
		}
		_iter_end_1aa2d9e87:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5e34531_Trait _Src) {
	_Stream << _1e5553ccb_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a5dea2b6_auto_expr(_1a8306406_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a8306406_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a83067d0_to_str(_1a83065e3_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1a8306912_equals(jule::Ptr<_1a83065e3_Enum> _self_, jule::Ptr<_1a850cbe5_TypeKind> _3826_other) {
	jule::Ptr<_1a83065e3_Enum> _3913_enm = _1a85104de_enm(_3826_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1a8306406_EnumItem> _1a8306a44_find_item(_1a83065e3_Enum* _self_, jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1aa2dda6d:;
		if (it != expr.end()) {
			jule::Ptr<_1a8306406_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_ident == _4732_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1aa2dda6d:;
			++it;
			goto _iter_begin_1aa2dda6d;
		}
		_iter_end_1aa2dda6d:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a83065e3_Enum _Src) {
	_Stream << _1a83067d0_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a830701c_is_trait_impl(_1a8306d30_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1a830714e_is_struct_impl(_1a8306d30_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a8306d30_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8438e62_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a844085e_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a83da3db_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a83da5c8_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a83eb1ee_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8427a44_is_while_next(_1a83eb3db_WhileIter* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a83eb3db_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a83eb5c8_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8429282_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a842946e_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a844bb9a_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a844bd87_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a844c074_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a844c261_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a844c44d_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a842965b_is_generic_type_match(_1a844c63a_Match* _self_) {
	return (((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1a844c63a_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a842a10c_is_default(_1a844ca58_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a844ca58_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a844cc45_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a844ce32_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a844d11e_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a844d30b_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a843acee_find_package(_1a844d4e8_ScopeChecker* _self_, jule::Str _41335_ident) {
	return _1a846c24d_find_package((*_self_)._field_s.ptr(), _41335_ident);
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a842bd9a_select_package(_1a844d4e8_ScopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)> _42337_selector) {
	return _1a846c55b_select_package((*_self_)._field_s.ptr(), _42337_selector);
}



inline jule::Ptr<_1a8487246_Var> _1a8418958_find_var(_1a844d4e8_ScopeChecker* _self_, jule::Str _43431_ident, jule::Bool _43443_cpp_linked) {
	;
	jule::Ptr<_1a8487246_Var> _43717_v = _1a84d0c2e___find_var((*_self_)._field_table.ptr(), _43431_ident,_43443_cpp_linked,true);;
	if ((_43717_v != nullptr)) {
		return _43717_v;
	};
	jule::Ptr<_1a844d4e8_ScopeChecker> _44217_parent = (*_self_)._field_parent;;
	while ((_44217_parent != nullptr)) {
		{
			_43717_v=_1a84d0c2e___find_var(_44217_parent.get()._field_table.ptr(), _43431_ident,_43443_cpp_linked,true);
			if ((_43717_v != nullptr)) {
				return _43717_v;
			};
			_44217_parent=_44217_parent.get()._field_parent;
		}
	_iter_next_1aa2e7b98:;
	}
	_iter_end_1aa2e7b98:;;
	return _1a846c913_find_var((*_self_)._field_s.ptr(), _43431_ident,_43443_cpp_linked);
}



inline jule::Ptr<_1a850bead_TypeAlias> _1a844d806_find_type_alias(_1a844d4e8_ScopeChecker* _self_, jule::Str _46138_ident, jule::Bool _46150_cpp_linked) {
	;
	jule::Ptr<_1a850bead_TypeAlias> _46417_ta = _1a84d1180___find_type_alias((*_self_)._field_table.ptr(), _46138_ident,_46150_cpp_linked,true);;
	if ((_46417_ta != nullptr)) {
		return _46417_ta;
	};
	jule::Ptr<_1a844d4e8_ScopeChecker> _46917_parent = (*_self_)._field_parent;;
	while ((_46917_parent != nullptr)) {
		{
			_46417_ta=_1a84d1180___find_type_alias(_46917_parent.get()._field_table.ptr(), _46138_ident,_46150_cpp_linked,true);
			if ((_46417_ta != nullptr)) {
				return _46417_ta;
			};
			_46917_parent=_46917_parent.get()._field_parent;
		}
	_iter_next_1aa2ebc8a:;
	}
	_iter_end_1aa2ebc8a:;;
	return _1a846ccba_find_type_alias((*_self_)._field_s.ptr(), _46138_ident,_46150_cpp_linked);
}



inline jule::Ptr<_1b396462a_Struct> _1a844dbad_find_struct(_1a844d4e8_ScopeChecker* _self_, jule::Str _48634_ident, jule::Bool _48646_cpp_linked) {
	return _1a846d172_find_struct((*_self_)._field_s.ptr(), _48634_ident,_48646_cpp_linked);
}



inline jule::Ptr<_1a5b2eeb8_Fn> _1a844e065_find_fn(_1a844d4e8_ScopeChecker* _self_, jule::Str _49530_ident, jule::Bool _49542_cpp_linked) {
	return _1a846d529_find_fn((*_self_)._field_s.ptr(), _49530_ident,_49542_cpp_linked);
}



inline jule::Ptr<_1a5e34531_Trait> _1a844e373_find_trait(_1a844d4e8_ScopeChecker* _self_, jule::Str _50433_ident) {
	return _1a846d837_find_trait((*_self_)._field_s.ptr(), _50433_ident);
}



inline jule::Ptr<_1a83065e3_Enum> _1a844e681_find_enum(_1a844d4e8_ScopeChecker* _self_, jule::Str _51332_ident) {
	return _1a846db45_find_enum((*_self_)._field_s.ptr(), _51332_ident);
}



inline jule::Bool _1a844e9b1_is_unsafe(jule::Ptr<_1a844d4e8_ScopeChecker> _self_) {
	jule::Ptr<_1a844d4e8_ScopeChecker> _52117_scope = _self_;;
	_julec_label_iter:;
	if (_52117_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	};
	if ((_52117_scope.get()._field_parent != nullptr)) {
		_52117_scope=_52117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1a844ec25_is_root(_1a844d4e8_ScopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1a844ee01_stop(_1a844d4e8_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1a8450165_stopped(_1a844d4e8_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1a84503c9_is_deferred(jule::Ptr<_1a844d4e8_ScopeChecker> _self_) {
	jule::Ptr<_1a844d4e8_ScopeChecker> _55417_scope = _self_;;
	_julec_label_iter:;
	if (_55417_scope.get()._field_scope.get()._field_deferred) {
		return true;
	};
	if ((_55417_scope.get()._field_parent != nullptr)) {
		_55417_scope=_55417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1a844d4e8_ScopeChecker> _1a845063d_get_root(jule::Ptr<_1a844d4e8_ScopeChecker> _self_) {
	jule::Ptr<_1a844d4e8_ScopeChecker> _57217_root = _self_;;
	while (((_57217_root.get()._field_parent != nullptr) && (_57217_root.get()._field_owner == nullptr))) {
		{
			_57217_root=_57217_root.get()._field_parent;
		}
	_iter_next_1aa30a8ae:;
	}
	_iter_end_1aa30a8ae:;;
	return _57217_root;
}



inline jule::Ptr<_1a844d4e8_ScopeChecker> _1a84508a2_get_hard_root(jule::Ptr<_1a844d4e8_ScopeChecker> _self_) {
	jule::Ptr<_1a844d4e8_ScopeChecker> _58217_root = _self_;;
	while ((_58217_root.get()._field_parent != nullptr)) {
		{
			_58217_root=_58217_root.get()._field_parent;
		}
	_iter_next_1aa30be21:;
	}
	_iter_end_1aa30be21:;;
	return _58217_root;
}



inline jule::Ptr<_1a844bb9a_Label> _1a8450bb0_find_label(_1a844d4e8_ScopeChecker* _self_, jule::Str _59229_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1aa30d31d:;
		if (it != expr.end()) {
			jule::Any _59321_st = *it;
			{
				{
					auto &_match_expr{ _59321_st };
					
					if (_match_expr.type_is<jule::Ptr<_1a844bb9a_Label>>()) {
						_case_begin_1aa30da27:;
						{
							jule::Ptr<_1a844bb9a_Label> _59625_label = _59321_st.operator jule::Ptr<_1a844bb9a_Label>();;
							if ((_59625_label.get()._field_ident == _59229_ident)) {
								return _59625_label;
							};
						}
					}
					_match_end_1aa30d9c2:;
				};
			}
			_iter_next_1aa30d31d:;
			++it;
			goto _iter_begin_1aa30d31d;
		}
		_iter_end_1aa30d31d:;
	};
	return nullptr;
}



inline jule::Ptr<_1a844d11e_ScopeLabel> _1a8450ebd_find_label_scope(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Str _60836_ident) {
	jule::Ptr<_1a844d11e_ScopeLabel> _60917_label = _1a84512cb_find_label_all(_self_.ptr(), _60836_ident);;
	if (((_60917_label != nullptr) && (_60917_label.get()._field_scope == _self_))) {
		return _60917_label;
	};
	return nullptr;
}



inline jule::Ptr<_1a844d11e_ScopeLabel> _1a84512cb_find_label_all(_1a844d4e8_ScopeChecker* _self_, jule::Str _62033_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1aa31183d:;
		if (it != expr.end()) {
			jule::Ptr<_1a844d11e_ScopeLabel> _62121_lbl = *it;
			{
				if ((_62121_lbl.get()._field_label.get()._field_ident == _62033_ident)) {
					return _62121_lbl;
				};
			}
			_iter_next_1aa31183d:;
			++it;
			goto _iter_begin_1aa31183d;
		}
		_iter_end_1aa31183d:;
	};
	return nullptr;
}



inline jule::Bool _1a8451683_is_duplicated_ident(_1a844d4e8_ScopeChecker* _self_, jule::U64 _63238_itself, jule::Str _63255_ident) {
	jule::Ptr<_1a8487246_Var> _63313_v = _1a8418958_find_var(&(*_self_), _63255_ident,false);;
	if (((_63313_v != nullptr) && (static_cast<jule::U64>(_63313_v) != _63238_itself))) {
		if ((_63313_v.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_63313_v.get()._field_scope == (*_self_)._field_scope) || (!(_1a846e01e_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	jule::Ptr<_1a850bead_TypeAlias> _64113_ta = _1a844d806_find_type_alias(&(*_self_), _63255_ident,false);;
	if (((_64113_ta != nullptr) && (static_cast<jule::U64>(_64113_ta) != _63238_itself))) {
		if ((_64113_ta.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_64113_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1a846e01e_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));
	};
	return false;
}



inline void _1a8451908_check_var_decl(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110d161_VarDecl> _65238_decl) {
	jule::Ptr<_1a8487246_Var> _65317_v = _1a5b3a59a_build_var(_65238_decl);;
	_65317_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_65317_v);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_65317_v));;
	});;
	if (_1a8451683_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_65317_v)),_65317_v.get()._field_ident)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _65317_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_65317_v.get()._field_ident)}));
		_1a846e97b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1a844ee01_stop(_self_.ptr());
		return;;
	};
	_1a847ae71_check_var_decl(_self_.get()._field_s, _65317_v,jule::Trait<_1a85260a4_Lookup>(_self_, 0));
	if (((!(_1a8487862_is_type_inferred(_65317_v.ptr()))) && ((_65317_v.get()._field_kind == nullptr) || (_65317_v.get()._field_kind.get()._field_kind == nullptr)))) {
		return;;
	};
	_1a84801b7_check_type_var(_self_.get()._field_s, _65317_v,jule::Trait<_1a85260a4_Lookup>(_self_, 0));
}



inline void _1a8451b7d_check_type_alias_decl(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110e591_TypeAliasDecl> _67645_decl) {
	jule::Ptr<_1a850bead_TypeAlias> _67717_ta = _1a5b37e6b_build_type_alias(_67645_decl);;
	if (_1a8451683_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_67717_ta)),_67717_ta.get()._field_ident)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _67717_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_67717_ta.get()._field_ident)}));
		_1a846e97b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1a844ee01_stop(_self_.ptr());
		return;;
	};
	_1a8476da1_check_type_alias_decl(_self_.get()._field_s, _67717_ta,jule::Trait<_1a85260a4_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_67717_ta);;
	if ((_67717_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1a844ee01_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1a8438e62_Scope> _1a8451de2_get_child(_1a844d4e8_ScopeChecker* _self_) {
	return jule::new_ptr<_1a8438e62_Scope>(_1a8438e62_Scope((*_self_)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _1a84522aa_check_child_ssc(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110ca9a_ScopeTree>& _70040_tree, jule::Ptr<_1a8438e62_Scope>& _70063_s, jule::Ptr<_1a844d4e8_ScopeChecker>& _70079_ssc) {
	_70079_ssc.get()._field_parent=_self_;
	_1a845c859_check(_70079_ssc, _70040_tree,_70063_s);
}



inline jule::Ptr<_1a8438e62_Scope> _1a8452662_check_child_sc(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110ca9a_ScopeTree>& _70539_tree, jule::Ptr<_1a844d4e8_ScopeChecker>& _70562_ssc) {
	jule::Ptr<_1a8438e62_Scope> _70617_s = _1a8451de2_get_child(_self_.ptr());;
	_1a84522aa_check_child_ssc(_self_, _70539_tree,_70617_s,_70562_ssc);
	return _70617_s;
}



inline jule::Ptr<_1a8438e62_Scope> _1a8452970_check_child(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110ca9a_ScopeTree>& _71136_tree) {
	jule::Ptr<_1a844d4e8_ScopeChecker> _71217_ssc = _1a845cabd_new_child_checker(_self_);;
	return _1a8452662_check_child_sc(_self_, _71136_tree,_71217_ssc);
}



inline void _1a8452be5_check_anon_scope(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110ca9a_ScopeTree> _71640_tree) {
	jule::Ptr<_1a8438e62_Scope> _71717_s = _1a8452970_check_child(_self_, _71640_tree);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_71717_s));;
}



inline void _1a8453014_process_error_call(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>& _72143_m, jule::Ptr<_2110e7238_Token> _72174_err) {
	if (_1a84503c9_is_deferred(_self_)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _72174_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a844d4e8_ScopeChecker> _72617_root = _1a845063d_get_root(_self_);;
	if ((!(_72617_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _72174_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1a846e97b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_72143_m.get()._field_func=_72617_root.get()._field_owner;
}



inline void _1a8453289_check_expr(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_210e87caa_Expr> _73434_expr) {
	jule::Ptr<_1a84d53d7_Eval> _73517_eval = _1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0));;
	_73517_eval.get()._field_ignored=true;
	jule::Ptr<_1a84d3869_Data> _73717_d = _1a84eea94_eval_expr(_73517_eval, _73434_expr);;
	if ((_73717_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _73717_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>>()) {
			_case_begin_1aa3315a5:;
			{
				jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel> _74421_m = _73717_d.get()._field_model.operator jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>();;
				_1a8453014_process_error_call(_self_, _74421_m,_73434_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_73717_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2be60_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1a5b2a7bb_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1b3970a76_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1b397036c_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1b3970757_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1b397134b_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1b3971802_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a5b2c24b_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1b396b1c0_FnCallExprModel>>()) {
			_case_begin_1aa33161b:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_73717_d));;
			}
		}
		else {
			_case_begin_1aa3311a9:;
			{
				_1a846e65c_push_err(_self_.get()._field_s.ptr(), _73434_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa331154:;
	};
}



inline void _1a845350e_check_co_expr(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_211109aca_CoExpr> _76237_expr) {
	jule::Ptr<_1a84d53d7_Eval> _76317_eval = _1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0));;
	_76317_eval.get()._field_ignored=true;
	jule::Ptr<_1a84d3869_Data> _76517_d = _1a84eea94_eval_expr(_76317_eval, _76237_expr.get()._field_expr);;
	if ((_76517_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _76517_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1b396b1c0_FnCallExprModel>>()) {
			_case_begin_1aa337655:;
			{
				jule::Ptr<_1b396b1c0_FnCallExprModel> _77221_model = _76517_d.get()._field_model.operator jule::Ptr<_1b396b1c0_FnCallExprModel>();;
				if (_77221_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1a846e65c_push_err(_self_.get()._field_s.ptr(), _76237_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1a846e97b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_77221_model.get()._field_is_co=true;
				_1a84e6d11_check_fn_of_concurrent_call(_76317_eval.ptr(), _77221_model.get()._field_func,_76237_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_76517_d));;
			}
		}
		else {
			_case_begin_1aa3366dc:;
			{
				_1a846e65c_push_err(_self_.get()._field_s.ptr(), _76237_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1aa336687:;
	};
}



inline jule::Ptr<_1a844085e_If> _1a845381c_check_if(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110deca_If> _78632_i) {
	jule::Ptr<_1a8438e62_Scope> _78717_s = _1a8452970_check_child(_self_, _78632_i.get()._field_scope);;
	jule::Ptr<_1a84d3869_Data> _78917_d = _1a84eea94_eval_expr(_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0)), _78632_i.get()._field_expr);;
	if ((_78917_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a8512447_Prim> _79417_prim = _1a850eca2_prim(_78917_d.get()._field_kind.ptr());;
	if (((_79417_prim == nullptr) || (!(_1a8515192_is_bool(_79417_prim.ptr()))))) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _78632_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a844085e_If>(_1a844085e_If(jule::Any(_78917_d.get()._field_model),_78717_s));
}



inline jule::Ptr<_1a83da3db_Else> _1a8453b2a_check_else(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110e1b7_Else> _80634_e) {
	return jule::new_ptr<_1a83da3db_Else>(_1a83da3db_Else(_1a8452970_check_child(_self_, _80634_e.get()._field_scope)));
}



inline void _1a8453da0_check_conditional(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110e3a4_Conditional> _81241_conditional) {
	jule::Ptr<_1a83da5c8_Conditional> _81317_c = jule::new_ptr<_1a83da5c8_Conditional>(_1a83da5c8_Conditional());;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_81317_c));;
	_81317_c.get()._field_elifs=jule::Slice<jule::Ptr<_1a844085e_If>>::alloc(0LL,(_81241_conditional.get()._field_tail.len() + 1LL));
	_81317_c.get()._field_elifs = jule::alloc_for_append(_81317_c.get()._field_elifs,1);_81317_c.get()._field_elifs.__push(_1a845381c_check_if(_self_, _81241_conditional.get()._field_head));;
	{
		auto &expr = _81241_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1aa3435c8:;
		if (it != expr.end()) {
			jule::Ptr<_21110deca_If> _81921_elif = *it;
			{
				_81317_c.get()._field_elifs = jule::alloc_for_append(_81317_c.get()._field_elifs,1);_81317_c.get()._field_elifs.__push(_1a845381c_check_if(_self_, _81921_elif));;
			}
			_iter_next_1aa3435c8:;
			++it;
			goto _iter_begin_1aa3435c8;
		}
		_iter_end_1aa3435c8:;
	};
	if ((_81241_conditional.get()._field_default != nullptr)) {
		_81317_c.get()._field_default=_1a8453b2a_check_else(_self_, _81241_conditional.get()._field_default);
	};
}



inline void _1a8454312_check_iter_scope_ssc(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::U64 _82840_it, jule::Ptr<_21110ca9a_ScopeTree> _82857_tree, jule::Ptr<_1a8438e62_Scope>& _82880_s, jule::Ptr<_1a844d4e8_ScopeChecker> _82895_ssc) {
	_82895_ssc.get()._field_it=_82840_it;
	_1a84522aa_check_child_ssc(_self_, _82857_tree,_82880_s,_82895_ssc);
}



inline jule::Ptr<_1a8438e62_Scope> _1a8454763_check_iter_scope_sc(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::U64 _83339_it, jule::Ptr<_21110ca9a_ScopeTree> _83356_tree, jule::Ptr<_1a844d4e8_ScopeChecker> _83378_ssc) {
	jule::Ptr<_1a8438e62_Scope> _83417_scope = _1a8451de2_get_child(_self_.ptr());;
	_1a8454312_check_iter_scope_ssc(_self_, _83339_it,_83356_tree,_83417_scope,_83378_ssc);
	return _83417_scope;
}



inline jule::Ptr<_1a8438e62_Scope> _1a8454b1a_check_iter_scope(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::U64 _83936_it, jule::Ptr<_21110ca9a_ScopeTree>& _83954_tree) {
	jule::Ptr<_1a844d4e8_ScopeChecker> _84017_ssc = _1a845cabd_new_child_checker(_self_);;
	return _1a8454763_check_iter_scope_sc(_self_, _83936_it,_83954_tree,_84017_ssc);
}



inline void _1a8454d90_check_inf_iter(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110d53a_Iter>& _84439_it) {
	jule::Ptr<_1a83eb1ee_InfIter> _84517_kind = jule::new_ptr<_1a83eb1ee_InfIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_84517_kind));;
	_84517_kind.get()._field_scope=_1a8454b1a_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_84517_kind)),_84439_it.get()._field_scope);
}



inline void _1a8455115_check_while_iter(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110d53a_Iter>& _85041_it) {
	jule::Ptr<_21110d727_WhileKind> _85117_wh = _85041_it.get()._field_kind.operator jule::Ptr<_21110d727_WhileKind>();;
	if (((_85117_wh.get()._field_expr == nullptr) && (_85117_wh.get()._field_next == nullptr))) {
		_1a8454d90_check_inf_iter(_self_, _85041_it);
		return;;
	};
	jule::Ptr<_1a83eb3db_WhileIter> _85717_kind = jule::new_ptr<_1a83eb3db_WhileIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_85717_kind));;
	_85717_kind.get()._field_scope=_1a8454b1a_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_85717_kind)),_85041_it.get()._field_scope);
	if ((_85117_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1a84d3869_Data> _86221_d = _1a84eea94_eval_expr(_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0)), _85117_wh.get()._field_expr);;
		if ((_86221_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a8512447_Prim> _86717_prim = _1a850eca2_prim(_86221_d.get()._field_kind.ptr());;
		if ((_86717_prim == nullptr)) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _85041_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a8515192_is_bool(_86717_prim.ptr())))) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _85041_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_85717_kind.get()._field_expr=jule::Any(_86221_d.get()._field_model);
	};
	if (_21109cd37_is_while_next(_85117_wh.ptr())) {
		if ((!(_1a841e640_is_valid_ast_st_for_next_st(_85117_wh.get()._field_next)))) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _85117_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _88717_n = _self_.get()._field_scope.get()._field_stmts.len();;
		_1a845b605_check_node(_self_, _85117_wh.get()._field_next);
		if ((_88717_n < _self_.get()._field_scope.get()._field_stmts.len())) {
			jule::Any _89025_st = _self_.get()._field_scope.get()._field_stmts[_88717_n];;
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_88717_n);
			if ((!(_1a84266be_is_valid_st_for_next_st(_89025_st)))) {
				_1a846e65c_push_err(_self_.get()._field_s.ptr(), _85117_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_85717_kind.get()._field_next=jule::Any(_89025_st);
		};
	};
}



inline void _1a845538a_check_range_iter(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110d53a_Iter>& _90141_it) {
	jule::Ptr<_21110d914_RangeKind> _90217_rang = _90141_it.get()._field_kind.operator jule::Ptr<_21110d914_RangeKind>();;
	jule::Ptr<_1a84d3869_Data> _90417_d = _1a84eea94_eval_expr(_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0)), _90217_rang.get()._field_expr);;
	if ((_90417_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a83eb5c8_RangeIter> _90917_kind = jule::new_ptr<_1a83eb5c8_RangeIter>(_1a83eb5c8_RangeIter(_90417_d,jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a8487246_Var>(),jule::Ptr<_1a8487246_Var>()));;
	_1a84c99d6_RangeChecker _91317_rc = _1a84c99d6_RangeChecker(_self_,_90217_rang,_90917_kind,_90417_d);;
	jule::Bool _91913_ok = _1a84cb334_check(&_91317_rc);;
	if ((!(_91913_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_90917_kind));;
	jule::Ptr<_1a844d4e8_ScopeChecker> _92617_ssc = _1a845cabd_new_child_checker(_self_);;
	jule::Ptr<_1a8438e62_Scope> _92717_scope = _1a8451de2_get_child(_self_.ptr());;
	if ((_90917_kind.get()._field_key_a != nullptr)) {
		if (((!(_1a846e01e_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a8451683_is_duplicated_ident(_self_.ptr(), 0LLU,_90917_kind.get()._field_key_a.get()._field_ident))) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _90917_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_90917_kind.get()._field_key_a.get()._field_ident)}));
			_1a846e97b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_90917_kind.get()._field_key_a.get()._field_scope=_92717_scope;
		_92617_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92617_ssc.get()._field_table.get()._field_vars,1);_92617_ssc.get()._field_table.get()._field_vars.__push(_90917_kind.get()._field_key_a);;
	};
	if ((_90917_kind.get()._field_key_b != nullptr)) {
		if (((!(_1a846e01e_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a8451683_is_duplicated_ident(_self_.ptr(), 0LLU,_90917_kind.get()._field_key_b.get()._field_ident))) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _90917_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_90917_kind.get()._field_key_b.get()._field_ident)}));
			_1a846e97b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_90917_kind.get()._field_key_b.get()._field_scope=_92717_scope;
		_92617_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92617_ssc.get()._field_table.get()._field_vars,1);_92617_ssc.get()._field_table.get()._field_vars.__push(_90917_kind.get()._field_key_b);;
	};
	_1a8454312_check_iter_scope_ssc(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_90917_kind)),_90141_it.get()._field_scope,_92717_scope,_92617_ssc);
	_90917_kind.get()._field_scope=_92717_scope;
}



inline void _1a8455610_check_iter(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110d53a_Iter> _95134_it) {
	if (_211080842_is_inf(_95134_it.ptr())) {
		_1a8454d90_check_inf_iter(_self_, _95134_it);
		return;;
	};
	{
		auto &_match_expr{ _95134_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21110d727_WhileKind>>()) {
			_case_begin_1aa36387e:;
			{
				_1a8455115_check_while_iter(_self_, _95134_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110d914_RangeKind>>()) {
			_case_begin_1aa363cbe:;
			{
				_1a845538a_check_range_iter(_self_, _95134_it);
			}
		}
		else {
			_case_begin_1aa363494:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1aa36343e:;
	};
}



inline jule::Bool _1a845591d_check_valid_cont_label(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::U64 _96742_it) {
	jule::Ptr<_1a844d4e8_ScopeChecker> _96817_scope = _self_;;
	_julec_label_iter:;
	if ((_96817_scope.get()._field_it == _96742_it)) {
		return true;
	};
	if ((_96817_scope.get()._field_parent != nullptr)) {
		_96817_scope=_96817_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1a8455c70_check_valid_break_label(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::U64 _98343_ptr) {
	jule::Ptr<_1a844d4e8_ScopeChecker> _98417_scope = _self_;;
	_julec_label_iter:;
	if ((_98417_scope.get()._field_it == _98343_ptr)) {
		return true;
	};
	if ((_98417_scope.get()._field_cse != 0LLU)) {
		jule::U64 _99217_mtch = static_cast<jule::U64>(((_1a844ca58_Case*)(_98417_scope.get()._field_cse))->_field_owner);;
		if ((_99217_mtch == _98343_ptr)) {
			return true;
		};
	};
	if ((_98417_scope.get()._field_parent != nullptr)) {
		_98417_scope=_98417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1a8429282_ContSt> _1a845606c_check_cont_valid_scope(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110dcdd_ContSt> _100642_c) {
	if (_1a84503c9_is_deferred(_self_)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _100642_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_100642_c.get()._field_label != nullptr)) {
		return jule::new_ptr<_1a8429282_ContSt>();
	};
	jule::Ptr<_1a844d4e8_ScopeChecker> _101617_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_101617_scope.get()._field_it == 0LLU) && (_101617_scope.get()._field_parent != nullptr)) && (_101617_scope.get()._field_owner == nullptr))) {
			_case_begin_1aa36bb73:;
			{
				_101617_scope=_101617_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_101617_scope.get()._field_it != 0LLU)) {
			_case_begin_1aa36bbea:;
			{
				return jule::new_ptr<_1a8429282_ContSt>(_1a8429282_ContSt(_101617_scope.get()._field_it));
			}
		}
		_match_end_1aa36bac9:;
	};
	_1a846e65c_push_err(_self_.get()._field_s.ptr(), _100642_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1a84562e2_check_cont(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110dcdd_ContSt> _103030_c) {
	jule::Ptr<_1a8429282_ContSt> _103117_cont = _1a845606c_check_cont_valid_scope(_self_, _103030_c);;
	if ((_103117_cont == nullptr)) {
		return;;
	};
	if ((_103030_c.get()._field_label != nullptr)) {
		jule::Ptr<_1a844d11e_ScopeLabel> _103721_label = _1a83eb8b4_find_label_parent(_103030_c.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
		if ((_103721_label == nullptr)) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _103030_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_103030_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		_103721_label.get()._field_used=true;
		if (((_103721_label.get()._field_pos + 1LL) >= _103721_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _103030_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_103030_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		jule::I64 _105017_i = (_103721_label.get()._field_pos + 1LL);;
		if ((_105017_i >= _103721_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _103030_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _105425_st = _103721_label.get()._field_scope.get()._field_scope.get()._field_stmts[_105017_i];;
			{
				auto &_match_expr{ _105425_st };
				
				if (_match_expr.type_is<jule::Ptr<_1a83eb1ee_InfIter>>()) {
					_case_begin_1aa374dce:;
					{
						_103117_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105425_st.operator jule::Ptr<_1a83eb1ee_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a83eb5c8_RangeIter>>()) {
					_case_begin_1aa375ab1:;
					{
						_103117_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105425_st.operator jule::Ptr<_1a83eb5c8_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a83eb3db_WhileIter>>()) {
					_case_begin_1aa375b27:;
					{
						_103117_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105425_st.operator jule::Ptr<_1a83eb3db_WhileIter>()));
					}
				}
				else {
					_case_begin_1aa375a06:;
					{
						_1a846e65c_push_err(_self_.get()._field_s.ptr(), _103030_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_103030_c.get()._field_label.get()._field_kind)}));
					}
				}
				_match_end_1aa3759a1:;
			};
		};
	};
	if ((_103117_cont.get()._field_it != 0LLU)) {
		if ((!(_1a845591d_check_valid_cont_label(_self_, _103117_cont.get()._field_it)))) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _103030_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_103030_c.get()._field_label.get()._field_kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_103117_cont));;
}



inline void _1a8456567_check_label(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110c10a_LabelSt> _107735_l) {
	if ((_1a8450bb0_find_label(_self_.ptr(), _107735_l.get()._field_ident) != nullptr)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _107735_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_107735_l.get()._field_ident)}));
		return;;
	};
	jule::Ptr<_1a844bb9a_Label> _108317_label = jule::new_ptr<_1a844bb9a_Label>(_1a844bb9a_Label(_107735_l.get()._field_ident));;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_108317_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1a844d11e_ScopeLabel>>({jule::new_ptr<_1a844d11e_ScopeLabel>(_1a844d11e_ScopeLabel(_107735_l.get()._field_token,_108317_label,static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL)),_self_,jule::Bool()))}));
}



inline void _1a84567dc_push_goto(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110c2e7_GotoSt> _109633_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a844bd87_GotoSt>(_1a844bd87_GotoSt(_109633_gt.get()._field_label.get()._field_kind))));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1a844d30b_ScopeGoto>>({jule::new_ptr<_1a844d30b_ScopeGoto>(_1a844d30b_ScopeGoto(_109633_gt,_self_,static_cast<jule::I64>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL))))}));
}



inline void _1a8456a62_check_postfix(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110c8ad_AssignSt> _110837_a) {
	if ((_110837_a.get()._field_left.len() > 1LL)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _110837_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_210e87caa_Expr> _111417_expr = _110837_a.get()._field_left[0LL].get()._field_expr;;
	jule::Ptr<_1a84d3869_Data> _111517_d = _1a84eea94_eval_expr(_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0)), _111417_expr);;
	if ((_111517_d == nullptr)) {
		return;;
	};
	_1a841dd9d_check_assign(_self_.get()._field_s,_111517_d,nullptr,_110837_a.get()._field_setter);
	if ((_1a851027a_ptr(_111517_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a8518eba_Ptr> _112321_ptr = _1a851027a_ptr(_111517_d.get()._field_kind.ptr());;
		if (_1a851998d_is_unsafe(_112321_ptr.ptr())) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _110837_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_110837_a.get()._field_setter.get()._field_kind),jule::Any(_1a850d09c_to_str(_111517_d.get()._field_kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1a850eca2_prim(_111517_d.get()._field_kind.ptr()) == nullptr) || (!(_1a844b7c1_is_num(_1a850eca2_prim(_111517_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _110837_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_110837_a.get()._field_setter.get()._field_kind),jule::Any(_1a850d09c_to_str(_111517_d.get()._field_kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a844c074_Postfix>(_1a844c074_Postfix(jule::Any(_111517_d.get()._field_model),_110837_a.get()._field_setter.get()._field_kind))));;
}



inline jule::Bool _1a8456d70_is_new_assign_ident(_1a844d4e8_ScopeChecker* _self_, jule::Str _114138_ident) {
	if ((_2110e9988_is_ignore_ident(_114138_ident) || _114138_ident.empty())) {
		return false;
	};
	return (_1a84d1537_def_by_ident((*_self_)._field_table.ptr(), _114138_ident,false) == nullptr);
}



inline jule::Bool _1a8457315_check_structure_assign_op(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_1b39672a9_StructIns>& _114950_s, jule::Ptr<_21110c8ad_AssignSt>& _114970_a, jule::Ptr<_1a84d3869_Data>& _114989_r) {
	jule::Ptr<_1a5b33164_FnIns> _115217_overload = nullptr;;
	{
		auto &_match_expr{ _114970_a.get()._field_setter.get()._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1aa38bb82:;
			{
				_115217_overload=_114950_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1aa38caa6:;
			{
				_115217_overload=_114950_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1aa38cb1c:;
			{
				_115217_overload=_114950_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1aa38cb83:;
			{
				_115217_overload=_114950_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1aa38b896:;
			{
				_115217_overload=_114950_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1aa38b90c:;
			{
				_115217_overload=_114950_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1aa38b973:;
			{
				_115217_overload=_114950_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1aa38b9d9:;
			{
				_115217_overload=_114950_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1aa38cd81:;
			{
				_115217_overload=_114950_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1aa38cde7:;
			{
				_115217_overload=_114950_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1aa38b3e0:;
			{
				_1a846e65c_push_err(_self_.get()._field_s.ptr(), _114970_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_114970_a.get()._field_setter.get()._field_kind),jule::Any(_1b3967661_to_str(_114950_s.ptr()))}));
				return false;
			}
		}
		_match_end_1aa38b81e:;
	};
	if ((_115217_overload == nullptr)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _114970_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_114970_a.get()._field_setter.get()._field_kind),jule::Any(_1b3967661_to_str(_114950_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1a5b322c8_ParamIns> _118417_p = _115217_overload.get()._field_params[1LL];;
	return _1a84748b5_check_assign_type(_self_.get()._field_s, _118417_p.get()._field_decl.get()._field_reference,_118417_p.get()._field_kind,_114989_r,_114970_a.get()._field_setter);
}



inline void _1a8457579_check_single_assign(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110c8ad_AssignSt>& _118844_a) {
	jule::Ptr<_1a84d3869_Data> _118917_l = nullptr;;
	if ((!(_2110e9988_is_ignore_ident(_118844_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_210e87caa_Expr> _119221_expr = _118844_a.get()._field_left[0LL].get()._field_expr;;
		_118917_l=_1a84eea94_eval_expr(_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0)), _119221_expr);
		if ((_118917_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a84d53d7_Eval> _119917_eval = nullptr;;
	if ((_118917_l != nullptr)) {
		_119917_eval=_1a84740ac_evalp(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0),_118917_l.get()._field_kind);
	} else {
		_119917_eval=_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0));
	};
	_119917_eval.get()._field_unsafety=_1a844e9b1_is_unsafe(_self_);
	jule::Ptr<_1a84d3869_Data> _120617_r = _1a84eea94_eval_expr(_119917_eval, _118844_a.get()._field_right);;
	if ((_120617_r == nullptr)) {
		return;;
	};
	if ((_118917_l == nullptr)) {
		if (_1a850dd28_void(_120617_r.get()._field_kind.ptr())) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _118844_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_120617_r));;
		return;;
	};
	if ((!(_1a841dd9d_check_assign(_self_.get()._field_s,_118917_l,_120617_r,_118844_a.get()._field_setter)))) {
		return;;
	};
	if ((_1a85116cc_tup(_120617_r.get()._field_kind.ptr()) != nullptr)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _118844_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b3968e15_OperandExprModel> _122817_lm = jule::new_ptr<_1b3968e15_OperandExprModel>(_1b3968e15_OperandExprModel(_118917_l.get()._field_kind,jule::Any(_118917_l.get()._field_model)));;
	jule::Ptr<_1b3968e15_OperandExprModel> _123217_rm = jule::new_ptr<_1b3968e15_OperandExprModel>(_1b3968e15_OperandExprModel(_120617_r.get()._field_kind,jule::Any(_120617_r.get()._field_model)));;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a844c261_Assign>(_1a844c261_Assign(_122817_lm,_123217_rm,_118844_a.get()._field_setter))));;
	if ((_118844_a.get()._field_setter.get()._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1b39672a9_StructIns> _123921_strct = _1a8510e90_strct(_118917_l.get()._field_kind.ptr());;
		if ((_123921_strct != nullptr)) {
			_1a8457315_check_structure_assign_op(_self_, _123921_strct,_118844_a,_120617_r);
			return;;
		};
		_118844_a.get()._field_setter.get()._field_kind=_118844_a.get()._field_setter.get()._field_kind.slice(0LL,(_118844_a.get()._field_setter.get()._field_kind.len() - 1LL));
		_1a8501ca5_BinaryEval _124621_solver = static__1a850269b_new(_119917_eval,_118844_a.get()._field_setter);;
		_120617_r=_1a850712e_solve_explicit(&_124621_solver, _118917_l,_120617_r);
		if ((_120617_r == nullptr)) {
			return;;
		};
		_118844_a.get()._field_setter.get()._field_kind+=jule::Str("=", 1);
		return;;
	};
	_1a84baed3_AssignTypeChecker _125517_checker = _1a84baed3_AssignTypeChecker(_self_.get()._field_s,_118917_l.get()._field_kind,_120617_r,_118844_a.get()._field_setter);;
	if (_1a84bc15a_check(&_125517_checker)) {
		_123217_rm.get()._field_model=jule::Any(_120617_r.get()._field_model);
		_122817_lm.get()._field_model=jule::Any(_118917_l.get()._field_model);
	};
}



inline void _1a8457aeb___process_end_part_of_multi_assign(_1a844d4e8_ScopeChecker* _self_, jule::Ptr<_1a844c44d_MultiAssign> _126757_st, jule::Ptr<_21110c8ad_AssignSt> _126813_a, jule::Ptr<_21110c6c1_AssignLeft> _126831_lexpr, jule::Ptr<_1a84d3869_Data> _126855_l, jule::Ptr<_1a84d3869_Data> _126869_r) {
	if (_2110e9988_is_ignore_ident(_126831_lexpr.get()._field_ident)) {
		if (_1a850dd28_void(_126869_r.get()._field_kind.ptr())) {
			_1a846e65c_push_err((*_self_)._field_s.ptr(), _126813_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_126757_st.get()._field_l = jule::alloc_for_append(_126757_st.get()._field_l,1);_126757_st.get()._field_l.__push(nullptr);;
		return;;
	};
	if ((_126813_a.get()._field_declarative && _1a8456d70_is_new_assign_ident(&(*_self_), _126831_lexpr.get()._field_ident))) {
		if (_1a8451683_is_duplicated_ident(&(*_self_), 0LLU,_126831_lexpr.get()._field_ident)) {
			_1a846e65c_push_err((*_self_)._field_s.ptr(), _126831_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_126831_lexpr.get()._field_ident)}));
			_1a846e97b_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1a844ee01_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1a8487246_Var> _128721_v = jule::new_ptr<_1a8487246_Var>(_1a8487246_Var((*_self_)._field_scope,_126831_lexpr.get()._field_token,_126831_lexpr.get()._field_ident,jule::Bool(),jule::Bool(),_126831_lexpr.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_126831_lexpr.get()._field_reference,jule::Ptr<_1a8511a84_TypeSymbol>(),jule::new_ptr<_1a84d48e2_Value>(_1a84d48e2_Value(_126813_a.get()._field_right,_126869_r)),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Slice<jule::Ptr<_210eb33e0_Directive>>(),jule::Ptr<_1a8486278_IterRelation>(),jule::Slice<jule::Ptr<_1a8487246_Var>>()));;
		_1a847ed98_check_var((*_self_)._field_s, _128721_v);
		_126757_st.get()._field_l = jule::alloc_for_append(_126757_st.get()._field_l,1);_126757_st.get()._field_l.__push(jule::Any(_128721_v));;
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_128721_v);;
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(jule::Any(_128721_v));;
		return;;
	};
	if ((_126831_lexpr.get()._field_mutable || _126831_lexpr.get()._field_reference)) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _126831_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_126831_lexpr.get()._field_ident)}));
		_1a846e97b_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1a841dd9d_check_assign((*_self_)._field_s,_126855_l,_126869_r,_126813_a.get()._field_setter)))) {
		return;;
	};
	;
	_1a84766db_check_validity_for_init_expr((*_self_)._field_s, _126855_l.get()._field_mutable,false,_126855_l.get()._field_kind,_126869_r,_126813_a.get()._field_setter);
	_1a84baed3_AssignTypeChecker _132217_checker = _1a84baed3_AssignTypeChecker((*_self_)._field_s,_126855_l.get()._field_kind,_126869_r,_126813_a.get()._field_setter);;
	_1a84bc15a_check(&_132217_checker);
	_126757_st.get()._field_l = jule::alloc_for_append(_126757_st.get()._field_l,1);_126757_st.get()._field_l.__push(jule::Any(_126855_l.get()._field_model));;
}



inline void _1a8457d3d_check_ret_multi_assign(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110c8ad_AssignSt>& _133347_a) {
	jule::Ptr<_1a84d3869_Data> _133417_rd = _1a84eea94_eval_expr(_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0)), _133347_a.get()._field_right);;
	if ((_133417_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a84d3869_Data>> _133917_r = _1a841a5b4_get_datas_from_tuple_data(_133417_rd);;
	{
		
		if ((_133347_a.get()._field_left.len() > _133917_r.len())) {
			_case_begin_1aa3b3093:;
			{
				_1a846e65c_push_err(_self_.get()._field_s.ptr(), _133347_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_133347_a.get()._field_left.len() < _133917_r.len())) {
			_case_begin_1aa3b3109:;
			{
				_1a846e65c_push_err(_self_.get()._field_s.ptr(), _133347_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1aa3b300a:;
	};
	jule::Ptr<_1a844c44d_MultiAssign> _135017_st = jule::new_ptr<_1a844c44d_MultiAssign>(_1a844c44d_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_133417_rd.get()._field_model)));;
	if ((_1a85116cc_tup(_133417_rd.get()._field_kind.ptr()) == nullptr)) {
		_135017_st.get()._field_r=jule::Any(jule::new_ptr<_1b396ee71_TupleExprModel>(_1b396ee71_TupleExprModel(_133917_r)));
	};
	{
		auto &expr = _133347_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1aa3b6250:;
		if (it != expr.end()) {
			jule::I64 _135813_i = it - expr.begin();
			{
				jule::Ptr<_21110c6c1_AssignLeft> _135921_lexpr = _133347_a.get()._field_left[_135813_i];;
				jule::Ptr<_1a84d3869_Data> _136021_l = nullptr;;
				if (((!(_2110e9988_is_ignore_ident(_135921_lexpr.get()._field_ident))) && ((!(_133347_a.get()._field_declarative)) || (!(_1a8456d70_is_new_assign_ident(_self_.ptr(), _135921_lexpr.get()._field_ident)))))) {
					_136021_l=_1a84eea94_eval_expr(_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0)), _135921_lexpr.get()._field_expr);
					if ((_136021_l == nullptr)) {
						goto _iter_next_1aa3b6250;
					};
				};
				_1a8457aeb___process_end_part_of_multi_assign(_self_.ptr(), _135017_st,_133347_a,_135921_lexpr,_136021_l,_133917_r[_135813_i]);
			}
			_iter_next_1aa3b6250:;
			++it;
			_135813_i++;
			goto _iter_begin_1aa3b6250;
		}
		_iter_end_1aa3b6250:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_135017_st));;
}



inline void _1a84580b3_check_multi_assign(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110c8ad_AssignSt>& _137643_a) {
	{
		auto &_match_expr{ _137643_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_21110ab31_FnCallExpr>>()) {
			_case_begin_1aa3ba441:;
			{
				_1a8457d3d_check_ret_multi_assign(_self_, _137643_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2111098dd_UnsafeExpr>>()) {
			_case_begin_1aa3ba4b8:;
			{
				{
					auto &_match_expr{ _137643_a.get()._field_right.get()._field_kind.operator jule::Ptr<_2111098dd_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_21110ab31_FnCallExpr>>()) {
						_case_begin_1aa3bb882:;
						{
							_1a8457d3d_check_ret_multi_assign(_self_, _137643_a);
							return;;
						}
					}
					_match_end_1aa3bb82c:;
				};
			}
		}
		_match_end_1aa3ba397:;
	};
	jule::Slice<jule::Any> _138917_right = _1a841b1ec_get_expr_models(_137643_a.get()._field_right.get()._field_kind);;
	{
		
		if ((_137643_a.get()._field_left.len() > _138917_right.len())) {
			_case_begin_1aa3bc553:;
			{
				_1a846e65c_push_err(_self_.get()._field_s.ptr(), _137643_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_137643_a.get()._field_left.len() < _138917_right.len())) {
			_case_begin_1aa3bc5ca:;
			{
				_1a846e65c_push_err(_self_.get()._field_s.ptr(), _137643_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1aa3bc476:;
	};
	jule::Ptr<_1b396ee71_TupleExprModel> _140017_right_tuple = jule::new_ptr<_1b396ee71_TupleExprModel>(_1b396ee71_TupleExprModel());;
	jule::Ptr<_1a844c44d_MultiAssign> _140217_st = jule::new_ptr<_1a844c44d_MultiAssign>(_1a844c44d_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_140017_right_tuple)));;
	{
		auto &expr = _137643_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1aa3c0017:;
		if (it != expr.end()) {
			jule::I64 _140613_i = it - expr.begin();
			{
				jule::Ptr<_21110c6c1_AssignLeft> _140721_lexpr = _137643_a.get()._field_left[_140613_i];;
				jule::Ptr<_1a84d3869_Data> _140821_l = nullptr;;
				if (((!(_2110e9988_is_ignore_ident(_140721_lexpr.get()._field_ident))) && ((!(_137643_a.get()._field_declarative)) || (!(_1a8456d70_is_new_assign_ident(_self_.ptr(), _140721_lexpr.get()._field_ident)))))) {
					_140821_l=_1a84eea94_eval_expr(_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0)), _140721_lexpr.get()._field_expr);
					if ((_140821_l == nullptr)) {
						goto _iter_next_1aa3c0017;
					};
				};
				jule::Ptr<_210e87caa_Expr> _141821_expr = jule::new_ptr<_210e87caa_Expr>(_210e87caa_Expr(_137643_a.get()._field_right.get()._field_token,jule::Ptr<_2110e7238_Token>(),jule::Bool(),jule::Any(_138917_right[_140613_i])));;
				jule::Ptr<_1a84d53d7_Eval> _142221_eval = nullptr;;
				if ((_140821_l != nullptr)) {
					_142221_eval=_1a84740ac_evalp(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0),_140821_l.get()._field_kind);
				} else {
					_142221_eval=_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0));
				};
				jule::Ptr<_1a84d3869_Data> _142821_r = _1a84eea94_eval_expr(_142221_eval, _141821_expr);;
				if ((_142821_r == nullptr)) {
					goto _iter_next_1aa3c0017;
				};
				_140017_right_tuple.get()._field_datas = jule::alloc_for_append(_140017_right_tuple.get()._field_datas,1);_140017_right_tuple.get()._field_datas.__push(_142821_r);;
				_1a8457aeb___process_end_part_of_multi_assign(_self_.ptr(), _140217_st,_137643_a,_140721_lexpr,_140821_l,_142821_r);
			}
			_iter_next_1aa3c0017:;
			++it;
			_140613_i++;
			goto _iter_begin_1aa3c0017;
		}
		_iter_end_1aa3c0017:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_140217_st));;
}



inline void _1a8458338_check_assign_st(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110c8ad_AssignSt> _144139_a) {
	{
		
		if (_2110eb99b_is_postfix_op(_144139_a.get()._field_setter.get()._field_kind)) {
			_case_begin_1aa3cba5c:;
			{
				_1a8456a62_check_postfix(_self_, _144139_a);
			}
		}
		else if (((_144139_a.get()._field_left.len() == 1LL) && (!(_144139_a.get()._field_declarative)))) {
			_case_begin_1aa3cb74e:;
			{
				_1a8457579_check_single_assign(_self_, _144139_a);
			}
		}
		else {
			_case_begin_1aa3cb6d8:;
			{
				_1a84580b3_check_multi_assign(_self_, _144139_a);
			}
		}
		_match_end_1aa3cb61c:;
	};
}



inline jule::Ptr<_1a8438e62_Scope> _1a84586e0_check_case_scope(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_1a844ca58_Case>& _145237_c, jule::Ptr<_21110ca9a_ScopeTree>& _145252_tree) {
	jule::Ptr<_1a844d4e8_ScopeChecker> _145317_ssc = _1a845cabd_new_child_checker(_self_);;
	_145317_ssc.get()._field_cse=static_cast<jule::U64>(static_cast<jule::U64>(_145237_c));
	return _1a8452662_check_child_sc(_self_, _145252_tree,_145317_ssc);
}



inline jule::Ptr<_1a844ca58_Case> _1a8458bda_check_case(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_1a844c63a_Match> _145834_m, jule::I64 _145845_i, jule::Ptr<_21110e77d_Case> _145857_c, jule::Ptr<_1a84d3869_Data> _145887_expr) {
	jule::Ptr<_1a844ca58_Case> _145917__case = _145834_m.get()._field_cases[_145845_i];;
	_145917__case.get()._field_exprs=jule::Slice<jule::Ptr<_1a84d3869_Data>>::alloc(0LL,_145857_c.get()._field_exprs.len());
	jule::Bool _146117_generic_matched = false;;
	jule::Ptr<_1a84d53d7_Eval> _146217_eval = _1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0));;
	{
		auto &expr = _145857_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aa3d2a96:;
		if (it != expr.end()) {
			jule::Ptr<_210e87caa_Expr> _146321_e = *it;
			{
				jule::Ptr<_1a84d3869_Data> _146421_d = _1a84ee478_eval_expr_kind(_146217_eval, jule::Any(_146321_e.get()._field_kind));;
				if ((_146421_d == nullptr)) {
					goto _iter_next_1aa3d2a96;
				};
				if (_145834_m.get()._field_type_match) {
					_145917__case.get()._field_exprs = jule::alloc_for_append(_145917__case.get()._field_exprs,1);_145917__case.get()._field_exprs.__push(_146421_d);;
					if ((_1a8419d33_count_match_type(_145834_m,_146421_d.get()._field_kind) > 1LL)) {
						_1a846e65c_push_err(_self_.get()._field_s.ptr(), _146321_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_146421_d.get()._field_kind.ptr()))}));
					};
					if (_145887_expr.get()._field_kind.get()._field_generic) {
						_146117_generic_matched=(_146117_generic_matched || _1a850d3aa_equals(_145887_expr.get()._field_kind, _146421_d.get()._field_kind));
					} else {
						jule::Ptr<_1a5e34531_Trait> _147625_trt = _1a8511204_trt(_145887_expr.get()._field_kind.ptr());;
						if ((_147625_trt != nullptr)) {
							_1a8474d5a_check_type_compatibility(_self_.get()._field_s, _145887_expr.get()._field_kind,_146421_d.get()._field_kind,_146321_e.get()._field_token);
						};
					};
					goto _iter_next_1aa3d2a96;
				};
				if (_146421_d.get()._field_decl) {
					_1a846e65c_push_err(_self_.get()._field_s.ptr(), _146321_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1a846e97b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1aa3d2a96;
				};
				_145917__case.get()._field_exprs = jule::alloc_for_append(_145917__case.get()._field_exprs,1);_145917__case.get()._field_exprs.__push(_146421_d);;
				_1a84baed3_AssignTypeChecker _149321_checker = _1a84baed3_AssignTypeChecker(_self_.get()._field_s,_145887_expr.get()._field_kind,_146421_d,_146321_e.get()._field_token);;
				_1a84bc15a_check(&_149321_checker);
			}
			_iter_next_1aa3d2a96:;
			++it;
			goto _iter_begin_1aa3d2a96;
		}
		_iter_end_1aa3d2a96:;
	};
	if ((((!(_145834_m.get()._field_type_match)) || (!(_145887_expr.get()._field_kind.get()._field_generic))) || _146117_generic_matched)) {
		_145917__case.get()._field_scope=_1a84586e0_check_case_scope(_self_, _145917__case,_145857_c.get()._field_scope);
	};
	return _145917__case;
}



inline void _1a84590a3_check_cases(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110e96a_MatchCase>& _150736_m, jule::Ptr<_1a844c63a_Match> _150755_rm, jule::Ptr<_1a84d3869_Data> _150771_expr) {
	_150755_rm.get()._field_cases=jule::Slice<jule::Ptr<_1a844ca58_Case>>::alloc(0LL,_150736_m.get()._field_cases.len());
	{
		auto &expr = _150736_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aa3dc595:;
		if (it != expr.end()) {
			jule::I64 _150913_i = it - expr.begin();
			{
				jule::Ptr<_1a844ca58_Case> _151021__case = jule::new_ptr<_1a844ca58_Case>(_1a844ca58_Case(_150755_rm,jule::Ptr<_1a8438e62_Scope>(),jule::Slice<jule::Ptr<_1a84d3869_Data>>(),jule::Ptr<_1a844ca58_Case>()));;
				if ((_150913_i > 0LL)) {
					_150755_rm.get()._field_cases[(_150913_i - 1LL)].get()._field_next=_151021__case;
				};
				_150755_rm.get()._field_cases = jule::alloc_for_append(_150755_rm.get()._field_cases,1);_150755_rm.get()._field_cases.__push(_151021__case);;
			}
			_iter_next_1aa3dc595:;
			++it;
			_150913_i++;
			goto _iter_begin_1aa3dc595;
		}
		_iter_end_1aa3dc595:;
	};
	if (((_150755_rm.get()._field_default != nullptr) && (_150736_m.get()._field_cases.len() > 0LL))) {
		_150755_rm.get()._field_cases[(_150755_rm.get()._field_cases.len() - 1LL)].get()._field_next=_150755_rm.get()._field_default;
	};
	{
		auto &expr = _150736_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aa3e00d1:;
		if (it != expr.end()) {
			jule::I64 _152314_i = it - expr.begin();
			jule::Ptr<_21110e77d_Case> _152321_c = *it;
			{
				_1a8458bda_check_case(_self_, _150755_rm,_152314_i,_152321_c,_150771_expr);
			}
			_iter_next_1aa3e00d1:;
			++it;
			_152314_i++;
			goto _iter_begin_1aa3e00d1;
		}
		_iter_end_1aa3e00d1:;
	};
}



inline jule::Ptr<_1a844ca58_Case> _1a845945a_check_default(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_1a844c63a_Match> _152837_m, jule::Ptr<_21110e1b7_Else> _152852_d) {
	jule::Ptr<_1a844ca58_Case> _152917_def = jule::new_ptr<_1a844ca58_Case>(_1a844ca58_Case(_152837_m,jule::Ptr<_1a8438e62_Scope>(),jule::Slice<jule::Ptr<_1a84d3869_Data>>(),jule::Ptr<_1a844ca58_Case>()));;
	_152917_def.get()._field_scope=_1a84586e0_check_case_scope(_self_, _152917_def,_152852_d.get()._field_scope);
	return _152917_def;
}



inline void _1a84596d0_check_comptime_panic(_1a844d4e8_ScopeChecker* _self_, jule::Ptr<_1a8438e62_Scope>& _153640_s) {
	if ((_153640_s.get()._field_stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _154113_stmt = _153640_s.get()._field_stmts[0LL];;
	{
		auto &_match_expr{ _154113_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a84d3869_Data>>()) {
			_case_begin_1aa3e3b2e:;
			{
				jule::Ptr<_1a84d3869_Data> _154417_d = _154113_stmt.operator jule::Ptr<_1a84d3869_Data>();;
				{
					auto &_match_expr{ _154417_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1b397134b_BuiltinPanicCallExprModel>>()) {
						_case_begin_1aa3e48aa:;
						{
							jule::Ptr<_1b397134b_BuiltinPanicCallExprModel> _154721_m = _154417_d.get()._field_model.operator jule::Ptr<_1b397134b_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _154721_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1a83a871c_Const>>()) {
									_case_begin_1aa3e568b:;
									{
										jule::Ptr<_1a83a871c_Const> _155025_c = _154721_m.get()._field_expr.operator jule::Ptr<_1a83a871c_Const>();;
										if (_1a83ac567_is_str(_155025_c.ptr())) {
											_1a846e65c_push_err((*_self_)._field_s.ptr(), (*_self_)._field_called_from,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any(_1a83aa1be_read_str(_155025_c.ptr()))}));
										};
									}
								}
								_match_end_1aa3e5614:;
							};
						}
					}
					_match_end_1aa3e47cd:;
				};
			}
		}
		_match_end_1aa3e3ac9:;
	};
}



inline void _1a84599ee_push_type_match(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_1a844c63a_Match> _155939_tm, jule::Ptr<_21110e96a_MatchCase>& _155956_m) {
	if (_155939_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _155939_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1aa3e799b:;
			if (it != expr.end()) {
				jule::Ptr<_1a844ca58_Case> _156325_c = *it;
				{
					if ((_156325_c.get()._field_scope != nullptr)) {
						_1a84596d0_check_comptime_panic(_self_.ptr(), _156325_c.get()._field_scope);
						_155939_tm.get()._field_default=_156325_c;
						_155939_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1aa3e799b:;
				++it;
				goto _iter_begin_1aa3e799b;
			}
			_iter_end_1aa3e799b:;
		};
		if ((_155956_m.get()._field_default != nullptr)) {
			_155939_tm.get()._field_cases=nullptr;
			_155939_tm.get()._field_default=_1a845945a_check_default(_self_, _155939_tm,_155956_m.get()._field_default);
			if ((_155939_tm.get()._field_default != nullptr)) {
				_1a84596d0_check_comptime_panic(_self_.ptr(), _155939_tm.get()._field_default.get()._field_scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_155939_tm));;
}



inline void _1a8459c74_check_type_match(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110e96a_MatchCase>& _158341_m) {
	jule::Ptr<_1a84d3869_Data> _158417_d = _1a84ee786_eval(_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0)), _158341_m.get()._field_expr);;
	if ((_158417_d == nullptr)) {
		return;;
	};
	if (((!(_158417_d.get()._field_kind.get()._field_generic)) && (!((((_1a850eca2_prim(_158417_d.get()._field_kind.ptr()) != nullptr) && _1a851566a_is_any(_1a850eca2_prim(_158417_d.get()._field_kind.ptr()).ptr())) || (_1a8511204_trt(_158417_d.get()._field_kind.ptr()) != nullptr)))))) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _158341_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <trait> or <generic> typed expression", 68),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a844c63a_Match> _159517_tm = jule::new_ptr<_1a844c63a_Match>(_1a844c63a_Match(_158417_d,true,jule::Slice<jule::Ptr<_1a844ca58_Case>>(),jule::Ptr<_1a844ca58_Case>()));;
	if (((!(_159517_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_158341_m.get()._field_default != nullptr))) {
		_159517_tm.get()._field_default=_1a845945a_check_default(_self_, _159517_tm,_158341_m.get()._field_default);
	};
	_1a84590a3_check_cases(_self_, _158341_m,_159517_tm,_158417_d);
	_1a84599ee_push_type_match(_self_, _159517_tm,_158341_m);
}



inline void _1a8459ee9_check_common_match(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110e96a_MatchCase>& _160843_m) {
	jule::Ptr<_1a84d3869_Data> _160917_d = nullptr;;
	if ((_160843_m.get()._field_expr == nullptr)) {
		_160917_d=jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1a83a8b6d_new_bool(true)));
		_160917_d.get()._field_model=jule::Any(_160917_d.get()._field_constant);
	} else {
		_160917_d=_1a84eea94_eval_expr(_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0)), _160843_m.get()._field_expr);
		if ((_160917_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a844c63a_Match> _162317_mc = jule::new_ptr<_1a844c63a_Match>(_1a844c63a_Match(_160917_d,jule::Bool(),jule::Slice<jule::Ptr<_1a844ca58_Case>>(),jule::Ptr<_1a844ca58_Case>()));;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_162317_mc));;
	if ((_160843_m.get()._field_default != nullptr)) {
		_162317_mc.get()._field_default=_1a845945a_check_default(_self_, _162317_mc,_160843_m.get()._field_default);
	};
	_1a84590a3_check_cases(_self_, _160843_m,_162317_mc,_160917_d);
}



inline void _1a845a26e_check_match(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110e96a_MatchCase> _163535_m) {
	if (_163535_m.get()._field_type_match) {
		_1a8459c74_check_type_match(_self_, _163535_m);
		return;;
	};
	_1a8459ee9_check_common_match(_self_, _163535_m);
}



inline void _1a845a4e4_check_fall(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110c4d4_FallSt> _164330_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_stmts.len())) || _1a84503c9_is_deferred(_self_))) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _164330_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1a844ca58_Case* _165117__case = ((_1a844ca58_Case*)(_self_.get()._field_cse));;
	if ((_165117__case->_field_next == nullptr)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _164330_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1a846e97b_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a844cc45_FallSt>(_1a844cc45_FallSt(static_cast<jule::U64>(static_cast<jule::U64>(_165117__case->_field_next))))));;
}



inline jule::Ptr<_1a842946e_BreakSt> _1a845a802_check_break_with_label(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110db01_BreakSt> _166342_b) {
	jule::Ptr<_1a842946e_BreakSt> _166417_brk = _1a845ab10_check_plain_break(_self_, _166342_b);;
	if ((_166417_brk == nullptr)) {
		return nullptr;
	};
	_166417_brk.get()._field_it=0LLU;
	_166417_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1a844d11e_ScopeLabel> _167417_label = _1a83eb8b4_find_label_parent(_166342_b.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
	if ((_167417_label == nullptr)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _166342_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_166342_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	_167417_label.get()._field_used=true;
	if (((_167417_label.get()._field_pos + 1LL) >= _167417_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _166342_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166342_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	jule::I64 _168713_i = (_167417_label.get()._field_pos + 1LL);;
	if ((_168713_i >= _167417_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _166342_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166342_b.get()._field_label.get()._field_kind)}));
	} else {
		jule::Any _169121_st = _167417_label.get()._field_scope.get()._field_scope.get()._field_stmts[_168713_i];;
		{
			auto &_match_expr{ _169121_st };
			
			if (_match_expr.type_is<jule::Ptr<_1a83eb1ee_InfIter>>()) {
				_case_begin_1aa414743:;
				{
					_166417_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169121_st.operator jule::Ptr<_1a83eb1ee_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a83eb5c8_RangeIter>>()) {
				_case_begin_1aa415425:;
				{
					_166417_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169121_st.operator jule::Ptr<_1a83eb5c8_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a83eb3db_WhileIter>>()) {
				_case_begin_1aa41548b:;
				{
					_166417_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169121_st.operator jule::Ptr<_1a83eb3db_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a844c63a_Match>>()) {
				_case_begin_1aa415502:;
				{
					_166417_brk.get()._field_mtch=static_cast<jule::U64>(static_cast<jule::U64>(_169121_st.operator jule::Ptr<_1a844c63a_Match>()));
				}
			}
			else {
				_case_begin_1aa41536a:;
				{
					_1a846e65c_push_err(_self_.get()._field_s.ptr(), _166342_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166342_b.get()._field_label.get()._field_kind)}));
				}
			}
			_match_end_1aa415315:;
		};
	};
	if ((_166417_brk.get()._field_it != 0LLU)) {
		if ((!(_1a8455c70_check_valid_break_label(_self_, _166417_brk.get()._field_it)))) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _166342_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166342_b.get()._field_label.get()._field_kind)}));
		};
	};
	if ((_166417_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1a8455c70_check_valid_break_label(_self_, _166417_brk.get()._field_mtch)))) {
			_1a846e65c_push_err(_self_.get()._field_s.ptr(), _166342_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166342_b.get()._field_label.get()._field_kind)}));
		};
	};
	return _166417_brk;
}



inline jule::Ptr<_1a842946e_BreakSt> _1a845ab10_check_plain_break(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110db01_BreakSt> _172137_b) {
	if (_1a84503c9_is_deferred(_self_)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _172137_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a844d4e8_ScopeChecker> _172717_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_172717_scope.get()._field_it == 0LLU) && (_172717_scope.get()._field_cse == 0LLU)) && (_172717_scope.get()._field_parent != nullptr)) && (_172717_scope.get()._field_owner == nullptr))) {
			_case_begin_1aa41bb57:;
			{
				_172717_scope=_172717_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_172717_scope.get()._field_it != 0LLU)) {
			_case_begin_1aa41bbce:;
			{
				return jule::new_ptr<_1a842946e_BreakSt>(_1a842946e_BreakSt(_172717_scope.get()._field_it,jule::U64()));
			}
		}
		else if ((_172717_scope.get()._field_cse != 0LLU)) {
			_case_begin_1aa41bc56:;
			{
				return jule::new_ptr<_1a842946e_BreakSt>(_1a842946e_BreakSt(jule::U64(),static_cast<jule::U64>(static_cast<jule::U64>(((_1a844ca58_Case*)(_172717_scope.get()._field_cse))->_field_owner))));
			}
		}
		_match_end_1aa41ba7a:;
	};
	_1a846e65c_push_err(_self_.get()._field_s.ptr(), _172137_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1a845ad85_check_break(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110db01_BreakSt> _174331_b) {
	if ((_174331_b.get()._field_label != nullptr)) {
		jule::Ptr<_1a842946e_BreakSt> _174521_brk = _1a845a802_check_break_with_label(_self_, _174331_b);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_174521_brk));;
		return;;
	};
	jule::Ptr<_1a842946e_BreakSt> _175017_brk = _1a845ab10_check_plain_break(_self_, _174331_b);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_175017_brk));;
}



inline void _1a845b10a_check_ret(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110d34d_RetSt> _175433_r) {
	if (_1a84503c9_is_deferred(_self_)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _175433_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a844ce32_RetSt> _175917_rt = jule::new_ptr<_1a844ce32_RetSt>(_1a844ce32_RetSt(_1a845063d_get_root(_self_).get()._field_owner,jule::Slice<jule::Ptr<_1a8487246_Var>>(),jule::Any()));;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_175917_rt));;
	jule::Ptr<_1a84cbac6_RetTypeChecker> _176417_rtc = jule::new_ptr<_1a84cbac6_RetTypeChecker>(_1a84cbac6_RetTypeChecker(_self_,_175917_rt.get()._field_func,jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_210e87caa_Expr>>(),jule::Slice<jule::Ptr<_1a8487246_Var>>(),_175433_r.get()._field_token,jule::Any()));;
	jule::Bool _176913_ok = _1a84cc9b7_check(_176417_rtc.ptr(), _175433_r.get()._field_expr);;
	if ((!(_176913_ok))) {
		return;;
	};
	if (((_175433_r.get()._field_expr == nullptr) && (_176417_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_175917_rt.get()._field_vars=_176417_rtc.get()._field_vars;
	if ((_175433_r.get()._field_expr != nullptr)) {
		_175917_rt.get()._field_expr=jule::Any(_176417_rtc.get()._field_model);
	};
}



inline void _1a845b380_check_use_expr(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_211079907_UseExpr> _178534_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _178534_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1a84503c9_is_deferred(_self_)) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _178534_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_stmts.len())) {
		_1a846e65c_push_err(_self_.get()._field_s.ptr(), _178534_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1a845b605_check_node(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Any& _180135_node) {
	{
		auto &_match_expr{ _180135_node };
		
		if (_match_expr.type_is<jule::Ptr<_21110ca9a_ScopeTree>>()) {
			_case_begin_1aa42bc00:;
			{
				_1a8452be5_check_anon_scope(_self_, _180135_node.operator jule::Ptr<_21110ca9a_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110d161_VarDecl>>()) {
			_case_begin_1aa42b370:;
			{
				_1a8451908_check_var_decl(_self_, _180135_node.operator jule::Ptr<_21110d161_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110e591_TypeAliasDecl>>()) {
			_case_begin_1aa42b78d:;
			{
				_1a8451b7d_check_type_alias_decl(_self_, _180135_node.operator jule::Ptr<_21110e591_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e87caa_Expr>>()) {
			_case_begin_1aa42b8e2:;
			{
				_1a8453289_check_expr(_self_, _180135_node.operator jule::Ptr<_210e87caa_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211109aca_CoExpr>>()) {
			_case_begin_1aa42b958:;
			{
				_1a845350e_check_co_expr(_self_, _180135_node.operator jule::Ptr<_211109aca_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110e3a4_Conditional>>()) {
			_case_begin_1aa42bc88:;
			{
				_1a8453da0_check_conditional(_self_, _180135_node.operator jule::Ptr<_21110e3a4_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110d53a_Iter>>()) {
			_case_begin_1aa42bcee:;
			{
				_1a8455610_check_iter(_self_, _180135_node.operator jule::Ptr<_21110d53a_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110dcdd_ContSt>>()) {
			_case_begin_1aa42bd65:;
			{
				_1a84562e2_check_cont(_self_, _180135_node.operator jule::Ptr<_21110dcdd_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110c10a_LabelSt>>()) {
			_case_begin_1aa42bdcb:;
			{
				_1a8456567_check_label(_self_, _180135_node.operator jule::Ptr<_21110c10a_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110c2e7_GotoSt>>()) {
			_case_begin_1aa42be42:;
			{
				_1a84567dc_push_goto(_self_, _180135_node.operator jule::Ptr<_21110c2e7_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110c8ad_AssignSt>>()) {
			_case_begin_1aa42bea8:;
			{
				_1a8458338_check_assign_st(_self_, _180135_node.operator jule::Ptr<_21110c8ad_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110e96a_MatchCase>>()) {
			_case_begin_1aa42c01e:;
			{
				_1a845a26e_check_match(_self_, _180135_node.operator jule::Ptr<_21110e96a_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110c4d4_FallSt>>()) {
			_case_begin_1aa42c085:;
			{
				_1a845a4e4_check_fall(_self_, _180135_node.operator jule::Ptr<_21110c4d4_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110db01_BreakSt>>()) {
			_case_begin_1aa42c0eb:;
			{
				_1a845ad85_check_break(_self_, _180135_node.operator jule::Ptr<_21110db01_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110d34d_RetSt>>()) {
			_case_begin_1aa42c173:;
			{
				_1a845b10a_check_ret(_self_, _180135_node.operator jule::Ptr<_21110d34d_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211079907_UseExpr>>()) {
			_case_begin_1aa42c1ea:;
			{
				_1a845b380_check_use_expr(_self_, _180135_node.operator jule::Ptr<_211079907_UseExpr>());
			}
		}
		else {
			_case_begin_1aa42b4d5:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1aa42b408:;
	};
}



inline void _1a845b7d1_check_result(jule::Ptr<_1a844d4e8_ScopeChecker> _self_) {
	_2110cc1c9_Node _184117_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _184117_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_211079907_UseExpr>>()) {
			_case_begin_1aa437238:;
			{
				jule::Ptr<_211079907_UseExpr> _184421_ue = _184117_stmt._field_data.operator jule::Ptr<_211079907_UseExpr>();;
				jule::Ptr<_1a84d3869_Data> _184521_d = _1a84eea94_eval_expr(_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0)), _184421_ue.get()._field_expr);;
				if ((_184521_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_184521_d));;
				jule::Ptr<_1a84cbac6_RetTypeChecker> _185021_rtc = jule::new_ptr<_1a84cbac6_RetTypeChecker>(_1a84cbac6_RetTypeChecker(_self_,jule::Ptr<_1a5b33164_FnIns>(),_1a5b33b7b_types(_self_.get()._field_result.ptr()),jule::Slice<jule::Ptr<_210e87caa_Expr>>(),jule::Slice<jule::Ptr<_1a8487246_Var>>(),_184421_ue.get()._field_expr.get()._field_token,jule::Any()));;
				_1a84cc9b7_check(_185021_rtc.ptr(), _184421_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e87caa_Expr>>()) {
			_case_begin_1aa43729e:;
			{
				jule::Ptr<_210e87caa_Expr> _185721_expr = _184117_stmt._field_data.operator jule::Ptr<_210e87caa_Expr>();;
				jule::Ptr<_1a84d3869_Data> _185821_d = _1a84eea94_eval_expr(_1a84743ba_eval(_self_.get()._field_s, jule::Trait<_1a85260a4_Lookup>(_self_, 0)), _185721_expr);;
				if ((_185821_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _185821_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>>()) {
						_case_begin_1aa43b539:;
						{
							jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel> _186425_m = _185821_d.get()._field_model.operator jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>();;
							_1a8453014_process_error_call(_self_, _186425_m,_185721_expr.get()._field_token);
						}
					}
					else {
						_case_begin_1aa43b3d5:;
						{
							return;;
						}
					}
					_match_end_1aa43b380:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110c2e7_GotoSt>>() || _match_expr.type_is<jule::Ptr<_21110db01_BreakSt>>() || _match_expr.type_is<jule::Ptr<_21110dcdd_ContSt>>() || _match_expr.type_is<jule::Ptr<_21110d34d_RetSt>>()) {
			_case_begin_1aa436952:;
			{
				_1a845b605_check_node(_self_, _184117_stmt._field_data);
			}
		}
		else {
			_case_begin_1aa4368db:;
			{
				_1a845b605_check_node(_self_, _184117_stmt._field_data);
				return;;
			}
		}
		_match_end_1aa436853:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1a845b9ac_check_tree(jule::Ptr<_1a844d4e8_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_tree.get()._field_stmts.len()); (_self_.get()._field_i)++) {
		{
			_2110cc1c9_Node _188621_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];;
			_1a845b605_check_node(_self_, _188621_stmt._field_data);
			if (_1a8450165_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1aa43d8e3:;
	}
	_iter_end_1aa43d8e3:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL))) {
		_1a845b7d1_check_result(_self_);
	};
}



inline void _1a845bccb_check_goto(_1a844d4e8_ScopeChecker* _self_, jule::Ptr<_1a844d30b_ScopeGoto>& _189734_gt, jule::Ptr<_1a844d11e_ScopeLabel>& _189755_label) {
	jule::Ptr<_1a844d4e8_ScopeChecker> _189817_gtsc = _189734_gt.get()._field_scope;;
	while (((_189817_gtsc.get()._field_child_index - 1LL) > _189755_label.get()._field_scope.get()._field_child_index)) {
		{
			_189817_gtsc=_189817_gtsc.get()._field_parent;
		}
	_iter_next_1aa441d7a:;
	}
	_iter_end_1aa441d7a:;;
	jule::I64 _190317_n = 0LL;;
	if ((_189817_gtsc.get()._field_scope == _189755_label.get()._field_scope.get()._field_scope)) {
		if ((_189734_gt.get()._field_pos > _189755_label.get()._field_pos)) {
			return;;
		};
		_190317_n=_189734_gt.get()._field_pos;
	};
	jule::I64 _191617_i = (_189755_label.get()._field_pos - 1LL);;
	if ((_190317_n == 0LL)) {
		{
			auto &expr = _189755_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1aa444586:;
			if (it != expr.end()) {
				jule::I64 _191917_j = it - expr.begin();
				jule::Any _191920_stmt = *it;
				{
					if (_1a8417616_stmt_is_goto_scope(_191920_stmt,_189817_gtsc.get()._field_scope)) {
						_190317_n=_191917_j;
						goto _iter_end_1aa444586;
					};
				}
				_iter_next_1aa444586:;
				++it;
				_191917_j++;
				goto _iter_begin_1aa444586;
			}
			_iter_end_1aa444586:;
		};
	};
	for (; (_191617_i >= _190317_n); (_191617_i)--) {
		{
			jule::Any _192921_stmt = _189755_label.get()._field_scope.get()._field_scope.get()._field_stmts[_191617_i];;
			if (_1a8426e0b_st_is_def(_192921_stmt)) {
				_1a846e65c_push_err((*_self_)._field_s.ptr(), _189734_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_189734_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
				return;;
			};
		}
	_iter_next_1aa4456b9:;
	}
	_iter_end_1aa4456b9:;;
}



inline void _1a845bea7_check_gotos(_1a844d4e8_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1aa447325:;
		if (it != expr.end()) {
			jule::Ptr<_1a844d30b_ScopeGoto> _193821_gt = *it;
			{
				jule::Ptr<_1a844d11e_ScopeLabel> _193921_label = _1a84512cb_find_label_all(&(*_self_), _193821_gt.get()._field_gt.get()._field_label.get()._field_kind);;
				if ((_193921_label == nullptr)) {
					_1a846e65c_push_err((*_self_)._field_s.ptr(), _193821_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_193821_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
					goto _iter_next_1aa447325;
				};
				_193921_label.get()._field_used=true;
				_1a845bccb_check_goto(&(*_self_), _193821_gt,_193921_label);
			}
			_iter_next_1aa447325:;
			++it;
			goto _iter_begin_1aa447325;
		}
		_iter_end_1aa447325:;
	};
}



inline void _1a845c183_check_labels(_1a844d4e8_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1aa449d0b:;
		if (it != expr.end()) {
			jule::Ptr<_1a844d11e_ScopeLabel> _195116_l = *it;
			{
				if ((!(_195116_l.get()._field_used))) {
					_1a846e65c_push_err((*_self_)._field_s.ptr(), _195116_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_195116_l.get()._field_label.get()._field_ident)}));
				};
			}
			_iter_next_1aa449d0b:;
			++it;
			goto _iter_begin_1aa449d0b;
		}
		_iter_end_1aa449d0b:;
	};
}



inline void _1a845c35e_check_vars(_1a844d4e8_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aa44b67b:;
		if (it != expr.end()) {
			jule::Ptr<_1a8487246_Var> _195916_v = *it;
			{
				if (((((!(_195916_v.get()._field_used)) && (!(_2110e9988_is_ignore_ident(_195916_v.get()._field_ident)))) && (!(_2110e9c30_is_anon_ident(_195916_v.get()._field_ident)))) && (_195916_v.get()._field_ident != jule::Str("self", 4)))) {
					_1a846e65c_push_err((*_self_)._field_s.ptr(), _195916_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_195916_v.get()._field_ident)}));
				};
			}
			_iter_next_1aa44b67b:;
			++it;
			goto _iter_begin_1aa44b67b;
		}
		_iter_end_1aa44b67b:;
	};
}



inline void _1a845c53a_check_aliases(_1a844d4e8_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1aa44daac:;
		if (it != expr.end()) {
			jule::Ptr<_1a850bead_TypeAlias> _196716_a = *it;
			{
				if ((((!(_196716_a.get()._field_used)) && (!(_2110e9988_is_ignore_ident(_196716_a.get()._field_ident)))) && (!(_2110e9c30_is_anon_ident(_196716_a.get()._field_ident))))) {
					_1a846e65c_push_err((*_self_)._field_s.ptr(), _196716_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_196716_a.get()._field_ident)}));
				};
			}
			_iter_next_1aa44daac:;
			++it;
			goto _iter_begin_1aa44daac;
		}
		_iter_end_1aa44daac:;
	};
}



inline void _1a845c859_check(jule::Ptr<_1a844d4e8_ScopeChecker> _self_, jule::Ptr<_21110ca9a_ScopeTree>& _197530_tree, jule::Ptr<_1a8438e62_Scope>& _197553_s) {
	_197553_s.get()._field_deferred=_197530_tree.get()._field_deferred;
	_197553_s.get()._field_unsafety=_197530_tree.get()._field_unsafety;
	jule::I64 _197913_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_197530_tree;
	_self_.get()._field_scope=_197553_s;
	_1a845b9ac_check_tree(_self_);
	if ((_197913_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1a845c35e_check_vars(_self_.ptr());
		_1a845c53a_check_aliases(_self_.ptr());
		if (_1a844ec25_is_root(_self_.ptr())) {
			_1a845bea7_check_gotos(_self_.ptr());
			_1a845c183_check_labels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1a844d4e8_ScopeChecker> _1a845cabd_new_child_checker(jule::Ptr<_1a844d4e8_ScopeChecker> _self_) {
	jule::Ptr<_1a844d4e8_ScopeChecker> _199917_base = _1a83c25d2_new_scope_checker_base(_self_.get()._field_s,nullptr);;
	_199917_base.get()._field_parent=_self_;
	_199917_base.get()._field_labels=_self_.get()._field_labels;
	_199917_base.get()._field_gotos=_self_.get()._field_gotos;
	_199917_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _199917_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1a844d4e8_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1a845db68_check_cdef(_1a845d728_DirectiveChecker* _self_, jule::Ptr<_210eb33e0_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a5b2eeb8_Fn>>()) {
			_case_begin_1aa4555ca:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a5b2eeb8_Fn>().get()._field_cpp_linked) {
					goto _match_end_1aa4557ea;
				};
				goto _case_begin_1aa455850;
			}
		}
		else {
			_case_begin_1aa455850:;
			{
				_1a846e65c_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_1630_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aa4557ea:;
	};
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a845dddd_check_typedef(_1a845d728_DirectiveChecker* _self_, jule::Ptr<_210eb33e0_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
			_case_begin_1aa458688:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1b396462a_Struct>().get()._field_cpp_linked) {
					goto _match_end_1aa4588a8;
				};
				goto _case_begin_1aa45890d;
			}
		}
		else {
			_case_begin_1aa45890d:;
			{
				_1a846e65c_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_3233_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aa4588a8:;
	};
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a845e163_check_derive(_1a845d728_DirectiveChecker* _self_, jule::Ptr<_210eb33e0_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
			_case_begin_1aa45b504:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1b396462a_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1aa45b724;
				};
				goto _case_begin_1aa45b779;
			}
		}
		else {
			_case_begin_1aa45b779:;
			{
				_1a846e65c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa45b724:;
	};
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1a846e97b_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL].get()._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1aa460580:;
		}
		else {
			_case_begin_1aa45dd20:;
			{
				_1a846e65c_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_4832_d.get()._field_args[0LL].get()._field_kind)}));
			}
		}
		_match_end_1aa4601c8:;
	};
}



inline void _1a845e3d8_check_namespace(_1a845d728_DirectiveChecker* _self_, jule::Ptr<_210eb33e0_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
			_case_begin_1aa461c46:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1b396462a_Struct>().get()._field_cpp_linked))) {
					_1a846e65c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2eeb8_Fn>>()) {
			_case_begin_1aa4620ba:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a5b2eeb8_Fn>().get()._field_cpp_linked))) {
					_1a846e65c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
			_case_begin_1aa462131:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a8487246_Var>().get()._field_cpp_linked))) {
					_1a846e65c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1aa461ebb:;
			{
				_1a846e65c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aa461e66:;
	};
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_2110e7238_Token> _9913_arg = _7439_d.get()._field_args[0LL];;
	if ((_9913_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_kind[0LL] != '\"')) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7439_d.get()._field_args[0LL].get()._field_kind=_9913_arg.get()._field_kind.slice(1LL,(_9913_arg.get()._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
			_case_begin_1aa46ae09:;
			{
				if ((_1a8507838_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_210eb33e0_Directive> _11625_typedef = jule::new_ptr<_210eb33e0_Directive>(_210eb33e0_Directive(_7439_d.get()._field_tag,jule::Slice<jule::Ptr<_2110e7238_Token>>()));;
					_11625_typedef.get()._field_tag.get()._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_210eb33e0_Directive>>({_11625_typedef}));
				};
			}
		}
		_match_end_1aa46ada4:;
	};
}



inline void _1a845e65d_check_deprecated(_1a845d728_DirectiveChecker* _self_, jule::Ptr<_210eb33e0_Directive>& _12540_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
			_case_begin_1aa46d1d6:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1b396462a_Struct>().get()._field_cpp_linked) {
					_1a846e65c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2eeb8_Fn>>()) {
			_case_begin_1aa46d527:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a5b2eeb8_Fn>().get()._field_cpp_linked) {
					_1a846e65c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
			_case_begin_1aa46d58d:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a8487246_Var>().get()._field_cpp_linked) {
					_1a846e65c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1aa46d428:;
			{
				_1a846e65c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aa46d3c3:;
	};
	if ((_12540_d.get()._field_args.len() == 0LL)) {
		return;;
	};
	if ((_12540_d.get()._field_args.len() > 1LL)) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_2110e7238_Token> _15013_arg = _12540_d.get()._field_args[0LL];;
	if ((_15013_arg.get()._field_id != static_cast<jule::U64>(6LLU))) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_kind[0LL] != '\"')) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12540_d.get()._field_args[0LL].get()._field_kind=_15013_arg.get()._field_kind.slice(1LL,(_15013_arg.get()._field_kind.len() - 1LL));
}



inline void _1a845e8d3_check_test(_1a845d728_DirectiveChecker* _self_, jule::Ptr<_210eb33e0_Directive>& _16430_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a5b2eeb8_Fn>>()) {
			_case_begin_1aa47708b:;
			{
				jule::Ptr<_1a5b2eeb8_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1a5b2eeb8_Fn>();;
				if ((((!(_16717_f.get()._field_cpp_linked)) && (!(_1a5b30b56_is_init(_16717_f.ptr())))) && (!(_1a5b308e2_is_entry_point(_16717_f.ptr()))))) {
					goto _match_end_1aa4772ab;
				};
				if (_1a5b3067d_is_method(_16717_f.ptr())) {
					_1a846e65c_push_err((*_self_)._field_s.ptr(), _16717_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1aa4772ab;
				};
				goto _case_begin_1aa477311;
			}
		}
		else {
			_case_begin_1aa477311:;
			{
				_1a846e65c_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_16430_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aa4772ab:;
	};
	if ((_16430_d.get()._field_args.len() > 0LL)) {
		_1a846e65c_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1a845eb58_check_directive(_1a845d728_DirectiveChecker* _self_, jule::Ptr<_210eb33e0_Directive>& _18539_d) {
	{
		auto &_match_expr{ _18539_d.get()._field_tag.get()._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1aa47b942:;
			{
				_1a845db68_check_cdef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1aa47b9a8:;
			{
				_1a845dddd_check_typedef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1aa47ba1e:;
			{
				_1a845e163_check_derive(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1aa47ba85:;
			{
				_1a845e3d8_check_namespace(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1aa47c877:;
			{
				_1a845e65d_check_deprecated(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1aa47c8dd:;
			{
				_1a845e8d3_check_test(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1aa47c954:;
			{
				_1a846e65c_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		else {
			_case_begin_1aa47b5bd:;
			{
				_1a846e65c_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1aa47b887:;
	};
}



inline void _1a845ed34_check(_1a845d728_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1aa481518:;
		if (it != expr.end()) {
			jule::Ptr<_210eb33e0_Directive> _20821_d = *it;
			{
				_1a845eb58_check_directive(&(*_self_), _20821_d);
			}
			_iter_next_1aa481518:;
			++it;
			goto _iter_begin_1aa481518;
		}
		_iter_end_1aa481518:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a845d728_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a8464564_find_package(_1a8464058_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a8464872_select_package(_1a8464058_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1a8487246_Var> _1a8464c29_find_var(_1a8464058_ImportInfo* _self_, jule::Str _16931_ident, jule::Bool _16943_cpp_linked) {
	if ((!(_1a8466379_is_lookupable(&(*_self_), _16931_ident)))) {
		return nullptr;
	};
	return _1a8462078_find_var_in_package((*_self_)._field_package.get()._field_files,_16931_ident,false);
}



inline jule::Ptr<_1a850bead_TypeAlias> _1a84650d1_find_type_alias(_1a8464058_ImportInfo* _self_, jule::Str _18238_ident, jule::Bool _18250_cpp_linked) {
	if ((!(_1a8466379_is_lookupable(&(*_self_), _18238_ident)))) {
		return nullptr;
	};
	return _1a84624eb_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_18238_ident,false);
}



inline jule::Ptr<_1b396462a_Struct> _1a8465488_find_struct(_1a8464058_ImportInfo* _self_, jule::Str _19534_ident, jule::Bool _19546_cpp_linked) {
	if ((!(_1a8466379_is_lookupable(&(*_self_), _19534_ident)))) {
		return nullptr;
	};
	return _1a84628c5_find_struct_in_package((*_self_)._field_package.get()._field_files,_19534_ident,false);
}



inline jule::Ptr<_1a5b2eeb8_Fn> _1a8465840_find_fn(_1a8464058_ImportInfo* _self_, jule::Str _20830_ident, jule::Bool _20842_cpp_linked) {
	if ((!(_1a8466379_is_lookupable(&(*_self_), _20830_ident)))) {
		return nullptr;
	};
	return _1a8462d04_find_fn_in_package((*_self_)._field_package.get()._field_files,_20830_ident,false);
}



inline jule::Ptr<_1a5e34531_Trait> _1a8465b4d_find_trait(_1a8464058_ImportInfo* _self_, jule::Str _22033_ident) {
	if ((!(_1a8466379_is_lookupable(&(*_self_), _22033_ident)))) {
		return nullptr;
	};
	return _1a8463145_find_trait_in_package((*_self_)._field_package.get()._field_files,_22033_ident);
}



inline jule::Ptr<_1a83065e3_Enum> _1a8465e5b_find_enum(_1a8464058_ImportInfo* _self_, jule::Str _23232_ident) {
	if ((!(_1a8466379_is_lookupable(&(*_self_), _23232_ident)))) {
		return nullptr;
	};
	return _1a8463486_find_enum_in_package((*_self_)._field_package.get()._field_files,_23232_ident);
}



inline jule::Bool _1a8466379_is_lookupable(_1a8464058_ImportInfo* _self_, jule::Str _24228_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	};
	if ((!((*_self_)._field_import_all))) {
		if ((((*_self_)._field_alias.len() != 0LL) || _1a8466687_exist_ident(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1a8466687_exist_ident(&(*_self_), _24228_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1a8466687_exist_ident(_1a8464058_ImportInfo* _self_, jule::Str _26226_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1aa48e306:;
		if (it != expr.end()) {
			jule::Ptr<_2110e7238_Token> &_26316_sident = *it;
			{
				if ((_26316_sident.get()._field_kind == _26226_ident)) {
					return true;
				};
			}
			_iter_next_1aa48e306:;
			++it;
			goto _iter_begin_1aa48e306;
		}
		_iter_end_1aa48e306:;
	};
	return false;
}



inline jule::Bool _1a8466940_is_accessible_via_selection(_1a8464058_ImportInfo* _self_) {
	return (((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1a8466687_exist_ident(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1a8464058_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a84671d2_find_package(_1a8466c1a_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a84674e0_select_package(_1a8466c1a_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1a8487246_Var> _1a8467897_find_var(_1a8466c1a_Package* _self_, jule::Str _29231_ident, jule::Bool _29243_cpp_linked) {
	return _1a8462078_find_var_in_package((*_self_)._field_files,_29231_ident,_29243_cpp_linked);
}



inline jule::Ptr<_1a850bead_TypeAlias> _1a8467c4e_find_type_alias(_1a8466c1a_Package* _self_, jule::Str _29838_ident, jule::Bool _29850_cpp_linked) {
	return _1a84624eb_find_type_alias_in_package((*_self_)._field_files,_29838_ident,_29850_cpp_linked);
}



inline jule::Ptr<_1b396462a_Struct> _1a8468106_find_struct(_1a8466c1a_Package* _self_, jule::Str _30434_ident, jule::Bool _30446_cpp_linked) {
	return _1a84628c5_find_struct_in_package((*_self_)._field_files,_30434_ident,_30446_cpp_linked);
}



inline jule::Ptr<_1a5b2eeb8_Fn> _1a84684ad_find_fn(_1a8466c1a_Package* _self_, jule::Str _31030_ident, jule::Bool _31042_cpp_linked) {
	return _1a8462d04_find_fn_in_package((*_self_)._field_files,_31030_ident,_31042_cpp_linked);
}



inline jule::Ptr<_1a5e34531_Trait> _1a84687bb_find_trait(_1a8466c1a_Package* _self_, jule::Str _31633_ident) {
	return _1a8463145_find_trait_in_package((*_self_)._field_files,_31633_ident);
}



inline jule::Ptr<_1a83065e3_Enum> _1a8468ac9_find_enum(_1a8466c1a_Package* _self_, jule::Str _32232_ident) {
	return _1a8463486_find_enum_in_package((*_self_)._field_files,_32232_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1a8466c1a_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a846c24d_find_package(_1a846bc42_Sema* _self_, jule::Str _22435_ident) {
	return _1a84cdcb5_find_package((*_self_)._field_file.ptr(), _22435_ident);
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a846c55b_select_package(_1a846bc42_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)> _23437_selector) {
	return _1a84ce0c3_select_package((*_self_)._field_file.ptr(), _23437_selector);
}



inline jule::Ptr<_1a8487246_Var> _1a846c913_find_var(_1a846bc42_Sema* _self_, jule::Str _24431_ident, jule::Bool _24443_cpp_linked) {
	jule::Ptr<_1a8487246_Var> _24617_v = _1a8462078_find_var_in_package((*_self_)._field_files,_24431_ident,_24443_cpp_linked);;
	if ((_24617_v != nullptr)) {
		return _24617_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1aa49a378:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _25221_imp = *it;
			{
				if ((!(_1a846a6e1_imp_is_lookupable(_25221_imp,_24431_ident)))) {
					goto _iter_next_1aa49a378;
				};
				_24617_v=_1a8464c29_find_var(_25221_imp.ptr(), _24431_ident,_24443_cpp_linked);
				if (((_24617_v != nullptr) && _1a846ed33_is_accessible_define(&(*_self_), _24617_v.get()._field_public,_24617_v.get()._field_token))) {
					return _24617_v;
				};
			}
			_iter_next_1aa49a378:;
			++it;
			goto _iter_begin_1aa49a378;
		}
		_iter_end_1aa49a378:;
	};
	return nullptr;
}



inline jule::Ptr<_1a850bead_TypeAlias> _1a846ccba_find_type_alias(_1a846bc42_Sema* _self_, jule::Str _27138_ident, jule::Bool _27150_cpp_linked) {
	jule::Ptr<_1a850bead_TypeAlias> _27317_ta = _1a84624eb_find_type_alias_in_package((*_self_)._field_files,_27138_ident,_27150_cpp_linked);;
	if ((_27317_ta != nullptr)) {
		return _27317_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1aa49d678:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _27921_imp = *it;
			{
				if ((!(_1a846a6e1_imp_is_lookupable(_27921_imp,_27138_ident)))) {
					goto _iter_next_1aa49d678;
				};
				_27317_ta=_1a84650d1_find_type_alias(_27921_imp.ptr(), _27138_ident,_27150_cpp_linked);
				if (((_27317_ta != nullptr) && _1a846ed33_is_accessible_define(&(*_self_), _27317_ta.get()._field_public,_27317_ta.get()._field_token))) {
					return _27317_ta;
				};
			}
			_iter_next_1aa49d678:;
			++it;
			goto _iter_begin_1aa49d678;
		}
		_iter_end_1aa49d678:;
	};
	return nullptr;
}



inline jule::Ptr<_1b396462a_Struct> _1a846d172_find_struct(_1a846bc42_Sema* _self_, jule::Str _29834_ident, jule::Bool _29846_cpp_linked) {
	jule::Ptr<_1b396462a_Struct> _30017_s = _1a84628c5_find_struct_in_package((*_self_)._field_files,_29834_ident,_29846_cpp_linked);;
	if ((_30017_s != nullptr)) {
		return _30017_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1aa4a11c5:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _30621_imp = *it;
			{
				if ((!(_1a846a6e1_imp_is_lookupable(_30621_imp,_29834_ident)))) {
					goto _iter_next_1aa4a11c5;
				};
				_30017_s=_1a8465488_find_struct(_30621_imp.ptr(), _29834_ident,_29846_cpp_linked);
				if (((_30017_s != nullptr) && _1a846ed33_is_accessible_define(&(*_self_), _30017_s.get()._field_public,_30017_s.get()._field_token))) {
					return _30017_s;
				};
			}
			_iter_next_1aa4a11c5:;
			++it;
			goto _iter_begin_1aa4a11c5;
		}
		_iter_end_1aa4a11c5:;
	};
	return nullptr;
}



inline jule::Ptr<_1a5b2eeb8_Fn> _1a846d529_find_fn(_1a846bc42_Sema* _self_, jule::Str _32530_ident, jule::Bool _32542_cpp_linked) {
	jule::Ptr<_1a5b2eeb8_Fn> _32717_f = _1a8462d04_find_fn_in_package((*_self_)._field_files,_32530_ident,_32542_cpp_linked);;
	if ((_32717_f != nullptr)) {
		return _32717_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1aa4a3d43:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1a846a6e1_imp_is_lookupable(_33321_imp,_32530_ident)))) {
					goto _iter_next_1aa4a3d43;
				};
				_32717_f=_1a8465840_find_fn(_33321_imp.ptr(), _32530_ident,_32542_cpp_linked);
				if (((_32717_f != nullptr) && _1a846ed33_is_accessible_define(&(*_self_), _32717_f.get()._field_public,_32717_f.get()._field_token))) {
					return _32717_f;
				};
			}
			_iter_next_1aa4a3d43:;
			++it;
			goto _iter_begin_1aa4a3d43;
		}
		_iter_end_1aa4a3d43:;
	};
	return nullptr;
}



inline jule::Ptr<_1a5e34531_Trait> _1a846d837_find_trait(_1a846bc42_Sema* _self_, jule::Str _35233_ident) {
	jule::Ptr<_1a5e34531_Trait> _35417_t = _1a8463145_find_trait_in_package((*_self_)._field_files,_35233_ident);;
	if ((_35417_t != nullptr)) {
		return _35417_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1aa4a6681:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _36021_imp = *it;
			{
				if ((!(_1a846a6e1_imp_is_lookupable(_36021_imp,_35233_ident)))) {
					goto _iter_next_1aa4a6681;
				};
				_35417_t=_1a8465b4d_find_trait(_36021_imp.ptr(), _35233_ident);
				if (((_35417_t != nullptr) && _1a846ed33_is_accessible_define(&(*_self_), _35417_t.get()._field_public,_35417_t.get()._field_token))) {
					return _35417_t;
				};
			}
			_iter_next_1aa4a6681:;
			++it;
			goto _iter_begin_1aa4a6681;
		}
		_iter_end_1aa4a6681:;
	};
	return nullptr;
}



inline jule::Ptr<_1a83065e3_Enum> _1a846db45_find_enum(_1a846bc42_Sema* _self_, jule::Str _37932_ident) {
	jule::Ptr<_1a83065e3_Enum> _38117_e = _1a8463486_find_enum_in_package((*_self_)._field_files,_37932_ident);;
	if ((_38117_e != nullptr)) {
		return _38117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1aa4a8e58:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _38721_imp = *it;
			{
				if ((!(_1a846a6e1_imp_is_lookupable(_38721_imp,_37932_ident)))) {
					goto _iter_next_1aa4a8e58;
				};
				_38117_e=_1a8465e5b_find_enum(_38721_imp.ptr(), _37932_ident);
				if (((_38117_e != nullptr) && _1a846ed33_is_accessible_define(&(*_self_), _38117_e.get()._field_public,_38117_e.get()._field_token))) {
					return _38117_e;
				};
			}
			_iter_next_1aa4a8e58:;
			++it;
			goto _iter_begin_1aa4a8e58;
		}
		_iter_end_1aa4a8e58:;
	};
	return nullptr;
}



inline jule::Bool _1a846e01e_is_flag(_1a846bc42_Sema* _self_, jule::I64 _40322_flags) {
	return (((*_self_)._field_flags & _40322_flags) == _40322_flags);
}



inline void _1a846e294_set_current_file(_1a846bc42_Sema* _self_, jule::Ptr<_1a84cd7a9_SymbolTable> _40539_f) {
	(*_self_)._field_file=_40539_f;
}



inline void _1a846e65c_push_err(_1a846bc42_Sema* _self_, jule::Ptr<_2110e7238_Token> _40727_token, jule::Str _40742_fmt, jule::Slice<jule::Any> _40755_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a846a3a0_compiler_err(_40727_token,true,_40742_fmt,jule::Any(_40755_args)));;
}



inline void _1a846e97b_push_suggestion(_1a846bc42_Sema* _self_, jule::Str _41234_fmt, jule::Slice<jule::Any> _41247_args) {
	{
		_1a846b7ad_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_41234_fmt,jule::Any(_41247_args));
	};
}



inline jule::Bool _1a846ed33_is_accessible_define(_1a846bc42_Sema* _self_, jule::Bool _41735_public, jule::Ptr<_2110e7238_Token> _41749_token) {
	return ((_41735_public || (_41749_token.get()._field_file == nullptr)) || (_2110ed01e_dir((*_self_)._field_file.get()._field_file.ptr()) == _2110ed01e_dir(_41749_token.get()._field_file.ptr())));
}



inline jule::Bool _1a8470284_is_duplicated_ident(_1a846bc42_Sema* _self_, jule::U64 _42434_itself, jule::Str _42451_ident, jule::Bool _42463_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1aa4b1aa9:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> &_42516_f = *it;
			{
				if (_1a84d1988_is_duplicated_ident(_42516_f.ptr(), _42434_itself,_42451_ident,_42463_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _42516_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1aa4b313d:;
					if (it != expr.end()) {
						jule::Ptr<_1a8464058_ImportInfo> &_43020_imp = *it;
						{
							{
								auto &expr = _43020_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1aa4b3836:;
								if (it != expr.end()) {
									jule::Ptr<_2110e7238_Token> &_43124_selected = *it;
									{
										if ((_43124_selected.get()._field_kind == _42451_ident)) {
											return true;
										};
									}
									_iter_next_1aa4b3836:;
									++it;
									goto _iter_begin_1aa4b3836;
								}
								_iter_end_1aa4b3836:;
							};
						}
						_iter_next_1aa4b313d:;
						++it;
						goto _iter_begin_1aa4b313d;
					}
					_iter_end_1aa4b313d:;
				};
			}
			_iter_next_1aa4b1aa9:;
			++it;
			goto _iter_begin_1aa4b1aa9;
		}
		_iter_end_1aa4b1aa9:;
	};
	return false;
}



inline void _1a84705a3_check_directives(jule::Ptr<_1a846bc42_Sema> _self_, jule::Slice<jule::Ptr<_210eb33e0_Directive>>& _44141_d, jule::Any _44167_o) {
	_1a845d728_DirectiveChecker _44217_dc = _1a845d728_DirectiveChecker(_self_,((jule::Ptr<jule::Slice<jule::Ptr<_210eb33e0_Directive>>>)((&(_44141_d)))),jule::Any(_44167_o));;
	_1a845ed34_check(&_44217_dc);
}



inline jule::Bool _1a8470a04_check_generic_quantity(_1a846bc42_Sema* _self_, jule::I64 _45041_required, jule::I64 _45056_given, jule::Ptr<_2110e7238_Token> _45068_token) {
	jule::Bool _45085_ok = jule::Bool();
	{
		
		if (((_45041_required == 0LL) && (_45056_given > 0LL))) {
			_case_begin_1aa4b6e33:;
			{
				_1a846e65c_push_err(&(*_self_), _45068_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if (((_45041_required > 0LL) && (_45056_given == 0LL))) {
			_case_begin_1aa4b7021:;
			{
				_1a846e65c_push_err(&(*_self_), _45068_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if ((_45041_required < _45056_given)) {
			_case_begin_1aa4b7087:;
			{
				_1a846e65c_push_err(&(*_self_), _45068_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if ((_45041_required > _45056_given)) {
			_case_begin_1aa4b6c46:;
			{
				_1a846e65c_push_err(&(*_self_), _45068_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else {
			_case_begin_1aa4b67d4:;
			{
				_45085_ok = true;
				return _45085_ok;
			}
		}
		_match_end_1aa4b673a:;
	};
}



inline jule::Bool _1a8470e00_is_duplicated_import_selection(_1a846bc42_Sema* _self_, jule::U64 _46945_itself, jule::Str _46962_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1aa4baa80:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> &_47016_imp = *it;
			{
				if ((static_cast<jule::U64>(_47016_imp) == _46945_itself)) {
					goto _iter_end_1aa4baa80;
				};
				if (_1a8466687_exist_ident(_47016_imp.ptr(), _46962_ident)) {
					return true;
				};
			}
			_iter_next_1aa4baa80:;
			++it;
			goto _iter_begin_1aa4baa80;
		}
		_iter_end_1aa4baa80:;
	};
	return false;
}



inline jule::Any _1a8471296_get_import_def(_1a846bc42_Sema* _self_, jule::Str _48429_ident, jule::Ptr<_1a8464058_ImportInfo>& _48446_imp) {
	if ((_1a852e6ea_find_package_builtin_def(_48446_imp.get()._field_link_path,_48429_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _48446_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa4bd038:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _48921_f = *it;
			{
				;
				jule::Any _49121_def = _1a84d1537_def_by_ident(_48921_f.ptr(), _48429_ident,false);;
				if ((_49121_def != nullptr)) {
					return jule::Any(_49121_def);
				};
			}
			_iter_next_1aa4bd038:;
			++it;
			goto _iter_begin_1aa4bd038;
		}
		_iter_end_1aa4bd038:;
	};
	return nullptr;
}



inline jule::Bool _1a84715e8_check_import_selections(_1a846bc42_Sema* _self_, jule::Ptr<_1a8464058_ImportInfo>& _50047_imp) {
	jule::Bool _50067_ok = jule::Bool();
	_50067_ok=true;
	{
		auto &expr = _50047_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1aa4bee2a:;
		if (it != expr.end()) {
			jule::Ptr<_2110e7238_Token> _50216_ident = *it;
			{
				if ((_50216_ident.get()._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1aa4bee2a;
				};
				if (_1a8470e00_is_duplicated_import_selection(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(_50047_imp)),_50216_ident.get()._field_kind)) {
					_1a846e65c_push_err(&(*_self_), _50216_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_50216_ident.get()._field_kind)}));
					_1a846e97b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_50067_ok=false;
					goto _iter_next_1aa4bee2a;
				};
				jule::Any _51421_def = _1a8471296_get_import_def(&(*_self_), _50216_ident.get()._field_kind,_50047_imp);;
				{
					auto &_match_expr{ _51421_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1aa4c367b:;
						{
							goto _iter_next_1aa4bee2a;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
						_case_begin_1aa4c2aed:;
						{
							jule::Ptr<_1a8487246_Var> _52025_v = _51421_def.operator jule::Ptr<_1a8487246_Var>();;
							if (_1a846ed33_is_accessible_define(&(*_self_), _52025_v.get()._field_public,_52025_v.get()._field_token)) {
								goto _iter_next_1aa4bee2a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a850bead_TypeAlias>>()) {
						_case_begin_1aa4c2b64:;
						{
							jule::Ptr<_1a850bead_TypeAlias> _52525_ta = _51421_def.operator jule::Ptr<_1a850bead_TypeAlias>();;
							if (_1a846ed33_is_accessible_define(&(*_self_), _52525_ta.get()._field_public,_52525_ta.get()._field_token)) {
								goto _iter_next_1aa4bee2a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
						_case_begin_1aa4c37ad:;
						{
							jule::Ptr<_1b396462a_Struct> _53025_strct = _51421_def.operator jule::Ptr<_1b396462a_Struct>();;
							if (_1a846ed33_is_accessible_define(&(*_self_), _53025_strct.get()._field_public,_53025_strct.get()._field_token)) {
								goto _iter_next_1aa4bee2a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a5e34531_Trait>>()) {
						_case_begin_1aa4c3824:;
						{
							jule::Ptr<_1a5e34531_Trait> _53525_t = _51421_def.operator jule::Ptr<_1a5e34531_Trait>();;
							if (_1a846ed33_is_accessible_define(&(*_self_), _53525_t.get()._field_public,_53525_t.get()._field_token)) {
								goto _iter_next_1aa4bee2a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a83065e3_Enum>>()) {
						_case_begin_1aa4c388a:;
						{
							jule::Ptr<_1a83065e3_Enum> _54025_e = _51421_def.operator jule::Ptr<_1a83065e3_Enum>();;
							if (_1a846ed33_is_accessible_define(&(*_self_), _54025_e.get()._field_public,_54025_e.get()._field_token)) {
								goto _iter_next_1aa4bee2a;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a5b2eeb8_Fn>>()) {
						_case_begin_1aa4c3901:;
						{
							jule::Ptr<_1a5b2eeb8_Fn> _54525_f = _51421_def.operator jule::Ptr<_1a5b2eeb8_Fn>();;
							if (_1a846ed33_is_accessible_define(&(*_self_), _54525_f.get()._field_public,_54525_f.get()._field_token)) {
								goto _iter_next_1aa4bee2a;
							};
						}
					}
					else {
						_case_begin_1aa4c2944:;
						{
							_1a846e65c_push_err(&(*_self_), _50216_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_50216_ident.get()._field_kind)}));
							_50067_ok=false;
							goto _iter_next_1aa4bee2a;
						}
					}
					_match_end_1aa4c28de:;
				};
				_1a846e65c_push_err(&(*_self_), _50216_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_50216_ident.get()._field_kind)}));
				_1a846e97b_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_50067_ok=false;
			}
			_iter_next_1aa4bee2a:;
			++it;
			goto _iter_begin_1aa4bee2a;
		}
		_iter_end_1aa4bee2a:;
	};
	return _50067_ok;
}



inline jule::Bool _1a8471939_is_use_alias_duplication(_1a846bc42_Sema* _self_, jule::Ptr<_1a8464058_ImportInfo>& _56244_imp) {
	if ((_56244_imp.get()._field_alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1aa4caba0:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _56721_imp2 = *it;
			{
				if ((_56721_imp2 == _56244_imp)) {
					goto _iter_end_1aa4caba0;
				};
				if ((_56721_imp2.get()._field_alias == _56244_imp.get()._field_alias)) {
					return true;
				};
				if (((_56721_imp2.get()._field_ident == _56721_imp2.get()._field_link_path) && (_56721_imp2.get()._field_ident == _56244_imp.get()._field_alias))) {
					return true;
				};
			}
			_iter_next_1aa4caba0:;
			++it;
			goto _iter_begin_1aa4caba0;
		}
		_iter_end_1aa4caba0:;
	};
	return false;
}



inline jule::Bool _1a8471c36_check_import(_1a846bc42_Sema* _self_, jule::Ptr<_1a8464058_ImportInfo>& _58336_imp) {
	if ((_58336_imp.get()._field_cpp_linked || (_58336_imp.get()._field_package.get()._field_files.len() == 0LL))) {
		return true;
	};
	if (_1a8471939_is_use_alias_duplication(&(*_self_), _58336_imp)) {
		_1a846e65c_push_err(&(*_self_), _58336_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>({jule::Any(_58336_imp.get()._field_alias)}));
		_1a846e97b_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_58336_imp.get()._field_duplicate))) {
		jule::Ptr<_1a846bc42_Sema> _59421_sema = jule::new_ptr<_1a846bc42_Sema>(_1a846bc42_Sema(jule::Slice<_210c3ee2a_Log>(),jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>(),jule::Ptr<_1a84cd7a9_SymbolTable>(),(*_self_)._field_flags));;
		_1a84841ee_check(_59421_sema, _58336_imp.get()._field_package.get()._field_files);
		if ((_59421_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_59421_sema.get()._field_errors);
			_59421_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1a84715e8_check_import_selections(&(*_self_), _58336_imp);
}



inline void _1a8471e12_check_imports(_1a846bc42_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1aa4d2745:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _60821_file = *it;
			{
				_1a846e294_set_current_file(&(*_self_), _60821_file);
				{
					auto &expr = _60821_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1aa4d33c2:;
					if (it != expr.end()) {
						jule::Ptr<_1a8464058_ImportInfo> _61125_imp = *it;
						{
							jule::Bool _61221_ok = _1a8471c36_check_import(&(*_self_), _61125_imp);;
							if ((!(_61221_ok))) {
								_1a846e65c_push_err(&(*_self_), _61125_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_61125_imp.get()._field_link_path)}));
								return;;
							};
						}
						_iter_next_1aa4d33c2:;
						++it;
						goto _iter_begin_1aa4d33c2;
					}
					_iter_end_1aa4d33c2:;
				};
			}
			_iter_next_1aa4d2745:;
			++it;
			goto _iter_begin_1aa4d2745;
		}
		_iter_end_1aa4d2745:;
	};
}



inline void _1a84720dd_impl_file_impls(jule::Ptr<_1a846bc42_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1aa4d2b41:;
		if (it != expr.end()) {
			jule::Ptr<_1a8306d30_Impl> _62421_imp = *it;
			{
				_1a847ab52_impl_impl(_self_, _62421_imp);
			}
			_iter_next_1aa4d2b41:;
			++it;
			goto _iter_begin_1aa4d2b41;
		}
		_iter_end_1aa4d2b41:;
	};
}



inline void _1a84722b9_impl_impls(jule::Ptr<_1a846bc42_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa4d6293:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _63021_file = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _63021_file);
				_1a84720dd_impl_file_impls(_self_);
			}
			_iter_next_1aa4d6293:;
			++it;
			goto _iter_begin_1aa4d6293;
		}
		_iter_end_1aa4d6293:;
	};
}



inline void _1a8472495_check_enums(jule::Ptr<_1a846bc42_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa4d7508:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _63721_file = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _63721_file);
				_1a8478127_check_enum_decls(_self_);
			}
			_iter_next_1aa4d7508:;
			++it;
			goto _iter_begin_1aa4d7508;
		}
		_iter_end_1aa4d7508:;
	};
}



inline jule::Bool _1a84728e6_check_type_with_refers(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a8511a84_TypeSymbol>& _64547_t, jule::Trait<_1a85260a4_Lookup> _64613_l, jule::Ptr<_1a851b660_Referencer> _64628_referencer) {
	jule::Bool _64655_ok = jule::Bool();
	if (_1a8511e80_checked(_64547_t.ptr())) {
		_64655_ok = true;
		return _64655_ok;
	};
	_1a851c2dc_TypeChecker _65017_tc = _1a851c2dc_TypeChecker(_self_,_64613_l,_64628_referencer,jule::Ptr<_2110e7238_Token>(),jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a850bead_TypeAlias>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool());;
	if (((_64628_referencer != nullptr) && (_64628_referencer.get()._field_refs != nullptr))) {
		_65017_tc._field_owner_alias=_64628_referencer.get()._field_owner.operator jule::Ptr<_1a850bead_TypeAlias>();
	};
	_1a8523b73_check(&_65017_tc, _64547_t);
	_64655_ok = _1a8511e80_checked(_64547_t.ptr());
	return _64655_ok;
}



inline jule::Bool _1a8472c9d_check_type(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a8511a84_TypeSymbol>& _66935_t, jule::Trait<_1a85260a4_Lookup> _66955_l) {
	return _1a84728e6_check_type_with_refers(_self_, _66935_t,_66955_l,nullptr);
}



inline jule::Ptr<_1a850cbe5_TypeKind> _1a8473199_build_type_with_generics(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_210e7e620_TypeDecl>& _67549_t, jule::Slice<jule::Ptr<_1a850bead_TypeAlias>> _67613_generics) {
	jule::Ptr<_1a851c2dc_TypeChecker> _67717_tc = jule::new_ptr<_1a851c2dc_TypeChecker>(_1a851c2dc_TypeChecker(_self_,jule::Trait<_1a85260a4_Lookup>(_self_, 3),jule::Ptr<_1a851b660_Referencer>(),jule::Ptr<_2110e7238_Token>(),jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>(),_67613_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a850bead_TypeAlias>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool()));;
	return _1a85238ed_check_decl(_67717_tc.ptr(), _67549_t);
}



inline jule::Ptr<_1a850cbe5_TypeKind> _1a8473496_build_type(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_210e7e620_TypeDecl>& _68635_t) {
	return _1a8473199_build_type_with_generics(_self_, _68635_t,nullptr);
}



inline jule::Ptr<_1a850cbe5_TypeKind> _1a84737a4_select_type(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_210e7e620_TypeDecl>& _69136_t) {
	jule::Ptr<_1a851c2dc_TypeChecker> _69217_tc = jule::new_ptr<_1a851c2dc_TypeChecker>(_1a851c2dc_TypeChecker(_self_,jule::Trait<_1a85260a4_Lookup>(_self_, 3),jule::Ptr<_1a851b660_Referencer>(),jule::Ptr<_2110e7238_Token>(),jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool(),jule::Bool(),true,jule::Ptr<_1a850bead_TypeAlias>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool()));;
	return _1a85238ed_check_decl(_69217_tc.ptr(), _69136_t);
}



inline jule::Ptr<_1a84d53d7_Eval> _1a8473c05_evalpd(jule::Ptr<_1a846bc42_Sema> _self_, jule::Trait<_1a85260a4_Lookup> _70230_l, jule::Ptr<_1a850cbe5_TypeKind> _70245_p, jule::Ptr<_1a8487246_Var> _70263_owner) {
	jule::Ptr<_1a84d53d7_Eval> _70317_e = jule::new_ptr<_1a84d53d7_Eval>(_1a84d53d7_Eval(_self_,_70230_l,jule::Ptr<_1a850cbe5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_70263_owner,jule::Ptr<_1b396694b_FieldIns>(),jule::Bool()));;
	{
		auto &_match_expr{ _70230_l };
		
		if (_match_expr.type_is<jule::Ptr<_1a844d4e8_ScopeChecker>>()) {
			_case_begin_1aa4e3b30:;
			{
				_70317_e.get()._field_unsafety=_1a844e9b1_is_unsafe(_70230_l.operator jule::Ptr<_1a844d4e8_ScopeChecker>());
			}
		}
		_match_end_1aa4e3aca:;
	};
	_70317_e.get()._field_prefix=_70245_p;
	return _70317_e;
}



inline jule::Ptr<_1a84d53d7_Eval> _1a84740ac_evalp(jule::Ptr<_1a846bc42_Sema> _self_, jule::Trait<_1a85260a4_Lookup> _72029_l, jule::Ptr<_1a850cbe5_TypeKind> _72044_p) {
	return _1a8473c05_evalpd(_self_, _72029_l,_72044_p,nullptr);
}



inline jule::Ptr<_1a84d53d7_Eval> _1a84743ba_eval(jule::Ptr<_1a846bc42_Sema> _self_, jule::Trait<_1a85260a4_Lookup> _72528_l) {
	return _1a84740ac_evalp(_self_, _72528_l,nullptr);
}



inline jule::Bool _1a84748b5_check_assign_type(jule::Ptr<_1a846bc42_Sema> _self_, jule::Bool _72937_dest_is_ref, jule::Ptr<_1a850cbe5_TypeKind>& _72961_dest, jule::Ptr<_1a84d3869_Data>& _73014_d, jule::Ptr<_2110e7238_Token> _73028_error_token) {
	if (_73014_d.get()._field_decl) {
		_1a846e65c_push_err(_self_.ptr(), _73028_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_72937_dest_is_ref) {
		if ((!(_1a850d3aa_equals(_72961_dest, _73014_d.get()._field_kind)))) {
			_1a846e65c_push_err(_self_.ptr(), _73028_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_72961_dest.ptr())),jule::Any(_1a850d09c_to_str(_73014_d.get()._field_kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1a84baed3_AssignTypeChecker> _74121_atc = jule::new_ptr<_1a84baed3_AssignTypeChecker>(_1a84baed3_AssignTypeChecker(_self_,_72961_dest,_73014_d,_73028_error_token));;
		jule::Bool _74717_ok = _1a84bc15a_check(_74121_atc.ptr());;
		if ((!(_74717_ok))) {
			return false;
		};
	};
	if (((!(_1a84d422c_is_const(_73014_d.ptr()))) || (_1a850eca2_prim(_72961_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _75717_kind = _1a850eca2_prim(_72961_dest.ptr()).get()._field_kind;;
	{
		
		if (_1a844abaa_is_sig_int(_75717_kind)) {
			_case_begin_1aa4ea9c2:;
			{
				_1a83aade5_set_i64(_73014_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a83aa697_as_i64(_73014_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a844ae96_is_unsig_int(_75717_kind)) {
			_case_begin_1aa4eaa49:;
			{
				_1a83ab16a_set_u64(_73014_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a83aa90b_as_u64(_73014_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a844b529_is_float(_75717_kind)) {
			_case_begin_1aa4eaac1:;
			{
				_1a83ab8da_set_f64(_73014_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a83aab70_as_f64(_73014_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1aa4ea8e5:;
	};
	return true;
}



inline jule::Bool _1a8474d5a_check_type_compatibility(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a850cbe5_TypeKind>& _77149_dest, jule::Ptr<_1a850cbe5_TypeKind>& _77214_src, jule::Ptr<_2110e7238_Token>& _77235_error_token) {
	if ((_77214_src == nullptr)) {
		_1a846e65c_push_err(_self_.ptr(), _77235_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_77149_dest.ptr())),jule::Any(_1a850d09c_to_str(_77214_src.ptr()))}));
		return false;
	};
	if ((_1a85116cc_tup(_77214_src.ptr()) != nullptr)) {
		_1a846e65c_push_err(_self_.ptr(), _77235_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_77149_dest.ptr())),jule::Any(_1a850d09c_to_str(_77214_src.ptr()))}));
		return false;
	};
	_1a84b9c5c_TypeCompatibilityChecker _78617_tcc = _1a84b9c5c_TypeCompatibilityChecker(_self_,_77149_dest,_77214_src,_77235_error_token);;
	if (_1a84ba994_check(&_78617_tcc)) {
		return true;
	};
	_1a846e65c_push_err(_self_.ptr(), _77235_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_77149_dest.ptr())),jule::Any(_1a850d09c_to_str(_77214_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1a850cbe5_TypeKind> _1a8475245_build_non_generic_type_kind(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_210e7e620_TypeDecl>& _80752_ast, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>& _80814_generics) {
	jule::Ptr<_1a851c2dc_TypeChecker> _80917_tc = jule::new_ptr<_1a851c2dc_TypeChecker>(_1a851c2dc_TypeChecker(_self_,jule::Trait<_1a85260a4_Lookup>(_self_, 3),jule::Ptr<_1a851b660_Referencer>(),jule::Ptr<_2110e7238_Token>(),_80814_generics,jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a850bead_TypeAlias>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool()));;
	return _1a85238ed_check_decl(_80917_tc.ptr(), _80752_ast);
}



inline void _1a84754ed_build_fn_non_generic_type_kinds(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5b33164_FnIns>& _81756_f) {
	jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> _81817_generics = nullptr;;
	if (_1a5b3067d_is_method(_81756_f.get()._field_decl.ptr())) {
		_81817_generics=jule::append(_81756_f.get()._field_decl.get()._field_generics,_81756_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_81817_generics=_81756_f.get()._field_decl.get()._field_generics;
	};
	{
		auto &expr = _81756_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aa505229:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b322c8_ParamIns> _82521_p = *it;
			{
				if ((!(_1a5b2dca8_is_self(_82521_p.get()._field_decl.ptr())))) {
					_82521_p.get()._field_kind=_1a8475245_build_non_generic_type_kind(_self_, _82521_p.get()._field_decl.get()._field_kind.get()._field_decl,_81817_generics);
				};
			}
			_iter_next_1aa505229:;
			++it;
			goto _iter_begin_1aa505229;
		}
		_iter_end_1aa505229:;
	};
	if ((!(_1a5b30419_is_void(_81756_f.get()._field_decl.ptr())))) {
		_81756_f.get()._field_result=_1a8475245_build_non_generic_type_kind(_self_, _81756_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_81817_generics);
	};
}



inline jule::Ptr<_1a5b33164_FnIns> _1a847583e_get_trait_check_fn_kind(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5b2eeb8_Fn>& _83548_f) {
	jule::Ptr<_1a5b33164_FnIns> _83617_ins = _1a5b3189e_instance_force(_83548_f);;
	_1a84754ed_build_fn_non_generic_type_kinds(_self_, _83617_ins);
	return _83617_ins;
}



inline jule::Bool _1a8475b3b_reload_fn_ins_types(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5b33164_FnIns>& _84144_f) {
	jule::Bool _84157_ok = jule::Bool();
	if ((_1a5b33de0_is_builtin(_84144_f.ptr()) || _1a5b34154_is_anon(_84144_f.ptr()))) {
		_84157_ok = true;
		return _84157_ok;
	};
	jule::Ptr<_1a846bc42_Sema> _84617_sema = _84144_f.get()._field_decl.get()._field_sema;;
	jule::Ptr<_1a84cd7a9_SymbolTable> _84817_old = _84144_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1a846e294_set_current_file(_84144_f.get()._field_decl.get()._field_sema.ptr(), _84817_old);
	});;
	jule::Ptr<_1a84cd7a9_SymbolTable> _85017_file = _1a846b3c3_find_file(_84144_f.get()._field_decl.get()._field_sema.get()._field_files,_84144_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_85017_file != nullptr)) {
		_1a846e294_set_current_file(_84144_f.get()._field_decl.get()._field_sema.ptr(), _85017_file);
	};
	jule::I64 _85517_size = _84144_f.get()._field_generics.len();;
	if (((_84144_f.get()._field_decl != nullptr) && (_84144_f.get()._field_decl.get()._field_owner != nullptr))) {
		_85517_size+=_84144_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	jule::Slice<jule::Ptr<_1a850bead_TypeAlias>> _86017_generics = jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>::alloc(0LL,_85517_size);;
	{
		auto &expr = _84144_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aa50e61d:;
		if (it != expr.end()) {
			jule::I64 _86214_i = it - expr.begin();
			jule::Ptr<_1a850cbe5_TypeKind> _86221_g = *it;
			{
				_86017_generics = jule::alloc_for_append(_86017_generics,1);_86017_generics.__push(jule::new_ptr<_1a850bead_TypeAlias>(_1a850bead_TypeAlias(jule::Ptr<_21110ca9a_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2110e7238_Token>(),_84144_f.get()._field_decl.get()._field_generics[_86214_i].get()._field_ident,jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),_86221_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>())));;
			}
			_iter_next_1aa50e61d:;
			++it;
			_86214_i++;
			goto _iter_begin_1aa50e61d;
		}
		_iter_end_1aa50e61d:;
	};
	if (((_84144_f.get()._field_decl != nullptr) && (_84144_f.get()._field_decl.get()._field_owner != nullptr))) {
		jule::Ptr<_1b39672a9_StructIns> _87221_owner = _84144_f.get()._field_owner;;
		{
			auto &expr = _87221_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1aa511147:;
			if (it != expr.end()) {
				jule::I64 _87318_i = it - expr.begin();
				jule::Ptr<_1a850cbe5_TypeKind> _87325_g = *it;
				{
					_86017_generics = jule::alloc_for_append(_86017_generics,1);_86017_generics.__push(jule::new_ptr<_1a850bead_TypeAlias>(_1a850bead_TypeAlias(jule::Ptr<_21110ca9a_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2110e7238_Token>(),_87221_owner.get()._field_decl.get()._field_generics[_87318_i].get()._field_ident,jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),_87325_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>())));;
				}
				_iter_next_1aa511147:;
				++it;
				_87318_i++;
				goto _iter_begin_1aa511147;
			}
			_iter_end_1aa511147:;
		};
	};
	_84157_ok=true;
	{
		auto &expr = _84144_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aa51171e:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b322c8_ParamIns> _88421_p = *it;
			{
				if (_1a5b2dca8_is_self(_88421_p.get()._field_decl.ptr())) {
					if (_1a5b2e01c_is_ref(_88421_p.get()._field_decl.ptr())) {
						_88421_p.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a8515956_Sptr>(_1a8515956_Sptr(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_84144_f.get()._field_owner, 0))))), 6)));
					} else {
						_88421_p.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_84144_f.get()._field_owner, 0)));
					};
				} else {
					_88421_p.get()._field_kind=_1a8473199_build_type_with_generics(_84617_sema, _88421_p.get()._field_decl.get()._field_kind.get()._field_decl,_86017_generics);
					if ((_88421_p.get()._field_kind != nullptr)) {
						_88421_p.get()._field_kind.get()._field_variadic=_88421_p.get()._field_decl.get()._field_variadic;
						if ((_88421_p.get()._field_decl.get()._field_reference && (!(_1a851a373_is_valid_for_ref(_88421_p.get()._field_kind))))) {
							_1a846e65c_push_err(_self_.ptr(), _88421_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_88421_p.get()._field_kind.ptr()))}));
						};
					} else {
						_84157_ok=false;
					};
				};
			}
			_iter_next_1aa51171e:;
			++it;
			goto _iter_begin_1aa51171e;
		}
		_iter_end_1aa51171e:;
	};
	if ((!(_1a5b30419_is_void(_84144_f.get()._field_decl.ptr())))) {
		_84144_f.get()._field_result=_1a8473199_build_type_with_generics(_84617_sema, _84144_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_86017_generics);
		_84157_ok=((_84144_f.get()._field_result != nullptr) && _84157_ok);
	};
	if ((_84617_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_84617_sema.get()._field_errors);
		_84617_sema.get()._field_errors=nullptr;
	};
	return _84157_ok;
}



inline jule::Bool _1a8476103_check_ref_validity_for_init_expr(jule::Ptr<_1a846bc42_Sema> _self_, jule::Bool _92552_left_mut, jule::Ptr<_1a84d3869_Data>& _92573_d, jule::Ptr<_2110e7238_Token>& _92588_error_token) {
	{
		auto &_match_expr{ _92573_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
			_case_begin_1aa51a9ae:;
			{
				goto _match_end_1aa519c33;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396d25a_TraitSubIdentExprModel>>()) {
			_case_begin_1aa519d43:;
			{
				jule::Ptr<_1b396d25a_TraitSubIdentExprModel> _93021_model = _92573_d.get()._field_model.operator jule::Ptr<_1b396d25a_TraitSubIdentExprModel>();;
				if ((!(_1a8469e60_is_valid_model_for_ref(_93021_model.get()._field_expr)))) {
					_1a846e65c_push_err(_self_.ptr(), _92588_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(_93021_model.get()._field_method.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396d9ca_StructSubIdentExprModel>>()) {
			_case_begin_1aa519da9:;
			{
				jule::Ptr<_1b396d9ca_StructSubIdentExprModel> _93621_model = _92573_d.get()._field_model.operator jule::Ptr<_1b396d9ca_StructSubIdentExprModel>();;
				if ((!(_1a8469e60_is_valid_model_for_ref(_93621_model.get()._field_expr.get()._field_model)))) {
					_1a846e65c_push_err(_self_.ptr(), _92588_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(_93621_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396e613_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1b396eb96_CommonSubIdentExprModel>>()) {
			_case_begin_1aa519e20:;
			{
				_1a846e65c_push_err(_self_.ptr(), _92588_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3969784_UnaryExprModel>>()) {
			_case_begin_1aa519e86:;
			{
				jule::Ptr<_1b3969784_UnaryExprModel> _94621_unary = _92573_d.get()._field_model.operator jule::Ptr<_1b3969784_UnaryExprModel>();;
				if ((_94621_unary.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
					if ((!(_1a8469e60_is_valid_model_for_ref(_92573_d.get()._field_model)))) {
						_1a846e65c_push_err(_self_.ptr(), _92588_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1aa519c33;
				};
				goto _case_begin_1aa519c88;
			}
		}
		else {
			_case_begin_1aa519c88:;
			{
				_1a846e65c_push_err(_self_.ptr(), _92588_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1aa519c33:;
	};
	if ((_92552_left_mut && (!(_92573_d.get()._field_mutable)))) {
		_1a846e65c_push_err(_self_.ptr(), _92588_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1a84766db_check_validity_for_init_expr(jule::Ptr<_1a846bc42_Sema> _self_, jule::Bool _96748_left_mut, jule::Bool _96764_left_ref, jule::Ptr<_1a850cbe5_TypeKind>& _96810_left_kind, jule::Ptr<_1a84d3869_Data>& _96837_d, jule::Ptr<_2110e7238_Token>& _96852_error_token) {
	if (((_96748_left_mut && (!(_96837_d.get()._field_mutable))) && _1a850e08c_mutable(_96837_d.get()._field_kind.ptr()))) {
		_1a846e65c_push_err(_self_.ptr(), _96852_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_96837_d.get()._field_kind.ptr()))}));
		return false;
	};
	if (_96764_left_ref) {
		if ((!(_1a8476103_check_ref_validity_for_init_expr(_self_, _96748_left_mut,_96837_d,_96852_error_token)))) {
			return false;
		};
	};
	jule::Ptr<_1a84baed3_AssignTypeChecker> _97917_atc = jule::new_ptr<_1a84baed3_AssignTypeChecker>(_1a84baed3_AssignTypeChecker(_self_,jule::Ptr<_1a850cbe5_TypeKind>(),_96837_d,_96852_error_token));;
	return _1a84bb6a9_check_validity(_97917_atc.ptr());
}



inline jule::Bool _1a8476a93_check_type_alias_decl_kind(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a850bead_TypeAlias>& _98751_ta, jule::Trait<_1a85260a4_Lookup> _98771_l) {
	jule::Bool _98784_ok = jule::Bool();
	jule::Ptr<_1a84cd7a9_SymbolTable> _98817_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1a846e294_set_current_file(_self_.ptr(), _98817_old);
	});;
	if ((_98751_ta.get()._field_token != nullptr)) {
		jule::Ptr<_1a84cd7a9_SymbolTable> _99321_file = _1a846b3c3_find_file(_self_.get()._field_files,_98751_ta.get()._field_token.get()._field_file);;
		if ((_99321_file != nullptr)) {
			_1a846e294_set_current_file(_self_.ptr(), _99321_file);
		};
	};
	_98784_ok=_1a84728e6_check_type_with_refers(_self_, _98751_ta.get()._field_kind,_98771_l,jule::new_ptr<_1a851b660_Referencer>(_1a851b660_Referencer(_98751_ta.get()._field_ident,jule::Any(_98751_ta),(&(_98751_ta.get()._field_refers)))));
	if (((_98784_ok && (_1a8510753_arr(_98751_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1a8510753_arr(_98751_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto)) {
		_1a846e65c_push_err(_self_.ptr(), _98751_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_98784_ok=false;
	};
	return _98784_ok;
}



inline void _1a8476da1_check_type_alias_decl(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a850bead_TypeAlias>& _101046_ta, jule::Trait<_1a85260a4_Lookup> _101066_l) {
	if (_2110e9988_is_ignore_ident(_101046_ta.get()._field_ident)) {
		_1a846e65c_push_err(_self_.ptr(), _101046_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1a8476a93_check_type_alias_decl_kind(_self_, _101046_ta,_101066_l);
}



inline void _1a847716a_check_type_alias_decl_dup(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a850bead_TypeAlias>& _101850_ta) {
	if (_1a8470284_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101850_ta)),_101850_ta.get()._field_ident,_101850_ta.get()._field_cpp_linked)) {
		_1a846e65c_push_err(_self_.ptr(), _101850_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_101850_ta.get()._field_ident)}));
		_1a846e97b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1a8476a93_check_type_alias_decl_kind(_self_, _101850_ta,jule::Trait<_1a85260a4_Lookup>(_self_, 3));
}



inline jule::Bool _1a84773bd_check_type_alias_decls(jule::Ptr<_1a846bc42_Sema> _self_) {
	jule::Bool _102744_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1aa52ebe3:;
		if (it != expr.end()) {
			jule::Ptr<_1a850bead_TypeAlias> _102821_ta = *it;
			{
				_1a847716a_check_type_alias_decl_dup(_self_, _102821_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_102744_ok = false;
					return _102744_ok;
				};
			}
			_iter_next_1aa52ebe3:;
			++it;
			goto _iter_begin_1aa52ebe3;
		}
		_iter_end_1aa52ebe3:;
	};
	_102744_ok = true;
	return _102744_ok;
}



inline void _1a8477643_check_enum_items_dup(_1a846bc42_Sema* _self_, jule::Ptr<_1a83065e3_Enum> _103939_e) {
	{
		auto &expr = _103939_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1aa5363c0:;
		if (it != expr.end()) {
			jule::Ptr<_1a8306406_EnumItem> &_104016_item = *it;
			{
				if (_2110e9988_is_ignore_ident(_104016_item.get()._field_ident)) {
					_1a846e65c_push_err(&(*_self_), _104016_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _103939_e.get()._field_items;
						auto it = expr.begin();
						_iter_begin_1aa537a0e:;
						if (it != expr.end()) {
							jule::Ptr<_1a8306406_EnumItem> &_104424_citem = *it;
							{
								if ((_104016_item == _104424_citem)) {
									goto _iter_end_1aa537a0e;
								} else if ((_104016_item.get()._field_ident == _104424_citem.get()._field_ident)) {
									_1a846e65c_push_err(&(*_self_), _104016_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_104016_item.get()._field_ident)}));
									_1a846e97b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1aa537a0e;
								};
							}
							_iter_next_1aa537a0e:;
							++it;
							goto _iter_begin_1aa537a0e;
						}
						_iter_end_1aa537a0e:;
					};
				};
			}
			_iter_next_1aa5363c0:;
			++it;
			goto _iter_begin_1aa5363c0;
		}
		_iter_end_1aa5363c0:;
	};
}



inline void _1a84778b8_check_enum_items_str(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a83065e3_Enum>& _105745_e) {
	{
		auto &expr = _105745_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1aa539824:;
		if (it != expr.end()) {
			jule::Ptr<_1a8306406_EnumItem> _105821_item = *it;
			{
				if (_1a5dea2b6_auto_expr(_105821_item.ptr())) {
					_105821_item.get()._field_value=jule::new_ptr<_1a84d48e2_Value>(_1a84d48e2_Value(jule::Ptr<_210e87caa_Expr>(),jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::Ptr<_1a850cbe5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1a83a8de3_new_str(_105821_item.get()._field_ident)))));
					_105821_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_105821_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1a84d3869_Data> _106725_d = _1a84eea94_eval_expr(_1a84743ba_eval(_self_, jule::Trait<_1a85260a4_Lookup>(_self_, 3)), _105821_item.get()._field_value.get()._field_expr);;
					if ((_106725_d == nullptr)) {
						goto _iter_next_1aa539824;
					};
					if ((!(_1a84d422c_is_const(_106725_d.ptr())))) {
						_1a846e65c_push_err(_self_.ptr(), _105821_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1a84748b5_check_assign_type(_self_, false,_105745_e.get()._field_kind.get()._field_kind,_106725_d,_105821_item.get()._field_token);
					_105821_item.get()._field_value.get()._field_data=_106725_d;
				};
			}
			_iter_next_1aa539824:;
			++it;
			goto _iter_begin_1aa539824;
		}
		_iter_end_1aa539824:;
	};
}



inline void _1a8477b3d_check_enum_items_int(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a83065e3_Enum>& _108245_e) {
	jule::Ptr<_1a8512447_Prim> _108313_prim = _1a850eca2_prim(_108245_e.get()._field_kind.get()._field_kind.ptr());;
	jule::U64 _108417_max = static_cast<jule::U64>(_1a8445c93_max(_1a85127aa_to_str(_108313_prim.ptr())));;
	{
		auto &expr = _108245_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1aa5403eb:;
		if (it != expr.end()) {
			jule::I64 _108514_i = it - expr.begin();
			jule::Ptr<_1a8306406_EnumItem> _108521_item = *it;
			{
				if ((_108417_max == 0LLU)) {
					_1a846e65c_push_err(_self_.ptr(), _108521_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_108417_max)--;
				};
				if (_1a5dea2b6_auto_expr(_108521_item.ptr())) {
					_108521_item.get()._field_value=jule::new_ptr<_1a84d48e2_Value>(_1a84d48e2_Value(jule::Ptr<_210e87caa_Expr>(),jule::new_ptr<_1a84d3869_Data>()));
					{
						
						if (_1a844abaa_is_sig_int(_1a85127aa_to_str(_108313_prim.ptr()))) {
							_case_begin_1aa542860:;
							{
								_108521_item.get()._field_value.get()._field_data.get()._field_constant=static__1a83a8909_new_i64(static_cast<jule::I64>(static_cast<jule::I64>((_108417_max - (_108417_max - static_cast<jule::U64>(_108514_i))))));
							}
						}
						else {
							_case_begin_1aa542376:;
							{
								_108521_item.get()._field_value.get()._field_data.get()._field_constant=static__1a83a8a3b_new_u64(static_cast<jule::U64>((_108417_max - (_108417_max - static_cast<jule::U64>(_108514_i)))));
							}
						}
						_match_end_1aa542321:;
					};
					_108521_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_108521_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1a84d3869_Data> _110325_d = _1a84eea94_eval_expr(_1a84743ba_eval(_self_, jule::Trait<_1a85260a4_Lookup>(_self_, 3)), _108521_item.get()._field_value.get()._field_expr);;
					if ((_110325_d == nullptr)) {
						goto _iter_next_1aa5403eb;
					};
					if ((!(_1a84d422c_is_const(_110325_d.ptr())))) {
						_1a846e65c_push_err(_self_.ptr(), _108521_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1a84748b5_check_assign_type(_self_, false,_108245_e.get()._field_kind.get()._field_kind,_110325_d,_108521_item.get()._field_token);
					_108521_item.get()._field_value.get()._field_data=_110325_d;
				};
			}
			_iter_next_1aa5403eb:;
			++it;
			_108514_i++;
			goto _iter_begin_1aa5403eb;
		}
		_iter_end_1aa5403eb:;
	};
}



inline void _1a8477db3_check_enum_decl(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a83065e3_Enum>& _111840_e) {
	if (_2110e9988_is_ignore_ident(_111840_e.get()._field_ident)) {
		_1a846e65c_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a8470284_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_111840_e)),_111840_e.get()._field_ident,false)) {
		_1a846e65c_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_111840_e.get()._field_ident)}));
		_1a846e97b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_111840_e.get()._field_items.len() == 0LL)) {
		_1a846e65c_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>({jule::Any(_111840_e.get()._field_ident)}));
	};
	_1a8477643_check_enum_items_dup(_self_.ptr(), _111840_e);
	if ((_111840_e.get()._field_kind != nullptr)) {
		if ((!(_1a8472c9d_check_type(_self_, _111840_e.get()._field_kind,jule::Trait<_1a85260a4_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_111840_e.get()._field_kind=jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5)))));
	};
	jule::Ptr<_1a8512447_Prim> _114517_t = _1a850eca2_prim(_111840_e.get()._field_kind.get()._field_kind.ptr());;
	if ((_114517_t == nullptr)) {
		_1a846e65c_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a8515406_is_str(_114517_t.ptr())) {
			_case_begin_1aa54d5e6:;
			{
				_1a84778b8_check_enum_items_str(_self_, _111840_e);
			}
		}
		else if (_1a844b23d_is_int(_1a85127aa_to_str(_114517_t.ptr()))) {
			_case_begin_1aa54d360:;
			{
				_1a8477b3d_check_enum_items_int(_self_, _111840_e);
			}
		}
		else {
			_case_begin_1aa54a967:;
			{
				_1a846e65c_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa54c65b:;
	};
}



inline jule::Bool _1a8478127_check_enum_decls(jule::Ptr<_1a846bc42_Sema> _self_) {
	jule::Bool _116338_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1aa55074c:;
		if (it != expr.end()) {
			jule::Ptr<_1a83065e3_Enum> _116421_e = *it;
			{
				_1a8477db3_check_enum_decl(_self_, _116421_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_116338_ok = false;
					return _116338_ok;
				};
			}
			_iter_next_1aa55074c:;
			++it;
			goto _iter_begin_1aa55074c;
		}
		_iter_end_1aa55074c:;
	};
	_116338_ok = true;
	return _116338_ok;
}



inline jule::Bool _1a8478435_check_decl_generics(_1a846bc42_Sema* _self_, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>& _117539_generics) {
	jule::Bool _117572_ok = jule::Bool();
	_117572_ok=true;
	{
		auto &expr = _117539_generics;
		auto it = expr.begin();
		_iter_begin_1aa5525a6:;
		if (it != expr.end()) {
			jule::I64 _117713_i = it - expr.begin();
			jule::Ptr<_21110be1d_GenericDecl> &_117716_g = *it;
			{
				if (_2110e9988_is_ignore_ident(_117716_g.get()._field_ident)) {
					_1a846e65c_push_err(&(*_self_), _117716_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_117572_ok=false;
					goto _iter_next_1aa5525a6;
				};
				_julec_label_duplication_lookup:;
				{
					auto &expr = _117539_generics;
					auto it = expr.begin();
					_iter_begin_1aa553d05:;
					if (it != expr.end()) {
						jule::I64 _118617_j = it - expr.begin();
						jule::Ptr<_21110be1d_GenericDecl> &_118620_ct = *it;
						{
							{
								
								if ((_118617_j >= _117713_i)) {
									_case_begin_1aa554751:;
									{
										goto _iter_end_1aa553d05;
									}
								}
								else if ((_117716_g.get()._field_ident == _118620_ct.get()._field_ident)) {
									_case_begin_1aa5547c8:;
									{
										_1a846e65c_push_err(&(*_self_), _117716_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_117716_g.get()._field_ident)}));
										_1a846e97b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_117572_ok=false;
										goto _iter_end_1aa553d05;
									}
								}
								_match_end_1aa554641:;
							};
						}
						_iter_next_1aa553d05:;
						++it;
						_118617_j++;
						goto _iter_begin_1aa553d05;
					}
					_iter_end_1aa553d05:;
				};
			}
			_iter_next_1aa5525a6:;
			++it;
			_117713_i++;
			goto _iter_begin_1aa5525a6;
		}
		_iter_end_1aa5525a6:;
	};
	return _117572_ok;
}



inline jule::Bool _1a8478787_check_fn_decl_params_dup(_1a846bc42_Sema* _self_, jule::Ptr<_1a5b2eeb8_Fn>& _120244_f) {
	jule::Bool _120254_ok = jule::Bool();
	_120254_ok=true;
	_julec_label_check:;
	{
		auto &expr = _120244_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aa5575ab:;
		if (it != expr.end()) {
			jule::I64 _120513_i = it - expr.begin();
			jule::Ptr<_1a5b2d67b_Param> &_120516_p = *it;
			{
				{
					auto &expr = _120244_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1aa557e91:;
					if (it != expr.end()) {
						jule::Ptr<_21110be1d_GenericDecl> &_120720_g = *it;
						{
							if ((_120516_p.get()._field_ident == _120720_g.get()._field_ident)) {
								_120254_ok=false;
								_1a846e65c_push_err(&(*_self_), _120516_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_120516_p.get()._field_ident)}));
								_1a846e97b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1aa5575ab;
							};
						}
						_iter_next_1aa557e91:;
						++it;
						goto _iter_begin_1aa557e91;
					}
					_iter_end_1aa557e91:;
				};
				_julec_label_params_lookup:;
				{
					auto &expr = _120244_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1aa5581c2:;
					if (it != expr.end()) {
						jule::I64 _121717_j = it - expr.begin();
						jule::Ptr<_1a5b2d67b_Param> &_121720_jp = *it;
						{
							{
								
								if ((_121717_j >= _120513_i)) {
									_case_begin_1aa55a438:;
									{
										goto _iter_end_1aa5581c2;
									}
								}
								else if ((_2110e9c30_is_anon_ident(_120516_p.get()._field_ident) || _2110e9c30_is_anon_ident(_121720_jp.get()._field_ident))) {
									_case_begin_1aa55a4b0:;
									{
										goto _iter_end_1aa5581c2;
									}
								}
								else if ((_120516_p.get()._field_ident == _121720_jp.get()._field_ident)) {
									_case_begin_1aa55a537:;
									{
										_120254_ok=false;
										_1a846e65c_push_err(&(*_self_), _120516_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_120516_p.get()._field_ident)}));
										_1a846e97b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1aa5575ab;
									}
								}
								_match_end_1aa55a317:;
							};
						}
						_iter_next_1aa5581c2:;
						++it;
						_121717_j++;
						goto _iter_begin_1aa5581c2;
					}
					_iter_end_1aa5581c2:;
				};
			}
			_iter_next_1aa5575ab:;
			++it;
			_120513_i++;
			goto _iter_begin_1aa5575ab;
		}
		_iter_end_1aa5575ab:;
	};
	return _120254_ok;
}



inline jule::Bool _1a8478ac8_check_fn_decl_result_dup(_1a846bc42_Sema* _self_, jule::Ptr<_1a5b2eeb8_Fn>& _123644_f) {
	jule::Bool _123654_ok = jule::Bool();
	_123654_ok=true;
	if (_1a5b30419_is_void(_123644_f.ptr())) {
		return _123654_ok;
	};
	{
		auto &expr = _123644_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1aa55dc88:;
		if (it != expr.end()) {
			jule::I64 _124313_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> &_124316_v = *it;
			{
				if ((_2110e9988_is_ignore_ident(_124316_v.get()._field_kind) || _2110e9c30_is_anon_ident(_124316_v.get()._field_kind))) {
					goto _iter_next_1aa55dc88;
				};
				{
					auto &expr = _123644_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1aa55eecb:;
					if (it != expr.end()) {
						jule::Ptr<_21110be1d_GenericDecl> &_124820_g = *it;
						{
							if ((_124316_v.get()._field_kind == _124820_g.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1aa55eecb:;
						++it;
						goto _iter_begin_1aa55eecb;
					}
					_iter_end_1aa55eecb:;
				};
				{
					auto &expr = _123644_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1aa560d78:;
					if (it != expr.end()) {
						jule::Ptr<_1a5b2d67b_Param> &_125420_p = *it;
						{
							if ((_124316_v.get()._field_kind == _125420_p.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1aa560d78:;
						++it;
						goto _iter_begin_1aa560d78;
					}
					_iter_end_1aa560d78:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _123644_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1aa562154:;
					if (it != expr.end()) {
						jule::I64 _126217_j = it - expr.begin();
						jule::Ptr<_2110e7238_Token> &_126220_jv = *it;
						{
							{
								
								if ((_126217_j >= _124313_i)) {
									_case_begin_1aa562a39:;
									{
										goto _iter_end_1aa562154;
									}
								}
								else if ((_126220_jv.get()._field_kind == _124316_v.get()._field_kind)) {
									_case_begin_1aa562ab1:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1aa562929:;
							};
						}
						_iter_next_1aa562154:;
						++it;
						_126217_j++;
						goto _iter_begin_1aa562154;
					}
					_iter_end_1aa562154:;
				};
				goto _iter_next_1aa55dc88;
				_julec_label_exist:;
				_1a846e65c_push_err(&(*_self_), _124316_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_124316_v.get()._field_kind)}));
				_1a846e97b_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_123654_ok=false;
			}
			_iter_next_1aa55dc88:;
			++it;
			_124313_i++;
			goto _iter_begin_1aa55dc88;
		}
		_iter_end_1aa55dc88:;
	};
	return _123654_ok;
}



inline void _1a8478d3c_check_fn_decl_types(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5b2eeb8_Fn>& _128144_f) {
	jule::Slice<jule::Ptr<_21110be1d_GenericDecl>> _128217_generics = _128144_f.get()._field_generics;;
	if (((_128144_f.get()._field_owner != nullptr) && (_128144_f.get()._field_owner.get()._field_generics.len() != 0LL))) {
		_128217_generics=jule::append(_128217_generics,_128144_f.get()._field_owner.get()._field_generics);
	};
	{
		auto &expr = _128144_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aa566d29:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2d67b_Param> _128721_p = *it;
			{
				if ((!(_1a5b2dca8_is_self(_128721_p.ptr())))) {
					jule::Ptr<_1a850cbe5_TypeKind> _128925_kind = _1a8475245_build_non_generic_type_kind(_self_, _128721_p.get()._field_kind.get()._field_decl,_128217_generics);;
					_128721_p.get()._field_kind.get()._field_kind=_128925_kind;
				};
			}
			_iter_next_1aa566d29:;
			++it;
			goto _iter_begin_1aa566d29;
		}
		_iter_end_1aa566d29:;
	};
	if ((!(_1a5b30419_is_void(_128144_f.ptr())))) {
		jule::Ptr<_1a850cbe5_TypeKind> _129521_kind = _1a8475245_build_non_generic_type_kind(_self_, _128144_f.get()._field_result.get()._field_kind.get()._field_decl,_128217_generics);;
		_128144_f.get()._field_result.get()._field_kind.get()._field_kind=_129521_kind;
	};
}



inline void _1a8479106_check_fn_decl_prototype(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5b2eeb8_Fn>& _130248_f) {
	if ((_130248_f.get()._field_exceptional && _130248_f.get()._field_cpp_linked)) {
		_1a846e65c_push_err(_self_.ptr(), _130248_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_130248_f.get()._field_exceptional) {
		if (_1a5b308e2_is_entry_point(_130248_f.ptr())) {
			_1a846e65c_push_err(_self_.ptr(), _130248_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1a5b30b56_is_init(_130248_f.ptr())) {
			_1a846e65c_push_err(_self_.ptr(), _130248_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a8478435_check_decl_generics(_self_.ptr(), _130248_f.get()._field_generics)))) {
			_case_begin_1aa56a844:;
		}
		else if ((!(_1a8478787_check_fn_decl_params_dup(_self_.ptr(), _130248_f)))) {
			_case_begin_1aa56a8bb:;
		}
		else if ((!(_1a8478ac8_check_fn_decl_result_dup(_self_.ptr(), _130248_f)))) {
			_case_begin_1aa56c01b:;
		}
		_match_end_1aa56a745:;
	};
	_1a8478d3c_check_fn_decl_types(_self_, _130248_f);
}



inline void _1a84793ae_check_trait_decl_method(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5b2eeb8_Fn>& _132548_f) {
	if (_2110e9988_is_ignore_ident(_132548_f.get()._field_ident)) {
		_1a846e65c_push_err(_self_.ptr(), _132548_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1a8479106_check_fn_decl_prototype(_self_, _132548_f);
	_132548_f.get()._field_sema=_self_;
}



inline void _1a8479667_check_trait_decl_methods(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5e34531_Trait>& _133449_t) {
	{
		auto &expr = _133449_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aa570ae1:;
		if (it != expr.end()) {
			jule::I64 _133514_i = it - expr.begin();
			jule::Ptr<_1a5b2eeb8_Fn> _133521_f = *it;
			{
				_1a84793ae_check_trait_decl_method(_self_, _133521_f);
				_133449_t.get()._field_mutable=(_133449_t.get()._field_mutable || _133521_f.get()._field_params[0LL].get()._field_mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _133449_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1aa5728a1:;
					if (it != expr.end()) {
						jule::I64 _134617_j = it - expr.begin();
						jule::Ptr<_1a5b2eeb8_Fn> _134620_jf = *it;
						{
							{
								
								if ((_134617_j >= _133514_i)) {
									_case_begin_1aa5732a8:;
									{
										goto _iter_end_1aa5728a1;
									}
								}
								else if ((_133521_f.get()._field_ident == _134620_jf.get()._field_ident)) {
									_case_begin_1aa573330:;
									{
										_1a846e65c_push_err(_self_.ptr(), _133521_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_133521_f.get()._field_ident)}));
										_1a846e97b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1aa5728a1;
									}
								}
								_match_end_1aa573198:;
							};
						}
						_iter_next_1aa5728a1:;
						++it;
						_134617_j++;
						goto _iter_begin_1aa5728a1;
					}
					_iter_end_1aa5728a1:;
				};
			}
			_iter_next_1aa570ae1:;
			++it;
			_133514_i++;
			goto _iter_begin_1aa570ae1;
		}
		_iter_end_1aa570ae1:;
	};
}



inline void _1a84798cb_check_trait_decl(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5e34531_Trait>& _136541_t) {
	if (_2110e9988_is_ignore_ident(_136541_t.get()._field_ident)) {
		_1a846e65c_push_err(_self_.ptr(), _136541_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a8470284_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_136541_t)),_136541_t.get()._field_ident,false)) {
		_1a846e65c_push_err(_self_.ptr(), _136541_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_136541_t.get()._field_ident)}));
		_1a846e97b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1a8479667_check_trait_decl_methods(_self_, _136541_t);
}



inline jule::Bool _1a8479b40_check_trait_decls(jule::Ptr<_1a846bc42_Sema> _self_) {
	jule::Bool _137739_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1aa578852:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e34531_Trait> _137821_t = *it;
			{
				_1a84798cb_check_trait_decl(_self_, _137821_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_137739_ok = false;
					return _137739_ok;
				};
			}
			_iter_next_1aa578852:;
			++it;
			goto _iter_begin_1aa578852;
		}
		_iter_end_1aa578852:;
	};
	_137739_ok = true;
	return _137739_ok;
}



inline jule::Bool _1a847a03b_check_trait_impl_methods(_1a846bc42_Sema* _self_, jule::Ptr<_1a5e34531_Trait>& _138948_base, jule::Ptr<_1a8306d30_Impl>& _138963_ipl) {
	jule::Bool _138977_ok = jule::Bool();
	_138977_ok=true;
	{
		auto &expr = _138963_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aa57a9ca:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> &_139116_f = *it;
			{
				if ((_1a5de9caa_find_method(_138948_base.ptr(), _139116_f.get()._field_ident) == nullptr)) {
					_1a846e65c_push_err(&(*_self_), _139116_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>({jule::Any(_138948_base.get()._field_ident),jule::Any(_139116_f.get()._field_ident)}));
					_138977_ok=false;
				};
			}
			_iter_next_1aa57a9ca:;
			++it;
			goto _iter_begin_1aa57a9ca;
		}
		_iter_end_1aa57a9ca:;
	};
	return _138977_ok;
}



inline jule::Bool _1a847a3d2_impl_to_struct(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b396462a_Struct>& _140039_dest, jule::Ptr<_1a8306d30_Impl>& _140059_ipl) {
	jule::Bool _140073_ok = jule::Bool();
	_140073_ok=true;
	{
		auto &expr = _140059_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aa57d4c2:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _140421_f = *it;
			{
				if (((_1b396521e_find_method(_140039_dest.ptr(), _140421_f.get()._field_ident,_140421_f.get()._field_statically) != nullptr) || (_1b396583a_find_field(_140039_dest.ptr(), _140421_f.get()._field_ident) != nullptr))) {
					_1a846e65c_push_err(_self_.ptr(), _140421_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any(_140039_dest.get()._field_ident),jule::Any(_140421_f.get()._field_ident)}));
					_140073_ok=false;
					goto _iter_next_1aa57d4c2;
				};
				if (((_140039_dest.get()._field_generics.len() > 0LL) && (_140421_f.get()._field_generics.len() > 0LL))) {
					{
						auto &expr = _140421_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1aa580ccc:;
						if (it != expr.end()) {
							jule::Ptr<_21110be1d_GenericDecl> _141224_fg = *it;
							{
								{
									auto &expr = _140039_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1aa5814a3:;
									if (it != expr.end()) {
										jule::Ptr<_21110be1d_GenericDecl> _141328_dg = *it;
										{
											if ((_141224_fg.get()._field_ident == _141328_dg.get()._field_ident)) {
												_1a846e65c_push_err(_self_.ptr(), _141224_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_140073_ok=false;
											};
										}
										_iter_next_1aa5814a3:;
										++it;
										goto _iter_begin_1aa5814a3;
									}
									_iter_end_1aa5814a3:;
								};
							}
							_iter_next_1aa580ccc:;
							++it;
							goto _iter_begin_1aa580ccc;
						}
						_iter_end_1aa580ccc:;
					};
				};
				_1a84705a3_check_directives(_self_, _140421_f.get()._field_directives,jule::Any(_140421_f));
				_140421_f.get()._field_sema=_self_;
				_140421_f.get()._field_owner=_140039_dest;
				_140039_dest.get()._field_methods = jule::alloc_for_append(_140039_dest.get()._field_methods,1);_140039_dest.get()._field_methods.__push(_140421_f);;
			}
			_iter_next_1aa57d4c2:;
			++it;
			goto _iter_begin_1aa57d4c2;
		}
		_iter_end_1aa57d4c2:;
	};
	{
		auto &expr = _140059_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1aa5833d9:;
		if (it != expr.end()) {
			jule::Ptr<_1a8487246_Var> _142921_v = *it;
			{
				;
				if (((_1b396521e_find_method(_140039_dest.ptr(), _142921_v.get()._field_ident,true) != nullptr) || (_1b396552c_find_static(_140039_dest.ptr(), _142921_v.get()._field_ident) != nullptr))) {
					_1a846e65c_push_err(_self_.ptr(), _142921_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any(_140039_dest.get()._field_ident),jule::Any(_142921_v.get()._field_ident)}));
					_140073_ok=false;
					goto _iter_next_1aa5833d9;
				};
				_1a847ae71_check_var_decl(_self_, _142921_v,jule::Trait<_1a85260a4_Lookup>(_self_, 3));
				_1a84801b7_check_type_var(_self_, _142921_v,jule::Trait<_1a85260a4_Lookup>(_self_, 3));
				_140039_dest.get()._field_statics = jule::alloc_for_append(_140039_dest.get()._field_statics,1);_140039_dest.get()._field_statics.__push(_142921_v);;
			}
			_iter_next_1aa5833d9:;
			++it;
			goto _iter_begin_1aa5833d9;
		}
		_iter_end_1aa5833d9:;
	};
	return _140073_ok;
}



inline void _1a847a657_impl_trait(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a8306d30_Impl>& _144535_decl) {
	jule::Ptr<_1a850cbe5_TypeKind> _144617_base_t = _1a84737a4_select_type(_self_, _144535_decl.get()._field_base);;
	if ((_144617_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a5e34531_Trait> _145017_base = _1a8511204_trt(_144617_base_t.ptr());;
	if ((_145017_base == nullptr)) {
		_1a846e65c_push_err(_self_.ptr(), _144535_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_144617_base_t.ptr()))}));
		_1a846e97b_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a850cbe5_TypeKind> _145717_dest_t = _1a84737a4_select_type(_self_, _144535_decl.get()._field_dest);;
	if ((_145717_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1b39672a9_StructIns> _146117_dest_s = _1a8510e90_strct(_145717_dest_t.ptr());;
	if ((_146117_dest_s == nullptr)) {
		_1a846e65c_push_err(_self_.ptr(), _144535_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_145717_dest_t.ptr()))}));
		_1a846e97b_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b396462a_Struct> _146817_dest = _146117_dest_s.get()._field_decl;;
	if ((_2110ed01e_dir(_146817_dest.get()._field_token.get()._field_file.ptr()) != _2110ed01e_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1a846e65c_push_err(_self_.ptr(), _144535_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_145017_base.get()._field_implemented = jule::alloc_for_append(_145017_base.get()._field_implemented,1);_145017_base.get()._field_implemented.__push(_146817_dest);;
	_146817_dest.get()._field_implements = jule::alloc_for_append(_146817_dest.get()._field_implements,1);_146817_dest.get()._field_implements.__push(_145017_base);;
	if ((_144535_decl.get()._field_statics.len() > 0LL)) {
		_1a846e65c_push_err(_self_.ptr(), _144535_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a847a03b_check_trait_impl_methods(_self_.ptr(), _145017_base,_144535_decl)))) {
			_case_begin_1aa58e13c:;
			{
				return;;
			}
		}
		else if ((!(_1a847a3d2_impl_to_struct(_self_, _146817_dest,_144535_decl)))) {
			_case_begin_1aa58e3c3:;
			{
				return;;
			}
		}
		_match_end_1aa58c39e:;
	};
}



inline void _1a847a8cc_impl_struct(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a8306d30_Impl>& _149036_decl) {
	jule::Ptr<_1a850cbe5_TypeKind> _149117_dest_t = _1a84737a4_select_type(_self_, _149036_decl.get()._field_dest);;
	if ((_149117_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1b39672a9_StructIns> _149517_dest_s = _1a8510e90_strct(_149117_dest_t.ptr());;
	if ((_149517_dest_s == nullptr)) {
		_1a846e65c_push_err(_self_.ptr(), _149036_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_149117_dest_t.ptr()))}));
		_1a846e97b_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b396462a_Struct> _150217_dest = _149517_dest_s.get()._field_decl;;
	if ((_2110ed01e_dir(_150217_dest.get()._field_token.get()._field_file.ptr()) != _2110ed01e_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1a846e65c_push_err(_self_.ptr(), _149036_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a847a3d2_impl_to_struct(_self_, _150217_dest,_149036_decl)))) {
			_case_begin_1aa594450:;
			{
				return;;
			}
		}
		_match_end_1aa593c79:;
	};
}



inline void _1a847ab52_impl_impl(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a8306d30_Impl>& _151534_decl) {
	{
		
		if (_1a830701c_is_trait_impl(_151534_decl.ptr())) {
			_case_begin_1aa5952db:;
			{
				_1a847a657_impl_trait(_self_, _151534_decl);
			}
		}
		else if (_1a830714e_is_struct_impl(_151534_decl.ptr())) {
			_case_begin_1aa595363:;
			{
				_1a847a8cc_impl_struct(_self_, _151534_decl);
			}
		}
		_match_end_1aa5951cb:;
	};
}



inline void _1a847ae71_check_var_decl(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a8487246_Var>& _152639_decl, jule::Trait<_1a85260a4_Lookup> _152655_l) {
	if (_2110e9988_is_ignore_ident(_152639_decl.get()._field_ident)) {
		_1a846e65c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1a8487862_is_type_inferred(_152639_decl.ptr())) {
		if ((!(_1a84875ed_is_initialized(_152639_decl.ptr())))) {
			_1a846e65c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1a8472c9d_check_type(_self_, _152639_decl.get()._field_kind,_152655_l);
	};
	if ((_152639_decl.get()._field_constant && _152639_decl.get()._field_reference)) {
		_1a846e65c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1a84875ed_is_initialized(_152639_decl.ptr())))) {
		if (_152639_decl.get()._field_constant) {
			_1a846e65c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_152639_decl.get()._field_statically) {
			_1a846e65c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_152639_decl.get()._field_reference) {
			_1a846e65c_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1a847b1e6_check_global_var_decl(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a8487246_Var>& _156046_decl) {
	if (_1a8470284_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_156046_decl)),_156046_decl.get()._field_ident,_156046_decl.get()._field_cpp_linked)) {
		_1a846e65c_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_156046_decl.get()._field_ident)}));
		_1a846e97b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_156046_decl.get()._field_cpp_linked && _156046_decl.get()._field_constant)) {
		_1a846e65c_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_156046_decl.get()._field_cpp_linked)) && (!(_156046_decl.get()._field_constant))) && (!(_156046_decl.get()._field_statically)))) {
		_1a846e65c_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1a846e97b_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1a84705a3_check_directives(_self_, _156046_decl.get()._field_directives,jule::Any(_156046_decl));
	_1a847ae71_check_var_decl(_self_, _156046_decl,jule::Trait<_1a85260a4_Lookup>(_self_, 3));
}



inline jule::Bool _1a847b45a_check_global_decls(jule::Ptr<_1a846bc42_Sema> _self_) {
	jule::Bool _157940_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aa5a2408:;
		if (it != expr.end()) {
			jule::Ptr<_1a8487246_Var> _158021_decl = *it;
			{
				_1a847b1e6_check_global_var_decl(_self_, _158021_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_157940_ok = false;
					return _157940_ok;
				};
			}
			_iter_next_1aa5a2408:;
			++it;
			goto _iter_begin_1aa5a2408;
		}
		_iter_end_1aa5a2408:;
	};
	_157940_ok = true;
	return _157940_ok;
}



inline jule::Bool _1a847b856_check_struct_trait_impl(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b396462a_Struct>& _159148_strct, jule::Ptr<_1a5e34531_Trait>& _159169_trt) {
	jule::Bool _159184_ok = jule::Bool();
	{
		auto &expr = _159169_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aa5a44c6:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _159221_tf = *it;
			{
				jule::Bool _159321_exist = false;;
				jule::Ptr<_1a5b2eeb8_Fn> _159421_sf = _1b396521e_find_method(_159148_strct.ptr(), _159221_tf.get()._field_ident,_159221_tf.get()._field_statically);;
				jule::Ptr<_1a5b33164_FnIns> _159517_tf_k = _1a847583e_get_trait_check_fn_kind(_self_, _159221_tf);;
				if ((_159421_sf != nullptr)) {
					jule::Ptr<_1a5b33164_FnIns> _159725_sf_k = _1a847583e_get_trait_check_fn_kind(_self_, _159421_sf);;
					_159321_exist=(((_159517_tf_k.get()._field_decl.get()._field_public == _159725_sf_k.get()._field_decl.get()._field_public) && (_159517_tf_k.get()._field_decl.get()._field_ident == _159725_sf_k.get()._field_decl.get()._field_ident)) && _1a5b337d5_equals(_159517_tf_k, jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_159725_sf_k, 1)))));
				};
				if (_159321_exist) {
					jule::Ptr<_210eb33e0_Directive> _160321_d = _1a8507838_find_directive(_159421_sf.get()._field_directives,jule::Str("deprecated", 10));;
					if ((_160321_d != nullptr)) {
						_1a846e65c_push_err(_self_.ptr(), _160321_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_159184_ok=false;
				} else {
					;
					jule::Str _161025_s = _1a5b34770_get_kind_str(_159517_tf_k.ptr(), true);;
					if (_159221_tf.get()._field_public) {
						(_161025_s).buffer.insert(0, (jule::Str("pub ", 4)));;
					};
					_1a846e65c_push_err(_self_.ptr(), _159148_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>({jule::Any(_159169_trt.get()._field_ident),jule::Any(_161025_s)}));
					_159184_ok=false;
				};
			}
			_iter_next_1aa5a44c6:;
			++it;
			goto _iter_begin_1aa5a44c6;
		}
		_iter_end_1aa5a44c6:;
	};
	return _159184_ok;
}



inline jule::Bool _1a847bb53_check_struct_impls(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b396462a_Struct>& _162143_s) {
	jule::Bool _162157_ok = jule::Bool();
	_162157_ok=true;
	{
		auto &expr = _162143_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1aa5ab478:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e34531_Trait> _162321_trt = *it;
			{
				_162157_ok=(_1a847b856_check_struct_trait_impl(_self_, _162143_s,_162321_trt) && _162157_ok);
			}
			_iter_next_1aa5ab478:;
			++it;
			goto _iter_begin_1aa5ab478;
		}
		_iter_end_1aa5ab478:;
	};
	return _162157_ok;
}



inline jule::Bool _1a847be61_check_struct_fields(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b396462a_Struct>& _162944_st) {
	jule::Bool _162959_ok = jule::Bool();
	_162959_ok=true;
	jule::Ptr<_1a851c2dc_TypeChecker> _163217_tc = jule::new_ptr<_1a851c2dc_TypeChecker>(_1a851c2dc_TypeChecker(_self_,jule::Trait<_1a85260a4_Lookup>(_self_, 3),jule::new_ptr<_1a851b660_Referencer>(_1a851b660_Referencer(_162944_st.get()._field_ident,jule::Any(_162944_st),nullptr)),jule::Ptr<_2110e7238_Token>(),_162944_st.get()._field_generics,jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a850bead_TypeAlias>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool()));;
	jule::I64 _164213_n = _162944_st.get()._field_instances.len();;
	{
		auto &expr = _162944_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1aa5adc94:;
		if (it != expr.end()) {
			jule::Ptr<_1b38b3d0a_Field> _164321_f = *it;
			{
				_164321_f.get()._field_owner=_162944_st;
				_164321_f.get()._field_kind.get()._field_kind=_1a85238ed_check_decl(_163217_tc.ptr(), _164321_f.get()._field_kind.get()._field_decl);
				_162959_ok=((_164321_f.get()._field_kind.get()._field_kind != nullptr) && _162959_ok);
				{
					auto &expr = _162944_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1aa5b047c:;
					if (it != expr.end()) {
						jule::Ptr<_1b38b3d0a_Field> _164820_cf = *it;
						{
							if ((_164321_f == _164820_cf)) {
								goto _iter_end_1aa5b047c;
							} else if ((_164321_f.get()._field_ident == _164820_cf.get()._field_ident)) {
								_1a846e65c_push_err(_self_.ptr(), _164321_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_164321_f.get()._field_ident)}));
								_1a846e97b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_162959_ok=false;
							};
						}
						_iter_next_1aa5b047c:;
						++it;
						goto _iter_begin_1aa5b047c;
					}
					_iter_end_1aa5b047c:;
				};
			}
			_iter_next_1aa5adc94:;
			++it;
			goto _iter_begin_1aa5adc94;
		}
		_iter_end_1aa5adc94:;
	};
	if ((_162959_ok && (_164213_n != _162944_st.get()._field_instances.len()))) {
		_163217_tc.get()._field_referencer=nullptr;
		_162944_st.get()._field_instances=_162944_st.get()._field_instances.slice(0LL,_164213_n);
		{
			auto &expr = _162944_st.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aa5b277b:;
			if (it != expr.end()) {
				jule::Ptr<_1b38b3d0a_Field> _166325_f = *it;
				{
					_166325_f.get()._field_kind.get()._field_kind=_1a85238ed_check_decl(_163217_tc.ptr(), _166325_f.get()._field_kind.get()._field_decl);
				}
				_iter_next_1aa5b277b:;
				++it;
				goto _iter_begin_1aa5b277b;
			}
			_iter_end_1aa5b277b:;
		};
	};
	return _162959_ok;
}



inline jule::Bool _1a847c2b3_check_struct_decl_methods(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b396462a_Struct>& _167150_s) {
	jule::Bool _167164_ok = jule::Bool();
	{
		auto &expr = _167150_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aa5b42e9:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _167221_m = *it;
			{
				_1a8478d3c_check_fn_decl_types(_self_, _167221_m);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_167164_ok = false;
					return _167164_ok;
				};
			}
			_iter_next_1aa5b42e9:;
			++it;
			goto _iter_begin_1aa5b42e9;
		}
		_iter_end_1aa5b42e9:;
	};
	_167164_ok = true;
	return _167164_ok;
}



inline void _1a847c527_check_struct_decl(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b396462a_Struct>& _168142_s) {
	if (_2110e9988_is_ignore_ident(_168142_s.get()._field_ident)) {
		_1a846e65c_push_err(_self_.ptr(), _168142_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a8470284_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_168142_s)),_168142_s.get()._field_ident,_168142_s.get()._field_cpp_linked)) {
		_1a846e65c_push_err(_self_.ptr(), _168142_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_168142_s.get()._field_ident)}));
		_1a846e97b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1a84705a3_check_directives(_self_, _168142_s.get()._field_directives,jule::Any(_168142_s));
	_168142_s.get()._field_sema=_self_;
	{
		
		if ((!(_1a8478435_check_decl_generics(_self_.ptr(), _168142_s.get()._field_generics)))) {
			_case_begin_1aa5b86c7:;
		}
		else if ((!(_1a847be61_check_struct_fields(_self_, _168142_s)))) {
			_case_begin_1aa5b873d:;
		}
		else if ((!(_1a847c2b3_check_struct_decl_methods(_self_, _168142_s)))) {
			_case_begin_1aa5b87a4:;
		}
		else if ((!(_1a847bb53_check_struct_impls(_self_, _168142_s)))) {
			_case_begin_1aa5b881a:;
		}
		_match_end_1aa5b85b7:;
	};
}



inline jule::Bool _1a847c78b_check_struct_decls(jule::Ptr<_1a846bc42_Sema> _self_) {
	jule::Bool _170140_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1aa5ba850:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> _170221_s = *it;
			{
				_1a847c527_check_struct_decl(_self_, _170221_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_170140_ok = false;
					return _170140_ok;
				};
			}
			_iter_next_1aa5ba850:;
			++it;
			goto _iter_begin_1aa5ba850;
		}
		_iter_end_1aa5ba850:;
	};
	_170140_ok = true;
	return _170140_ok;
}



inline void _1a847ca11_check_fn_decl(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5b2eeb8_Fn>& _171438_f) {
	if (_2110e9988_is_ignore_ident(_171438_f.get()._field_ident)) {
		_1a846e65c_push_err(_self_.ptr(), _171438_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1a84705a3_check_directives(_self_, _171438_f.get()._field_directives,jule::Any(_171438_f));
	_171438_f.get()._field_sema=_self_;
	_1a8479106_check_fn_decl_prototype(_self_, _171438_f);
	if (_1a8470284_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_171438_f)),_171438_f.get()._field_ident,_171438_f.get()._field_cpp_linked)) {
		if ((_171438_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1a5b2eeb8_Fn> _172621_init = _1a846d529_find_fn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_172621_init != nullptr)) {
				return;;
			};
		};
		_1a846e65c_push_err(_self_.ptr(), _171438_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_171438_f.get()._field_ident)}));
		_1a846e97b_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a847cc75_check_fn_decls(jule::Ptr<_1a846bc42_Sema> _self_) {
	jule::Bool _173736_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1aa5c19ee:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _173821_f = *it;
			{
				_1a847ca11_check_fn_decl(_self_, _173821_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_173736_ok = false;
					return _173736_ok;
				};
			}
			_iter_next_1aa5c19ee:;
			++it;
			goto _iter_begin_1aa5c19ee;
		}
		_iter_end_1aa5c19ee:;
	};
	_173736_ok = true;
	return _173736_ok;
}



inline void _1a847d13d_push_cycle_error(_1a846bc42_Sema* _self_, jule::Ptr<_1b396462a_Struct>& _174932_st1, jule::Ptr<_1b396462a_Struct>& _174947_st2, jule::Str& _174966_message) {
	;
	jule::Str _175213_refers_to = _210c4036a_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_174932_st1.get()._field_ident),jule::Any(_174947_st2.get()._field_ident)}));;
	(_174966_message).buffer.insert(0, (((_20ecdd3a3_repeat(jule::Str(" ", 1),4LL) + _175213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a847d58e_check_cross_cycle(_1a846bc42_Sema* _self_, jule::Ptr<_1b396462a_Struct>& _175633_st1, jule::Ptr<_1b396462a_Struct>& _175648_st2, jule::Str& _175667_message) {
	{
		auto &expr = _175648_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1aa5c5c78:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> &_175716_u = *it;
			{
				if ((_175716_u == _175633_st1)) {
					_1a847d13d_push_cycle_error(&(*_self_), _175648_st2,_175716_u,_175667_message);
					return false;
				};
				if ((!(_1a847d58e_check_cross_cycle(&(*_self_), _175633_st1,_175716_u,_175667_message)))) {
					_1a847d13d_push_cycle_error(&(*_self_), _175648_st2,_175716_u,_175667_message);
					return false;
				};
			}
			_iter_next_1aa5c5c78:;
			++it;
			goto _iter_begin_1aa5c5c78;
		}
		_iter_end_1aa5c5c78:;
	};
	return true;
}



inline jule::Bool _1a847da56_check_struct_derive_illegal_cycles(_1a846bc42_Sema* _self_, jule::Str _177253_derive, jule::Ptr<_1b396462a_Struct>& _177267_st1, jule::Ptr<_1a850cbe5_TypeKind>& _177286_k) {
	jule::Bool _1772102_ok = jule::Bool();
	jule::Ptr<_1b396462a_Struct> _177317_st2 = _1a851b000_get_struct_from_kind(_177286_k);;
	if ((_177317_st2 == nullptr)) {
		_1772102_ok = true;
		return _1772102_ok;
	};
	if ((_177267_st1 == _177317_st2)) {
		_1a846e65c_push_err(&(*_self_), _177267_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>({jule::Any(_177253_derive),jule::Any(_177267_st1.get()._field_ident)}));
		_1772102_ok = false;
		return _1772102_ok;
	};
	jule::Str _178517_message = jule::Str();;
	if ((!(_1a847d58e_check_cross_cycle(&(*_self_), _177267_st1,_177317_st2,_178517_message)))) {
		jule::Str _178821_err_msg = _178517_message;;
		_178517_message=jule::Str();
		_1a847d13d_push_cycle_error(&(*_self_), _177267_st1,_177317_st2,_178517_message);
		_178821_err_msg=(_178821_err_msg + _178517_message);
		_1a846e65c_push_err(&(*_self_), _177267_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>({jule::Any(_177253_derive),jule::Any(_178821_err_msg)}));
		_1772102_ok = false;
		return _1772102_ok;
	};
	_1772102_ok = true;
	return _1772102_ok;
}



inline jule::Bool _1a847dd75_check_struct_ins_derive_clone(_1a846bc42_Sema* _self_, jule::Ptr<_1b39672a9_StructIns> _179952_st) {
	jule::Bool _179970_ok = jule::Bool();
	if ((!(_1b3965e56_is_derives(_179952_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_179970_ok = true;
		return _179970_ok;
	};
	{
		auto &expr = _179952_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1aa5cd445:;
		if (it != expr.end()) {
			jule::Ptr<_1b396694b_FieldIns> _180421_f = *it;
			{
				if ((_180421_f.get()._field_kind == nullptr)) {
					goto _iter_next_1aa5cd445;
				};
				if ((!(_1a850e7c9_supports_cloning(_180421_f.get()._field_kind.ptr())))) {
					_1a846e65c_push_err(&(*_self_), _179952_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_180421_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_179970_ok = false;
					return _179970_ok;
				};
				if ((!(_1a847da56_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_179952_st.get()._field_decl,_180421_f.get()._field_kind)))) {
					_179970_ok = false;
					return _179970_ok;
				};
			}
			_iter_next_1aa5cd445:;
			++it;
			goto _iter_begin_1aa5cd445;
		}
		_iter_end_1aa5cd445:;
	};
	_179970_ok = true;
	return _179970_ok;
}



inline jule::Bool _1a847e1b6_check_struct_derive_clone(_1a846bc42_Sema* _self_, jule::Ptr<_1b396462a_Struct>& _182249_st) {
	return _1a847dd75_check_struct_ins_derive_clone(&(*_self_), _1b3964a59_instance(_182249_st));
}



inline jule::Bool _1a847e419_check_file_derives(_1a846bc42_Sema* _self_) {
	jule::Bool _182639_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1aa5d27bd:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> _182821_st = *it;
			{
				_182639_ok=_1a847e1b6_check_struct_derive_clone(&(*_self_), _182821_st);
				if ((!(_182639_ok))) {
					goto _iter_end_1aa5d27bd;
				};
			}
			_iter_next_1aa5d27bd:;
			++it;
			goto _iter_begin_1aa5d27bd;
		}
		_iter_end_1aa5d27bd:;
	};
	return _182639_ok;
}



inline void _1a847e5e5_check_package_derives(_1a846bc42_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1aa5d3956:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _183921_f = *it;
			{
				_1a846e294_set_current_file(&(*_self_), _183921_f);
				jule::Bool _184117_ok = _1a847e419_check_file_derives(&(*_self_));;
				if ((!(_184117_ok))) {
					return;;
				};
			}
			_iter_next_1aa5d3956:;
			++it;
			goto _iter_begin_1aa5d3956;
		}
		_iter_end_1aa5d3956:;
	};
}



inline void _1a847e7c1_check_package_decls(jule::Ptr<_1a846bc42_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa5d512d:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _185121_f = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _185121_f);
				if ((!(_1a84773bd_check_type_alias_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aa5d512d:;
			++it;
			goto _iter_begin_1aa5d512d;
		}
		_iter_end_1aa5d512d:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa5d534d:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _185821_f = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _185821_f);
				if ((!(_1a8479b40_check_trait_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aa5d534d:;
			++it;
			goto _iter_begin_1aa5d534d;
		}
		_iter_end_1aa5d534d:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa5d61a6:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _186521_f = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _186521_f);
				if ((!(_1a847b45a_check_global_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aa5d61a6:;
			++it;
			goto _iter_begin_1aa5d61a6;
		}
		_iter_end_1aa5d61a6:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa5d6ea9:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _187221_f = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _187221_f);
				if ((!(_1a847cc75_check_fn_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aa5d6ea9:;
			++it;
			goto _iter_begin_1aa5d6ea9;
		}
		_iter_end_1aa5d6ea9:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa5d7bd0:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _187921_f = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _187921_f);
				if ((!(_1a847c78b_check_struct_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aa5d7bd0:;
			++it;
			goto _iter_begin_1aa5d7bd0;
		}
		_iter_end_1aa5d7bd0:;
	};
	_1a847e5e5_check_package_derives(_self_.ptr());
}



inline void _1a847eb34_check_data_for_type_inference(_1a846bc42_Sema* _self_, jule::Ptr<_1a84d3869_Data>& _188949_d, jule::Ptr<_2110e7238_Token>& _188960_err_token) {
	{
		
		if (_1a84d3c54_is_nil(_188949_d.ptr())) {
			_case_begin_1aa5da485:;
			{
				_1a846e65c_push_err(&(*_self_), _188960_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1a84d3eb8_is_void(_188949_d.ptr())) {
			_case_begin_1aa5da50c:;
			{
				_1a846e65c_push_err(&(*_self_), _188960_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_188949_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1aa5da584:;
			{
				_1a846e65c_push_err(&(*_self_), _188960_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa5da386:;
	};
}



inline void _1a847ed98_check_var(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a8487246_Var>& _190034_v) {
	if (_190034_v.get()._field_cpp_linked) {
		return;;
	};
	if (_1a8487862_is_type_inferred(_190034_v.ptr())) {
		_190034_v.get()._field_kind=jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),_190034_v.get()._field_value.get()._field_data.get()._field_kind));
		_1a847eb34_check_data_for_type_inference(_self_.ptr(), _190034_v.get()._field_value.get()._field_data,_190034_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1a851855d_Arr> _191121_arr = _1a8510753_arr(_190034_v.get()._field_kind.get()._field_kind.ptr());;
		if ((_191121_arr != nullptr)) {
			if (_191121_arr.get()._field_auto) {
				jule::Ptr<_1a851855d_Arr> _191425_data_arr = _1a8510753_arr(_190034_v.get()._field_value.get()._field_data.get()._field_kind.ptr());;
				if ((_191425_data_arr != nullptr)) {
					_191121_arr.get()._field_n=_191425_data_arr.get()._field_n;
				};
			};
		};
		_1a84748b5_check_assign_type(_self_, _190034_v.get()._field_reference,_190034_v.get()._field_kind.get()._field_kind,_190034_v.get()._field_value.get()._field_data,_190034_v.get()._field_value.get()._field_expr.get()._field_token);
	};
	if ((_190034_v.get()._field_reference && (!(_1a851a373_is_valid_for_ref(_190034_v.get()._field_kind.get()._field_kind))))) {
		_1a846e65c_push_err(_self_.ptr(), _190034_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_190034_v.get()._field_kind.get()._field_kind.ptr()))}));
	};
	_1a84766db_check_validity_for_init_expr(_self_, _190034_v.get()._field_mutable,_190034_v.get()._field_reference,_190034_v.get()._field_kind.get()._field_kind,_190034_v.get()._field_value.get()._field_data,_190034_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_190034_v.get()._field_constant) {
		if ((!(_1a84d422c_is_const(_190034_v.get()._field_value.get()._field_data.ptr())))) {
			_1a846e65c_push_err(_self_.ptr(), _190034_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_190034_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	};
	if ((_1a85116cc_tup(_190034_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_190034_v.get()._field_kind.get()._field_kind=nullptr;
	};
}



inline void _1a84801b7_check_type_var(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a8487246_Var>& _194939_decl, jule::Trait<_1a85260a4_Lookup> _194955_l) {
	if ((_194939_decl.get()._field_cpp_linked || (!(_1a84875ed_is_initialized(_194939_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1a84d53d7_Eval> _195417_eval = nullptr;;
	if ((_194939_decl.get()._field_kind != nullptr)) {
		_195417_eval=_1a8473c05_evalpd(_self_, _194955_l,_194939_decl.get()._field_kind.get()._field_kind,_194939_decl);
	} else {
		_195417_eval=_1a8473c05_evalpd(_self_, _194955_l,nullptr,_194939_decl);
	};
	_195417_eval.get()._field_immutable=(!(_194939_decl.get()._field_mutable));
	_194939_decl.get()._field_value.get()._field_data=_1a84eea94_eval_expr(_195417_eval, _194939_decl.get()._field_value.get()._field_expr);
	if ((_194939_decl.get()._field_value.get()._field_data == nullptr)) {
		return;;
	};
	_1a847ed98_check_var(_self_, _194939_decl);
}



inline void _1a8480393_check_global_types(jule::Ptr<_1a846bc42_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aa5ea077:;
		if (it != expr.end()) {
			jule::Ptr<_1a8487246_Var> _197121_decl = *it;
			{
				if (((_1a84875ed_is_initialized(_197121_decl.ptr()) && (_197121_decl.get()._field_value.get()._field_data == nullptr)) || (_1a8487862_is_type_inferred(_197121_decl.ptr()) && (_197121_decl.get()._field_kind.get()._field_kind == nullptr)))) {
					_1a84801b7_check_type_var(_self_, _197121_decl,jule::Trait<_1a85260a4_Lookup>(_self_, 3));
				};
			}
			_iter_next_1aa5ea077:;
			++it;
			goto _iter_begin_1aa5ea077;
		}
		_iter_end_1aa5ea077:;
	};
}



inline jule::Ptr<_1a5b33164_FnIns> _1a848074a_ready_to_check_fn(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b39672a9_StructIns>& _198142_s, jule::Ptr<_1a5b2eeb8_Fn>& _198162_f) {
	jule::Ptr<_1a5b33164_FnIns> _198217_ins = _1a5b31b13_instance(_198162_f);;
	if ((_198162_f.get()._field_instances.len() != 0LL)) {
		return _198217_ins;
	};
	_198217_ins.get()._field_owner=_198142_s;
	_1a5b31e21_append_instance(_198162_f.ptr(), _198217_ins);
	_1a8475b3b_reload_fn_ins_types(_self_, _198217_ins);
	_198217_ins.get()._field_reloaded=true;
	return _198217_ins;
}



inline void _1a8480a69_check_type_method(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b39672a9_StructIns>& _199342_s, jule::Ptr<_1a5b2eeb8_Fn>& _199362_f) {
	if (_199362_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_199362_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	_1a848074a_ready_to_check_fn(_self_, _199342_s,_199362_f);
	{
		auto &expr = _199362_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa600be8:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b33164_FnIns> _200421_ins = *it;
			{
				if ((_200421_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
					goto _iter_next_1aa600be8;
				};
				_1a8482cbe_check_fn_ins(_self_, _200421_ins);
			}
			_iter_next_1aa600be8:;
			++it;
			goto _iter_begin_1aa600be8;
		}
		_iter_end_1aa600be8:;
	};
}



inline void _1a8480cde_check_field_defaults(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b39672a9_StructIns>& _201345_ins) {
	jule::Ptr<_1a84d53d7_Eval> _201417_eval = _1a84743ba_eval(_self_, jule::Trait<_1a85260a4_Lookup>(_self_, 3));;
	{
		auto &expr = _201345_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1aa60303b:;
		if (it != expr.end()) {
			jule::Ptr<_1b396694b_FieldIns> _201521_f = *it;
			{
				if ((_201521_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1aa60303b;
				};
				_201417_eval.get()._field_prefix=_201521_f.get()._field_kind;
				_201417_eval.get()._field_field=_201521_f;
				_201521_f.get()._field_default=_1a84eea94_eval_expr(_201417_eval, _201521_f.get()._field_decl.get()._field_default);
				if ((_201521_f.get()._field_default == nullptr)) {
					goto _iter_next_1aa60303b;
				};
				;
				_1a84748b5_check_assign_type(_self_, false,_201521_f.get()._field_kind,_201521_f.get()._field_default,_201521_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1aa60303b:;
			++it;
			goto _iter_begin_1aa60303b;
		}
		_iter_end_1aa60303b:;
	};
}



inline jule::Ptr<_1a5b33164_FnIns> _1a8481240_check_struct_ins_op(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b39672a9_StructIns>& _203544_s, jule::Ptr<_1a5b2eeb8_Fn>& _203564_f, jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)> _203572_p) {
	if (((_203564_f == nullptr) || (_203564_f.get()._field_generics.len() > 0LL))) {
		return nullptr;
	};
	jule::Ptr<_1a5b33164_FnIns> _203917_ins = _1a848074a_ready_to_check_fn(_self_, _203544_s,_203564_f);;
	if (_203572_p(_203564_f)) {
		return _203917_ins;
	};
	return nullptr;
}



inline void _1a84814b5_check_struct_ins(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b39672a9_StructIns>& _204641_s) {
	_1a8480cde_check_field_defaults(_self_, _204641_s);
	{
		auto &expr = _204641_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aa609460:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _204821_f = *it;
			{
				_1a8480a69_check_type_method(_self_, _204641_s,_204821_f);
			}
			_iter_next_1aa609460:;
			++it;
			goto _iter_begin_1aa609460;
		}
		_iter_end_1aa609460:;
	};
}



inline void _1a848173a_check_type_struct(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b396462a_Struct>& _205342_s) {
	if (_205342_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_205342_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_205342_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1b39672a9_StructIns> _206421_ins = _1b3964a59_instance(_205342_s);;
		_206421_ins.get()._field_checked=true;
		_1b3964d67_append_instance(_205342_s.ptr(), _206421_ins);
	};
	{
		auto &expr = _205342_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa60c2ba:;
		if (it != expr.end()) {
			jule::Ptr<_1b39672a9_StructIns> _206921_ins = *it;
			{
				_1a84814b5_check_struct_ins(_self_, _206921_ins);
			}
			_iter_next_1aa60c2ba:;
			++it;
			goto _iter_begin_1aa60c2ba;
		}
		_iter_end_1aa60c2ba:;
	};
}



inline void _1a8481916_check_struct_types(jule::Ptr<_1a846bc42_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1aa60d1de:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> _207521_s = *it;
			{
				_1a848173a_check_type_struct(_self_, _207521_s);
			}
			_iter_next_1aa60d1de:;
			++it;
			goto _iter_begin_1aa60d1de;
		}
		_iter_end_1aa60d1de:;
	};
}



inline void _1a8481bd0_check_struct_ins_operators(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b39672a9_StructIns> _208050_s) {
	{
		auto &expr = _208050_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aa60e476:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _208121_m = *it;
			{
				{
					auto &_match_expr{ _208121_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1aa60e971:;
						{
							_208050_s.get()._field_operators._field_eq=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _208468_f) mutable -> jule::Bool {
								return static__1a8488c4d_eq(_208468_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1aa60eeb0:;
						{
							_208050_s.get()._field_operators._field_gt=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _208668_f) mutable -> jule::Bool {
								return static__1a8488ee5_gt(_208668_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1aa610026:;
						{
							_208050_s.get()._field_operators._field_gt_eq=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _208871_f) mutable -> jule::Bool {
								return static__1a848928c_gt_eq(_208871_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1aa61008c:;
						{
							_208050_s.get()._field_operators._field_lt=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _209068_f) mutable -> jule::Bool {
								return static__1a8489534_lt(_209068_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1aa610103:;
						{
							_208050_s.get()._field_operators._field_lt_eq=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _209271_f) mutable -> jule::Bool {
								return static__1a84897cb_lt_eq(_209271_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1aa61017a:;
						{
							_208050_s.get()._field_operators._field_shl=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _209469_f) mutable -> jule::Bool {
								return static__1a8489db4_shl(_209469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1aa610202:;
						{
							_208050_s.get()._field_operators._field_shr=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _209669_f) mutable -> jule::Bool {
								return static__1a848a15b_shr(_209669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1aa610279:;
						{
							_208050_s.get()._field_operators._field_add=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _209869_f) mutable -> jule::Bool {
								return static__1a848a403_add(_209869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1aa610301:;
						{
							_208050_s.get()._field_operators._field_sub=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _210069_f) mutable -> jule::Bool {
								return static__1a848a69a_sub(_210069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1aa610378:;
						{
							_208050_s.get()._field_operators._field_div=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _210269_f) mutable -> jule::Bool {
								return static__1a848a942_div(_210269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1aa610400:;
						{
							_208050_s.get()._field_operators._field_mul=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _210469_f) mutable -> jule::Bool {
								return static__1a848abd9_mul(_210469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1aa610477:;
						{
							_208050_s.get()._field_operators._field_mod=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _210669_f) mutable -> jule::Bool {
								return static__1a848ae81_mod(_210669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1aa6104ee:;
						{
							_208050_s.get()._field_operators._field_bit_and=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _210873_f) mutable -> jule::Bool {
								return static__1a848b228_bit_and(_210873_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1aa610576:;
						{
							_208050_s.get()._field_operators._field_bit_or=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _211072_f) mutable -> jule::Bool {
								return static__1a848b4c0_bit_or(_211072_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1aa6105ed:;
						{
							_208050_s.get()._field_operators._field_bit_xor=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _211273_f) mutable -> jule::Bool {
								return static__1a848b767_bit_xor(_211273_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1aa610675:;
						{
							_208050_s.get()._field_operators._field_neg=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _211469_f) mutable -> jule::Bool {
								return static__1a848bd50_neg(_211469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1aa6106ec:;
						{
							_208050_s.get()._field_operators._field_pos=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _211669_f) mutable -> jule::Bool {
								return static__1a848c0e7_pos(_211669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1aa610774:;
						{
							_208050_s.get()._field_operators._field_bit_not=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _211873_f) mutable -> jule::Bool {
								return static__1a848c38e_bit_not(_211873_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1aa6107eb:;
						{
							_208050_s.get()._field_operators._field_add_assign=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _212076_f) mutable -> jule::Bool {
								return static__1a848c977_add_assign(_212076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1aa610873:;
						{
							_208050_s.get()._field_operators._field_sub_assign=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _212276_f) mutable -> jule::Bool {
								return static__1a848cc1e_sub_assign(_212276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1aa6108ea:;
						{
							_208050_s.get()._field_operators._field_div_assign=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _212476_f) mutable -> jule::Bool {
								return static__1a848ceb6_div_assign(_212476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1aa610972:;
						{
							_208050_s.get()._field_operators._field_mul_assign=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _212676_f) mutable -> jule::Bool {
								return static__1a848d25d_mul_assign(_212676_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1aa6109e9:;
						{
							_208050_s.get()._field_operators._field_mod_assign=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _212876_f) mutable -> jule::Bool {
								return static__1a848d505_mod_assign(_212876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1aa610a71:;
						{
							_208050_s.get()._field_operators._field_shl_assign=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _213076_f) mutable -> jule::Bool {
								return static__1a848d79c_shl_assign(_213076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1aa610ae8:;
						{
							_208050_s.get()._field_operators._field_shr_assign=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _213276_f) mutable -> jule::Bool {
								return static__1a848da44_shr_assign(_213276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1aa610b70:;
						{
							_208050_s.get()._field_operators._field_bit_or_assign=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _213479_f) mutable -> jule::Bool {
								return static__1a848dcdb_bit_or_assign(_213479_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1aa610be7:;
						{
							_208050_s.get()._field_operators._field_bit_and_assign=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _213680_f) mutable -> jule::Bool {
								return static__1a848e083_bit_and_assign(_213680_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1aa610c6e:;
						{
							_208050_s.get()._field_operators._field_bit_xor_assign=_1a8481240_check_struct_ins_op(_self_, _208050_s,_208121_m,jule::Fn<jule::Bool(jule::Ptr<_1a5b2eeb8_Fn>)>([=](jule::Ptr<_1a5b2eeb8_Fn> _213880_f) mutable -> jule::Bool {
								return static__1a848e32a_bit_xor_assign(_213880_f);
							}));
						}
					}
					_match_end_1aa60ebc4:;
				};
			}
			_iter_next_1aa60e476:;
			++it;
			goto _iter_begin_1aa60e476;
		}
		_iter_end_1aa60e476:;
	};
}



inline void _1a8481e88_check_type_struct_operators(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1b396462a_Struct>& _214352_s) {
	if (_214352_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_214352_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_214352_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1b39672a9_StructIns> _215421_ins = _1b3964a59_instance(_214352_s);;
		_215421_ins.get()._field_checked=true;
		_1b3964d67_append_instance(_214352_s.ptr(), _215421_ins);
	};
	_1a8481bd0_check_struct_ins_operators(_self_, _214352_s.get()._field_instances[0LL]);
}



inline void _1a8482197_check_struct_types_operators(jule::Ptr<_1a846bc42_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1aa63c163:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> _216321_s = *it;
			{
				_1a8481e88_check_type_struct_operators(_self_, _216321_s);
			}
			_iter_next_1aa63c163:;
			++it;
			goto _iter_begin_1aa63c163;
		}
		_iter_end_1aa63c163:;
	};
}



inline void _1a848240b_check_rets(_1a846bc42_Sema* _self_, jule::Ptr<_1a5b33164_FnIns>& _216834_f) {
	if (_1a5b30419_is_void(_216834_f.get()._field_decl.ptr())) {
		return;;
	};
	_1a84845a6_MissingRetChecker _217213_mrc = static__1a848496e_new();;
	jule::Bool _217313_ok = _1a8485981_check(&_217213_mrc, _216834_f.get()._field_scope);;
	if ((!(_217313_ok))) {
		_1a846e65c_push_err(&(*_self_), _216834_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1a848272a_check_fn_ins_sc(_1a846bc42_Sema* _self_, jule::Ptr<_1a5b33164_FnIns>& _217939_f, jule::Ptr<_1a844d4e8_ScopeChecker>& _217955_sc) {
	if (_217939_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	_1a846a9dd_append_ret_vars(_217955_sc.get()._field_table.get()._field_vars,_217939_f);
	_1a846ac96_append_param_vars(_217955_sc.get()._field_table.get()._field_vars,_217939_f);
	_1a846b093_append_generic_type_aliases(_217955_sc.get()._field_table.get()._field_type_aliases,_217939_f);
	_1a845c859_check(_217955_sc, _217939_f.get()._field_decl.get()._field_scope,_217939_f.get()._field_scope);
	if ((!(_1a8450165_stopped(_217955_sc.ptr())))) {
		_1a848240b_check_rets(&(*_self_), _217939_f);
	};
}



inline void _1a8482a49_check_fn_ins_caller(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5b33164_FnIns>& _219644_f, jule::Ptr<_2110e7238_Token> _219659_caller) {
	if (_219644_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	jule::Ptr<_1a84cd7a9_SymbolTable> _220117_old = _219644_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1a846e294_set_current_file(_219644_f.get()._field_decl.get()._field_sema.ptr(), _220117_old);
	});;
	jule::Ptr<_1a84cd7a9_SymbolTable> _220317_file = _1a846b3c3_find_file(_219644_f.get()._field_decl.get()._field_sema.get()._field_files,_219644_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_220317_file != nullptr)) {
		_1a846e294_set_current_file(_219644_f.get()._field_decl.get()._field_sema.ptr(), _220317_file);
	};
	jule::Ptr<_1a844d4e8_ScopeChecker> _220817_sc = _1a83d7d12_new_scope_checker(_219644_f.get()._field_decl.get()._field_sema,_219644_f);;
	_220817_sc.get()._field_called_from=_219659_caller;
	_1a848272a_check_fn_ins_sc(_self_.ptr(), _219644_f,_220817_sc);
	if ((_219644_f.get()._field_decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_219644_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_219644_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1a8482cbe_check_fn_ins(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5b33164_FnIns>& _221837_f) {
	_1a8482a49_check_fn_ins_caller(_self_, _221837_f,nullptr);
}



inline void _1a8483044_check_type_fn(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5b2eeb8_Fn>& _222238_f) {
	if (_222238_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_222238_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _222238_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aa64a1c6:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b33164_FnIns> _223221_ins = *it;
			{
				_1a8482cbe_check_fn_ins(_self_, _223221_ins);
			}
			_iter_next_1aa64a1c6:;
			++it;
			goto _iter_begin_1aa64a1c6;
		}
		_iter_end_1aa64a1c6:;
	};
}



inline void _1a84832b9_check_test_fn(_1a846bc42_Sema* _self_, jule::Ptr<_1a5b33164_FnIns>& _223737_f) {
	if (_223737_f.get()._field_decl.get()._field_public) {
		_1a846e65c_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1a846e97b_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_223737_f.get()._field_params.len() != 1LL) || (_223737_f.get()._field_result != nullptr))) {
		_1a846e65c_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a846e97b_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8515956_Sptr> _225017_sptr = _1a8510016_sptr(_223737_f.get()._field_params[0LL].get()._field_kind.ptr());;
	if ((_225017_sptr == nullptr)) {
		_1a846e65c_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a846e97b_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b39672a9_StructIns> _225713_s = _1a8510e90_strct(_225017_sptr.get()._field_elem.ptr());;
	if (((_225713_s == nullptr) || (!(_1a8468ec5_is_std_package(_225713_s.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("testing", 7)))))) {
		_1a846e65c_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a846e97b_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a848353e_precheck_type_fn(jule::Ptr<_1a846bc42_Sema> _self_, jule::Ptr<_1a5b2eeb8_Fn>& _226541_f) {
	if (_226541_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_226541_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_226541_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1a5b33164_FnIns> _227621_ins = _1a5b31b13_instance(_226541_f);;
		_226541_f.get()._field_instances = jule::alloc_for_append(_226541_f.get()._field_instances,1);_226541_f.get()._field_instances.__push(_227621_ins);;
		_1a8475b3b_reload_fn_ins_types(_self_, _227621_ins);
		_227621_ins.get()._field_reloaded=true;
		if (_1a850b52e_has_directive(_226541_f.get()._field_directives,jule::Str("test", 4))) {
			_1a84832b9_check_test_fn(_self_.ptr(), _227621_ins);
		};
	};
}



inline void _1a848371a_precheck_fn_types(jule::Ptr<_1a846bc42_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1aa656644:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e34531_Trait> _228921_decl = *it;
			{
				{
					auto &expr = _228921_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1aa656d70:;
					if (it != expr.end()) {
						jule::Ptr<_1a5b2eeb8_Fn> _229025_m = *it;
						{
							_1a848353e_precheck_type_fn(_self_, _229025_m);
						}
						_iter_next_1aa656d70:;
						++it;
						goto _iter_begin_1aa656d70;
					}
					_iter_end_1aa656d70:;
				};
			}
			_iter_next_1aa656644:;
			++it;
			goto _iter_begin_1aa656644;
		}
		_iter_end_1aa656644:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1aa6569eb:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _229421_decl = *it;
			{
				_1a848353e_precheck_type_fn(_self_, _229421_decl);
			}
			_iter_next_1aa6569eb:;
			++it;
			goto _iter_begin_1aa6569eb;
		}
		_iter_end_1aa6569eb:;
	};
}



inline void _1a84838e6_check_fn_types(jule::Ptr<_1a846bc42_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1aa65847b:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _230121_decl = *it;
			{
				_1a8483044_check_type_fn(_self_, _230121_decl);
			}
			_iter_next_1aa65847b:;
			++it;
			goto _iter_begin_1aa65847b;
		}
		_iter_end_1aa65847b:;
	};
}



inline void _1a8483ac2_check_package_types(jule::Ptr<_1a846bc42_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa659438:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _230921_f = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _230921_f);
				_1a8480393_check_global_types(_self_);
			}
			_iter_next_1aa659438:;
			++it;
			goto _iter_begin_1aa659438;
		}
		_iter_end_1aa659438:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa6596e1:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _231421_f = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _231421_f);
				_1a848371a_precheck_fn_types(_self_);
			}
			_iter_next_1aa6596e1:;
			++it;
			goto _iter_begin_1aa6596e1;
		}
		_iter_end_1aa6596e1:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa659614:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _232121_f = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _232121_f);
				_1a8482197_check_struct_types_operators(_self_);
			}
			_iter_next_1aa659614:;
			++it;
			goto _iter_begin_1aa659614;
		}
		_iter_end_1aa659614:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa65b69e:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _232521_f = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _232521_f);
				_1a8481916_check_struct_types(_self_);
			}
			_iter_next_1aa65b69e:;
			++it;
			goto _iter_begin_1aa65b69e;
		}
		_iter_end_1aa65b69e:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa65b11b:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _233021_f = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _233021_f);
				_1a84838e6_check_fn_types(_self_);
			}
			_iter_next_1aa65b11b:;
			++it;
			goto _iter_begin_1aa65b11b;
		}
		_iter_end_1aa65b11b:;
	};
}



inline void _1a8483c9d_set_file_sema_fields(jule::Ptr<_1a846bc42_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1aa65d63a:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _233721_f = *it;
			{
				_233721_f.get()._field_sema=_self_;
			}
			_iter_next_1aa65d63a:;
			++it;
			goto _iter_begin_1aa65d63a;
		}
		_iter_end_1aa65d63a:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1aa65d915:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> _234121_st = *it;
			{
				_234121_st.get()._field_sema=_self_;
			}
			_iter_next_1aa65d915:;
			++it;
			goto _iter_begin_1aa65d915;
		}
		_iter_end_1aa65d915:;
	};
}



inline void _1a8483e79_set_sema_fields(jule::Ptr<_1a846bc42_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa65ea8c:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _234721_file = *it;
			{
				_1a846e294_set_current_file(_self_.ptr(), _234721_file);
				_1a8483c9d_set_file_sema_fields(_self_);
			}
			_iter_next_1aa65ea8c:;
			++it;
			goto _iter_begin_1aa65ea8c;
		}
		_iter_end_1aa65ea8c:;
	};
}



inline void _1a84841ee_check(jule::Ptr<_1a846bc42_Sema> _self_, jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>& _235330_files) {
	_self_.get()._field_files=_235330_files;
	_1a8471e12_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a8472495_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a8483e79_set_sema_fields(_self_);
	_1a84722b9_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a847e7c1_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a8483ac2_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a846bc42_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1a84845a6_MissingRetChecker static__1a848496e_new(void) {
	return _1a84845a6_MissingRetChecker(jule::Slice<jule::U64>::alloc(16LL),jule::Bool());
}



inline jule::Bool _1a8484c49_check_conditional(_1a84845a6_MissingRetChecker* _self_, jule::Ptr<_1a83da5c8_Conditional> _239936_c) {
	{
		auto &expr = _239936_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aa66481c:;
		if (it != expr.end()) {
			jule::Ptr<_1a844085e_If> _240021_elif = *it;
			{
				if ((_240021_elif == nullptr)) {
					return false;
				};
				if ((!(_1a8485673_check_scope(&(*_self_), _240021_elif.get()._field_scope)))) {
					return false;
				};
			}
			_iter_next_1aa66481c:;
			++it;
			goto _iter_begin_1aa66481c;
		}
		_iter_end_1aa66481c:;
	};
	return ((_239936_c.get()._field_default != nullptr) && _1a8485673_check_scope(&(*_self_), _239936_c.get()._field_default.get()._field_scope));
}



inline jule::Bool _1a8485057_check_match(_1a84845a6_MissingRetChecker* _self_, jule::Ptr<_1a844c63a_Match> _241130_m) {
	{
		auto &expr = _241130_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aa666ee5:;
		if (it != expr.end()) {
			jule::Ptr<_1a844ca58_Case> _241221_c = *it;
			{
				if ((_241221_c == nullptr)) {
					return false;
				};
				jule::I64 _241617_n = (*_self_)._field_breaked.len();;
				jule::Bool _241717_ok = _1a8485673_check_scope(&(*_self_), _241221_c.get()._field_scope);;
				{
					
					if ((_241617_n != (*_self_)._field_breaked.len())) {
						_case_begin_1aa6686ab:;
						{
							return false;
						}
					}
					else if ((!(_241717_ok))) {
						_case_begin_1aa668733:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1aa6687aa;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1aa6687aa:;
						{
							(*_self_)._field_falled=false;
							if ((_241221_c.get()._field_next == nullptr)) {
								return false;
							};
							goto _iter_next_1aa666ee5;
						}
					}
					_match_end_1aa6685ce:;
				};
			}
			_iter_next_1aa666ee5:;
			++it;
			goto _iter_begin_1aa666ee5;
		}
		_iter_end_1aa666ee5:;
	};
	return ((_241130_m.get()._field_default != nullptr) && _1a8485673_check_scope(&(*_self_), _241130_m.get()._field_default.get()._field_scope));
}



inline jule::Bool _1a8485365_check_inf_iter(_1a84845a6_MissingRetChecker* _self_, jule::Ptr<_1a83eb1ee_InfIter> _243733_it) {
	jule::I64 _243813_n = (*_self_)._field_breaked.len();;
	if (_1a8485673_check_scope(&(*_self_), _243733_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_243813_n);
		return true;
	};
	if ((_243813_n != (*_self_)._field_breaked.len())) {
		jule::U64 _244417_itaddr = static_cast<jule::U64>(_243733_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_243813_n);
			auto it = expr.begin();
			_iter_begin_1aa66c8ad:;
			if (it != expr.end()) {
				jule::U64 _244520_addr = *it;
				{
					if ((_244417_itaddr == _244520_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_243813_n);
						return false;
					};
				}
				_iter_next_1aa66c8ad:;
				++it;
				goto _iter_begin_1aa66c8ad;
			}
			_iter_end_1aa66c8ad:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_243813_n);
	};
	return true;
}



inline jule::Bool _1a8485673_check_scope(_1a84845a6_MissingRetChecker* _self_, jule::Ptr<_1a8438e62_Scope> _245630_s) {
	if ((_245630_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _245630_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1aa66ddba:;
		if (it != expr.end()) {
			jule::Any _246021_st = *it;
			{
				{
					auto &_match_expr{ _246021_st };
					
					if (_match_expr.type_is<jule::Ptr<_1a844cc45_FallSt>>()) {
						_case_begin_1aa66e9c0:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a842946e_BreakSt>>()) {
						_case_begin_1aa66ea47:;
						{
							jule::U64 _246621_addr = _246021_st.operator jule::Ptr<_1a842946e_BreakSt>().get()._field_it;;
							if ((_246621_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_246621_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a8429282_ContSt>>()) {
						_case_begin_1aa66eaad:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a83eb1ee_InfIter>>()) {
						_case_begin_1aa66eb24:;
						{
							if (_1a8485365_check_inf_iter(&(*_self_), _246021_st.operator jule::Ptr<_1a83eb1ee_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a844ce32_RetSt>>()) {
						_case_begin_1aa66eb8a:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a8438e62_Scope>>()) {
						_case_begin_1aa66ec12:;
						{
							if (_1a8485673_check_scope(&(*_self_), _246021_st.operator jule::Ptr<_1a8438e62_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a84d3869_Data>>()) {
						_case_begin_1aa66ec89:;
						{
							{
								auto &_match_expr{ _246021_st.operator jule::Ptr<_1a84d3869_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1b397134b_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>>()) {
									_case_begin_1aa673760:;
									{
										return true;
									}
								}
								_match_end_1aa67370a:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a83da5c8_Conditional>>()) {
						_case_begin_1aa66ed11:;
						{
							if (_1a8484c49_check_conditional(&(*_self_), _246021_st.operator jule::Ptr<_1a83da5c8_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a844c63a_Match>>()) {
						_case_begin_1aa66ed88:;
						{
							if (_1a8485057_check_match(&(*_self_), _246021_st.operator jule::Ptr<_1a844c63a_Match>())) {
								return true;
							};
						}
					}
					_match_end_1aa66e8b0:;
				};
			}
			_iter_next_1aa66ddba:;
			++it;
			goto _iter_begin_1aa66ddba;
		}
		_iter_end_1aa66ddba:;
	};
	return false;
}



inline jule::Bool _1a8485981_check(_1a84845a6_MissingRetChecker* _self_, jule::Ptr<_1a8438e62_Scope> _250224_s) {
	return _1a8485673_check_scope(&(*_self_), _250224_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1a84845a6_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8486278_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a84875ed_is_initialized(_1a8487246_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1a8487862_is_type_inferred(_1a8487246_Var* _self_) {
	return (((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1a8487246_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a84883bd_dispose(jule::Ptr<_1a5b2eeb8_Fn> _1027_f) {
	return (((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1a5b30419_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1a5b2e01c_is_ref(_1027_f.get()._field_params[0LL].ptr()))));
}



inline jule::Bool static__1a8488665_to_str(jule::Ptr<_1a5b2eeb8_Fn> _2526_f) {
	if ((((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1a5b30419_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1a5b2e01c_is_ref(_2526_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1a5b33164_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];;
	jule::Ptr<_1a8512447_Prim> _4113_prim = _1a850eca2_prim(_4017_ins.get()._field_result.ptr());;
	if ((_4113_prim == nullptr)) {
		return false;
	};
	return _1a8515406_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1a84889a6_logical(jule::Ptr<_1a5b2eeb8_Fn>& _4824_f, jule::Str _4832_ident) {
	if (((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1a5b30419_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1a5b2e01c_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1a5b33164_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];;
	jule::Ptr<_1a8512447_Prim> _6713_prim = _1a850eca2_prim(_6617_ins.get()._field_result.ptr());;
	if (((_6713_prim == nullptr) || (!(_1a8515192_is_bool(_6713_prim.ptr()))))) {
		return false;
	};
	return (_6617_ins.get()._field_owner == _1a8510e90_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr()));
}



inline jule::Bool static__1a8488c4d_eq(jule::Ptr<_1a5b2eeb8_Fn> _7522_f) {
	return static__1a84889a6_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1a8488ee5_gt(jule::Ptr<_1a5b2eeb8_Fn> _8022_f) {
	return static__1a84889a6_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1a848928c_gt_eq(jule::Ptr<_1a5b2eeb8_Fn> _8525_f) {
	return static__1a84889a6_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1a8489534_lt(jule::Ptr<_1a5b2eeb8_Fn> _9022_f) {
	return static__1a84889a6_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1a84897cb_lt_eq(jule::Ptr<_1a5b2eeb8_Fn> _9525_f) {
	return static__1a84889a6_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1a8489b1c_result(jule::Ptr<_1a5b2eeb8_Fn>& _9923_f, jule::Str _9931_ident) {
	if (((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1a5b30419_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1a5b2e01c_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1a5b33164_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];;
	return (_1a8510e90_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner);
}



inline jule::Bool static__1a8489db4_shl(jule::Ptr<_1a5b2eeb8_Fn> _12223_f) {
	return static__1a8489b1c_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1a848a15b_shr(jule::Ptr<_1a5b2eeb8_Fn> _12723_f) {
	return static__1a8489b1c_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1a848a403_add(jule::Ptr<_1a5b2eeb8_Fn> _13223_f) {
	return static__1a8489b1c_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1a848a69a_sub(jule::Ptr<_1a5b2eeb8_Fn> _13723_f) {
	return static__1a8489b1c_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1a848a942_div(jule::Ptr<_1a5b2eeb8_Fn> _14223_f) {
	return static__1a8489b1c_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1a848abd9_mul(jule::Ptr<_1a5b2eeb8_Fn> _14723_f) {
	return static__1a8489b1c_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1a848ae81_mod(jule::Ptr<_1a5b2eeb8_Fn> _15223_f) {
	return static__1a8489b1c_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1a848b228_bit_and(jule::Ptr<_1a5b2eeb8_Fn> _15727_f) {
	return static__1a8489b1c_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1a848b4c0_bit_or(jule::Ptr<_1a5b2eeb8_Fn> _16226_f) {
	return static__1a8489b1c_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1a848b767_bit_xor(jule::Ptr<_1a5b2eeb8_Fn> _16727_f) {
	return static__1a8489b1c_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1a848baa8_unary(jule::Ptr<_1a5b2eeb8_Fn>& _17122_f, jule::Str _17130_ident) {
	if (((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1a5b30419_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1a5b2e01c_is_ref(_17122_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1a5b33164_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];;
	return (_1a8510e90_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner);
}



inline jule::Bool static__1a848bd50_neg(jule::Ptr<_1a5b2eeb8_Fn> _19223_f) {
	return static__1a848baa8_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1a848c0e7_pos(jule::Ptr<_1a5b2eeb8_Fn> _19723_f) {
	return static__1a848baa8_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1a848c38e_bit_not(jule::Ptr<_1a5b2eeb8_Fn> _20227_f) {
	return static__1a848baa8_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1a848c6d0_assign(jule::Ptr<_1a5b2eeb8_Fn>& _20623_f, jule::Str _20631_ident) {
	if (((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1a5b30419_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1a5b2e01c_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1a848c977_add_assign(jule::Ptr<_1a5b2eeb8_Fn> _22730_f) {
	return static__1a848c6d0_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1a848cc1e_sub_assign(jule::Ptr<_1a5b2eeb8_Fn> _23230_f) {
	return static__1a848c6d0_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1a848ceb6_div_assign(jule::Ptr<_1a5b2eeb8_Fn> _23730_f) {
	return static__1a848c6d0_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1a848d25d_mul_assign(jule::Ptr<_1a5b2eeb8_Fn> _24230_f) {
	return static__1a848c6d0_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1a848d505_mod_assign(jule::Ptr<_1a5b2eeb8_Fn> _24730_f) {
	return static__1a848c6d0_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1a848d79c_shl_assign(jule::Ptr<_1a5b2eeb8_Fn> _25230_f) {
	return static__1a848c6d0_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1a848da44_shr_assign(jule::Ptr<_1a5b2eeb8_Fn> _25730_f) {
	return static__1a848c6d0_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1a848dcdb_bit_or_assign(jule::Ptr<_1a5b2eeb8_Fn> _26233_f) {
	return static__1a848c6d0_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1a848e083_bit_and_assign(jule::Ptr<_1a5b2eeb8_Fn> _26734_f) {
	return static__1a848c6d0_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1a848e32a_bit_xor_assign(jule::Ptr<_1a5b2eeb8_Fn> _27234_f) {
	return static__1a848c6d0_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1a8487c4c_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1a84b9ee3_push_err(_1a84b9c5c_TypeCompatibilityChecker* _self_, jule::Str _11727_fmt, jule::Slice<jule::Any> _11740_args) {
	_1a846e65c_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_11727_fmt,jule::Any(_11740_args));
}



inline jule::Bool _1a84ba257_check_trait(_1a84b9c5c_TypeCompatibilityChecker* _self_) {
	jule::Bool _12132_ok = jule::Bool();
	if (_1a850dab4_is_nil((*_self_)._field_src.ptr())) {
		_12132_ok = true;
		return _12132_ok;
	};
	jule::Ptr<_1a5e34531_Trait> _12613_trt = _1a8511204_trt((*_self_)._field_dest.ptr());;
	jule::Bool _12717_ref = false;;
	{
		
		if ((_1a8510016_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1aa6a7ee2:;
			{
				_12717_ref=true;
				(*_self_)._field_src=_1a8510016_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1a8510e90_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_12132_ok = false;
					return _12132_ok;
				};
				goto _case_begin_1aa6a80e1;
			}
		}
		else if ((_1a8510e90_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1aa6a80e1:;
			{
				jule::Ptr<_1b39672a9_StructIns> _13717_s = _1a8510e90_strct((*_self_)._field_src.ptr());;
				if ((!(_1b3965b48_is_implements(_13717_s.get()._field_decl.ptr(), _12613_trt)))) {
					_12132_ok = false;
					return _12132_ok;
				};
				if (((!(_12717_ref)) && _1a84a0a34_trait_has_reference_receiver(_12613_trt))) {
					_1a84b9ee3_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12132_ok = false;
					return _12132_ok;
				};
				_12132_ok = true;
				return _12132_ok;
			}
		}
		else if ((_1a8511204_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1aa6a8157:;
			{
				_12132_ok = (_12613_trt == _1a8511204_trt((*_self_)._field_src.ptr()));
				return _12132_ok;
			}
		}
		else {
			_case_begin_1aa6a78a4:;
			{
				_12132_ok = false;
				return _12132_ok;
			}
		}
		_match_end_1aa6a783d:;
	};
}



inline jule::Bool _1a84ba4bb_check_ptr(_1a84b9c5c_TypeCompatibilityChecker* _self_) {
	jule::Bool _15530_ok = jule::Bool();
	if (_1a850dab4_is_nil((*_self_)._field_src.ptr())) {
		_15530_ok = true;
		return _15530_ok;
	};
	jule::Ptr<_1a8518eba_Ptr> _16017_dest = _1a851027a_ptr((*_self_)._field_dest.ptr());;
	if (_1a851998d_is_unsafe(_16017_dest.ptr())) {
		_15530_ok = true;
		return _15530_ok;
	};
	_15530_ok = _1a850d3aa_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15530_ok;
}



inline jule::Bool _1a84ba730_check_prim(_1a84b9c5c_TypeCompatibilityChecker* _self_) {
	jule::Bool _16931_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1a8512447_Prim> _17117_prim = _1a850eca2_prim((*_self_)._field_dest.ptr());;
		if (((_17117_prim != nullptr) && _1a851566a_is_any(_17117_prim.ptr()))) {
			_16931_ok = true;
			return _16931_ok;
		};
	};
	_16931_ok = _1a850d3aa_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16931_ok;
}



inline jule::Bool _1a84ba994_check(_1a84b9c5c_TypeCompatibilityChecker* _self_) {
	jule::Bool _17926_ok = jule::Bool();
	if ((_1a851027a_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_17926_ok = _1a84ba4bb_check_ptr(&(*_self_));
		return _17926_ok;
	};
	if (_1a850e301_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1a850dab4_is_nil((*_self_)._field_src.ptr())) {
			_17926_ok = true;
			return _17926_ok;
		};
	};
	{
		
		if ((_1a850eca2_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1aa6b2ea8:;
			{
				_17926_ok = _1a84ba730_check_prim(&(*_self_));
				return _17926_ok;
			}
		}
		else if ((_1a8511204_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1aa6b343c:;
			{
				_17926_ok = _1a84ba257_check_trait(&(*_self_));
				return _17926_ok;
			}
		}
		else {
			_case_begin_1aa6b277c:;
			{
				_17926_ok = _1a850d3aa_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _17926_ok;
			}
		}
		_match_end_1aa6b26a0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a84b9c5c_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a84bb445_push_err(_1a84baed3_AssignTypeChecker* _self_, jule::Str _20927_fmt, jule::Slice<jule::Any> _20940_args) {
	_1a846e65c_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_20927_fmt,jule::Any(_20940_args));
}



inline jule::Bool _1a84bb6a9_check_validity(_1a84baed3_AssignTypeChecker* _self_) {
	jule::Bool _21417_valid = true;;
	{
		
		if ((_1a8510c2b_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa6b5d68:;
			{
				jule::Ptr<_1a5b33164_FnIns> _21717_f = _1a8510c2b_fnc((*_self_)._field_d.get()._field_kind.ptr());;
				{
					
					if (_1a5b33de0_is_builtin(_21717_f.ptr())) {
						_case_begin_1aa6b7276:;
						{
							_1a84bb445_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if (_21717_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1aa6b72ed:;
						{
							_1a84bb445_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if (_1a5b3067d_is_method(_21717_f.get()._field_decl.ptr())) {
						_case_begin_1aa6b7375:;
						{
							_1a84bb445_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if ((_21717_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_1aa6b73ec:;
						{
							_1a84bb445_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					_match_end_1aa6b7188:;
				};
			}
		}
		else if ((_1a85116cc_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa6b5de0:;
			{
				_1a84bb445_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_21417_valid=false;
			}
		}
		_match_end_1aa6b5c9c:;
	};
	return _21417_valid;
}



inline jule::Bool _1a84bb91d_check_const(_1a84baed3_AssignTypeChecker* _self_) {
	if (((((!(_1a84d422c_is_const((*_self_)._field_d.ptr()))) || (_1a850eca2_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1a850eca2_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1a844b7c1_is_num(_1a850eca2_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant)) {
		return false;
	};
	jule::Str _25313_kind = _1a850eca2_prim((*_self_)._field_dest.ptr()).get()._field_kind;;
	{
		
		if (_1a844b529_is_float(_25313_kind)) {
			_case_begin_1aa6be59c:;
			{
				if ((!(_1a84b9784_float_assignable(_25313_kind,(*_self_)._field_d)))) {
					_1a84bb445_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1a844b23d_is_int(_25313_kind)) {
			_case_begin_1aa6bddc6:;
			{
				if ((!(_1a84b9b2a_int_assignable(_25313_kind,(*_self_)._field_d)))) {
					_1a84bb445_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1aa6bdd60:;
			{
				return false;
			}
		}
		_match_end_1aa6bdcd8:;
	};
	return true;
}



inline jule::Bool _1a84bbb82_is_prim(_1a84baed3_AssignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic)) {
		return false;
	};
	if ((_1a850d850_cpp_linked((*_self_)._field_dest.ptr()) || _1a850d850_cpp_linked((*_self_)._field_d.get()._field_kind.ptr()))) {
		return false;
	};
	return ((_1a850eca2_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1a850eca2_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr));
}



inline jule::Bool _1a84bbde6_check_compatibility(_1a84baed3_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1aa6c4294:;
			{
				return false;
			}
		}
		else if ((!(_1a84bb6a9_check_validity(&(*_self_))))) {
			_case_begin_1aa6c431b:;
			{
				return false;
			}
		}
		else if (_1a84bb91d_check_const(&(*_self_))) {
			_case_begin_1aa6c4393:;
			{
				return true;
			}
		}
		else if ((_1a85104de_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa6c441a:;
			{
				jule::Ptr<_1a850cbe5_TypeKind> _29521_dkind = (*_self_)._field_dest;;
				if ((_1a85104de_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_29521_dkind=_1a85104de_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1a850eca2_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1aa6c4151;
				};
				if (_1a844801a_types_are_compatible(_1a850eca2_prim(_1a85104de_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1a850eca2_prim(_29521_dkind.ptr()).get()._field_kind)) {
					return true;
				};
			}
		}
		else if (_1a84bbb82_is_prim(&(*_self_))) {
			_case_begin_1aa6c4492:;
			{
				jule::Ptr<_1a8512447_Prim> _30517_dest = _1a850eca2_prim((*_self_)._field_dest.ptr());;
				if (_1a851566a_is_any(_30517_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1a8512447_Prim> _30921_src = _1a850eca2_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1a844801a_types_are_compatible(_30517_dest.get()._field_kind,_30921_src.get()._field_kind)) {
					return true;
				};
			}
		}
		_match_end_1aa6c4151:;
	};
	return _1a8474d5a_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1a84bc15a_check(_1a84baed3_AssignTypeChecker* _self_) {
	jule::Bool _31813_ok = _1a84bbde6_check_compatibility(&(*_self_));;
	if (_31813_ok) {
		_1a8523ed6_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _31813_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a84baed3_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a84bcdb4_push_generic(_1a84bc831_DynamicTypeAnnotation* _self_, jule::Ptr<_1a850cbe5_TypeKind>& _33636_k, jule::I64 _33650_i) {
	(*_self_)._field_f.get()._field_generics[_33650_i]=_33636_k;
}



inline jule::Bool _1a84bd18e_annotate_prim(_1a84bc831_DynamicTypeAnnotation* _self_, jule::Ptr<_1a850cbe5_TypeKind>& _34044_k) {
	jule::Bool _34060_ok = jule::Bool();
	jule::Str _34113_kind = _1a850d09c_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aa6cd754:;
		if (it != expr.end()) {
			jule::I64 _34213_i = it - expr.begin();
			jule::Ptr<_21110be1d_GenericDecl> _34216_g = *it;
			{
				if ((_34113_kind != _34216_g.get()._field_ident)) {
					goto _iter_next_1aa6cd754;
				};
				jule::Ptr<_1a850cbe5_TypeKind> _34717_t = (*_self_)._field_f.get()._field_generics[_34213_i];;
				{
					
					if ((_34717_t == nullptr)) {
						_case_begin_1aa6ceb84:;
						{
							_1a84bcdb4_push_generic(&(*_self_), _34044_k,_34213_i);
						}
					}
					else if ((!(_1a850d3aa_equals(_34717_t, _34044_k)))) {
						_case_begin_1aa6cec0b:;
						{
							_34060_ok = false;
							return _34060_ok;
						}
					}
					_match_end_1aa6cea74:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_34044_k.get()._field_kind;
				_34060_ok = true;
				return _34060_ok;
			}
			_iter_next_1aa6cd754:;
			++it;
			_34213_i++;
			goto _iter_begin_1aa6cd754;
		}
		_iter_end_1aa6cd754:;
	};
	_34060_ok = false;
	return _34060_ok;
}



inline jule::Bool _1a84bd49c_annotate_slc(_1a84bc831_DynamicTypeAnnotation* _self_, jule::Ptr<_1a850cbe5_TypeKind>& _36343_k) {
	jule::Bool _36359_ok = jule::Bool();
	jule::Ptr<_1a85163b3_Slc> _36417_pslc = _1a85109b7_slc((*((*_self_)._field_k)).ptr());;
	if ((_36417_pslc == nullptr)) {
		_36359_ok = false;
		return _36359_ok;
	};
	jule::Ptr<_1a85163b3_Slc> _36917_slc = _1a85109b7_slc(_36343_k.ptr());;
	(*_self_)._field_k=(&(_36417_pslc.get()._field_elem));
	_36359_ok = _1a84beba7_annotate_kind(&(*_self_), _36917_slc.get()._field_elem);
	return _36359_ok;
}



inline jule::Bool _1a84bd854_check_map_key(_1a84bc831_DynamicTypeAnnotation* _self_, jule::Ptr<_1a850cbe5_TypeKind>* _37443_k, jule::Ptr<_1a850cbe5_TypeKind>& _37463_ck) {
	jule::Bool _37480_ok = jule::Bool();
	jule::Ptr<_1a850cbe5_TypeKind>* _37517_old = (*_self_)._field_k;;
	(*_self_)._field_k=_37443_k;
	_37480_ok=_1a84beba7_annotate_kind(&(*_self_), _37463_ck);
	(*_self_)._field_k=_37517_old;
	return _37480_ok;
}



inline jule::Bool _1a84bdb62_annotate_map(_1a84bc831_DynamicTypeAnnotation* _self_, jule::Ptr<_1a850cbe5_TypeKind>& _38243_k) {
	jule::Bool _38259_ok = jule::Bool();
	jule::Ptr<_1a8517969_Map> _38317_pmap = _1a8511468_map((*((*_self_)._field_k)).ptr());;
	if ((_38317_pmap == nullptr)) {
		_38259_ok = false;
		return _38259_ok;
	};
	jule::Ptr<_1a8517969_Map> _38817_m = _1a8511468_map(_38243_k.ptr());;
	_38259_ok = (_1a84bd854_check_map_key(&(*_self_), (&(_38317_pmap.get()._field_key)),_38817_m.get()._field_key) && _1a84bd854_check_map_key(&(*_self_), (&(_38317_pmap.get()._field_val)),_38817_m.get()._field_val));
	return _38259_ok;
}



inline jule::Bool _1a84bde70_annotate_fn(_1a84bc831_DynamicTypeAnnotation* _self_, jule::Ptr<_1a850cbe5_TypeKind>& _39442_k) {
	jule::Bool _39458_ok = jule::Bool();
	jule::Ptr<_1a5b33164_FnIns> _39517_pf = _1a8510c2b_fnc((*((*_self_)._field_k)).ptr());;
	if ((_39517_pf == nullptr)) {
		_39458_ok = false;
		return _39458_ok;
	};
	jule::Ptr<_1a5b33164_FnIns> _39917_f = _1a8510c2b_fnc(_39442_k.ptr());;
	{
		
		if ((_39517_pf.get()._field_params.len() != _39917_f.get()._field_params.len())) {
			_case_begin_1aa6da1cd:;
			{
				_39458_ok = false;
				return _39458_ok;
			}
		}
		else if ((_1a5b30419_is_void(_39517_pf.get()._field_decl.ptr()) != _1a5b30419_is_void(_39917_f.get()._field_decl.ptr()))) {
			_case_begin_1aa6da255:;
			{
				_39458_ok = false;
				return _39458_ok;
			}
		}
		_match_end_1aa6da134:;
	};
	_39458_ok=true;
	jule::Ptr<_1a850cbe5_TypeKind>* _40817_old = (*_self_)._field_k;;
	{
		auto &expr = _39917_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aa6dbbe6:;
		if (it != expr.end()) {
			jule::I64 _40914_i = it - expr.begin();
			jule::Ptr<_1a5b322c8_ParamIns> _40921_fp = *it;
			{
				(*_self_)._field_k=(&(_39517_pf.get()._field_params[_40914_i].get()._field_kind));
				_39458_ok=(_1a84beba7_annotate_kind(&(*_self_), _40921_fp.get()._field_kind) && _39458_ok);
			}
			_iter_next_1aa6dbbe6:;
			++it;
			_40914_i++;
			goto _iter_begin_1aa6dbbe6;
		}
		_iter_end_1aa6dbbe6:;
	};
	if ((!(_1a5b30419_is_void(_39517_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_39517_pf.get()._field_result));
		_39458_ok=(_1a84beba7_annotate_kind(&(*_self_), _39917_f.get()._field_result) && _39458_ok);
	};
	(*_self_)._field_k=_40817_old;
	return _39458_ok;
}



inline jule::Bool _1a84be27d_annotate_ptr(_1a84bc831_DynamicTypeAnnotation* _self_, jule::Ptr<_1a850cbe5_TypeKind>& _42343_k) {
	jule::Bool _42359_ok = jule::Bool();
	jule::Ptr<_1a8518eba_Ptr> _42417_pptr = _1a851027a_ptr((*((*_self_)._field_k)).ptr());;
	if ((_42417_pptr == nullptr)) {
		_42359_ok = false;
		return _42359_ok;
	};
	jule::Ptr<_1a8518eba_Ptr> _42917_ptr = _1a851027a_ptr(_42343_k.ptr());;
	(*_self_)._field_k=(&(_42417_pptr.get()._field_elem));
	_42359_ok = _1a84beba7_annotate_kind(&(*_self_), _42917_ptr.get()._field_elem);
	return _42359_ok;
}



inline jule::Bool _1a84be58b_annotate_sptr(_1a84bc831_DynamicTypeAnnotation* _self_, jule::Ptr<_1a850cbe5_TypeKind>& _43444_k) {
	jule::Bool _43460_ok = jule::Bool();
	jule::Ptr<_1a8515956_Sptr> _43517_ssptr = _1a8510016_sptr((*((*_self_)._field_k)).ptr());;
	if ((_43517_ssptr == nullptr)) {
		_43460_ok = false;
		return _43460_ok;
	};
	jule::Ptr<_1a8515956_Sptr> _44017_sptr = _1a8510016_sptr(_43444_k.ptr());;
	(*_self_)._field_k=(&(_43517_ssptr.get()._field_elem));
	_43460_ok = _1a84beba7_annotate_kind(&(*_self_), _44017_sptr.get()._field_elem);
	return _43460_ok;
}



inline jule::Bool _1a84be899_annotate_any(_1a84bc831_DynamicTypeAnnotation* _self_, jule::Ptr<_1a850cbe5_TypeKind>& _44543_k) {
	jule::Bool _44559_ok = jule::Bool();
	jule::Str _44613_kind = _1a850d09c_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aa6e4b77:;
		if (it != expr.end()) {
			jule::I64 _44713_i = it - expr.begin();
			jule::Ptr<_21110be1d_GenericDecl> _44716_g = *it;
			{
				if ((_44613_kind != _44716_g.get()._field_ident)) {
					goto _iter_next_1aa6e4b77;
				};
				jule::Ptr<_1a850cbe5_TypeKind> _45217_t = (*_self_)._field_f.get()._field_generics[_44713_i];;
				{
					
					if ((_45217_t == nullptr)) {
						_case_begin_1aa6e60c9:;
						{
							_1a84bcdb4_push_generic(&(*_self_), _44543_k,_44713_i);
						}
					}
					else if ((!(_1a850d3aa_equals(_45217_t, _44543_k)))) {
						_case_begin_1aa6e6151:;
						{
							_44559_ok = false;
							return _44559_ok;
						}
					}
					_match_end_1aa6e5eb9:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_44543_k.get()._field_kind;
				_44559_ok = true;
				return _44559_ok;
			}
			_iter_next_1aa6e4b77:;
			++it;
			_44713_i++;
			goto _iter_begin_1aa6e4b77;
		}
		_iter_end_1aa6e4b77:;
	};
	_44559_ok = false;
	return _44559_ok;
}



inline jule::Bool _1a84beba7_annotate_kind(_1a84bc831_DynamicTypeAnnotation* _self_, jule::Ptr<_1a850cbe5_TypeKind>& _46844_k) {
	jule::Bool _46860_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _46860_ok;
	};
	{
		
		if (_1a84be899_annotate_any(&(*_self_), _46844_k)) {
			_case_begin_1aa6e8be2:;
			{
				_46860_ok = true;
				return _46860_ok;
			}
		}
		else if ((_1a850eca2_prim(_46844_k.ptr()) != nullptr)) {
			_case_begin_1aa6e8c9c:;
			{
				_46860_ok = _1a84bd18e_annotate_prim(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a85109b7_slc(_46844_k.ptr()) != nullptr)) {
			_case_begin_1aa6e8d13:;
			{
				_46860_ok = _1a84bd49c_annotate_slc(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a8511468_map(_46844_k.ptr()) != nullptr)) {
			_case_begin_1aa6e89c2:;
			{
				_46860_ok = _1a84bdb62_annotate_map(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a8510c2b_fnc(_46844_k.ptr()) != nullptr)) {
			_case_begin_1aa6e8a38:;
			{
				_46860_ok = _1a84bde70_annotate_fn(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a851027a_ptr(_46844_k.ptr()) != nullptr)) {
			_case_begin_1aa6e8a9e:;
			{
				_46860_ok = _1a84be27d_annotate_ptr(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a8510016_sptr(_46844_k.ptr()) != nullptr)) {
			_case_begin_1aa6e861a:;
			{
				_46860_ok = _1a84be58b_annotate_sptr(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else {
			_case_begin_1aa6e85a4:;
			{
				_46860_ok = false;
				return _46860_ok;
			}
		}
		_match_end_1aa6e854e:;
	};
}



inline jule::Bool _1a84bee1b_annotate(_1a84bc831_DynamicTypeAnnotation* _self_) {
	jule::Bool _49336_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_49336_ok = _1a84beba7_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _49336_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a84bc831_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1a84c0b42_push_err_token(_1a84c05e2_FnCallArgChecker* _self_, jule::Ptr<_2110e7238_Token> _50933_token, jule::Str _50948_fmt, jule::Slice<jule::Any> _50961_args) {
	_1a846e65c_push_err((*_self_)._field_e.get()._field_s.ptr(), _50933_token,_50948_fmt,jule::Any(_50961_args));
}



inline void _1a84c0e61_push_err(_1a84c05e2_FnCallArgChecker* _self_, jule::Str _51327_fmt, jule::Slice<jule::Any> _51340_args) {
	_1a84c0b42_push_err_token(&(*_self_), (*_self_)._field_error_token,_51327_fmt,jule::Any(_51340_args));
}



inline jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>> _1a84c11c5_get_params(_1a84c05e2_FnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1a5b2dca8_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr()))) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1a84c14d3_check_counts(_1a84c05e2_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>& _52632_params) {
	jule::Bool _52655_ok = jule::Bool();
	jule::I64 _52717_n = _52632_params.len();;
	if (((_52717_n > 0LL) && _1a5b2dca8_is_self(_52632_params[0LL].get()._field_decl.ptr()))) {
		(_52717_n)--;
	};
	jule::I64 _53217_diff = (_52717_n - (*_self_)._field_args.len());;
	{
		
		if ((_53217_diff == 0LL)) {
			_case_begin_1aa705d20:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if (((_52717_n > 0LL) && _52632_params[(_52717_n - 1LL)].get()._field_decl.get()._field_variadic)) {
			_case_begin_1aa705d97:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if (((_53217_diff < 0LL) || (_53217_diff > _52632_params.len()))) {
			_case_begin_1aa705e1e:;
			{
				_1a84c0e61_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_52655_ok = false;
				return _52655_ok;
			}
		}
		_match_end_1aa705c54:;
	};
	jule::Str _54317_idents = jule::Str();;
	for (; (_53217_diff > 0LL); (_53217_diff)--) {
		{
			_54317_idents+=(jule::Str(", ", 2) + _52632_params[(_52717_n - _53217_diff)].get()._field_decl.get()._field_ident);
		}
	_iter_next_1aa7083a5:;
	}
	_iter_end_1aa7083a5:;;
	(_54317_idents).mut_slice(2LL);;
	_1a84c0e61_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_54317_idents)}));
	_52655_ok = false;
	return _52655_ok;
}



inline jule::Bool _1a84c1934_check_arg(_1a84c05e2_FnCallArgChecker* _self_, jule::Ptr<_1a5b322c8_ParamIns>& _55333_p, jule::Ptr<_1a84d3869_Data>& _55352_arg, jule::Ptr<_2110e7238_Token>& _55369_error_token) {
	jule::Bool _55392_ok = jule::Bool();
	if (((*_self_)._field_dynamic_annotation && _1a5b35045_parameter_uses_generics(_55333_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics))) {
		_55392_ok=(!(_55333_p.get()._field_decl.get()._field_variadic));
		if (_55392_ok) {
			_1a84bc831_DynamicTypeAnnotation _55725_dta = _1a84bc831_DynamicTypeAnnotation((*_self_)._field_e,(*_self_)._field_f,_55333_p,_55352_arg,_55369_error_token,nullptr);;
			_55392_ok=_1a84bee1b_annotate(&_55725_dta);
		};
		if ((!(_55392_ok))) {
			_1a84c0b42_push_err_token(&(*_self_), _55369_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_55392_ok = false;
			return _55392_ok;
		};
	};
	if (_1a84766db_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _55333_p.get()._field_decl.get()._field_mutable,_55333_p.get()._field_decl.get()._field_reference,_55333_p.get()._field_kind,_55352_arg,_55369_error_token)) {
		_1a84748b5_check_assign_type((*_self_)._field_e.get()._field_s, _55333_p.get()._field_decl.get()._field_reference,_55333_p.get()._field_kind,_55352_arg,_55369_error_token);
	};
	_55392_ok = true;
	return _55392_ok;
}



inline jule::Bool _1a84c1cdb_push(_1a84c05e2_FnCallArgChecker* _self_, jule::Ptr<_1a5b322c8_ParamIns>& _58028_p, jule::Ptr<_210e87caa_Expr> _58046_arg) {
	jule::Bool _58060_ok = jule::Bool();
	jule::Ptr<_1a850cbe5_TypeKind> _58117_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _58213_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1a84d3869_Data> _58317_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_58028_p.get()._field_decl.get()._field_mutable));
	if (((!((*_self_)._field_dynamic_annotation)) && (!(_58028_p.get()._field_decl.get()._field_variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_58028_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_58317_d=_1a84ee478_eval_expr_kind((*_self_)._field_e, jule::Any(_58046_arg.get()._field_kind));
	(*_self_)._field_e.get()._field_prefix=_58117_old;
	(*_self_)._field_e.get()._field_immutable=_58213_old_immut;
	if ((_58317_d == nullptr)) {
		_58060_ok = false;
		return _58060_ok;
	};
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_58317_d));;
	_58060_ok = _1a84c1934_check_arg(&(*_self_), _58028_p,_58317_d,_58046_arg.get()._field_token);
	return _58060_ok;
}



inline jule::Bool _1a84c2193_push_variadic(_1a84c05e2_FnCallArgChecker* _self_, jule::Ptr<_1a5b322c8_ParamIns>& _60437_p, jule::I64 _60455_i) {
	jule::Bool _60465_ok = jule::Bool();
	_60465_ok=true;
	jule::Bool _60617_variadiced = false;;
	jule::Bool _60713_more = ((_60455_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1b396b577_SliceExprModel> _60817_model = jule::new_ptr<_1b396b577_SliceExprModel>(_1b396b577_SliceExprModel(_60437_p.get()._field_kind,jule::Slice<jule::Any>()));;
	jule::Ptr<_1a850cbe5_TypeKind> _61217_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _61713_variadic = _60437_p.get()._field_kind.get()._field_variadic;;
	_60437_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_60437_p.get()._field_kind.get()._field_variadic=_61713_variadic;
	});;
	for (; (_60455_i < (*_self_)._field_args.len()); (_60455_i)++) {
		{
			jule::Ptr<_210e87caa_Expr> _62421_arg = (*_self_)._field_args[_60455_i];;
			{
				auto &_match_expr{ _62421_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_21110a191_VariadicExpr>>()) {
					_case_begin_1aa7180b8:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a85163b3_Slc>(_1a85163b3_Slc(_60437_p.get()._field_kind)), 7)));
					}
				}
				else {
					_case_begin_1aa717b89:;
					{
						(*_self_)._field_e.get()._field_prefix=_60437_p.get()._field_kind;
					}
				}
				_match_end_1aa717b34:;
			};
			jule::Ptr<_1a84d3869_Data> _63721_d = _1a84ee786_eval((*_self_)._field_e, _62421_arg);;
			if ((_63721_d == nullptr)) {
				_60465_ok=false;
				goto _iter_next_1aa71545b;
			};
			if (_63721_d.get()._field_kind.get()._field_variadic) {
				_60617_variadiced=true;
				{
					auto &_match_expr{ _63721_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1b396b577_SliceExprModel>>()) {
						_case_begin_1aa719707:;
						{
							_60817_model=_63721_d.get()._field_model.operator jule::Ptr<_1b396b577_SliceExprModel>();
							_60817_model.get()._field_elem_kind=_60437_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1aa71a1ca:;
						{
							_60817_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_63721_d));;
						}
					}
					_match_end_1aa71a175:;
				};
				_60437_p.get()._field_kind.get()._field_variadic=true;
				_60465_ok=(_60465_ok && _1a84c1934_check_arg(&(*_self_), _60437_p,_63721_d,_62421_arg.get()._field_token));
				(_60455_i)++;
				goto _iter_end_1aa71545b;
			};
			_60465_ok=(_60465_ok && _1a84c1934_check_arg(&(*_self_), _60437_p,_63721_d,_62421_arg.get()._field_token));
			_60817_model.get()._field_elems = jule::alloc_for_append(_60817_model.get()._field_elems,1);_60817_model.get()._field_elems.__push(jule::Any(_63721_d.get()._field_model));;
		}
	_iter_next_1aa71545b:;
	}
	_iter_end_1aa71545b:;;
	(*_self_)._field_e.get()._field_prefix=_61217_old;
	if ((_60617_variadiced && _60713_more)) {
		_1a84c0b42_push_err_token(&(*_self_), (*_self_)._field_args[_60455_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_60817_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_60817_model));;
	};
	return _60465_ok;
}



inline jule::Bool _1a84c24a1_check_args(_1a84c05e2_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>& _68334_params) {
	jule::Bool _68357_ok = jule::Bool();
	jule::Bool _68413_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_68357_ok=true;
	jule::I64 _68817_i = 0LL;;
	_julec_label_iter:;
	while ((_68817_i < _68334_params.len())) {
		{
			jule::Ptr<_1a5b322c8_ParamIns> _69121_p = _68334_params[_68817_i];;
			{
				
				if (_1a5b2dca8_is_self(_69121_p.get()._field_decl.ptr())) {
					_case_begin_1aa721be8:;
					{
						goto _match_end_1aa721621;
					}
				}
				else if (_69121_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1aa722479:;
					{
						_68357_ok=(_1a84c2193_push_variadic(&(*_self_), _69121_p,_68817_i) && _68357_ok);
						goto _iter_end_1aa720c3b;
					}
				}
				else if (((*_self_)._field_args.len() <= _68817_i)) {
					_case_begin_1aa721a1c:;
					{
						_68357_ok=false;
						goto _iter_end_1aa720c3b;
					}
				}
				else {
					_case_begin_1aa721698:;
					{
						_68357_ok=(_1a84c1cdb_push(&(*_self_), _69121_p,(*_self_)._field_args[_68817_i]) && _68357_ok);
					}
				}
				_match_end_1aa721621:;
			};
			(_68817_i)++;
		}
	_iter_next_1aa720c3b:;
	}
	_iter_end_1aa720c3b:;;
	(*_self_)._field_e.get()._field_arg=_68413_arg;
	return _68357_ok;
}



inline jule::Bool _1a84c2759_check_dynamic_type_annotation(_1a84c05e2_FnCallArgChecker* _self_) {
	jule::Bool _71350_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aa724921:;
		if (it != expr.end()) {
			jule::Ptr<_1a850cbe5_TypeKind> _71416_g = *it;
			{
				if ((_71416_g == nullptr)) {
					_1a84c0e61_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_71350_ok = false;
					return _71350_ok;
				};
			}
			_iter_next_1aa724921:;
			++it;
			goto _iter_begin_1aa724921;
		}
		_iter_end_1aa724921:;
	};
	_71350_ok = true;
	return _71350_ok;
}



inline jule::Bool _1a84c29ac_check(_1a84c05e2_FnCallArgChecker* _self_) {
	jule::Bool _72326_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>> _72417_params = _1a84c11c5_get_params(&(*_self_));;
	_72326_ok=_1a84c14d3_check_counts(&(*_self_), _72417_params);
	if ((!(_72326_ok))) {
		_72326_ok = false;
		return _72326_ok;
	};
	_72326_ok=_1a84c24a1_check_args(&(*_self_), _72417_params);
	if ((_72326_ok && (*_self_)._field_dynamic_annotation)) {
		_72326_ok=_1a84c2759_check_dynamic_type_annotation(&(*_self_));
	};
	return _72326_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a84c05e2_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1a84c3507_push_err(_1a84c2eeb_StructLitChecker* _self_, jule::Ptr<_2110e7238_Token> _74727_token, jule::Str _74742_fmt, jule::Slice<jule::Any> _74755_args) {
	_1a84d58b0_push_err((*_self_)._field_e.ptr(), _74727_token,_74742_fmt,jule::Any(_74755_args));
}



inline void _1a84c3826_push_suggestion(_1a84c2eeb_StructLitChecker* _self_, jule::Str _75234_fmt, jule::Slice<jule::Any> _75247_args) {
	_1a84d5bce_push_suggestion((*_self_)._field_e.ptr(), _75234_fmt,jule::Any(_75247_args));
}



inline void _1a84c3bde_push_match(_1a84c2eeb_StructLitChecker* _self_, jule::Ptr<_1b396694b_FieldIns>& _75634_f, jule::Ptr<_1a84d3869_Data>& _75653_d, jule::Ptr<_2110e7238_Token>& _75668_error_token) {
	;
	if (_1a84766db_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_75634_f.get()._field_kind,_75653_d,_75668_error_token)) {
		_1a84748b5_check_assign_type((*_self_)._field_e.get()._field_s, false,_75634_f.get()._field_kind,_75653_d,_75668_error_token);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1b3969b80_StructArgExprModel>(_1b3969b80_StructArgExprModel(_75634_f,jule::Any(_75653_d.get()._field_model))));;
}



inline void _1a84c400d_check_pair(_1a84c2eeb_StructLitChecker* _self_, jule::Ptr<_21110ad1d_FieldExprPair>& _76934_pair, jule::Slice<jule::Ptr<_210e87caa_Expr>>& _76961_exprs) {
	jule::Ptr<_1b396694b_FieldIns> _77117_f = _1b3968552_find_field((*_self_)._field_s.ptr(), _76934_pair.get()._field_field.get()._field_kind);;
	if ((_77117_f == nullptr)) {
		_1a84c3507_push_err(&(*_self_), _76934_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_76934_pair.get()._field_field.get()._field_kind)}));
		return;;
	};
	if ((!(_1a846ed33_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _77117_f.get()._field_decl.get()._field_public,_77117_f.get()._field_decl.get()._field_token)))) {
		_1a84c3507_push_err(&(*_self_), _76934_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_76934_pair.get()._field_field.get()._field_kind)}));
		_1a84c3826_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _76961_exprs;
		auto it = expr.begin();
		_iter_begin_1aa732c09:;
		if (it != expr.end()) {
			jule::Ptr<_210e87caa_Expr> _78321_expr = *it;
			{
				{
					auto &_match_expr{ _78321_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_21110ad1d_FieldExprPair>>()) {
						_case_begin_1aa73349b:;
						{
							jule::Ptr<_21110ad1d_FieldExprPair> _78625_dpair = _78321_expr.get()._field_kind.operator jule::Ptr<_21110ad1d_FieldExprPair>();;
							{
								
								if ((_76934_pair == _78625_dpair)) {
									_case_begin_1aa7341b1:;
									{
										goto _iter_end_1aa732c09;
									}
								}
								else if ((_76934_pair.get()._field_field.get()._field_kind == _78625_dpair.get()._field_field.get()._field_kind)) {
									_case_begin_1aa734238:;
									{
										_1a84c3507_push_err(&(*_self_), _76934_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_76934_pair.get()._field_field.get()._field_kind)}));
										goto _iter_end_1aa732c09;
									}
								}
								_match_end_1aa734106:;
							};
						}
					}
					_match_end_1aa7333be:;
				};
			}
			_iter_next_1aa732c09:;
			++it;
			goto _iter_begin_1aa732c09;
		}
		_iter_end_1aa732c09:;
	};
	jule::Ptr<_1a850cbe5_TypeKind> _79717_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_79717_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_77117_f.get()._field_kind;
	jule::Ptr<_1a84d3869_Data> _80117_d = _1a84ee478_eval_expr_kind((*_self_)._field_e, jule::Any(_76934_pair.get()._field_expr));;
	if ((_80117_d == nullptr)) {
		return;;
	};
	_1a84c3bde_push_match(&(*_self_), _77117_f,_80117_d,_76934_pair.get()._field_field);
}



inline jule::Bool _1a84c431b_ready_exprs(_1a84c2eeb_StructLitChecker* _self_, jule::Slice<jule::Ptr<_210e87caa_Expr>>& _80835_exprs) {
	jule::Bool _80917_ok = true;;
	{
		auto &expr = _80835_exprs;
		auto it = expr.begin();
		_iter_begin_1aa738182:;
		if (it != expr.end()) {
			jule::I64 _81014_i = it - expr.begin();
			jule::Ptr<_210e87caa_Expr> _81021_expr = *it;
			{
				{
					auto &_match_expr{ _81021_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_21110b3d4_KeyValPair>>()) {
						_case_begin_1aa738b66:;
						{
							jule::Ptr<_21110b3d4_KeyValPair> _81325_pair = _81021_expr.get()._field_kind.operator jule::Ptr<_21110b3d4_KeyValPair>();;
							{
								auto &_match_expr{ _81325_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_211109cb7_IdentExpr>>()) {
									_case_begin_1aa73a728:;
									{
										goto _match_end_1aa7399e1;
									}
								}
								else {
									_case_begin_1aa739a46:;
									{
										_1a84c3507_push_err(&(*_self_), _81325_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_80917_ok=false;
										goto _iter_next_1aa738182;
									}
								}
								_match_end_1aa7399e1:;
							};
							_80835_exprs[_81014_i].get()._field_kind=jule::Any(jule::new_ptr<_21110ad1d_FieldExprPair>(_21110ad1d_FieldExprPair(_81325_pair.get()._field_key.get()._field_token,_81325_pair.get()._field_val)));
						}
					}
					_match_end_1aa738a89:;
				};
			}
			_iter_next_1aa738182:;
			++it;
			_81014_i++;
			goto _iter_begin_1aa738182;
		}
		_iter_end_1aa738182:;
	};
	return _80917_ok;
}



inline void _1a84c4591_check(_1a84c2eeb_StructLitChecker* _self_, jule::Slice<jule::Ptr<_210e87caa_Expr>>& _83229_exprs) {
	if ((_83229_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1a84c431b_ready_exprs(&(*_self_), _83229_exprs)))) {
		return;;
	};
	jule::Bool _84117_paired = false;;
	{
		auto &expr = _83229_exprs;
		auto it = expr.begin();
		_iter_begin_1aa73c52c:;
		if (it != expr.end()) {
			jule::I64 _84214_i = it - expr.begin();
			jule::Ptr<_210e87caa_Expr> _84221_expr = *it;
			{
				{
					auto &_match_expr{ _84221_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_21110ad1d_FieldExprPair>>()) {
						_case_begin_1aa741850:;
						{
							jule::Ptr<_21110ad1d_FieldExprPair> _84525_pair = _84221_expr.get()._field_kind.operator jule::Ptr<_21110ad1d_FieldExprPair>();;
							if (((_84214_i > 0LL) && (!(_84117_paired)))) {
								_1a84c3507_push_err(&(*_self_), _84525_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_84117_paired=true;
							_1a84c400d_check_pair(&(*_self_), _84525_pair,_83229_exprs);
						}
					}
					else {
						_case_begin_1aa73ce89:;
						{
							if (_84117_paired) {
								_1a84c3507_push_err(&(*_self_), _84221_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_84214_i >= (*_self_)._field_s.get()._field_fields.len())) {
								_1a84c3507_push_err(&(*_self_), _84221_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1aa73c52c;
							};
							jule::Ptr<_1b396694b_FieldIns> _86025_field = (*_self_)._field_s.get()._field_fields[_84214_i];;
							jule::Ptr<_1a850cbe5_TypeKind> _86225_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_86225_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_86025_field.get()._field_kind;
							jule::Ptr<_1a84d3869_Data> _86625_d = _1a84ee478_eval_expr_kind((*_self_)._field_e, jule::Any(_84221_expr.get()._field_kind));;
							if ((_86625_d == nullptr)) {
								goto _iter_next_1aa73c52c;
							};
							_1a84c3bde_push_match(&(*_self_), _86025_field,_86625_d,_84221_expr.get()._field_token);
						}
					}
					_match_end_1aa73ce34:;
				};
			}
			_iter_next_1aa73c52c:;
			++it;
			_84214_i++;
			goto _iter_begin_1aa73c52c;
		}
		_iter_end_1aa73c52c:;
	};
	if ((!(_84117_paired))) {
		jule::I64 _87717_n = (*_self_)._field_s.get()._field_fields.len();;
		jule::I64 _87821_diff = (_87717_n - _83229_exprs.len());;
		{
			
			if ((_87821_diff <= 0LL)) {
				_case_begin_1aa7443e1:;
				{
					return;;
				}
			}
			_match_end_1aa7442d1:;
		};
		jule::Str _88421_idents = jule::Str();;
		for (; (_87821_diff > 0LL); (_87821_diff)--) {
			{
				_88421_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[(_87717_n - _87821_diff)].get()._field_decl.get()._field_ident);
			}
		_iter_next_1aa73ca49:;
		}
		_iter_end_1aa73ca49:;;
		(_88421_idents).mut_slice(2LL);;
		_1a84c3507_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_88421_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a84c2eeb_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8487246_Var> _1a84c9dd2_build_var(_1a84c99d6_RangeChecker* _self_, jule::Ptr<_21110d161_VarDecl>& _90329_decl) {
	jule::Ptr<_1a8487246_Var> _90417_v = _1a5b3a59a_build_var(_90329_decl);;
	return _90417_v;
}



inline void _1a84ca0ad_set_size_key(_1a84c99d6_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _2110e9988_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_a=_1a84c9dd2_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5)))));
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
			_case_begin_1aa749418:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1a8486278_IterRelation>(_1a8486278_IterRelation((*_self_)._field_d.get()._field_model.operator jule::Ptr<_1a8487246_Var>()));
			}
		}
		_match_end_1aa749380:;
	};
}



inline void _1a84ca4ba_check_range_expr_validity(_1a84c99d6_RangeChecker* _self_, jule::Ptr<_1a84d3869_Data>& _93449_d, jule::Ptr<_1a8487246_Var>& _93460_key, jule::Ptr<_1a850cbe5_TypeKind>& _93476_k) {
	jule::Bool _93517__mut = _93460_key.get()._field_mutable;;
	if ((_93517__mut && (!(_1a850e08c_mutable(_93476_k.ptr()))))) {
		_93517__mut=false;
	};
	_1a84766db_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _93517__mut,_93460_key.get()._field_reference,_93460_key.get()._field_kind.get()._field_kind,_93449_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1a84ca685_check_slice(_1a84c99d6_RangeChecker* _self_) {
	_1a84ca0ad_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _2110e9988_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1a85163b3_Slc> _95317_slc = _1a85109b7_slc((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1a84c9dd2_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),_95317_slc.get()._field_elem));
	_1a84ca4ba_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_95317_slc.get()._field_elem);
}



inline void _1a84ca861_check_array(_1a84c99d6_RangeChecker* _self_) {
	_1a84ca0ad_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _2110e9988_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1a851855d_Arr> _96617_arr = _1a8510753_arr((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1a84c9dd2_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),_96617_arr.get()._field_elem));
	_1a84ca4ba_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_96617_arr.get()._field_elem);
}



inline void _1a84caa3c_check_map_key_a(_1a84c99d6_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _2110e9988_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1a8517969_Map> _97817_m = _1a8511468_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_a=_1a84c9dd2_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),_97817_m.get()._field_key));
	jule::Ptr<_1a84d3869_Data> _98217_d = jule::new_ptr<_1a84d3869_Data>((*((*_self_)._field_d)));;
	_98217_d.get()._field_kind=_97817_m.get()._field_key;
	_1a84ca4ba_check_range_expr_validity(&(*_self_), _98217_d,(*_self_)._field_kind.get()._field_key_a,_97817_m.get()._field_key);
}



inline void _1a84cac18_check_map_key_b(_1a84c99d6_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _2110e9988_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1a8517969_Map> _99317_m = _1a8511468_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1a84c9dd2_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),_99317_m.get()._field_val));
	jule::Ptr<_1a84d3869_Data> _99717_d = jule::new_ptr<_1a84d3869_Data>((*((*_self_)._field_d)));;
	_99717_d.get()._field_kind=_99317_m.get()._field_val;
	_1a84ca4ba_check_range_expr_validity(&(*_self_), _99717_d,(*_self_)._field_kind.get()._field_key_b,_99317_m.get()._field_val);
}



inline void _1a84cade4_check_map(_1a84c99d6_RangeChecker* _self_) {
	_1a84caa3c_check_map_key_a(&(*_self_));
	_1a84cac18_check_map_key_b(&(*_self_));
}



inline void _1a84cb0c0_check_str(_1a84c99d6_RangeChecker* _self_) {
	_1a84ca0ad_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _2110e9988_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_b=_1a84c9dd2_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("u8", 2)), 5)))));
}



inline jule::Bool _1a84cb334_check(_1a84c99d6_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1aa7607d6:;
		}
		else if ((_1a85109b7_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa75e32e:;
			{
				_1a84ca685_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1a8510753_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa75e395:;
			{
				_1a84ca861_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1a8511468_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa75e40b:;
			{
				_1a84cade4_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1aa75e2b8:;
			{
				jule::Ptr<_1a8512447_Prim> _103617_prim = _1a850eca2_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (((_103617_prim != nullptr) && _1a8515406_is_str(_103617_prim.ptr()))) {
					_1a84cb0c0_check_str(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1aa75e1ec:;
	};
	_1a846e65c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a84c99d6_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1a84cc07c_prepare_types(_1a84cbac6_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1a5b33b7b_types((*_self_)._field_f.ptr());
	};
}



inline void _1a84cc302_prepare_exprs(_1a84cbac6_RetTypeChecker* _self_, jule::Ptr<_210e87caa_Expr>& _106537_e) {
	if ((_106537_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _106537_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_211079ae4_TupleExpr>>()) {
			_case_begin_1aa766501:;
			{
				(*_self_)._field_exprs=_106537_e.get()._field_kind.operator jule::Ptr<_211079ae4_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1aa765258:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_106537_e);;
			}
		}
		_match_end_1aa765203:;
	};
}



inline void _1a84cc4cd_ret_vars(_1a84cbac6_RetTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1a5b30419_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1a8487246_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len());
	jule::Ptr<_1a844d4e8_ScopeChecker> _108317_root_scope = _1a845063d_get_root((*_self_)._field_sc);;
	jule::I64 _108517_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1aa768932:;
		if (it != expr.end()) {
			jule::I64 _108613_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> _108616_ident = *it;
			{
				if (((!(_2110e9988_is_ignore_ident(_108616_ident.get()._field_kind))) && (!(_2110e9c30_is_anon_ident(_108616_ident.get()._field_kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_108317_root_scope.get()._field_table.get()._field_vars[_108517_j]);;
					(_108517_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1a8487246_Var>(_1a8487246_Var(jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_2110e7238_Token>(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),(*_self_)._field_types[_108613_i])),jule::Ptr<_1a84d48e2_Value>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Slice<jule::Ptr<_210eb33e0_Directive>>(),jule::Ptr<_1a8486278_IterRelation>(),jule::Slice<jule::Ptr<_1a8487246_Var>>())));;
				};
			}
			_iter_next_1aa768932:;
			++it;
			_108613_i++;
			goto _iter_begin_1aa768932;
		}
		_iter_end_1aa768932:;
	};
	if ((_108517_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1a84cc6a9_check_exprs(_1a84cbac6_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a84d3869_Data>> _110917_datas = jule::Slice<jule::Ptr<_1a84d3869_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aa76c293:;
		if (it != expr.end()) {
			jule::I64 _111114_i = it - expr.begin();
			jule::Ptr<_210e87caa_Expr> _111121_expr = *it;
			{
				if ((_111114_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1aa76c293;
				};
				jule::Ptr<_1a850cbe5_TypeKind> _111621_t = (*_self_)._field_types[_111114_i];;
				jule::Ptr<_1a84d3869_Data> _111821_d = _1a84eea94_eval_expr(_1a84740ac_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1a85260a4_Lookup>((*_self_)._field_sc, 0),_111621_t), _111121_expr);;
				if ((_111821_d == nullptr)) {
					goto _iter_next_1aa76c293;
				};
				_110917_datas = jule::alloc_for_append(_110917_datas,1);_110917_datas.__push(_111821_d);;
				if (((!(_111821_d.get()._field_mutable)) && _1a850e08c_mutable(_111821_d.get()._field_kind.ptr()))) {
					_1a846e65c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1a84baed3_AssignTypeChecker _113021_ac = _1a84baed3_AssignTypeChecker((*_self_)._field_sc.get()._field_s,_111621_t,_111821_d,(*_self_)._field_error_token);;
				_1a84bc15a_check(&_113021_ac);
			}
			_iter_next_1aa76c293:;
			++it;
			_111114_i++;
			goto _iter_begin_1aa76c293;
		}
		_iter_end_1aa76c293:;
	};
	if ((_110917_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1b396ee71_TupleExprModel>(_1b396ee71_TupleExprModel(_110917_datas)));
	} else if ((_110917_datas.len() == 1LL)) {
		(*_self_)._field_model=jule::Any(_110917_datas[0LL].get()._field_model);
	};
}



inline jule::Bool _1a84cc9b7_check(_1a84cbac6_RetTypeChecker* _self_, jule::Ptr<_210e87caa_Expr>& _114929_e) {
	_1a84cc07c_prepare_types(&(*_self_));
	_1a84cc302_prepare_exprs(&(*_self_), _114929_e);
	_1a84cc4cd_ret_vars(&(*_self_));
	jule::I64 _115413_n = (*_self_)._field_exprs.len();;
	if (((_115413_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1a5b3112e_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1a846e65c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_115413_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1a5b30419_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		_1a846e65c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_115413_n > (*_self_)._field_types.len())) {
		_1a846e65c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_115413_n < (*_self_)._field_types.len())) {
		_1a846e65c_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1a84cc6a9_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a84cbac6_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a84cdcb5_find_package(_1a84cd7a9_SymbolTable* _self_, jule::Str _2535_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1aa778d2c:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _2621_pkg = *it;
			{
				if ((_2621_pkg.get()._field_ident == _2535_ident)) {
					return _2621_pkg;
				};
			}
			_iter_next_1aa778d2c:;
			++it;
			goto _iter_begin_1aa778d2c;
		}
		_iter_end_1aa778d2c:;
	};
	return nullptr;
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a84ce0c3_select_package(_1a84cd7a9_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)> _3737_selector) {
	if ((_3737_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1aa77a0e7:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _4221_pkg = *it;
			{
				if (_3737_selector(_4221_pkg)) {
					return _4221_pkg;
				};
			}
			_iter_next_1aa77a0e7:;
			++it;
			goto _iter_begin_1aa77a0e7;
		}
		_iter_end_1aa77a0e7:;
	};
	return nullptr;
}



inline jule::Ptr<_1a8487246_Var> _1a84ce47a_find_var(_1a84cd7a9_SymbolTable* _self_, jule::Str _5231_ident, jule::Bool _5243_cpp_linked) {
	return _1a84d0c2e___find_var(&(*_self_), _5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_1a850bead_TypeAlias> _1a84ce832_find_type_alias(_1a84cd7a9_SymbolTable* _self_, jule::Str _5838_ident, jule::Bool _5850_cpp_linked) {
	return _1a84d1180___find_type_alias(&(*_self_), _5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_1b396462a_Struct> _1a84cebd9_find_struct(_1a84cd7a9_SymbolTable* _self_, jule::Str _6434_ident, jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1aa77da46:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_ident == _6434_ident) && (_6521_s.get()._field_cpp_linked == _6446_cpp_linked))) {
					return _6521_s;
				};
			}
			_iter_next_1aa77da46:;
			++it;
			goto _iter_begin_1aa77da46;
		}
		_iter_end_1aa77da46:;
	};
	return nullptr;
}



inline jule::Ptr<_1a5b2eeb8_Fn> _1a84d0091_find_fn(_1a84cd7a9_SymbolTable* _self_, jule::Str _7530_ident, jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1aa7803e9:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_ident == _7530_ident) && (_7621_f.get()._field_cpp_linked == _7542_cpp_linked))) {
					return _7621_f;
				};
			}
			_iter_next_1aa7803e9:;
			++it;
			goto _iter_begin_1aa7803e9;
		}
		_iter_end_1aa7803e9:;
	};
	return nullptr;
}



inline jule::Ptr<_1a5e34531_Trait> _1a84d039e_find_trait(_1a84cd7a9_SymbolTable* _self_, jule::Str _8633_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1aa781939:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e34531_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_ident == _8633_ident)) {
					return _8721_t;
				};
			}
			_iter_next_1aa781939:;
			++it;
			goto _iter_begin_1aa781939;
		}
		_iter_end_1aa781939:;
	};
	return nullptr;
}



inline jule::Ptr<_1a83065e3_Enum> _1a84d06ac_find_enum(_1a84cd7a9_SymbolTable* _self_, jule::Str _9732_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1aa782c04:;
		if (it != expr.end()) {
			jule::Ptr<_1a83065e3_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_ident == _9732_ident)) {
					return _9821_e;
				};
			}
			_iter_next_1aa782c04:;
			++it;
			goto _iter_begin_1aa782c04;
		}
		_iter_end_1aa782c04:;
	};
	return nullptr;
}



inline jule::Ptr<_1a8487246_Var> _1a84d0c2e___find_var(_1a84cd7a9_SymbolTable* _self_, jule::Str _10829_ident, jule::Bool _10841_cpp_linked, jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = ((*_self_)._field_vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1a8487246_Var> _11225_v = (*_self_)._field_vars[_11021_i];;
				if (((_11225_v.get()._field_ident == _10829_ident) && (_11225_v.get()._field_cpp_linked == _10841_cpp_linked))) {
					return _11225_v;
				};
			}
		_iter_next_1aa784277:;
		}
		_iter_end_1aa784277:;;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1aa7843cb:;
			if (it != expr.end()) {
				jule::Ptr<_1a8487246_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_ident == _10829_ident) && (_11825_v.get()._field_cpp_linked == _10841_cpp_linked))) {
						return _11825_v;
					};
				}
				_iter_next_1aa7843cb:;
				++it;
				goto _iter_begin_1aa7843cb;
			}
			_iter_end_1aa7843cb:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1a850bead_TypeAlias> _1a84d1180___find_type_alias(_1a84cd7a9_SymbolTable* _self_, jule::Str _12736_ident, jule::Bool _12748_cpp_linked, jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = ((*_self_)._field_type_aliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1a850bead_TypeAlias> _13125_ta = (*_self_)._field_type_aliases[_12921_i];;
				if (((_13125_ta.get()._field_ident == _12736_ident) && (_13125_ta.get()._field_cpp_linked == _12748_cpp_linked))) {
					return _13125_ta;
				};
			}
		_iter_next_1aa78708d:;
		}
		_iter_end_1aa78708d:;;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1aa7871e2:;
			if (it != expr.end()) {
				jule::Ptr<_1a850bead_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_ident == _12736_ident) && (_13725_ta.get()._field_cpp_linked == _12748_cpp_linked))) {
						return _13725_ta;
					};
				}
				_iter_next_1aa7871e2:;
				++it;
				goto _iter_begin_1aa7871e2;
			}
			_iter_end_1aa7871e2:;
		};
	};
	return nullptr;
}



inline jule::Any _1a84d1537_def_by_ident(_1a84cd7a9_SymbolTable* _self_, jule::Str _14831_ident, jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1aa789898:;
		if (it != expr.end()) {
			jule::Ptr<_1a8487246_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_ident == _14831_ident) && (_14921_v.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_14921_v);
				};
			}
			_iter_next_1aa789898:;
			++it;
			goto _iter_begin_1aa789898;
		}
		_iter_end_1aa789898:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1aa789920:;
		if (it != expr.end()) {
			jule::Ptr<_1a850bead_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_ident == _14831_ident) && (_15521_ta.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_15521_ta);
				};
			}
			_iter_next_1aa789920:;
			++it;
			goto _iter_begin_1aa789920;
		}
		_iter_end_1aa789920:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1aa78a943:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_ident == _14831_ident) && (_16121_s.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_16121_s);
				};
			}
			_iter_next_1aa78a943:;
			++it;
			goto _iter_begin_1aa78a943;
		}
		_iter_end_1aa78a943:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1aa78b58c:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_ident == _14831_ident) && (_16721_f.get()._field_cpp_linked == _14843_cpp_linked))) {
					return jule::Any(_16721_f);
				};
			}
			_iter_next_1aa78b58c:;
			++it;
			goto _iter_begin_1aa78b58c;
		}
		_iter_end_1aa78b58c:;
	};
	if (_14843_cpp_linked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1aa78c2d5:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e34531_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_ident == _14831_ident)) {
					return jule::Any(_17721_t);
				};
			}
			_iter_next_1aa78c2d5:;
			++it;
			goto _iter_begin_1aa78c2d5;
		}
		_iter_end_1aa78c2d5:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1aa78d79d:;
		if (it != expr.end()) {
			jule::Ptr<_1a83065e3_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_ident == _14831_ident)) {
					return jule::Any(_18321_e);
				};
			}
			_iter_next_1aa78d79d:;
			++it;
			goto _iter_begin_1aa78d79d;
		}
		_iter_end_1aa78d79d:;
	};
	return nullptr;
}



inline jule::Bool _1a84d1988_is_duplicated_ident(_1a84cd7a9_SymbolTable* _self_, jule::U64 _19534_itself, jule::Str _19551_ident, jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1aa78e8e2:;
		if (it != expr.end()) {
			jule::Ptr<_1a8487246_Var> &_19616_v = *it;
			{
				if ((((static_cast<jule::U64>(_19616_v) != _19534_itself) && (_19616_v.get()._field_ident == _19551_ident)) && (_19616_v.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1aa78e8e2:;
			++it;
			goto _iter_begin_1aa78e8e2;
		}
		_iter_end_1aa78e8e2:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1aa790b9b:;
		if (it != expr.end()) {
			jule::Ptr<_1a850bead_TypeAlias> &_20216_ta = *it;
			{
				if ((((static_cast<jule::U64>(_20216_ta) != _19534_itself) && (_20216_ta.get()._field_ident == _19551_ident)) && (_20216_ta.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1aa790b9b:;
			++it;
			goto _iter_begin_1aa790b9b;
		}
		_iter_end_1aa790b9b:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1aa78ec33:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> &_20816_s = *it;
			{
				if ((((static_cast<jule::U64>(_20816_s) != _19534_itself) && (_20816_s.get()._field_ident == _19551_ident)) && (_20816_s.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1aa78ec33:;
			++it;
			goto _iter_begin_1aa78ec33;
		}
		_iter_end_1aa78ec33:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1aa791c79:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> &_21416_f = *it;
			{
				if ((((static_cast<jule::U64>(_21416_f) != _19534_itself) && (_21416_f.get()._field_ident == _19551_ident)) && (_21416_f.get()._field_cpp_linked == _19563_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1aa791c79:;
			++it;
			goto _iter_begin_1aa791c79;
		}
		_iter_end_1aa791c79:;
	};
	if (_19563_cpp_linked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1aa790cab:;
		if (it != expr.end()) {
			jule::Ptr<_1a5e34531_Trait> &_22416_t = *it;
			{
				if (((static_cast<jule::U64>(_22416_t) != _19534_itself) && (_22416_t.get()._field_ident == _19551_ident))) {
					return true;
				};
			}
			_iter_next_1aa790cab:;
			++it;
			goto _iter_begin_1aa790cab;
		}
		_iter_end_1aa790cab:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1aa793ece:;
		if (it != expr.end()) {
			jule::Ptr<_1a83065e3_Enum> &_23016_e = *it;
			{
				if (((static_cast<jule::U64>(_23016_e) != _19534_itself) && (_23016_e.get()._field_ident == _19551_ident))) {
					return true;
				};
			}
			_iter_next_1aa793ece:;
			++it;
			goto _iter_begin_1aa793ece;
		}
		_iter_end_1aa793ece:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a84cd7a9_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a84d3c54_is_nil(_1a84d3869_Data* _self_) {
	return _1a850dab4_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1a84d3eb8_is_void(_1a84d3869_Data* _self_) {
	return _1a850dd28_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1a84d422c_is_const(_1a84d3869_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1a84d453a_good_operand(_1a84d3869_Data* _self_, jule::Ptr<_1a84d3869_Data>& _9536_other) {
	return ((((_1a850eca2_prim(_9536_other.get()._field_kind.ptr()) == nullptr) || (!(_1a851566a_is_any(_1a850eca2_prim(_9536_other.get()._field_kind.ptr()).ptr())))) && (_1a8511204_trt(_9536_other.get()._field_kind.ptr()) == nullptr)) && (!(_1a850dab4_is_nil((*_self_)._field_kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1a84d3869_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a84d48e2_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1a84d58b0_push_err(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _12327_token, jule::Str _12342_fmt, jule::Slice<jule::Any> _12355_args) {
	_1a846e65c_push_err((*_self_)._field_s.ptr(), _12327_token,_12342_fmt,jule::Any(_12355_args));
}



inline void _1a84d5bce_push_suggestion(_1a84d53d7_Eval* _self_, jule::Str _12834_fmt, jule::Slice<jule::Any> _12847_args) {
	_1a846e97b_push_suggestion((*_self_)._field_s.ptr(), _12834_fmt,jule::Any(_12847_args));
}



inline void _1a84d5daa_allow_builtin(_1a84d53d7_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1a84d6086_disallow_builtin(_1a84d53d7_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1a84d62ea_is_unsafe(_1a84d53d7_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1a84d655e_is_global(_1a84d53d7_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a846bc42_Sema>>()) {
			_case_begin_1aa79c339:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa79c59d:;
			{
				return false;
			}
		}
		_match_end_1aa79c548:;
	};
}



inline jule::Bool _1a84d686c_apply_numeric_prefix(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data>& _15544_d) {
	if (((((_15544_d == nullptr) || (!(_1a84d422c_is_const(_15544_d.ptr())))) || (_1a850eca2_prim(_15544_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1a8512447_Prim> _16213_prim = _1a850eca2_prim((*_self_)._field_prefix.ptr());;
	if ((_16213_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1a844b529_is_float(_1a85127aa_to_str(_16213_prim.ptr()))) {
			_case_begin_1aa79eeb8:;
			{
				_15544_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>((*((*_self_)._field_prefix)));
				_1a83ab8da_set_f64(_15544_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a83aab70_as_f64(_15544_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a844abaa_is_sig_int(_1a85127aa_to_str(_16213_prim.ptr()))) {
			_case_begin_1aa7a023d:;
			{
				if ((!(_1a84b98b6_sig_assignable(_1a85127aa_to_str(_16213_prim.ptr()),_15544_d)))) {
					return false;
				};
				_15544_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>((*((*_self_)._field_prefix)));
				_1a83aade5_set_i64(_15544_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a83aa697_as_i64(_15544_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a844ae96_is_unsig_int(_1a85127aa_to_str(_16213_prim.ptr()))) {
			_case_begin_1aa7a02b5:;
			{
				if ((!(_1a84b99e8_unsig_assignable(_1a85127aa_to_str(_16213_prim.ptr()),_15544_d)))) {
					return false;
				};
				_15544_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>((*((*_self_)._field_prefix)));
				_1a83ab16a_set_u64(_15544_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a83aa90b_as_u64(_15544_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1aa79edec:;
	};
	return true;
}



inline jule::Ptr<_1a84d3869_Data> _1a84d6ad1_lit_nil(_1a84d53d7_Eval* _self_) {
	jule::Ptr<_1a83a871c_Const> _19117_constant = static__1a83a9388_new_nil();;
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),false,jule::Bool(),false,jule::Bool(),jule::Any(_19117_constant),false,_19117_constant));
}



inline jule::Ptr<_1a84d3869_Data> _1a84d6dde_lit_str(_1a84d53d7_Eval* _self_, jule::Ptr<_211109701_LitExpr>& _20223_l) {
	jule::Str _20317_s = _20223_l.get()._field_value.slice(1LL,(_20223_l.get()._field_value.len() - 1LL));;
	if (_2110e858b_is_raw_str(_20223_l.get()._field_value)) {
		_20317_s=_1a84b8882_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20317_s));
	} else {
		_20317_s=_1a84b8b07_to_str(static_cast<jule::Slice<jule::U8>>(_20317_s));
	};
	jule::Ptr<_1a83a871c_Const> _20917_constant = static__1a83a8de3_new_str(_20317_s);;
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("str", 3)), 5))),false,jule::Bool(),false,jule::Bool(),jule::Any(_20917_constant),false,_20917_constant));
}



inline jule::Ptr<_1a84d3869_Data> _1a84d71ec_lit_bool(_1a84d53d7_Eval* _self_, jule::Ptr<_211109701_LitExpr>& _22324_l) {
	jule::Ptr<_1a83a871c_Const> _22417_constant = static__1a83a8b6d_new_bool((_22324_l.get()._field_value == jule::Str("true", 4)));;
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),false,jule::Bool(),false,jule::Bool(),jule::Any(_22417_constant),false,_22417_constant));
}



inline jule::Ptr<_1a84d3869_Data> _1a84d750a_lit_rune(_1a84d53d7_Eval* _self_, jule::Ptr<_211109701_LitExpr>& _23724_l) {
	;
	;
	jule::Str _24113_lt = _23724_l.get()._field_value.slice(1LL,(_23724_l.get()._field_value.len() - 1LL));;
	jule::I32 _24213_r = _1a84b8750_to_rune(static_cast<jule::Slice<jule::U8>>(_24113_lt));;
	jule::Ptr<_1a84d3869_Data> _24317_data = jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::Ptr<_1a850cbe5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,static__1a83a8909_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24213_r)))));;
	jule::Bool _25113_is_ascii = _1a84b6c7b_is_ascii(_24213_r);;
	if (_25113_is_ascii) {
		_24317_data.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("u8", 2)), 5)));
	} else {
		_24317_data.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("i32", 3)), 5)));
	};
	_24317_data.get()._field_model=jule::Any(jule::new_ptr<_1a5b2b7cd_RuneExprModel>(_1a5b2b7cd_RuneExprModel(_24213_r)));
	_24317_data.get()._field_is_rune=true;
	return _24317_data;
}



inline jule::Ptr<_1a84d3869_Data> _1a84d7818_lit_float(_1a84d53d7_Eval* _self_, jule::Ptr<_211109701_LitExpr>& _26725_l) {
	;
	jule::F64 _27013_f = ({
		auto except = _1a8302e3b_parse_float(_26725_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1a83a871c_Const> _27117_constant = static__1a83a918a_new_f64(_27013_f);;
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("f64", 3)), 5))),false,jule::Bool(),false,jule::Bool(),jule::Any(_27117_constant),false,_27117_constant));
}



inline jule::Ptr<_1a84d3869_Data> _1a84d7b26_lit_int(_1a84d53d7_Eval* _self_, jule::Ptr<_211109701_LitExpr>& _28527_l) {
	;
	jule::Str _28817_lit = _28527_l.get()._field_value;;
	jule::I64 _28917_base = 0LL;;
	{
		
		if (_210b8d120_has_prefix(_28817_lit,jule::Str("0x", 2))) {
			_case_begin_1aa7b31da:;
			{
				(_28817_lit).mut_slice(2LL);;
				_28917_base=16LL;
			}
		}
		else if (_210b8d120_has_prefix(_28817_lit,jule::Str("0b", 2))) {
			_case_begin_1aa7b353c:;
			{
				(_28817_lit).mut_slice(2LL);;
				_28917_base=2LL;
			}
		}
		else if (_210b8d120_has_prefix(_28817_lit,jule::Str("0o", 2))) {
			_case_begin_1aa7b2dcc:;
			{
				(_28817_lit).mut_slice(2LL);;
				_28917_base=8LL;
			}
		}
		else if (((_28817_lit[0LL] == '0') && (_28817_lit.len() > 1LL))) {
			_case_begin_1aa7b2e43:;
			{
				(_28817_lit).mut_slice(1LL);;
				_28917_base=8LL;
			}
		}
		else {
			_case_begin_1aa7b2d66:;
			{
				_28917_base=10LL;
			}
		}
		_match_end_1aa7b2d00:;
	};
	jule::Ptr<_1a84d3869_Data> _30917_d = jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::Ptr<_1a850cbe5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a83a871c_Const>()));;
	jule::Bool _31517_ok = true;;
	jule::I64 _31613_sig = ({
		auto except = _1a5e68b09_parse_int(_28817_lit,_28917_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31517_ok=false;
			0LL;
		});
	});;
	if (_31517_ok) {
		_30917_d.get()._field_constant=static__1a83a8909_new_i64(_31613_sig);
		_30917_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5)));
	} else {
		jule::U64 _32617_unsig = ({
			auto except = _1a81c9032_parse_uint(_28817_lit,_28917_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1a84d58b0_push_err(&(*_self_), _28527_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1a84d5bce_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_30917_d.get()._field_constant=static__1a83a8a3b_new_u64(_32617_unsig);
		_30917_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("uint", 4)), 5)));
	};
	_30917_d.get()._field_model=jule::Any(_30917_d.get()._field_constant);
	if ((!(_1a84d686c_apply_numeric_prefix(&(*_self_), _30917_d)))) {
		_1a8507dcc_fit_bitsize(_30917_d);
	};
	return _30917_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84d7e34_lit_num(_1a84d53d7_Eval* _self_, jule::Ptr<_211109701_LitExpr>& _34727_l) {
	{
		
		if (_2110e91a2_is_float(_34727_l.get()._field_value)) {
			_case_begin_1aa7bc0e5:;
			{
				return _1a84d7818_lit_float(&(*_self_), _34727_l);
			}
		}
		else {
			_case_begin_1aa7bb787:;
			{
				return _1a84d7b26_lit_int(&(*_self_), _34727_l);
			}
		}
		_match_end_1aa7bb6bb:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84d8242_eval_lit(_1a84d53d7_Eval* _self_, jule::Ptr<_211109701_LitExpr> _35627_lit) {
	{
		
		if (_210ea0861_is_nil(_35627_lit.ptr())) {
			_case_begin_1aa7bd855:;
			{
				return _1a84d6ad1_lit_nil(&(*_self_));
			}
		}
		else if (_2110e82e4_is_str(_35627_lit.get()._field_value)) {
			_case_begin_1aa7bd8bb:;
			{
				return _1a84d6dde_lit_str(&(*_self_), _35627_lit);
			}
		}
		else if (_2110e8e0a_is_bool(_35627_lit.get()._field_value)) {
			_case_begin_1aa7bd5e1:;
			{
				return _1a84d71ec_lit_bool(&(*_self_), _35627_lit);
			}
		}
		else if (_2110e8833_is_rune(_35627_lit.get()._field_value)) {
			_case_begin_1aa7bd657:;
			{
				return _1a84d750a_lit_rune(&(*_self_), _35627_lit);
			}
		}
		else if (_2110e9449_is_num(_35627_lit.get()._field_value)) {
			_case_begin_1aa7bd6bd:;
			{
				return _1a84d7e34_lit_num(&(*_self_), _35627_lit);
			}
		}
		else {
			_case_begin_1aa7bd17e:;
			{
				return nullptr;
			}
		}
		_match_end_1aa7bd0b3:;
	};
}



inline jule::Any _1a84d8550_find_builtins(_1a84d53d7_Eval* _self_, jule::Str _37332_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a8464058_ImportInfo>>()) {
			_case_begin_1aa7c177b:;
			{
				jule::Any _37621_def = _1a8507bbd_find_builtins_import(_37332_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a8464058_ImportInfo>());;
				if ((_37621_def != nullptr)) {
					return jule::Any(_37621_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a846bc42_Sema>>()) {
			_case_begin_1aa7c1836:;
			{
				jule::Any _38121_def = _1a850885b_find_builtins_sema(_37332_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a846bc42_Sema>());;
				if ((_38121_def != nullptr)) {
					return jule::Any(_38121_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844d4e8_ScopeChecker>>()) {
			_case_begin_1aa7c189c:;
			{
				jule::Any _38621_def = _1a850885b_find_builtins_sema(_37332_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a844d4e8_ScopeChecker>().get()._field_s);;
				if ((_38621_def != nullptr)) {
					return jule::Any(_38621_def);
				};
			}
		}
		_match_end_1aa7c16d2:;
	};
	if ((*_self_)._field_dis_builtin) {
		return nullptr;
	};
	return jule::Any(_1a853469a_find_builtin_def(_37332_ident));
}



inline jule::Any _1a84d8907_get_def(_1a84d53d7_Eval* _self_, jule::Str _39726_ident, jule::Bool _39738_cpp_linked) {
	if ((!(_39738_cpp_linked))) {
		jule::Ptr<_1a83065e3_Enum> _39921_enm = _1a85260a4_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a8525e61_find_enum((*_self_)._field_lookup, _39726_ident);;
		if ((_39921_enm != nullptr)) {
			return jule::Any(_39921_enm);
		};
	};
	jule::Ptr<_1a8487246_Var> _40517_v = _1a85260a4_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a8524c2e_find_var((*_self_)._field_lookup, _39726_ident,_39738_cpp_linked);;
	if ((_40517_v != nullptr)) {
		return jule::Any(_40517_v);
	};
	jule::Ptr<_1a5b2eeb8_Fn> _41017_f = _1a85260a4_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a8525845_find_fn((*_self_)._field_lookup, _39726_ident,_39738_cpp_linked);;
	if ((_41017_f != nullptr)) {
		return jule::Any(_41017_f);
	};
	jule::Ptr<_1b396462a_Struct> _41517_s = _1a85260a4_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a852548d_find_struct((*_self_)._field_lookup, _39726_ident,_39738_cpp_linked);;
	if ((_41517_s != nullptr)) {
		return jule::Any(_41517_s);
	};
	jule::Ptr<_1a850bead_TypeAlias> _42017_ta = _1a85260a4_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a85250d6_find_type_alias((*_self_)._field_lookup, _39726_ident,_39738_cpp_linked);;
	if ((_42017_ta != nullptr)) {
		return jule::Any(_42017_ta);
	};
	return jule::Any(_1a84d8550_find_builtins(&(*_self_), _39726_ident));
}



inline void _1a84d8b7c_push_reference(_1a84d53d7_Eval* _self_, jule::Ptr<_1a5b36222_ReferenceStack>& _42838_references) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a844d4e8_ScopeChecker>>()) {
			_case_begin_1aa7ca675:;
			{
				jule::Ptr<_1a844d4e8_ScopeChecker> _43121_sc = _1a845063d_get_root((*_self_)._field_lookup.operator jule::Ptr<_1a844d4e8_ScopeChecker>());;
				if ((!(_1a5b371ce_exist_1(_42838_references.ptr(), _43121_sc.get()._field_owner)))) {
					_1a5b36dc1_push(_42838_references.ptr(), jule::Any(_43121_sc.get()._field_owner));
				};
			}
		}
		else {
			_case_begin_1aa7c9e7c:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1a5b371ce_exist_0(_42838_references.ptr(), (*_self_)._field_owner))))) {
					_1a5b36dc1_push(_42838_references.ptr(), jule::Any((*_self_)._field_owner));
				};
			}
		}
		_match_end_1aa7c9e27:;
	};
}



inline void _1a84d8e02_push_reference_to_fn(_1a84d53d7_Eval* _self_, jule::Ptr<_1a5b33164_FnIns>& _44244_f) {
	_1a84d8b7c_push_reference(&(*_self_), _44244_f.get()._field_references);
}



inline void _1a84d9177_push_reference_to_var(_1a84d53d7_Eval* _self_, jule::Ptr<_1a8487246_Var>& _44645_v) {
	if ((_44645_v.get()._field_references != nullptr)) {
		_1a84d8b7c_push_reference(&(*_self_), _44645_v.get()._field_references);
	};
}



inline void _1a84d9441_push_reference_to_struct(_1a84d53d7_Eval* _self_, jule::Ptr<_1b39672a9_StructIns>& _45248_s) {
	_1a84d8b7c_push_reference(&(*_self_), _45248_s.get()._field_references);
}



inline jule::Ptr<_1a84d3869_Data> _1a84d973d___eval_enum(_1a84d53d7_Eval* _self_, jule::Ptr<_1a83065e3_Enum> _45630_enm) {
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_45630_enm, 3))),false,jule::Bool(),false,jule::Bool(),jule::Any(),true,nullptr));
}



inline jule::Ptr<_1a84d3869_Data> _1a84d9ae5_eval_enum(_1a84d53d7_Eval* _self_, jule::Ptr<_1a83065e3_Enum> _46832_enm, jule::Ptr<_2110e7238_Token> _46844_error_token) {
	if ((!(_1a846ed33_is_accessible_define((*_self_)._field_s.ptr(), _46832_enm.get()._field_public,_46832_enm.get()._field_token)))) {
		_1a84d58b0_push_err(&(*_self_), _46844_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_46832_enm.get()._field_ident)}));
		_1a84d5bce_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1a84d973d___eval_enum(&(*_self_), _46832_enm);
}



inline jule::Ptr<_1a84d3869_Data> _1a84d9e03___eval_struct(_1a84d53d7_Eval* _self_, jule::Ptr<_1b39672a9_StructIns> _47832_s) {
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_47832_s, 0))),false,jule::Bool(),false,jule::Bool(),jule::Any(_47832_s),true,nullptr));
}



inline jule::Ptr<_1a84d3869_Data> _1a84da2aa_eval_struct(_1a84d53d7_Eval* _self_, jule::Ptr<_1b39672a9_StructIns> _49134_s, jule::Ptr<_2110e7238_Token> _49149_error_token) {
	if ((!(_1a846ed33_is_accessible_define((*_self_)._field_s.ptr(), _49134_s.get()._field_decl.get()._field_public,_49134_s.get()._field_decl.get()._field_token)))) {
		_1a84d58b0_push_err(&(*_self_), _49149_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_49134_s.get()._field_decl.get()._field_ident)}));
		_1a84d5bce_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a84da8d7_check_deprecated(&(*_self_), _49134_s.get()._field_decl.get()._field_directives,_49149_error_token);
	return _1a84d9e03___eval_struct(&(*_self_), _49134_s);
}



inline jule::Ptr<_1a84d3869_Data> _1a84da5b8_eval_fn_ins(_1a84d53d7_Eval* _self_, jule::Ptr<_1a5b33164_FnIns> _50330_f) {
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_50330_f, 1))),false,jule::Bool(),false,jule::Bool(),jule::Any(_50330_f),false,nullptr));
}



inline void _1a84da8d7_check_deprecated(_1a84d53d7_Eval* _self_, jule::Slice<jule::Ptr<_210eb33e0_Directive>>& _51640_directives, jule::Ptr<_2110e7238_Token> _51682_tok) {
	if (_1a84d62ea_is_unsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_210eb33e0_Directive> _52113_d = _1a8507838_find_directive(_51640_directives,jule::Str("deprecated", 10));;
	if ((_52113_d != nullptr)) {
		if ((_52113_d.get()._field_args.len() == 0LL)) {
			_1a84d58b0_push_err(&(*_self_), _51682_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1a84d58b0_push_err(&(*_self_), _51682_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(_52113_d.get()._field_args[0LL].get()._field_kind)}));
		};
		_1a84d5bce_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84dac8e_eval_fn(_1a84d53d7_Eval* _self_, jule::Ptr<_1a5b2eeb8_Fn> _53230_f, jule::Ptr<_2110e7238_Token> _53238_error_token) {
	if ((!(_1a846ed33_is_accessible_define((*_self_)._field_s.ptr(), _53230_f.get()._field_public,_53230_f.get()._field_token)))) {
		_1a84d58b0_push_err(&(*_self_), _53238_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_53230_f.get()._field_ident)}));
		_1a84d5bce_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a84da8d7_check_deprecated(&(*_self_), _53230_f.get()._field_directives,_53238_error_token);
	jule::Ptr<_1a5b33164_FnIns> _54117_ins = _1a5b31b13_instance(_53230_f);;
	_1a84d8e02_push_reference_to_fn(&(*_self_), _54117_ins);
	return _1a84da5b8_eval_fn_ins(&(*_self_), _54117_ins);
}



inline void _1a84db19b_push_illegal_cycle_error(_1a84d53d7_Eval* _self_, jule::Ptr<_1a8487246_Var>& _54644_v1, jule::Ptr<_1a8487246_Var>& _54655_v2, jule::Str& _54670_message) {
	;
	jule::Str _54913_refers_to = _210c4036a_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_54644_v1.get()._field_ident),jule::Any(_54655_v2.get()._field_ident)}));;
	(_54670_message).buffer.insert(0, (((_20ecdd3a3_repeat(jule::Str(" ", 1),4LL) + _54913_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a84db542_check_cross_cycle(_1a84d53d7_Eval* _self_, jule::Ptr<_1a8487246_Var>& _55337_v, jule::Str& _55351_message) {
	{
		auto &expr = _55337_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1aa7e5d99:;
		if (it != expr.end()) {
			jule::Ptr<_1a8487246_Var> &_55416_d = *it;
			{
				if ((_55416_d == (*_self_)._field_owner)) {
					_1a84db19b_push_illegal_cycle_error(&(*_self_), _55337_v,_55416_d,_55351_message);
					return false;
				};
				if ((!(_1a84db542_check_cross_cycle(&(*_self_), _55416_d,_55351_message)))) {
					_1a84db19b_push_illegal_cycle_error(&(*_self_), _55337_v,_55416_d,_55351_message);
					return false;
				};
			}
			_iter_next_1aa7e5d99:;
			++it;
			goto _iter_begin_1aa7e5d99;
		}
		_iter_end_1aa7e5d99:;
	};
	return true;
}



inline jule::Bool _1a84db8e9_check_illegal_cycles(_1a84d53d7_Eval* _self_, jule::Ptr<_1a8487246_Var>& _57244_v, jule::Ptr<_2110e7238_Token> _57253_decl_token) {
	jule::Bool _57275_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_57275_ok = true;
		return _57275_ok;
	};
	if (((*_self_)._field_owner == _57244_v)) {
		_1a84d58b0_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_57275_ok = false;
		return _57275_ok;
	};
	jule::Str _58417_message = jule::Str();;
	if ((!(_1a84db542_check_cross_cycle(&(*_self_), _57244_v,_58417_message)))) {
		jule::Str _58721_err_msg = _58417_message;;
		_58417_message=jule::Str();
		_1a84db19b_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_57244_v,_58417_message);
		_58721_err_msg=(_58721_err_msg + _58417_message);
		_1a84d58b0_push_err(&(*_self_), _57253_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_58721_err_msg)}));
		_57275_ok = false;
		return _57275_ok;
	};
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_57244_v);;
	_57275_ok = true;
	return _57275_ok;
}



inline jule::Ptr<_1a84d3869_Data> _1a84dbca1_eval_var(_1a84d53d7_Eval* _self_, jule::Ptr<_1a8487246_Var> _59931_v, jule::Ptr<_2110e7238_Token> _59940_error_token) {
	if ((!(_1a846ed33_is_accessible_define((*_self_)._field_s.ptr(), _59931_v.get()._field_public,_59931_v.get()._field_token)))) {
		_1a84d58b0_push_err(&(*_self_), _59940_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_59931_v.get()._field_ident)}));
		_1a84d5bce_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a84da8d7_check_deprecated(&(*_self_), _59931_v.get()._field_directives,_59940_error_token);
	_59931_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a846bc42_Sema>>()) {
			_case_begin_1aa804da8:;
			{
				jule::Bool _61317_ok = _1a84db8e9_check_illegal_cycles(&(*_self_), _59931_v,_59940_error_token);;
				if ((!(_61317_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844d4e8_ScopeChecker>>()) {
			_case_begin_1aa804e30:;
			{
				if (((!(_59931_v.get()._field_reference)) || _1a84d62ea_is_unsafe(&(*_self_)))) {
					goto _match_end_1aa804d42;
				};
				jule::Ptr<_1a844d4e8_ScopeChecker> _62121_s = (*_self_)._field_lookup.operator jule::Ptr<_1a844d4e8_ScopeChecker>();;
				while (((_62121_s.get()._field_owner == nullptr) && (_62121_s.get()._field_parent != nullptr))) {
					{
						_62121_s=_62121_s.get()._field_parent;
					}
				_iter_next_1aa805c88:;
				}
				_iter_end_1aa805c88:;;
				if ((((_62121_s.get()._field_owner != nullptr) && _62121_s.get()._field_owner.get()._field_anon) && (_59931_v.get()._field_scope != _62121_s.get()._field_owner.get()._field_scope))) {
					_1a84d58b0_push_err(&(*_self_), _59940_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>({jule::Any(_59931_v.get()._field_ident)}));
				};
			}
		}
		_match_end_1aa804d42:;
	};
	_1a84d9177_push_reference_to_var(&(*_self_), _59931_v);
	if (((!(_59931_v.get()._field_cpp_linked)) && ((_59931_v.get()._field_value == nullptr) || (_59931_v.get()._field_value.get()._field_data == nullptr)))) {
		if (_59931_v.get()._field_constant) {
			_1a84801b7_check_type_var((*_self_)._field_s, _59931_v,jule::Trait<_1a85260a4_Lookup>((*_self_)._field_s, 3));
			if ((_59931_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_59931_v.get()._field_kind == nullptr) || (_59931_v.get()._field_kind.get()._field_kind == nullptr))) {
		if ((_59931_v.get()._field_scope != nullptr)) {
			return nullptr;
		};
		_1a84801b7_check_type_var((*_self_)._field_s, _59931_v,(*_self_)._field_lookup);
		if (((_59931_v.get()._field_kind == nullptr) || (_59931_v.get()._field_kind.get()._field_kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1a84d3869_Data> _66117_d = jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(_59931_v.get()._field_kind.get()._field_kind,_59931_v.get()._field_mutable,_59931_v.get()._field_reference,(!(_59931_v.get()._field_constant)),jule::Bool(),jule::Any(_59931_v),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));;
	if ((((!(_59931_v.get()._field_cpp_linked)) && _1a84875ed_is_initialized(_59931_v.ptr())) && (_59931_v.get()._field_value.get()._field_data != nullptr))) {
		_66117_d.get()._field_is_rune=_59931_v.get()._field_value.get()._field_data.get()._field_is_rune;
	};
	if ((_59931_v.get()._field_constant && (_59931_v.get()._field_value.get()._field_data.get()._field_constant != nullptr))) {
		_66117_d.get()._field_constant=jule::new_ptr<_1a83a871c_Const>((*(_59931_v.get()._field_value.get()._field_data.get()._field_constant)));
		_66117_d.get()._field_model=jule::Any(_66117_d.get()._field_constant);
	};
	if (_1a84d422c_is_const(_66117_d.ptr())) {
		_1a84d686c_apply_numeric_prefix(&(*_self_), _66117_d);
	};
	return _66117_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84dc158_eval_type_alias(_1a84d53d7_Eval* _self_, jule::Ptr<_1a850bead_TypeAlias> _68538_ta, jule::Ptr<_2110e7238_Token> _68554_error_token) {
	if ((!(_1a846ed33_is_accessible_define((*_self_)._field_s.ptr(), _68538_ta.get()._field_public,_68538_ta.get()._field_token)))) {
		_1a84d58b0_push_err(&(*_self_), _68554_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_68538_ta.get()._field_ident)}));
		_1a84d5bce_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_68538_ta.get()._field_used=true;
	jule::Trait<_1a850c7b6_Kind> _69417_kind = _68538_ta.get()._field_kind.get()._field_kind.get()._field_kind;;
	jule::Ptr<_1a84d3869_Data> _69517_d = nullptr;;
	{
		auto &_match_expr{ _69417_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b39672a9_StructIns>>()) {
			_case_begin_1aa814c75:;
			{
				_69517_d=_1a84d9e03___eval_struct(&(*_self_), _69417_kind.operator jule::Ptr<_1b39672a9_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83065e3_Enum>>()) {
			_case_begin_1aa8153d5:;
			{
				_69517_d=_1a84d973d___eval_enum(&(*_self_), _69417_kind.operator jule::Ptr<_1a83065e3_Enum>());
			}
		}
		else {
			_case_begin_1aa813e1c:;
			{
				_69517_d=jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_68538_ta.get()._field_kind.get()._field_kind.get()._field_kind)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ptr<_1a83a871c_Const>()));
				if (_68538_ta.get()._field_cpp_linked) {
					_69517_d.get()._field_kind.get()._field_cpp_ident=_68538_ta.get()._field_ident;
				} else {
					_69517_d.get()._field_kind.get()._field_cpp_ident=_68538_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				};
				_69517_d.get()._field_model=jule::Any(_69517_d.get()._field_kind);
			}
		}
		_match_end_1aa813db7:;
	};
	_69517_d.get()._field_kind.get()._field_generic=_68538_ta.get()._field_generic;
	return _69517_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84dc510_eval_def(_1a84d53d7_Eval* _self_, jule::Any _71931_def, jule::Ptr<_2110e7238_Token> _71941_ident) {
	{
		auto &_match_expr{ _71931_def };
		
		if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
			_case_begin_1aa817be0:;
			{
				return _1a84dbca1_eval_var(&(*_self_), _71931_def.operator jule::Ptr<_1a8487246_Var>(),_71941_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83065e3_Enum>>()) {
			_case_begin_1aa817c56:;
			{
				return _1a84d9ae5_eval_enum(&(*_self_), _71931_def.operator jule::Ptr<_1a83065e3_Enum>(),_71941_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
			_case_begin_1aa817cbc:;
			{
				return _1a84da2aa_eval_struct(&(*_self_), _1b3964a59_instance(_71931_def.operator jule::Ptr<_1b396462a_Struct>()),_71941_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2eeb8_Fn>>()) {
			_case_begin_1aa817d33:;
			{
				jule::Ptr<_1a5b2eeb8_Fn> _72821_f = _71931_def.operator jule::Ptr<_1a5b2eeb8_Fn>();;
				if ((_72821_f.get()._field_ident != jule::Str("init", 4))) {
					return _1a84dac8e_eval_fn(&(*_self_), _72821_f,_71941_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b33164_FnIns>>()) {
			_case_begin_1aa817d99:;
			{
				return _1a84da5b8_eval_fn_ins(&(*_self_), _71931_def.operator jule::Ptr<_1a5b33164_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a850bead_TypeAlias>>()) {
			_case_begin_1aa817e10:;
			{
				return _1a84dc158_eval_type_alias(&(*_self_), _71931_def.operator jule::Ptr<_1a850bead_TypeAlias>(),_71941_ident);
			}
		}
		_match_end_1aa817b13:;
	};
	_1a84d58b0_push_err(&(*_self_), _71941_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_71941_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1a84d3869_Data> _1a84dc81d_eval_ident(_1a84d53d7_Eval* _self_, jule::Ptr<_211109cb7_IdentExpr> _74129_ident) {
	jule::Any _74217_def = _1a84d8907_get_def(&(*_self_), _74129_ident.get()._field_ident,_74129_ident.get()._field_cpp_linked);;
	return _1a84dc510_eval_def(&(*_self_), jule::Any(_74217_def),_74129_ident.get()._field_token);
}



inline jule::Ptr<_1a84d3869_Data> _1a84dcb2b_eval_unary(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_211109ea4_UnaryExpr> _74634_u) {
	_1a8500017_UnaryEval _74717_unary = static__1a85004bd_new(_self_);;
	return _1a8501766_eval(&_74717_unary, _74634_u);
}



inline jule::Ptr<_1a84d3869_Data> _1a84dce39_eval_variadic(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110a191_VariadicExpr> _75137_v) {
	if ((_75137_v.get()._field_expr == nullptr)) {
		_1a84d58b0_push_err(_self_.ptr(), _75137_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a850cbe5_TypeKind> _75717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75717_prefix;
	});;
	jule::Ptr<_1a84d3869_Data> _76117_d = _1a84ee478_eval_expr_kind(_self_, jule::Any(_75137_v.get()._field_expr));;
	if ((_76117_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a850ea3d_variadicable(_76117_d.get()._field_kind.ptr())))) {
		_1a84d58b0_push_err(_self_.ptr(), _75137_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_76117_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1a85163b3_Slc> _77113_slc = _1a85109b7_slc(_76117_d.get()._field_kind.ptr());;
	_76117_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(_77113_slc.get()._field_elem.get()._field_cpp_ident,_77113_slc.get()._field_elem.get()._field_generic,true,_77113_slc.get()._field_elem.get()._field_kind));
	return _76117_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84dd247_eval_unsafe(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_2111098dd_UnsafeExpr> _78135_u) {
	jule::Bool _78213_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1a84d3869_Data> _78517_d = _1a84ee478_eval_expr_kind(_self_, jule::Any(_78135_u.get()._field_expr));;
	_self_.get()._field_unsafety=_78213_unsafety;
	return _78517_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84dd555_eval_arr(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110b5c1_SliceExpr> _79232_s) {
	jule::Ptr<_1a851855d_Arr> _79417_pt = _1a8510753_arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1a851855d_Arr> _79617_arr = jule::new_ptr<_1a851855d_Arr>(_1a851855d_Arr(false,0LL,_79417_pt.get()._field_elem));;
	jule::Bool _80217_filled = false;;
	if ((_79232_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79232_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_21110a191_VariadicExpr>>()) {
				_case_begin_1aa829619:;
				{
					if ((_79232_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_21110a191_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1aa829592;
					};
					if (_79417_pt.get()._field_auto) {
						_1a84d58b0_push_err(_self_.ptr(), _79232_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_80217_filled=true;
					_79232_s.get()._field_exprs=_79232_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1aa829592:;
		};
	};
	_79617_arr.get()._field_n=static_cast<jule::I64>(_79232_s.get()._field_exprs.len());
	if ((!(_79417_pt.get()._field_auto))) {
		if ((_79617_arr.get()._field_n > _79417_pt.get()._field_n)) {
			_1a84d58b0_push_err(_self_.ptr(), _79232_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_79617_arr.get()._field_n < _79417_pt.get()._field_n)) {
			_79617_arr.get()._field_n=_79417_pt.get()._field_n;
		};
	};
	jule::Ptr<_1b396e327_ArrayExprModel> _83117_model = jule::new_ptr<_1b396e327_ArrayExprModel>(_1b396e327_ArrayExprModel(_79617_arr,jule::Slice<jule::Any>()));;
	if (_80217_filled) {
		_83117_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_83117_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,_79232_s.get()._field_exprs.len());
	};
	jule::Ptr<_1a850cbe5_TypeKind> _84017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_79617_arr.get()._field_elem;
	{
		auto &expr = _79232_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aa82e8b6:;
		if (it != expr.end()) {
			jule::Ptr<_210e87caa_Expr> _84221_elem = *it;
			{
				jule::Ptr<_1a84d3869_Data> _84321_d = _1a84ee478_eval_expr_kind(_self_, jule::Any(_84221_elem));;
				if ((_84321_d == nullptr)) {
					goto _iter_next_1aa82e8b6;
				};
				_1a84748b5_check_assign_type(_self_.get()._field_s, false,_79617_arr.get()._field_elem,_84321_d,_79232_s.get()._field_token);
				_83117_model.get()._field_elems = jule::alloc_for_append(_83117_model.get()._field_elems,1);_83117_model.get()._field_elems.__push(jule::Any(_84321_d.get()._field_model));;
			}
			_iter_next_1aa82e8b6:;
			++it;
			goto _iter_begin_1aa82e8b6;
		}
		_iter_end_1aa82e8b6:;
	};
	_self_.get()._field_prefix=_84017_prefix;
	if (_80217_filled) {
		_83117_model.get()._field_elems = jule::alloc_for_append(_83117_model.get()._field_elems,1);_83117_model.get()._field_elems.__push(nullptr);;
	};
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_79617_arr, 10))),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_83117_model),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
}



inline jule::Ptr<_1a84d3869_Data> _1a84dd90c_eval_exp_slc(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110b5c1_SliceExpr> _86736_s, jule::Ptr<_1a850cbe5_TypeKind> _86755_elem_type) {
	jule::Ptr<_1a85163b3_Slc> _86817_slc = jule::new_ptr<_1a85163b3_Slc>(_1a85163b3_Slc(_86755_elem_type));;
	jule::Ptr<_1b396b577_SliceExprModel> _87217_model = jule::new_ptr<_1b396b577_SliceExprModel>(_1b396b577_SliceExprModel(_86755_elem_type,jule::Slice<jule::Any>::alloc(0LL,_86736_s.get()._field_exprs.len())));;
	jule::Ptr<_1a850cbe5_TypeKind> _87717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_86817_slc.get()._field_elem;
	{
		auto &expr = _86736_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aa8344c0:;
		if (it != expr.end()) {
			jule::Ptr<_210e87caa_Expr> _87921_elem = *it;
			{
				jule::Ptr<_1a84d3869_Data> _88021_d = _1a84ee478_eval_expr_kind(_self_, jule::Any(_87921_elem));;
				if ((_88021_d == nullptr)) {
					goto _iter_next_1aa8344c0;
				};
				_1a84748b5_check_assign_type(_self_.get()._field_s, false,_86817_slc.get()._field_elem,_88021_d,_86736_s.get()._field_token);
				_87217_model.get()._field_elems = jule::alloc_for_append(_87217_model.get()._field_elems,1);_87217_model.get()._field_elems.__push(jule::Any(_88021_d.get()._field_model));;
			}
			_iter_next_1aa8344c0:;
			++it;
			goto _iter_begin_1aa8344c0;
		}
		_iter_end_1aa8344c0:;
	};
	_self_.get()._field_prefix=_87717_prefix;
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_86817_slc, 7))),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_87217_model),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
}



inline jule::Ptr<_1a84d3869_Data> _1a84ddc1a_eval_slice_expr(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110b5c1_SliceExpr> _89839_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1a8510753_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1aa8379ac:;
				{
					return _1a84dd555_eval_arr(_self_, _89839_s);
				}
			}
			else if ((_1a85109b7_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1aa837a34:;
				{
					jule::Ptr<_1a85163b3_Slc> _90425_pt = _1a85109b7_slc(_self_.get()._field_prefix.ptr());;
					return _1a84dd90c_eval_exp_slc(_self_, _89839_s,_90425_pt.get()._field_elem);
				}
			}
			_match_end_1aa83789c:;
		};
	};
	jule::Ptr<_1a850cbe5_TypeKind> _90917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_89839_s.get()._field_exprs.len() == 0LL)) {
		_1a84d58b0_push_err(_self_.ptr(), _89839_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a84d3869_Data> _91717_first_elem = _1a84ee478_eval_expr_kind(_self_, jule::Any(_89839_s.get()._field_exprs[0LL]));;
	if ((_91717_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a84d3869_Data> _92217_d = _1a84dd90c_eval_exp_slc(_self_, _89839_s,_91717_first_elem.get()._field_kind);;
	_self_.get()._field_prefix=_90917_prefix;
	return _92217_d;
}



inline void _1a84de07d_check_integer_indexing_by_data(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data>& _92854_d, jule::Ptr<_2110e7238_Token> _92864_token) {
	jule::Str _92913_err_key = _1a8509c58_check_data_for_integer_indexing(_92854_d);;
	{
		auto &_match_expr{ _92913_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1aa83d5ea:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1aa83d3ec:;
			{
				_1a84d58b0_push_err(&(*_self_), _92864_token,_92913_err_key,jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_92854_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1aa83ccae:;
			{
				_1a84d58b0_push_err(&(*_self_), _92864_token,_92913_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa83d287:;
	};
}



inline void _1a84de435_indexing_ptr(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data>& _94036_d, jule::Ptr<_1a84d3869_Data>& _94051_index, jule::Ptr<_2111094c0_IndexingExpr>& _94066_i) {
	_1a84de07d_check_integer_indexing_by_data(&(*_self_), _94051_index,_94066_i.get()._field_token);
	jule::Ptr<_1a8518eba_Ptr> _94317_ptr = _1a851027a_ptr(_94036_d.get()._field_kind.ptr());;
	{
		
		if (_1a851998d_is_unsafe(_94317_ptr.ptr())) {
			_case_begin_1aa8413ab:;
			{
				_1a84d58b0_push_err(&(*_self_), _94066_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a84d62ea_is_unsafe(&(*_self_))))) {
			_case_begin_1aa841433:;
			{
				_1a84d58b0_push_err(&(*_self_), _94066_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa84129b:;
	};
	_94036_d.get()._field_kind=_94317_ptr.get()._field_elem;
}



inline void _1a84de7ed_indexing_arr(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data>& _95536_d, jule::Ptr<_1a84d3869_Data>& _95551_index, jule::Ptr<_2111094c0_IndexingExpr>& _95566_i) {
	jule::Ptr<_1a851855d_Arr> _95617_arr = _1a8510753_arr(_95536_d.get()._field_kind.ptr());;
	_95536_d.get()._field_kind=_95617_arr.get()._field_elem;
	_1a84de07d_check_integer_indexing_by_data(&(*_self_), _95551_index,_95566_i.get()._field_token);
	if ((_1a84d422c_is_const(_95551_index.ptr()) && (_1a83aab70_as_f64(_95551_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(_95617_arr.get()._field_n)))) {
		_1a84d58b0_push_err(&(*_self_), _95566_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1a84debb6_indexing_slc(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data>& _96436_d, jule::Ptr<_1a84d3869_Data>& _96451_index, jule::Ptr<_2111094c0_IndexingExpr>& _96466_i) {
	jule::Ptr<_1a85163b3_Slc> _96517_slc = _1a85109b7_slc(_96436_d.get()._field_kind.ptr());;
	_96436_d.get()._field_kind=_96517_slc.get()._field_elem;
	_1a84de07d_check_integer_indexing_by_data(&(*_self_), _96451_index,_96466_i.get()._field_token);
	if ((!(_1a84d422c_is_const(_96451_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _96436_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1b396b577_SliceExprModel>>()) {
			_case_begin_1aa8483e6:;
			{
				jule::Ptr<_1b396b577_SliceExprModel> _97521_m = _96436_d.get()._field_model.operator jule::Ptr<_1b396b577_SliceExprModel>();;
				jule::F64 _97617_indx = _1a83aab70_as_f64(_96451_index.get()._field_constant.ptr());;
				if ((_97617_indx >= static_cast<jule::F64>(_97521_m.get()._field_elems.len()))) {
					_1a84d58b0_push_err(&(*_self_), _96466_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_96436_d.get()._field_model=jule::Any(_97521_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_97617_indx))]);
					_96436_d.get()._field_decl=true;
				};
			}
		}
		_match_end_1aa84835d:;
	};
}



inline void _1a84e007e_indexing_map(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data>& _98636_d, jule::Ptr<_1a84d3869_Data>& _98651_index, jule::Ptr<_2111094c0_IndexingExpr>& _98670_i) {
	if ((_98651_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1a8517969_Map> _99117_m = _1a8511468_map(_98636_d.get()._field_kind.ptr());;
	_1a84baed3_AssignTypeChecker _99217_atc = _1a84baed3_AssignTypeChecker((*_self_)._field_s,_99117_m.get()._field_key,_98651_index,_98670_i.get()._field_token);;
	_1a84bc15a_check(&_99217_atc);
	_98636_d.get()._field_kind=_99117_m.get()._field_val;
}



inline void _1a84e0447_indexing_str(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data>& _100336_d, jule::Ptr<_1a84d3869_Data>& _100351_index, jule::Ptr<_2111094c0_IndexingExpr>& _100366_i) {
	;
	_100336_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("u8", 2)), 5)));
	if ((_100351_index == nullptr)) {
		return;;
	};
	_1a84de07d_check_integer_indexing_by_data(&(*_self_), _100351_index,_100366_i.get()._field_token);
	if ((!(_1a84d422c_is_const(_100351_index.ptr())))) {
		_100336_d.get()._field_constant=nullptr;
		return;;
	};
	if (_1a84d422c_is_const(_100336_d.ptr())) {
		jule::Ptr<_2110e7238_Token> _101917_error_token = _100366_i.get()._field_token;;
		jule::I64 _102017_j = _1a83aa697_as_i64(_100351_index.get()._field_constant.ptr());;
		jule::Str _102117_s = _1a83aa1be_read_str(_100336_d.get()._field_constant.ptr());;
		if ((static_cast<jule::I64>(_102017_j) >= _102117_s.len())) {
			_1a84d58b0_push_err(&(*_self_), _101917_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1a83ab16a_set_u64(_100336_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102117_s[_102017_j])));
		};
	};
}



inline void _1a84e0810_to_indexing(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data>& _103035_d, jule::Ptr<_1a84d3869_Data>& _103050_index, jule::Ptr<_2111094c0_IndexingExpr>& _103069_i) {
	{
		
		if ((_1a851027a_ptr(_103035_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa8541e3:;
			{
				_1a84de435_indexing_ptr(&(*_self_), _103035_d,_103050_index,_103069_i);
				return;;
			}
		}
		else if ((_1a8510753_arr(_103035_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa85426a:;
			{
				_1a84de7ed_indexing_arr(&(*_self_), _103035_d,_103050_index,_103069_i);
				return;;
			}
		}
		else if ((_1a85109b7_slc(_103035_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa8542e2:;
			{
				_1a84debb6_indexing_slc(&(*_self_), _103035_d,_103050_index,_103069_i);
				return;;
			}
		}
		else if ((_1a8511468_map(_103035_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa854369:;
			{
				_1a84e007e_indexing_map(&(*_self_), _103035_d,_103050_index,_103069_i);
				return;;
			}
		}
		else if ((_1a850eca2_prim(_103035_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa8543e1:;
			{
				jule::Ptr<_1a8512447_Prim> _104517_prim = _1a850eca2_prim(_103035_d.get()._field_kind.ptr());;
				{
					
					if (_1a8515406_is_str(_104517_prim.ptr())) {
						_case_begin_1aa858813:;
						{
							_1a84e0447_indexing_str(&(*_self_), _103035_d,_103050_index,_103069_i);
							return;;
						}
					}
					_match_end_1aa858758:;
				};
			}
		}
		_match_end_1aa8540c2:;
	};
	_1a84d58b0_push_err(&(*_self_), _103069_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_103035_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1a84e0c0b_push_generics_from_index_data(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_210e7e80c_IdentTypeDecl>& _105654_decl, jule::Ptr<_2111094c0_IndexingExpr>& _105681_i) {
	{
		auto &_match_expr{ _105681_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_211109ea4_UnaryExpr>>()) {
			_case_begin_1aa85b78e:;
			{
				jule::Ptr<_1a84d3869_Data> _106121_d = _1a84dcb2b_eval_unary(_self_, _105681_i.get()._field_index.get()._field_kind.operator jule::Ptr<_211109ea4_UnaryExpr>());;
				if ((!(_106121_d.get()._field_decl))) {
					_1a84d58b0_push_err(_self_.ptr(), _105681_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_105654_decl.get()._field_generics = jule::alloc_for_append(_105654_decl.get()._field_generics,1);_105654_decl.get()._field_generics.__push(jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(jule::Ptr<_2110e7238_Token>(),jule::Any(_106121_d.get()._field_kind))));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e7e620_TypeDecl>>()) {
			_case_begin_1aa85b805:;
			{
				_105654_decl.get()._field_generics = jule::alloc_for_append(_105654_decl.get()._field_generics,1);_105654_decl.get()._field_generics.__push(_105681_i.get()._field_index.get()._field_kind.operator jule::Ptr<_210e7e620_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211109cb7_IdentExpr>>()) {
			_case_begin_1aa85b5a2:;
			{
				jule::Ptr<_211109cb7_IdentExpr> _107221_expr = _105681_i.get()._field_index.get()._field_kind.operator jule::Ptr<_211109cb7_IdentExpr>();;
				_105654_decl.get()._field_generics = jule::alloc_for_append(_105654_decl.get()._field_generics,1);_105654_decl.get()._field_generics.__push(jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(jule::Ptr<_2110e7238_Token>(),jule::Any(jule::new_ptr<_210e7e80c_IdentTypeDecl>(_210e7e80c_IdentTypeDecl(_107221_expr.get()._field_token,_107221_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>()))))));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211079ae4_TupleExpr>>()) {
			_case_begin_1aa85b618:;
			{
				{
					auto &expr = _105681_i.get()._field_index.get()._field_kind.operator jule::Ptr<_211079ae4_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1aa860ac3:;
					if (it != expr.end()) {
						jule::Ptr<_210e87caa_Expr> _108025_expr = *it;
						{
							{
								auto &_match_expr{ _108025_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_210e7e620_TypeDecl>>()) {
									_case_begin_1aa861376:;
									{
										_105654_decl.get()._field_generics = jule::alloc_for_append(_105654_decl.get()._field_generics,1);_105654_decl.get()._field_generics.__push(_108025_expr.get()._field_kind.operator jule::Ptr<_210e7e620_TypeDecl>());;
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_211109cb7_IdentExpr>>()) {
									_case_begin_1aa8613dc:;
									{
										jule::Ptr<_211109cb7_IdentExpr> _108529_idexpr = _108025_expr.get()._field_kind.operator jule::Ptr<_211109cb7_IdentExpr>();;
										_105654_decl.get()._field_generics = jule::alloc_for_append(_105654_decl.get()._field_generics,1);_105654_decl.get()._field_generics.__push(jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(jule::Ptr<_2110e7238_Token>(),jule::Any(jule::new_ptr<_210e7e80c_IdentTypeDecl>(_210e7e80c_IdentTypeDecl(_108529_idexpr.get()._field_token,_108529_idexpr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>()))))));;
									}
								}
								_match_end_1aa861299:;
							};
						}
						_iter_next_1aa860ac3:;
						++it;
						goto _iter_begin_1aa860ac3;
					}
					_iter_end_1aa860ac3:;
				};
			}
		}
		else {
			_case_begin_1aa85aa35:;
			{
				_1a84d58b0_push_err(_self_.ptr(), _105681_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1aa85a9be:;
	};
	return true;
}



inline jule::Ptr<_1a84d3869_Data> _1a84e10e6_eval_ident_decl_from_indexing(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_1a84d3869_Data>& _110154_d, jule::Ptr<_2111094c0_IndexingExpr>& _110169_i) {
	jule::Ptr<_210e7e620_TypeDecl> _110217_tdecl = jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl());;
	jule::Ptr<_210e7e80c_IdentTypeDecl> _110317_decl = nullptr;;
	{
		auto &_match_expr{ _110169_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_211109cb7_IdentExpr>>()) {
			_case_begin_1aa865028:;
			{
				jule::Ptr<_211109cb7_IdentExpr> _110621_expr = _110169_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_211109cb7_IdentExpr>();;
				_110317_decl=jule::new_ptr<_210e7e80c_IdentTypeDecl>(_210e7e80c_IdentTypeDecl(_110621_expr.get()._field_token,_110621_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>()));
				_110217_tdecl.get()._field_kind=jule::Any(_110317_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110a56a_NsSelectionExpr>>()) {
			_case_begin_1aa864e3a:;
			{
				jule::Ptr<_21110a56a_NsSelectionExpr> _111321_expr = _110169_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_21110a56a_NsSelectionExpr>();;
				_110317_decl=jule::new_ptr<_210e7e80c_IdentTypeDecl>(_210e7e80c_IdentTypeDecl(_111321_expr.get()._field_ident,_111321_expr.get()._field_ident.get()._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>()));
				_110217_tdecl.get()._field_kind=jule::Any(jule::new_ptr<_210e86c54_NamespaceTypeDecl>(_210e86c54_NamespaceTypeDecl(_111321_expr.get()._field_ns,_110317_decl)));
			}
		}
		else {
			_case_begin_1aa86438a:;
			{
				_1a84d58b0_push_err(_self_.ptr(), _110169_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa864302:;
	};
	if ((!(_1a84e0c0b_push_generics_from_index_data(_self_, _110317_decl,_110169_i)))) {
		return nullptr;
	};
	return _1a84e5ea8_eval_type(_self_.ptr(), _110217_tdecl);
}



inline jule::Ptr<_1a84d3869_Data> _1a84e13e3_eval_indexing(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_2111094c0_IndexingExpr> _113237_i) {
	jule::Ptr<_1a850cbe5_TypeKind> _113317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_113317_prefix;
	});;
	jule::Ptr<_1a84d3869_Data> _113717_d = _1a84ee478_eval_expr_kind(_self_, jule::Any(_113237_i.get()._field_expr));;
	if ((_113717_d == nullptr)) {
		return nullptr;
	};
	if (_113717_d.get()._field_decl) {
		return _1a84e10e6_eval_ident_decl_from_indexing(_self_, _113717_d,_113237_i);
	};
	_1a84d3869_Data _114717_old_d = (*(_113717_d));;
	jule::Ptr<_1a84d3869_Data> _114917_index = _1a84ee478_eval_expr_kind(_self_, jule::Any(_113237_i.get()._field_index));;
	if ((_114917_index == nullptr)) {
		return nullptr;
	};
	_113717_d.get()._field_decl=false;
	_1a84e0810_to_indexing(_self_.ptr(), _113717_d,_114917_index,_113237_i);
	if (_1a84d422c_is_const(_113717_d.ptr())) {
		_113717_d.get()._field_decl=false;
		_113717_d.get()._field_model=jule::Any(_113717_d.get()._field_constant);
	} else if (_113717_d.get()._field_decl) {
		_113717_d.get()._field_decl=false;
	} else {
		_113717_d.get()._field_model=jule::Any(jule::new_ptr<_1b396b9ea_IndexingExprModel>(_1b396b9ea_IndexingExprModel(_113237_i.get()._field_token,jule::new_ptr<_1a84d3869_Data>(_114717_old_d),_114917_index)));
	};
	return _113717_d;
}



inline std::tuple<jule::Ptr<_1a84d3869_Data>,jule::Ptr<_1a84d3869_Data>> _1a84e1701_eval_slicing_exprs(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110bc31_SlicingExpr>& _118043_s) {
	jule::Ptr<_1a850cbe5_TypeKind> _118117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_118117_prefix;
	});;
	jule::Ptr<_1a84d3869_Data> _118517_l = nullptr;;
	jule::Ptr<_1a84d3869_Data> _118617_r = nullptr;;
	if ((_118043_s.get()._field_start != nullptr)) {
		_118517_l=_1a84ee478_eval_expr_kind(_self_, jule::Any(_118043_s.get()._field_start));
		if ((_118517_l != nullptr)) {
			_1a84de07d_check_integer_indexing_by_data(_self_.ptr(), _118517_l,_118043_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_118517_l=jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1a83a8909_new_i64(0LL)));
		_118517_l.get()._field_model=jule::Any(_118517_l.get()._field_constant);
	};
	if ((_118043_s.get()._field_to != nullptr)) {
		_118617_r=_1a84ee478_eval_expr_kind(_self_, jule::Any(_118043_s.get()._field_to));
		if ((_118617_r != nullptr)) {
			_1a84de07d_check_integer_indexing_by_data(_self_.ptr(), _118617_r,_118043_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_118517_l,_118617_r);
}



inline void _1a84e1976_slicing_arr(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data>& _121531_d) {
	jule::Ptr<_1a850cbe5_TypeKind> _121617_elem_type = _1a8510753_arr(_121531_d.get()._field_kind.ptr()).get()._field_elem;;
	_121531_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a85163b3_Slc>(_1a85163b3_Slc(_121617_elem_type)), 7)));
	_121531_d.get()._field_lvalue=false;
	_121531_d.get()._field_mutable=(_121531_d.get()._field_mutable || (!(_1a850e08c_mutable(_121617_elem_type.ptr()))));
}



inline void _1a84e1d3e_slicing_str(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data>& _123031_d, jule::Ptr<_1a84d3869_Data>& _123042_l, jule::Ptr<_1a84d3869_Data>& _123053_r) {
	_123031_d.get()._field_lvalue=false;
	_123031_d.get()._field_mutable=true;
	if ((!(_1a84d422c_is_const(_123031_d.ptr())))) {
		return;;
	};
	if (((_123042_l == nullptr) || (_123053_r == nullptr))) {
		_123031_d.get()._field_constant=nullptr;
		return;;
	};
	if ((_1a84d422c_is_const(_123042_l.ptr()) && _1a84d422c_is_const(_123053_r.ptr()))) {
		jule::I64 _124317_left = _1a83aa697_as_i64(_123042_l.get()._field_constant.ptr());;
		if ((_124317_left < 0LL)) {
			return;;
		};
		jule::Str _124817_s = _1a83aa1be_read_str(_123031_d.get()._field_constant.ptr());;
		jule::I64 _124921_right = 0LL;;
		if ((_123053_r == nullptr)) {
			_124921_right=static_cast<jule::I64>(static_cast<jule::I64>(_124817_s.len()));
		} else {
			_124921_right=static_cast<jule::I64>(_1a83aa697_as_i64(_123053_r.get()._field_constant.ptr()));
		};
		if ((_124317_left > _124921_right)) {
			return;;
		};
		_1a83ab665_set_str(_123031_d.get()._field_constant.ptr(), _124817_s.slice(_124317_left,_124921_right));
		_123031_d.get()._field_decl=true;
	} else {
		_123031_d.get()._field_constant=nullptr;
	};
}



inline void _1a84e22a1_check_slicing(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data>& _126637_d, jule::Ptr<_1a84d3869_Data>& _126648_l, jule::Ptr<_1a84d3869_Data>& _126659_r, jule::Ptr<_21110bc31_SlicingExpr>& _126670_s) {
	{
		
		if ((_1a8510753_arr(_126637_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa87c8c0:;
			{
				_1a84e1976_slicing_arr(&(*_self_), _126637_d);
				return;;
			}
		}
		else if ((_1a85109b7_slc(_126637_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa87c947:;
			{
				return;;
			}
		}
		else if ((_1a850eca2_prim(_126637_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa87c9be:;
			{
				jule::Ptr<_1a8512447_Prim> _127417_prim = _1a850eca2_prim(_126637_d.get()._field_kind.ptr());;
				{
					
					if (_1a8515406_is_str(_127417_prim.ptr())) {
						_case_begin_1aa87ed12:;
						{
							_1a84e1d3e_slicing_str(&(*_self_), _126637_d,_126648_l,_126659_r);
							return;;
						}
					}
					_match_end_1aa87ec57:;
				};
			}
		}
		_match_end_1aa87c7c1:;
	};
	_1a84d58b0_push_err(&(*_self_), _126670_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_126637_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1a84d3869_Data> _1a84e25ae_eval_slicing(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110bc31_SlicingExpr> _128536_s) {
	jule::Ptr<_1a84d3869_Data> _128617_d = _1a84ee478_eval_expr_kind(_self_, jule::Any(_128536_s.get()._field_expr));;
	if ((_128617_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a84d3869_Data> _129118_l;;
	jule::Ptr<_1a84d3869_Data> _129125_r;;
	std::tie(_129118_l,_129125_r) = _1a84e1701_eval_slicing_exprs(_self_, _128536_s);
	if ((_129118_l == nullptr)) {
		return _128617_d;
	};
	_128617_d.get()._field_decl=false;
	_1a84e22a1_check_slicing(_self_.ptr(), _128617_d,_129118_l,_129125_r,_128536_s);
	if (_1a84d422c_is_const(_128617_d.ptr())) {
		_128617_d.get()._field_decl=false;
		_128617_d.get()._field_model=jule::Any(_128617_d.get()._field_constant);
	} else if (_128617_d.get()._field_decl) {
		_128617_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1b396cc1b_SlicingExprModel> _130921_model = jule::new_ptr<_1b396cc1b_SlicingExprModel>(_1b396cc1b_SlicingExprModel(_128536_s.get()._field_token,jule::Any(_128617_d.get()._field_model),jule::Any(_129118_l.get()._field_model),jule::Any()));;
		if ((_129125_r != nullptr)) {
			_130921_model.get()._field_right=jule::Any(_129125_r.get()._field_model);
		};
		_128617_d.get()._field_model=jule::Any(_130921_model);
	};
	return _128617_d;
}



inline void _1a84e2977_cast_ptr(_1a84d53d7_Eval* _self_, jule::Ptr<_1a850cbe5_TypeKind> _132231_t, jule::Ptr<_1a84d3869_Data> _132249_d, jule::Ptr<_2110e7238_Token> _132259_error_token) {
	jule::Ptr<_1a8515956_Sptr> _132313_sptr = _1a8510016_sptr(_132249_d.get()._field_kind.ptr());;
	if ((_132313_sptr != nullptr)) {
		if ((!(_1a850d3aa_equals(_1a851027a_ptr(_132231_t.ptr()).get()._field_elem, _132313_sptr.get()._field_elem)))) {
			_1a84d58b0_push_err(&(*_self_), _132259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_132249_d.get()._field_kind.ptr())),jule::Any(_1a850d09c_to_str(_132231_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1a84d62ea_is_unsafe(&(*_self_))))) {
		_1a84d58b0_push_err(&(*_self_), _132259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a8512447_Prim> _133613_prim = _1a850eca2_prim(_132249_d.get()._field_kind.ptr());;
	if (((_1a851027a_ptr(_132249_d.get()._field_kind.ptr()) == nullptr) && ((_133613_prim == nullptr) || (!(_1a844b23d_is_int(_1a85127aa_to_str(_133613_prim.ptr()))))))) {
		_1a84d58b0_push_err(&(*_self_), _132259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_132249_d.get()._field_kind.ptr())),jule::Any(_1a850d09c_to_str(_132231_t.ptr()))}));
	};
	_132249_d.get()._field_constant=nullptr;
}



inline void _1a84e2d40_cast_struct(_1a84d53d7_Eval* _self_, jule::Ptr<_1a850cbe5_TypeKind> _134434_t, jule::Ptr<_1a84d3869_Data> _134452_d, jule::Ptr<_2110e7238_Token> _134462_error_token) {
	jule::Ptr<_1a5e34531_Trait> _134517_tr = _1a8511204_trt(_134452_d.get()._field_kind.ptr());;
	if ((_134517_tr == nullptr)) {
		_1a84d58b0_push_err(&(*_self_), _134462_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_134452_d.get()._field_kind.ptr())),jule::Any(_1a850d09c_to_str(_134434_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1b39672a9_StructIns> _135117_s = _1a8510e90_strct(_134434_t.ptr());;
	_1a84d9441_push_reference_to_struct(&(*_self_), _135117_s);
	if ((!(_1b3965b48_is_implements(_135117_s.get()._field_decl.ptr(), _134517_tr)))) {
		_1a84d58b0_push_err(&(*_self_), _134462_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_134452_d.get()._field_kind.ptr())),jule::Any(_1a850d09c_to_str(_134434_t.ptr()))}));
	};
}



inline void _1a84e3208_cast_ref(_1a84d53d7_Eval* _self_, jule::Ptr<_1a850cbe5_TypeKind> _135931_t, jule::Ptr<_1a84d3869_Data> _135949_d, jule::Ptr<_2110e7238_Token> _135959_error_token) {
	jule::Ptr<_1a8515956_Sptr> _136017_sptr = _1a8510016_sptr(_135931_t.ptr());;
	jule::Ptr<_1a8518eba_Ptr> _136217_ptr = _1a851027a_ptr(_135949_d.get()._field_kind.ptr());;
	if (((_136217_ptr != nullptr) && _1a850d3aa_equals(_136017_sptr.get()._field_elem, _136217_ptr.get()._field_elem))) {
		if ((!(_1a84d62ea_is_unsafe(&(*_self_))))) {
			_1a84d58b0_push_err(&(*_self_), _135959_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a8510e90_strct(_136017_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1a84e2d40_cast_struct(&(*_self_), _136017_sptr.get()._field_elem,_135949_d,_135959_error_token);
		return;;
	};
	_1a84d58b0_push_err(&(*_self_), _135959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_135949_d.get()._field_kind.ptr())),jule::Any(_1a850d09c_to_str(_135931_t.ptr()))}));
}



inline void _1a84e35c1_cast_slc(_1a84d53d7_Eval* _self_, jule::Ptr<_1a850cbe5_TypeKind> _138131_t, jule::Ptr<_1a84d3869_Data> _138149_d, jule::Ptr<_2110e7238_Token> _138159_error_token) {
	if ((_1a85104de_enm(_138149_d.get()._field_kind.ptr()) != nullptr)) {
		if (((_1a850eca2_prim(_1a85104de_enm(_138149_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1a8515406_is_str(_1a850eca2_prim(_1a85104de_enm(_138149_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
			_1a84d58b0_push_err(&(*_self_), _138159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_138149_d.get()._field_kind.ptr())),jule::Any(_1a850d09c_to_str(_138131_t.ptr()))}));
			return;;
		};
	} else if (((_1a850eca2_prim(_138149_d.get()._field_kind.ptr()) == nullptr) || (!(_1a8515406_is_str(_1a850eca2_prim(_138149_d.get()._field_kind.ptr()).ptr()))))) {
		_1a84d58b0_push_err(&(*_self_), _138159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_138149_d.get()._field_kind.ptr())),jule::Any(_1a850d09c_to_str(_138131_t.ptr()))}));
		return;;
	};
	_138131_t=_1a85109b7_slc(_138131_t.ptr()).get()._field_elem;
	jule::Ptr<_1a8512447_Prim> _139313_prim = _1a850eca2_prim(_138131_t.ptr());;
	if (((_139313_prim == nullptr) || ((!(_1a85139cb_is_u8(_139313_prim.ptr()))) && (!(_1a8513503_is_i32(_139313_prim.ptr())))))) {
		_1a84d58b0_push_err(&(*_self_), _138159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_138149_d.get()._field_kind.ptr())),jule::Any(_1a850d09c_to_str(_138131_t.ptr()))}));
	};
}



inline void _1a84e38e0_cast_str(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data> _139931_d, jule::Ptr<_2110e7238_Token> _139941_error_token) {
	if ((_1a85104de_enm(_139931_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a83065e3_Enum> _140121_e = _1a85104de_enm(_139931_d.get()._field_kind.ptr());;
		if (((_1a850eca2_prim(_140121_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1a8515406_is_str(_1a850eca2_prim(_140121_e.get()._field_kind.get()._field_kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1a850eca2_prim(_139931_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a8512447_Prim> _140817_prim = _1a850eca2_prim(_139931_d.get()._field_kind.ptr());;
		if (((!(_1a85139cb_is_u8(_140817_prim.ptr()))) && (!(_1a8513503_is_i32(_140817_prim.ptr()))))) {
			_1a84d58b0_push_err(&(*_self_), _139941_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a850d09c_to_str(_139931_d.get()._field_kind.ptr()))}));
		};
		return;;
	};
	if ((_1a85109b7_slc(_139931_d.get()._field_kind.ptr()) == nullptr)) {
		_1a84d58b0_push_err(&(*_self_), _139941_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a850d09c_to_str(_139931_d.get()._field_kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1a850cbe5_TypeKind> _142017_t = _1a85109b7_slc(_139931_d.get()._field_kind.ptr()).get()._field_elem;;
	jule::Ptr<_1a8512447_Prim> _142113_prim = _1a850eca2_prim(_142017_t.ptr());;
	if (((_142113_prim == nullptr) || ((!(_1a85139cb_is_u8(_142113_prim.ptr()))) && (!(_1a8513503_is_i32(_142113_prim.ptr())))))) {
		_1a84d58b0_push_err(&(*_self_), _139941_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a850d09c_to_str(_139931_d.get()._field_kind.ptr()))}));
	};
}



inline void _1a84e3ca8_cast_int(_1a84d53d7_Eval* _self_, jule::Ptr<_1a850cbe5_TypeKind> _142731_t, jule::Ptr<_1a84d3869_Data> _142749_d, jule::Ptr<_2110e7238_Token> _142759_error_token) {
	if (_1a84d422c_is_const(_142749_d.ptr())) {
		jule::Ptr<_1a8512447_Prim> _142917_prim = _1a850eca2_prim(_142731_t.ptr());;
		{
			
			if (_1a844abaa_is_sig_int(_142917_prim.get()._field_kind)) {
				_case_begin_1aa8a5e7b:;
				{
					_1a83aade5_set_i64(_142749_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a83aa697_as_i64(_142749_d.get()._field_constant.ptr())));
				}
			}
			else if (_1a844ae96_is_unsig_int(_142917_prim.get()._field_kind)) {
				_case_begin_1aa8a6003:;
				{
					_1a83ab16a_set_u64(_142749_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a83aa90b_as_u64(_142749_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1aa8a5db0:;
		};
	};
	if ((_1a85104de_enm(_142749_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a83065e3_Enum> _143917_e = _1a85104de_enm(_142749_d.get()._field_kind.ptr());;
		if (_1a844b7c1_is_num(_1a850d09c_to_str(_143917_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	if ((_1a8510016_sptr(_142749_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a8512447_Prim> _144617_prim = _1a850eca2_prim(_142731_t.ptr());;
		if ((!(_1a8514e2d_is_uintptr(_144617_prim.ptr())))) {
			_1a84d58b0_push_err(&(*_self_), _142759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_142749_d.get()._field_kind.ptr())),jule::Any(_1a850d09c_to_str(_142731_t.ptr()))}));
		};
		return;;
	};
	if ((_1a851027a_ptr(_142749_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a8512447_Prim> _145317_prim = _1a850eca2_prim(_142731_t.ptr());;
		if (_1a8514e2d_is_uintptr(_145317_prim.ptr())) {
		} else if ((!(_1a84d62ea_is_unsafe(&(*_self_))))) {
			_1a84d58b0_push_err(&(*_self_), _142759_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1a8513503_is_i32(_145317_prim.ptr()))) && (!(_1a8513767_is_i64(_145317_prim.ptr())))) && (!(_1a8513c40_is_u16(_145317_prim.ptr())))) && (!(_1a8513ea4_is_u32(_145317_prim.ptr())))) && (!(_1a8514218_is_u64(_145317_prim.ptr()))))) {
			_1a84d58b0_push_err(&(*_self_), _142759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_142749_d.get()._field_kind.ptr())),jule::Any(_1a850d09c_to_str(_142731_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1a8512447_Prim> _146413_prim = _1a850eca2_prim(_142749_d.get()._field_kind.ptr());;
	if (((_146413_prim != nullptr) && _1a844b7c1_is_num(_1a85127aa_to_str(_146413_prim.ptr())))) {
		return;;
	};
	_1a84d58b0_push_err(&(*_self_), _142759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_142749_d.get()._field_kind.ptr())),jule::Any(_1a850d09c_to_str(_142731_t.ptr()))}));
}



inline void _1a84e4171_cast_num(_1a84d53d7_Eval* _self_, jule::Ptr<_1a850cbe5_TypeKind> _147231_t, jule::Ptr<_1a84d3869_Data> _147249_d, jule::Ptr<_2110e7238_Token> _147259_error_token) {
	if (_1a84d422c_is_const(_147249_d.ptr())) {
		jule::Ptr<_1a8512447_Prim> _147417_prim = _1a850eca2_prim(_147231_t.ptr());;
		{
			
			if (_1a844b529_is_float(_147417_prim.get()._field_kind)) {
				_case_begin_1aa8b34d8:;
				{
					_1a83ab8da_set_f64(_147249_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a83aab70_as_f64(_147249_d.get()._field_constant.ptr())));
				}
			}
			else if (_1a844abaa_is_sig_int(_147417_prim.get()._field_kind)) {
				_case_begin_1aa8b3560:;
				{
					_1a83aade5_set_i64(_147249_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a83aa697_as_i64(_147249_d.get()._field_constant.ptr())));
				}
			}
			else if (_1a844ae96_is_unsig_int(_147417_prim.get()._field_kind)) {
				_case_begin_1aa8b35d7:;
				{
					_1a83ab16a_set_u64(_147249_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a83aa90b_as_u64(_147249_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1aa8b340b:;
		};
	};
	if ((_1a85104de_enm(_147249_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a83065e3_Enum> _148617_e = _1a85104de_enm(_147249_d.get()._field_kind.ptr());;
		if (_1a844b7c1_is_num(_1a850d09c_to_str(_148617_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a8512447_Prim> _149213_prim = _1a850eca2_prim(_147249_d.get()._field_kind.ptr());;
	if (((_149213_prim != nullptr) && _1a844b7c1_is_num(_1a85127aa_to_str(_149213_prim.ptr())))) {
		return;;
	};
	_1a84d58b0_push_err(&(*_self_), _147259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_147249_d.get()._field_kind.ptr())),jule::Any(_1a850d09c_to_str(_147231_t.ptr()))}));
}



inline void _1a84e4539_cast_prim(_1a84d53d7_Eval* _self_, jule::Ptr<_1a850cbe5_TypeKind> _150032_t, jule::Ptr<_1a84d3869_Data> _150050_d, jule::Ptr<_2110e7238_Token> _150060_error_token) {
	jule::Ptr<_1a8512447_Prim> _150113_prim = _1a850eca2_prim(_150032_t.ptr());;
	{
		
		if (_1a851566a_is_any(_150113_prim.ptr())) {
			_case_begin_1aa8ba18d:;
		}
		else if (_1a8515406_is_str(_150113_prim.ptr())) {
			_case_begin_1aa8b9d80:;
			{
				_1a84e38e0_cast_str(&(*_self_), _150050_d,_150060_error_token);
			}
		}
		else if (_1a844b23d_is_int(_1a85127aa_to_str(_150113_prim.ptr()))) {
			_case_begin_1aa8b9de6:;
			{
				_1a84e3ca8_cast_int(&(*_self_), _150032_t,_150050_d,_150060_error_token);
			}
		}
		else if (_1a844b7c1_is_num(_1a85127aa_to_str(_150113_prim.ptr()))) {
			_case_begin_1aa8b9e5c:;
			{
				_1a84e4171_cast_num(&(*_self_), _150032_t,_150050_d,_150060_error_token);
			}
		}
		else {
			_case_begin_1aa8b9d19:;
			{
				_1a84d58b0_push_err(&(*_self_), _150060_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_150032_t.ptr()))}));
			}
		}
		_match_end_1aa8b9c92:;
	};
}



inline void _1a84e4858_cast_constant(_1a84d53d7_Eval* _self_, jule::Ptr<_1a850cbe5_TypeKind>& _151637_t, jule::Ptr<_1a84d3869_Data>& _151656_d) {
	if (((_151656_d == nullptr) || (!(_1a84d422c_is_const(_151656_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1a8512447_Prim> _152013_prim = _1a850eca2_prim(_151637_t.ptr());;
	_1a850a2db_cast_const_by_type(_152013_prim.get()._field_kind,_151656_d);
	_151656_d.get()._field_model=jule::Any(_151656_d.get()._field_constant);
}



inline jule::Ptr<_1a84d3869_Data> _1a84e4ced_eval_cast_by_type_n_data(_1a84d53d7_Eval* _self_, jule::Ptr<_1a850cbe5_TypeKind> _152547_t, jule::Ptr<_1a84d3869_Data> _152565_d, jule::Ptr<_2110e7238_Token> _152579_error_token) {
	if (((_152565_d != nullptr) && _152565_d.get()._field_decl)) {
		_1a84d58b0_push_err(&(*_self_), _152579_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1a850eca2_prim(_152565_d.get()._field_kind.ptr()) != nullptr) && _1a851566a_is_any(_1a850eca2_prim(_152565_d.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1aa8c1a46:;
			{
				if ((_1a85104de_enm(_152547_t.ptr()) != nullptr)) {
					_1a84d58b0_push_err(&(*_self_), _152579_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1a84d5bce_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1a851027a_ptr(_152547_t.ptr()) != nullptr)) {
			_case_begin_1aa8c1aac:;
			{
				_1a84e2977_cast_ptr(&(*_self_), _152547_t,_152565_d,_152579_error_token);
			}
		}
		else if ((_1a8510016_sptr(_152547_t.ptr()) != nullptr)) {
			_case_begin_1aa8c1b23:;
			{
				_1a84e3208_cast_ref(&(*_self_), _152547_t,_152565_d,_152579_error_token);
			}
		}
		else if ((_1a85109b7_slc(_152547_t.ptr()) != nullptr)) {
			_case_begin_1aa8c1b89:;
			{
				_1a84e35c1_cast_slc(&(*_self_), _152547_t,_152565_d,_152579_error_token);
			}
		}
		else if ((_1a8510e90_strct(_152547_t.ptr()) != nullptr)) {
			_case_begin_1aa8c29e2:;
			{
				_1a84e2d40_cast_struct(&(*_self_), _152547_t,_152565_d,_152579_error_token);
			}
		}
		else if ((_1a850eca2_prim(_152547_t.ptr()) != nullptr)) {
			_case_begin_1aa8c2a58:;
			{
				_1a84e4539_cast_prim(&(*_self_), _152547_t,_152565_d,_152579_error_token);
				_1a84e4858_cast_constant(&(*_self_), _152547_t,_152565_d);
			}
		}
		else {
			_case_begin_1aa8c19d0:;
			{
				_1a84d58b0_push_err(&(*_self_), _152579_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_152547_t.ptr()))}));
				_152565_d=nullptr;
			}
		}
		_match_end_1aa8c17e3:;
	};
	if ((_152565_d == nullptr)) {
		return nullptr;
	};
	_152565_d.get()._field_mutable=(_152565_d.get()._field_mutable || ((!(_1a850e08c_mutable(_152565_d.get()._field_kind.ptr()))) && _1a850e08c_mutable(_152547_t.ptr())));
	_152565_d.get()._field_lvalue=false;
	_152565_d.get()._field_decl=false;
	if (((_1a85104de_enm(_152565_d.get()._field_kind.ptr()) == nullptr) || (!(_1a850d3aa_equals(_1a85104de_enm(_152565_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _152547_t))))) {
		_1a850976e_apply_cast_kind(_152565_d,_152547_t);
		_152565_d.get()._field_model.operator jule::Ptr<_1b396a895_CastingExprModel>().get()._field_token=_152579_error_token;
	} else {
		_152565_d.get()._field_kind=_152547_t;
	};
	return _152565_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84e50ea_eval_cast(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110a37d_CastExpr> _157433_c) {
	jule::Ptr<_1a8511a84_TypeSymbol> _157517_t = _1a5b378d8_build_type(_157433_c.get()._field_kind);;
	jule::Bool _157613_ok = _1a8472c9d_check_type(_self_.get()._field_s, _157517_t,_self_.get()._field_lookup);;
	if ((!(_157613_ok))) {
		return nullptr;
	};
	jule::Ptr<_1a850cbe5_TypeKind> _158117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_158117_prefix;
	});;
	jule::Ptr<_1a84d3869_Data> _158517_d = _1a84ee478_eval_expr_kind(_self_, jule::Any(_157433_c.get()._field_expr));;
	if ((_158517_d == nullptr)) {
		return nullptr;
	};
	return _1a84e4ced_eval_cast_by_type_n_data(_self_.ptr(), _157517_t.get()._field_kind,_158517_d,_157433_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1a84d3869_Data> _1a84e5408_eval_ns_selection(_1a84d53d7_Eval* _self_, jule::Ptr<_21110a56a_NsSelectionExpr> _159336_s) {
	jule::Str _159413_path = _1a851a939_build_link_path_by_tokens(_159336_s.get()._field_ns);;
	jule::Ptr<_1a8464058_ImportInfo> _159517_imp = _1a85260a4_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a8524877_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)>([=](jule::Ptr<_1a8464058_ImportInfo> _159553_imp) mutable -> jule::Bool {
		if (((_159336_s.get()._field_ns.len() == 1LL) && (_159553_imp.get()._field_alias == _159413_path))) {
			return true;
		};
		return ((_159553_imp.get()._field_link_path == _159413_path) && _1a8466940_is_accessible_via_selection(_159553_imp.ptr()));
	}));;
	if ((_159517_imp == nullptr)) {
		_1a84d58b0_push_err(&(*_self_), _159336_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_159413_path)}));
		return nullptr;
	};
	jule::Trait<_1a85260a4_Lookup> _160717_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1a85260a4_Lookup>(_159517_imp, 1);
	;
	_1a84d6086_disallow_builtin(&(*_self_));
	jule::Any _161217_def = _1a84d8907_get_def(&(*_self_), _159336_s.get()._field_ident.get()._field_kind,false);;
	_1a84d5daa_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_160717_lookup;
	jule::Ptr<_1a84d3869_Data> _161617_d = _1a84dc510_eval_def(&(*_self_), jule::Any(_161217_def),_159336_s.get()._field_ident);;
	return _161617_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84e589d_eval_struct_lit_explicit(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_1b39672a9_StructIns> _162148_s, jule::Slice<jule::Ptr<_210e87caa_Expr>> _162213_exprs, jule::Ptr<_2110e7238_Token> _162233_error_token) {
	jule::Bool _162313_ok = _1a8470a04_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_162148_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_162148_s.get()._field_generics.len()),_162233_error_token);;
	if ((!(_162313_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _162148_s.get()._field_decl))) {
		_1a84d58b0_push_err(_self_.ptr(), _162233_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any(_162148_s.get()._field_decl.get()._field_ident)}));
	};
	_1a84d9441_push_reference_to_struct(_self_.ptr(), _162148_s);
	_1a84da8d7_check_deprecated(_self_.ptr(), _162148_s.get()._field_decl.get()._field_directives,_162233_error_token);
	_1a84c2eeb_StructLitChecker _163617_slc = _1a84c2eeb_StructLitChecker(_self_,_162233_error_token,_162148_s,jule::Slice<jule::Ptr<_1b3969b80_StructArgExprModel>>());;
	_1a84c4591_check(&_163617_slc, _162213_exprs);
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_162148_s, 0))),(!(_self_.get()._field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396a037_StructLitExprModel>(_1b396a037_StructLitExprModel(_162148_s,_163617_slc._field_args))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
}



inline jule::Ptr<_1a84d3869_Data> _1a84e5b9a_eval_struct_lit(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110b00a_StructLit> _165539_lit) {
	jule::Ptr<_1a8511a84_TypeSymbol> _165617_t = _1a5b378d8_build_type(_165539_lit.get()._field_kind);;
	jule::Bool _165713_ok = _1a8472c9d_check_type(_self_.get()._field_s, _165617_t,_self_.get()._field_lookup);;
	if ((!(_165713_ok))) {
		return nullptr;
	};
	jule::Ptr<_1b39672a9_StructIns> _166217_s = _1a8510e90_strct(_165617_t.get()._field_kind.ptr());;
	if ((_166217_s == nullptr)) {
		if ((_1a8510016_sptr(_165617_t.get()._field_kind.ptr()) != nullptr)) {
			_166217_s=_1a8510e90_strct(_1a8510016_sptr(_165617_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_166217_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1a84d58b0_push_err(_self_.ptr(), _165539_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1a84d3869_Data> _167517_d = _1a84e589d_eval_struct_lit_explicit(_self_, _166217_s,_165539_lit.get()._field_exprs,_165539_lit.get()._field_kind.get()._field_token);;
	if ((_1a8510016_sptr(_165617_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1b396a037_StructLitExprModel> _167721_model = _167517_d.get()._field_model.operator jule::Ptr<_1b396a037_StructLitExprModel>();;
		_1a85081c9_make_struct_lit_alloc(_167517_d,_167721_model);
	};
	return _167517_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84e5ea8_eval_type(_1a84d53d7_Eval* _self_, jule::Ptr<_210e7e620_TypeDecl> _168332_t) {
	jule::Ptr<_1a8511a84_TypeSymbol> _168417_tk = _1a5b378d8_build_type(_168332_t);;
	jule::Bool _168513_ok = _1a8472c9d_check_type((*_self_)._field_s, _168417_tk,(*_self_)._field_lookup);;
	if ((!(_168513_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(_168417_tk.get()._field_kind,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_168417_tk.get()._field_kind),true,jule::Ptr<_1a83a871c_Const>()));
}



inline void _1a84e62c7_call_type_fn(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110ab31_FnCallExpr>& _169637_fc, jule::Ptr<_1a84d3869_Data>& _169659_d) {
	if ((_169637_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_self_.ptr(), _169637_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_169659_d.get()._field_kind.ptr()))}));
	} else if ((_169637_fc.get()._field_args.len() < 1LL)) {
		_1a84d58b0_push_err(_self_.ptr(), _169637_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if ((_169637_fc.get()._field_args.len() > 1LL)) {
		_1a84d58b0_push_err(_self_.ptr(), _169637_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_169637_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1a850cbe5_TypeKind> _170621_prefix = _self_.get()._field_prefix;;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_1a84d3869_Data> _170821_arg = _1a84ee478_eval_expr_kind(_self_, jule::Any(_169637_fc.get()._field_args[0LL].get()._field_kind));;
		_self_.get()._field_prefix=_170621_prefix;
		if ((_170821_arg != nullptr)) {
			_169659_d=_1a84e4ced_eval_cast_by_type_n_data(_self_.ptr(), _169659_d.get()._field_kind,_170821_arg,_169637_fc.get()._field_args[0LL].get()._field_token);
		};
	};
	if ((_169659_d != nullptr)) {
		_169659_d.get()._field_decl=false;
	};
}



inline std::tuple<jule::Bool,jule::Bool> _1a84e667e_check_fn_call_generics(_1a84d53d7_Eval* _self_, jule::Ptr<_1a5b33164_FnIns> _172045_f, jule::Ptr<_21110ab31_FnCallExpr> _172113_fc) {
	jule::Bool _172132_ok = jule::Bool();
	jule::Bool _172142_dynamic_annotation = jule::Bool();
	{
		
		if ((((_172045_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_172113_fc.get()._field_generics.len() == 0LL)) && (_172045_f.get()._field_params.len() > 0LL))) {
			_case_begin_1aa8ec500:;
			{
				_172142_dynamic_annotation=true;
				_172045_f.get()._field_generics=jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>::alloc(_172045_f.get()._field_decl.get()._field_generics.len());
				_172132_ok = true;
				_172142_dynamic_annotation = true;
				return std::make_tuple(_172132_ok,_172142_dynamic_annotation);
			}
		}
		else if ((!(_1a8470a04_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_172045_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_172113_fc.get()._field_generics.len()),_172113_fc.get()._field_token)))) {
			_case_begin_1aa8ed4ce:;
			{
				_172132_ok = false;
				_172142_dynamic_annotation = false;
				return std::make_tuple(_172132_ok,_172142_dynamic_annotation);
			}
		}
		else {
			_case_begin_1aa8eb3de:;
			{
				_172045_f.get()._field_generics=jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>::alloc(0LL,_172045_f.get()._field_decl.get()._field_generics.len());
				{
					auto &expr = _172113_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1aa8ec17b:;
					if (it != expr.end()) {
						jule::Ptr<_210e7e620_TypeDecl> _173325_g = *it;
						{
							jule::Ptr<_1a8511a84_TypeSymbol> _173425_k = _1a5b378d8_build_type(_173325_g);;
							_172132_ok=_1a8472c9d_check_type((*_self_)._field_s, _173425_k,(*_self_)._field_lookup);
							if ((!(_172132_ok))) {
								_172132_ok = false;
								_172142_dynamic_annotation = false;
								return std::make_tuple(_172132_ok,_172142_dynamic_annotation);
							};
							_172045_f.get()._field_generics = jule::alloc_for_append(_172045_f.get()._field_generics,1);_172045_f.get()._field_generics.__push(_173425_k.get()._field_kind);;
						}
						_iter_next_1aa8ec17b:;
						++it;
						goto _iter_begin_1aa8ec17b;
					}
					_iter_end_1aa8ec17b:;
				};
				_172132_ok = true;
				_172142_dynamic_annotation = false;
				return std::make_tuple(_172132_ok,_172142_dynamic_annotation);
			}
		}
		_match_end_1aa8eb345:;
	};
}



inline void _1a84e699d_call_builtin_fn(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110ab31_FnCallExpr>& _174640_fc, jule::Ptr<_1a84d3869_Data>& _174662_d) {
	_174662_d=_1a8510c2b_fnc(_174662_d.get()._field_kind.ptr()).get()._field_caller(_self_,_174640_fc,_174662_d);
	if ((_174662_d == nullptr)) {
		return;;
	};
	_174662_d.get()._field_mutable=true;
}



inline void _1a84e6d11_check_fn_of_concurrent_call(_1a84d53d7_Eval* _self_, jule::Ptr<_1a5b33164_FnIns>& _175447_f, jule::Ptr<_2110e7238_Token> _175458_error_token) {
	if (_1a84d62ea_is_unsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _175447_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aa904606:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b322c8_ParamIns> &_175916_p = *it;
			{
				if (_175916_p.get()._field_decl.get()._field_reference) {
					_1a84d58b0_push_err(&(*_self_), _175458_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1aa904606:;
			++it;
			goto _iter_begin_1aa904606;
		}
		_iter_end_1aa904606:;
	};
}



inline void _1a84e720c_process_exceptional_handler(_1a84d53d7_Eval* _self_, jule::Ptr<_1a5b33164_FnIns>& _176751_f, jule::Ptr<_21110ab31_FnCallExpr>& _176767_fc, jule::Ptr<_1a84d3869_Data>& _176789_d) {
	jule::Bool _176813_result_needed = ((!(_1a5b30419_is_void(_176751_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1a844d4e8_ScopeChecker> _176917_csc = nullptr;;
	jule::Ptr<_1a8438e62_Scope> _177017_ch = nullptr;;
	jule::Ptr<_1b396b1c0_FnCallExprModel> _177217_model = _176789_d.get()._field_model.operator jule::Ptr<_1b396b1c0_FnCallExprModel>();;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a846bc42_Sema>>()) {
			_case_begin_1aa907c25:;
			{
				jule::Ptr<_1a846bc42_Sema> _177621_s = (*_self_)._field_lookup.operator jule::Ptr<_1a846bc42_Sema>();;
				_176917_csc=_1a83d7d12_new_scope_checker(_177621_s,nullptr);
				if (_176813_result_needed) {
					_176917_csc.get()._field_result=_176751_f;
				};
				_177017_ch=jule::new_ptr<_1a8438e62_Scope>();
				_176917_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_176917_csc.get()._field_table.get()._field_vars,1);_176917_csc.get()._field_table.get()._field_vars.__push(_1a850851a_build_error_var(_177017_ch,_176767_fc));;
				_1a845c859_check(_176917_csc, _176767_fc.get()._field_exception,_177017_ch);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844d4e8_ScopeChecker>>()) {
			_case_begin_1aa907c9c:;
			{
				jule::Ptr<_1a844d4e8_ScopeChecker> _178521_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a844d4e8_ScopeChecker>();;
				_176917_csc=_1a845cabd_new_child_checker(_178521_sc);
				if (_176813_result_needed) {
					_176917_csc.get()._field_result=_176751_f;
				};
				_177017_ch=_1a8451de2_get_child(_178521_sc.ptr());
				_176917_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_176917_csc.get()._field_table.get()._field_vars,1);_176917_csc.get()._field_table.get()._field_vars.__push(_1a850851a_build_error_var(_177017_ch,_176767_fc));;
				_1a84522aa_check_child_ssc(_178521_sc, _176767_fc.get()._field_exception,_177017_ch,_176917_csc);
			}
		}
		_match_end_1aa907bae:;
	};
	_177217_model.get()._field_assigned=_176813_result_needed;
	_177217_model.get()._field_except=_177017_ch;
	if ((_176813_result_needed && (_176917_csc.get()._field_result != nullptr))) {
		_1a84d58b0_push_err(&(*_self_), _176767_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1a84e751a_call_fn(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110ab31_FnCallExpr>& _180332_fc, jule::Ptr<_1a84d3869_Data>& _180354_d) {
	jule::Ptr<_1a5b33164_FnIns> _180417_f = _1a8510c2b_fnc(_180354_d.get()._field_kind.ptr());;
	if ((_1a84d655e_is_global(_self_.ptr()) && _180417_f.get()._field_decl.get()._field_exceptional)) {
		_1a84d58b0_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1a84d5bce_push_suggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
	};
	if (_1a5b33de0_is_builtin(_180417_f.ptr())) {
		_1a84e699d_call_builtin_fn(_self_, _180332_fc,_180354_d);
		return;;
	};
	if (((!(_1a5b3067d_is_method(_180417_f.get()._field_decl.ptr()))) && _1a850b52e_has_directive(_180417_f.get()._field_decl.get()._field_directives,jule::Str("test", 4)))) {
		_1a84d58b0_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_180354_d=nullptr;
		return;;
	};
	if (((((!(_180354_d.get()._field_mutable)) && _1a5b3067d_is_method(_180417_f.get()._field_decl.ptr())) && (!(_180417_f.get()._field_decl.get()._field_statically))) && _180417_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable)) {
		_1a84d58b0_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1a84d62ea_is_unsafe(_self_.ptr()))) && _180417_f.get()._field_decl.get()._field_unsafety)) {
		_1a84d58b0_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _182718_ok;;
	jule::Bool _182722_dynamic_annotation;;
	std::tie(_182718_ok,_182722_dynamic_annotation) = _1a84e667e_check_fn_call_generics(_self_.ptr(), _180417_f,_180332_fc);
	if ((!(_182718_ok))) {
		_180354_d=nullptr;
		return;;
	};
	jule::Ptr<_1a846bc42_Sema> _183317_old = _self_.get()._field_s;;
	if ((_180417_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_180417_f.get()._field_decl.get()._field_owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_183317_old != _self_.get()._field_s)) {
			_183317_old.get()._field_errors=jule::append(_183317_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_183317_old;
	});;
	if ((!(_182722_dynamic_annotation))) {
		if ((!(_180417_f.get()._field_reloaded))) {
			_182718_ok=_1a8475b3b_reload_fn_ins_types(_self_.get()._field_s, _180417_f);
			if ((!(_182718_ok))) {
				_180354_d=nullptr;
				return;;
			};
			_180417_f.get()._field_reloaded=true;
		};
	} else {
		_1a84754ed_build_fn_non_generic_type_kinds(_self_.get()._field_s, _180417_f);
	};
	_1a84c05e2_FnCallArgChecker _185917_fcac = _1a84c05e2_FnCallArgChecker(_self_,_180332_fc.get()._field_args,_180332_fc.get()._field_token,_180417_f,_182722_dynamic_annotation,jule::Slice<jule::Any>());;
	if ((_180417_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_183317_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_183317_old);
		_182718_ok=_1a84c29ac_check(&_185917_fcac);
		std::tie(_183317_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_183317_old);
	} else {
		_182718_ok=_1a84c29ac_check(&_185917_fcac);
	};
	if (((!(_182718_ok)) && _182722_dynamic_annotation)) {
		_180354_d=nullptr;
		return;;
	};
	jule::Ptr<_1a5b33164_FnIns> _187917_exist_instance = _1a5b31e21_append_instance(_180417_f.get()._field_decl.ptr(), _180417_f);;
	if ((_187917_exist_instance != nullptr)) {
		_180417_f=_187917_exist_instance;
	};
	jule::Any _188417_call_model = _180354_d.get()._field_model;;
	if (_1a5b30419_is_void(_180417_f.get()._field_decl.ptr())) {
		_180354_d=_1a850996c_build_void_data();
	} else {
		if (_182722_dynamic_annotation) {
			_182718_ok=_1a8475b3b_reload_fn_ins_types(_self_.get()._field_s, _180417_f);
			if ((!(_182718_ok))) {
				_180354_d=nullptr;
				return;;
			};
			_180417_f.get()._field_reloaded=true;
		};
		_180354_d.get()._field_kind=_180417_f.get()._field_result;
		_180354_d.get()._field_lvalue=false;
	};
	_180354_d.get()._field_mutable=true;
	_180354_d.get()._field_model=jule::Any(jule::new_ptr<_1b396b1c0_FnCallExprModel>(_1b396b1c0_FnCallExprModel(_180332_fc.get()._field_token,_180417_f,jule::Bool(),jule::Any(_188417_call_model),_185917_fcac._field_arg_models,jule::Ptr<_1a8438e62_Scope>(),jule::Bool())));
	if (_180417_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_210ea3a1d_unhandled(_180332_fc.ptr())) {
				_case_begin_1aa91ea61:;
				{
					_1a84d58b0_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1a84d5bce_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_210ea5ec6_ignored(_180332_fc.ptr())) {
				_case_begin_1aa91e753:;
				{
					goto _match_end_1aa91e621;
				}
			}
			else {
				_case_begin_1aa91e6dc:;
				{
					_1a84e720c_process_exceptional_handler(_self_.ptr(), _180417_f,_180332_fc,_180354_d);
				}
			}
			_match_end_1aa91e621:;
		};
	} else if ((!(_210ea3a1d_unhandled(_180332_fc.ptr())))) {
		_1a84d58b0_push_err(_self_.ptr(), _180332_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if (((_180417_f.get()._field_generics.len() > 0LL) && (_187917_exist_instance == nullptr))) {
		_1a8482a49_check_fn_ins_caller(_self_.get()._field_s, _180417_f,_180332_fc.get()._field_token);
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84e7828_eval_fn_call(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110ab31_FnCallExpr> _193236_fc) {
	jule::Ptr<_1a850cbe5_TypeKind> _193317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_193317_prefix;
	});;
	{
		auto &_match_expr{ _193236_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_211109cb7_IdentExpr>>()) {
			_case_begin_1aa923e0b:;
			{
				if ((_193236_fc.get()._field_expr.get()._field_token.get()._field_kind == jule::Str("error", 5))) {
					return _1a854ad76_builtin_caller_error(_self_,_193236_fc);
				};
			}
		}
		_match_end_1aa923da6:;
	};
	jule::Ptr<_1a84d3869_Data> _194617_d = _1a84ee478_eval_expr_kind(_self_, jule::Any(_193236_fc.get()._field_expr.get()._field_kind));;
	if ((_194617_d == nullptr)) {
		return nullptr;
	};
	if (_194617_d.get()._field_decl) {
		_1a84e62c7_call_type_fn(_self_, _193236_fc,_194617_d);
		return _194617_d;
	};
	if ((_1a8510c2b_fnc(_194617_d.get()._field_kind.ptr()) == nullptr)) {
		_1a84d58b0_push_err(_self_.ptr(), _193236_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1a84e751a_call_fn(_self_, _193236_fc,_194617_d);
	return _194617_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84e7bd0_eval_enum_static(_1a84d53d7_Eval* _self_, jule::Ptr<_1a83065e3_Enum> _196539_enm, jule::Ptr<_2110e7238_Token> _196551_ident) {
	jule::Ptr<_1a84d3869_Data> _196617_d = jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_196539_enm, 3))),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a83a871c_Const>()));;
	jule::Ptr<_1a8306406_EnumItem> _197517_item = _1a8306a44_find_item(_196539_enm.ptr(), _196551_ident.get()._field_kind);;
	if ((_197517_item == nullptr)) {
		_1a84d58b0_push_err(&(*_self_), _196551_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_196539_enm.get()._field_ident),jule::Any(_196551_ident.get()._field_kind)}));
	} else {
		_196617_d.get()._field_constant=jule::new_ptr<_1a83a871c_Const>((*(_197517_item.get()._field_value.get()._field_data.get()._field_constant)));
		_196617_d.get()._field_model=jule::Any(_196617_d.get()._field_constant);
		_1a850a044_apply_cast_model_by_enum(_196617_d,_196539_enm);
	};
	return _196617_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84e8087_eval_struct_static(_1a84d53d7_Eval* _self_, jule::Ptr<_1b39672a9_StructIns> _198741_s, jule::Ptr<_2110e7238_Token> _198756_ident) {
	jule::Ptr<_1a84d3869_Data> _198817_d = jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::Ptr<_1a850cbe5_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a83a871c_Const>()));;
	;
	jule::Ptr<_1a5b2eeb8_Fn> _199617_method = _1b3968244_find_method(_198741_s.ptr(), _198756_ident.get()._field_kind,true);;
	if ((_199617_method != nullptr)) {
		if ((!(_1a846ed33_is_accessible_define((*_self_)._field_s.ptr(), _199617_method.get()._field_public,_199617_method.get()._field_token)))) {
			_1a84d58b0_push_err(&(*_self_), _198756_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_198756_ident.get()._field_kind)}));
			_1a84d5bce_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a5b33164_FnIns> _200321_ins = _1a5b31b13_instance(_199617_method);;
		_200321_ins.get()._field_owner=_198741_s;
		_1a84d8e02_push_reference_to_fn(&(*_self_), _200321_ins);
		_198817_d.get()._field_model=jule::Any(jule::new_ptr<_1b396de81_StructStaticIdentExprModel>(_1b396de81_StructStaticIdentExprModel(_198741_s,jule::Any(_198817_d.get()._field_model),_200321_ins)));
		_198817_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_200321_ins, 1)));
		return _198817_d;
	};
	jule::Ptr<_1a8487246_Var> _201717_sttc = _1b396552c_find_static(_198741_s.get()._field_decl.ptr(), _198756_ident.get()._field_kind);;
	if ((_201717_sttc != nullptr)) {
		return _1a84dbca1_eval_var(&(*_self_), _201717_sttc,_198756_ident);
	};
	_1a84d58b0_push_err(&(*_self_), _198756_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_198741_s.get()._field_decl.get()._field_ident),jule::Any(_198756_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1a84d3869_Data> _1a84e84d8_eval_trait_sub_ident(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data> _202643_d, jule::Ptr<_1a5e34531_Trait> _202657_trt, jule::Ptr<_2110e7238_Token> _202674_ident) {
	jule::Ptr<_1a5b2eeb8_Fn> _202717_f = _1a5de9caa_find_method(_202657_trt.ptr(), _202674_ident.get()._field_kind);;
	if ((_202717_f == nullptr)) {
		_1a84d58b0_push_err(&(*_self_), _202674_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_202657_trt.get()._field_ident),jule::Any(_202674_ident.get()._field_kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a5b31b13_instance(_202717_f), 1))),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::new_ptr<_1b396d25a_TraitSubIdentExprModel>(_1b396d25a_TraitSubIdentExprModel(_202674_ident,jule::Any(_202643_d.get()._field_model),_202717_f,_202657_trt))),false,jule::Ptr<_1a83a871c_Const>()));
}



inline jule::Ptr<_1a84d3869_Data> _1a84e89d3_eval_struct_sub_ident(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data> _204944_d, jule::Ptr<_1b39672a9_StructIns> _204958_s, jule::Ptr<_21110a757_SubIdentExpr> _204977_si, jule::Bool _204996_ref) {
	jule::Ptr<_1b396694b_FieldIns> _205017_f = _1b3968552_find_field(_204958_s.ptr(), _204977_si.get()._field_ident.get()._field_kind);;
	if ((_205017_f != nullptr)) {
		if ((!(_1a846ed33_is_accessible_define((*_self_)._field_s.ptr(), _205017_f.get()._field_decl.get()._field_public,_205017_f.get()._field_decl.get()._field_token)))) {
			_1a84d58b0_push_err(&(*_self_), _204977_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_205017_f.get()._field_decl.get()._field_ident)}));
			_1a84d5bce_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b396d9ca_StructSubIdentExprModel> _205721_model = jule::new_ptr<_1b396d9ca_StructSubIdentExprModel>(_1b396d9ca_StructSubIdentExprModel(_204977_si.get()._field_ident,jule::new_ptr<_1a84d3869_Data>((*(_204944_d))),_204944_d.get()._field_kind,jule::Ptr<_1a5b33164_FnIns>(),_205017_f));;
		_204944_d.get()._field_model=jule::Any(_205721_model);
		_204944_d.get()._field_kind=_205017_f.get()._field_kind;
		_204944_d.get()._field_lvalue=true;
		if ((_205017_f.get()._field_decl.get()._field_mutable && (!(_204944_d.get()._field_mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1a844d4e8_ScopeChecker>>()) {
					_case_begin_1aa93ac14:;
					{
						jule::Ptr<_1a844d4e8_ScopeChecker> _207125_scope = _1a845063d_get_root((*_self_)._field_lookup.operator jule::Ptr<_1a844d4e8_ScopeChecker>());;
						_204944_d.get()._field_mutable=((_207125_scope.get()._field_owner != nullptr) && (_207125_scope.get()._field_owner.get()._field_owner == _204958_s));
					}
				}
				_match_end_1aa93abae:;
			};
		};
		return _204944_d;
	};
	;
	jule::Ptr<_1a5b2eeb8_Fn> _208017_m = _1b3968244_find_method(_204958_s.ptr(), _204977_si.get()._field_ident.get()._field_kind,false);;
	if ((_208017_m == nullptr)) {
		_1a84d58b0_push_err(&(*_self_), _204977_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_204958_s.get()._field_decl.get()._field_ident),jule::Any(_204977_si.get()._field_ident.get()._field_kind)}));
		return nullptr;
	};
	if ((!(_1a846ed33_is_accessible_define((*_self_)._field_s.ptr(), _208017_m.get()._field_public,_208017_m.get()._field_token)))) {
		_1a84d58b0_push_err(&(*_self_), _204977_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_208017_m.get()._field_ident)}));
		_1a84d5bce_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1a5b2e01c_is_ref(_208017_m.get()._field_params[0LL].ptr()) && (!(_204996_ref)))) {
		_1a84d58b0_push_err(&(*_self_), _204977_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1a84da8d7_check_deprecated(&(*_self_), _208017_m.get()._field_directives,_204977_si.get()._field_ident);
	jule::Ptr<_1a5b33164_FnIns> _209617_ins = _1a5b31b13_instance(_208017_m);;
	_209617_ins.get()._field_owner=_204958_s;
	_1a84d8e02_push_reference_to_fn(&(*_self_), _209617_ins);
	jule::Ptr<_1a84d3869_Data> _209917_model = jule::new_ptr<_1a84d3869_Data>((*(_204944_d)));;
	_204944_d.get()._field_model=jule::Any(jule::new_ptr<_1b396d9ca_StructSubIdentExprModel>(_1b396d9ca_StructSubIdentExprModel(_204977_si.get()._field_ident,_209917_model,_204944_d.get()._field_kind,_209617_ins,jule::Ptr<_1b396694b_FieldIns>())));
	_204944_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_209617_ins, 1)));
	return _204944_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84e8d8a_eval_slice_sub_ident(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data> _211043_d, jule::Ptr<_2110e7238_Token> _211057_ident) {
	{
		auto &_match_expr{ _211057_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1aa9456d0:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5))),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_211043_d.get()._field_kind,jule::Any(_211043_d.get()._field_model),_211057_ident,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1aa945746:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5))),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_211043_d.get()._field_kind,jule::Any(_211043_d.get()._field_model),_211057_ident,jule::Str("cap()", 5)))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1aa945559:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>({jule::new_ptr<_1a5b322c8_ParamIns>(_1a5b322c8_ParamIns(jule::new_ptr<_1a5b2d67b_Param>(_1a5b2d67b_Param(jule::Ptr<_2110e7238_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8511a84_TypeSymbol>(),jule::Str("i", 1))),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5))))),jule::new_ptr<_1a5b322c8_ParamIns>(_1a5b322c8_ParamIns(jule::new_ptr<_1a5b2d67b_Param>(_1a5b2d67b_Param(jule::Ptr<_2110e7238_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8511a84_TypeSymbol>(),jule::Str("j", 1))),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5)))))}),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a854ac44_builtin_caller_common_mut),jule::Bool())), 1))),_211043_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_211043_d.get()._field_kind,jule::Any(_211043_d.get()._field_model),_211057_ident,jule::Str("swap", 4)))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else {
			_case_begin_1aa9442c2:;
			{
				_1a84d58b0_push_err(&(*_self_), _211057_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_211043_d.get()._field_kind.ptr())),jule::Any(_211057_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa9444e2:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84e9242_eval_array_sub_ident(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data> _216943_d, jule::Ptr<_2110e7238_Token> _216957_ident) {
	{
		auto &_match_expr{ _216957_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1aa94b72a:;
			{
				jule::Ptr<_1a83a871c_Const> _217221_c = static__1a83a8909_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a8510753_arr(_216943_d.get()._field_kind.ptr()).get()._field_n)));;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5))),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_217221_c),jule::Bool(),_217221_c));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1aa94b791:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>({jule::new_ptr<_1a5b322c8_ParamIns>(_1a5b322c8_ParamIns(jule::new_ptr<_1a5b2d67b_Param>(_1a5b2d67b_Param(jule::Ptr<_2110e7238_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8511a84_TypeSymbol>(),jule::Str("i", 1))),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5))))),jule::new_ptr<_1a5b322c8_ParamIns>(_1a5b322c8_ParamIns(jule::new_ptr<_1a5b2d67b_Param>(_1a5b2d67b_Param(jule::Ptr<_2110e7238_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8511a84_TypeSymbol>(),jule::Str("j", 1))),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5)))))}),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a854ac44_builtin_caller_common_mut),jule::Bool())), 1))),_216943_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_216943_d.get()._field_kind,jule::Any(_216943_d.get()._field_model),_216957_ident,jule::Str("swap", 4)))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else {
			_case_begin_1aa94a0ca:;
			{
				_1a84d58b0_push_err(&(*_self_), _216957_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_216943_d.get()._field_kind.ptr())),jule::Any(_216957_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa94a2ea:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84e95e9_eval_map_sub_ident(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data> _221441_d, jule::Ptr<_2110e7238_Token> _221455_ident) {
	jule::Ptr<_1a8517969_Map> _221517_map_kind = _1a8511468_map(_221441_d.get()._field_kind.ptr());;
	{
		auto &_match_expr{ _221455_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1aa950d06:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5))),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_221441_d.get()._field_kind,jule::Any(_221441_d.get()._field_model),_221455_ident,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1aa950d6c:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a854ac44_builtin_caller_common_mut),jule::Bool())), 1))),_221441_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_221441_d.get()._field_kind,jule::Any(_221441_d.get()._field_model),_221455_ident,jule::Str("clear", 5)))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1aa956dd9:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a85163b3_Slc>(_1a85163b3_Slc(_221517_map_kind.get()._field_key)), 7))),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a854ac44_builtin_caller_common_mut),jule::Bool())), 1))),_221441_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_221441_d.get()._field_kind,jule::Any(_221441_d.get()._field_model),_221455_ident,jule::Str("keys", 4)))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1aa956e50:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a85163b3_Slc>(_1a85163b3_Slc(_221517_map_kind.get()._field_val)), 7))),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a854ac44_builtin_caller_common_mut),jule::Bool())), 1))),_221441_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_221441_d.get()._field_kind,jule::Any(_221441_d.get()._field_model),_221455_ident,jule::Str("values", 6)))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1aa956eb6:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>({jule::new_ptr<_1a5b322c8_ParamIns>(_1a5b322c8_ParamIns(jule::new_ptr<_1a5b2d67b_Param>(_1a5b2d67b_Param(jule::Ptr<_2110e7238_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8511a84_TypeSymbol>(),jule::Str("key", 3))),_221517_map_kind.get()._field_key))}),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a8568a75_builtin_caller_common),jule::Bool())), 1))),_221441_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_221441_d.get()._field_kind,jule::Any(_221441_d.get()._field_model),_221455_ident,jule::Str("has", 3)))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1aa95702c:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>({jule::new_ptr<_1a5b322c8_ParamIns>(_1a5b322c8_ParamIns(jule::new_ptr<_1a5b2d67b_Param>(_1a5b2d67b_Param(jule::Ptr<_2110e7238_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8511a84_TypeSymbol>(),jule::Str("key", 3))),_221517_map_kind.get()._field_key))}),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a854ac44_builtin_caller_common_mut),jule::Bool())), 1))),_221441_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_221441_d.get()._field_kind,jule::Any(_221441_d.get()._field_model),_221455_ident,jule::Str("del", 3)))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else {
			_case_begin_1aa9505ca:;
			{
				_1a84d58b0_push_err(&(*_self_), _221455_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a8517ccc_to_str(_221517_map_kind.ptr())),jule::Any(_221455_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa950b3b:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84e99a1_eval_str_sub_ident(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data> _233741_d, jule::Ptr<_2110e7238_Token> _233755_ident) {
	jule::Ptr<_1a850cbe5_TypeKind> _233817_str_kind = jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("str", 3)), 5)));;
	{
		auto &_match_expr{ _233755_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1aa9616a7:;
			{
				jule::Ptr<_1a84d3869_Data> _234121_sd = jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));;
				if (_1a84d422c_is_const(_233741_d.ptr())) {
					_234121_sd.get()._field_constant=static__1a83a8909_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a83aa1be_read_str(_233741_d.get()._field_constant.ptr()).len())));
					_234121_sd.get()._field_model=jule::Any(_234121_sd.get()._field_constant);
				} else {
					_234121_sd.get()._field_model=jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_233741_d.get()._field_kind,jule::Any(_233741_d.get()._field_model),_233755_ident,jule::Str("len()", 5))));
				};
				return _234121_sd;
			}
		}
		else {
			_case_begin_1aa960970:;
			{
				_1a84d58b0_push_err(&(*_self_), _233755_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_233817_str_kind.ptr())),jule::Any(_233755_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa961355:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84e9cae_eval_int_type_static(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _236239_ident) {
	;
	{
		auto &_match_expr{ _236239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa9664e2:;
			{
				jule::Ptr<_1a83a871c_Const> _236721_c = static__1a83a8909_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a8445c93_max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_236721_c),jule::Bool(),_236721_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa9663e3:;
			{
				jule::Ptr<_1a83a871c_Const> _237421_c = static__1a83a8909_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a84459a7_min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_237421_c),jule::Bool(),_237421_c));
			}
		}
		else {
			_case_begin_1aa965326:;
			{
				_1a84d58b0_push_err(&(*_self_), _236239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_236239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa9655bd:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84ea0bc_eval_uint_type_static(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _238640_ident) {
	;
	{
		auto &_match_expr{ _238640_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa96a4b3:;
			{
				jule::Ptr<_1a83a871c_Const> _239121_c = static__1a83a8a3b_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1a8445c93_max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("uint", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_239121_c),jule::Bool(),_239121_c));
			}
		}
		else {
			_case_begin_1aa9692e7:;
			{
				_1a84d58b0_push_err(&(*_self_), _238640_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_238640_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa96958e:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84ea3ca_eval_i8_type_static(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _240338_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _240338_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa96d928:;
			{
				jule::Ptr<_1a83a871c_Const> _241021_c = static__1a83a8909_new_i64(127LL);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("i8", 2)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_241021_c),jule::Bool(),_241021_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa96d829:;
			{
				jule::Ptr<_1a83a871c_Const> _241721_c = static__1a83a8909_new_i64(-128LL);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("i8", 2)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_241721_c),jule::Bool(),_241721_c));
			}
		}
		else {
			_case_begin_1aa96c65d:;
			{
				_1a84d58b0_push_err(&(*_self_), _240338_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_240338_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa96c9e3:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84ea6d8_eval_i16_type_static(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _242939_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242939_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa9729e8:;
			{
				jule::Ptr<_1a83a871c_Const> _243621_c = static__1a83a8909_new_i64(32767LL);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("i16", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_243621_c),jule::Bool(),_243621_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa9728e9:;
			{
				jule::Ptr<_1a83a871c_Const> _244321_c = static__1a83a8909_new_i64(-32768LL);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("i16", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_244321_c),jule::Bool(),_244321_c));
			}
		}
		else {
			_case_begin_1aa97172d:;
			{
				_1a84d58b0_push_err(&(*_self_), _242939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_242939_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa971ab3:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84ea9e6_eval_i32_type_static(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _245539_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245539_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa976ab8:;
			{
				jule::Ptr<_1a83a871c_Const> _246221_c = static__1a83a8909_new_i64(2147483647LL);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("i32", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_246221_c),jule::Bool(),_246221_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa9769b9:;
			{
				jule::Ptr<_1a83a871c_Const> _246921_c = static__1a83a8909_new_i64(-2147483648LL);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("i32", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_246921_c),jule::Bool(),_246921_c));
			}
		}
		else {
			_case_begin_1aa9757ed:;
			{
				_1a84d58b0_push_err(&(*_self_), _245539_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_245539_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa975b83:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84ead04_eval_i64_type_static(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _248139_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _248139_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa97aa23:;
			{
				jule::Ptr<_1a83a871c_Const> _248821_c = static__1a83a8909_new_i64(jule::MAX_I64);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("i64", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_248821_c),jule::Bool(),_248821_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa97a924:;
			{
				jule::Ptr<_1a83a871c_Const> _249521_c = static__1a83a8909_new_i64(jule::MIN_I64);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("i64", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_249521_c),jule::Bool(),_249521_c));
			}
		}
		else {
			_case_begin_1aa979802:;
			{
				_1a84d58b0_push_err(&(*_self_), _248139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_248139_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa979b21:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84eb112_eval_u8_type_static(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _250738_ident) {
	;
	;
	{
		auto &_match_expr{ _250738_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa97ea05:;
			{
				jule::Ptr<_1a83a871c_Const> _251321_c = static__1a83a8a3b_new_u64(255LLU);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("u8", 2)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_251321_c),jule::Bool(),_251321_c));
			}
		}
		else {
			_case_begin_1aa97d372:;
			{
				_1a84d58b0_push_err(&(*_self_), _250738_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_250738_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa97da6a:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84eb420_eval_u16_type_static(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _252539_ident) {
	;
	;
	{
		auto &_match_expr{ _252539_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa98284e:;
			{
				jule::Ptr<_1a83a871c_Const> _253121_c = static__1a83a8a3b_new_u64(65535LLU);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("u16", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_253121_c),jule::Bool(),_253121_c));
			}
		}
		else {
			_case_begin_1aa9811bb:;
			{
				_1a84d58b0_push_err(&(*_self_), _252539_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_252539_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa9818b4:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84eb72d_eval_u32_type_static(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _254339_ident) {
	;
	;
	{
		auto &_match_expr{ _254339_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa985698:;
			{
				jule::Ptr<_1a83a871c_Const> _254921_c = static__1a83a8a3b_new_u64(4294967295LLU);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("u32", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_254921_c),jule::Bool(),_254921_c));
			}
		}
		else {
			_case_begin_1aa984015:;
			{
				_1a84d58b0_push_err(&(*_self_), _254339_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_254339_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa98470d:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84eba3b_eval_u64_type_static(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _256139_ident) {
	;
	;
	{
		auto &_match_expr{ _256139_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa988437:;
			{
				jule::Ptr<_1a83a871c_Const> _256721_c = static__1a83a8a3b_new_u64(jule::MAX_U64);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("u64", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_256721_c),jule::Bool(),_256721_c));
			}
		}
		else {
			_case_begin_1aa986d5e:;
			{
				_1a84d58b0_push_err(&(*_self_), _256139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_256139_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa98749c:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84ebd49_eval_f32_type_tatic(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _257938_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257938_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa98b869:;
			{
				jule::Ptr<_1a83a871c_Const> _258721_c = static__1a83a918a_new_f64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("f32", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_258721_c),jule::Bool(),_258721_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa98b76a:;
			{
				jule::Ptr<_1a83a871c_Const> _259421_c = static__1a83a918a_new_f64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("f32", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_259421_c),jule::Bool(),_259421_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1aa98b7d1:;
			{
				jule::Ptr<_1a83a871c_Const> _260121_c = static__1a83a918a_new_f64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("f32", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_260121_c),jule::Bool(),_260121_c));
			}
		}
		else {
			_case_begin_1aa98a66a:;
			{
				_1a84d58b0_push_err(&(*_self_), _257938_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_257938_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa98a923:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84ec157_eval_f64_type_static(_1a84d53d7_Eval* _self_, jule::Ptr<_2110e7238_Token> _261339_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261339_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1aa99193a:;
			{
				jule::Ptr<_1a83a871c_Const> _262121_c = static__1a83a918a_new_f64(jule::MAX_F64);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("f64", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_262121_c),jule::Bool(),_262121_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1aa99183b:;
			{
				jule::Ptr<_1a83a871c_Const> _262821_c = static__1a83a918a_new_f64(jule::MIN_F64);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("f64", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_262821_c),jule::Bool(),_262821_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1aa9918a2:;
			{
				jule::Ptr<_1a83a871c_Const> _263521_c = static__1a83a918a_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("f64", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_263521_c),jule::Bool(),_263521_c));
			}
		}
		else {
			_case_begin_1aa99073b:;
			{
				_1a84d58b0_push_err(&(*_self_), _261339_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_261339_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa9909e4:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84ec50e_eval_prim_static(_1a84d53d7_Eval* _self_, jule::Str _264735_kind, jule::Ptr<_2110e7238_Token> _264746_ident) {
	{
		auto &_match_expr{ _264735_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1aa99608d:;
			{
				return _1a84e9cae_eval_int_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1aa995ea0:;
			{
				return _1a84ea0bc_eval_uint_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1aa996016:;
			{
				return _1a84ea3ca_eval_i8_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa9953cd:;
			{
				return _1a84ea6d8_eval_i16_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa995444:;
			{
				return _1a84ea9e6_eval_i32_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa9954aa:;
			{
				return _1a84ead04_eval_i64_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1aa995521:;
			{
				return _1a84eb112_eval_u8_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa99627a:;
			{
				return _1a84eb420_eval_u16_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1aa9962e1:;
			{
				return _1a84eb72d_eval_u32_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1aa996357:;
			{
				return _1a84eba3b_eval_u64_type_static(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa9963bd:;
			{
				return _1a84ebd49_eval_f32_type_tatic(&(*_self_), _264746_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa996434:;
			{
				return _1a84ec157_eval_f64_type_static(&(*_self_), _264746_ident);
			}
		}
		else {
			_case_begin_1aa9950c0:;
			{
				_1a84d58b0_push_err(&(*_self_), _264746_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_264735_kind),jule::Any(_264746_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aa995224:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84ec8b6_eval_type_static(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data> _267939_d, jule::Ptr<_21110a757_SubIdentExpr> _267953_si) {
	{
		
		if ((_1a850eca2_prim(_267939_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa99bb10:;
			{
				return _1a84ec50e_eval_prim_static(&(*_self_), _1a85127aa_to_str(_1a850eca2_prim(_267939_d.get()._field_kind.ptr()).ptr()),_267953_si.get()._field_ident);
			}
		}
		else if ((_1a85104de_enm(_267939_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa99c77b:;
			{
				return _1a84e7bd0_eval_enum_static(&(*_self_), _1a85104de_enm(_267939_d.get()._field_kind.ptr()),_267953_si.get()._field_ident);
			}
		}
		else if ((_1a8510e90_strct(_267939_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa99c7e2:;
			{
				return _1a84e8087_eval_struct_static(&(*_self_), _1a8510e90_strct(_267939_d.get()._field_kind.ptr()),_267953_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1aa99b78b:;
			{
				_1a84d58b0_push_err(&(*_self_), _267953_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_267939_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aa99b6e2:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84ecc6d_eval_obj_sub_ident(_1a84d53d7_Eval* _self_, jule::Ptr<_1a84d3869_Data> _269341_d, jule::Ptr<_21110a757_SubIdentExpr> _269355_si) {
	if (_2110e9988_is_ignore_ident(_269355_si.get()._field_ident.get()._field_kind)) {
		_1a84d58b0_push_err(&(*_self_), _269355_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a850cbe5_TypeKind> _269917_kind = _269341_d.get()._field_kind;;
	{
		
		if ((_1a851027a_ptr(_269341_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9a2176:;
			{
				jule::Ptr<_1a8518eba_Ptr> _270217_ptr = _1a851027a_ptr(_269341_d.get()._field_kind.ptr());;
				if (_1a851998d_is_unsafe(_270217_ptr.ptr())) {
					goto _match_end_1aa9a2066;
				};
				if (((!(_269355_si.get()._field_is_self)) && (!(_1a84d62ea_is_unsafe(&(*_self_)))))) {
					_1a84d58b0_push_err(&(*_self_), _269355_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_269917_kind=_1a851027a_ptr(_269341_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1a8510016_sptr(_269341_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9a21ed:;
			{
				_269917_kind=_1a8510016_sptr(_269341_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1aa9a2066:;
	};
	{
		
		if ((_1a8511204_trt(_269341_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9a4c28:;
			{
				return _1a84e84d8_eval_trait_sub_ident(&(*_self_), _269341_d,_1a8511204_trt(_269341_d.get()._field_kind.ptr()),_269355_si.get()._field_ident);
			}
		}
		else if ((_1a8510e90_strct(_269917_kind.ptr()) != nullptr)) {
			_case_begin_1aa9a4ca0:;
			{
				jule::Ptr<_1b39672a9_StructIns> _271817_s = _1a8510e90_strct(_269917_kind.ptr());;
				if (_1a8508e33_is_instanced_struct(_271817_s)) {
					jule::Bool _272025_used_reference_elem = (_1a8510016_sptr(_269341_d.get()._field_kind.ptr()) != nullptr);;
					return _1a84e89d3_eval_struct_sub_ident(&(*_self_), _269341_d,_1a8510e90_strct(_269917_kind.ptr()),_269355_si,_272025_used_reference_elem);
				};
			}
		}
		else if ((_1a85109b7_slc(_269917_kind.ptr()) != nullptr)) {
			_case_begin_1aa9a4d27:;
			{
				return _1a84e8d8a_eval_slice_sub_ident(&(*_self_), _269341_d,_269355_si.get()._field_ident);
			}
		}
		else if ((_1a8510753_arr(_269917_kind.ptr()) != nullptr)) {
			_case_begin_1aa9a4d9e:;
			{
				return _1a84e9242_eval_array_sub_ident(&(*_self_), _269341_d,_269355_si.get()._field_ident);
			}
		}
		else if ((_1a8511468_map(_269917_kind.ptr()) != nullptr)) {
			_case_begin_1aa9a4e26:;
			{
				return _1a84e95e9_eval_map_sub_ident(&(*_self_), _269341_d,_269355_si.get()._field_ident);
			}
		}
		else if ((_1a850eca2_prim(_269917_kind.ptr()) != nullptr)) {
			_case_begin_1aa9a5432:;
			{
				jule::Ptr<_1a8512447_Prim> _273017_p = _1a850eca2_prim(_269917_kind.ptr());;
				{
					auto &_match_expr{ _273017_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1aa9aaa0e:;
						{
							return _1a84e99a1_eval_str_sub_ident(&(*_self_), _269341_d,_269355_si.get()._field_ident);
						}
					}
					_match_end_1aa9ab009:;
				};
			}
		}
		_match_end_1aa9a4b4b:;
	};
	_1a84d58b0_push_err(&(*_self_), _269355_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_269341_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1a84d3869_Data> _1a84ed07b_eval_sub_ident(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110a757_SubIdentExpr> _274038_si) {
	jule::Ptr<_1a850cbe5_TypeKind> _274117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_274117_prefix;
	});;
	jule::Ptr<_1a84d3869_Data> _274517_d = _1a84ee478_eval_expr_kind(_self_, jule::Any(_274038_si.get()._field_expr));;
	if ((_274517_d == nullptr)) {
		return nullptr;
	};
	if (_274517_d.get()._field_decl) {
		return _1a84ec8b6_eval_type_static(_self_.ptr(), _274517_d,_274038_si);
	};
	return _1a84ecc6d_eval_obj_sub_ident(_self_.ptr(), _274517_d,_274038_si);
}



inline jule::Ptr<_1a84d3869_Data> _1a84ed389_eval_tuple(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_211079ae4_TupleExpr> _275734_tup) {
	jule::Ptr<_1a8516da8_Tuple> _275817_tup_t = jule::new_ptr<_1a8516da8_Tuple>(_1a8516da8_Tuple());;
	_275817_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>::alloc(0LL,_275734_tup.get()._field_expr.len());
	jule::Ptr<_1b396ee71_TupleExprModel> _276117_model = jule::new_ptr<_1b396ee71_TupleExprModel>(_1b396ee71_TupleExprModel(jule::Slice<jule::Ptr<_1a84d3869_Data>>::alloc(0LL,_275734_tup.get()._field_expr.len())));;
	jule::Bool _276517_ok = true;;
	{
		auto &expr = _275734_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1aa9b1c46:;
		if (it != expr.end()) {
			jule::Ptr<_210e87caa_Expr> _276621_expr = *it;
			{
				jule::Ptr<_1a84d3869_Data> _276721_d = _1a84ee478_eval_expr_kind(_self_, jule::Any(_276621_expr.get()._field_kind));;
				if ((_276721_d == nullptr)) {
					_276517_ok=false;
					goto _iter_next_1aa9b1c46;
				};
				_275817_tup_t.get()._field_types = jule::alloc_for_append(_275817_tup_t.get()._field_types,1);_275817_tup_t.get()._field_types.__push(_276721_d.get()._field_kind);;
				_276117_model.get()._field_datas = jule::alloc_for_append(_276117_model.get()._field_datas,1);_276117_model.get()._field_datas.__push(_276721_d);;
			}
			_iter_next_1aa9b1c46:;
			++it;
			goto _iter_begin_1aa9b1c46;
		}
		_iter_end_1aa9b1c46:;
	};
	if ((!(_276517_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_275817_tup_t, 8))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276117_model),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
}



inline jule::Ptr<_1a84d3869_Data> _1a84ed741_eval_map(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_1a8517969_Map> _278632_m, jule::Ptr<_21110b1e7_BraceLit> _278645_lit) {
	jule::Ptr<_1b396c6cc_MapExprModel> _278717_model = jule::new_ptr<_1b396c6cc_MapExprModel>(_1b396c6cc_MapExprModel(_278632_m.get()._field_key,_278632_m.get()._field_val,jule::Slice<jule::Ptr<_1b396c259_KeyValPairExprModel>>()));;
	{
		auto &expr = _278645_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aa9b5596:;
		if (it != expr.end()) {
			jule::Ptr<_210e87caa_Expr> _279221_expr = *it;
			{
				{
					auto &_match_expr{ _279221_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_21110b3d4_KeyValPair>>()) {
						_case_begin_1aa9b5a5d:;
						{
							goto _match_end_1aa9b5ca0;
						}
					}
					else {
						_case_begin_1aa9b5d05:;
						{
							_1a84d58b0_push_err(_self_.ptr(), _278645_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1aa9b5ca0:;
				};
				jule::Ptr<_21110b3d4_KeyValPair> _280221_pair = _279221_expr.get()._field_kind.operator jule::Ptr<_21110b3d4_KeyValPair>();;
				jule::Ptr<_1a84d3869_Data> _280421_key = _1a84ee478_eval_expr_kind(_self_, jule::Any(_280221_pair.get()._field_key));;
				if ((_280421_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1a84d3869_Data> _280921_val = _1a84ee478_eval_expr_kind(_self_, jule::Any(_280221_pair.get()._field_val));;
				if ((_280921_val == nullptr)) {
					return nullptr;
				};
				_1a84748b5_check_assign_type(_self_.get()._field_s, false,_278632_m.get()._field_key,_280421_key,_280221_pair.get()._field_colon);
				_1a84748b5_check_assign_type(_self_.get()._field_s, false,_278632_m.get()._field_val,_280921_val,_280221_pair.get()._field_colon);
				_278717_model.get()._field_entries = jule::alloc_for_append(_278717_model.get()._field_entries,1);_278717_model.get()._field_entries.__push(jule::new_ptr<_1b396c259_KeyValPairExprModel>(_1b396c259_KeyValPairExprModel(jule::Any(_280421_key.get()._field_model),jule::Any(_280921_val.get()._field_model))));;
			}
			_iter_next_1aa9b5596:;
			++it;
			goto _iter_begin_1aa9b5596;
		}
		_iter_end_1aa9b5596:;
	};
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_278632_m, 9))),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_278717_model),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
}



inline jule::Ptr<_1a84d3869_Data> _1a84eda4e_eval_brace_lit(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110b1e7_BraceLit> _283038_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1aa9bac83:;
			{
				_1a84d58b0_push_err(_self_.ptr(), _283038_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1a8511468_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1aa9bb57a:;
			{
				return _1a84ed741_eval_map(_self_, _1a8511468_map(_self_.get()._field_prefix.ptr()),_283038_lit);
			}
		}
		else if ((_1a8510e90_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1aa9bb5e1:;
			{
				return _1a84e589d_eval_struct_lit_explicit(_self_, _1a8510e90_strct(_self_.get()._field_prefix.ptr()),_283038_lit.get()._field_exprs,_283038_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1aa9ba90e:;
			{
				_1a84d58b0_push_err(_self_.ptr(), _283038_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aa9ba843:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a84edd5c_eval_anon_fn(_1a84d53d7_Eval* _self_, jule::Ptr<_21110ce74_FnDecl> _284535_decl) {
	_1a851c2dc_TypeChecker _284617_tc = _1a851c2dc_TypeChecker((*_self_)._field_s,(*_self_)._field_lookup,jule::Ptr<_1a851b660_Referencer>(),jule::Ptr<_2110e7238_Token>(),jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a850bead_TypeAlias>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool());;
	jule::Ptr<_1a5b33164_FnIns> _285017_ins = _1a8522ec4_build_fn(&_284617_tc, _284535_decl);;
	_285017_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a844d4e8_ScopeChecker>>()) {
			_case_begin_1aa9be726:;
			{
				jule::Ptr<_1a844d4e8_ScopeChecker> _285521_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a844d4e8_ScopeChecker>();;
				jule::Ptr<_1a844d4e8_ScopeChecker> _285621_scc = _1a845cabd_new_child_checker(_285521_sc);;
				_285621_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a844d11e_ScopeLabel>>>(nullptr);
				_285621_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a844d30b_ScopeGoto>>>(nullptr);
				_285621_scc.get()._field_owner=nullptr;
				_285621_scc.get()._field_child_index=0LL;
				_285621_scc.get()._field_it=0LLU;
				_285621_scc.get()._field_cse=0LLU;
				_285621_scc.get()._field_owner=_285017_ins;
				_1a848272a_check_fn_ins_sc((*_self_)._field_s.ptr(), _285017_ins,_285621_scc);
			}
		}
		else {
			_case_begin_1aa9c0d32:;
			{
				_1a8482cbe_check_fn_ins((*_self_)._field_s, _285017_ins);
			}
		}
		_match_end_1aa9c0ccc:;
	};
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_285017_ins, 1))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396bda2_AnonFnExprModel>(_1b396bda2_AnonFnExprModel(_285017_ins,_1a84d655e_is_global(&(*_self_))))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
}



inline jule::Ptr<_1a84d3869_Data> _1a84ee16a_eval_binop(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_21110a944_BinopExpr> _287834_op) {
	_1a8501ca5_BinaryEval _287917_bs = static__1a850235a_new_plain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1a8512447_Prim> _288317_prim = _1a850eca2_prim(_self_.get()._field_prefix.ptr());;
		if (((_288317_prim == nullptr) || (!(_1a844b7c1_is_num(_1a85127aa_to_str(_288317_prim.ptr())))))) {
			jule::Ptr<_1a850cbe5_TypeKind> _288525_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288525_prefix;
			});;
			return _1a850743c_eval(&_287917_bs, _287834_op);
		};
	};
	return _1a850743c_eval(&_287917_bs, _287834_op);
}



inline jule::Ptr<_1a84d3869_Data> _1a84ee478_eval_expr_kind(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Any _289538_kind) {
	jule::Ptr<_1a84d3869_Data> _289617_d = nullptr;;
	{
		auto &_match_expr{ _289538_kind };
		
		if (_match_expr.type_is<jule::Ptr<_210e87caa_Expr>>()) {
			_case_begin_1aa9c8ea0:;
			{
				_289617_d=_1a84ee478_eval_expr_kind(_self_, jule::Any(_289538_kind.operator jule::Ptr<_210e87caa_Expr>().get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211109701_LitExpr>>()) {
			_case_begin_1aa9c9016:;
			{
				_289617_d=_1a84d8242_eval_lit(_self_.ptr(), _289538_kind.operator jule::Ptr<_211109701_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211109cb7_IdentExpr>>()) {
			_case_begin_1aa9c907c:;
			{
				_289617_d=_1a84dc81d_eval_ident(_self_.ptr(), _289538_kind.operator jule::Ptr<_211109cb7_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211109ea4_UnaryExpr>>()) {
			_case_begin_1aa9c9269:;
			{
				_289617_d=_1a84dcb2b_eval_unary(_self_, _289538_kind.operator jule::Ptr<_211109ea4_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110a191_VariadicExpr>>()) {
			_case_begin_1aa9c92d0:;
			{
				_289617_d=_1a84dce39_eval_variadic(_self_, _289538_kind.operator jule::Ptr<_21110a191_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2111098dd_UnsafeExpr>>()) {
			_case_begin_1aa9c9346:;
			{
				_289617_d=_1a84dd247_eval_unsafe(_self_, _289538_kind.operator jule::Ptr<_2111098dd_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110b5c1_SliceExpr>>()) {
			_case_begin_1aa9c93ac:;
			{
				_289617_d=_1a84ddc1a_eval_slice_expr(_self_, _289538_kind.operator jule::Ptr<_21110b5c1_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2111094c0_IndexingExpr>>()) {
			_case_begin_1aa9c9434:;
			{
				_289617_d=_1a84e13e3_eval_indexing(_self_, _289538_kind.operator jule::Ptr<_2111094c0_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110bc31_SlicingExpr>>()) {
			_case_begin_1aa9c94ab:;
			{
				_289617_d=_1a84e25ae_eval_slicing(_self_, _289538_kind.operator jule::Ptr<_21110bc31_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110a37d_CastExpr>>()) {
			_case_begin_1aa9c9533:;
			{
				_289617_d=_1a84e50ea_eval_cast(_self_, _289538_kind.operator jule::Ptr<_21110a37d_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110a56a_NsSelectionExpr>>()) {
			_case_begin_1aa9c95aa:;
			{
				_289617_d=_1a84e5408_eval_ns_selection(_self_.ptr(), _289538_kind.operator jule::Ptr<_21110a56a_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110b00a_StructLit>>()) {
			_case_begin_1aa9c9632:;
			{
				_289617_d=_1a84e5b9a_eval_struct_lit(_self_, _289538_kind.operator jule::Ptr<_21110b00a_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e7e620_TypeDecl>>()) {
			_case_begin_1aa9c96a9:;
			{
				_289617_d=_1a84e5ea8_eval_type(_self_.ptr(), _289538_kind.operator jule::Ptr<_210e7e620_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110ab31_FnCallExpr>>()) {
			_case_begin_1aa9c9731:;
			{
				_289617_d=_1a84e7828_eval_fn_call(_self_, _289538_kind.operator jule::Ptr<_21110ab31_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110a757_SubIdentExpr>>()) {
			_case_begin_1aa9c97a8:;
			{
				_289617_d=_1a84ed07b_eval_sub_ident(_self_, _289538_kind.operator jule::Ptr<_21110a757_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_211079ae4_TupleExpr>>()) {
			_case_begin_1aa9c9830:;
			{
				_289617_d=_1a84ed389_eval_tuple(_self_, _289538_kind.operator jule::Ptr<_211079ae4_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110b1e7_BraceLit>>()) {
			_case_begin_1aa9c98a7:;
			{
				_289617_d=_1a84eda4e_eval_brace_lit(_self_, _289538_kind.operator jule::Ptr<_21110b1e7_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110ce74_FnDecl>>()) {
			_case_begin_1aa9c992e:;
			{
				_289617_d=_1a84edd5c_eval_anon_fn(_self_.ptr(), _289538_kind.operator jule::Ptr<_21110ce74_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110a944_BinopExpr>>()) {
			_case_begin_1aa9c99a6:;
			{
				_289617_d=_1a84ee16a_eval_binop(_self_, _289538_kind.operator jule::Ptr<_21110a944_BinopExpr>());
			}
		}
		_match_end_1aa9c8e4a:;
	};
	return _289617_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84ee786_eval(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_210e87caa_Expr> _294228_expr) {
	jule::Ptr<_1a84d3869_Data> _294317_d = _1a84ee478_eval_expr_kind(_self_, jule::Any(_294228_expr.get()._field_kind));;
	if (((_294317_d == nullptr) || (_294317_d.get()._field_kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1a8510c2b_fnc(_294317_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9d597e:;
			{
				jule::Ptr<_1a5b33164_FnIns> _295021_f = _1a8510c2b_fnc(_294317_d.get()._field_kind.ptr());;
				if (_1a5b33de0_is_builtin(_295021_f.ptr())) {
					goto _match_end_1aa9d58a2;
				};
				if ((_295021_f.get()._field_generics.len() != _295021_f.get()._field_decl.get()._field_generics.len())) {
					_1a846e65c_push_err(_self_.get()._field_s.ptr(), _294228_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (_1a5b3067d_is_method(_295021_f.get()._field_decl.ptr())) {
					_1a846e65c_push_err(_self_.get()._field_s.ptr(), _294228_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1aa9d58a2:;
	};
	return _294317_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a84eea94_eval_expr(jule::Ptr<_1a84d53d7_Eval> _self_, jule::Ptr<_210e87caa_Expr> _296833_expr) {
	jule::Ptr<_1a84d3869_Data> _296917_d = _1a84ee786_eval(_self_, _296833_expr);;
	{
		
		if ((_296917_d == nullptr)) {
			_case_begin_1aa9d980c:;
			{
				return nullptr;
			}
		}
		else if (_296917_d.get()._field_decl) {
			_case_begin_1aa9d9873:;
			{
				_1a84d58b0_push_err(_self_.ptr(), _296833_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1aa9d9246:;
			{
				return _296917_d;
			}
		}
		_match_end_1aa9d91e1:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a84d53d7_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a8500017_UnaryEval static__1a85004bd_new(jule::Ptr<_1a84d53d7_Eval> _298923_e) {
	return _1a8500017_UnaryEval(_298923_e,jule::Ptr<_1a84d3869_Data>(),jule::Ptr<_211109ea4_UnaryExpr>());
}



inline void _1a8500699_minus(_1a8500017_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1aa9db2e2:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a850eca2_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9db732:;
			{
				if ((!(_1a844b7c1_is_num(_1a850d09c_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a8510e90_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9db798:;
			{
				if ((_1a8510e90_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aa9dae6d:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa9dada2:;
	};
	if (_1a84d422c_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a83ac7cb_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa9de933:;
				{
					_1a83ab8da_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(_1a83aa433_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1a83abd2a_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa9de999:;
				{
					_1a83aade5_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1a83a9982_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1a83ac08e_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa9dea10:;
				{
					_1a83aade5_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1a83aa697_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1aa9de69c:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1b3969784_UnaryExprModel>(_1b3969784_UnaryExprModel(jule::new_ptr<_1a84d3869_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a8500875_plus(_1a8500017_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1aa9e431c:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a850eca2_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9e475c:;
			{
				if ((!(_1a844b7c1_is_num(_1a850d09c_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a8510e90_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9e47c3:;
			{
				if ((_1a8510e90_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aa9e3e98:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa9e3dcc:;
	};
	if (_1a84d422c_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a83ac7cb_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa9e78c5:;
				{
					_1a83ab8da_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(_1a83aa433_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1a83abd2a_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa9e793b:;
				{
					_1a83aade5_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1a83a9982_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1a83ac08e_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aa9e79a2:;
				{
					_1a83aade5_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1a83aa697_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1aa9e763e:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1b3969784_UnaryExprModel>(_1b3969784_UnaryExprModel(jule::new_ptr<_1a84d3869_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a8500a51_caret(_1a8500017_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1aa9ec49b:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a850eca2_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9ec8db:;
			{
				if ((!(_1a844b23d_is_int(_1a850d09c_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a8510e90_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aa9ec952:;
			{
				if ((_1a8510e90_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aa9ec127:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa9ec05b:;
	};
	if (_1a84d422c_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a83abd2a_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aaa00a21:;
				{
					_1a83aade5_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(_1a83a9982_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1a83ac08e_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aaa00a98:;
				{
					_1a83ab16a_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(_1a83a9be6_read_u64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1aaa007bd:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1b3969784_UnaryExprModel>(_1b3969784_UnaryExprModel(jule::new_ptr<_1a84d3869_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a8500c2c_excl(_1a8500017_UnaryEval* _self_) {
	jule::Ptr<_1a8512447_Prim> _310813_t = _1a850eca2_prim((*_self_)._field_d.get()._field_kind.ptr());;
	if (((_310813_t == nullptr) || (!(_1a8515192_is_bool(_310813_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1a84d422c_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a83ac303_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1aaa05b7a:;
				{
					_1a83ab3e0_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1a83a9e5a_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1aaa05a7b:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1b3969784_UnaryExprModel>(_1b3969784_UnaryExprModel(jule::new_ptr<_1a84d3869_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a8500e08_star(_1a8500017_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1b3969784_UnaryExprModel>(_1b3969784_UnaryExprModel(jule::new_ptr<_1a84d3869_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
	{
		
		if ((_1a851027a_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa08e69:;
			{
				if ((!(_1a84d62ea_is_unsafe((*_self_)._field_e.ptr())))) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a8518eba_Ptr> _314021_t = _1a851027a_ptr((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1a851998d_is_unsafe(_314021_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_kind=_314021_t.get()._field_elem;
			}
		}
		else if ((_1a8510016_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa093a9:;
			{
				(*_self_)._field_d.get()._field_kind=_1a8510016_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1aaa08ae5:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aaa07eac:;
	};
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1a85010d4_amper(_1a8500017_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1b396a037_StructLitExprModel>>()) {
			_case_begin_1aaa0ddb4:;
			{
				jule::Ptr<_1b396a037_StructLitExprModel> _316021_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1b396a037_StructLitExprModel>();;
				_1a85081c9_make_struct_lit_alloc((*_self_)._field_d,_316021_lit);
			}
		}
		else {
			_case_begin_1aaa0d59a:;
			{
				{
					
					if (_1a8519ce0_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1aaa0e17d:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a8518eba_Ptr>(_1a8518eba_Ptr((*_self_)._field_d.get()._field_kind)), 11)));
							(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1b3969784_UnaryExprModel>(_1b3969784_UnaryExprModel(jule::new_ptr<_1a84d3869_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
						}
					}
					else {
						_case_begin_1aaa0da40:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1aaa0d9a7:;
				};
			}
		}
		_match_end_1aaa0d4e0:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	};
}



inline void _1a85012b0_type_decl(_1a8500017_UnaryEval* _self_) {
	_1a851c2dc_TypeChecker _318417_tc = _1a851c2dc_TypeChecker((*_self_)._field_e.get()._field_s,(*_self_)._field_e.get()._field_lookup,jule::Ptr<_1a851b660_Referencer>(),(*_self_)._field_u.get()._field_op,jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a850bead_TypeAlias>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool());;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aaa14a57:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a8521863_build_ptr_from_type(&_318417_tc, (*_self_)._field_d.get()._field_kind), 11)));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1aaa14abd:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a8521247_build_sptr_from_type(&_318417_tc, (*_self_)._field_d.get()._field_kind), 6)));
			}
		}
		else {
			_case_begin_1aaa124a0:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aaa1325e:;
	};
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1a850148b_eval_data(_1a8500017_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1aaa180cc:;
			{
				jule::Ptr<_1a850cbe5_TypeKind> _320621_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1a84ee478_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
				(*_self_)._field_e.get()._field_prefix=_320621_prefix;
			}
		}
		else {
			_case_begin_1aaa175d7:;
			{
				(*_self_)._field_d=_1a84ee478_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
			}
		}
		_match_end_1aaa179a0:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a8501766_eval(_1a8500017_UnaryEval* _self_, jule::Ptr<_211109ea4_UnaryExpr> _321527_u) {
	(*_self_)._field_u=_321527_u;
	_1a850148b_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_decl) {
		_1a85012b0_type_decl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1a850cbe5_TypeKind> _322613_kind = (*_self_)._field_d.get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1aaa1bdb1:;
			{
				_1a8500699_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1aaa1c048:;
			{
				_1a8500875_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1aaa1b9c6:;
			{
				_1a8500a51_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1aaa1ba3c:;
			{
				_1a8500c2c_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aaa1baa3:;
			{
				_1a8500e08_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1aaa1c1be:;
			{
				_1a85010d4_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1aaa1ace4:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1aaa1b971:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1aaa188a2:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str(_322613_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1a84d422c_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1aaa1dc09:;
			{
				(*_self_)._field_d.get()._field_model=jule::Any((*_self_)._field_d.get()._field_constant);
			}
		}
		_match_end_1aaa1dba4:;
	};
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8500017_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1a8501ca5_BinaryEval static__1a850235a_new_plain(jule::Ptr<_1a84d53d7_Eval> _326429_e) {
	return _1a8501ca5_BinaryEval(_326429_e,jule::Ptr<_1a84d3869_Data>(),jule::Ptr<_1a84d3869_Data>(),jule::Ptr<_2110e7238_Token>());
}



inline _1a8501ca5_BinaryEval static__1a850269b_new(jule::Ptr<_1a84d53d7_Eval> _327023_e, jule::Ptr<_2110e7238_Token> _327037_op) {
	return _1a8501ca5_BinaryEval(_327023_e,jule::Ptr<_1a84d3869_Data>(),jule::Ptr<_1a84d3869_Data>(),_327037_op);
}



inline jule::Bool _1a8502954_check_type_compatibility(_1a8501ca5_BinaryEval* _self_) {
	return _1a8474d5a_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1a8502c1d_check_struct_common_operator_compatibility(_1a8501ca5_BinaryEval* _self_) {
	jule::Ptr<_1a5b33164_FnIns> _328417_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1aaa24506:;
			{
				_328417_overload=_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1aaa2556d:;
			{
				_328417_overload=_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1aaa255d4:;
			{
				_328417_overload=_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1aaa2564a:;
			{
				_328417_overload=_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1aaa2425e:;
			{
				_328417_overload=_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aaa242c5:;
			{
				_328417_overload=_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1aaa2433b:;
			{
				_328417_overload=_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1aaa243a2:;
			{
				_328417_overload=_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1aaa25848:;
			{
				_328417_overload=_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1aaa258ae:;
			{
				_328417_overload=_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1aaa23c64:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1aaa241b5:;
	};
	if ((_328417_overload == nullptr)) {
		_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1a5b322c8_ParamIns> _331617_p = _328417_overload.get()._field_params[1LL];;
	return _1a84748b5_check_assign_type((*_self_)._field_e.get()._field_s, _331617_p.get()._field_decl.get()._field_reference,_331617_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1a84d3869_Data> _1a8502e82_eval_nil(_1a8501ca5_BinaryEval* _self_) {
	if ((!(_1a850e301_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any(_1a850d09c_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aaa3029d:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else {
			_case_begin_1aaa2db09:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1aaa2ee5c:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a85031e6_eval_enum(_1a8501ca5_BinaryEval* _self_) {
	jule::Ptr<_1a83065e3_Enum> _334117_enm = _1a85104de_enm((*_self_)._field_l.get()._field_kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aaa31e1a:;
			{
				jule::Ptr<_1a850cbe5_TypeKind> _334521_rkind = (*_self_)._field_r.get()._field_kind;;
				if ((_1a85104de_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_334521_rkind=_1a85104de_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				};
				if ((!(_1a8474d5a_check_type_compatibility((*_self_)._field_e.get()._field_s, _334117_enm.get()._field_kind.get()._field_kind,_334521_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		_match_end_1aaa32624:;
	};
	if (((_1a85104de_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_334117_enm != _1a85104de_enm((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_334117_enm.get()._field_ident),jule::Any(_1a850d09c_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1aaa38042:;
			{
				if ((!(_1a844b7c1_is_num(_1a850d09c_to_str(_334117_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_334117_enm.get()._field_ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1aaa380a8:;
			{
				if (((_1a850eca2_prim(_334117_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1a844b23d_is_int(_1a85127aa_to_str(_1a850eca2_prim(_334117_enm.get()._field_kind.get()._field_kind.ptr()).ptr())))))) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_334117_enm.get()._field_ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1aaa3635e:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_334117_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1aaa36c99:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a850345a_eval_sptr(_1a8501ca5_BinaryEval* _self_) {
	if ((!(_1a8502954_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aaa3d1e0:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else {
			_case_begin_1aaa3c81b:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aaa3c7b6:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a85036be_eval_ptr(_1a8501ca5_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1aaa41765:;
			{
				if ((!(_1a8502954_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1aaa417cb:;
			{
				if ((_1a851027a_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1a851998d_is_unsafe(_1a851027a_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				};
				if ((!(_1a8509241_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1aaa3e730:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aaa401ae:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a8503933_eval_arr(_1a8501ca5_BinaryEval* _self_) {
	if ((!(_1a8502954_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aaa475c3:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else {
			_case_begin_1aaa46d20:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aaa46cba:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a8503b97_eval_slc(_1a8501ca5_BinaryEval* _self_) {
	if ((!(_1a8502954_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aaa49e55:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else {
			_case_begin_1aaa49718:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aaa496b3:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a8503e0b_eval_fn(_1a8501ca5_BinaryEval* _self_) {
	if ((!(_1a8502954_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aaa4c7d7:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else {
			_case_begin_1aaa4c09a:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aaa4c045:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a8504170_eval_struct(_1a8501ca5_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1aaa4e90a:;
			{
				if ((_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1aaa4e971:;
			{
				if ((_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1aaa4e9d7:;
			{
				if ((_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1aaa4ea4d:;
			{
				if ((_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aaa4eab4:;
			{
				if ((!(_1a8502954_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		_match_end_1aaa4e81c:;
	};
	if ((!(_1a8502c1d_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1a84d3869_Data> _1a85043d4_eval_trait(_1a8501ca5_BinaryEval* _self_) {
	if ((!(_1a8502954_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aaa5a273:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else {
			_case_begin_1aaa59c23:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aaa598d2:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a8504648_eval_any(_1a8501ca5_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1aaa5c671:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else {
			_case_begin_1aaa5b829:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1aaa5c2a8:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a85048ac_eval_bool(_1a8501ca5_BinaryEval* _self_) {
	if ((!(_1a8502954_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1aaa5ec5b:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1aaa5e51e:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a850d09c_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1aaa5e4b9:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a8504b21_eval_str(_1a8501ca5_BinaryEval* _self_) {
	jule::Str _361417_rk = _1a850d09c_to_str((*_self_)._field_r.get()._field_kind.ptr());;
	if ((_361417_rk != jule::Str("str", 3))) {
		_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_361417_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1aaa6427c:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1aaa6418e:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		else {
			_case_begin_1aaa621c0:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1aaa620e3:;
	};
}



inline void _1a8504cec_set_type_to_greater(_1a8501ca5_BinaryEval* _self_) {
	if (_1a84d422c_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1a84d422c_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1a84d422c_is_const((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1a8449a88_is_greater(_1a850eca2_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1a850eca2_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	};
}



inline void _1a850503e_check_mod_data(_1a8501ca5_BinaryEval* _self_, jule::Ptr<_1a84d3869_Data>& _365738_d) {
	if ((!(_1a84d422c_is_const(_365738_d.ptr())))) {
		if (((_1a850eca2_prim(_365738_d.get()._field_kind.ptr()) == nullptr) || (!(_1a844b23d_is_int(_1a850eca2_prim(_365738_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a84b98b6_sig_assignable(jule::Str("i64", 3),_365738_d)) {
			_case_begin_1aaa6aa14:;
			{
				_1a83aade5_set_i64(_365738_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a83aa697_as_i64(_365738_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a84b99e8_unsig_assignable(jule::Str("u64", 3),_365738_d)) {
			_case_begin_1aaa6aa7a:;
			{
				_1a83ab16a_set_u64(_365738_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a83aa90b_as_u64(_365738_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1aaa6a99d:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aaa690d9:;
	};
}



inline void _1a850521a_mod(_1a8501ca5_BinaryEval* _self_) {
	_1a850503e_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1a850503e_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1a8505616_numbers_are_compatibile(_1a8501ca5_BinaryEval* _self_, jule::Str& _367939_lk, jule::Str& _367949_rk) {
	if ((!(_1a844b7c1_is_num(_367949_rk)))) {
		return false;
	};
	if (_1a84d422c_is_const((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_367939_lk == jule::Str("f32", 3))) {
		if (_1a84d422c_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_367949_rk == jule::Str("f32", 3));
	};
	if ((_367939_lk == jule::Str("f64", 3))) {
		if (_1a84d422c_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_367949_rk == jule::Str("f64", 3));
	};
	if (_1a84d422c_is_const((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_367939_lk == _367949_rk);
}



inline jule::Ptr<_1a84d3869_Data> _1a8505869_eval_float(_1a8501ca5_BinaryEval* _self_) {
	jule::Str _370913_lk = _1a850eca2_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _371013_rk = _1a850eca2_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	if ((!(_1a8505616_numbers_are_compatibile(&(*_self_), _370913_lk,_371013_rk)))) {
		_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_370913_lk),jule::Any(_371013_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1aaa73137:;
			{
				if (((!(_1a84d422c_is_const((*_self_)._field_l.ptr()))) || (!(_1a84b9b2a_int_assignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_370913_lk),jule::Any(_371013_rk)}));
					return nullptr;
				};
				if (((!(_1a84d422c_is_const((*_self_)._field_r.ptr()))) || (!(_1a84b9b2a_int_assignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_370913_lk),jule::Any(_371013_rk)}));
					return nullptr;
				};
				_1a83aade5_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1a83aa697_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1a83ab16a_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1a83aa90b_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1a8508b03_is_ok_for_shifting((*_self_)._field_r)))) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1aaa743e1:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1aaa744ac:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		_match_end_1aaa78a88:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1aaa7b904:;
			{
				_1a8504cec_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1aaa7b816:;
			{
				if ((!(_1a844b23d_is_int(_371013_rk)))) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_370913_lk),jule::Any(_371013_rk)}));
					return nullptr;
				};
				_1a850521a_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1aaa79a45:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aaa7a161:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a8505acd_eval_int(_1a8501ca5_BinaryEval* _self_) {
	jule::Str _377313_lk = _1a850eca2_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _377413_rk = _1a850eca2_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1aaa7e550:;
			{
				if (((!(_1a844b23d_is_int(_377313_lk))) || (!(_1a844b23d_is_int(_377413_rk))))) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_377313_lk),jule::Any(_377413_rk)}));
					return nullptr;
				};
				if ((!(_1a8508b03_is_ok_for_shifting((*_self_)._field_r)))) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1aaa7ed25:;
	};
	if ((!(_1a8505616_numbers_are_compatibile(&(*_self_), _377313_lk,_377413_rk)))) {
		_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_377313_lk),jule::Any(_377413_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1aaa8360e:;
			{
				return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("bool", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
			}
		}
		_match_end_1aaa83598:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1aaa85842:;
			{
				_1a8504cec_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1aaa85754:;
			{
				_1a850521a_mod(&(*_self_));
				_1a8504cec_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1aaa83730:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1aaa840b0:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a8505d42_eval_prim(_1a8501ca5_BinaryEval* _self_) {
	jule::Ptr<_1a8512447_Prim> _383213_prim = _1a850eca2_prim((*_self_)._field_l.get()._field_kind.ptr());;
	{
		
		if (_1a8515192_is_bool(_383213_prim.ptr())) {
			_case_begin_1aaa87b96:;
			{
				return _1a85048ac_eval_bool(&(*_self_));
			}
		}
		else if (_1a8515406_is_str(_383213_prim.ptr())) {
			_case_begin_1aaa87c1d:;
			{
				return _1a8504b21_eval_str(&(*_self_));
			}
		}
		_match_end_1aaa87aca:;
	};
	if ((_1a850eca2_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a85127aa_to_str(_383213_prim.ptr())),jule::Any(_1a850d09c_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1a844b529_is_float(_383213_prim.get()._field_kind)) {
			_case_begin_1aaa8a7d1:;
			{
				return _1a8505869_eval_float(&(*_self_));
			}
		}
		else if (_1a844b23d_is_int(_383213_prim.get()._field_kind)) {
			_case_begin_1aaa8a88b:;
			{
				return _1a8505acd_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1aaa883a0:;
			{
				return nullptr;
			}
		}
		_match_end_1aaa8834a:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a85060a6_eval_op(_1a8501ca5_BinaryEval* _self_) {
	{
		
		if (_1a850dd28_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1aaa8c21c:;
			{
				_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1a850eca2_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1a851566a_is_any(_1a850eca2_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1aaa8c30a:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1aaa8c371;
			}
		}
		else if (((_1a850eca2_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1a851566a_is_any(_1a850eca2_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1aaa8c371:;
			{
				return _1a8504648_eval_any(&(*_self_));
			}
		}
		else if (_1a850dab4_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1aaa8bb9a:;
			{
				return _1a8502e82_eval_nil(&(*_self_));
			}
		}
		else if ((_1a85104de_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8bc11:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1aaa8bc77;
			}
		}
		else if ((_1a85104de_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8bc77:;
			{
				return _1a85031e6_eval_enum(&(*_self_));
			}
		}
		else if ((_1a8510016_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8bcdd:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1aaa8c409;
			}
		}
		else if ((_1a8510016_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8c409:;
			{
				return _1a850345a_eval_sptr(&(*_self_));
			}
		}
		else if ((_1a851027a_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8c470:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1aaa8c4d6;
			}
		}
		else if ((_1a851027a_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8c4d6:;
			{
				return _1a85036be_eval_ptr(&(*_self_));
			}
		}
		else if ((_1a8510753_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8c54c:;
			{
				return _1a8503933_eval_arr(&(*_self_));
			}
		}
		else if ((_1a85109b7_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8c5b3:;
			{
				return _1a8503b97_eval_slc(&(*_self_));
			}
		}
		else if ((_1a8510c2b_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8c63a:;
			{
				return _1a8503e0b_eval_fn(&(*_self_));
			}
		}
		else if ((_1a8511204_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8c6b2:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1aaa8c739;
			}
		}
		else if ((_1a8511204_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8c739:;
			{
				return _1a85043d4_eval_trait(&(*_self_));
			}
		}
		else if ((_1a8510e90_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8c7b1:;
			{
				return _1a8504170_eval_struct(&(*_self_));
			}
		}
		else if ((_1a850eca2_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aaa8c838:;
			{
				return _1a8505d42_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1aaa8bb34:;
			{
				return nullptr;
			}
		}
		_match_end_1aaa8ba68:;
	};
}



inline void _1a850632b_eval_const(_1a8501ca5_BinaryEval* _self_, jule::Ptr<_1a84d3869_Data>& _390234_d) {
	{
		
		if ((_390234_d == nullptr)) {
			_case_begin_1aaa9b160:;
			{
				return;;
			}
		}
		else if ((!(_1a84d422c_is_const((*_self_)._field_l.ptr()))) || (!(_1a84d422c_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1aaa9b1d7:;
			{
				_390234_d.get()._field_constant=nullptr;
				return;;
			}
		}
		_match_end_1aaa9b050:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1aaa9c183:;
			{
				_390234_d.get()._field_constant=static__1a83a8b6d_new_bool(((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1aaa9c24e:;
			{
				_390234_d.get()._field_constant=static__1a83a8b6d_new_bool(((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1aaa9c749:;
			{
				_390234_d.get()._field_constant=static__1a83a8b6d_new_bool(_1a83ad469_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1aaa9c7b0:;
			{
				_390234_d.get()._field_constant=static__1a83a8b6d_new_bool(_1a83ad15b_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1aaa9c826:;
			{
				_390234_d.get()._field_constant=static__1a83a8b6d_new_bool(((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1aaa9c88c:;
			{
				_390234_d.get()._field_constant=static__1a83a8b6d_new_bool(((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1aaa9c914:;
			{
				_390234_d.get()._field_constant=static__1a83a8b6d_new_bool(((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1aaa9c98b:;
			{
				_390234_d.get()._field_constant=static__1a83a8b6d_new_bool(((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1aaa9ca13:;
			{
				_1a83ae7bc_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1aaa9ca8a:;
			{
				_1a83aeaca_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aaa9cb12:;
			{
				_1a83aedd8_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1aaa9cb89:;
			{
				jule::Bool _393917_ok = _1a83b01e6_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_393917_ok)) && (_1a83aab70_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1a8512447_Prim> _394421_prim = _1a850eca2_prim(_390234_d.get()._field_kind.ptr());;
				{
					
					if (_1a844abaa_is_sig_int(_394421_prim.get()._field_kind)) {
						_case_begin_1aaaa9d94:;
						{
							_1a83aade5_set_i64(_390234_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a83aa697_as_i64(_390234_d.get()._field_constant.ptr())));
						}
					}
					else if (_1a844ae96_is_unsig_int(_394421_prim.get()._field_kind)) {
						_case_begin_1aaaa9e1b:;
						{
							_1a83ab16a_set_u64(_390234_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a83aa90b_as_u64(_390234_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1aaaa9cc8:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1aaa9cc11:;
			{
				jule::Bool _395217_ok = _1a83b0504_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_395217_ok)) && (_1a83aab70_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1aaa9cc88:;
			{
				_1a83b0b20_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1aaa9cd10:;
			{
				_1a83b0812_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1aaa9cd87:;
			{
				_1a83b0e2d_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1aaa9ce0e:;
			{
				_1a83b123b_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1aaa9ce86:;
			{
				_1a83b1549_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_390234_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1aaa9bec9:;
	};
	_1a850a044_apply_cast_model_by_enum(_390234_d,_1a85104de_enm(_390234_d.get()._field_kind.ptr()));
	jule::Ptr<_1a8512447_Prim> _397617_prim = _1a850eca2_prim(_390234_d.get()._field_kind.ptr());;
	if (((_397617_prim == nullptr) || (!(_1a844b7c1_is_num(_1a85127aa_to_str(_397617_prim.ptr())))))) {
		_390234_d.get()._field_model=jule::Any(_390234_d.get()._field_constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant))) {
			_390234_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_397617_prim=_1a850eca2_prim(_390234_d.get()._field_kind.ptr());
		};
	};
	_1a8507dcc_fit_bitsize(_390234_d);
	_1a850a2db_cast_const_by_type(_397617_prim.get()._field_kind,_390234_d);
}



inline void _1a85065a1_check_data(_1a8501ca5_BinaryEval* _self_, jule::Ptr<_1a84d3869_Data>& _399234_d) {
	jule::Ptr<_1a5b33164_FnIns> _399313_f = _1a8510c2b_fnc(_399234_d.get()._field_kind.ptr());;
	if ((((_399313_f != nullptr) && (_399313_f.get()._field_decl != nullptr)) && _1a5b3067d_is_method(_399313_f.get()._field_decl.ptr()))) {
		_1a84d58b0_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1a850677c_check_datas(_1a8501ca5_BinaryEval* _self_) {
	_1a85065a1_check_data(&(*_self_), (*_self_)._field_l);
	_1a85065a1_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1a8506a02_set_model(_1a8501ca5_BinaryEval* _self_, jule::Ptr<_1a84d3869_Data>& _400433_d) {
	if (_1a84d422c_is_const(_400433_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant))) {
			return;;
		};
	};
	jule::Ptr<_1a84d3869_Data> _401218_l = (*_self_)._field_l;;
	jule::Ptr<_1a84d3869_Data> _401225_r = (*_self_)._field_r;;
	std::tie(_401218_l,_401225_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1a84d453a_good_operand(_401218_l.ptr(), _401225_r)))) {
		std::tie(_401218_l,_401225_r) = std::make_tuple(_401225_r,_401218_l);
	};
	_400433_d.get()._field_model=jule::Any(jule::new_ptr<_1b39693cc_BinopExprModel>(_1b39693cc_BinopExprModel(jule::new_ptr<_1b3968e15_OperandExprModel>(_1b3968e15_OperandExprModel(_401218_l.get()._field_kind,jule::Any(_401218_l.get()._field_model))),jule::new_ptr<_1b3968e15_OperandExprModel>(_1b3968e15_OperandExprModel(_401225_r.get()._field_kind,jule::Any(_401225_r.get()._field_model))),(*_self_)._field_op)));
}



inline void _1a8506c77_post_eval(_1a8501ca5_BinaryEval* _self_, jule::Ptr<_1a84d3869_Data>& _403033_d) {
	_403033_d.get()._field_lvalue=false;
	_1a8506a02_set_model(&(*_self_), _403033_d);
}



inline jule::Ptr<_1a84d3869_Data> _1a850712e_solve_explicit(_1a8501ca5_BinaryEval* _self_, jule::Ptr<_1a84d3869_Data>& _403538_l, jule::Ptr<_1a84d3869_Data>& _403553_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403538_l,_403553_r);
	_1a850677c_check_datas(&(*_self_));
	jule::Ptr<_1a84d3869_Data> _404017_d = _1a85060a6_eval_op(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_403538_l,_403553_r);
	_1a850632b_eval_const(&(*_self_), _404017_d);
	if ((_404017_d != nullptr)) {
		_404017_d.get()._field_mutable=true;
		_1a8506c77_post_eval(&(*_self_), _404017_d);
	};
	return _404017_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a850743c_eval(_1a8501ca5_BinaryEval* _self_, jule::Ptr<_21110a944_BinopExpr>& _405528_op) {
	if ((_405528_op.get()._field_op.get()._field_kind == jule::Str("=", 1))) {
		_1a84d58b0_push_err((*_self_)._field_e.ptr(), _405528_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1a84d5bce_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a84d3869_Data> _406217_l = _1a84ee478_eval_expr_kind((*_self_)._field_e, jule::Any(_405528_op.get()._field_left));;
	if (((_406217_l == nullptr) || (_406217_l.get()._field_kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1a850cbe5_TypeKind> _406717_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_406217_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_406717_prefix;
	});;
	jule::Ptr<_1a84d3869_Data> _407017_r = _1a84ee478_eval_expr_kind((*_self_)._field_e, jule::Any(_405528_op.get()._field_right));;
	if (((_407017_r == nullptr) || (_407017_r.get()._field_kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_405528_op.get()._field_op;
	jule::Ptr<_1a84d3869_Data> _407717_d = _1a850712e_solve_explicit(&(*_self_), _406217_l,_407017_r);;
	if ((((_407717_d != nullptr) && _406217_l.get()._field_is_rune) && _407017_r.get()._field_is_rune)) {
		_407717_d.get()._field_is_rune=true;
	};
	return _407717_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8501ca5_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a850bead_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a850d09c_to_str(_1a850cbe5_TypeKind* _self_) {
	if (_1a850dab4_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _7717_kind = jule::Str();;
	if ((*_self_)._field_variadic) {
		_7717_kind+=jule::Str("...", 3);
	};
	if (_1a850d850_cpp_linked(&(*_self_))) {
		_7717_kind+=jule::Str("cpp.", 4);
		_7717_kind+=(*_self_)._field_cpp_ident;
	} else {
		_7717_kind+=_1a850c7b6_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1a850c365_to_str((*_self_)._field_kind);
	};
	return _7717_kind;
}



inline jule::Bool _1a850d3aa_equals(jule::Ptr<_1a850cbe5_TypeKind> _self_, jule::Ptr<_1a850cbe5_TypeKind> _9326_other) {
	if (_1a850dab4_is_nil(_self_.ptr())) {
		return _1a850dab4_is_nil(_9326_other.ptr());
	};
	if (_1a850d850_cpp_linked(_self_.ptr())) {
		return (_1a850d850_cpp_linked(_9326_other.ptr()) && (_self_.get()._field_cpp_ident == _9326_other.get()._field_cpp_ident));
	};
	return _1a850c7b6_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1a850c673_equals(_self_.get()._field_kind, _9326_other);
}



inline jule::Bool _1a850d850_cpp_linked(_1a850cbe5_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1a850dab4_is_nil(_1a850cbe5_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1a850dd28_void(_1a850cbe5_TypeKind* _self_) {
	jule::Ptr<_1a8512447_Prim> _11613_prim = _1a850eca2_prim(&(*_self_));;
	return ((_11613_prim != nullptr) && (_11613_prim.get()._field_kind == jule::Str("void", 4)));
}



inline jule::Bool _1a850e08c_mutable(_1a850cbe5_TypeKind* _self_) {
	{
		_1a850cbe5_TypeKind* _12321__self = (&((*_self_)));;
		if ((_1a8510e90_strct(_12321__self) != nullptr)) {
			return _1a8510e90_strct(_12321__self).get()._field_mutable;
		};
		if ((_1a8511204_trt(_12321__self) != nullptr)) {
			return _1a8511204_trt(_12321__self).get()._field_mutable;
		};
		if ((_1a850eca2_prim(_12321__self) != nullptr)) {
			jule::Ptr<_1a8512447_Prim> _13221_p = _1a850eca2_prim(_12321__self);;
			return _1a851566a_is_any(_13221_p.ptr());
		};
		if ((_1a8510753_arr(_12321__self) != nullptr)) {
			return _1a850e08c_mutable(_1a8510753_arr(_12321__self).get()._field_elem.ptr());
		};
		return (((_1a85109b7_slc(_12321__self) != nullptr) || (_1a851027a_ptr(_12321__self) != nullptr)) || (_1a8510016_sptr(_12321__self) != nullptr));
	};
}



inline jule::Bool _1a850e301_nil_compatible(_1a850cbe5_TypeKind* _self_) {
	{
		_1a850cbe5_TypeKind* _14721__self = (&((*_self_)));;
		jule::Ptr<_1a8512447_Prim> _14917_prim = _1a850eca2_prim(_14721__self);;
		if (((_14917_prim != nullptr) && _1a851566a_is_any(_14917_prim.ptr()))) {
			return true;
		};
		return ((((((_1a850dab4_is_nil(_14721__self) || (_1a8510c2b_fnc(_14721__self) != nullptr)) || (_1a8510016_sptr(_14721__self) != nullptr)) || (_1a851027a_ptr(_14721__self) != nullptr)) || (_1a8511204_trt(_14721__self) != nullptr)) || (_1a85109b7_slc(_14721__self) != nullptr)) || (_1a8511468_map(_14721__self) != nullptr));
	};
}



inline jule::Bool _1a850e565_performs_rc(_1a850cbe5_TypeKind* _self_) {
	{
		_1a850cbe5_TypeKind* _16721__self = (&((*_self_)));;
		return (((_1a8510016_sptr(_16721__self) != nullptr) || (_1a85109b7_slc(_16721__self) != nullptr)) || (_1a8511204_trt(_16721__self) != nullptr));
	};
}



inline jule::Bool _1a850e7c9_supports_cloning(_1a850cbe5_TypeKind* _self_) {
	{
		_1a850cbe5_TypeKind* _17521__self = (&((*_self_)));;
		{
			
			if ((_1a850eca2_prim(_17521__self) != nullptr)) {
				_case_begin_1aaadbac9:;
				{
					return (!(_1a851566a_is_any(_1a850eca2_prim(_17521__self).ptr())));
				}
			}
			else if ((_1a85104de_enm(_17521__self) != nullptr)) {
				_case_begin_1aaadbb40:;
				{
					return true;
				}
			}
			else if ((_1a8510c2b_fnc(_17521__self) != nullptr)) {
				_case_begin_1aaadbba6:;
				{
					return true;
				}
			}
			else if ((_1a851027a_ptr(_17521__self) != nullptr)) {
				_case_begin_1aaadbc1c:;
				{
					return true;
				}
			}
			else if ((_1a85109b7_slc(_17521__self) != nullptr)) {
				_case_begin_1aaadbec5:;
				{
					return _1a850e7c9_supports_cloning(_1a85109b7_slc(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a8511468_map(_17521__self) != nullptr)) {
				_case_begin_1aaadc03b:;
				{
					jule::Ptr<_1a8517969_Map> _18821_m = _1a8511468_map(_17521__self);;
					return (_1a850e7c9_supports_cloning(_18821_m.get()._field_key.ptr()) && _1a850e7c9_supports_cloning(_18821_m.get()._field_val.ptr()));
				}
			}
			else if ((_1a8510753_arr(_17521__self) != nullptr)) {
				_case_begin_1aaadc0a2:;
				{
					return _1a850e7c9_supports_cloning(_1a8510753_arr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a8510016_sptr(_17521__self) != nullptr)) {
				_case_begin_1aaadc118:;
				{
					return _1a850e7c9_supports_cloning(_1a8510016_sptr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a8510e90_strct(_17521__self) != nullptr)) {
				_case_begin_1aaadc190:;
				{
					jule::Ptr<_1b39672a9_StructIns> _19525_s = _1a8510e90_strct(_17521__self);;
					return (((_19525_s.get()._field_decl != nullptr) && (!(_19525_s.get()._field_decl.get()._field_cpp_linked))) && _1b3965e56_is_derives(_19525_s.get()._field_decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1aaadba63:;
				{
					return false;
				}
			}
			_match_end_1aaadb9db:;
		};
	};
}



inline jule::Bool _1a850ea3d_variadicable(_1a850cbe5_TypeKind* _self_) {
	{
		_1a850cbe5_TypeKind* _20821__self = (&((*_self_)));;
		return (_1a85109b7_slc(_20821__self) != nullptr);
	};
}



inline jule::Ptr<_1a8512447_Prim> _1a850eca2_prim(_1a850cbe5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a8512447_Prim>>()) {
			_case_begin_1aaae3d45:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a8512447_Prim>();
			}
		}
		else {
			_case_begin_1aaad9ae9:;
			{
				return nullptr;
			}
		}
		_match_end_1aaad9a94:;
	};
}



inline jule::Ptr<_1a8515956_Sptr> _1a8510016_sptr(_1a850cbe5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a8515956_Sptr>>()) {
			_case_begin_1aaae4a05:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a8515956_Sptr>();
			}
		}
		else {
			_case_begin_1aaad9b60:;
			{
				return nullptr;
			}
		}
		_match_end_1aaae4b8c:;
	};
}



inline jule::Ptr<_1a8518eba_Ptr> _1a851027a_ptr(_1a850cbe5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a8518eba_Ptr>>()) {
			_case_begin_1aaae56c6:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a8518eba_Ptr>();
			}
		}
		else {
			_case_begin_1aaae51ed:;
			{
				return nullptr;
			}
		}
		_match_end_1aaae58d5:;
	};
}



inline jule::Ptr<_1a83065e3_Enum> _1a85104de_enm(_1a850cbe5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a83065e3_Enum>>()) {
			_case_begin_1aaae6485:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a83065e3_Enum>();
			}
		}
		else {
			_case_begin_1aaae5e57:;
			{
				return nullptr;
			}
		}
		_match_end_1aaae65d9:;
	};
}



inline jule::Ptr<_1a851855d_Arr> _1a8510753_arr(_1a850cbe5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a851855d_Arr>>()) {
			_case_begin_1aaae709b:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a851855d_Arr>();
			}
		}
		else {
			_case_begin_1aaae6b7d:;
			{
				return nullptr;
			}
		}
		_match_end_1aaae72dd:;
	};
}



inline jule::Ptr<_1a85163b3_Slc> _1a85109b7_slc(_1a850cbe5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a85163b3_Slc>>()) {
			_case_begin_1aaae7ca0:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a85163b3_Slc>();
			}
		}
		else {
			_case_begin_1aaae7882:;
			{
				return nullptr;
			}
		}
		_match_end_1aaae7ee2:;
	};
}



inline jule::Ptr<_1a5b33164_FnIns> _1a8510c2b_fnc(_1a850cbe5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5b33164_FnIns>>()) {
			_case_begin_1aaae89a4:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a5b33164_FnIns>();
			}
		}
		else {
			_case_begin_1aaae8586:;
			{
				return nullptr;
			}
		}
		_match_end_1aaae8be6:;
	};
}



inline jule::Ptr<_1b39672a9_StructIns> _1a8510e90_strct(_1a850cbe5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1b39672a9_StructIns>>()) {
			_case_begin_1aaae96a8:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1b39672a9_StructIns>();
			}
		}
		else {
			_case_begin_1aaae928a:;
			{
				return nullptr;
			}
		}
		_match_end_1aaae98ea:;
	};
}



inline jule::Ptr<_1a5e34531_Trait> _1a8511204_trt(_1a850cbe5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5e34531_Trait>>()) {
			_case_begin_1aaaea39b:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a5e34531_Trait>();
			}
		}
		else {
			_case_begin_1aaae9e8e:;
			{
				return nullptr;
			}
		}
		_match_end_1aaaea5ee:;
	};
}



inline jule::Ptr<_1a8517969_Map> _1a8511468_map(_1a850cbe5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a8517969_Map>>()) {
			_case_begin_1aaaeb0e4:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a8517969_Map>();
			}
		}
		else {
			_case_begin_1aaaeab93:;
			{
				return nullptr;
			}
		}
		_match_end_1aaaeb347:;
	};
}



inline jule::Ptr<_1a8516da8_Tuple> _1a85116cc_tup(_1a850cbe5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a8516da8_Tuple>>()) {
			_case_begin_1aaaebd3c:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a8516da8_Tuple>();
			}
		}
		else {
			_case_begin_1aaaeb8db:;
			{
				return nullptr;
			}
		}
		_match_end_1aaaec090:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a850cbe5_TypeKind _Src) {
	_Stream << _1a850d09c_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a8511e80_checked(_1a8511a84_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1a851215b_remove_kind(_1a8511a84_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8511a84_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a85127aa_to_str(_1a8512447_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1a8512ab8_equals(jule::Ptr<_1a8512447_Prim> _self_, jule::Ptr<_1a850cbe5_TypeKind> _35126_other) {
	jule::Ptr<_1a8512447_Prim> _35213_prim = _1a850eca2_prim(_35126_other.ptr());;
	if ((_35213_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_kind == _35213_prim.get()._field_kind);
}



inline jule::Bool _1a851302a_is_i8(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1a851328e_is_i16(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1a8513503_is_i32(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1a8513767_is_i64(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1a85139cb_is_u8(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1a8513c40_is_u16(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1a8513ea4_is_u32(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1a8514218_is_u64(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1a851447c_is_f32(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1a85146e1_is_f64(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1a8514955_is_int(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1a8514bb9_is_uint(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1a8514e2d_is_uintptr(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1a8515192_is_bool(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1a8515406_is_str(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1a851566a_is_any(_1a8512447_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1a8512447_Prim _Src) {
	_Stream << _1a85127aa_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a8515cb9_to_str(_1a8515956_Sptr* _self_) {
	return (jule::Str("&", 1) + _1a850d09c_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1a85160c7_equals(jule::Ptr<_1a8515956_Sptr> _self_, jule::Ptr<_1a850cbe5_TypeKind> _42026_other) {
	jule::Ptr<_1a8515956_Sptr> _42113_sptr = _1a8510016_sptr(_42026_other.ptr());;
	if ((_42113_sptr == nullptr)) {
		return false;
	};
	return _1a850d3aa_equals(_self_.get()._field_elem, _42113_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a8515956_Sptr _Src) {
	_Stream << _1a8515cb9_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a8516836_to_str(_1a85163b3_Slc* _self_) {
	return (jule::Str("[]", 2) + _1a850d09c_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1a8516b44_equals(jule::Ptr<_1a85163b3_Slc> _self_, jule::Ptr<_1a850cbe5_TypeKind> _43926_other) {
	jule::Ptr<_1a85163b3_Slc> _44013_slc = _1a85109b7_slc(_43926_other.ptr());;
	if ((_44013_slc == nullptr)) {
		return false;
	};
	return _1a850d3aa_equals(_self_.get()._field_elem, _44013_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a85163b3_Slc _Src) {
	_Stream << _1a8516836_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a85172a4_to_str(_1a8516da8_Tuple* _self_) {
	jule::Str _45617_s = jule::Str("(", 1);;
	_45617_s+=_1a850d09c_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1aab0d942:;
		if (it != expr.end()) {
			jule::Ptr<_1a850cbe5_TypeKind> &_45816_t = *it;
			{
				_45617_s+=jule::Str(",", 1);
				_45617_s+=_1a850d09c_to_str(_45816_t.ptr());
			}
			_iter_next_1aab0d942:;
			++it;
			goto _iter_begin_1aab0d942;
		}
		_iter_end_1aab0d942:;
	};
	_45617_s+=jule::Str(")", 1);
	return _45617_s;
}



inline jule::Bool _1a85175b2_equals(jule::Ptr<_1a8516da8_Tuple> _self_, jule::Ptr<_1a850cbe5_TypeKind> _46726_other) {
	jule::Ptr<_1a8516da8_Tuple> _46813_tup = _1a85116cc_tup(_46726_other.ptr());;
	if ((_46813_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_types.len() != _46813_tup.get()._field_types.len())) {
		return false;
	};
	jule::I64 _47717_i = 0LL;;
	for (; (_47717_i < _self_.get()._field_types.len()); (_47717_i)++) {
		{
			if ((!(_1a850d3aa_equals(_self_.get()._field_types[_47717_i], _46813_tup.get()._field_types[_47717_i])))) {
				return false;
			};
		}
	_iter_next_1aab115c1:;
	}
	_iter_end_1aab115c1:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8516da8_Tuple _Src) {
	_Stream << _1a85172a4_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a8517ccc_to_str(_1a8517969_Map* _self_) {
	jule::Str _49717_s = jule::Str("[", 1);;
	_49717_s+=_1a850d09c_to_str((*_self_)._field_key.ptr());
	_49717_s+=jule::Str(":", 1);
	_49717_s+=_1a850d09c_to_str((*_self_)._field_val.ptr());
	_49717_s+=jule::Str("]", 1);
	return _49717_s;
}



inline jule::Bool _1a85180da_equals(jule::Ptr<_1a8517969_Map> _self_, jule::Ptr<_1a850cbe5_TypeKind> _50626_other) {
	jule::Ptr<_1a8517969_Map> _50713_map = _1a8511468_map(_50626_other.ptr());;
	if ((_50713_map == nullptr)) {
		return false;
	};
	return (_1a850d3aa_equals(_self_.get()._field_key, _50713_map.get()._field_key) && _1a850d3aa_equals(_self_.get()._field_val, _50713_map.get()._field_val));
}







std::ostream &operator<<(std::ostream &_Stream, _1a8517969_Map _Src) {
	_Stream << _1a8517ccc_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a85188c1_to_str(_1a851855d_Arr* _self_) {
	jule::Str _52517_s = jule::Str("[", 1);;
	_52517_s+=_1a8305e2d_itoa((*_self_)._field_n);
	_52517_s+=jule::Str("]", 1);
	_52517_s+=_1a850d09c_to_str((*_self_)._field_elem.ptr());
	return _52517_s;
}



inline jule::Bool _1a8518bce_equals(jule::Ptr<_1a851855d_Arr> _self_, jule::Ptr<_1a850cbe5_TypeKind> _53326_other) {
	jule::Ptr<_1a851855d_Arr> _53413_arr = _1a8510753_arr(_53326_other.ptr());;
	if ((_53413_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_n == _53413_arr.get()._field_n) && _1a850d3aa_equals(_self_.get()._field_elem, _53413_arr.get()._field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1a851855d_Arr _Src) {
	_Stream << _1a85188c1_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a851932d_to_str(_1a8518eba_Ptr* _self_) {
	if (_1a851998d_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1a850d09c_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1a851963b_equals(jule::Ptr<_1a8518eba_Ptr> _self_, jule::Ptr<_1a850cbe5_TypeKind> _55726_other) {
	jule::Ptr<_1a8518eba_Ptr> _55813_ptr = _1a851027a_ptr(_55726_other.ptr());;
	if ((_55813_ptr == nullptr)) {
		return false;
	};
	return _1a850d3aa_equals(_self_.get()._field_elem, _55813_ptr.get()._field_elem);
}



inline jule::Bool _1a851998d_is_unsafe(_1a8518eba_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a8518eba_Ptr _Src) {
	_Stream << _1a851932d_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a851b660_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a851c9a2_push_err(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_2110e7238_Token> _71927_token, jule::Str _71942_fmt, jule::Slice<jule::Any> _71955_args) {
	_1a846e65c_push_err((*_self_)._field_s.ptr(), _71927_token,_71942_fmt,jule::Any(_71955_args));
}



inline void _1a851cb7d_allow_builtin(_1a851c2dc_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1a851cd59_disallow_builtin(_1a851c2dc_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1a8512447_Prim> _1a851d167_build_prim(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e7e80c_IdentTypeDecl>& _73130_decl) {
	if ((!(_1a851b297_is_prim(_73130_decl.get()._field_ident)))) {
		_1a851c9a2_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_73130_decl.get()._field_generics.len() > 0LL)) {
		_1a851c9a2_push_err(&(*_self_), _73130_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_73130_decl.get()._field_ident)}));
		return nullptr;
	};
	return _1a851abc0_build_prim_type(_73130_decl.get()._field_ident);
}



inline void _1a851d530_push_cycle_error(_1a851c2dc_TypeChecker* _self_, jule::Any _74531_def1, jule::Any _74542_def2, jule::Str& _74558_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _74813_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _74829_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _74829_def };
			
			if (_match_expr.type_is<jule::Ptr<_1a850bead_TypeAlias>>()) {
				_case_begin_1aab23c76:;
				{
					return _74829_def.operator jule::Ptr<_1a850bead_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
				_case_begin_1aab2443b:;
				{
					return _74829_def.operator jule::Ptr<_1b396462a_Struct>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a83065e3_Enum>>()) {
				_case_begin_1aab2434d:;
				{
					return _74829_def.operator jule::Ptr<_1a83065e3_Enum>().get()._field_ident;
				}
			}
			else {
				_case_begin_1aab23ddb:;
				{
					return jule::Str();
				}
			}
			_match_end_1aab23d0e:;
		};
	});;
	jule::Str _76113_def1_ident = _74813_get_ident(_74531_def1);;
	jule::Str _76213_def2_ident = _74813_get_ident(_74542_def2);;
	jule::Str _76313_refers_to = _210c4036a_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_76113_def1_ident),jule::Any(_76213_def2_ident)}));;
	(_74558_message).buffer.insert(0, (((_20ecdd3a3_repeat(jule::Str(" ", 1),4LL) + _76313_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a851d8d7_check_cross_cycle(_1a851c2dc_TypeChecker* _self_, jule::Any _76732_decl, jule::Str& _76748_message) {
	{
		auto &_match_expr{ _76732_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1a850bead_TypeAlias>>()) {
			_case_begin_1aab274c7:;
			{
				jule::Ptr<_1a850bead_TypeAlias> _77017_ta = _76732_decl.operator jule::Ptr<_1a850bead_TypeAlias>();;
				{
					auto &expr = _77017_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1aab281ed:;
					if (it != expr.end()) {
						jule::Any &_77120_d = *it;
						{
							{
								
								if ((_77120_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1aab288e6:;
									{
										_1a851d530_push_cycle_error(&(*_self_), jule::Any(_77017_ta),jule::Any(_77120_d),_76748_message);
										return false;
									}
								}
								else if ((!(_1a851d8d7_check_cross_cycle(&(*_self_), jule::Any(_77120_d),_76748_message)))) {
									_case_begin_1aab2896d:;
									{
										_1a851d530_push_cycle_error(&(*_self_), jule::Any(_77017_ta),jule::Any(_77120_d),_76748_message);
										return false;
									}
								}
								_match_end_1aab287d6:;
							};
						}
						_iter_next_1aab281ed:;
						++it;
						goto _iter_begin_1aab281ed;
					}
					_iter_end_1aab281ed:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
			_case_begin_1aab2753d:;
			{
				jule::Ptr<_1b396462a_Struct> _78217_s = _76732_decl.operator jule::Ptr<_1b396462a_Struct>();;
				{
					auto &expr = _78217_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1aab284d9:;
					if (it != expr.end()) {
						jule::Ptr<_1b396462a_Struct> &_78320_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _78320_d)) {
									_case_begin_1aab2b0e1:;
									{
										_1a851d530_push_cycle_error(&(*_self_), jule::Any(_78217_s),jule::Any(_78320_d),_76748_message);
										return false;
									}
								}
								else if ((!(_1a851d8d7_check_cross_cycle(&(*_self_), jule::Any(_78320_d),_76748_message)))) {
									_case_begin_1aab2b168:;
									{
										_1a851d530_push_cycle_error(&(*_self_), jule::Any(_78217_s),jule::Any(_78320_d),_76748_message);
										return false;
									}
								}
								_match_end_1aab2aed1:;
							};
						}
						_iter_next_1aab284d9:;
						++it;
						goto _iter_begin_1aab284d9;
					}
					_iter_end_1aab284d9:;
				};
			}
		}
		_match_end_1aab27472:;
	};
	return true;
}



inline jule::Bool _1a851dc8e_check_illegal_cycles(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e7e80c_IdentTypeDecl>& _80140_ident, jule::Any _80167_decl) {
	jule::Bool _80180_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_80180_ok = true;
		return _80180_ok;
	};
	{
		auto &_match_expr{ _80167_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
			_case_begin_1aab2d8b8:;
			{
				if (((*_self_)._field_not_plain || _80167_decl.operator jule::Ptr<_1b396462a_Struct>().get()._field_cpp_linked)) {
					_80180_ok = true;
					return _80180_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a850bead_TypeAlias>>()) {
			_case_begin_1aab2d4cd:;
			{
				if (_80167_decl.operator jule::Ptr<_1a850bead_TypeAlias>().get()._field_cpp_linked) {
					_80180_ok = true;
					return _80180_ok;
				};
			}
		}
		_match_end_1aab2da2d:;
	};
	if ((_80167_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1a851c9a2_push_err(&(*_self_), _80140_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_80180_ok = false;
		return _80180_ok;
	};
	jule::Str _82417_message = jule::Str();;
	if ((!(_1a851d8d7_check_cross_cycle(&(*_self_), jule::Any(_80167_decl),_82417_message)))) {
		jule::Str _82721_err_msg = _82417_message;;
		_82417_message=jule::Str();
		_1a851d530_push_cycle_error(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_80167_decl),_82417_message);
		_82721_err_msg=(_82721_err_msg + _82417_message);
		_1a851c9a2_push_err(&(*_self_), _80140_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_82721_err_msg)}));
		_80180_ok = false;
		return _80180_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1a850bead_TypeAlias>>()) {
			_case_begin_1aab32ec7:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>({jule::Any(_80167_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
			_case_begin_1aab3303d:;
			{
				{
					auto &_match_expr{ _80167_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
						_case_begin_1aab33714:;
						{
							jule::Ptr<_1b396462a_Struct> _84325_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1b396462a_Struct>();;
							_84325_s.get()._field_depends = jule::alloc_for_append(_84325_s.get()._field_depends,1);_84325_s.get()._field_depends.__push(_80167_decl.operator jule::Ptr<_1b396462a_Struct>());;
						}
					}
					_match_end_1aab336ae:;
				};
			}
		}
		_match_end_1aab32e72:;
	};
	_80180_ok = true;
	return _80180_ok;
}



inline jule::Trait<_1a850c7b6_Kind> _1a851e146_from_type_alias(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e7e80c_IdentTypeDecl>& _85135_decl, jule::Ptr<_1a850bead_TypeAlias>& _85162_ta) {
	if ((!(_1a846ed33_is_accessible_define((*_self_)._field_s.ptr(), _85162_ta.get()._field_public,_85162_ta.get()._field_token)))) {
		_1a851c9a2_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_85135_decl.get()._field_ident)}));
		return nullptr;
	};
	_85162_ta.get()._field_used=true;
	if ((_85135_decl.get()._field_generics.len() > 0LL)) {
		_1a851c9a2_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_85135_decl.get()._field_ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1aab38906:;
			if (it != expr.end()) {
				jule::Ptr<_1a850bead_TypeAlias> _86820_bg = *it;
				{
					if (((_86820_bg == _85162_ta) || ((_85162_ta.get()._field_kind.get()._field_kind != nullptr) && _1a850d3aa_equals(_85162_ta.get()._field_kind.get()._field_kind, _86820_bg.get()._field_kind.get()._field_kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1aab38906;
					};
				}
				_iter_next_1aab38906:;
				++it;
				goto _iter_begin_1aab38906;
			}
			_iter_end_1aab38906:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1aab3a6e9:;
			if (it != expr.end()) {
				jule::Ptr<_1a850bead_TypeAlias> _87920_bg = *it;
				{
					if ((_87920_bg == _85162_ta)) {
						_1a851c9a2_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any(_85135_decl.get()._field_ident)}));
						return nullptr;
					};
					{
						auto &expr = _85162_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1aab3bba1:;
						if (it != expr.end()) {
							jule::Ptr<_1a850bead_TypeAlias> _88424_dg = *it;
							{
								if ((_87920_bg == _88424_dg)) {
									_1a851c9a2_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any(_85135_decl.get()._field_ident)}));
									return nullptr;
								};
							}
							_iter_next_1aab3bba1:;
							++it;
							goto _iter_begin_1aab3bba1;
						}
						_iter_end_1aab3bba1:;
					};
				}
				_iter_next_1aab3a6e9:;
				++it;
				goto _iter_begin_1aab3a6e9;
			}
			_iter_end_1aab3a6e9:;
		};
	};
	jule::Bool _89317_ok = _1a851dc8e_check_illegal_cycles(&(*_self_), _85135_decl,jule::Any(_85162_ta));;
	if ((!(_89317_ok))) {
		return nullptr;
	};
	_89317_ok=_1a8476a93_check_type_alias_decl_kind((*_self_)._field_s, _85162_ta,(*_self_)._field_lookup);
	if ((!(_89317_ok))) {
		return nullptr;
	};
	if ((_85162_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr))) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_85162_ta);;
	};
	jule::Ptr<_1a850cbe5_TypeKind> _91017_tk = jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),_85162_ta.get()._field_generic,jule::Bool(),_85162_ta.get()._field_kind.get()._field_kind.get()._field_kind));;
	if (_85162_ta.get()._field_cpp_linked) {
		_91017_tk.get()._field_cpp_ident=_85162_ta.get()._field_ident;
	} else {
		_91017_tk.get()._field_cpp_ident=_85162_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	};
	return jule::Trait<_1a850c7b6_Kind>(_91017_tk, 4);
}



inline jule::Ptr<_1a83065e3_Enum> _1a851e4ed_from_enum(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e7e80c_IdentTypeDecl>& _92229_decl, jule::Ptr<_1a83065e3_Enum>& _92256_e) {
	if ((!(_1a846ed33_is_accessible_define((*_self_)._field_s.ptr(), _92256_e.get()._field_public,_92256_e.get()._field_token)))) {
		_1a851c9a2_push_err(&(*_self_), _92229_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_92229_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_92229_decl.get()._field_generics.len() > 0LL)) {
		_1a851c9a2_push_err(&(*_self_), _92229_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_92229_decl.get()._field_ident)}));
		return nullptr;
	};
	return _92256_e;
}



inline jule::Ptr<_1a5e34531_Trait> _1a851e8a5_from_trait(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e7e80c_IdentTypeDecl>& _93430_decl, jule::Ptr<_1a5e34531_Trait>& _93457_t) {
	if ((!(_1a846ed33_is_accessible_define((*_self_)._field_s.ptr(), _93457_t.get()._field_public,_93457_t.get()._field_token)))) {
		_1a851c9a2_push_err(&(*_self_), _93430_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_93430_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_93430_decl.get()._field_generics.len() > 0LL)) {
		_1a851c9a2_push_err(&(*_self_), _93430_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_93430_decl.get()._field_ident)}));
		return nullptr;
	};
	return _93457_t;
}



inline jule::Bool _1a851ec5c_check_struct_ins(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_1b39672a9_StructIns>& _94640_ins, jule::Ptr<_2110e7238_Token>& _94658_error_token) {
	jule::Bool _94681_ok = jule::Bool();
	if (_94640_ins.get()._field_checked) {
		_94681_ok = true;
		return _94681_ok;
	};
	_94640_ins.get()._field_checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _94640_ins.get()._field_decl))) {
		_94681_ok = true;
		return _94681_ok;
	};
	jule::Ptr<_1a84cd7a9_SymbolTable> _95717_old_file = (*_self_)._field_s.get()._field_file;;
	__JULE_DEFER({
		_1a846e294_set_current_file((*_self_)._field_s.ptr(), _95717_old_file);
	});;
	jule::Ptr<_1a84cd7a9_SymbolTable> _96017_file = _1a846b3c3_find_file((*_self_)._field_s.get()._field_files,_94640_ins.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_96017_file != nullptr)) {
		_1a846e294_set_current_file((*_self_)._field_s.ptr(), _96017_file);
	};
	jule::Ptr<_1a851b660_Referencer> _96517_referencer = jule::new_ptr<_1a851b660_Referencer>(_1a851b660_Referencer(_94640_ins.get()._field_decl.get()._field_ident,jule::Any(_94640_ins.get()._field_decl),nullptr));;
	jule::Slice<jule::Ptr<_1a850bead_TypeAlias>> _97017_generics = jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>::alloc(0LL,_94640_ins.get()._field_generics.len());;
	{
		auto &expr = _94640_ins.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aab4b100:;
		if (it != expr.end()) {
			jule::I64 _97114_i = it - expr.begin();
			jule::Ptr<_1a850cbe5_TypeKind> _97121_g = *it;
			{
				_97017_generics = jule::alloc_for_append(_97017_generics,1);_97017_generics.__push(jule::new_ptr<_1a850bead_TypeAlias>(_1a850bead_TypeAlias(jule::Ptr<_21110ca9a_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2110e7238_Token>(),_94640_ins.get()._field_decl.get()._field_generics[_97114_i].get()._field_ident,jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),_97121_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>())));;
			}
			_iter_next_1aab4b100:;
			++it;
			_97114_i++;
			goto _iter_begin_1aab4b100;
		}
		_iter_end_1aab4b100:;
	};
	jule::Ptr<_1a84cd7a9_SymbolTable> _98017_old_sema_file = _94640_ins.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1a846e294_set_current_file(_94640_ins.get()._field_decl.get()._field_sema.ptr(), _98017_old_sema_file);
	});;
	_1a851c2dc_TypeChecker _98517_tc = _1a851c2dc_TypeChecker(_94640_ins.get()._field_decl.get()._field_sema,jule::Trait<_1a85260a4_Lookup>(_94640_ins.get()._field_decl.get()._field_sema, 3),_96517_referencer,jule::Ptr<_2110e7238_Token>(),jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>(),_97017_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a850bead_TypeAlias>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>(),jule::Bool());;
	{
		auto &expr = _94640_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1aab4d630:;
		if (it != expr.end()) {
			jule::Ptr<_1b396694b_FieldIns> _99321_field = *it;
			{
				jule::Ptr<_1a850cbe5_TypeKind> _99421_kind = _1a85238ed_check_decl(&_98517_tc, _99321_field.get()._field_decl.get()._field_kind.get()._field_decl);;
				_94681_ok=(_99421_kind != nullptr);
				if ((((_94640_ins.get()._field_decl.get()._field_sema != nullptr) && ((*_self_)._field_s != _94640_ins.get()._field_decl.get()._field_sema)) && (_94640_ins.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
					(*_self_)._field_s.get()._field_errors=jule::append((*_self_)._field_s.get()._field_errors,_94640_ins.get()._field_decl.get()._field_sema.get()._field_errors);
					_94640_ins.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
				};
				if (_94681_ok) {
					_99321_field.get()._field_kind=_99421_kind;
					_94640_ins.get()._field_mutable=(_94640_ins.get()._field_mutable || ((!(_99321_field.get()._field_decl.get()._field_mutable)) && _1a850e08c_mutable(_99321_field.get()._field_kind.ptr())));
					_1a847dd75_check_struct_ins_derive_clone((*_self_)._field_s.ptr(), _94640_ins);
				};
			}
			_iter_next_1aab4d630:;
			++it;
			goto _iter_begin_1aab4d630;
		}
		_iter_end_1aab4d630:;
	};
	if ((_94640_ins.get()._field_generics.len() > 0LL)) {
		_1a8481bd0_check_struct_ins_operators((*_self_)._field_s, _94640_ins);
		_1a84814b5_check_struct_ins((*_self_)._field_s, _94640_ins);
	};
	_94681_ok = true;
	return _94681_ok;
}



inline void _1a8520026_append_used_struct_reference(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_1b396462a_Struct>& _101652_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
			_case_begin_1aab54504:;
			{
				jule::Ptr<_1b396462a_Struct> _102321_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1b396462a_Struct>();;
				if ((!(_1b3966264_is_uses(_102321_ref_s.ptr(), _101652_s)))) {
					_102321_ref_s.get()._field_uses = jule::alloc_for_append(_102321_ref_s.get()._field_uses,1);_102321_ref_s.get()._field_uses.__push(_101652_s);;
				};
			}
		}
		_match_end_1aab5448d:;
	};
}



inline jule::Ptr<_1b39672a9_StructIns> _1a85203bc_build_struct_instance(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e7e80c_IdentTypeDecl>& _103045_decl, jule::Ptr<_1b396462a_Struct>& _103072_s) {
	jule::Ptr<_1a851b660_Referencer> _103217_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a850bead_TypeAlias>> _103417_banned_generics = (*_self_)._field_banned_generics;;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1a844d4e8_ScopeChecker>>()) {
				_case_begin_1aab574e6:;
				{
					jule::Ptr<_1a844d4e8_ScopeChecker> _104125_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a844d4e8_ScopeChecker>();;
					jule::Ptr<_1a844d4e8_ScopeChecker> _104225_hard = _1a84508a2_get_hard_root(_104125_sc);;
					if (((_104225_hard.get()._field_owner.get()._field_owner == nullptr) || (_104225_hard.get()._field_owner.get()._field_owner.get()._field_decl != _103072_s))) {
						goto _match_end_1aab57491;
					};
					jule::I64 _104621_n = (_104225_hard.get()._field_owner.get()._field_generics.len() + _104225_hard.get()._field_owner.get()._field_owner.get()._field_generics.len());;
					(*_self_)._field_banned_generics=_104225_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_104621_n);
				}
			}
			_match_end_1aab57491:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_1b39672a9_StructIns> _105617_ins = _1b3964a59_instance(_103072_s);;
	_105617_ins.get()._field_generics=jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>::alloc(0LL,_103045_decl.get()._field_generics.len());
	{
		auto &expr = _103045_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aab5a63c:;
		if (it != expr.end()) {
			jule::Ptr<_210e7e620_TypeDecl> _105821_g = *it;
			{
				jule::Ptr<_1a850cbe5_TypeKind> _105921_kind = _1a85235e0_build(&(*_self_), _105821_g.get()._field_kind);;
				if ((_105921_kind == nullptr)) {
					return nullptr;
				};
				_105617_ins.get()._field_generics = jule::alloc_for_append(_105617_ins.get()._field_generics,1);_105617_ins.get()._field_generics.__push(_105921_kind);;
			}
			_iter_next_1aab5a63c:;
			++it;
			goto _iter_begin_1aab5a63c;
		}
		_iter_end_1aab5a63c:;
	};
	(*_self_)._field_banned_generics=_103417_banned_generics;
	(*_self_)._field_referencer=_103217_referencer;
	return _105617_ins;
}



inline jule::Ptr<_1b39672a9_StructIns> _1a8520774_from_struct(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e7e80c_IdentTypeDecl>& _107335_decl, jule::Ptr<_1b396462a_Struct>& _107362_s) {
	if ((!(_1a846ed33_is_accessible_define((*_self_)._field_s.ptr(), _107362_s.get()._field_public,_107362_s.get()._field_token)))) {
		_1a851c9a2_push_err(&(*_self_), _107335_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_107335_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_107335_decl.get()._field_generics.len() > 0LL)) {
			_1a851c9a2_push_err(&(*_self_), _107335_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1b39672a9_StructIns>(_1b39672a9_StructIns(jule::Bool(),_107362_s,jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1b396694b_FieldIns>>(),jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>(),jule::Bool(),jule::Ptr<_1a5b36222_ReferenceStack>(),_1b3963816_Operators()));
	};
	if (((_107362_s.get()._field_generics.len() > 0LL) && ((*_self_)._field_ignore_generics.len() > 0LL))) {
		return nullptr;
	};
	jule::Bool _109617_ok = ((*_self_)._field_not_plain || _1a851dc8e_check_illegal_cycles(&(*_self_), _107335_decl,jule::Any(_107362_s)));;
	if ((!(_109617_ok))) {
		return nullptr;
	};
	_1a8520026_append_used_struct_reference(&(*_self_), _107362_s);
	jule::Ptr<_1b39672a9_StructIns> _110217_ins = _1a85203bc_build_struct_instance(&(*_self_), _107335_decl,_107362_s);;
	if ((_110217_ins == nullptr)) {
		return nullptr;
	};
	_109617_ok=_1a8470a04_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_110217_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_110217_ins.get()._field_generics.len()),_107335_decl.get()._field_token);
	if ((!(_109617_ok))) {
		return nullptr;
	};
	jule::Ptr<_1b39672a9_StructIns> _111217_exist_instance = _1b3964d67_append_instance(_107362_s.ptr(), _110217_ins);;
	if ((_111217_exist_instance != nullptr)) {
		return _111217_exist_instance;
	};
	_109617_ok=_1a851ec5c_check_struct_ins(&(*_self_), _110217_ins,_107335_decl.get()._field_token);
	if ((!(_109617_ok))) {
		return nullptr;
	};
	return _110217_ins;
}



inline jule::Trait<_1a850c7b6_Kind> _1a8520b2b_get_def(_1a851c2dc_TypeChecker* _self_, jule::Trait<_1a85260a4_Lookup> _113426_l, jule::Ptr<_210e7e80c_IdentTypeDecl>& _113442_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1aab660b5:;
		if (it != expr.end()) {
			jule::Ptr<_21110be1d_GenericDecl> _113516_g = *it;
			{
				if ((_113516_g.get()._field_ident == _113442_decl.get()._field_ident)) {
					return jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(_113516_g.get()._field_ident), 5);
				};
			}
			_iter_next_1aab660b5:;
			++it;
			goto _iter_begin_1aab660b5;
		}
		_iter_end_1aab660b5:;
	};
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1aab66769:;
		if (it != expr.end()) {
			jule::Ptr<_1a850bead_TypeAlias> _114121_g = *it;
			{
				if ((_114121_g.get()._field_ident == _113442_decl.get()._field_ident)) {
					jule::Ptr<_1b39672a9_StructIns> _114325_st = _1a8510e90_strct(_114121_g.get()._field_kind.get()._field_kind.ptr());;
					if ((_114325_st != nullptr)) {
						jule::Bool _114525_ok = _1a851dc8e_check_illegal_cycles(&(*_self_), _113442_decl,jule::Any(_114325_st.get()._field_decl));;
						if ((!(_114525_ok))) {
							return nullptr;
						};
					};
					return _114121_g.get()._field_kind.get()._field_kind.get()._field_kind;
				};
			}
			_iter_next_1aab66769:;
			++it;
			goto _iter_begin_1aab66769;
		}
		_iter_end_1aab66769:;
	};
	if ((!(_113442_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1a83065e3_Enum> _115521_e = _1a85260a4_Lookup_mptr_data[(_113426_l).type_offset]._1a8525e61_find_enum(_113426_l, _113442_decl.get()._field_ident);;
		if ((_115521_e != nullptr)) {
			return jule::Trait<_1a850c7b6_Kind>(_1a851e4ed_from_enum(&(*_self_), _113442_decl,_115521_e), 3);
		};
		jule::Ptr<_1a5e34531_Trait> _116021_t = _1a85260a4_Lookup_mptr_data[(_113426_l).type_offset]._1a8525b53_find_trait(_113426_l, _113442_decl.get()._field_ident);;
		if (((_116021_t == nullptr) && (!((*_self_)._field_dis_builtin)))) {
			_116021_t=_1a8533c4e_find_builtin_trait(_113442_decl.get()._field_ident);
		};
		if ((_116021_t != nullptr)) {
			return jule::Trait<_1a850c7b6_Kind>(_1a851e8a5_from_trait(&(*_self_), _113442_decl,_116021_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1a851c9a2_push_err(&(*_self_), _113442_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1b396462a_Struct> _117217_s = _1a85260a4_Lookup_mptr_data[(_113426_l).type_offset]._1a852548d_find_struct(_113426_l, _113442_decl.get()._field_ident,_113442_decl.get()._field_cpp_linked);;
	if ((_117217_s != nullptr)) {
		return jule::Trait<_1a850c7b6_Kind>(_1a8520774_from_struct(&(*_self_), _113442_decl,_117217_s), 0);
	};
	jule::Ptr<_1a850bead_TypeAlias> _117717_ta = _1a85260a4_Lookup_mptr_data[(_113426_l).type_offset]._1a85250d6_find_type_alias(_113426_l, _113442_decl.get()._field_ident,_113442_decl.get()._field_cpp_linked);;
	if (((_117717_ta == nullptr) && (!((*_self_)._field_dis_builtin)))) {
		_117717_ta=_1a8533215_find_builtin_type_alias(_113442_decl.get()._field_ident);
	};
	if ((_117717_ta != nullptr)) {
		return _1a851e146_from_type_alias(&(*_self_), _113442_decl,_117717_ta);
	};
	_1a851c9a2_push_err(&(*_self_), _113442_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_113442_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1a850c7b6_Kind> _1a8520e39_build_ident(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e7e80c_IdentTypeDecl> _118934_decl) {
	{
		
		if (_1a851b297_is_prim(_118934_decl.get()._field_ident)) {
			_case_begin_1aab71598:;
			{
				return jule::Trait<_1a850c7b6_Kind>(_1a851d167_build_prim(&(*_self_), _118934_decl), 5);
			}
		}
		else {
			_case_begin_1aab70c3a:;
			{
				return _1a8520b2b_get_def(&(*_self_), (*_self_)._field_lookup,_118934_decl);
			}
		}
		_match_end_1aab70b6e:;
	};
}



inline jule::Ptr<_1a8515956_Sptr> _1a8521247_build_sptr_from_type(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_1a850cbe5_TypeKind>& _119844_elem) {
	{
		
		if ((_119844_elem == nullptr)) {
			_case_begin_1aab70410:;
			{
				return nullptr;
			}
		}
		else if ((_1a8510e90_strct(_119844_elem.ptr()) != nullptr)) {
			_case_begin_1aab7239b:;
			{
				jule::Ptr<_1b39672a9_StructIns> _120417_s = _1a8510e90_strct(_119844_elem.ptr());;
				if (((_120417_s.get()._field_decl != nullptr) && _120417_s.get()._field_decl.get()._field_cpp_linked)) {
					_1a851c9a2_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1a8510753_arr(_119844_elem.ptr()) != nullptr) && _1a8510753_arr(_119844_elem.ptr()).get()._field_auto)) {
			_case_begin_1aab72412:;
			{
				_1a851c9a2_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aab70300:;
	};
	return jule::new_ptr<_1a8515956_Sptr>(_1a8515956_Sptr(_119844_elem));
}



inline jule::Ptr<_1a8515956_Sptr> _1a8521555_build_sptr(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e86e41_SptrTypeDecl> _121833_decl) {
	jule::Bool _121913_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_121913_not_plain;
	});;
	jule::Ptr<_1a850cbe5_TypeKind> _122317_elem = _1a85238ed_check_decl(&(*_self_), _121833_decl.get()._field_elem);;
	return _1a8521247_build_sptr_from_type(&(*_self_), _122317_elem);
}



inline jule::Ptr<_1a8518eba_Ptr> _1a8521863_build_ptr_from_type(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_1a850cbe5_TypeKind>& _122743_elem) {
	{
		
		if ((_122743_elem == nullptr)) {
			_case_begin_1aab7778b:;
			{
				return nullptr;
			}
		}
		else if (((_1a8510753_arr(_122743_elem.ptr()) != nullptr) && _1a8510753_arr(_122743_elem.ptr()).get()._field_auto)) {
			_case_begin_1aab77813:;
			{
				_1a851c9a2_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1a8518eba_Ptr>();
			}
		}
		_match_end_1aab7767b:;
	};
	return jule::new_ptr<_1a8518eba_Ptr>(_1a8518eba_Ptr(_122743_elem));
}



inline jule::Ptr<_1a8518eba_Ptr> _1a8521b71_build_ptr(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e87507_PtrTypeDecl> _124232_decl) {
	jule::Bool _124313_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_124313_not_plain;
	});;
	jule::Ptr<_1a850cbe5_TypeKind> _124717_elem = nullptr;;
	if ((!(_210e9aecc_is_unsafe(_124232_decl.ptr())))) {
		_124717_elem=_1a85238ed_check_decl(&(*_self_), _124232_decl.get()._field_elem);
		return _1a8521863_build_ptr_from_type(&(*_self_), _124717_elem);
	};
	return jule::new_ptr<_1a8518eba_Ptr>(_1a8518eba_Ptr(_124717_elem));
}



inline jule::Ptr<_1a85163b3_Slc> _1a8521e7e_build_slc(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e8712d_SlcTypeDecl> _125932_decl) {
	jule::Bool _126013_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_126013_not_plain;
	});;
	jule::Ptr<_1a850cbe5_TypeKind> _126417_elem = _1a85238ed_check_decl(&(*_self_), _125932_decl.get()._field_elem);;
	{
		
		if ((_126417_elem == nullptr)) {
			_case_begin_1aab7d2a8:;
			{
				return nullptr;
			}
		}
		else if (((_1a8510753_arr(_126417_elem.ptr()) != nullptr) && _1a8510753_arr(_126417_elem.ptr()).get()._field_auto)) {
			_case_begin_1aab7d330:;
			{
				_1a851c9a2_push_err(&(*_self_), _125932_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aab7d20e:;
	};
	return jule::new_ptr<_1a85163b3_Slc>(_1a85163b3_Slc(_126417_elem));
}



inline jule::Ptr<_1a851855d_Arr> _1a852228c_build_arr(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e876e4_ArrTypeDecl> _128032_decl) {
	jule::Bool _128113_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_128113_not_plain;
	});;
	jule::I64 _128517_n = 0LL;;
	if ((!(_210e9c62c_auto_sized(_128032_decl.ptr())))) {
		jule::Ptr<_1a84d3869_Data> _128821_size = _1a84eea94_eval_expr(_1a84743ba_eval((*_self_)._field_s, (*_self_)._field_lookup), _128032_decl.get()._field_size);;
		if ((_128821_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1a84d422c_is_const(_128821_size.ptr())))) {
			_1a851c9a2_push_err(&(*_self_), _128032_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1a850eca2_prim(_128821_size.get()._field_kind.ptr()) == nullptr) || (!(_1a844b23d_is_int(_1a850eca2_prim(_128821_size.get()._field_kind.ptr()).get()._field_kind))))) {
			_1a851c9a2_push_err(&(*_self_), _128032_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_128517_n=static_cast<jule::I64>(static_cast<jule::I64>(_1a83aa697_as_i64(_128821_size.get()._field_constant.ptr())));
		if ((_128517_n < 0LL)) {
			_1a851c9a2_push_err(&(*_self_), _128032_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1a8440c8d_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_128517_n) > _1a8445c93_max(jule::Str("int", 3))))) {
			_1a851c9a2_push_err(&(*_self_), _128032_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1a850cbe5_TypeKind> _131117_elem = _1a85238ed_check_decl(&(*_self_), _128032_decl.get()._field_elem);;
	{
		
		if ((_131117_elem == nullptr)) {
			_case_begin_1aab87526:;
			{
				return nullptr;
			}
		}
		else if (((_1a8510753_arr(_131117_elem.ptr()) != nullptr) && _1a8510753_arr(_131117_elem.ptr()).get()._field_auto)) {
			_case_begin_1aab8758c:;
			{
				_1a851c9a2_push_err(&(*_self_), _128032_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aab87339:;
	};
	return jule::new_ptr<_1a851855d_Arr>(_1a851855d_Arr(_210e9c62c_auto_sized(_128032_decl.ptr()),_128517_n,_131117_elem));
}



inline jule::Ptr<_1a8517969_Map> _1a852259a_build_map(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e878d1_MapTypeDecl> _132932_decl) {
	jule::Bool _133013_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_133013_not_plain;
	});;
	jule::Ptr<_1a850cbe5_TypeKind> _133417_key = _1a85238ed_check_decl(&(*_self_), _132932_decl.get()._field_key);;
	if ((_133417_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1a850cbe5_TypeKind> _133917_val = _1a85238ed_check_decl(&(*_self_), _132932_decl.get()._field_val);;
	if ((_133917_val == nullptr)) {
		return nullptr;
	};
	if ((_1a85104de_enm(_133917_val.ptr()) != nullptr)) {
		_1a851c9a2_push_err(&(*_self_), _132932_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1a8517969_Map>(_1a8517969_Map(_133417_key,_133917_val));
}



inline jule::Ptr<_1a8516da8_Tuple> _1a85228a8_build_tuple(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e8731a_TupleTypeDecl> _135334_decl) {
	jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> _135417_types = jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>::alloc(0LL,_135334_decl.get()._field_types.len());;
	{
		auto &expr = _135334_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1aab8dad2:;
		if (it != expr.end()) {
			jule::Ptr<_210e7e620_TypeDecl> _135521_t = *it;
			{
				jule::Ptr<_1a850cbe5_TypeKind> _135621_kind = _1a85238ed_check_decl(&(*_self_), _135521_t);;
				if ((_135621_kind == nullptr)) {
					return nullptr;
				};
				_135417_types = jule::alloc_for_append(_135417_types,1);_135417_types.__push(_135621_kind);;
			}
			_iter_next_1aab8dad2:;
			++it;
			goto _iter_begin_1aab8dad2;
		}
		_iter_end_1aab8dad2:;
	};
	return jule::new_ptr<_1a8516da8_Tuple>(_1a8516da8_Tuple(_135417_types));
}



inline jule::Bool _1a8522bb6_check_fn_types(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_1a5b33164_FnIns>& _136638_f) {
	jule::Bool _136651_ok = jule::Bool();
	{
		auto &expr = _136638_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aab908a3:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b322c8_ParamIns> _136721_p = *it;
			{
				_136721_p.get()._field_kind=_1a85235e0_build(&(*_self_), _136721_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_136651_ok=(_136721_p.get()._field_kind != nullptr);
				if ((!(_136651_ok))) {
					_136651_ok = false;
					return _136651_ok;
				};
			}
			_iter_next_1aab908a3:;
			++it;
			goto _iter_begin_1aab908a3;
		}
		_iter_end_1aab908a3:;
	};
	if ((!(_1a5b30419_is_void(_136638_f.get()._field_decl.ptr())))) {
		_136638_f.get()._field_result=_1a85235e0_build(&(*_self_), _136638_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_136651_ok = (_136638_f.get()._field_result != nullptr);
		return _136651_ok;
	};
	_136651_ok = true;
	return _136651_ok;
}



inline jule::Ptr<_1a5b33164_FnIns> _1a8522ec4_build_fn(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_21110ce74_FnDecl> _138331_decl) {
	if ((_138331_decl.get()._field_generics.len() > 0LL)) {
		_1a851c9a2_push_err(&(*_self_), _138331_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a5b2eeb8_Fn> _138917_f = _1a5b393ac_build_fn(_138331_decl);;
	jule::Ptr<_1a5b33164_FnIns> _139017_ins = _1a5b3189e_instance_force(_138917_f);;
	_139017_ins.get()._field_anon=true;
	jule::Bool _139313_ok = _1a8522bb6_check_fn_types(&(*_self_), _139017_ins);;
	if ((!(_139313_ok))) {
		return nullptr;
	};
	return _139017_ins;
}



inline jule::Trait<_1a850c7b6_Kind> _1a85232d2_build_by_namespace(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e86c54_NamespaceTypeDecl> _140141_decl) {
	jule::Str _140213_path = _1a851a939_build_link_path_by_tokens(_140141_decl.get()._field_idents);;
	jule::Ptr<_1a8464058_ImportInfo> _140317_imp = _1a85260a4_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a8524877_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a8464058_ImportInfo>)>([=](jule::Ptr<_1a8464058_ImportInfo> _140353_imp) mutable -> jule::Bool {
		if (((_140141_decl.get()._field_idents.len() == 1LL) && (_140353_imp.get()._field_alias == _140213_path))) {
			return true;
		};
		return ((_140353_imp.get()._field_link_path == _140213_path) && _1a8466940_is_accessible_via_selection(_140353_imp.ptr()));
	}));;
	if (((_140317_imp == nullptr) || (!(_1a8466379_is_lookupable(_140317_imp.ptr(), jule::Str("self", 4)))))) {
		_1a851c9a2_push_err(&(*_self_), _140141_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_140213_path)}));
		return nullptr;
	};
	_1a851cd59_disallow_builtin(&(*_self_));
	jule::Trait<_1a850c7b6_Kind> _141617_kind = _1a8520b2b_get_def(&(*_self_), jule::Trait<_1a85260a4_Lookup>(_140317_imp, 1),_140141_decl.get()._field_kind);;
	_1a851cb7d_allow_builtin(&(*_self_));
	return _141617_kind;
}



inline jule::Ptr<_1a850cbe5_TypeKind> _1a85235e0_build(_1a851c2dc_TypeChecker* _self_, jule::Any& _142229_decl_kind) {
	jule::Trait<_1a850c7b6_Kind> _142317_kind = nullptr;;
	{
		auto &_match_expr{ _142229_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a850cbe5_TypeKind>>()) {
			_case_begin_1aab9bd10:;
			{
				_142317_kind=jule::Trait<_1a850c7b6_Kind>(_142229_decl_kind.operator jule::Ptr<_1a850cbe5_TypeKind>(), 4);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e7e80c_IdentTypeDecl>>()) {
			_case_begin_1aab9bd76:;
			{
				jule::Trait<_1a850c7b6_Kind> _142821_t = _1a8520e39_build_ident(&(*_self_), _142229_decl_kind.operator jule::Ptr<_210e7e80c_IdentTypeDecl>());;
				if ((_142821_t != nullptr)) {
					_142317_kind=_142821_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e86e41_SptrTypeDecl>>()) {
			_case_begin_1aab9beec:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a8515956_Sptr> _143421_t = _1a8521555_build_sptr(&(*_self_), _142229_decl_kind.operator jule::Ptr<_210e86e41_SptrTypeDecl>());;
				if ((_143421_t != nullptr)) {
					_142317_kind=jule::Trait<_1a850c7b6_Kind>(_143421_t, 6);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e87507_PtrTypeDecl>>()) {
			_case_begin_1aab9c063:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a8518eba_Ptr> _144021_t = _1a8521b71_build_ptr(&(*_self_), _142229_decl_kind.operator jule::Ptr<_210e87507_PtrTypeDecl>());;
				if ((_144021_t != nullptr)) {
					_142317_kind=jule::Trait<_1a850c7b6_Kind>(_144021_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e8712d_SlcTypeDecl>>()) {
			_case_begin_1aab9b309:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a85163b3_Slc> _144621_t = _1a8521e7e_build_slc(&(*_self_), _142229_decl_kind.operator jule::Ptr<_210e8712d_SlcTypeDecl>());;
				if ((_144621_t != nullptr)) {
					_142317_kind=jule::Trait<_1a850c7b6_Kind>(_144621_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e876e4_ArrTypeDecl>>()) {
			_case_begin_1aab9b370:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a851855d_Arr> _145221_t = _1a852228c_build_arr(&(*_self_), _142229_decl_kind.operator jule::Ptr<_210e876e4_ArrTypeDecl>());;
				if ((_145221_t != nullptr)) {
					_142317_kind=jule::Trait<_1a850c7b6_Kind>(_145221_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e878d1_MapTypeDecl>>()) {
			_case_begin_1aab9b3d6:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a8517969_Map> _145821_t = _1a852259a_build_map(&(*_self_), _142229_decl_kind.operator jule::Ptr<_210e878d1_MapTypeDecl>());;
				if ((_145821_t != nullptr)) {
					_142317_kind=jule::Trait<_1a850c7b6_Kind>(_145821_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e8731a_TupleTypeDecl>>()) {
			_case_begin_1aab9b44c:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a8516da8_Tuple> _146421_t = _1a85228a8_build_tuple(&(*_self_), _142229_decl_kind.operator jule::Ptr<_210e8731a_TupleTypeDecl>());;
				if ((_146421_t != nullptr)) {
					_142317_kind=jule::Trait<_1a850c7b6_Kind>(_146421_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110ce74_FnDecl>>()) {
			_case_begin_1aab9c0eb:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a5b33164_FnIns> _147021_t = _1a8522ec4_build_fn(&(*_self_), _142229_decl_kind.operator jule::Ptr<_21110ce74_FnDecl>());;
				if ((_147021_t != nullptr)) {
					_142317_kind=jule::Trait<_1a850c7b6_Kind>(_147021_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_210e86c54_NamespaceTypeDecl>>()) {
			_case_begin_1aab9c162:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1a850c7b6_Kind> _147621_t = _1a85232d2_build_by_namespace(&(*_self_), _142229_decl_kind.operator jule::Ptr<_210e86c54_NamespaceTypeDecl>());;
				if ((_147621_t != nullptr)) {
					_142317_kind=_147621_t;
				};
			}
		}
		else {
			_case_begin_1aab9b1a5:;
			{
				_1a851c9a2_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1aab9b150:;
	};
	if ((_142317_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _142317_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a850cbe5_TypeKind>>()) {
			_case_begin_1aaba7b51:;
			{
				return _142317_kind.operator jule::Ptr<_1a850cbe5_TypeKind>();
			}
		}
		else {
			_case_begin_1aaba76ab:;
			{
				return jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_142317_kind));
			}
		}
		_match_end_1aaba7656:;
	};
}



inline jule::Ptr<_1a850cbe5_TypeKind> _1a85238ed_check_decl(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_210e7e620_TypeDecl>& _149734_decl) {
	jule::Ptr<_2110e7238_Token> _149917_error_token = (*_self_)._field_error_token;;
	(*_self_)._field_error_token=_149734_decl.get()._field_token;
	jule::Ptr<_1a850cbe5_TypeKind> _150217_kind = _1a85235e0_build(&(*_self_), _149734_decl.get()._field_kind);;
	(*_self_)._field_error_token=_149917_error_token;
	return _150217_kind;
}



inline void _1a8523b73_check(_1a851c2dc_TypeChecker* _self_, jule::Ptr<_1a8511a84_TypeSymbol>& _150829_t) {
	if ((_150829_t.get()._field_decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1a850cbe5_TypeKind> _151217_kind = _1a85238ed_check_decl(&(*_self_), _150829_t.get()._field_decl);;
	if ((_151217_kind == nullptr)) {
		_1a851215b_remove_kind(_150829_t.ptr());
		return;;
	};
	_150829_t.get()._field_kind=_151217_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1a851c2dc_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210ddd4d5_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _210e28355_push_err(_210e3d733_DirectiveEval* _self_, jule::Ptr<_2110e7238_Token> _2127_t, jule::Str _2138_fmt, jule::Slice<jule::Any> _2151_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_210c3ee2a_Log(static_cast<jule::I64>(1LL),_2127_t.get()._field_row,_2127_t.get()._field_column,_2127_t.get()._field_file.get()._field_path,_210c4036a_logf(_2138_fmt,jule::Any(_2151_args)),jule::Str(),jule::Str()));;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _210e2bad9_split_operans(_210e3d733_DirectiveEval* _self_, jule::Str _3332_op, jule::Slice<jule::Ptr<_2110e7238_Token>>& _3352_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>>::alloc(0LL,10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_range_n = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3352_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_2110e7238_Token> _4017_b = _3352_tokens[_3617_i];;
			if ((_4017_b.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1aad10836:;
						{
							(_3717_range_n)++;
							goto _iter_next_1aad0ebba;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1aad10b99:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1aad10a78:;
				};
			};
			if (((_3717_range_n > 0LL) || (_4017_b.get()._field_id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1aad0ebba;
			};
			if ((_4017_b.get()._field_kind == _3332_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1aad0ebba:;
	}
	_iter_end_1aad0ebba:;;
	if ((_3817_last < _3352_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));;
	} else {
		_210e28355_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _210e2c0a1_eval_directive_ident(_210e3d733_DirectiveEval* _self_, jule::Str _7335_ident) {
	if (_7335_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1aad1496c:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7335_ident)) {
					return true;
				};
			}
			_iter_next_1aad1496c:;
			++it;
			goto _iter_begin_1aad1496c;
		}
		_iter_end_1aad1496c:;
	};
	return false;
}



inline jule::Bool _210e2c304_eval_directive_part(_210e3d733_DirectiveEval* _self_, jule::Slice<jule::Ptr<_2110e7238_Token>> _8742_part) {
	jule::Bool _8813_logical_not = ((_8742_part[0LL].get()._field_id == static_cast<jule::U64>(7LLU)) && (_8742_part[0LL].get()._field_kind == jule::Str("!", 1)));;
	if (_8813_logical_not) {
		_8742_part=_8742_part.slice(1LL);
	};
	if ((_8742_part.len() > 1LL)) {
		_210e28355_push_err(&(*_self_), _8742_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _210e2c0a1_eval_directive_ident(&(*_self_), _8742_part[0LL].get()._field_kind);;
	if (_8813_logical_not) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _210e2c5e0_eval(_210e3d733_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_210e28355_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _11317_logical_or_parts = _210e2bad9_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);;
	if ((_11317_logical_or_parts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1aad1a9ea:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_2110e7238_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _12021_logical_and_parts = _210e2bad9_split_operans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logical_and_parts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1aad1c03a:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_2110e7238_Token>> _12525_and_part = *it;
						{
							jule::Ptr<_2110e7238_Token> _12621_first = _12525_and_part[0LL];;
							if (((_12621_first.get()._field_id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_kind == jule::Str("(", 1)))) {
								jule::Ptr<_2110e7238_Token> _12825_end = _12525_and_part[(_12525_and_part.len() - 1LL)];;
								if (((_12825_end.get()._field_id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_kind != jule::Str(")", 1)))) {
									_210e28355_push_err(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_and_part=_12525_and_part.slice(1LL,(_12525_and_part.len() - 1LL));
							};
							_11921_and=(_11921_and && _210e2c304_eval_directive_part(&(*_self_), _12525_and_part));
						}
						_iter_next_1aad1c03a:;
						++it;
						goto _iter_begin_1aad1c03a;
					}
					_iter_end_1aad1c03a:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1aad1a9ea:;
			++it;
			goto _iter_begin_1aad1a9ea;
		}
		_iter_end_1aad1a9ea:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _210e3d733_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e552e218_JuleImporter> static__1e5534196_new(_210ddd4d5_CompileInfo _5823_info) {
	jule::Ptr<_1e552e218_JuleImporter> _5917_imp = jule::new_ptr<_1e552e218_JuleImporter>(_1e552e218_JuleImporter(jule::Slice<jule::Str>({_210c5359d_PATH_STDLIB}),jule::Str(),jule::Slice<jule::Ptr<_1a8464058_ImportInfo>>(),jule::Slice<jule::Str>()));;
	_210dddcee_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1a8464058_ImportInfo>> _1e5535d02_all_packages(_1e552e218_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1e5537e8b_set_mod_path(_1e552e218_JuleImporter* _self_, jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1a85a67a5_get_mod_path(_1e552e218_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1a85a6ab3_mod_by_id(_1e552e218_JuleImporter* _self_, jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a85a6dc1_get_import(_1e552e218_JuleImporter* _self_, jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1aad2496b:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_path == _8733_path)) {
					return _8821_p;
				};
			}
			_iter_next_1aad2496b:;
			++it;
			goto _iter_begin_1aad2496b;
		}
		_iter_end_1aad2496b:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_210eb3d6e_Ast>>,jule::Slice<_210c3ee2a_Log>> _1a85a7278_import_package(_1e552e218_JuleImporter* _self_, jule::Str _9637_path, jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_20dd9e201_DirEntry>> _9717_dirents = ({
		auto except = static__20ebab6c2_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_210c3ee2a_Log>({_1e55307be_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _9637_path))}));
			return std::make_tuple(nullptr,jule::Slice<_210c3ee2a_Log>({_1e55307be_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _9637_path))}));
		} jule::Slice<jule::Ptr<_20dd9e201_DirEntry>>();});
	});;
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _210e3aa3d_find_module_file_deep(_9637_path);;
		if ((_10217_new_mod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_210c3ee2a_Log> _10525_errs = _210e4d897_check_module_file((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_210eb3d6e_Ast>> _11217_asts = jule::Slice<jule::Ptr<_210eb3d6e_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1aad2685d:;
		if (it != expr.end()) {
			jule::Ptr<_20dd9e201_DirEntry> _11316_dirent = *it;
			{
				if ((_20dde8cb7_is_dir(_11316_dirent.get()._field_stat.ptr()) || (!(_210b702bc_has_suffix(_11316_dirent.get()._field_name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1aad2685d;
				};
				jule::Str _11917__path = _20ecb5a51_join(jule::Slice<jule::Str>({_9637_path,_11316_dirent.get()._field_name}));;
				jule::Ptr<_2110ec628_File> _12021_file = _2110edb57_new_file_set(_11917__path);;
				_2110eccaa_fill(_12021_file.ptr(), _1e551a8db_read_buff(_12021_file.get()._field_path));
				jule::Slice<_210c3ee2a_Log> _12221_errors = _211109316_lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_21173e7a3_FileInfo> _12721_finfo = _21173eb7c_parse_file(_12021_file);;
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				};
				if ((!(_210ddc638_is_pass_file_annotation(_11316_dirent.get()._field_name)))) {
					goto _iter_next_1aad2685d;
				};
				jule::Bool _13718_r;;
				jule::Slice<_210c3ee2a_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1a85a7982_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1aad2685d;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);;
			}
			_iter_next_1aad2685d:;
			++it;
			goto _iter_begin_1aad2685d;
		}
		_iter_end_1aad2685d:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1a85a74ed_imported(_1e552e218_JuleImporter* _self_, jule::Ptr<_1a8464058_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1aad312a2:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_15516_p.get()._field_link_path == _15335_imp.get()._field_link_path))) {
					return;;
				};
			}
			_iter_next_1aad312a2:;
			++it;
			goto _iter_begin_1aad312a2;
		}
		_iter_end_1aad312a2:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1aad3245c:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15335_imp.get()._field_mod_id=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1aad3245c:;
				++it;
				_16217_i++;
				goto _iter_begin_1aad3245c;
			}
			_iter_end_1aad3245c:;
		};
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_210c3ee2a_Log>> _1a85a7982_is_pass_build_directives(_1e552e218_JuleImporter* _self_, jule::Ptr<_210eb3d6e_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1aad35350:;
		if (it != expr.end()) {
			jule::Ptr<_210eb33e0_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_tag.get()._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1aad35350;
				};
				_210e3d733_DirectiveEval _18421_de = _210e3d733_DirectiveEval(jule::Slice<_210c3ee2a_Log>(),_18021_td,(*_self_)._field_vars);;
				jule::Bool _18817_result = _210e2c5e0_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1aad35350:;
			++it;
			goto _iter_begin_1aad35350;
		}
		_iter_end_1aad35350:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e552e218_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a85aa875_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a85ab090_is_common_ordered_0(jule::Slice<jule::Ptr<_1b396462a_Struct>>& _1837_s, jule::Ptr<_1b396462a_Struct> _1846_t) {
	jule::Ptr<_1b396462a_Struct>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1b396462a_Struct>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1aad67805:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1aad67805;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1aad67805:;
			++it;
			goto _iter_begin_1aad67805;
		}
		_iter_end_1aad67805:;
	};
	return false;
}

inline jule::Bool static__1a85ab090_is_common_ordered_1(jule::Slice<jule::Ptr<_1a8487246_Var>>& _1837_s, jule::Ptr<_1a8487246_Var> _1846_t) {
	jule::Ptr<_1a8487246_Var>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1a8487246_Var>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1aad6ee17:;
		if (it != expr.end()) {
			jule::Ptr<_1a8487246_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1aad6ee17;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1aad6ee17:;
			++it;
			goto _iter_begin_1aad6ee17;
		}
		_iter_end_1aad6ee17:;
	};
	return false;
}



inline void static__1a85ab29e_order_common_0(jule::Slice<jule::Ptr<_1b396462a_Struct>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1aad6257a:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1b396462a_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1aad6257a:;
			++it;
			_4114_j++;
			goto _iter_begin_1aad6257a;
		}
		_iter_end_1aad6257a:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(static__1a85ab090_is_common_ordered_0(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1aad64439:;
			}
			_iter_end_1aad64439:;;
		}
	_iter_next_1aad61ed6:;
	}
	_iter_end_1aad61ed6:;;
}

inline void static__1a85ab29e_order_common_1(jule::Slice<jule::Ptr<_1a8487246_Var>>& _3940_s) {
	jule::I64 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1aad69bd1:;
		if (it != expr.end()) {
			jule::I64 _4114_j = it - expr.begin();
			jule::Ptr<_1a8487246_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1aad69bd1:;
			++it;
			_4114_j++;
			goto _iter_begin_1aad69bd1;
		}
		_iter_end_1aad69bd1:;
	};
	jule::I64 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I64 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(static__1a85ab090_is_common_ordered_1(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I64>((_5021_k + 1LL)));
					};
				}
			_iter_next_1aad6ba90:;
			}
			_iter_end_1aad6ba90:;;
		}
	_iter_next_1aad68020:;
	}
	_iter_end_1aad68020:;;
}



inline void static__1a85ab4ad_order_structures(jule::Slice<jule::Ptr<_1b396462a_Struct>>& _6141_structs) {
	static__1a85ab29e_order_common_0(_6141_structs);
}



inline void static__1a85ab6bc_order_vars(jule::Slice<jule::Ptr<_1a8487246_Var>>& _6735_vars) {
	static__1a85ab29e_order_common_1(_6735_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1a85aaad9_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1a85b1eca_optimize_child(jule::Ptr<_1a85b1a9b_ScopeDeadCode> _self_, jule::Ptr<_1a8438e62_Scope>& _2639_s) {
	jule::Ptr<_1a85b1a9b_ScopeDeadCode> _2717_sdc = jule::new_ptr<_1a85b1a9b_ScopeDeadCode>(_1a85b1a9b_ScopeDeadCode(_self_,_2639_s,(&(_2639_s.get()._field_stmts)),jule::I64()));;
	{
		_1a85b2607_optimize_stmts(_2717_sdc);
	};
}



inline void _1a85b21a6_eliminate_followed(_1a85b1a9b_ScopeDeadCode* _self_) {
	(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	jule::Ptr<_1a85b1a9b_ScopeDeadCode> _3717_parent = (*_self_)._field_parent;;
	while ((_3717_parent != nullptr)) {
		{
			(*(_3717_parent.get()._field_stmts))=(*(_3717_parent.get()._field_stmts)).slice(0LL,(_3717_parent.get()._field_i + 1LL));
			_3717_parent=_3717_parent.get()._field_parent;
		}
	_iter_next_1aad89cab:;
	}
	_iter_end_1aad89cab:;;
}



inline void _1a85b242b_optimize_stmt(jule::Ptr<_1a85b1a9b_ScopeDeadCode> _self_, jule::Any _4444_st) {
	{
		auto &_match_expr{ _4444_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a8438e62_Scope>>()) {
			_case_begin_1aad8bac1:;
			{
				jule::Ptr<_1a8438e62_Scope> _4721_scope = _4444_st.operator jule::Ptr<_1a8438e62_Scope>();;
				if (_4721_scope.get()._field_deferred) {
					_1a85b2915_eliminate_dead_code_of_scope(_4721_scope);
				} else {
					_1a85b1eca_optimize_child(_self_, _4721_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a84d3869_Data>>()) {
			_case_begin_1aad8bb48:;
			{
				{
					auto &_match_expr{ _4444_st.operator jule::Ptr<_1a84d3869_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1b397134b_BuiltinPanicCallExprModel>>()) {
						_case_begin_1aad8d7a4:;
						{
							_1a85b21a6_eliminate_followed(_self_.ptr());
						}
					}
					_match_end_1aad8d74e:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844ce32_RetSt>>()) {
			_case_begin_1aad8bbc0:;
			{
				_1a85b21a6_eliminate_followed(_self_.ptr());
			}
		}
		_match_end_1aad8b98e:;
	};
}



inline void _1a85b2607_optimize_stmts(jule::Ptr<_1a85b1a9b_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1a85b242b_optimize_stmt(_self_, jule::Any((*(_self_.get()._field_stmts))[_self_.get()._field_i]));
		}
	_iter_next_1aad8e651:;
	}
	_iter_end_1aad8e651:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a85b1a9b_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void static__1a85d4e54_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1a85d5086_print(jule::Str _1925_escape, jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__1a85d4e54_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1a85d4c67_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a85d6175_log_flat(_210c3ee2a_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1a85d6384_log_error(_210c3ee2a_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1a85d4e54_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	};
	if (((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1a8305e2d_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1a8305e2d_itoa(_1930_l._field_column));
	};
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _210bd1ae2_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_old_len = _3621_line.len();;
		_3621_line=_210bd1ae2_trim_left(_3621_line,jule::Str("\t", 1));
		if ((_3821_old_len != _3621_line.len())) {
			_3721_offset+=((_3821_old_len - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1a8305e2d_itoa(_1930_l._field_row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_20ecdd3a3_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_20ecdd3a3_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1930_l._field_column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_20ecdd3a3_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1a85d5086_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1a85d6593_log(_210c3ee2a_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1aadcba89:;
			{
				static__1a85d6175_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1aadcbb22:;
			{
				static__1a85d6384_log_error(_6524_l);
			}
		}
		_match_end_1aadcba12:;
	};
}



inline void static__1a85d67a2_print_logs(jule::Slice<_210c3ee2a_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1aadccd87:;
		if (it != expr.end()) {
			_210c3ee2a_Log &_7616_l = *it;
			{
				static__1a85d6593_log(_7616_l);
			}
			_iter_next_1aadccd87:;
			++it;
			goto _iter_begin_1aadccd87;
		}
		_iter_end_1aadccd87:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1a8305e2d_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1a85d5e00_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8cad9a1_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8cba815_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8cbaa02_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8cbaded_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8cbb2e9_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8cbc6a2_ScopeOptimizer> static__1a8cbcb7a_new(jule::Ptr<_1a8438e62_Scope> _4527_scope) {
	return jule::new_ptr<_1a8cbc6a2_ScopeOptimizer>(_1a8cbc6a2_ScopeOptimizer(jule::I64(),_4527_scope));
}



inline void _1a8cbce00_set_current_stmt(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=jule::Any(_5139_stmt);
}



inline void _1a8cbd175_optimize_data(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a84d3869_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1b396b1c0_FnCallExprModel>>()) {
			_case_begin_1aaddc6c1:;
			{
				jule::Ptr<_1b396b1c0_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1b396b1c0_FnCallExprModel>();;
				if (_20dbaa925_PRODUCTION) {
					if (((!(_1a5b33de0_is_builtin(_5821_m.get()._field_func.ptr()))) && _1a8cc1057_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("debug", 5)))) {
						_1a8cbce00_set_current_stmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1aaddc66b:;
	};
	static__1a8cc3785_optimize(_5536_d.get()._field_model);
}



inline void _1a8cbd3ea_optimize_var(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a8487246_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1a8cc3785_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1a8cbd670_optimize_conditional(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a83da5c8_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aade161a:;
		if (it != expr.end()) {
			jule::Ptr<_1a844085e_If> _7721_elif = *it;
			{
				static__1a8cc3785_optimize(_7721_elif.get()._field_expr);
				_1a8cc0980_optimize_child(&(*_self_), _7721_elif.get()._field_scope);
			}
			_iter_next_1aade161a:;
			++it;
			goto _iter_begin_1aade161a;
		}
		_iter_end_1aade161a:;
	};
	if ((_7643_c.get()._field_default != nullptr)) {
		_1a8cc0980_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	};
	if ((!(_20dc77dbb_OPT_COND))) {
		return;;
	};
	jule::Bool _8917_const_case = false;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aade39c4:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1a844085e_If> _9221_elif = *it;
			{
				if ((!(_1a8cc13a9_is_constant_valid_conditional_case(_9221_elif)))) {
					goto _iter_next_1aade39c4;
				};
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_9214_i);
				_7643_c.get()._field_default=jule::new_ptr<_1a83da3db_Else>(_1a83da3db_Else(_9221_elif.get()._field_scope));
				goto _iter_end_1aade39c4;
			}
			_iter_next_1aade39c4:;
			++it;
			_9214_i++;
			goto _iter_begin_1aade39c4;
		}
		_iter_end_1aade39c4:;
	};
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a844085e_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));;
	jule::Ptr<_1a844085e_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1a8cc1c28_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1aade6686:;
	}
	_iter_end_1aade6686:;;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_const_case))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1aade7e5c:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1a844085e_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1aade7e5c:;
			++it;
			_12913_j++;
			goto _iter_begin_1aade7e5c;
		}
		_iter_end_1aade7e5c:;
	};
	if ((_12817_only != -1LL)) {
		_1a8cbce00_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	};
}



inline void _1a8cbda7c_build_default_constat_true_case(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a844ca58_Case> _14554_case, jule::I64& _14572_i, jule::Ptr<_1a844c63a_Match>& _14585_m) {
	_14554_case.get()._field_exprs=nullptr;
	jule::I64 _14713_start = _14572_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14554_case.get()._field_scope.get()._field_stmts.len() == 0LL)) {
				goto _iter_end_1aadea954;
			};
			jule::Any &_15322_stmt = _14554_case.get()._field_scope.get()._field_stmts[(_14554_case.get()._field_scope.get()._field_stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1a844cc45_FallSt>>()) {
					_case_begin_1aadec626:;
					{
						(_14572_i)++;
						if ((_14572_i >= _14585_m.get()._field_cases.len())) {
							_15322_stmt=jule::Any(_14585_m.get()._field_default.get()._field_scope);
							goto _iter_end_1aadea954;
						};
						_14554_case=_14585_m.get()._field_cases[_14572_i];
						_15322_stmt=jule::Any(_14554_case.get()._field_scope);
					}
				}
				else {
					_case_begin_1aadec505:;
					{
						goto _iter_end_1aadea954;
					}
				}
				_match_end_1aadec4a0:;
			};
		}
	_iter_next_1aadea954:;
	}
	_iter_end_1aadea954:;;
	_14585_m.get()._field_default=_14585_m.get()._field_cases[_14713_start];
	_14585_m.get()._field_cases=_14585_m.get()._field_cases.slice(0LL,_14713_start);
}



inline void _1a8cbdce1_optimize_match(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a844c63a_Match> _17137_m) {
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aadee9be:;
		if (it != expr.end()) {
			jule::Ptr<_1a844ca58_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1aae002a5:;
					if (it != expr.end()) {
						jule::Ptr<_1a84d3869_Data> _17325_expr = *it;
						{
							static__1a8cc3785_optimize(_17325_expr.get()._field_model);
						}
						_iter_next_1aae002a5:;
						++it;
						goto _iter_begin_1aae002a5;
					}
					_iter_end_1aae002a5:;
				};
				_1a8cc0980_optimize_child(&(*_self_), _17221_case.get()._field_scope);
			}
			_iter_next_1aadee9be:;
			++it;
			goto _iter_begin_1aadee9be;
		}
		_iter_end_1aadee9be:;
	};
	if ((_17137_m.get()._field_default != nullptr)) {
		_1a8cc0980_optimize_child(&(*_self_), _17137_m.get()._field_default.get()._field_scope);
	};
	if ((!(_20dc77dbb_OPT_COND))) {
		return;;
	};
	jule::Bool _18617_const_case = false;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aae01d78:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1a844ca58_Case> _18925_case = *it;
			{
				if ((!(_1a8cc194d_is_constant_valid_match_case(_18925_case)))) {
					goto _iter_next_1aae01d78;
				};
				_18617_const_case=true;
				_1a8cbda7c_build_default_constat_true_case(&(*_self_), _18925_case,_18918_i,_17137_m);
				goto _iter_end_1aae01d78;
			}
			_iter_next_1aae01d78:;
			++it;
			_18918_i++;
			goto _iter_begin_1aae01d78;
		}
		_iter_end_1aae01d78:;
	};
	if ((_17137_m.get()._field_cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a844ca58_Case>* _20317_i = (&(_17137_m.get()._field_cases[0LL]));;
	jule::Ptr<_1a844ca58_Case>* _20413_end = (&(_17137_m.get()._field_cases[(_17137_m.get()._field_cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1a8cc2003_is_unreachable_match_case((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1aae0474e:;
	}
	_iter_end_1aae0474e:;;
	if ((!(_18617_const_case))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aae05992:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1a844ca58_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1aae05992:;
			++it;
			_21913_j++;
			goto _iter_begin_1aae05992;
		}
		_iter_end_1aae05992:;
	};
	if ((_21817_only != -1LL)) {
		_1a8cbce00_set_current_stmt(&(*_self_), jule::Any(_17137_m.get()._field_cases[_21817_only].get()._field_scope));
	};
}



inline void _1a8cbe066_optimize_range_iter(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a83eb5c8_RangeIter> _23542_it) {
	static__1a8cc3785_optimize(_23542_it.get()._field_expr.get()._field_model);
	_1a8cc0980_optimize_child(&(*_self_), _23542_it.get()._field_scope);
}



inline void _1a8cbe2db_optimize_while_iter(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a83eb3db_WhileIter> _24042_it) {
	static__1a8cc3785_optimize(_24042_it.get()._field_expr);
	_1a8cc070a_optimize_stmt(&(*_self_), jule::Any(_24042_it.get()._field_next));
	_1a8cc0980_optimize_child(&(*_self_), _24042_it.get()._field_scope);
}



inline jule::Bool _1a8cbe5e9_substr(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a844c261_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1b396cc1b_SlicingExprModel>>()) {
			_case_begin_1aae0acc7:;
			{
				jule::Ptr<_1b396cc1b_SlicingExprModel> _24921_sem = _24629_a.get()._field_r.get()._field_model.operator jule::Ptr<_1b396cc1b_SlicingExprModel>();;
				if ((_24921_sem.get()._field_expr == _24629_a.get()._field_l.get()._field_model)) {
					_1a8cbce00_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1a8cbaded_MutSlicingExprModel>(_1a8cbaded_MutSlicingExprModel(_24921_sem.get()._field_token,jule::Any(_24921_sem.get()._field_expr),jule::Any(_24921_sem.get()._field_left),jule::Any(_24921_sem.get()._field_right)))));
					return true;
				};
			}
		}
		_match_end_1aae0ac0b:;
	};
	return false;
}



inline jule::Bool _1a8cbe907_str_insert(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a844c261_Assign> _26333_a) {
	{
		auto &_match_expr{ _26333_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1b39693cc_BinopExprModel>>()) {
			_case_begin_1aae0d714:;
			{
				jule::Ptr<_1b39693cc_BinopExprModel> _26621_m = _26333_a.get()._field_r.get()._field_model.operator jule::Ptr<_1b39693cc_BinopExprModel>();;
				if ((_26621_m.get()._field_right.get()._field_model == _26333_a.get()._field_l.get()._field_model)) {
					_1a8cbce00_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1a8cbb2e9_StrInsertBeginExprModel>(_1a8cbb2e9_StrInsertBeginExprModel(jule::Any(_26333_a.get()._field_l.get()._field_model),jule::Any(_26621_m.get()._field_left.get()._field_model)))));
					return true;
				};
			}
		}
		_match_end_1aae0d648:;
	};
	return false;
}



inline jule::Bool _1a8cbec15_str_assign(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a844c261_Assign> _27833_a) {
	if ((_27833_a.get()._field_op.get()._field_kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1a8512447_Prim> _28213_lp = _1a850eca2_prim(_27833_a.get()._field_l.get()._field_kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1a8515406_is_str(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1a8cbe5e9_substr(&(*_self_), _27833_a) || _1a8cbe907_str_insert(&(*_self_), _27833_a)) {
			_case_begin_1aae1243d:;
			{
				return true;
			}
		}
		_match_end_1aae123c7:;
	};
	return false;
}



inline void _1a8cbee8a_optimize_assign(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a844c261_Assign> _29438_assign) {
	if ((_20dc7741a_OPT_COPY && _1a8cbec15_str_assign(&(*_self_), _29438_assign))) {
		return;;
	};
	static__1a8cc3785_optimize(_29438_assign.get()._field_l.get()._field_model);
	static__1a8cc3785_optimize(_29438_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _29438_assign.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1aae13b6a:;
			{
				if ((_20dc77739_OPT_MATH && (_1a8510e90_strct(_29438_assign.get()._field_l.get()._field_kind.ptr()) == nullptr))) {
					_29438_assign.get()._field_op.get()._field_kind=_29438_assign.get()._field_op.get()._field_kind.slice(0LL,(_29438_assign.get()._field_op.get()._field_kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1b39693cc_BinopExprModel>(_1b39693cc_BinopExprModel(_29438_assign.get()._field_l,_29438_assign.get()._field_r,_29438_assign.get()._field_op)));;
					static__1a8cc3785_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1b39693cc_BinopExprModel>>()) {
							_case_begin_1aae170e1:;
							{
								_29438_assign.get()._field_r=jule::new_ptr<_1b3968e15_OperandExprModel>((*(_29438_assign.get()._field_r)));
								_29438_assign.get()._field_op.get()._field_kind=jule::Str("=", 1);
								_29438_assign.get()._field_r.get()._field_model=jule::Any(_30725_model);
								return;;
							}
						}
						_match_end_1aae1708b:;
					};
					_29438_assign.get()._field_op.get()._field_kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1aae14aa0:;
	};
	if (_20dc775e6_OPT_APPEND) {
		{
			auto &_match_expr{ _29438_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1a5b2a7bb_BuiltinAppendCallExprModel>>()) {
				_case_begin_1aae18b2b:;
				{
					jule::Ptr<_1a5b2a7bb_BuiltinAppendCallExprModel> _32825_m = _29438_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1a5b2a7bb_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1b396b577_SliceExprModel>>()) {
							_case_begin_1aae19a0b:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>() || _match_expr.type_is<jule::Ptr<_1b396d9ca_StructSubIdentExprModel>>()) {
										_case_begin_1aae1a2e2:;
										{
											_1a8cbce00_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1a8cbaa02_PushToSliceExprModel>(_1a8cbaa02_PushToSliceExprModel(jule::Any(_32825_m.get()._field_dest),_32825_m.get()._field_elements.operator jule::Ptr<_1b396b577_SliceExprModel>()))));
										}
									}
									_match_end_1aae1a28c:;
								};
							}
						}
						_match_end_1aae19973:;
					};
				}
			}
			_match_end_1aae18a82:;
		};
	};
}



inline void _1a8cc0210_optimize_multi_assign(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a844c44d_MultiAssign> _34444_assign) {
	{
		auto &expr = _34444_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1aae1a8b9:;
		if (it != expr.end()) {
			jule::I64 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				static__1a8cc3785_optimize(_34521_l);
				_34444_assign.get()._field_l[_34514_i]=jule::Any(_34521_l);
			}
			_iter_next_1aae1a8b9:;
			++it;
			_34514_i++;
			goto _iter_begin_1aae1a8b9;
		}
		_iter_end_1aae1a8b9:;
	};
	static__1a8cc3785_optimize(_34444_assign.get()._field_r);
}



inline void _1a8cc0485_optimize_ret(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a844ce32_RetSt> _35235_r) {
	static__1a8cc3785_optimize(_35235_r.get()._field_expr);
}



inline void _1a8cc070a_optimize_stmt(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Any _35636_stmt) {
	{
		auto &_match_expr{ _35636_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a8438e62_Scope>>()) {
			_case_begin_1aae1d2b2:;
			{
				_1a8cc0980_optimize_child(&(*_self_), _35636_stmt.operator jule::Ptr<_1a8438e62_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a84d3869_Data>>()) {
			_case_begin_1aae1d36c:;
			{
				_1a8cbd175_optimize_data(&(*_self_), _35636_stmt.operator jule::Ptr<_1a84d3869_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
			_case_begin_1aae1d3d3:;
			{
				_1a8cbd3ea_optimize_var(&(*_self_), _35636_stmt.operator jule::Ptr<_1a8487246_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83da5c8_Conditional>>()) {
			_case_begin_1aae1d449:;
			{
				_1a8cbd670_optimize_conditional(&(*_self_), _35636_stmt.operator jule::Ptr<_1a83da5c8_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83eb5c8_RangeIter>>()) {
			_case_begin_1aae1d4b0:;
			{
				_1a8cbe066_optimize_range_iter(&(*_self_), _35636_stmt.operator jule::Ptr<_1a83eb5c8_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83eb3db_WhileIter>>()) {
			_case_begin_1aae1d526:;
			{
				_1a8cbe2db_optimize_while_iter(&(*_self_), _35636_stmt.operator jule::Ptr<_1a83eb3db_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83eb1ee_InfIter>>()) {
			_case_begin_1aae1d58c:;
			{
				_1a8cc0980_optimize_child(&(*_self_), _35636_stmt.operator jule::Ptr<_1a83eb1ee_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844c261_Assign>>()) {
			_case_begin_1aae1d603:;
			{
				_1a8cbee8a_optimize_assign(&(*_self_), _35636_stmt.operator jule::Ptr<_1a844c261_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844c44d_MultiAssign>>()) {
			_case_begin_1aae1d67a:;
			{
				_1a8cc0210_optimize_multi_assign(&(*_self_), _35636_stmt.operator jule::Ptr<_1a844c44d_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844c63a_Match>>()) {
			_case_begin_1aae1d702:;
			{
				_1a8cbdce1_optimize_match(&(*_self_), _35636_stmt.operator jule::Ptr<_1a844c63a_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844ce32_RetSt>>()) {
			_case_begin_1aae1d779:;
			{
				_1a8cc0485_optimize_ret(&(*_self_), _35636_stmt.operator jule::Ptr<_1a844ce32_RetSt>());
			}
		}
		_match_end_1aae1d0b4:;
	};
}



inline void _1a8cc0980_optimize_child(_1a8cbc6a2_ScopeOptimizer* _self_, jule::Ptr<_1a8438e62_Scope> _38337_child) {
	jule::Ptr<_1a8cbc6a2_ScopeOptimizer> _38417_so = static__1a8cbcb7a_new(_38337_child);;
	_1a8cc0b5b_optimize(_38417_so.ptr());
}



inline void _1a8cc0b5b_optimize(_1a8cbc6a2_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1aae25561:;
		if (it != expr.end()) {
			jule::I64 _39014_i = it - expr.begin();
			jule::Any _39021_stmt = *it;
			{
				(*_self_)._field_i=_39014_i;
				_1a8cc070a_optimize_stmt(&(*_self_), jule::Any(_39021_stmt));
			}
			_iter_next_1aae25561:;
			++it;
			_39014_i++;
			goto _iter_begin_1aae25561;
		}
		_iter_end_1aae25561:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a8cbc6a2_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1a8cc3785_optimize(jule::Any& _5333_model) {
	{
		
		if (_20dc77c45_OPT_PTR || _20dc77739_OPT_MATH || _20dc778b0_OPT_ACCESS || _20dc77dbb_OPT_COND) {
			_case_begin_1aae26551:;
			{
				jule::Ptr<_1a8cc2d5b_ExprOptimizer> _6021_exop = jule::new_ptr<_1a8cc2d5b_ExprOptimizer>(_1a8cc2d5b_ExprOptimizer(((jule::Ptr<jule::Any>)((&(_5333_model))))));;
				_1a8cc8c1e_do(_6021_exop.ptr());
			}
		}
		_match_end_1aae25b9e:;
	};
}



inline jule::Bool _1a8cc3a93_str_cond(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b39693cc_BinopExprModel> _6727_m) {
	jule::Ptr<_1a8512447_Prim> _6813_lp = _1a850eca2_prim(_6727_m.get()._field_left.get()._field_kind.ptr());;
	if (((_6813_lp == nullptr) || (!(_1a8515406_is_str(_6813_lp.ptr()))))) {
		return false;
	};
	if (((_6727_m.get()._field_op.get()._field_kind != jule::Str("==", 2)) && (_6727_m.get()._field_op.get()._field_kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6727_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a83a871c_Const>>()) {
			_case_begin_1aae2a1c0:;
			{
				std::tie(_6727_m.get()._field_left,_6727_m.get()._field_right) = std::make_tuple(_6727_m.get()._field_right,_6727_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1aae2a126:;
	};
	{
		auto &_match_expr{ _6727_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a83a871c_Const>>()) {
			_case_begin_1aae29950:;
			{
				goto _match_end_1aae2b05b;
			}
		}
		else {
			_case_begin_1aae2b1c1:;
			{
				return true;
			}
		}
		_match_end_1aae2b05b:;
	};
	_julec_label_opt:;
	jule::Ptr<_1a83a871c_Const> _8713_c = _6727_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a83a871c_Const>();;
	if ((!(_1a83aa1be_read_str(_8713_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6727_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1aae2c4d0:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_6727_m.get()._field_left.get()._field_kind,jule::Any(_6727_m.get()._field_left.get()._field_model),jule::Ptr<_2110e7238_Token>(),jule::Str("empty()", 7))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1aae2c799:;
			{
				jule::Ptr<_2110e7238_Token> _9921_op = _6727_m.get()._field_op;;
				_9921_op.get()._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1b3969784_UnaryExprModel>(_1b3969784_UnaryExprModel(jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::Ptr<_1a850cbe5_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1b396eb96_CommonSubIdentExprModel>(_1b396eb96_CommonSubIdentExprModel(_6727_m.get()._field_left.get()._field_kind,jule::Any(_6727_m.get()._field_left.get()._field_model),jule::Ptr<_2110e7238_Token>(),jule::Str("empty()", 7)))),jule::Bool(),jule::Ptr<_1a83a871c_Const>())),_9921_op)));
			}
		}
		_match_end_1aae2c744:;
	};
	return true;
}



inline void _1a8cc3d18_binary(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b39693cc_BinopExprModel> _11525_m) {
	static__1a8cc3785_optimize(_11525_m.get()._field_left.get()._field_model);
	static__1a8cc3785_optimize(_11525_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11525_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a83a871c_Const>>()) {
			_case_begin_1aae309bc:;
			{
				goto _match_end_1aae31737;
			}
		}
		else {
			_case_begin_1aae3178c:;
			{
				return;;
			}
		}
		_match_end_1aae31737:;
	};
	if ((_20dc77dbb_OPT_COND && _1a8cc3a93_str_cond(&(*_self_), _11525_m))) {
		return;;
	};
	if ((!(_20dc77739_OPT_MATH))) {
		return;;
	};
	{
		auto &_match_expr{ _11525_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aae32925:;
			{
				jule::Bool _13518_ok;;
				jule::U64 _13522_x;;
				std::tie(_13518_ok,_13522_x) = _1a8cc915e_check_for_bit_shift_opt(_11525_m.get()._field_left,_11525_m.get()._field_right);
				if (_13518_ok) {
					_11525_m.get()._field_op.get()._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1a83a871c_Const> _13825_c = _11525_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a83a871c_Const>();;
					_1a83ab16a_set_u64(_13825_c.ptr(), _13522_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1aae3298b:;
			{
				jule::Bool _14318_ok;;
				jule::U64 _14322_x;;
				std::tie(_14318_ok,_14322_x) = _1a8cc915e_check_for_bit_shift_opt(_11525_m.get()._field_left,_11525_m.get()._field_right);
				if (_14318_ok) {
					_11525_m.get()._field_op.get()._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1a83a871c_Const> _14625_c = _11525_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a83a871c_Const>();;
					_1a83ab16a_set_u64(_14625_c.ptr(), _14322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1aae32a02:;
			{
				jule::Ptr<_1a83a871c_Const> _15121_c = _11525_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a83a871c_Const>();;
				jule::F64 _15217_d = _1a83aab70_as_f64(_15121_c.ptr());;
				if ((_15217_d == 2LL)) {
					_11525_m.get()._field_op.get()._field_kind=jule::Str("&", 1);
					_1a83aade5_set_i64(_15121_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1aae3266c:;
	};
	(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a8cad9a1_UnsafeBinopExprModel>(_1a8cad9a1_UnsafeBinopExprModel(_11525_m)));
}



inline void _1a8cc408d_unary(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b3969784_UnaryExprModel> _16324_m) {
	static__1a8cc3785_optimize(_16324_m.get()._field_expr.get()._field_model);
	if ((_20dc77c45_OPT_PTR && (_16324_m.get()._field_op.get()._field_kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16324_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1b3969784_UnaryExprModel>>()) {
				_case_begin_1aae395b9:;
				{
					jule::Ptr<_1b3969784_UnaryExprModel> _16825_um = _16324_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1b3969784_UnaryExprModel>();;
					if ((_16825_um.get()._field_op.get()._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=jule::Any(_16825_um.get()._field_expr.get()._field_model);
					};
				}
			}
			_match_end_1aae394ed:;
		};
	};
}



inline void _1a8cc4313_structure_lit(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396a037_StructLitExprModel> _17632_m) {
	{
		auto &expr = _17632_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1aae3b588:;
		if (it != expr.end()) {
			jule::Ptr<_1b3969b80_StructArgExprModel> _17721_arg = *it;
			{
				static__1a8cc3785_optimize(_17721_arg.get()._field_expr);
			}
			_iter_next_1aae3b588:;
			++it;
			goto _iter_begin_1aae3b588;
		}
		_iter_end_1aae3b588:;
	};
}



inline void _1a8cc4588_alloc_structure(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396a367_AllocStructLitExprModel> _18234_m) {
	_1a8cc4313_structure_lit(&(*_self_), _18234_m.get()._field_lit);
}



inline void _1a8cc480d_casting(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396a895_CastingExprModel> _18626_m) {
	static__1a8cc3785_optimize(_18626_m.get()._field_expr);
}



inline void _1a8cc4a83_args(_1a8cc2d5b_ExprOptimizer* _self_, jule::Slice<jule::Any> _19023_args) {
	{
		auto &expr = _19023_args;
		auto it = expr.begin();
		_iter_begin_1aae3dc50:;
		if (it != expr.end()) {
			jule::I64 _19114_i = it - expr.begin();
			jule::Any _19121_arg = *it;
			{
				static__1a8cc3785_optimize(_19121_arg);
				_19023_args[_19114_i]=jule::Any(_19121_arg);
			}
			_iter_next_1aae3dc50:;
			++it;
			_19114_i++;
			goto _iter_begin_1aae3dc50;
		}
		_iter_end_1aae3dc50:;
	};
}



inline void _1a8cc4d08_scope(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1a8438e62_Scope>& _19725_s) {
	jule::Ptr<_1a8cbc6a2_ScopeOptimizer> _19817_scopt = static__1a8cbcb7a_new(_19725_s);;
	_1a8cc0b5b_optimize(_19817_scopt.ptr());
}



inline void _1a8cc507d_func_call(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396b1c0_FnCallExprModel> _20228_m) {
	static__1a8cc3785_optimize(_20228_m.get()._field_expr);
	_1a8cc4a83_args(&(*_self_), _20228_m.get()._field_args);
	if ((_20228_m.get()._field_except != nullptr)) {
		_1a8cc4d08_scope(&(*_self_), _20228_m.get()._field_except);
	};
}



inline void _1a8cc5303_slice(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396b577_SliceExprModel> _21024_m) {
	_1a8cc4a83_args(&(*_self_), _21024_m.get()._field_elems);
}



inline void _1a8cc5578_array(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396e327_ArrayExprModel> _21424_m) {
	if (((_21424_m.get()._field_elems.len() == 2LL) && (_21424_m.get()._field_elems[1LL] == nullptr))) {
		jule::Any _21621_elem = _21424_m.get()._field_elems[0LL];;
		static__1a8cc3785_optimize(_21621_elem);
		_21424_m.get()._field_elems[0LL]=jule::Any(_21621_elem);
	};
	_1a8cc4a83_args(&(*_self_), _21424_m.get()._field_elems);
}



inline void _1a8cc57ed_indexing(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396b9ea_IndexingExprModel> _22327_m) {
	static__1a8cc3785_optimize(_22327_m.get()._field_expr.get()._field_model);
	static__1a8cc3785_optimize(_22327_m.get()._field_index.get()._field_model);
	if ((!(_20dc778b0_OPT_ACCESS))) {
		return;;
	};
	jule::Bool _22913_array = (_1a8510753_arr(_22327_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);;
	if ((_22913_array && _1a84d422c_is_const(_22327_m.get()._field_index.ptr()))) {
		(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a8cba815_UnsafeIndexingExprModel>(_1a8cba815_UnsafeIndexingExprModel(_22327_m)));
		return;;
	};
	{
		auto &_match_expr{ _22327_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
			_case_begin_1aae4862d:;
			{
				jule::Ptr<_1a8487246_Var> _23917_i = _22327_m.get()._field_index.get()._field_model.operator jule::Ptr<_1a8487246_Var>();;
				if ((_23917_i.get()._field_mutable || (_23917_i.get()._field_iter_relation == nullptr))) {
					goto _match_end_1aae48540;
				};
				{
					auto &_match_expr{ _22327_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
						_case_begin_1aae49c6c:;
						{
							jule::Ptr<_1a8487246_Var> _24521_r = _22327_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1a8487246_Var>();;
							if ((_23917_i.get()._field_iter_relation.get()._field_range == _24521_r)) {
								(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a8cba815_UnsafeIndexingExprModel>(_1a8cba815_UnsafeIndexingExprModel(_22327_m)));
							};
						}
					}
					_match_end_1aae49bc3:;
				};
			}
		}
		_match_end_1aae48540:;
	};
}



inline void _1a8cc5a73_anon_func(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396bda2_AnonFnExprModel> _25628_m) {
	_1a8cc4d08_scope(&(*_self_), _25628_m.get()._field_func.get()._field_scope);
}



inline void _1a8cc5ce8_map(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396c6cc_MapExprModel> _26022_m) {
	{
		auto &expr = _26022_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1aae4c38a:;
		if (it != expr.end()) {
			jule::Ptr<_1b396c259_KeyValPairExprModel> _26121_pair = *it;
			{
				static__1a8cc3785_optimize(_26121_pair.get()._field_key);
				static__1a8cc3785_optimize(_26121_pair.get()._field_val);
			}
			_iter_next_1aae4c38a:;
			++it;
			goto _iter_begin_1aae4c38a;
		}
		_iter_end_1aae4c38a:;
	};
}



inline void _1a8cc606d_slicing(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396cc1b_SlicingExprModel> _26726_m) {
	static__1a8cc3785_optimize(_26726_m.get()._field_expr);
	static__1a8cc3785_optimize(_26726_m.get()._field_left);
	if ((_26726_m.get()._field_right != nullptr)) {
		static__1a8cc3785_optimize(_26726_m.get()._field_right);
	};
}



inline void _1a8cc62e3_trait_sub(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396d25a_TraitSubIdentExprModel> _27528_m) {
	static__1a8cc3785_optimize(_27528_m.get()._field_expr);
}



inline void _1a8cc6568_structure_sub(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396d9ca_StructSubIdentExprModel> _27932_m) {
	static__1a8cc3785_optimize(_27932_m.get()._field_expr.get()._field_model);
}



inline void _1a8cc67dd_common_sub(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396eb96_CommonSubIdentExprModel> _28329_m) {
	static__1a8cc3785_optimize(_28329_m.get()._field_expr);
}



inline void _1a8cc6a63_tuple(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b396ee71_TupleExprModel> _28724_m) {
	{
		auto &expr = _28724_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1aae51e2d:;
		if (it != expr.end()) {
			jule::Ptr<_1a84d3869_Data> _28821_d = *it;
			{
				static__1a8cc3785_optimize(_28821_d.get()._field_model);
			}
			_iter_next_1aae51e2d:;
			++it;
			goto _iter_begin_1aae51e2d;
		}
		_iter_end_1aae51e2d:;
	};
}



inline void _1a8cc6cd8_new_call(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b3970e61_BuiltinNewCallExprModel> _29327_m) {
	if ((_29327_m.get()._field_init != nullptr)) {
		static__1a8cc3785_optimize(_29327_m.get()._field_init);
	};
}



inline void _1a8cc705d_out_call(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b397036c_BuiltinOutCallExprModel> _29927_m) {
	static__1a8cc3785_optimize(_29927_m.get()._field_expr);
}



inline void _1a8cc72d3_outln_call(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b3970757_BuiltinOutlnCallExprModel> _30329_m) {
	static__1a8cc3785_optimize(_30329_m.get()._field_expr);
}



inline void _1a8cc7558_panic_call(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b397134b_BuiltinPanicCallExprModel> _30729_m) {
	static__1a8cc3785_optimize(_30729_m.get()._field_expr);
}



inline void _1a8cc77cd_assert_call(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b3971802_BuiltinAssertCallExprModel> _31130_m) {
	static__1a8cc3785_optimize(_31130_m.get()._field_expr);
}



inline void _1a8cc7a53_error_call(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel> _31529_m) {
	static__1a8cc3785_optimize(_31529_m.get()._field_err);
}



inline void _1a8cc7cc8_make_call(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1a5b2a568_BuiltinMakeCallExprModel> _31928_m) {
	if ((_31928_m.get()._field_len != nullptr)) {
		static__1a8cc3785_optimize(_31928_m.get()._field_len);
	};
	if ((_31928_m.get()._field_cap != nullptr)) {
		static__1a8cc3785_optimize(_31928_m.get()._field_cap);
	};
}



inline void _1a8cc804d_append_call(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1a5b2a7bb_BuiltinAppendCallExprModel> _32830_m) {
	static__1a8cc3785_optimize(_32830_m.get()._field_dest);
	static__1a8cc3785_optimize(_32830_m.get()._field_elements);
}



inline void _1a8cc82c3_clone_call(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1b3970a76_BuiltinCloneCallExprModel> _33329_m) {
	static__1a8cc3785_optimize(_33329_m.get()._field_expr);
}



inline void _1a8cc8548_sizeof(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1a5b2ae70_SizeofExprModel> _33725_m) {
	static__1a8cc3785_optimize(_33725_m.get()._field_expr);
}



inline void _1a8cc87bd_alignof(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1a5b2b5e1_AlignofExprModel> _34126_m) {
	static__1a8cc3785_optimize(_34126_m.get()._field_expr);
}



inline void _1a8cc8a43_integrated_to_str(_1a8cc2d5b_ExprOptimizer* _self_, jule::Ptr<_1a5b2bab9_IntegratedToStrExprModel> _34536_m) {
	static__1a8cc3785_optimize(_34536_m.get()._field_expr);
}



inline void _1a8cc8c1e_do(_1a8cc2d5b_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1a84d3869_Data>>()) {
			_case_begin_1aae5c0d1:;
			{
				(*((*_self_)._field_model))=jule::Any((*((*_self_)._field_model)).operator jule::Ptr<_1a84d3869_Data>().get()._field_model);
				_1a8cc8c1e_do(&(*_self_));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39693cc_BinopExprModel>>()) {
			_case_begin_1aae5c158:;
			{
				_1a8cc3d18_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b39693cc_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3969784_UnaryExprModel>>()) {
			_case_begin_1aae5c422:;
			{
				_1a8cc408d_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b3969784_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396a037_StructLitExprModel>>()) {
			_case_begin_1aae5c488:;
			{
				_1a8cc4313_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396a037_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396a367_AllocStructLitExprModel>>()) {
			_case_begin_1aae5c4ee:;
			{
				_1a8cc4588_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396a367_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396a895_CastingExprModel>>()) {
			_case_begin_1aae5c576:;
			{
				_1a8cc480d_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396a895_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396b1c0_FnCallExprModel>>()) {
			_case_begin_1aae5c5ed:;
			{
				_1a8cc507d_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396b1c0_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396b577_SliceExprModel>>()) {
			_case_begin_1aae5c675:;
			{
				_1a8cc5303_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396b577_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396e327_ArrayExprModel>>()) {
			_case_begin_1aae5c6ec:;
			{
				_1a8cc5578_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396e327_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396b9ea_IndexingExprModel>>()) {
			_case_begin_1aae5c774:;
			{
				_1a8cc57ed_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396b9ea_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396bda2_AnonFnExprModel>>()) {
			_case_begin_1aae5c7eb:;
			{
				_1a8cc5a73_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396bda2_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396c6cc_MapExprModel>>()) {
			_case_begin_1aae5c873:;
			{
				_1a8cc5ce8_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396c6cc_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396cc1b_SlicingExprModel>>()) {
			_case_begin_1aae5c8ea:;
			{
				_1a8cc606d_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396cc1b_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396d25a_TraitSubIdentExprModel>>()) {
			_case_begin_1aae5c972:;
			{
				_1a8cc62e3_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396d25a_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396d9ca_StructSubIdentExprModel>>()) {
			_case_begin_1aae5c9e9:;
			{
				_1a8cc6568_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396d9ca_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396eb96_CommonSubIdentExprModel>>()) {
			_case_begin_1aae5ca71:;
			{
				_1a8cc67dd_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396eb96_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396ee71_TupleExprModel>>()) {
			_case_begin_1aae5cae8:;
			{
				_1a8cc6a63_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b396ee71_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b397036c_BuiltinOutCallExprModel>>()) {
			_case_begin_1aae5cb70:;
			{
				_1a8cc705d_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b397036c_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3970757_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1aae5cbe7:;
			{
				_1a8cc72d3_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b3970757_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3970e61_BuiltinNewCallExprModel>>()) {
			_case_begin_1aae5cc6e:;
			{
				_1a8cc6cd8_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b3970e61_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b397134b_BuiltinPanicCallExprModel>>()) {
			_case_begin_1aae5cce6:;
			{
				_1a8cc7558_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b397134b_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3971802_BuiltinAssertCallExprModel>>()) {
			_case_begin_1aae5cd6d:;
			{
				_1a8cc77cd_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b3971802_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>>()) {
			_case_begin_1aae5cde5:;
			{
				_1a8cc7a53_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2a568_BuiltinMakeCallExprModel>>()) {
			_case_begin_1aae5ce6c:;
			{
				_1a8cc7cc8_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a5b2a568_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2a7bb_BuiltinAppendCallExprModel>>()) {
			_case_begin_1aae5cee4:;
			{
				_1a8cc804d_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a5b2a7bb_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3970a76_BuiltinCloneCallExprModel>>()) {
			_case_begin_1aae5d06b:;
			{
				_1a8cc82c3_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1b3970a76_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2ae70_SizeofExprModel>>()) {
			_case_begin_1aae5d0e3:;
			{
				_1a8cc8548_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a5b2ae70_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2b5e1_AlignofExprModel>>()) {
			_case_begin_1aae5d16a:;
			{
				_1a8cc87bd_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a5b2b5e1_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2bab9_IntegratedToStrExprModel>>()) {
			_case_begin_1aae5d1e2:;
			{
				_1a8cc8a43_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a5b2bab9_IntegratedToStrExprModel>());
			}
		}
		_match_end_1aae5c06a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a8cc2d5b_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8cc9b76_Optimizer> static__1a8cca094_new(jule::Ptr<_1a85a8312_IR>& _2128_ir) {
	return jule::new_ptr<_1a8cc9b76_Optimizer>(_1a8cc9b76_Optimizer(_2128_ir));
}



inline void _1a8cca319_optimize_global(_1a8cc9b76_Optimizer* _self_, jule::Ptr<_1a8487246_Var>& _2739_v) {
	if ((!(_2739_v.get()._field_cpp_linked))) {
		static__1a8cc3785_optimize(_2739_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1a8cca58e_optimize_function(_1a8cc9b76_Optimizer* _self_, jule::Ptr<_1a5b2eeb8_Fn>& _3341_func) {
	if (_3341_func.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _3341_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aae73427:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b33164_FnIns> _3721_ins = *it;
			{
				jule::Ptr<_1a8cbc6a2_ScopeOptimizer> _3821_so = static__1a8cbcb7a_new(_3721_ins.get()._field_scope);;
				_1a8cc0b5b_optimize(_3821_so.ptr());
			}
			_iter_next_1aae73427:;
			++it;
			goto _iter_begin_1aae73427;
		}
		_iter_end_1aae73427:;
	};
}



inline void _1a8cca814_optimize_struct(_1a8cc9b76_Optimizer* _self_, jule::Ptr<_1b396462a_Struct>& _4339_s) {
	if (_4339_s.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _4339_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1aae74b10:;
		if (it != expr.end()) {
			jule::Ptr<_1b39672a9_StructIns> _4721_ins = *it;
			{
				{
					auto &expr = _4721_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1aae755a0:;
					if (it != expr.end()) {
						jule::Ptr<_1b396694b_FieldIns> _4825_f = *it;
						{
							if ((_4825_f.get()._field_default != nullptr)) {
								static__1a8cc3785_optimize(_4825_f.get()._field_default.get()._field_model);
							};
						}
						_iter_next_1aae755a0:;
						++it;
						goto _iter_begin_1aae755a0;
					}
					_iter_end_1aae755a0:;
				};
				{
					auto &expr = _4721_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1aae75d75:;
					if (it != expr.end()) {
						jule::Ptr<_1a5b2eeb8_Fn> _5325_m = *it;
						{
							_1a8cca58e_optimize_function(&(*_self_), _5325_m);
						}
						_iter_next_1aae75d75:;
						++it;
						goto _iter_begin_1aae75d75;
					}
					_iter_end_1aae75d75:;
				};
			}
			_iter_next_1aae74b10:;
			++it;
			goto _iter_begin_1aae74b10;
		}
		_iter_end_1aae74b10:;
	};
}



inline void _1a8ccaa89_optimize_globals(_1a8cc9b76_Optimizer* _self_, jule::Ptr<_1a8466c1a_Package>& _5940_p) {
	{
		auto &expr = _5940_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aae771d9:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _6021_f = *it;
			{
				{
					auto &expr = _6021_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1aae77926:;
					if (it != expr.end()) {
						jule::Ptr<_1a8487246_Var> _6125_v = *it;
						{
							_1a8cca319_optimize_global(&(*_self_), _6125_v);
						}
						_iter_next_1aae77926:;
						++it;
						goto _iter_begin_1aae77926;
					}
					_iter_end_1aae77926:;
				};
			}
			_iter_next_1aae771d9:;
			++it;
			goto _iter_begin_1aae771d9;
		}
		_iter_end_1aae771d9:;
	};
}



inline void _1a8ccad0e_optimize_functions(_1a8cc9b76_Optimizer* _self_, jule::Ptr<_1a8466c1a_Package>& _6742_p) {
	{
		auto &expr = _6742_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aae787a1:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _6821_f = *it;
			{
				{
					auto &expr = _6821_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1aae78edd:;
					if (it != expr.end()) {
						jule::Ptr<_1a5b2eeb8_Fn> _6925_func = *it;
						{
							_1a8cca58e_optimize_function(&(*_self_), _6925_func);
						}
						_iter_next_1aae78edd:;
						++it;
						goto _iter_begin_1aae78edd;
					}
					_iter_end_1aae78edd:;
				};
			}
			_iter_next_1aae787a1:;
			++it;
			goto _iter_begin_1aae787a1;
		}
		_iter_end_1aae787a1:;
	};
}



inline void _1a8ccb084_optimize_structs(_1a8cc9b76_Optimizer* _self_, jule::Ptr<_1a8466c1a_Package>& _7540_p) {
	{
		auto &expr = _7540_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aae79c58:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _7621_f = *it;
			{
				{
					auto &expr = _7621_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1aae7a53e:;
					if (it != expr.end()) {
						jule::Ptr<_1b396462a_Struct> _7725_s = *it;
						{
							_1a8cca814_optimize_struct(&(*_self_), _7725_s);
						}
						_iter_next_1aae7a53e:;
						++it;
						goto _iter_begin_1aae7a53e;
					}
					_iter_end_1aae7a53e:;
				};
			}
			_iter_next_1aae79c58:;
			++it;
			goto _iter_begin_1aae79c58;
		}
		_iter_end_1aae79c58:;
	};
}



inline void _1a8ccb309_optimize_package(_1a8cc9b76_Optimizer* _self_, jule::Ptr<_1a8466c1a_Package>& _8340_p) {
	_1a8ccaa89_optimize_globals(&(*_self_), _8340_p);
	_1a8ccad0e_optimize_functions(&(*_self_), _8340_p);
	_1a8ccb084_optimize_structs(&(*_self_), _8340_p);
}



inline void _1a8ccb4d5_optimize(_1a8cc9b76_Optimizer* _self_) {
	{
		
		if (_20dc77dbb_OPT_COND || _20dc775e6_OPT_APPEND || _20dc7741a_OPT_COPY) {
			_case_begin_1aae7cb07:;
			{
				goto _match_end_1aae7c5a7;
			}
		}
		else {
			_case_begin_1aae7c673:;
			{
				return;;
			}
		}
		_match_end_1aae7c5a7:;
	};
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1aae7ce7b:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _10021_u = *it;
			{
				if ((!(_10021_u.get()._field_cpp_linked))) {
					_1a8ccb309_optimize_package(&(*_self_), _10021_u.get()._field_package);
				};
			}
			_iter_next_1aae7ce7b:;
			++it;
			goto _iter_begin_1aae7ce7b;
		}
		_iter_end_1aae7ce7b:;
	};
	_1a8ccb309_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
}







std::ostream &operator<<(std::ostream &_Stream, _1a8cc9b76_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1a8d4b038_unix(_1a8d4ab4d_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1a8d506e1_unix_year_to_seconds(_5717_y,_5617_leap);;
	_6817_t+=_1a8d50a76_unix_month_to_seconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_hour);
	_6817_t+=(60LLU * (*_self_)._field_minute);
	_6817_t+=(*_self_)._field_second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d4ab4d_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1a8d4b324_Time static__1a8d4b6ba_unix(jule::U64 _9124_sec) {
	return _1a8d4b324_Time(_9124_sec);
}



inline _1a8d4b324_Time static__1a8d4b8b8_now(void) {
	return static__1a8d4b6ba_unix(static_cast<jule::U64>(_1a8d503a0_unix()));
}



inline jule::U64 _1a8d4bd19_unix(_1a8d4b324_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1a8d4c07d_day(_1a8d4b324_Time* _self_) {
	return _1a8d4d007_abs(&(*_self_))._field_day;
}



inline jule::U64 _1a8d4c2e2_month(_1a8d4b324_Time* _self_) {
	return _1a8d4d007_abs(&(*_self_))._field_month;
}



inline jule::U64 _1a8d4c556_year(_1a8d4b324_Time* _self_) {
	return _1a8d4d007_abs(&(*_self_))._field_year;
}



inline jule::U64 _1a8d4c7ba_second(_1a8d4b324_Time* _self_) {
	return _1a8d4d007_abs(&(*_self_))._field_second;
}



inline jule::U64 _1a8d4ca2e_minute(_1a8d4b324_Time* _self_) {
	return _1a8d4d007_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1a8d4cc93_hour(_1a8d4b324_Time* _self_) {
	return _1a8d4d007_abs(&(*_self_))._field_hour;
}



inline _1a8d4ab4d_AbsTime _1a8d4d007_abs(_1a8d4b324_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_rem_secs = (_12713_secs % 86400LL);;
	if ((_12917_rem_secs < 0LLU)) {
		_12917_rem_secs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qc_cycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_rem_days = (_12817_days % 146097LL);;
	if ((_13617_rem_days < 0LLU)) {
		_13617_rem_days+=146097LLU;
		(_13517_qc_cycles)--;
	};
	jule::U64 _14217_c_cycles = (_13617_rem_days / 36524LLU);;
	if ((_14217_c_cycles == 4LLU)) {
		(_14217_c_cycles)--;
	};
	_13617_rem_days-=(_14217_c_cycles * 36524LLU);
	jule::U64 _14817_q_cycles = (_13617_rem_days / 1461LLU);;
	if ((_14817_q_cycles == 25LLU)) {
		(_14817_q_cycles)--;
	};
	_13617_rem_days-=(_14817_q_cycles * 1461LLU);
	jule::U64 _15417_rem_years = (_13617_rem_days / 365LLU);;
	if ((_15417_rem_years == 4LLU)) {
		(_15417_rem_years)--;
	};
	_13617_rem_days-=(_15417_rem_years * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_rem_years == 0LLU) && ((_14817_q_cycles > 0LLU) || (_14217_c_cycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_y_day = (((_13617_rem_days + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_y_day >= (365LLU + _16017_leap))) {
		_16417_y_day-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1a8d4a19c_MDAYS[static_cast<jule::I64>(_16917_months)] <= _13617_rem_days); (_16917_months)++) {
		{
			_13617_rem_days-=_1a8d4a19c_MDAYS[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1aaea2c92:;
	}
	_iter_end_1aaea2c92:;;
	_1a8d4ab4d_AbsTime _17417_t = _1a8d4ab4d_AbsTime();;
	_17417_t._field_year=static_cast<jule::U64>(((((_15417_rem_years + (4LLU * _14817_q_cycles)) + (100LLU * _14217_c_cycles)) + (400LLU * _13517_qc_cycles)) + 100LLU));
	_17417_t._field_month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_month >= 12LLU)) {
		_17417_t._field_month-=12LLU;
		(_17417_t._field_year)++;
	};
	_17417_t._field_month+=1LLU;
	_17417_t._field_year+=1900LLU;
	_17417_t._field_day=static_cast<jule::U64>((_13617_rem_days + 1LLU));
	_17417_t._field_week_day=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_week_day < 0LLU)) {
		_17417_t._field_week_day+=7LLU;
	};
	_17417_t._field_year_day=_16417_y_day;
	_17417_t._field_hour=static_cast<jule::U64>((_12917_rem_secs / 3600LLU));
	_17417_t._field_minute=static_cast<jule::U64>(((_12917_rem_secs / 60LLU) % 60LL));
	_17417_t._field_second=static_cast<jule::U64>((_12917_rem_secs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d4b324_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 static__1a8d4d722_nanoseconds(jule::I64 _22731_d) {
	return static_cast<jule::I64>((_22731_d * 1LL));
}



inline jule::I64 static__1a8d4d9b9_microseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>((_23232_d * 1000LL));
}



inline jule::I64 static__1a8d4dc61_milliseconds(jule::I64 _23732_d) {
	return static_cast<jule::I64>((_23732_d * 1000000LL));
}



inline jule::I64 static__1a8d4e008_seconds(jule::I64 _24227_d) {
	return static_cast<jule::I64>((_24227_d * 1000000000LL));
}



inline jule::I64 static__1a8d4e2a0_minutes(jule::I64 _24727_d) {
	return static_cast<jule::I64>((_24727_d * 60000000000LL));
}



inline jule::I64 static__1a8d4e547_hours(jule::I64 _25225_d) {
	return static_cast<jule::I64>((_25225_d * 3600000000000LL));
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d4d2e3_Duration _Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8bbc7b1_ScopeCoder> static__1a8bc4345_new(jule::Ptr<_1a8d14287_ObjectCoder>& _4724_oc) {
	return jule::new_ptr<_1a8bbc7b1_ScopeCoder>(_1a8bbc7b1_ScopeCoder(_4724_oc));
}



inline void _1a8bdeae1_range_index_iter(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a83eb5c8_RangeIter>& _5341_it) {
	jule::Str _5413_begin = static__1a8cd9dea_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_5341_it)));;
	jule::Str _5513_next = static__1a8cda439_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_5341_it)));;
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a8d24671_add_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_20dc7741a_OPT_COPY && _1a8cb7636_is_copy_optimizable(_5341_it.get()._field_expr))) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1a8cd0dbe_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_5341_it.get()._field_expr.get()._field_model));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, _5413_begin);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1a8d24671_add_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	if ((_5341_it.get()._field_key_a != nullptr)) {
		_1a8d52c43_var_init_expr(_self_.get()._field_oc, _5341_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a8d35385_indent(_self_.get()._field_oc);
	};
	if ((_5341_it.get()._field_key_b != nullptr)) {
		if (_20dc7741a_OPT_COPY) {
			_5341_it.get()._field_key_b.get()._field_reference=_1a8cb7768_is_iter_copy_optimizable(_5341_it.get()._field_expr,_5341_it.get()._field_key_b);
		};
		_1a8d52c43_var_init_expr(_self_.get()._field_oc, _5341_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a8d35385_indent(_self_.get()._field_oc);
	};
	_1a8c098ec_scope(_self_, _5341_it.get()._field_scope);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, _5513_next);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a8d35385_indent(_self_.get()._field_oc);
	if ((_5341_it.get()._field_key_a != nullptr)) {
		_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd9b53_var(_5341_it.get()._field_key_a));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1a8d35385_indent(_self_.get()._field_oc);
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a8d23e56_write(_self_.get()._field_oc, _5413_begin);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a8d24d8b_done_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cda192_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_5341_it))));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a8d24d8b_done_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a8be2242_range_hashmap_iter(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a83eb5c8_RangeIter>& _12143_it) {
	jule::Str _12213_begin = static__1a8cd9dea_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_12143_it)));;
	jule::Str _12313_next = static__1a8cda439_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_12143_it)));;
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a8d24671_add_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_20dc7741a_OPT_COPY && _1a8cb7636_is_copy_optimizable(_12143_it.get()._field_expr))) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1a8cd0dbe_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_12143_it.get()._field_expr.get()._field_model));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, _12213_begin);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1a8d24671_add_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	if ((_12143_it.get()._field_key_a != nullptr)) {
		if (_20dc7741a_OPT_COPY) {
			_12143_it.get()._field_key_a.get()._field_reference=_1a8cb7768_is_iter_copy_optimizable(_12143_it.get()._field_expr,_12143_it.get()._field_key_a);
		};
		_1a8d52c43_var_init_expr(_self_.get()._field_oc, _12143_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a8d35385_indent(_self_.get()._field_oc);
	};
	if ((_12143_it.get()._field_key_b != nullptr)) {
		if (_20dc7741a_OPT_COPY) {
			_12143_it.get()._field_key_b.get()._field_reference=_1a8cb7768_is_iter_copy_optimizable(_12143_it.get()._field_expr,_12143_it.get()._field_key_b);
		};
		_1a8d52c43_var_init_expr(_self_.get()._field_oc, _12143_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a8d35385_indent(_self_.get()._field_oc);
	};
	_1a8c098ec_scope(_self_, _12143_it.get()._field_scope);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, _12313_next);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a8d23e56_write(_self_.get()._field_oc, _12213_begin);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a8d24d8b_done_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cda192_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_12143_it))));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a8d24d8b_done_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a8beeeec_if_case(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844085e_If> _18731_i) {
	if ((_18731_i.get()._field_expr != nullptr)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_18731_i.get()._field_expr));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1a8c098ec_scope(_self_, _18731_i.get()._field_scope);
}



inline void _1a8c07796_conditional(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a83da5c8_Conditional> _19635_c) {
	jule::Bool _19717_writed = false;;
	{
		auto &expr = _19635_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ab01d03d:;
		if (it != expr.end()) {
			jule::Ptr<_1a844085e_If> _19821_elif = *it;
			{
				if ((_19821_elif == nullptr)) {
					goto _iter_next_1ab01d03d;
				};
				if (_19717_writed) {
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_19717_writed=true;
				_1a8beeeec_if_case(_self_, _19821_elif);
			}
			_iter_next_1ab01d03d:;
			++it;
			goto _iter_begin_1ab01d03d;
		}
		_iter_end_1ab01d03d:;
	};
	if ((_19635_c.get()._field_default != nullptr)) {
		if (_19717_writed) {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1a8c098ec_scope(_self_, _19635_c.get()._field_default.get()._field_scope);
	};
}



inline void _1a8c08456_inf_iter(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a83eb1ee_InfIter> _21632_it) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1a8d24671_add_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8c098ec_scope(_self_, _21632_it.get()._field_scope);
	_1a8d24d8b_done_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cda439_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_21632_it))));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cda192_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_21632_it))));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a8c69385_while_iter(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a83eb3db_WhileIter> _23334_it) {
	if (((_23334_it.get()._field_expr != nullptr) && (_23334_it.get()._field_next == nullptr))) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_23334_it.get()._field_expr));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_23334_it.get()._field_expr != nullptr)) {
			_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_23334_it.get()._field_expr));
		};
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_23334_it.get()._field_next != nullptr)) {
			_1a8bc3c3a_st(_self_, jule::Any(_23334_it.get()._field_next));
		};
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1a8d24671_add_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8c098ec_scope(_self_, _23334_it.get()._field_scope);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a8d24d8b_done_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cda439_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_23334_it))));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cda192_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_23334_it))));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a8c69c37_range_iter(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a83eb5c8_RangeIter> _26634_it) {
	{
		
		if ((_1a85109b7_slc(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab030d0e:;
			{
				_1a8bdeae1_range_index_iter(_self_, _26634_it);
			}
		}
		else if ((_1a8510753_arr(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab030a01:;
			{
				_1a8bdeae1_range_index_iter(_self_, _26634_it);
			}
		}
		else if ((_1a8511468_map(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab030a67:;
			{
				_1a8be2242_range_hashmap_iter(_self_, _26634_it);
			}
		}
		else {
			_case_begin_1ab03098a:;
			{
				_1a8bdeae1_range_index_iter(_self_, _26634_it);
			}
		}
		_match_end_1ab0308be:;
	};
}



inline void _1a8c6e148_cont(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a8429282_ContSt> _27924_c) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cda439_iter_next(_27924_c.get()._field_it));
}



inline void _1a8c76c11_label(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844bb9a_Label> _28425_l) {
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cda6d1_label(_28425_l.get()._field_ident));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1a8c7a7c5_goto_st(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844bd87_GotoSt> _28927_gt) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cda6d1_label(_28927_gt.get()._field_ident));
}



inline void _1a8c7ab27_postfix(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844c074_Postfix> _29431_p) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_29431_p.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1a8d23e56_write(_self_.get()._field_oc, _29431_p.get()._field_op);
}



inline void _1a8c7b5b7_assign(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844c261_Assign> _30130_a) {
	_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30130_a.get()._field_l.get()._field_model));
	_1a8d23e56_write(_self_.get()._field_oc, _30130_a.get()._field_op.get()._field_kind);
	_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30130_a.get()._field_r.get()._field_model));
}



inline void _1a8c7db2a_multi_assign(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844c44d_MultiAssign> _30736_a) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _30736_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1ab03d4c0:;
		if (it != expr.end()) {
			jule::I64 _30914_i = it - expr.begin();
			jule::Any _30921_l = *it;
			{
				if ((_30921_l == nullptr)) {
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30921_l));
				};
				if (((_30736_a.get()._field_l.len() - _30914_i) > 1LL)) {
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1ab03d4c0:;
			++it;
			_30914_i++;
			goto _iter_begin_1ab03d4c0;
		}
		_iter_end_1ab03d4c0:;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30736_a.get()._field_r));
}



inline jule::Fn<void(void)> _1a8c7e510_match_expr(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844c63a_Match> _32334_m) {
	if ((!(_1a84d422c_is_const(_32334_m.get()._field_expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1a83ac303_is_bool(_32334_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1a83a9e5a_read_bool(_32334_m.get()._field_expr.get()._field_constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a8cd0dbe_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_32334_m.get()._field_expr.get()._field_model));
		});
	};
	return nullptr;
}



inline void _1a8c7ede5_case(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844c63a_Match> _33328_m, jule::Ptr<_1a844ca58_Case> _33343_c) {
	if (((_33343_c.get()._field_exprs.len() != 0LL) && (!(_1a842965b_is_generic_type_match(_33328_m.ptr()))))) {
		if (((_33328_m.get()._field_cases.len() > 0LL) && (_33328_m.get()._field_cases[0LL] == _33343_c))) {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _33343_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1ab046d14:;
			if (it != expr.end()) {
				jule::I64 _34018_i = it - expr.begin();
				jule::Ptr<_1a84d3869_Data> _34025_expr = *it;
				{
					{
						
						if ((!(_33328_m.get()._field_type_match))) {
							_case_begin_1ab048079:;
							{
								jule::Fn<void(void)> _34325_case_expr = _1a8c7e510_match_expr(_self_, _33328_m);;
								if (_1a84d453a_good_operand(_33328_m.get()._field_expr.ptr(), _34025_expr)) {
									if ((_34325_case_expr != nullptr)) {
										_34325_case_expr();
										_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
								} else {
									_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
									if ((_34325_case_expr != nullptr)) {
										_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_34325_case_expr();
									};
								};
							}
						}
						else {
							_case_begin_1ab047c05:;
							{
								_1a8d23e56_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
								_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1ab047b39:;
					};
					if (((_33343_c.get()._field_exprs.len() - _34018_i) > 1LL)) {
						_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1ab046d14:;
				++it;
				_34018_i++;
				goto _iter_begin_1ab046d14;
			}
			_iter_end_1ab046d14:;
		};
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_33328_m.get()._field_default == _33343_c) && (_33328_m.get()._field_cases.len() != 0LL))) {
		_1a8d35385_indent(_self_.get()._field_oc);
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1a8d24671_add_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cdac20_case_begin(static_cast<jule::U64>(static_cast<jule::U64>(_33343_c))));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_33343_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_1a8d35385_indent(_self_.get()._field_oc);
		_1a8c098ec_scope(_self_, _33343_c.get()._field_scope);
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1a8d24d8b_done_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a8c807ca_match_st(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844c63a_Match> _39232_m) {
	if (((_39232_m.get()._field_cases.len() == 0LL) && (_39232_m.get()._field_default == nullptr))) {
		return;;
	};
	jule::Bool _39713_generic_type_match = _1a842965b_is_generic_type_match(_39232_m.ptr());;
	if ((_39713_generic_type_match && ((_39232_m.get()._field_default == nullptr) || (_39232_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL)))) {
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a8d24671_add_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	if (((!(_39713_generic_type_match)) && (!(_1a84d422c_is_const(_39232_m.get()._field_expr.ptr()))))) {
		if ((_20dc7741a_OPT_COPY && _1a8cb7636_is_copy_optimizable(_39232_m.get()._field_expr))) {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_39232_m.get()._field_expr.get()._field_model));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1a8d35385_indent(_self_.get()._field_oc);
	};
	if ((_39232_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _39232_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1ab05a762:;
			if (it != expr.end()) {
				jule::Ptr<_1a844ca58_Case> _42125_c = *it;
				{
					if ((_42125_c == nullptr)) {
						goto _iter_next_1ab05a762;
					};
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a8d35385_indent(_self_.get()._field_oc);
					_1a8c7ede5_case(_self_, _39232_m,_42125_c);
				}
				_iter_next_1ab05a762:;
				++it;
				goto _iter_begin_1ab05a762;
			}
			_iter_end_1ab05a762:;
		};
	};
	if ((_39232_m.get()._field_default != nullptr)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a8c7ede5_case(_self_, _39232_m,_39232_m.get()._field_default);
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cda978_match_end(static_cast<jule::U64>(static_cast<jule::U64>(_39232_m))));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a8d24d8b_done_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a8c811b0_fall_st(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844cc45_FallSt> _44827_f) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cdac20_case_begin(_44827_f.get()._field_dest_case));
}



inline void _1a8c832b1_break_st(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a842946e_BreakSt> _45328_b) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_45328_b.get()._field_it != 0LLU)) {
		_1a8d23e56_write(_self_.get()._field_oc, static__1a8cda192_iter_end(_45328_b.get()._field_it));
	} else {
		_1a8d23e56_write(_self_.get()._field_oc, static__1a8cda978_match_end(_45328_b.get()._field_mtch));
	};
}



inline void _1a8c840d6_ret_with_vars(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844ce32_RetSt> _46237_r) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_46237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_46237_r.get()._field_func.get()._field_result));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_46237_r.get()._field_vars.len() > 1LL)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _46237_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1ab0677c4:;
		if (it != expr.end()) {
			jule::I64 _47214_i = it - expr.begin();
			jule::Ptr<_1a8487246_Var> _47221_v = *it;
			{
				if (_2110e9988_is_ignore_ident(_47221_v.get()._field_ident)) {
					_1a8cd163e_init_expr(_self_.get()._field_oc.get()._field_ec, _47221_v.get()._field_kind.get()._field_kind);
				} else {
					_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd9b53_var(_47221_v));
				};
				if (((_46237_r.get()._field_vars.len() - _47214_i) > 1LL)) {
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1ab0677c4:;
			++it;
			_47214_i++;
			goto _iter_begin_1ab0677c4;
		}
		_iter_end_1ab0677c4:;
	};
	if ((_46237_r.get()._field_vars.len() > 1LL)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_46237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a8c84988_ret_tuple(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844ce32_RetSt> _49233_r) {
	jule::Slice<jule::Ptr<_1a84d3869_Data>> _49317_datas = _49233_r.get()._field_expr.operator jule::Ptr<_1b396ee71_TupleExprModel>().get()._field_datas;;
	{
		auto &expr = _49233_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1ab06d16a:;
		if (it != expr.end()) {
			jule::I64 _49414_i = it - expr.begin();
			jule::Ptr<_1a8487246_Var> _49421_v = *it;
			{
				if (_2110e9988_is_ignore_ident(_49421_v.get()._field_ident)) {
					goto _iter_next_1ab06d16a;
				};
				jule::Any _49821_model = _49317_datas[_49414_i].get()._field_model;;
				if ((_49821_model == _49421_v)) {
					goto _iter_next_1ab06d16a;
				};
				_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd9b53_var(_49421_v));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_49821_model));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1a8d35385_indent(_self_.get()._field_oc);
			}
			_iter_next_1ab06d16a:;
			++it;
			_49414_i++;
			goto _iter_begin_1ab06d16a;
		}
		_iter_end_1ab06d16a:;
	};
	if (_49233_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_49233_r.get()._field_func.get()._field_result));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _49317_datas;
		auto it = expr.begin();
		_iter_begin_1ab0736ae:;
		if (it != expr.end()) {
			jule::I64 _51914_i = it - expr.begin();
			jule::Ptr<_1a84d3869_Data> _51921_d = *it;
			{
				jule::Ptr<_1a8487246_Var> _52021_v = _49233_r.get()._field_vars[_51914_i];;
				if (_2110e9988_is_ignore_ident(_52021_v.get()._field_ident)) {
					_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_51921_d.get()._field_model));
				} else {
					_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd9b53_var(_52021_v));
				};
				if (((_49317_datas.len() - _51914_i) > 1LL)) {
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1ab0736ae:;
			++it;
			_51914_i++;
			goto _iter_begin_1ab0736ae;
		}
		_iter_end_1ab0736ae:;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_49233_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a8c8533a_ret_with_exprs(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844ce32_RetSt> _53738_r) {
	if ((_53738_r.get()._field_vars.len() > 1LL)) {
		_1a8c84988_ret_tuple(_self_, _53738_r);
		return;;
	};
	if ((_53738_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1a8487246_Var> _54521_v = _53738_r.get()._field_vars[0LL];;
		if (((!(_2110e9988_is_ignore_ident(_54521_v.get()._field_ident))) && (_53738_r.get()._field_expr != _54521_v))) {
			jule::Str _54721_ident = static__1a8cd9b53_var(_54521_v);;
			_1a8d23e56_write(_self_.get()._field_oc, _54721_ident);
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1a8d35385_indent(_self_.get()._field_oc);
			if (_53738_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_53738_r.get()._field_func.get()._field_result));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1a8d23e56_write(_self_.get()._field_oc, _54721_ident);
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1a8d23e56_write(_self_.get()._field_oc, _54721_ident);
			};
			return;;
		};
	};
	if (_53738_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_53738_r.get()._field_func.get()._field_result));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
	return;;
}



inline void _1a8c85e62_ret_st(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a844ce32_RetSt> _58130_r) {
	if (((_58130_r.get()._field_expr == nullptr) && (_58130_r.get()._field_vars.len() == 0LL))) {
		if (_58130_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58130_r.get()._field_expr == nullptr)) {
		_1a8c840d6_ret_with_vars(_self_, _58130_r);
		return;;
	};
	_1a8c8533a_ret_with_exprs(_self_, _58130_r);
}



inline void _1a8bbd097_ret_with_defaults(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a850cbe5_TypeKind> _59941_result) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if ((_1a85116cc_tup(_59941_result.ptr()) != nullptr)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
		jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> _60321_types = _1a85116cc_tup(_59941_result.ptr()).get()._field_types;;
		{
			auto &expr = _60321_types;
			auto it = expr.begin();
			_iter_begin_1ab087ad0:;
			if (it != expr.end()) {
				jule::I64 _60418_i = it - expr.begin();
				jule::Ptr<_1a850cbe5_TypeKind> _60425_t = *it;
				{
					_1a8cd163e_init_expr(_self_.get()._field_oc.get()._field_ec, _60425_t);
					if (((_60321_types.len() - _60418_i) > 1LL)) {
						_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1ab087ad0:;
				++it;
				_60418_i++;
				goto _iter_begin_1ab087ad0;
			}
			_iter_end_1ab087ad0:;
		};
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1a8cd163e_init_expr(_self_.get()._field_oc.get()._field_ec, _59941_result);
	};
}



inline void _1a8bbd54d_var(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a8487246_Var> _61627_v) {
	if ((!(_61627_v.get()._field_constant))) {
		_1a8d52d75_var(_self_.get()._field_oc, _61627_v);
	};
}



inline void _1a8bc3c3a_st(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Any _62326_st) {
	if ((_62326_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _62326_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a8438e62_Scope>>()) {
			_case_begin_1ab08bd7b:;
			{
				_1a8c098ec_scope(_self_, _62326_st.operator jule::Ptr<_1a8438e62_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
			_case_begin_1ab08c882:;
			{
				_1a8bbd54d_var(_self_, _62326_st.operator jule::Ptr<_1a8487246_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a84d3869_Data>>()) {
			_case_begin_1ab08c8e8:;
			{
				_1a8cd1144_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_62326_st.operator jule::Ptr<_1a84d3869_Data>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83da5c8_Conditional>>()) {
			_case_begin_1ab08c95e:;
			{
				_1a8c07796_conditional(_self_, _62326_st.operator jule::Ptr<_1a83da5c8_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83eb1ee_InfIter>>()) {
			_case_begin_1ab08c9c5:;
			{
				_1a8c08456_inf_iter(_self_, _62326_st.operator jule::Ptr<_1a83eb1ee_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83eb3db_WhileIter>>()) {
			_case_begin_1ab08ca3b:;
			{
				_1a8c69385_while_iter(_self_, _62326_st.operator jule::Ptr<_1a83eb3db_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83eb5c8_RangeIter>>()) {
			_case_begin_1ab08caa2:;
			{
				_1a8c69c37_range_iter(_self_, _62326_st.operator jule::Ptr<_1a83eb5c8_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8429282_ContSt>>()) {
			_case_begin_1ab08cb18:;
			{
				_1a8c6e148_cont(_self_, _62326_st.operator jule::Ptr<_1a8429282_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844bb9a_Label>>()) {
			_case_begin_1ab08cb7e:;
			{
				_1a8c76c11_label(_self_, _62326_st.operator jule::Ptr<_1a844bb9a_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844bd87_GotoSt>>()) {
			_case_begin_1ab08cbe5:;
			{
				_1a8c7a7c5_goto_st(_self_, _62326_st.operator jule::Ptr<_1a844bd87_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844c074_Postfix>>()) {
			_case_begin_1ab08cc5b:;
			{
				_1a8c7ab27_postfix(_self_, _62326_st.operator jule::Ptr<_1a844c074_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844c261_Assign>>()) {
			_case_begin_1ab08ccc2:;
			{
				_1a8c7b5b7_assign(_self_, _62326_st.operator jule::Ptr<_1a844c261_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844c44d_MultiAssign>>()) {
			_case_begin_1ab08cd38:;
			{
				_1a8c7db2a_multi_assign(_self_, _62326_st.operator jule::Ptr<_1a844c44d_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844c63a_Match>>()) {
			_case_begin_1ab08cd9e:;
			{
				_1a8c807ca_match_st(_self_, _62326_st.operator jule::Ptr<_1a844c63a_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844cc45_FallSt>>()) {
			_case_begin_1ab08ce26:;
			{
				_1a8c811b0_fall_st(_self_, _62326_st.operator jule::Ptr<_1a844cc45_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a842946e_BreakSt>>()) {
			_case_begin_1ab08ce9d:;
			{
				_1a8c832b1_break_st(_self_, _62326_st.operator jule::Ptr<_1a842946e_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844ce32_RetSt>>()) {
			_case_begin_1ab08d025:;
			{
				_1a8c85e62_ret_st(_self_, _62326_st.operator jule::Ptr<_1a844ce32_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8cbaa02_PushToSliceExprModel>>()) {
			_case_begin_1ab08d09c:;
			{
				_1a8cce7b3_push_to_slice(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1a8cbaa02_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8cbaded_MutSlicingExprModel>>()) {
			_case_begin_1ab08d124:;
			{
				_1a8cd08c4_mut_slicing(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1a8cbaded_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8cbb2e9_StrInsertBeginExprModel>>()) {
			_case_begin_1ab08d19b:;
			{
				_1a8cd0b49_str_insert_begin(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1a8cbb2e9_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1ab08c057:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1ab08c002:;
	};
}



inline void _1a8cb05da_scope_stmts(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a8438e62_Scope>& _67336_s) {
	{
		auto &expr = _67336_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1ab09a692:;
		if (it != expr.end()) {
			jule::Any _67421_st = *it;
			{
				_1a8d35385_indent(_self_.get()._field_oc);
				_1a8bc3c3a_st(_self_, jule::Any(_67421_st));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1ab09a692:;
			++it;
			goto _iter_begin_1ab09a692;
		}
		_iter_end_1ab09a692:;
	};
}



inline void _1a8c098ec_scope(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a8438e62_Scope> _68229_s) {
	_1a8d24671_add_indent(_self_.get()._field_oc);
	if (_68229_s.get()._field_deferred) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a8cb05da_scope_stmts(_self_, _68229_s);
	_1a8d24d8b_done_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_68229_s.get()._field_deferred) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1a8c111c8_func_scope(jule::Ptr<_1a8bbc7b1_ScopeCoder> _self_, jule::Ptr<_1a5b33164_FnIns> _69834_f) {
	if ((_69834_f.get()._field_scope == nullptr)) {
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a8d24671_add_indent(_self_.get()._field_oc);
	if ((!(_1a5b30419_is_void(_69834_f.get()._field_decl.ptr())))) {
		jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> _70521_types = _1a5b33b7b_types(_69834_f.ptr());;
		{
			auto &expr = _69834_f.get()._field_decl.get()._field_result.get()._field_idents;
			auto it = expr.begin();
			_iter_begin_1ab0a2028:;
			if (it != expr.end()) {
				jule::I64 _70617_i = it - expr.begin();
				jule::Ptr<_2110e7238_Token> _70620_ident = *it;
				{
					if ((_2110e9988_is_ignore_ident(_70620_ident.get()._field_kind) || _2110e9c30_is_anon_ident(_70620_ident.get()._field_kind))) {
						goto _iter_next_1ab0a2028;
					};
					_1a8d35385_indent(_self_.get()._field_oc);
					_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_70521_types[_70617_i]));
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd8547_to_local(_70620_ident.get()._field_row,_70620_ident.get()._field_column,_70620_ident.get()._field_kind));
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1a8cd163e_init_expr(_self_.get()._field_oc.get()._field_ec, _70521_types[_70617_i]);
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1ab0a2028:;
				++it;
				_70617_i++;
				goto _iter_begin_1ab0a2028;
			}
			_iter_end_1ab0a2028:;
		};
	};
	_1a8cb05da_scope_stmts(_self_, _69834_f.get()._field_scope);
	if ((_69834_f.get()._field_decl.get()._field_exceptional && _1a5b30419_is_void(_69834_f.get()._field_decl.ptr()))) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1a8d24d8b_done_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1a8bbc7b1_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8b7e4cb_ExprCoder> static__1a8c511a2_new(jule::Ptr<_1a8d14287_ObjectCoder>& _8924_oc) {
	return jule::new_ptr<_1a8b7e4cb_ExprCoder>(_1a8b7e4cb_ExprCoder(_8924_oc));
}



inline void _1a8c512d4_string(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a83a871c_Const>& _9527_c) {
	jule::Str _9613_content = _1a83aa1be_read_str(_9527_c.ptr());;
	if ((_9613_content.len() == 0LL)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10113_bytes = static_cast<jule::Slice<jule::U8>>(_9613_content);;
	jule::Str _10213_len = _1a8305ceb_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10113_bytes.len())),10LL);;
	jule::Str _10313_lit = _1a8cd2310_cstr_lit(_10113_bytes);;
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a8d23e56_write(_self_.get()._field_oc, _10313_lit);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a8d23e56_write(_self_.get()._field_oc, _10213_len);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8cad066_boolean(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a83a871c_Const>& _11228_c) {
	if (_1a83a9e5a_read_bool(_11228_c.ptr())) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1a8cad198_nil_lit(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1a8cad2ca_ftoa_special_cases(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::F64& _12439_x) {
	{
		
		if (_1a826ee52_is_nan(_12439_x)) {
			_case_begin_1ab0b2599:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1a824a625_is_inf(_12439_x,1LL)) {
			_case_begin_1ab0b1db2:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1a824a625_is_inf(_12439_x,-1LL)) {
			_case_begin_1ab0b1e28:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1ab0b1d4b:;
			{
				return false;
			}
		}
		_match_end_1ab0b1c80:;
	};
	return true;
}



inline void _1a8c5158c_float32(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a83a871c_Const>& _13828_c) {
	jule::F64 _13913_x = _1a83aab70_as_f64(_13828_c.ptr());;
	if (_1a8cad2ca_ftoa_special_cases(_self_, _13913_x)) {
		return;;
	};
	{
		
		if ((_13913_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1ab0b5943:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_13913_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1ab0b5668:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1ab0b5602:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, _1a8cd2651_ftoa(_13913_x,32LL));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1ab0b52e4:;
	};
}



inline void _1a8c516be_float64(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a83a871c_Const>& _15728_c) {
	jule::F64 _15813_x = _1a83aab70_as_f64(_15728_c.ptr());;
	if (_1a8cad2ca_ftoa_special_cases(_self_, _15813_x)) {
		return;;
	};
	{
		
		if ((_15813_x == jule::MAX_F64)) {
			_case_begin_1ab0b9260:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_15813_x == jule::MIN_F64)) {
			_case_begin_1ab0b8e85:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1ab0b8e1e:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, _1a8cd2651_ftoa(_15813_x,64LL));
			}
		}
		_match_end_1ab0b8ced:;
	};
}



inline void _1a8c51801_constant(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a83a871c_Const> _17632_c, jule::Bool _17643_fx32) {
	{
		
		if (_1a83ac567_is_str(_17632_c.ptr())) {
			_case_begin_1ab0bbb69:;
			{
				_1a8c512d4_string(_self_, _17632_c);
			}
		}
		else if (_1a83ac303_is_bool(_17632_c.ptr())) {
			_case_begin_1ab0bbbd0:;
			{
				_1a8cad066_boolean(_self_, _17632_c);
			}
		}
		else if (_1a83ac7cb_is_f64(_17632_c.ptr())) {
			_case_begin_1ab0bbc46:;
			{
				{
					
					if (_17643_fx32) {
						_case_begin_1ab0be2dc:;
						{
							_1a8c5158c_float32(_self_, _17632_c);
						}
					}
					else {
						_case_begin_1ab0bdd25:;
						{
							_1a8c516be_float64(_self_, _17632_c);
						}
					}
					_match_end_1ab0bdc59:;
				};
			}
		}
		else if (_1a83abd2a_is_i64(_17632_c.ptr())) {
			_case_begin_1ab0bbcac:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, _1a8cd28e8_itoa(static_cast<jule::I64>(_1a83a9982_read_i64(_17632_c.ptr()))));
			}
		}
		else if (_1a83ac08e_is_u64(_17632_c.ptr())) {
			_case_begin_1ab0bc670:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, _1a8cd2b90_utoa(static_cast<jule::U64>(_1a83a9be6_read_u64(_17632_c.ptr()))));
			}
		}
		else if (_1a83aca40_is_nil(_17632_c.ptr())) {
			_case_begin_1ab0bc6d6:;
			{
				_1a8cad198_nil_lit(_self_);
			}
		}
		else {
			_case_begin_1ab0bbb03:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1ab0bba59:;
	};
}



inline void _1a8ccb6c2_div_by_zero_binary(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_2110e7238_Token>& _20039_op, jule::Ptr<_1b3968e15_OperandExprModel>& _20056_l, jule::Ptr<_1b3968e15_OperandExprModel>& _20083_r) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20039_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1ab0c3214:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1ab0c32be:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1ab0c31ae:;
	};
	if ((!(_20dbaa925_PRODUCTION))) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a8d20b45_loc_info(_self_.get()._field_oc, _20039_op);
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a8cd1144_expr(_self_, jule::Any(_20056_l.get()._field_model));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a8cd1144_expr(_self_, jule::Any(_20083_r.get()._field_model));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8ccb804_unsafe_binary(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b39693cc_BinopExprModel> _22237_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a8cd0dbe_model(_self_, jule::Any(_22237_m.get()._field_left.get()._field_model));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a8d23e56_write(_self_.get()._field_oc, _22237_m.get()._field_op.get()._field_kind);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a8cd0dbe_model(_self_, jule::Any(_22237_m.get()._field_right.get()._field_model));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8ccb936_binary(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b39693cc_BinopExprModel> _23230_m) {
	{
		auto &_match_expr{ _23230_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1ab0cb4a3:;
			{
				if ((_1a8510e90_strct(_23230_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					_1a8ccb6c2_div_by_zero_binary(_self_, _23230_m.get()._field_op,_23230_m.get()._field_left,_23230_m.get()._field_right);
					return;;
				};
			}
		}
		_match_end_1ab0cb3e8:;
	};
	_1a8ccb804_unsafe_binary(_self_, _23230_m);
}



inline void _1a8ccba68_var(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a8487246_Var> _24427_m) {
	if (_24427_m.get()._field_cpp_linked) {
		jule::Ptr<_210eb33e0_Directive> _24617_d = _1a8d5c91d_find_directive(_24427_m.get()._field_directives,jule::Str("namespace", 9));;
		if ((_24617_d != nullptr)) {
			_1a8d23e56_write(_self_.get()._field_oc, _1a8d55905_concat_all_parts(_24617_d.get()._field_args));
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd9b53_var(_24427_m));
}



inline void _1a8ccbb9a_structure(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396462a_Struct> _25529_m) {
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d59ac4_structure(_25529_m));
}



inline void _1a8ccbccc_structure_ins(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b39672a9_StructIns> _25937_m) {
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d59d6b_structure_ins(_25937_m));
}



inline void _1a8ccbe0e_unary(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b3969784_UnaryExprModel> _26329_m) {
	{
		auto &_match_expr{ _26329_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ab0d408d:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1a8cd1144_expr(_self_, jule::Any(_26329_m.get()._field_expr.get()._field_model));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ab0d4104:;
			{
				if ((_20dbaa925_PRODUCTION || (_1a8510016_sptr(_26329_m.get()._field_expr.get()._field_kind.ptr()) == nullptr))) {
					goto _match_end_1ab0d3ed3;
				};
				_1a8cd1144_expr(_self_, jule::Any(_26329_m.get()._field_expr.get()._field_model));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1a8d20b45_loc_info(_self_.get()._field_oc, _26329_m.get()._field_op);
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1ab0d3ed3:;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a8d23e56_write(_self_.get()._field_oc, _26329_m.get()._field_op.get()._field_kind);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a8cd1144_expr(_self_, jule::Any(_26329_m.get()._field_expr.get()._field_model));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a8ccc041_cpp_structure_lit(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396a037_StructLitExprModel> _28741_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d59d6b_structure_ins(_28741_m.get()._field_strct));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("){", 2));
	if ((_28741_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _28741_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ab0dba8a:;
			if (it != expr.end()) {
				jule::Ptr<_1b396694b_FieldIns> _29325_f = *it;
				{
					if (_28741_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
						{
							auto &expr = _28741_m.get()._field_args;
							auto it = expr.begin();
							_iter_begin_1ab0dc63a:;
							if (it != expr.end()) {
								jule::I64 _29526_i = it - expr.begin();
								jule::Ptr<_1b3969b80_StructArgExprModel> _29533_arg = *it;
								{
									if ((_29533_arg.get()._field_field == _29325_f)) {
										_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".", 1));
										_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd98ab_field(_29325_f.get()._field_decl));
										_1a8d23e56_write(_self_.get()._field_oc, jule::Str("=", 1));
										_1a8cd1144_expr(_self_, jule::Any(_29533_arg.get()._field_expr));
										if (((_28741_m.get()._field_args.len() - _29526_i) > 1LL)) {
											_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
										};
										goto _iter_next_1ab0dba8a;
									};
								}
								_iter_next_1ab0dc63a:;
								++it;
								_29526_i++;
								goto _iter_begin_1ab0dc63a;
							}
							_iter_end_1ab0dc63a:;
						};
						goto _iter_next_1ab0dba8a;
					};
					_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd98ab_field(_29325_f.get()._field_decl));
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(": ", 2));
					{
						auto &expr = _28741_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1ab0e17b5:;
						if (it != expr.end()) {
							jule::I64 _31122_i = it - expr.begin();
							jule::Ptr<_1b3969b80_StructArgExprModel> _31129_arg = *it;
							{
								if ((_31129_arg.get()._field_field == _29325_f)) {
									_1a8cd1144_expr(_self_, jule::Any(_31129_arg.get()._field_expr));
									if (((_28741_m.get()._field_args.len() - _31122_i) > 1LL)) {
										_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
									};
									goto _iter_next_1ab0dba8a;
								};
							}
							_iter_next_1ab0e17b5:;
							++it;
							_31122_i++;
							goto _iter_begin_1ab0e17b5;
						}
						_iter_end_1ab0e17b5:;
					};
					_1a8cd163e_init_expr(_self_, _29325_f.get()._field_kind);
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
				}
				_iter_next_1ab0dba8a:;
				++it;
				goto _iter_begin_1ab0dba8a;
			}
			_iter_end_1ab0dba8a:;
		};
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a8ccc173_structure_lit(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396a037_StructLitExprModel> _32737_m) {
	if (_32737_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1a8ccc041_cpp_structure_lit(_self_, _32737_m);
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd9614_structure_ins(_32737_m.get()._field_strct));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
	if ((_32737_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _32737_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ab0e737b:;
			if (it != expr.end()) {
				jule::I64 _33718_i = it - expr.begin();
				jule::Ptr<_1b396694b_FieldIns> _33725_f = *it;
				{
					{
						auto &expr = _32737_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1ab0e7c3e:;
						if (it != expr.end()) {
							jule::Ptr<_1b3969b80_StructArgExprModel> _33829_arg = *it;
							{
								if ((_33829_arg.get()._field_field == _33725_f)) {
									_1a8cd1144_expr(_self_, jule::Any(_33829_arg.get()._field_expr));
									if (((_32737_m.get()._field_strct.get()._field_fields.len() - _33718_i) > 1LL)) {
										_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
									};
									goto _iter_next_1ab0e737b;
								};
							}
							_iter_next_1ab0e7c3e:;
							++it;
							goto _iter_begin_1ab0e7c3e;
						}
						_iter_end_1ab0e7c3e:;
					};
					_1a8cd163e_init_expr(_self_, _33725_f.get()._field_kind);
					if (((_32737_m.get()._field_strct.get()._field_fields.len() - _33718_i) > 1LL)) {
						_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1ab0e737b:;
				++it;
				_33718_i++;
				goto _iter_begin_1ab0e737b;
			}
			_iter_end_1ab0e737b:;
		};
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8ccc2a5_alloc_structure(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396a367_AllocStructLitExprModel> _35639_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd9614_structure_ins(_35639_m.get()._field_lit.get()._field_strct));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a8ccc173_structure_lit(_self_, _35639_m.get()._field_lit);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8ccc3d7_casting(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396a895_CastingExprModel> _36431_m) {
	{
		
		if (((_1a850eca2_prim(_36431_m.get()._field_kind.ptr()) != nullptr) && _1a851566a_is_any(_1a850eca2_prim(_36431_m.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ab0ee62a:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_36431_m.get()._field_kind));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a8cd0dbe_model(_self_, jule::Any(_36431_m.get()._field_expr));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1a851027a_ptr(_36431_m.get()._field_expr_kind.ptr()) != nullptr) || (_1a851027a_ptr(_36431_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab0ee691:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_36431_m.get()._field_kind));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1a8cd1144_expr(_self_, jule::Any(_36431_m.get()._field_expr));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1a8511204_trt(_36431_m.get()._field_expr_kind.ptr()) != nullptr) || ((_1a850eca2_prim(_36431_m.get()._field_expr_kind.ptr()) != nullptr) && _1a851566a_is_any(_1a850eca2_prim(_36431_m.get()._field_expr_kind.ptr()).ptr()))) {
			_case_begin_1ab0ee707:;
			{
				_1a8cd0dbe_model(_self_, jule::Any(_36431_m.get()._field_expr));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_20dbaa925_PRODUCTION) {
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_36431_m.get()._field_kind));
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if (((_1a8511204_trt(_36431_m.get()._field_expr_kind.ptr()) != nullptr) && (_1a8510016_sptr(_36431_m.get()._field_kind.ptr()) != nullptr))) {
						_1a8d23e56_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_1a8510016_sptr(_36431_m.get()._field_kind.ptr()).get()._field_elem));
					} else {
						_1a8d23e56_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_36431_m.get()._field_kind));
					};
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1a8d20b45_loc_info(_self_.get()._field_oc, _36431_m.get()._field_token);
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1a8511204_trt(_36431_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab0ee76d:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_36431_m.get()._field_kind));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a8cd1144_expr(_self_, jule::Any(_36431_m.get()._field_expr));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a8d23e56_write(_self_.get()._field_oc, _1a8305e2d_itoa(static_cast<jule::I64>(_1a8d26376_find_type_offset(_self_.get()._field_oc.ptr(), _1a8511204_trt(_36431_m.get()._field_kind.ptr()),_36431_m.get()._field_expr_kind))));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1ab0ee5b4:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_36431_m.get()._field_kind));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1a8cd1144_expr(_self_, jule::Any(_36431_m.get()._field_expr));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1ab0ee4e8:;
	};
}



inline void _1a8ccc519_args(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Slice<jule::Any> _41428_args) {
	if ((_41428_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _41428_args;
		auto it = expr.begin();
		_iter_begin_1ab112c26:;
		if (it != expr.end()) {
			jule::I64 _41814_i = it - expr.begin();
			jule::Any _41821_a = *it;
			{
				_1a8cd1144_expr(_self_, jule::Any(_41821_a));
				if (((_41428_args.len() - _41814_i) > 1LL)) {
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1ab112c26:;
			++it;
			_41814_i++;
			goto _iter_begin_1ab112c26;
		}
		_iter_end_1ab112c26:;
	};
}



inline void _1a8ccc64b_model_for_call(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Any _42638_expr) {
	{
		auto &_match_expr{ _42638_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a5b33164_FnIns>>()) {
			_case_begin_1ab1149b4:;
			{
				_1a8ccdbd0_func_ins(_self_, _42638_expr.operator jule::Ptr<_1a5b33164_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396d9ca_StructSubIdentExprModel>>()) {
			_case_begin_1ab114a3b:;
			{
				jule::Ptr<_1b396d9ca_StructSubIdentExprModel> _43221_ssie = _42638_expr.operator jule::Ptr<_1b396d9ca_StructSubIdentExprModel>();;
				if ((_43221_ssie.get()._field_method != nullptr)) {
					_1a8ccdbd0_func_ins(_self_, _43221_ssie.get()._field_method);
					return;;
				};
			}
		}
		_match_end_1ab114893:;
	};
	_1a8cd0dbe_model(_self_, jule::Any(_42638_expr));
}



inline void _1a8ccc77d_push_call_inf(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396b1c0_FnCallExprModel>& _44134_m) {
	if ((_20dbaa925_PRODUCTION || ((!(_44134_m.get()._field_func.get()._field_anon)) && (!(_1a8cd32ab_is_builtin_call_has_debuginf(_44134_m)))))) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_44134_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _44134_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1b396d9ca_StructSubIdentExprModel>>()) {
				_case_begin_1ab118a1d:;
				{
					if (_44134_m.get()._field_expr.operator jule::Ptr<_1b396d9ca_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1ab118c3d;
				}
			}
			else {
				_case_begin_1ab118c3d:;
				{
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1ab118bd8:;
		};
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1a8d20b45_loc_info(_self_.get()._field_oc, _44134_m.get()._field_token);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_44134_m.get()._field_args.len() != 0LL)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1a8ccc8b0_is_wrapped(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396b1c0_FnCallExprModel>& _46635_m) {
	if ((((!(_1a5b33de0_is_builtin(_46635_m.get()._field_func.ptr()))) && (_46635_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1a5b2dca8_is_self(_46635_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _46635_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1b396d9ca_StructSubIdentExprModel>>()) {
				_case_begin_1ab11d171:;
				{
					jule::Ptr<_1b396d9ca_StructSubIdentExprModel> _47025_ssie = _46635_m.get()._field_expr.operator jule::Ptr<_1b396d9ca_StructSubIdentExprModel>();;
					{
						
						if (_1a5b2e01c_is_ref(_46635_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()) || (_1a8510016_sptr(_47025_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1ab11e381:;
							{
								goto _match_end_1ab11dd31;
							}
						}
						else {
							_case_begin_1ab11dd97:;
							{
								if ((_1a8510e90_strct(_47025_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									if ((!(_47025_ssie.get()._field_expr.get()._field_lvalue))) {
										_1a8d23e56_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1a8cd0dbe_model(_self_, jule::Any(_47025_ssie.get()._field_expr));
										_1a8d23e56_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1ab11dd31:;
					};
				}
			}
			_match_end_1ab11d0d8:;
		};
	};
	return false;
}



inline void _1a8ccc9e2_pure_func_call(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396b1c0_FnCallExprModel>& _49039_m) {
	jule::Bool _49113_wrapped = _1a8ccc8b0_is_wrapped(_self_, _49039_m);;
	if (_49039_m.get()._field_is_co) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1a8ccc64b_model_for_call(_self_, jule::Any(_49039_m.get()._field_expr));
	if ((!(_1a5b33de0_is_builtin(_49039_m.get()._field_func.ptr())))) {
		if ((_49039_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_49039_m.get()._field_func.get()._field_generics.len() > 0LL))) {
			if ((!(_1a8d5cca3_has_directive(_49039_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _49039_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1ab125b29:;
					if (it != expr.end()) {
						jule::I64 _50026_i = it - expr.begin();
						jule::Ptr<_1a850cbe5_TypeKind> _50033_g = *it;
						{
							_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_50033_g));
							if (((_49039_m.get()._field_func.get()._field_generics.len() - _50026_i) > 1LL)) {
								_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1ab125b29:;
						++it;
						_50026_i++;
						goto _iter_begin_1ab125b29;
					}
					_iter_end_1ab125b29:;
				};
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1a8ccc77d_push_call_inf(_self_, _49039_m);
	jule::Bool _51117_locinfo = false;;
	if ((((!(_1a5b33de0_is_builtin(_49039_m.get()._field_func.ptr()))) && (_49039_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1a5b2dca8_is_self(_49039_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _49039_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1b396d9ca_StructSubIdentExprModel>>()) {
				_case_begin_1ab1293d0:;
				{
					jule::Ptr<_1b396d9ca_StructSubIdentExprModel> _51525_ssie = _49039_m.get()._field_expr.operator jule::Ptr<_1b396d9ca_StructSubIdentExprModel>();;
					{
						
						if (_1a5b2e01c_is_ref(_49039_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1ab12a90e:;
							{
								_1a8cd0dbe_model(_self_, jule::Any(_51525_ssie.get()._field_expr));
							}
						}
						else if ((_1a8510016_sptr(_51525_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1ab12bca6:;
							{
								_1a8cd0dbe_model(_self_, jule::Any(_51525_ssie.get()._field_expr));
								_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_20dbaa925_PRODUCTION))) {
									_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1a8d20b45_loc_info(_self_.get()._field_oc, _49039_m.get()._field_token);
									_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1ab12a17d:;
							{
								if ((_1a8510e90_strct(_51525_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_1a8d23e56_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_49113_wrapped) {
									_1a8d23e56_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1a8cd0dbe_model(_self_, jule::Any(_51525_ssie.get()._field_expr));
								};
							}
						}
						_match_end_1ab12a117:;
					};
					if ((_49039_m.get()._field_args.len() > 0LL)) {
						_1a8d23e56_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1b396d25a_TraitSubIdentExprModel>>()) {
				_case_begin_1ab129479:;
				{
					_1a8cd0dbe_model(_self_, jule::Any(_49039_m.get()._field_expr.operator jule::Ptr<_1b396d25a_TraitSubIdentExprModel>().get()._field_expr));
					if ((!(_20dbaa925_PRODUCTION))) {
						_51117_locinfo=true;
					};
					if ((_49039_m.get()._field_args.len() > 0LL)) {
						_1a8d23e56_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1ab129336:;
		};
	};
	_1a8ccc519_args(_self_, _49039_m.get()._field_args);
	if (_51117_locinfo) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1a8d20b45_loc_info(_self_.get()._field_oc, _49039_m.get()._field_token);
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_49113_wrapped) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_49039_m.get()._field_is_co) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a8cccb24_func_call(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396b1c0_FnCallExprModel> _56933_m) {
	if (((_1a5b33de0_is_builtin(_56933_m.get()._field_func.ptr()) || (!(_56933_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_56933_m.get()._field_except != nullptr) && (_56933_m.get()._field_except.get()._field_stmts.len() == 0LL)))) {
		_1a8ccc9e2_pure_func_call(_self_, _56933_m);
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a8d24671_add_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1a8ccc9e2_pure_func_call(_self_, _56933_m);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a8d35385_indent(_self_.get()._field_oc);
	if ((_56933_m.get()._field_except != nullptr)) {
		if (((_56933_m.get()._field_func.get()._field_result == nullptr) || (!(_56933_m.get()._field_assigned)))) {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1a8c098ec_scope(_self_.get()._field_oc.get()._field_sc, _56933_m.get()._field_except);
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _59121_forwarded = _1a8cd2ec0_is_forwarded(_56933_m.get()._field_except);;
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_59121_forwarded) {
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1a8c098ec_scope(_self_.get()._field_oc.get()._field_sc, _56933_m.get()._field_except);
			if (_59121_forwarded) {
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1a8cd163e_init_expr(_self_, _56933_m.get()._field_func.get()._field_result);
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1a8d24d8b_done_indent(_self_.get()._field_oc);
	} else {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a8d20b45_loc_info(_self_.get()._field_oc, _56933_m.get()._field_token);
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1a5b30419_is_void(_56933_m.get()._field_func.get()._field_decl.ptr())))) {
			_1a8d35385_indent(_self_.get()._field_oc);
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1a8d24d8b_done_indent(_self_.get()._field_oc);
	};
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a8cccc56_slice(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396b577_SliceExprModel> _62029_m) {
	if ((_62029_m.get()._field_elems.len() == 0LL)) {
		_1a8d23e56_write(_self_.get()._field_oc, static__1a8d58c9e_as_slice(_62029_m.get()._field_elem_kind));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d58c9e_as_slice(_62029_m.get()._field_elem_kind));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1a8ccc519_args(_self_, _62029_m.get()._field_elems);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a8cccd88_indexing(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396b9ea_IndexingExprModel> _63232_m) {
	_1a8cd0dbe_model(_self_, jule::Any(_63232_m.get()._field_expr.get()._field_model));
	{
		
		if (_20dbaa925_PRODUCTION || (_1a851027a_ptr(_63232_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1a8511468_map(_63232_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab14da0e:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a8cd1144_expr(_self_, jule::Any(_63232_m.get()._field_index.get()._field_model));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1ab14d68a:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1a8d20b45_loc_info(_self_.get()._field_oc, _63232_m.get()._field_token);
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1a8cd1144_expr(_self_, jule::Any(_63232_m.get()._field_index.get()._field_model));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1ab14d613:;
	};
}



inline void _1a8ccceba_unsafe_indexing(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a8cba815_UnsafeIndexingExprModel> _65139_m) {
	_1a8cd0dbe_model(_self_, jule::Any(_65139_m.get()._field_node.get()._field_expr.get()._field_model));
	{
		
		if (_20dbaa925_PRODUCTION || (_1a851027a_ptr(_65139_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1a8511468_map(_65139_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab153c01:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a8cd1144_expr(_self_, jule::Any(_65139_m.get()._field_node.get()._field_index.get()._field_model));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1ab15387c:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("__at(", 5));
				_1a8cd1144_expr(_self_, jule::Any(_65139_m.get()._field_node.get()._field_index.get()._field_model));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1ab153805:;
	};
}



inline void _1a8ccd0ec_anon_func(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396bda2_AnonFnExprModel> _66833_m) {
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b1d0_func(_66833_m.get()._field_func));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1a8d52b11_params_ins(_self_.get()._field_oc, _66833_m.get()._field_func.get()._field_params);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5ab91_func_ins_result(_66833_m.get()._field_func));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a8c111c8_func_scope(_self_.get()._field_oc.get()._field_sc, _66833_m.get()._field_func);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8ccd22e_map(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396c6cc_MapExprModel> _67927_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_67927_m.get()._field_key_kind));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_67927_m.get()._field_val_kind));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_67927_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _67927_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1ab15ed72:;
			if (it != expr.end()) {
				jule::I64 _68618_i = it - expr.begin();
				jule::Ptr<_1b396c259_KeyValPairExprModel> _68625_pair = *it;
				{
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1a8cd1144_expr(_self_, jule::Any(_68625_pair.get()._field_key));
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1a8cd1144_expr(_self_, jule::Any(_68625_pair.get()._field_val));
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_67927_m.get()._field_entries.len() - _68618_i) > 1LL)) {
						_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1ab15ed72:;
				++it;
				_68618_i++;
				goto _iter_begin_1ab15ed72;
			}
			_iter_end_1ab15ed72:;
		};
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a8ccd361_slicing(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396cc1b_SlicingExprModel> _70031_m) {
	_1a8cd0dbe_model(_self_, jule::Any(_70031_m.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_20dbaa925_PRODUCTION))) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a8d20b45_loc_info(_self_.get()._field_oc, _70031_m.get()._field_token);
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a8cd1144_expr(_self_, jule::Any(_70031_m.get()._field_left));
	if ((_70031_m.get()._field_right != nullptr)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a8cd1144_expr(_self_, jule::Any(_70031_m.get()._field_right));
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8ccd493_trait_sub(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396d25a_TraitSubIdentExprModel> _71633_m) {
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd8d2d_trait_decl(_71633_m.get()._field_trt));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1a8cd0dbe_model(_self_, jule::Any(_71633_m.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd87de_func(_71633_m.get()._field_method));
}



inline void _1a8ccd5c5_structure_sub(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396d9ca_StructSubIdentExprModel> _72537_m) {
	_1a8cd0dbe_model(_self_, jule::Any(_72537_m.get()._field_expr));
	if ((_72537_m.get()._field_field != nullptr)) {
		if ((_1a851027a_ptr(_72537_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1a8510016_sptr(_72537_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_20dbaa925_PRODUCTION))) {
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1a8d20b45_loc_info(_self_.get()._field_oc, _72537_m.get()._field_token);
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd98ab_field(_72537_m.get()._field_field.get()._field_decl));
	};
}



inline void _1a8ccd707_common_ident(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396e613_CommonIdentExprModel> _74532_m) {
	_1a8d23e56_write(_self_.get()._field_oc, _74532_m.get()._field_ident);
}



inline void _1a8ccd839_common_sub(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396eb96_CommonSubIdentExprModel> _74934_m) {
	_1a8cd0dbe_model(_self_, jule::Any(_74934_m.get()._field_expr));
	{
		
		if ((_1a851027a_ptr(_74934_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1ab173407:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1a8510016_sptr(_74934_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1ab1730b6:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_20dbaa925_PRODUCTION))) {
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a8d20b45_loc_info(_self_.get()._field_oc, _74934_m.get()._field_token);
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n", 1));
				};
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1ab173050:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1ab172ed9:;
	};
	_1a8d23e56_write(_self_.get()._field_oc, _74934_m.get()._field_ident);
}



inline void _1a8ccd96b_array(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396e327_ArrayExprModel> _76829_m) {
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5a113_array(_76829_m.get()._field_kind));
	if ((_76829_m.get()._field_elems.len() == 0LL)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_76829_m.get()._field_elems.len() == 2LL) && (_76829_m.get()._field_elems[1LL] == nullptr))) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a8cd1144_expr(_self_, jule::Any(_76829_m.get()._field_elems[0LL]));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1a8ccc519_args(_self_, _76829_m.get()._field_elems);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1a8ccda9d_func_ins_common(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a5b33164_FnIns> _79139_m) {
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b1d0_func(_79139_m));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a8ccdbd0_func_ins(_self_, _79139_m);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8ccdbd0_func_ins(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a5b33164_FnIns> _79832_m) {
	if (((_79832_m.get()._field_decl != nullptr) && _79832_m.get()._field_decl.get()._field_cpp_linked)) {
		jule::Ptr<_210eb33e0_Directive> _80017_d = _1a8d5c91d_find_directive(_79832_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_80017_d != nullptr)) {
			_1a8d23e56_write(_self_.get()._field_oc, _1a8d55905_concat_all_parts(_80017_d.get()._field_args));
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd8a86_func_ins(_79832_m));
}



inline void _1a8ccdd12_tuple(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396ee71_TupleExprModel> _80929_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _80929_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1ab183082:;
		if (it != expr.end()) {
			jule::I64 _81114_i = it - expr.begin();
			jule::Ptr<_1a84d3869_Data> _81121_d = *it;
			{
				_1a8cd1144_expr(_self_, jule::Any(_81121_d.get()._field_model));
				if (((_80929_m.get()._field_datas.len() - _81114_i) > 1LL)) {
					_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1ab183082:;
			++it;
			_81114_i++;
			goto _iter_begin_1ab183082;
		}
		_iter_end_1ab183082:;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8ccde44_new_call(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b3970e61_BuiltinNewCallExprModel> _82032_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_82032_m.get()._field_kind));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_82032_m.get()._field_init != nullptr)) {
		_1a8cd1144_expr(_self_, jule::Any(_82032_m.get()._field_init));
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8cce076_out_call(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b397036c_BuiltinOutCallExprModel> _83032_m) {
	if ((_83032_m.get()._field_debug && _20dbaa925_PRODUCTION)) {
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1a8cd1144_expr(_self_, jule::Any(_83032_m.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8cce1a8_outln_call(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b3970757_BuiltinOutlnCallExprModel> _83934_m) {
	if ((_83934_m.get()._field_debug && _20dbaa925_PRODUCTION)) {
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a8cd1144_expr(_self_, jule::Any(_83934_m.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8cce2da_panic_call(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b397134b_BuiltinPanicCallExprModel> _84834_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1a8cd1144_expr(_self_, jule::Any(_84834_m.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1a8d20b45_loc_info(_self_.get()._field_oc, _84834_m.get()._field_token);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a8cce41c_assert_call(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b3971802_BuiltinAssertCallExprModel> _85635_m) {
	if (_20dbaa925_PRODUCTION) {
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1a8cd1144_expr(_self_, jule::Any(_85635_m.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1a8d23e56_write(_self_.get()._field_oc, _1a8cd2310_cstr_lit(static_cast<jule::Slice<jule::U8>>(_85635_m.get()._field_log)));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1a8d20b45_loc_info(_self_.get()._field_oc, _85635_m.get()._field_token);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a8cce54e_error_call(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel> _86934_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1a5b30419_is_void(_86934_m.get()._field_func.get()._field_decl.ptr())) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_86934_m.get()._field_func.get()._field_result));
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1a8cd1144_expr(_self_, jule::Any(_86934_m.get()._field_err));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8cce681_make_call(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a5b2a568_BuiltinMakeCallExprModel> _88233_m) {
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_88233_m.get()._field_kind));
	if ((_1a85104de_enm(_1a85109b7_slc(_88233_m.get()._field_kind.ptr()).get()._field_elem.ptr()) != nullptr)) {
		if ((_88233_m.get()._field_cap != nullptr)) {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1a8d23e56_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	if ((_88233_m.get()._field_len != nullptr)) {
		_1a8cd1144_expr(_self_, jule::Any(_88233_m.get()._field_len));
	} else {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("0", 1));
	};
	if ((_88233_m.get()._field_cap != nullptr)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a8cd1144_expr(_self_, jule::Any(_88233_m.get()._field_cap));
	};
	if ((_1a85104de_enm(_1a85109b7_slc(_88233_m.get()._field_kind.ptr()).get()._field_elem.ptr()) != nullptr)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a8cd163e_init_expr(_self_, _1a85109b7_slc(_88233_m.get()._field_kind.ptr()).get()._field_elem);
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8cce7b3_push_to_slice(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a8cbaa02_PushToSliceExprModel> _91137_m) {
	jule::I64 _91213_n = _self_.get()._field_oc.get()._field_obj.len();;
	_1a8cd0dbe_model(_self_, jule::Any(_91137_m.get()._field_dest));
	jule::Str _91413_dest = _self_.get()._field_oc.get()._field_obj.slice(_91213_n);;
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1a8d23e56_write(_self_.get()._field_oc, _91413_dest);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a8d23e56_write(_self_.get()._field_oc, _1a8305e2d_itoa(static_cast<jule::I64>(_91137_m.get()._field_elems.get()._field_elems.len())));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _91137_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1ab1a1633:;
		if (it != expr.end()) {
			jule::Any _92121_e = *it;
			{
				_1a8d23e56_write(_self_.get()._field_oc, _91413_dest);
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1a8cd0dbe_model(_self_, jule::Any(_92121_e));
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1ab1a1633:;
			++it;
			goto _iter_begin_1ab1a1633;
		}
		_iter_end_1ab1a1633:;
	};
}



inline void _1a8cce8e5_append_call(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a5b2a7bb_BuiltinAppendCallExprModel> _93035_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1a8cd0dbe_model(_self_, jule::Any(_93035_m.get()._field_dest));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a8cd0dbe_model(_self_, jule::Any(_93035_m.get()._field_elements));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8ccea27_clone_call(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b3970a76_BuiltinCloneCallExprModel> _93834_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1a8cd0dbe_model(_self_, jule::Any(_93834_m.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8cceb59_sizeof(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a5b2ae70_SizeofExprModel> _94430_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1a8cd0dbe_model(_self_, jule::Any(_94430_m.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8ccec8b_alignof(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a5b2b5e1_AlignofExprModel> _95031_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1a8cd0dbe_model(_self_, jule::Any(_95031_m.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1a8ccedbd_rune_lit(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a5b2b7cd_RuneExprModel> _95628_m) {
	if ((_95628_m.get()._field_code <= 127LL)) {
		jule::Str _95821_b = _1a8cd1c7c_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95628_m.get()._field_code)));;
		if ((_95821_b == jule::Str("'", 1))) {
			_95821_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95821_b) + jule::Str("'", 1));
	};
	return _1a8cd28e8_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95628_m.get()._field_code)));
}



inline void _1a8cd0000_structure_static(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1b396de81_StructStaticIdentExprModel> _96740_m) {
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd8a86_func_ins(_96740_m.get()._field_method));
}



inline void _1a8cd0176_integrated_to_str(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a5b2bab9_IntegratedToStrExprModel> _97141_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1a8cd0dbe_model(_self_, jule::Any(_97141_m.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a8cd03c9_backend_emit(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a5b2be60_BackendEmitExprModel> _97736_m) {
	if ((_97736_m.get()._field_exprs.len() == 0LL)) {
		_1a8d23e56_write(_self_.get()._field_oc, _97736_m.get()._field_code);
		return;;
	};
	jule::I64 _98213_n = _self_.get()._field_oc.get()._field_obj.len();;
	{
		auto &expr = _97736_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ab1b1eb2:;
		if (it != expr.end()) {
			jule::I64 _98314_i = it - expr.begin();
			jule::Any _98321_expr = *it;
			{
				_1a8cd1144_expr(_self_, jule::Any(_98321_expr));
				jule::Str _98517_obj = _self_.get()._field_oc.get()._field_obj.slice(_98213_n);;
				_97736_m.get()._field_exprs[_98314_i]=jule::Any(_98517_obj);
				_self_.get()._field_oc.get()._field_obj=_self_.get()._field_oc.get()._field_obj.slice(0LL,_98213_n);
			}
			_iter_next_1ab1b1eb2:;
			++it;
			_98314_i++;
			goto _iter_begin_1ab1b1eb2;
		}
		_iter_end_1ab1b1eb2:;
	};
	_1a8d23e56_write(_self_.get()._field_oc, _1a857b4c2_format(_97736_m.get()._field_code,jule::Any(_97736_m.get()._field_exprs)));
}



inline void _1a8cd064e_free(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a5b2c24b_FreeExprModel> _99228_m) {
	_1a8cd1144_expr(_self_, jule::Any(_99228_m.get()._field_expr));
	if (_20dc78e33_RC) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1a8cd08c4_mut_slicing(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a8cbaded_MutSlicingExprModel> _100135_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a8cd0dbe_model(_self_, jule::Any(_100135_m.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_20dbaa925_PRODUCTION))) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a8d20b45_loc_info(_self_.get()._field_oc, _100135_m.get()._field_token);
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a8cd1144_expr(_self_, jule::Any(_100135_m.get()._field_left));
	if ((_100135_m.get()._field_right != nullptr)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a8cd1144_expr(_self_, jule::Any(_100135_m.get()._field_right));
	};
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1a8cd0b49_str_insert_begin(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a8cbb2e9_StrInsertBeginExprModel> _101840_m) {
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a8cd0dbe_model(_self_, jule::Any(_101840_m.get()._field_dest));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1a8cd0dbe_model(_self_, jule::Any(_101840_m.get()._field_expr));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1a8cd0dbe_model(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Any _102629_m) {
	{
		auto &_match_expr{ _102629_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a84d3869_Data>>()) {
			_case_begin_1ab1bc9e5:;
			{
				_1a8cd0dbe_model(_self_, jule::Any(_102629_m.operator jule::Ptr<_1a84d3869_Data>().get()._field_model));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a850cbe5_TypeKind>>()) {
			_case_begin_1ab1bccd1:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_102629_m.operator jule::Ptr<_1a850cbe5_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83a871c_Const>>()) {
			_case_begin_1ab1bcd47:;
			{
				_1a8c51801_constant(_self_, _102629_m.operator jule::Ptr<_1a83a871c_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
			_case_begin_1ab1bcdad:;
			{
				_1a8ccba68_var(_self_, _102629_m.operator jule::Ptr<_1a8487246_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5e34531_Trait>>()) {
			_case_begin_1ab1bce24:;
			{
				static__1a8cd8d2d_trait_decl(_102629_m.operator jule::Ptr<_1a5e34531_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396462a_Struct>>()) {
			_case_begin_1ab1bd980:;
			{
				_1a8ccbb9a_structure(_self_, _102629_m.operator jule::Ptr<_1b396462a_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39672a9_StructIns>>()) {
			_case_begin_1ab1bd9e6:;
			{
				_1a8ccbccc_structure_ins(_self_, _102629_m.operator jule::Ptr<_1b39672a9_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b33164_FnIns>>()) {
			_case_begin_1ab1bda5c:;
			{
				_1a8ccda9d_func_ins_common(_self_, _102629_m.operator jule::Ptr<_1a5b33164_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8cad9a1_UnsafeBinopExprModel>>()) {
			_case_begin_1ab1bdac3:;
			{
				_1a8ccb804_unsafe_binary(_self_, _102629_m.operator jule::Ptr<_1a8cad9a1_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39693cc_BinopExprModel>>()) {
			_case_begin_1ab1bdb39:;
			{
				_1a8ccb936_binary(_self_, _102629_m.operator jule::Ptr<_1b39693cc_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3969784_UnaryExprModel>>()) {
			_case_begin_1ab1bdba0:;
			{
				_1a8ccbe0e_unary(_self_, _102629_m.operator jule::Ptr<_1b3969784_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396a037_StructLitExprModel>>()) {
			_case_begin_1ab1bdc27:;
			{
				_1a8ccc173_structure_lit(_self_, _102629_m.operator jule::Ptr<_1b396a037_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396a367_AllocStructLitExprModel>>()) {
			_case_begin_1ab1bdc9e:;
			{
				_1a8ccc2a5_alloc_structure(_self_, _102629_m.operator jule::Ptr<_1b396a367_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396a895_CastingExprModel>>()) {
			_case_begin_1ab1bdd26:;
			{
				_1a8ccc3d7_casting(_self_, _102629_m.operator jule::Ptr<_1b396a895_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396b1c0_FnCallExprModel>>()) {
			_case_begin_1ab1bdd9d:;
			{
				_1a8cccb24_func_call(_self_, _102629_m.operator jule::Ptr<_1b396b1c0_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396b577_SliceExprModel>>()) {
			_case_begin_1ab1bde25:;
			{
				_1a8cccc56_slice(_self_, _102629_m.operator jule::Ptr<_1b396b577_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396e327_ArrayExprModel>>()) {
			_case_begin_1ab1bde9c:;
			{
				_1a8ccd96b_array(_self_, _102629_m.operator jule::Ptr<_1b396e327_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8cba815_UnsafeIndexingExprModel>>()) {
			_case_begin_1ab1be024:;
			{
				_1a8ccceba_unsafe_indexing(_self_, _102629_m.operator jule::Ptr<_1a8cba815_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396b9ea_IndexingExprModel>>()) {
			_case_begin_1ab1be09b:;
			{
				_1a8cccd88_indexing(_self_, _102629_m.operator jule::Ptr<_1b396b9ea_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396bda2_AnonFnExprModel>>()) {
			_case_begin_1ab1be123:;
			{
				_1a8ccd0ec_anon_func(_self_, _102629_m.operator jule::Ptr<_1b396bda2_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396c6cc_MapExprModel>>()) {
			_case_begin_1ab1be19a:;
			{
				_1a8ccd22e_map(_self_, _102629_m.operator jule::Ptr<_1b396c6cc_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396cc1b_SlicingExprModel>>()) {
			_case_begin_1ab1be222:;
			{
				_1a8ccd361_slicing(_self_, _102629_m.operator jule::Ptr<_1b396cc1b_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396d25a_TraitSubIdentExprModel>>()) {
			_case_begin_1ab1be299:;
			{
				_1a8ccd493_trait_sub(_self_, _102629_m.operator jule::Ptr<_1b396d25a_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396d9ca_StructSubIdentExprModel>>()) {
			_case_begin_1ab1be321:;
			{
				_1a8ccd5c5_structure_sub(_self_, _102629_m.operator jule::Ptr<_1b396d9ca_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396e613_CommonIdentExprModel>>()) {
			_case_begin_1ab1be398:;
			{
				_1a8ccd707_common_ident(_self_, _102629_m.operator jule::Ptr<_1b396e613_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396eb96_CommonSubIdentExprModel>>()) {
			_case_begin_1ab1be420:;
			{
				_1a8ccd839_common_sub(_self_, _102629_m.operator jule::Ptr<_1b396eb96_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396ee71_TupleExprModel>>()) {
			_case_begin_1ab1be497:;
			{
				_1a8ccdd12_tuple(_self_, _102629_m.operator jule::Ptr<_1b396ee71_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b397036c_BuiltinOutCallExprModel>>()) {
			_case_begin_1ab1be51e:;
			{
				_1a8cce076_out_call(_self_, _102629_m.operator jule::Ptr<_1b397036c_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3970757_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1ab1be596:;
			{
				_1a8cce1a8_outln_call(_self_, _102629_m.operator jule::Ptr<_1b3970757_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3970e61_BuiltinNewCallExprModel>>()) {
			_case_begin_1ab1be61d:;
			{
				_1a8ccde44_new_call(_self_, _102629_m.operator jule::Ptr<_1b3970e61_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b397134b_BuiltinPanicCallExprModel>>()) {
			_case_begin_1ab1be695:;
			{
				_1a8cce2da_panic_call(_self_, _102629_m.operator jule::Ptr<_1b397134b_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3971802_BuiltinAssertCallExprModel>>()) {
			_case_begin_1ab1be71c:;
			{
				_1a8cce41c_assert_call(_self_, _102629_m.operator jule::Ptr<_1b3971802_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>>()) {
			_case_begin_1ab1be794:;
			{
				_1a8cce54e_error_call(_self_, _102629_m.operator jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2a568_BuiltinMakeCallExprModel>>()) {
			_case_begin_1ab1be81b:;
			{
				_1a8cce681_make_call(_self_, _102629_m.operator jule::Ptr<_1a5b2a568_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2a7bb_BuiltinAppendCallExprModel>>()) {
			_case_begin_1ab1be893:;
			{
				_1a8cce8e5_append_call(_self_, _102629_m.operator jule::Ptr<_1a5b2a7bb_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3970a76_BuiltinCloneCallExprModel>>()) {
			_case_begin_1ab1be91a:;
			{
				_1a8ccea27_clone_call(_self_, _102629_m.operator jule::Ptr<_1b3970a76_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2ae70_SizeofExprModel>>()) {
			_case_begin_1ab1be992:;
			{
				_1a8cceb59_sizeof(_self_, _102629_m.operator jule::Ptr<_1a5b2ae70_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2b5e1_AlignofExprModel>>()) {
			_case_begin_1ab1bea19:;
			{
				_1a8ccec8b_alignof(_self_, _102629_m.operator jule::Ptr<_1a5b2b5e1_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2b7cd_RuneExprModel>>()) {
			_case_begin_1ab1bea91:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, _1a8ccedbd_rune_lit(_self_, _102629_m.operator jule::Ptr<_1a5b2b7cd_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396de81_StructStaticIdentExprModel>>()) {
			_case_begin_1ab1beb18:;
			{
				_1a8cd0000_structure_static(_self_, _102629_m.operator jule::Ptr<_1b396de81_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2bab9_IntegratedToStrExprModel>>()) {
			_case_begin_1ab1beb90:;
			{
				_1a8cd0176_integrated_to_str(_self_, _102629_m.operator jule::Ptr<_1a5b2bab9_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2be60_BackendEmitExprModel>>()) {
			_case_begin_1ab1bec17:;
			{
				_1a8cd03c9_backend_emit(_self_, _102629_m.operator jule::Ptr<_1a5b2be60_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5b2c24b_FreeExprModel>>()) {
			_case_begin_1ab1bec8e:;
			{
				_1a8cd064e_free(_self_, _102629_m.operator jule::Ptr<_1a5b2c24b_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8cbaded_MutSlicingExprModel>>()) {
			_case_begin_1ab1bed16:;
			{
				_1a8cd08c4_mut_slicing(_self_, _102629_m.operator jule::Ptr<_1a8cbaded_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8cbb2e9_StrInsertBeginExprModel>>()) {
			_case_begin_1ab1bed8d:;
			{
				_1a8cd0b49_str_insert_begin(_self_, _102629_m.operator jule::Ptr<_1a8cbb2e9_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1ab1bcb5a:;
			{
				_1a8d23e56_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1ab1bca7d:;
	};
}



inline void _1a8cd1144_expr(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Any _112328_e) {
	_1a8cd0dbe_model(_self_, jule::Any(_112328_e));
}



inline void _1a8cd13b9_val(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a84d48e2_Value> _112727_v) {
	if (_1a84d422c_is_const(_112727_v.get()._field_data.ptr())) {
		_1a8c51801_constant(_self_, _112727_v.get()._field_data.get()._field_constant,((_112727_v.get()._field_data.get()._field_kind != nullptr) && _1a851447c_is_f32(_1a850eca2_prim(_112727_v.get()._field_data.get()._field_kind.ptr()).ptr())));
		return;;
	};
	_1a8cd1144_expr(_self_, jule::Any(_112727_v.get()._field_data.get()._field_model));
}



inline void _1a8cd163e_init_expr(jule::Ptr<_1a8b7e4cb_ExprCoder> _self_, jule::Ptr<_1a850cbe5_TypeKind> _113533_t) {
	if ((_1a851027a_ptr(_113533_t.ptr()) != nullptr)) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1a83065e3_Enum> _114017_enm = _1a85104de_enm(_113533_t.ptr());;
	if ((_114017_enm != nullptr)) {
		_1a8cd13b9_val(_self_, _114017_enm.get()._field_items[0LL].get()._field_value);
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d5b477_kind(_113533_t));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a8b7e4cb_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a8cd3bc4_clone_func_decl(jule::Ptr<_1b396462a_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1a8d59ac4_structure(_1032_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1a8cd3e6b_clone_func_def(jule::Ptr<_1b396462a_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1a8d59ac4_structure(_1631_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8cd3894_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8cd4e4a_TestCoder> static__1a8cd53bd_new(jule::Ptr<_1a8d14287_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1a8cd4e4a_TestCoder>(_1a8cd4e4a_TestCoder(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Ptr<_1a5b2eeb8_Fn>(),_2828_oc));
}



inline jule::Ptr<_1a8464058_ImportInfo> _1a8cd5632_find_testing_package(jule::Ptr<_1a8cd4e4a_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1ab1e24cb:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1ab1e24cb:;
			++it;
			goto _iter_begin_1ab1e24cb;
		}
		_iter_end_1ab1e24cb:;
	};
	return nullptr;
}



inline void _1a8cd58a7_append_test(jule::Ptr<_1a8cd4e4a_TestCoder> _self_, jule::Ptr<_1a5b33164_FnIns> _4335_f) {
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8cd606c_call_tm_reset(_self_);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a8d23e56_write(_self_.get()._field_oc, _1a8cd2310_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4335_f.get()._field_decl.get()._field_ident)));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd8a86_func_ins(_4335_f));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1a8cd5b2c_append_package_tests(jule::Ptr<_1a8cd4e4a_TestCoder> _self_, jule::Ptr<_1a8466c1a_Package>& _6045_p) {
	{
		auto &expr = _6045_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ab1e9170:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1ab1e98bd:;
					if (it != expr.end()) {
						jule::Ptr<_1a5b2eeb8_Fn> _6225_f = *it;
						{
							if (_1a8d5cca3_has_directive(_6225_f.get()._field_directives,jule::Str("test", 4))) {
								_1a8cd58a7_append_test(_self_, _6225_f.get()._field_instances[0LL]);
							};
						}
						_iter_next_1ab1e98bd:;
						++it;
						goto _iter_begin_1ab1e98bd;
					}
					_iter_end_1ab1e98bd:;
				};
			}
			_iter_next_1ab1e9170:;
			++it;
			goto _iter_begin_1ab1e9170;
		}
		_iter_end_1ab1e9170:;
	};
}



inline jule::Bool _1a8cd5d91_ready_testing_package(jule::Ptr<_1a8cd4e4a_TestCoder> _self_) {
	jule::Ptr<_1a8464058_ImportInfo> _7117_p = _1a8cd5632_find_testing_package(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1a8465488_find_struct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	_self_.get()._field_tm_reset=_1b3968244_find_method(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tm_failed=_1b3968244_find_method(_self_.get()._field_t.ptr(), jule::Str("failed", 6),false);
	_self_.get()._field_tm_skipped=_1b3968244_find_method(_self_.get()._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline void _1a8cd606c_call_tm_reset(jule::Ptr<_1a8cd4e4a_TestCoder> _self_) {
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd87de_func(_self_.get()._field_tm_reset));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a8cd6248_call_tm_failed(jule::Ptr<_1a8cd4e4a_TestCoder> _self_) {
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd87de_func(_self_.get()._field_tm_failed));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a8cd6424_call_tm_skipped(jule::Ptr<_1a8cd4e4a_TestCoder> _self_) {
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8cd87de_func(_self_.get()._field_tm_skipped));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a8cd6600_serialize(jule::Ptr<_1a8cd4e4a_TestCoder> _self_) {
	_1a8d54dbb_serialize_head(_self_.get()._field_oc);
	__JULE_DEFER({
		_1a8d54be0_end(_self_.get()._field_oc);
	});;
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1a8d24671_add_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	if ((!(_1a8cd5d91_ready_testing_package(_self_)))) {
		_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1a8d24d8b_done_indent(_self_.get()._field_oc);
		return;;
	};
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d57e79_as_sptr(static__1a8d59d6b_structure_ins(_self_.get()._field_t)));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1a8d23e56_write(_self_.get()._field_oc, static__1a8d59d6b_structure_ins(_self_.get()._field_t));
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1a8d24671_add_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1a8cd6248_call_tm_failed(_self_);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1a8cd6424_call_tm_skipped(_self_);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a8d24d8b_done_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1a8cd5b2c_append_package_tests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_main);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1a8d24d8b_done_indent(_self_.get()._field_oc);
	_1a8d35385_indent(_self_.get()._field_oc);
	_1a8d23e56_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a8cd4e4a_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a8cd7a74_to_ident(jule::Str _3024_ident) {
	return (jule::Str("_", 1) + _3024_ident);
}



inline jule::Str static__1a8cd7d1b_addr(jule::U64 _3520_addr) {
	return (jule::Str("_", 1) + _1a8305bb9_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3520_addr)),15LL));
}



inline jule::Str static__1a8cd815c_to_out(jule::Str _4422_ident, jule::U64 _4434_addr) {
	if ((_4434_addr != 0LLU)) {
		jule::Str _4621_obj = static__1a8cd7d1b_addr(_4434_addr);;
		_4621_obj+=jule::Str("_", 1);
		_4621_obj+=_4422_ident;
		return _4621_obj;
	};
	return static__1a8cd7a74_to_ident(_4422_ident);
}



inline jule::Str static__1a8cd8547_to_local(jule::I64 _6024_row, jule::I64 _6034_col, jule::Str _6044_ident) {
	jule::Str _6117_obj = _1a8305e2d_itoa(_6024_row);;
	_6117_obj+=_1a8305e2d_itoa(_6034_col);
	_6117_obj+=jule::Str("_", 1);
	_6117_obj+=_6044_ident;
	return static__1a8cd7a74_to_ident(_6117_obj);
}



inline jule::Str static__1a8cd87de_func(jule::Ptr<_1a5b2eeb8_Fn>& _6921_f) {
	{
		
		if (_6921_f.get()._field_cpp_linked) {
			_case_begin_1ab2163bd:;
			{
				return _6921_f.get()._field_ident;
			}
		}
		else if ((_6921_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1ab216478:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1a5b3067d_is_method(_6921_f.ptr())) {
			_case_begin_1ab21690c:;
			{
				jule::Str _7621_obj = static__1a8cd815c_to_out(_6921_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_6921_f)));;
				if (_6921_f.get()._field_statically) {
					(_7621_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7621_obj;
				};
				return _7621_obj;
			}
		}
		else {
			_case_begin_1ab2156ec:;
			{
				return static__1a8cd815c_to_out(_6921_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_6921_f)));
			}
		}
		_match_end_1ab215653:;
	};
}



inline jule::Str static__1a8cd8a86_func_ins(jule::Ptr<_1a5b33164_FnIns>& _8829_f) {
	if (_1a5b33de0_is_builtin(_8829_f.ptr())) {
		return (jule::Str("jule::", 6) + _8829_f.get()._field_decl.get()._field_ident);
	};
	if ((_8829_f.get()._field_decl.get()._field_cpp_linked || (_8829_f.get()._field_generics.len() == 0LL))) {
		return static__1a8cd87de_func(_8829_f.get()._field_decl);
	};
	{
		auto &expr = _8829_f.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab2198dd:;
		if (it != expr.end()) {
			jule::I64 _9514_i = it - expr.begin();
			jule::Ptr<_1a5b33164_FnIns> _9521_ins = *it;
			{
				if (_1a5b34462_same(_9521_ins.ptr(), _8829_f)) {
					jule::Str _9725_obj = static__1a8cd87de_func(_8829_f.get()._field_decl);;
					_9725_obj+=jule::Str("_", 1);
					_9725_obj+=_1a8305e2d_itoa(_9514_i);
					return _9725_obj;
				};
			}
			_iter_next_1ab2198dd:;
			++it;
			_9514_i++;
			goto _iter_begin_1ab2198dd;
		}
		_iter_end_1ab2198dd:;
	};
	return jule::Str("__?__", 5);
}



inline jule::Str static__1a8cd8d2d_trait_decl(jule::Ptr<_1a5e34531_Trait> _10726_t) {
	if (_1e55b07c7_is_builtin(_10726_t.ptr())) {
		return (jule::Str("jule::", 6) + _10726_t.get()._field_ident);
	};
	return static__1a8cd815c_to_out(_10726_t.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_10726_t)));
}



inline jule::Str static__1a8cd90c5_param(jule::Ptr<_1a5b2d67b_Param>& _11522_p) {
	if ((_2110e9c30_is_anon_ident(_11522_p.get()._field_ident) || _2110e9988_is_ignore_ident(_11522_p.get()._field_ident))) {
		return jule::Str();
	};
	if (_1a5b2dca8_is_self(_11522_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_11522_p.get()._field_token == nullptr)) {
		return static__1a8cd8547_to_local(0LL,0LL,_11522_p.get()._field_ident);
	};
	return static__1a8cd8547_to_local(_11522_p.get()._field_token.get()._field_row,_11522_p.get()._field_token.get()._field_column,_11522_p.get()._field_ident);
}



inline jule::Str static__1a8cd936c_structure(jule::Ptr<_1b396462a_Struct>& _12926_s) {
	if (_12926_s.get()._field_cpp_linked) {
		if (_1a8d5cca3_has_directive(_12926_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _12926_s.get()._field_ident;
		};
		return (jule::Str("struct ", 7) + _12926_s.get()._field_ident);
	};
	return static__1a8cd815c_to_out(_12926_s.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_12926_s)));
}



inline jule::Str static__1a8cd9614_structure_ins(jule::Ptr<_1b39672a9_StructIns>& _14034_s) {
	if ((_14034_s.get()._field_decl.get()._field_cpp_linked || (_14034_s.get()._field_generics.len() == 0LL))) {
		return static__1a8cd936c_structure(_14034_s.get()._field_decl);
	};
	{
		auto &expr = _14034_s.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab222154:;
		if (it != expr.end()) {
			jule::I64 _14414_i = it - expr.begin();
			jule::Ptr<_1b39672a9_StructIns> _14421_ins = *it;
			{
				if (_1b3967d8c_same(_14421_ins.ptr(), _14034_s)) {
					jule::Str _14625_obj = static__1a8cd936c_structure(_14034_s.get()._field_decl);;
					_14625_obj+=jule::Str("_", 1);
					_14625_obj+=_1a8305e2d_itoa(_14414_i);
					return _14625_obj;
				};
			}
			_iter_next_1ab222154:;
			++it;
			_14414_i++;
			goto _iter_begin_1ab222154;
		}
		_iter_end_1ab222154:;
	};
	return jule::Str("__?__", 5);
}



inline jule::Str static__1a8cd98ab_field(jule::Ptr<_1b38b3d0a_Field>& _15622_f) {
	if (_15622_f.get()._field_owner.get()._field_cpp_linked) {
		return _15622_f.get()._field_ident;
	};
	return (jule::Str("_field_", 7) + _15622_f.get()._field_ident);
}



inline jule::Str static__1a8cd9b53_var(jule::Ptr<_1a8487246_Var> _16423_v) {
	{
		
		if (_16423_v.get()._field_cpp_linked) {
			_case_begin_1ab225300:;
			{
				return _16423_v.get()._field_ident;
			}
		}
		else if ((_16423_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1ab224596:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_16423_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1ab22460c:;
			{
				if ((_1a8510016_sptr(_16423_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_16423_v.get()._field_scope != nullptr)) {
			_case_begin_1ab224673:;
			{
				return static__1a8cd8547_to_local(_16423_v.get()._field_token.get()._field_row,_16423_v.get()._field_token.get()._field_column,_16423_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1ab224530:;
			{
				return static__1a8cd815c_to_out(_16423_v.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_16423_v)));
			}
		}
		_match_end_1ab2239d5:;
	};
}



inline jule::Str static__1a8cd9dea_iter_begin(jule::U64 _18326_it) {
	return (jule::Str("_iter_begin_", 12) + _1a8305bb9_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18326_it)),15LL));
}



inline jule::Str static__1a8cda192_iter_end(jule::U64 _18824_it) {
	return (jule::Str("_iter_end_", 10) + _1a8305bb9_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18824_it)),15LL));
}



inline jule::Str static__1a8cda439_iter_next(jule::U64 _19325_it) {
	return (jule::Str("_iter_next_", 11) + _1a8305bb9_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19325_it)),15LL));
}



inline jule::Str static__1a8cda6d1_label(jule::Str _19821_ident) {
	return (jule::Str("_julec_label_", 13) + _19821_ident);
}



inline jule::Str static__1a8cda978_match_end(jule::U64 _20325_m) {
	return (jule::Str("_match_end_", 11) + _1a8305bb9_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_m)),15LL));
}



inline jule::Str static__1a8cdac20_case_begin(jule::U64 _20826_c) {
	return (jule::Str("_case_begin_", 12) + _1a8305bb9_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20826_c)),15LL));
}







std::ostream &operator<<(std::ostream &_Stream, _1a8cd7612_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d255a6_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d1409a_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8d56b59_to_str(_1a8d5696c_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1a8d56e56_equals(jule::Ptr<_1a8d5696c_CustomType> _self_, jule::Ptr<_1a850cbe5_TypeKind> _3826_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d5696c_CustomType _Src) {
	_Stream << _1a8d56b59_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1a8d57693_to_type(jule::Str _5827_id) {
	_5827_id=_1a84413dc_real_kind_of(_5827_id);
	if (((97LL <= _5827_id[0LL]) && (_5827_id[0LL] <= 122LLU))) {
		_5827_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _5827_id);
}



inline jule::Str static__1a8d5793a_prim(jule::Ptr<_1a8512447_Prim> _6720_p) {
	return static__1a8d57693_to_type(_1a85127aa_to_str(_6720_p.ptr()));
}



inline jule::Str static__1a8d57bd2_tuple(jule::Ptr<_1a8516da8_Tuple> _7225_t) {
	jule::Str _7317_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7225_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1ab320e12:;
		if (it != expr.end()) {
			jule::Ptr<_1a850cbe5_TypeKind> _7421_tk = *it;
			{
				_7317_obj+=static__1a8d5b477_kind(_7421_tk);
				_7317_obj+=jule::Str(",", 1);
			}
			_iter_next_1ab320e12:;
			++it;
			goto _iter_begin_1ab320e12;
		}
		_iter_end_1ab320e12:;
	};
	(_7317_obj).mut_slice(0LL,(_7317_obj.len() - 1LL));;
	_7317_obj+=jule::Str(">", 1);
	return _7317_obj;
}



inline jule::Str static__1a8d57e79_as_sptr(jule::Str _8423_elem) {
	jule::Str _8517_obj = jule::Str("jule::Ptr<", 10);;
	_8517_obj+=_8423_elem;
	_8517_obj+=jule::Str(">", 1);
	return _8517_obj;
}



inline jule::Str static__1a8d58221_as_ptr(jule::Str _9222_elem) {
	return (_9222_elem + jule::Str("*", 1));
}



inline jule::Str static__1a8d584b8_sptr(jule::Ptr<_1a8515956_Sptr> _9724_sptr) {
	return static__1a8d57e79_as_sptr(static__1a8d5b477_kind(_9724_sptr.get()._field_elem));
}



inline jule::Str static__1a8d58760_ptr(jule::Ptr<_1a8518eba_Ptr> _10223_p) {
	;
	if (_1a851998d_is_unsafe(_10223_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _10717_elem = static__1a8d5b477_kind(_10223_p.get()._field_elem);;
	_10717_elem+=jule::Str("*", 1);
	return _10717_elem;
}



inline jule::Str static__1a8d58a07_enum_decl(jule::Ptr<_1a83065e3_Enum> _11329_e) {
	return static__1a8d5b477_kind(_11329_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1a8d58c9e_as_slice(jule::Ptr<_1a850cbe5_TypeKind> _11728_elem) {
	jule::Str _11817_obj = jule::Str("jule::Slice<", 12);;
	_11817_obj+=static__1a8d5b477_kind(_11728_elem);
	_11817_obj+=jule::Str(">", 1);
	return _11817_obj;
}



inline jule::Str static__1a8d59046_slice(jule::Ptr<_1a85163b3_Slc> _12525_s) {
	return static__1a8d58c9e_as_slice(_12525_s.get()._field_elem);
}



inline jule::Str static__1a8d592dd_map(jule::Ptr<_1a8517969_Map> _13023_m) {
	jule::Str _13117_obj = jule::Str("jule::Map<", 10);;
	_13117_obj+=static__1a8d5b477_kind(_13023_m.get()._field_key);
	_13117_obj+=jule::Str(",", 1);
	_13117_obj+=static__1a8d5b477_kind(_13023_m.get()._field_val);
	_13117_obj+=jule::Str(">", 1);
	return _13117_obj;
}



inline jule::Str static__1a8d59585_trait_ident(jule::Str _13927_ident) {
	jule::Str _14017_obj = jule::Str("jule::Trait<", 12);;
	_14017_obj+=_13927_ident;
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1a8d5982c_trait_decl(jule::Ptr<_1a5e34531_Trait> _14726_t) {
	return static__1a8d59585_trait_ident(static__1a8cd8d2d_trait_decl(_14726_t));
}



inline jule::Str static__1a8d59ac4_structure(jule::Ptr<_1b396462a_Struct> _15225_s) {
	jule::Str _15317_rep = jule::Str();;
	if ((_15225_s.get()._field_cpp_linked && (!(_1a8d5cca3_has_directive(_15225_s.get()._field_directives,jule::Str("typedef", 7)))))) {
		_15317_rep+=jule::Str("struct ", 7);
	};
	_15317_rep+=static__1a8cd936c_structure(_15225_s);
	return _15317_rep;
}



inline jule::Str static__1a8d59d6b_structure_ins(jule::Ptr<_1b39672a9_StructIns> _16233_s) {
	if (_16233_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _16421_ident = static__1a8cd9614_structure_ins(_16233_s);;
		if ((_16233_s.get()._field_generics.len() > 0LL)) {
			_16421_ident+=jule::Str("<", 1);
			{
				auto &expr = _16233_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1ab32c979:;
				if (it != expr.end()) {
					jule::Ptr<_1a850cbe5_TypeKind> _16729_g = *it;
					{
						_16421_ident+=static__1a8d5b477_kind(_16729_g);
						_16421_ident+=jule::Str(",", 1);
					}
					_iter_next_1ab32c979:;
					++it;
					goto _iter_begin_1ab32c979;
				}
				_iter_end_1ab32c979:;
			};
			(_16421_ident).mut_slice(0LL,(_16421_ident.len() - 1LL));;
			_16421_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_210eb33e0_Directive> _17417_d = _1a8d5c91d_find_directive(_16233_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_17417_d != nullptr)) {
			(_16421_ident).buffer.insert(0, ((_1a8d55905_concat_all_parts(_17417_d.get()._field_args) + jule::Str("::", 2))));;
		};
		return _16421_ident;
	};
	return static__1a8cd9614_structure_ins(_16233_s);
}



inline jule::Str static__1a8d5a113_array(jule::Ptr<_1a851855d_Arr> _18425_a) {
	jule::Str _18517_obj = jule::Str("jule::Array<", 12);;
	_18517_obj+=static__1a8d5b477_kind(_18425_a.get()._field_elem);
	_18517_obj+=jule::Str(",", 1);
	_18517_obj+=_1a8305e2d_itoa(_18425_a.get()._field_n);
	_18517_obj+=jule::Str(">", 1);
	return _18517_obj;
}



inline jule::Str static__1a8d5a3aa_param(jule::Ptr<_1a5b2d67b_Param>& _19426_p) {
	jule::Str _19517_obj = jule::Str();;
	if (_19426_p.get()._field_variadic) {
		_19517_obj+=jule::Str("jule::Slice<", 12);
		_19517_obj+=static__1a8d5b477_kind(_19426_p.get()._field_kind.get()._field_kind);
		_19517_obj+=jule::Str(">", 1);
	} else {
		_19517_obj+=static__1a8d5b477_kind(_19426_p.get()._field_kind.get()._field_kind);
	};
	if (_19426_p.get()._field_reference) {
		_19517_obj+=jule::Str("&", 1);
	};
	return _19517_obj;
}



inline jule::Str static__1a8d5a652_param_ins(jule::Ptr<_1a5b322c8_ParamIns>& _21030_p) {
	jule::Str _21117_obj = jule::Str();;
	if (_21030_p.get()._field_decl.get()._field_variadic) {
		_21117_obj+=jule::Str("jule::Slice<", 12);
		_21117_obj+=static__1a8d5b477_kind(_21030_p.get()._field_kind);
		_21117_obj+=jule::Str(">", 1);
	} else {
		_21117_obj+=static__1a8d5b477_kind(_21030_p.get()._field_kind);
	};
	if (_21030_p.get()._field_decl.get()._field_reference) {
		_21117_obj+=jule::Str("&", 1);
	};
	return _21117_obj;
}



inline jule::Str static__1a8d5a8e9_func_result(jule::Ptr<_1a5b2eeb8_Fn>& _22632_f) {
	if (_1a5b30419_is_void(_22632_f.ptr())) {
		if (_22632_f.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_22632_f.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1a8d5b477_kind(_22632_f.get()._field_result.get()._field_kind.get()._field_kind)) + jule::Str(">", 1));
	};
	return static__1a8d5b477_kind(_22632_f.get()._field_result.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1a8d5ab91_func_ins_result(jule::Ptr<_1a5b33164_FnIns>& _24036_f) {
	if (_1a5b30419_is_void(_24036_f.get()._field_decl.ptr())) {
		if (_24036_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24036_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1a8d5b477_kind(_24036_f.get()._field_result)) + jule::Str(">", 1));
	};
	return static__1a8d5b477_kind(_24036_f.get()._field_result);
}



inline jule::Str static__1a8d5ae38_anon_func(jule::Ptr<_1a5b33164_FnIns> _25329_f) {
	jule::Str _25417_decl = static__1a8d5ab91_func_ins_result(_25329_f);;
	_25417_decl+=jule::Str("(", 1);
	if ((_25329_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _25329_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1ab339953:;
			if (it != expr.end()) {
				jule::Ptr<_1a5b322c8_ParamIns> _25725_param = *it;
				{
					if (_1a5b2dca8_is_self(_25725_param.get()._field_decl.ptr())) {
						goto _iter_next_1ab339953;
					};
					_25417_decl+=static__1a8d5a652_param_ins(_25725_param);
					_25417_decl+=jule::Str(",", 1);
				}
				_iter_next_1ab339953:;
				++it;
				goto _iter_begin_1ab339953;
			}
			_iter_end_1ab339953:;
		};
		(_25417_decl).mut_slice(0LL,(_25417_decl.len() - 1LL));;
	} else {
		_25417_decl+=jule::Str("void", 4);
	};
	_25417_decl+=jule::Str(")", 1);
	return _25417_decl;
}



inline jule::Str static__1a8d5b1d0_func(jule::Ptr<_1a5b33164_FnIns> _27324_f) {
	jule::Str _27417_obj = jule::Str("jule::Fn<", 9);;
	_27417_obj+=static__1a8d5ae38_anon_func(_27324_f);
	_27417_obj+=jule::Str(">", 1);
	return _27417_obj;
}



inline jule::Str static__1a8d5b477_kind(jule::Ptr<_1a850cbe5_TypeKind> _28124_k) {
	{
		
		if (_1a850d850_cpp_linked(_28124_k.ptr())) {
			_case_begin_1ab33c26e:;
			{
				return _28124_k.get()._field_cpp_ident;
			}
		}
		else if ((_1a850eca2_prim(_28124_k.ptr()) != nullptr)) {
			_case_begin_1ab33c417:;
			{
				return static__1a8d5793a_prim(_1a850eca2_prim(_28124_k.ptr()));
			}
		}
		else if ((_1a85116cc_tup(_28124_k.ptr()) != nullptr)) {
			_case_begin_1ab33c47d:;
			{
				return static__1a8d57bd2_tuple(_1a85116cc_tup(_28124_k.ptr()));
			}
		}
		else if ((_1a8510016_sptr(_28124_k.ptr()) != nullptr)) {
			_case_begin_1ab33c4e4:;
			{
				return static__1a8d584b8_sptr(_1a8510016_sptr(_28124_k.ptr()));
			}
		}
		else if ((_1a851027a_ptr(_28124_k.ptr()) != nullptr)) {
			_case_begin_1ab33c55a:;
			{
				return static__1a8d58760_ptr(_1a851027a_ptr(_28124_k.ptr()));
			}
		}
		else if ((_1a85104de_enm(_28124_k.ptr()) != nullptr)) {
			_case_begin_1ab33c5d2:;
			{
				return static__1a8d58a07_enum_decl(_1a85104de_enm(_28124_k.ptr()));
			}
		}
		else if ((_1a85109b7_slc(_28124_k.ptr()) != nullptr)) {
			_case_begin_1ab33c659:;
			{
				return static__1a8d59046_slice(_1a85109b7_slc(_28124_k.ptr()));
			}
		}
		else if ((_1a8511468_map(_28124_k.ptr()) != nullptr)) {
			_case_begin_1ab33c6d1:;
			{
				return static__1a8d592dd_map(_1a8511468_map(_28124_k.ptr()));
			}
		}
		else if ((_1a8511204_trt(_28124_k.ptr()) != nullptr)) {
			_case_begin_1ab33c758:;
			{
				return static__1a8d5982c_trait_decl(_1a8511204_trt(_28124_k.ptr()));
			}
		}
		else if ((_1a8510e90_strct(_28124_k.ptr()) != nullptr)) {
			_case_begin_1ab33c7d0:;
			{
				return static__1a8d59d6b_structure_ins(_1a8510e90_strct(_28124_k.ptr()));
			}
		}
		else if ((_1a8510753_arr(_28124_k.ptr()) != nullptr)) {
			_case_begin_1ab33c857:;
			{
				return static__1a8d5a113_array(_1a8510753_arr(_28124_k.ptr()));
			}
		}
		else if ((_1a8510c2b_fnc(_28124_k.ptr()) != nullptr)) {
			_case_begin_1ab33c8ce:;
			{
				return static__1a8d5b1d0_func(_1a8510c2b_fnc(_28124_k.ptr()));
			}
		}
		_match_end_1ab33c192:;
	};
	{
		auto &_match_expr{ _28124_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d5696c_CustomType>>()) {
			_case_begin_1ab3447e8:;
			{
				return _28124_k.get()._field_kind.operator jule::Ptr<_1a8d5696c_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1ab344463:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1ab34440d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d57176_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab36035d_name(_1a8d8b650_Flag_0* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1ab360490_what(_1a8d8b650_Flag_0* _self_) {
	return (*_self_)._field__what;
}



inline void _1ab3605c2_reset(_1a8d8b650_Flag_0* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1ab360704_short(_1a8d8b650_Flag_0* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8b650_Flag_0 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ab3630ca_name(_1a8d8b650_Flag_1* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1ab3632ea_what(_1a8d8b650_Flag_1* _self_) {
	return (*_self_)._field__what;
}



inline void _1ab3608ad_reset(_1a8d8b650_Flag_1* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1ab362d33_short(_1a8d8b650_Flag_1* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8b650_Flag_1 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ab3661ee_name(_1a8d8b650_Flag_2* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1ab36641e_what(_1a8d8b650_Flag_2* _self_) {
	return (*_self_)._field__what;
}



inline void _1ab365e57_reset(_1a8d8b650_Flag_2* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1ab366b8e_short(_1a8d8b650_Flag_2* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8b650_Flag_2 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ab369367_name(_1a8d8b650_Flag_3* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1ab369587_what(_1a8d8b650_Flag_3* _self_) {
	return (*_self_)._field__what;
}



inline void _1ab3690c0_reset(_1a8d8b650_Flag_3* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1ab369d07_short(_1a8d8b650_Flag_3* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8b650_Flag_3 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1ab36c48b_name(_1a8d8b650_Flag_4* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1ab36c6ab_what(_1a8d8b650_Flag_4* _self_) {
	return (*_self_)._field__what;
}



inline void _1ab36c1e4_reset(_1a8d8b650_Flag_4* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1ab36ce2b_short(_1a8d8b650_Flag_4* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8b650_Flag_4 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8d8c73e_FlagSet> static__1a8d8ca2a_new(void) {
	return jule::new_ptr<_1a8d8c73e_FlagSet>(_1a8d8c73e_FlagSet(jule::Slice<jule::Trait<_1a8d8b331_CommonFlag>>::alloc(0LL,20LL)));
}



inline jule::Trait<_1a8d8b331_CommonFlag> _1a8d8cee2_find_flag(_1a8d8c73e_FlagSet* _self_, jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1ab376011:;
		if (it != expr.end()) {
			jule::Trait<_1a8d8b331_CommonFlag> _7221_flag = *it;
			{
				if ((_1a8d8b331_CommonFlag_mptr_data[(_7221_flag).type_offset]._1a8d8ad58_name(_7221_flag) == _7132_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1ab376011:;
			++it;
			goto _iter_begin_1ab376011;
		}
		_iter_end_1ab376011:;
	};
	return nullptr;
}



inline jule::Trait<_1a8d8b331_CommonFlag> _1a8d8d300_find_flag_short(_1a8d8c73e_FlagSet* _self_, jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1ab377276:;
		if (it != expr.end()) {
			jule::Trait<_1a8d8b331_CommonFlag> _8221_flag = *it;
			{
				if ((_1a8d8b331_CommonFlag_mptr_data[(_8221_flag).type_offset]._1a8d8ae8a_short(_8221_flag) == _8138_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1ab377276:;
			++it;
			goto _iter_begin_1ab377276;
		}
		_iter_end_1ab377276:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1a8d8b331_CommonFlag>> _1a8d8d564_flags(_1a8d8c73e_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a8d8d872_parse(_1a8d8c73e_FlagSet* _self_, jule::Slice<jule::Str> _11528_args) {
	_1a8d8ee4a_ArgParser _11617_ap = _1a8d8ee4a_ArgParser((*_self_),_11528_args,jule::Slice<jule::Str>(),jule::I64());;
	({
		auto except = _1a8d91336_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1a8d8da4d_reset(_1a8d8c73e_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1ab37a851:;
		if (it != expr.end()) {
			jule::Trait<_1a8d8b331_CommonFlag> _12616_f = *it;
			{
				_1a8d8b331_CommonFlag_mptr_data[(_12616_f).type_offset]._1a8d8b1ee_reset(_12616_f);
			}
			_iter_next_1ab37a851:;
			++it;
			goto _iter_begin_1ab37a851;
		}
		_iter_end_1ab37a851:;
	};
}



inline jule::Ptr<_1a8d8b650_Flag_4> _1a8d8de9e_add_flag_common_0(_1a8d8c73e_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1ab3e4eb4:;
			{
				goto _match_end_1ab3e4e5e;
			}
		}
		_match_end_1ab3e4e5e:;
	};
	if ((_1a8d8cee2_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1a8d8d300_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1a8d8b650_Flag_4> _14817_flag = jule::new_ptr<_1a8d8b650_Flag_4>(_1a8d8b650_Flag_4(_13141_name,_13152_short,jule::Str(),_13165_what,jule::Ptr<jule::Str>()));;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1a8d8b331_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1a8d8b650_Flag_3> _1a8d8de9e_add_flag_common_1(_1a8d8c73e_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1ab3edcae:;
			{
				goto _match_end_1ab3edc59;
			}
		}
		_match_end_1ab3edc59:;
	};
	if ((_1a8d8cee2_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1a8d8d300_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1a8d8b650_Flag_3> _14817_flag = jule::new_ptr<_1a8d8b650_Flag_3>(_1a8d8b650_Flag_3(_13141_name,_13152_short,jule::Bool(),_13165_what,jule::Ptr<jule::Bool>()));;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1a8d8b331_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}





inline void _1a8d8e90b_add_var_0(_1a8d8c73e_FlagSet* _self_, jule::Ptr<jule::Str> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1a8d8b650_Flag_4> _17617_flag = _1a8d8de9e_add_flag_common_0(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1a8d8e90b_add_var_1(_1a8d8c73e_FlagSet* _self_, jule::Ptr<jule::Bool> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1a8d8b650_Flag_3> _17617_flag = _1a8d8de9e_add_flag_common_1(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8c73e_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b3967661_to_str(_1b39672a9_StructIns* _self_) {
	jule::Str _24417_kind = jule::Str();;
	_24417_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24417_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1b37d3db2:;
			if (it != expr.end()) {
				jule::Ptr<_1a850cbe5_TypeKind> &_24820_g = *it;
				{
					_24417_kind+=_1a850d09c_to_str(_24820_g.ptr());
					_24417_kind+=jule::Str(",", 1);
				}
				_iter_next_1b37d3db2:;
				++it;
				goto _iter_begin_1b37d3db2;
			}
			_iter_end_1b37d3db2:;
		};
		(_24417_kind).mut_slice(0LL,(_24417_kind.len() - 1LL));;
		_24417_kind+=jule::Str("]", 1);
	};
	return _24417_kind;
}



inline jule::Bool _1b396796e_equals(jule::Ptr<_1b39672a9_StructIns> _self_, jule::Ptr<_1a850cbe5_TypeKind> _25926_other) {
	jule::Ptr<_1b39672a9_StructIns> _26013_s = _1a8510e90_strct(_25926_other.ptr());;
	if ((_26013_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl != _26013_s.get()._field_decl)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _26013_s.get()._field_generics.len())) {
		return false;
	};
	jule::I64 _27317_i = 0LL;;
	for (; (_27317_i < _self_.get()._field_generics.len()); (_27317_i)++) {
		{
			if ((!(_1a850d3aa_equals(_self_.get()._field_generics[_27317_i], _26013_s.get()._field_generics[_27317_i])))) {
				return false;
			};
		}
	_iter_next_1b37d7cb7:;
	}
	_iter_end_1b37d7cb7:;;
	return true;
}



inline jule::Bool _1b3967d8c_same(_1b39672a9_StructIns* _self_, jule::Ptr<_1b39672a9_StructIns> _28723_s) {
	if ((((*_self_)._field_decl != _28723_s.get()._field_decl) || (_28723_s.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1b37da67c:;
		if (it != expr.end()) {
			jule::I64 _29213_i = it - expr.begin();
			jule::Ptr<_1a850cbe5_TypeKind> &_29216_g = *it;
			{
				if ((!(_1a850d3aa_equals(_29216_g, _28723_s.get()._field_generics[_29213_i])))) {
					return false;
				};
			}
			_iter_next_1b37da67c:;
			++it;
			_29213_i++;
			goto _iter_begin_1b37da67c;
		}
		_iter_end_1b37da67c:;
	};
	return true;
}



inline jule::Ptr<_1a5b2eeb8_Fn> _1b3968244_find_method(_1b39672a9_StructIns* _self_, jule::Str _30234_ident, jule::Bool _30246_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1b37dc360:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _30321_f = *it;
			{
				if (((_30321_f.get()._field_statically == _30246_statically) && (_30321_f.get()._field_ident == _30234_ident))) {
					return _30321_f;
				};
			}
			_iter_next_1b37dc360:;
			++it;
			goto _iter_begin_1b37dc360;
		}
		_iter_end_1b37dc360:;
	};
	return nullptr;
}



inline jule::Ptr<_1b396694b_FieldIns> _1b3968552_find_field(_1b39672a9_StructIns* _self_, jule::Str _31333_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1b37dd8a0:;
		if (it != expr.end()) {
			jule::Ptr<_1b396694b_FieldIns> _31421_f = *it;
			{
				if ((_31421_f.get()._field_decl.get()._field_ident == _31333_ident)) {
					return _31421_f;
				};
			}
			_iter_next_1b37dd8a0:;
			++it;
			goto _iter_begin_1b37dd8a0;
		}
		_iter_end_1b37dd8a0:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1b39672a9_StructIns _Src) {
	_Stream << _1b3967661_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a8d14287_ObjectCoder> static__1a8d22ecc_new(jule::Ptr<_1a85a8312_IR>& _7128_ir, _1a8d255a6_SerializationInfo _7137_info) {
	jule::Ptr<_1a8d14287_ObjectCoder> _7217_oc = jule::new_ptr<_1a8d14287_ObjectCoder>(_1a8d14287_ObjectCoder(jule::Str(),_7128_ir,_7137_info,jule::Slice<jule::Ptr<_1a8d1409a_TraitHash>>(),jule::Str(),jule::Ptr<_1a8b7e4cb_ExprCoder>(),jule::Ptr<_1a8bbc7b1_ScopeCoder>()));;
	_7217_oc.get()._field_ec=static__1a8c511a2_new(_7217_oc);
	_7217_oc.get()._field_sc=static__1a8bc4345_new(_7217_oc);
	return _7217_oc;
}



inline void _1a8d23e56_write(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Str _8125_s) {
	_self_.get()._field_obj+=_8125_s;
}



inline void _1a8d24671_add_indent(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	;
	_self_.get()._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1a8d24d8b_done_indent(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_self_.get()._field_indent_buffer=_self_.get()._field_indent_buffer.slice(0LL,(_self_.get()._field_indent_buffer.len() - 1LL));
}



inline void _1a8d35385_indent(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_self_.get()._field_obj+=_self_.get()._field_indent_buffer;
}



inline jule::I64 _1a8d26376_find_type_offset(_1a8d14287_ObjectCoder* _self_, jule::Ptr<_1a5e34531_Trait> _10131_t, jule::Ptr<_1a850cbe5_TypeKind> _10146_k) {
	if ((_10131_t.get()._field_implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1b39672a9_StructIns> _10517_s = nullptr;;
	if ((_1a8510016_sptr(_10146_k.ptr()) != nullptr)) {
		_10146_k=_1a8510016_sptr(_10146_k.ptr()).get()._field_elem;
	};
	if ((_1a8510e90_strct(_10146_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10517_s=_1a8510e90_strct(_10146_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1ab231493:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d1409a_TraitHash> &_11316_hash = *it;
			{
				if (((_11316_hash.get()._field_t == _10131_t) && (_11316_hash.get()._field_s == _10517_s))) {
					return _11316_hash.get()._field_i;
				};
			}
			_iter_next_1ab231493:;
			++it;
			goto _iter_begin_1ab231493;
		}
		_iter_end_1ab231493:;
	};
	return -1LL;
}



inline void _1a8d20b45_loc_info(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_2110e7238_Token>& _12229_t) {
	jule::Str &_12314_loc = _12229_t.get()._field_file.get()._field_path;;
	if (_20dbaa925_PRODUCTION) {
		{
			
			if (_210b8d120_has_prefix(_12314_loc,_210c5359d_PATH_STDLIB)) {
				_case_begin_1ab2334d9:;
				{
					_1a8d23e56_write(_self_, _1a8cd2024_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12314_loc.slice((_20ec93c93_dir(_210c5359d_PATH_STDLIB).len() + 1LL)))));
				}
			}
			else if (_210b8d120_has_prefix(_12314_loc,_self_.get()._field_ir.get()._field_root)) {
				_case_begin_1ab2331cb:;
				{
					_1a8d23e56_write(_self_, _1a8cd2024_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12314_loc.slice((_20ec93c93_dir(_self_.get()._field_ir.get()._field_root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1ab233165:;
				{
					_1a8d23e56_write(_self_, _1a8cd2024_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12314_loc)));
				}
			}
			_match_end_1ab233099:;
		};
	} else {
		_1a8d23e56_write(_self_, _1a8cd2024_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12314_loc)));
	};
	_1a8d23e56_write(_self_, jule::Str(":", 1));
	_1a8d23e56_write(_self_, _1a8305e2d_itoa(_12229_t.get()._field_row));
	_1a8d23e56_write(_self_, jule::Str(":", 1));
	_1a8d23e56_write(_self_, _1a8305e2d_itoa(_12229_t.get()._field_column));
}



inline void _1a8d16047_head(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_1a8d4b324_Time _14913_time = static__1a8d4b8b8_now();;
	_1a8d4ab4d_AbsTime _15013_abs = _1a8d4d007_abs(&_14913_time);;
	_1a8d23e56_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1a8d23e56_write(_self_, jule::Str("// JuleC version: ", 18));
	_1a8d23e56_write(_self_, jule::Str("jule0.0.11 @master", 18));
	_1a8d23e56_write(_self_, jule::Str("\n", 1));
	_1a8d23e56_write(_self_, jule::Str("// Date: ", 9));
	_1a8d23e56_write(_self_, _1a8305bb9_fmt_uint(_15013_abs._field_day,10LL));
	_1a8d23e56_write(_self_, jule::Str("/", 1));
	_1a8d23e56_write(_self_, _1a8305bb9_fmt_uint(_15013_abs._field_month,10LL));
	_1a8d23e56_write(_self_, jule::Str("/", 1));
	_1a8d23e56_write(_self_, _1a8305bb9_fmt_uint(_15013_abs._field_year,10LL));
	_1a8d23e56_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a8d23e56_write(_self_, _self_.get()._field_info._field_compiler);
	_1a8d23e56_write(_self_, jule::Str(" ", 1));
	_1a8d23e56_write(_self_, _self_.get()._field_info._field_compiler_command);
	_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
	if (_20dbaa925_PRODUCTION) {
		_1a8d23e56_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_20dc78e33_RC))) {
		_1a8d23e56_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_20dc79142_SAFETY))) {
		_1a8d23e56_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a8d23e56_write(_self_, jule::Str("\n\n#include \"", 12));
	_1a8d23e56_write(_self_, _210c618ca_PATH_API);
	_1a8d23e56_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1a8d236e7_links(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1ab24189e:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _18216_used = *it;
			{
				{
					
					if ((!(_18216_used.get()._field_cpp_linked))) {
						_case_begin_1ab24240a:;
						{
							goto _iter_next_1ab24189e;
						}
					}
					else if (_210c33704_is_std_header_path(_18216_used.get()._field_path)) {
						_case_begin_1ab2420ec:;
						{
							_1a8d23e56_write(_self_, jule::Str("#include ", 9));
							_1a8d23e56_write(_self_, _18216_used.get()._field_path);
							_1a8d23e56_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1ab242086:;
						{
							_1a8d23e56_write(_self_, jule::Str("#include \"", 10));
							_1a8d23e56_write(_self_, _18216_used.get()._field_path);
							_1a8d23e56_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1ab241eba:;
				};
			}
			_iter_next_1ab24189e:;
			++it;
			goto _iter_begin_1ab24189e;
		}
		_iter_end_1ab24189e:;
	};
}



inline void _1a8d1540e_prepare_structures(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1ab244dad:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> _19921_s = *it;
			{
				if ((_19921_s.get()._field_token != nullptr)) {
					_1a8d5565d_prepare_structure(_19921_s);
				};
			}
			_iter_next_1ab244dad:;
			++it;
			goto _iter_begin_1ab244dad;
		}
		_iter_end_1ab244dad:;
	};
}



inline void _1a8d36b5b_iter_packages(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1a8466c1a_Package>&)> _20633_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1ab246a08:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _20721_used = *it;
			{
				if ((!(_20721_used.get()._field_cpp_linked))) {
					_20633_f(_20721_used.get()._field_package);
				};
			}
			_iter_next_1ab246a08:;
			++it;
			goto _iter_begin_1ab246a08;
		}
		_iter_end_1ab246a08:;
	};
	_20633_f(_self_.get()._field_ir.get()._field_main);
}



inline void _1a8d510a4_build_trait_map(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_1a8d36b5b_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1a8466c1a_Package>&)>([=](jule::Ptr<_1a8466c1a_Package>& _21636_pkg) mutable -> void {
		_1a8d5540a_iter_files(_21636_pkg,jule::Fn<void(jule::Ptr<_1a84cd7a9_SymbolTable>&)>([=](jule::Ptr<_1a84cd7a9_SymbolTable>& _21737_file) mutable -> void {
			{
				auto &expr = _21737_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1ab249d4c:;
				if (it != expr.end()) {
					jule::Ptr<_1a5e34531_Trait> _21829_t = *it;
					{
						if ((_21829_t.get()._field_token == nullptr)) {
							return;;
						};
						if ((_21829_t.get()._field_implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1a8d1409a_TraitHash>(_1a8d1409a_TraitHash(_21829_t,nullptr,0LL)));;
							goto _iter_next_1ab249d4c;
						};
						jule::I64 _23029_i = 0LL;;
						{
							auto &expr = _21829_t.get()._field_implemented;
							auto it = expr.begin();
							_iter_begin_1ab24b414:;
							if (it != expr.end()) {
								jule::Ptr<_1b396462a_Struct> _23133_s = *it;
								{
									{
										auto &expr = _23133_s.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1ab24c338:;
										if (it != expr.end()) {
											jule::Ptr<_1b39672a9_StructIns> _23237_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1a8d1409a_TraitHash>(_1a8d1409a_TraitHash(_21829_t,_23237_ins,_23029_i)));;
												(_23029_i)++;
											}
											_iter_next_1ab24c338:;
											++it;
											goto _iter_begin_1ab24c338;
										}
										_iter_end_1ab24c338:;
									};
								}
								_iter_next_1ab24b414:;
								++it;
								goto _iter_begin_1ab24b414;
							}
							_iter_end_1ab24b414:;
						};
					}
					_iter_next_1ab249d4c:;
					++it;
					goto _iter_begin_1ab249d4c;
				}
				_iter_end_1ab249d4c:;
			};
		}));
	}));
}



inline void _1a8d511d6_trait_decls(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_1a8d36b5b_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1a8466c1a_Package>&)>([=](jule::Ptr<_1a8466c1a_Package>& _24736_pkg) mutable -> void {
		_1a8d5540a_iter_files(_24736_pkg,jule::Fn<void(jule::Ptr<_1a84cd7a9_SymbolTable>&)>([=](jule::Ptr<_1a84cd7a9_SymbolTable>& _24837_file) mutable -> void {
			{
				auto &expr = _24837_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1ab24e67b:;
				if (it != expr.end()) {
					jule::Ptr<_1a5e34531_Trait> _24929_t = *it;
					{
						if ((_24929_t.get()._field_token == nullptr)) {
							return;;
						};
						_1a8d35385_indent(_self_);
						_1a8d23e56_write(_self_, jule::Str("struct ", 7));
						_1a8d23e56_write(_self_, static__1a8cd8d2d_trait_decl(_24929_t));
						_1a8d23e56_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1ab24e67b:;
					++it;
					goto _iter_begin_1ab24e67b;
				}
				_iter_end_1ab24e67b:;
			};
		}));
	}));
}



inline void _1a8d51318_structure_plain_decl(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b396462a_Struct>& _26245_s) {
	{
		auto &expr = _26245_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab25198b:;
		if (it != expr.end()) {
			jule::Ptr<_1b39672a9_StructIns> _26321_ins = *it;
			{
				_1a8d23e56_write(_self_, jule::Str("struct ", 7));
				_1a8d23e56_write(_self_, static__1a8cd9614_structure_ins(_26321_ins));
				_1a8d23e56_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1ab25198b:;
			++it;
			goto _iter_begin_1ab25198b;
		}
		_iter_end_1ab25198b:;
	};
}



inline void _1a8d5144a_structure_plain_decls(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1ab25376d:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> _27121_s = *it;
			{
				if ((_27121_s.get()._field_token != nullptr)) {
					_1a8d51318_structure_plain_decl(_self_, _27121_s);
				};
			}
			_iter_next_1ab25376d:;
			++it;
			goto _iter_begin_1ab25376d;
		}
		_iter_end_1ab25376d:;
	};
}



inline void _1a8d5157c_field_decl(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b396694b_FieldIns>& _27835_f) {
	_1a8d23e56_write(_self_, static__1a8d5b477_kind(_27835_f.get()._field_kind));
	_1a8d23e56_write(_self_, jule::Str(" ", 1));
	_1a8d23e56_write(_self_, static__1a8cd98ab_field(_27835_f.get()._field_decl));
	_1a8d23e56_write(_self_, jule::Str(" = ", 3));
	if ((_27835_f.get()._field_default == nullptr)) {
		_1a8cd163e_init_expr(_self_.get()._field_ec, _27835_f.get()._field_kind);
	} else {
		_1a8cd1144_expr(_self_.get()._field_ec, jule::Any(_27835_f.get()._field_default.get()._field_model));
	};
	_1a8d23e56_write(_self_, jule::Str(";", 1));
}



inline void _1a8d516ae_structure_constructor(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b39672a9_StructIns>& _29346_s) {
	_1a8d23e56_write(_self_, static__1a8cd9614_structure_ins(_29346_s));
	_1a8d23e56_write(_self_, jule::Str("(", 1));
	if ((_29346_s.get()._field_fields.len() > 0LL)) {
		{
			auto &expr = _29346_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ab259499:;
			if (it != expr.end()) {
				jule::I64 _29718_i = it - expr.begin();
				jule::Ptr<_1b396694b_FieldIns> _29725_f = *it;
				{
					_1a8d23e56_write(_self_, static__1a8d5b477_kind(_29725_f.get()._field_kind));
					_1a8d23e56_write(_self_, jule::Str(" __param_", 9));
					_1a8d23e56_write(_self_, _29725_f.get()._field_decl.get()._field_ident);
					if (((_29346_s.get()._field_fields.len() - _29718_i) > 1LL)) {
						_1a8d23e56_write(_self_, jule::Str(", ", 2));
					};
				}
				_iter_next_1ab259499:;
				++it;
				_29718_i++;
				goto _iter_begin_1ab259499;
			}
			_iter_end_1ab259499:;
		};
	} else {
		_1a8d23e56_write(_self_, jule::Str("void", 4));
	};
	_1a8d23e56_write(_self_, jule::Str(")", 1));
	if ((_29346_s.get()._field_fields.len() > 0LL)) {
		_1a8d23e56_write(_self_, jule::Str(": ", 2));
		{
			auto &expr = _29346_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ab25cc61:;
			if (it != expr.end()) {
				jule::I64 _31217_i = it - expr.begin();
				jule::Ptr<_1b396694b_FieldIns> _31220_f = *it;
				{
					_1a8d23e56_write(_self_, static__1a8cd98ab_field(_31220_f.get()._field_decl));
					_1a8d23e56_write(_self_, jule::Str("(", 1));
					_1a8d23e56_write(_self_, jule::Str("__param_", 8));
					_1a8d23e56_write(_self_, _31220_f.get()._field_decl.get()._field_ident);
					_1a8d23e56_write(_self_, jule::Str(")", 1));
					if (((_29346_s.get()._field_fields.len() - _31217_i) > 1LL)) {
						_1a8d23e56_write(_self_, jule::Str(", ", 2));
					};
				}
				_iter_next_1ab25cc61:;
				++it;
				_31217_i++;
				goto _iter_begin_1ab25cc61;
			}
			_iter_end_1ab25cc61:;
		};
	};
	_1a8d23e56_write(_self_, jule::Str(" {}", 3));
}



inline void _1a8d517e1_structure_destructor(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b39672a9_StructIns>& _32645_s) {
	;
	jule::Ptr<_1a5b2eeb8_Fn> _32813_dispose_method = _1b3968244_find_method(_32645_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _32917_disposed = static__1a84883bd_dispose(_32813_dispose_method);;
	if ((!(_32917_disposed))) {
		return;;
	};
	_1a8d23e56_write(_self_, jule::Str("~", 1));
	_1a8d23e56_write(_self_, static__1a8cd9614_structure_ins(_32645_s));
	_1a8d23e56_write(_self_, jule::Str("(void) { ", 9));
	_1a8d23e56_write(_self_, static__1a8cd87de_func(_32813_dispose_method));
	_1a8d23e56_write(_self_, jule::Str("(this); }", 9));
}



inline void _1a8d51923_structure_derive_defs_decls(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b39672a9_StructIns>& _34148_s) {
	if (_1b3965e56_is_derives(_34148_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1a8d35385_indent(_self_);
		_1a8d23e56_write(_self_, static__1a8cd3bc4_clone_func_decl(_34148_s.get()._field_decl));
		_1a8d23e56_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1a8d51a55_structure_operator_eq(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Str& _34942_ident, jule::Ptr<_1b39672a9_StructIns>& _34959_s) {
	if ((_34959_s.get()._field_operators._field_eq != nullptr)) {
		_1a8d51cb9_structure_operator(_self_, _34942_ident,_34959_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;;
	};
	_1a8d35385_indent(_self_);
	if (_20dc77a36_OPT_INLINE) {
		_1a8d23e56_write(_self_, jule::Str("inline ", 7));
	};
	_1a8d23e56_write(_self_, jule::Str("bool operator==(", 16));
	_1a8d23e56_write(_self_, _34942_ident);
	_1a8d23e56_write(_self_, jule::Str(" _other) {", 10));
	if ((_34959_s.get()._field_fields.len() > 0LL)) {
		_1a8d24671_add_indent(_self_);
		_1a8d23e56_write(_self_, jule::Str("\n", 1));
		_1a8d35385_indent(_self_);
		_1a8d23e56_write(_self_, jule::Str("return ", 7));
		_1a8d24671_add_indent(_self_);
		jule::Bool _36921_writed = false;;
		{
			auto &expr = _34959_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ab26b852:;
			if (it != expr.end()) {
				jule::Ptr<_1b396694b_FieldIns> _37025_f = *it;
				{
					jule::Ptr<_1b39672a9_StructIns> _37221_strct = _1a8510e90_strct(_37025_f.get()._field_kind.ptr());;
					if ((((_37221_strct != nullptr) && (_37221_strct.get()._field_decl != nullptr)) && _37221_strct.get()._field_decl.get()._field_cpp_linked)) {
						goto _iter_next_1ab26b852;
					};
					if (_36921_writed) {
						_1a8d23e56_write(_self_, jule::Str(" &&", 3));
					};
					_36921_writed=true;
					_1a8d23e56_write(_self_, jule::Str("\n", 1));
					_1a8d35385_indent(_self_);
					_1a8d23e56_write(_self_, jule::Str("this->", 6));
					jule::Str _38421_f_ident = static__1a8cd98ab_field(_37025_f.get()._field_decl);;
					_1a8d23e56_write(_self_, _38421_f_ident);
					_1a8d23e56_write(_self_, jule::Str(" == _other.", 11));
					_1a8d23e56_write(_self_, _38421_f_ident);
				}
				_iter_next_1ab26b852:;
				++it;
				goto _iter_begin_1ab26b852;
			}
			_iter_end_1ab26b852:;
		};
		_1a8d24d8b_done_indent(_self_);
		if ((!(_36921_writed))) {
			_1a8d23e56_write(_self_, jule::Str("true", 4));
		};
		_1a8d23e56_write(_self_, jule::Str(";\n", 2));
		_1a8d24d8b_done_indent(_self_);
		_1a8d35385_indent(_self_);
		_1a8d23e56_write(_self_, jule::Str("}", 1));
	} else {
		_1a8d23e56_write(_self_, jule::Str(" return true; }", 15));
	};
	_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a8d51b87_structure_operator_not_eq(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Str& _40346_ident, jule::Ptr<_1b39672a9_StructIns>& _40363_s) {
	_1a8d35385_indent(_self_);
	if (_20dc77a36_OPT_INLINE) {
		_1a8d23e56_write(_self_, jule::Str("inline ", 7));
	};
	_1a8d23e56_write(_self_, jule::Str("bool operator!=(", 16));
	_1a8d23e56_write(_self_, _40346_ident);
	_1a8d23e56_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a8d51cb9_structure_operator(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Str& _41439_ident, jule::Ptr<_1a5b33164_FnIns>& _41456_f, jule::Str _41467_op) {
	if ((_41456_f == nullptr)) {
		return;;
	};
	jule::Bool _41913_unary = (_41456_f.get()._field_params.len() == 1LL);;
	jule::Bool _42013_assignment = _1a5b30419_is_void(_41456_f.get()._field_decl.ptr());;
	_1a8d35385_indent(_self_);
	if (_20dc77a36_OPT_INLINE) {
		_1a8d23e56_write(_self_, jule::Str("inline ", 7));
	};
	if (_42013_assignment) {
		_1a8d23e56_write(_self_, _41439_ident);
		_1a8d23e56_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1a850eca2_prim(_41456_f.get()._field_result.ptr()) == nullptr)) {
			_1a8d23e56_write(_self_, _41439_ident);
		} else {
			_1a8d23e56_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1a8d23e56_write(_self_, jule::Str(" operator", 9));
	_1a8d23e56_write(_self_, _41467_op);
	_1a8d23e56_write(_self_, jule::Str("(", 1));
	if ((!(_41913_unary))) {
		jule::Ptr<_1a5b322c8_ParamIns> _44221_p = _41456_f.get()._field_params[1LL];;
		_1a8d23e56_write(_self_, static__1a8d5a652_param_ins(_44221_p));
		_1a8d23e56_write(_self_, jule::Str(" _other", 7));
	};
	_1a8d23e56_write(_self_, jule::Str(") { ", 4));
	if ((!(_42013_assignment))) {
		_1a8d23e56_write(_self_, jule::Str("return ", 7));
	};
	_1a8d23e56_write(_self_, static__1a8cd8a86_func_ins(_41456_f));
	if ((!(_41913_unary))) {
		_1a8d23e56_write(_self_, jule::Str("(this, _other); ", 16));
		if (_42013_assignment) {
			_1a8d23e56_write(_self_, jule::Str("return *this; ", 14));
		};
		_1a8d23e56_write(_self_, jule::Str("}", 1));
	} else {
		_1a8d23e56_write(_self_, jule::Str("(this); }", 9));
	};
	_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a8d51deb_structure_operators(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b39672a9_StructIns>& _46344_s) {
	jule::Str _46413_ident = static__1a8cd9614_structure_ins(_46344_s);;
	_1a8d51a55_structure_operator_eq(_self_, _46413_ident,_46344_s);
	_1a8d51b87_structure_operator_not_eq(_self_, _46413_ident,_46344_s);
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1a8d51cb9_structure_operator(_self_, _46413_ident,_46344_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
}



inline void _1a8d5202d_structure_ins_decl(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b39672a9_StructIns>& _50243_s) {
	if ((_50243_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _50243_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1ab28eb1c:;
			if (it != expr.end()) {
				jule::Ptr<_1a5b2eeb8_Fn> _50425_m = *it;
				{
					_1a8d52638_func_decl(_self_, _50425_m,false);
				}
				_iter_next_1ab28eb1c:;
				++it;
				goto _iter_begin_1ab28eb1c;
			}
			_iter_end_1ab28eb1c:;
		};
	};
	_1a8d23e56_write(_self_, jule::Str("struct ", 7));
	jule::Str _51013_out_ident = static__1a8cd9614_structure_ins(_50243_s);;
	_1a8d23e56_write(_self_, _51013_out_ident);
	_1a8d23e56_write(_self_, jule::Str(" {\n", 3));
	_1a8d24671_add_indent(_self_);
	if ((_50243_s.get()._field_fields.len() > 0LL)) {
		{
			auto &expr = _50243_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ab292856:;
			if (it != expr.end()) {
				jule::Ptr<_1b396694b_FieldIns> _51725_f = *it;
				{
					_1a8d35385_indent(_self_);
					_1a8d5157c_field_decl(_self_, _51725_f);
					_1a8d23e56_write(_self_, jule::Str("\n", 1));
				}
				_iter_next_1ab292856:;
				++it;
				goto _iter_begin_1ab292856;
			}
			_iter_end_1ab292856:;
		};
		_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
		_1a8d35385_indent(_self_);
		_1a8d516ae_structure_constructor(_self_, _50243_s);
		_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
	};
	_1a8d35385_indent(_self_);
	_1a8d517e1_structure_destructor(_self_, _50243_s);
	_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
	_1a8d35385_indent(_self_);
	_1a8d23e56_write(_self_, _51013_out_ident);
	_1a8d23e56_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1a8d51923_structure_derive_defs_decls(_self_, _50243_s);
	_1a8d51deb_structure_operators(_self_, _50243_s);
	_1a8d23e56_write(_self_, jule::Str("\n", 1));
	_1a8d24d8b_done_indent(_self_);
	_1a8d35385_indent(_self_);
	_1a8d23e56_write(_self_, jule::Str("};", 2));
}



inline void _1a8d52160_structure_decl(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b396462a_Struct>& _54739_s) {
	{
		auto &expr = _54739_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab29d2ac:;
		if (it != expr.end()) {
			jule::Ptr<_1b39672a9_StructIns> _54821_ins = *it;
			{
				_1a8d5202d_structure_ins_decl(_self_, _54821_ins);
			}
			_iter_next_1ab29d2ac:;
			++it;
			goto _iter_begin_1ab29d2ac;
		}
		_iter_end_1ab29d2ac:;
	};
}



inline void _1a8d52292_structure_decls(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1ab29e4bc:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> _55421_s = *it;
			{
				if ((_55421_s.get()._field_token != nullptr)) {
					_1a8d52160_structure_decl(_self_, _55421_s);
					_1a8d23e56_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1ab29e4bc:;
			++it;
			goto _iter_begin_1ab29e4bc;
		}
		_iter_end_1ab29e4bc:;
	};
}



inline void _1a8d523c4_params_decls(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>& _56237_params) {
	if ((_56237_params.len() == 0LL)) {
		_1a8d23e56_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a8d23e56_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _56237_params;
		auto it = expr.begin();
		_iter_begin_1ab2a1e92:;
		if (it != expr.end()) {
			jule::I64 _56914_i = it - expr.begin();
			jule::Ptr<_1a5b322c8_ParamIns> _56921_p = *it;
			{
				_1a8d23e56_write(_self_, static__1a8d5a652_param_ins(_56921_p));
				if (((_56237_params.len() - _56914_i) > 1LL)) {
					_1a8d23e56_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1ab2a1e92:;
			++it;
			_56914_i++;
			goto _iter_begin_1ab2a1e92;
		}
		_iter_end_1ab2a1e92:;
	};
	_1a8d23e56_write(_self_, jule::Str(")", 1));
}



inline void _1a8d52506_func_head(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1a5b33164_FnIns>& _57934_f, jule::Bool _57945_ptr) {
	if ((((!(_57945_ptr)) && _20dc77a36_OPT_INLINE) && (!(_1a5b308e2_is_entry_point(_57934_f.get()._field_decl.ptr()))))) {
		_1a8d23e56_write(_self_, jule::Str("inline ", 7));
	};
	_1a8d23e56_write(_self_, static__1a8d5ab91_func_ins_result(_57934_f));
	if (_57945_ptr) {
		_1a8d23e56_write(_self_, jule::Str("(*", 2));
		_1a8d23e56_write(_self_, static__1a8cd8a86_func_ins(_57934_f));
		_1a8d23e56_write(_self_, jule::Str(")", 1));
	} else {
		_1a8d23e56_write(_self_, jule::Str(" ", 1));
		_1a8d23e56_write(_self_, static__1a8cd8a86_func_ins(_57934_f));
	};
}



inline void _1a8d52638_func_decl(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1a5b2eeb8_Fn>& _59434_f, jule::Bool _59442_ptr) {
	{
		auto &expr = _59434_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab2a7c12:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b33164_FnIns> _59521_c = *it;
			{
				_1a8d35385_indent(_self_);
				_1a8d52506_func_head(_self_, _59521_c,_59442_ptr);
				_1a8d523c4_params_decls(_self_, _59521_c.get()._field_params);
				_1a8d23e56_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1ab2a7c12:;
			++it;
			goto _iter_begin_1ab2a7c12;
		}
		_iter_end_1ab2a7c12:;
	};
}



inline void _1a8d5276a_func_decls(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_1a8d36b5b_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1a8466c1a_Package>&)>([=](jule::Ptr<_1a8466c1a_Package>& _60436_pkg) mutable -> void {
		_1a8d5540a_iter_files(_60436_pkg,jule::Fn<void(jule::Ptr<_1a84cd7a9_SymbolTable>&)>([=](jule::Ptr<_1a84cd7a9_SymbolTable>& _60537_file) mutable -> void {
			{
				auto &expr = _60537_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1ab2ab5d9:;
				if (it != expr.end()) {
					jule::Ptr<_1a5b2eeb8_Fn> _60629_f = *it;
					{
						if (((!(_60629_f.get()._field_cpp_linked)) && (_60629_f.get()._field_token != nullptr))) {
							_1a8d52638_func_decl(_self_, _60629_f,false);
						};
					}
					_iter_next_1ab2ab5d9:;
					++it;
					goto _iter_begin_1ab2ab5d9;
				}
				_iter_end_1ab2ab5d9:;
			};
		}));
	}));
}



inline void _1a8d5289c_trait_data_types(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_1a8d36b5b_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1a8466c1a_Package>&)>([=](jule::Ptr<_1a8466c1a_Package>& _61636_pkg) mutable -> void {
		_1a8d5540a_iter_files(_61636_pkg,jule::Fn<void(jule::Ptr<_1a84cd7a9_SymbolTable>&)>([=](jule::Ptr<_1a84cd7a9_SymbolTable>& _61737_file) mutable -> void {
			{
				auto &expr = _61737_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1ab2ae5cb:;
				if (it != expr.end()) {
					jule::Ptr<_1a5e34531_Trait> _61829_t = *it;
					{
						if ((_61829_t.get()._field_token == nullptr)) {
							return;;
						};
						_1a8d23e56_write(_self_, jule::Str("struct ", 7));
						_1a8d23e56_write(_self_, static__1a8cd8d2d_trait_decl(_61829_t));
						_1a8d23e56_write(_self_, jule::Str("MptrData", 8));
						_1a8d23e56_write(_self_, jule::Str(" {\n", 3));
						_1a8d24671_add_indent(_self_);
						{
							auto &expr = _61829_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1ab2b1a40:;
							if (it != expr.end()) {
								jule::Ptr<_1a5b2eeb8_Fn> _62733_m = *it;
								{
									jule::Ptr<_1a5b33164_FnIns> _62833_ins = _62733_m.get()._field_instances[0LL];;
									jule::Ptr<_1a5b322c8_ParamIns> _62933_p = _62833_ins.get()._field_params[0LL];;
									_62933_p.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_61829_t, 2)));
									{
										auto expr = _62833_ins.get()._field_params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1ab2b33d2:;
										if (it != expr.end()) {
											jule::I64 _63330_i = it - expr.begin();
											jule::Ptr<_1a5b322c8_ParamIns> _63337_ip = *it;
											{
												if (_2110e9c30_is_anon_ident(_63337_ip.get()._field_decl.get()._field_ident)) {
													_63337_ip.get()._field_decl.get()._field_ident=(jule::Str("_", 1) + _1a8305e2d_itoa(_63330_i));
												};
											}
											_iter_next_1ab2b33d2:;
											++it;
											_63330_i++;
											goto _iter_begin_1ab2b33d2;
										}
										_iter_end_1ab2b33d2:;
									};
									if ((!(_20dbaa925_PRODUCTION))) {
										_62833_ins.get()._field_params = jule::alloc_for_append(_62833_ins.get()._field_params,1);_62833_ins.get()._field_params.__push(jule::new_ptr<_1a5b322c8_ParamIns>(_1a5b322c8_ParamIns(jule::new_ptr<_1a5b2d67b_Param>(_1a5b2d67b_Param(jule::Ptr<_2110e7238_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a8511a84_TypeSymbol>(),jule::Str("__file", 6))),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a8d5696c_CustomType>(_1a8d5696c_CustomType(jule::Str("const char*", 11))), 12))))));;
									};
									_1a8d52638_func_decl(_self_, _62733_m,true);
								}
								_iter_next_1ab2b1a40:;
								++it;
								goto _iter_begin_1ab2b1a40;
							}
							_iter_end_1ab2b1a40:;
						};
						_1a8d24d8b_done_indent(_self_);
						_1a8d35385_indent(_self_);
						_1a8d23e56_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1ab2ae5cb:;
					++it;
					goto _iter_begin_1ab2ae5cb;
				}
				_iter_end_1ab2ae5cb:;
			};
		}));
	}));
}



inline void _1a8d529ce_param_ins(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1a5b322c8_ParamIns>& _66034_p) {
	_1a8d23e56_write(_self_, static__1a8d5a652_param_ins(_66034_p));
	_1a8d23e56_write(_self_, jule::Str(" ", 1));
	_1a8d23e56_write(_self_, static__1a8cd90c5_param(_66034_p.get()._field_decl));
}



inline void _1a8d52b11_params_ins(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>& _66635_params) {
	if ((_66635_params.len() == 0LL)) {
		_1a8d23e56_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a8d23e56_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _66635_params;
		auto it = expr.begin();
		_iter_begin_1ab2b8a58:;
		if (it != expr.end()) {
			jule::I64 _67214_i = it - expr.begin();
			jule::Ptr<_1a5b322c8_ParamIns> _67221_p = *it;
			{
				_1a8d529ce_param_ins(_self_, _67221_p);
				if (((_66635_params.len() - _67214_i) > 1LL)) {
					_1a8d23e56_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1ab2b8a58:;
			++it;
			_67214_i++;
			goto _iter_begin_1ab2b8a58;
		}
		_iter_end_1ab2b8a58:;
	};
	_1a8d23e56_write(_self_, jule::Str(")", 1));
}



inline void _1a8d52c43_var_init_expr(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1a8487246_Var>& _68138_v, jule::Fn<void(void)> _68147_init) {
	if (_68138_v.get()._field_statically) {
		_1a8d23e56_write(_self_, jule::Str("static ", 7));
	};
	_1a8d23e56_write(_self_, static__1a8d5b477_kind(_68138_v.get()._field_kind.get()._field_kind));
	_1a8d23e56_write(_self_, jule::Str(" ", 1));
	if (_68138_v.get()._field_reference) {
		_1a8d23e56_write(_self_, jule::Str("&", 1));
	};
	_1a8d23e56_write(_self_, static__1a8cd9b53_var(_68138_v));
	if ((_68147_init != nullptr)) {
		_1a8d23e56_write(_self_, jule::Str(" = ", 3));
		_68147_init();
	};
	_1a8d23e56_write(_self_, jule::Str(";", 1));
}



inline void _1a8d52d75_var(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1a8487246_Var> _69927_v) {
	if (_2110e9988_is_ignore_ident(_69927_v.get()._field_ident)) {
		return;;
	};
	if (((_69927_v.get()._field_value != nullptr) && (_69927_v.get()._field_value.get()._field_expr != nullptr))) {
		if ((_69927_v.get()._field_value.get()._field_data.get()._field_model != nullptr)) {
			_1a8d52c43_var_init_expr(_self_, _69927_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1a8cd13b9_val(_self_.get()._field_ec, _69927_v.get()._field_value);
			}));
			return;;
		};
		_1a8d52c43_var_init_expr(_self_, _69927_v,nullptr);
		return;;
	};
	_1a8d52c43_var_init_expr(_self_, _69927_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1a8cd163e_init_expr(_self_.get()._field_ec, _69927_v.get()._field_kind.get()._field_kind);
	}));
}



inline void _1a8d52ea7_func(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1a5b2eeb8_Fn>& _71429_f) {
	{
		auto &expr = _71429_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab2c3458:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b33164_FnIns> _71521_ins = *it;
			{
				_1a8d52506_func_head(_self_, _71521_ins,false);
				_1a8d52b11_params_ins(_self_, _71521_ins.get()._field_params);
				_1a8d23e56_write(_self_, jule::Str(" ", 1));
				_1a8c111c8_func_scope(_self_.get()._field_sc, _71521_ins);
				if ((_71521_ins.get()._field_scope != nullptr)) {
					_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1ab2c3458:;
			++it;
			goto _iter_begin_1ab2c3458;
		}
		_iter_end_1ab2c3458:;
	};
}



inline void _1a8d530d9_trait_wrappers(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1ab2c5c96:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d1409a_TraitHash> _72721_hash = *it;
			{
				{
					auto &expr = _72721_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ab2c657c:;
					if (it != expr.end()) {
						jule::Ptr<_1a5b2eeb8_Fn> _72825_m = *it;
						{
							jule::Str _72921_ident = _72825_m.get()._field_ident;;
							_72825_m.get()._field_instances[0LL].get()._field_scope=nullptr;
							_72825_m.get()._field_ident=((_72921_ident + jule::Str("_", 1)) + _1a8305e2d_itoa(_72721_hash.get()._field_i));
							_1a8d52ea7_func(_self_, _72825_m);
							_72825_m.get()._field_ident=_72921_ident;
							if ((_72721_hash.get()._field_s == nullptr)) {
								if (_20dbaa925_PRODUCTION) {
									_1a8d23e56_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1a8d23e56_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1ab2c657c;
							};
							jule::Bool _74521_ptr = (!(_1a5b2e01c_is_ref(_72825_m.get()._field_params[0LL].ptr())));;
							jule::Ptr<_1a5b2eeb8_Fn> _74725_sm = _1b3968244_find_method(_72721_hash.get()._field_s.ptr(), _72825_m.get()._field_ident,false);;
							if (((_74725_sm == nullptr) || (_74725_sm.get()._field_instances.len() == 0LL))) {
								goto _iter_next_1ab2c657c;
							};
							_1a8d24671_add_indent(_self_);
							_1a8d23e56_write(_self_, jule::Str("{\n", 2));
							_1a8d35385_indent(_self_);
							if ((!(_1a5b30419_is_void(_74725_sm.ptr())))) {
								_1a8d23e56_write(_self_, jule::Str("return ", 7));
							};
							_1a8d23e56_write(_self_, static__1a8cd87de_func(_74725_sm));
							_1a8d23e56_write(_self_, jule::Str("(", 1));
							if (_74521_ptr) {
								_1a8d23e56_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1a8d23e56_write(_self_, static__1a8d59d6b_structure_ins(_72721_hash.get()._field_s));
								_1a8d23e56_write(_self_, jule::Str(">(", 2));
								if ((!(_20dbaa925_PRODUCTION))) {
									_1a8d23e56_write(_self_, jule::Str("_00___file", 10));
								};
								_1a8d23e56_write(_self_, jule::Str(")", 1));
							} else {
								_1a8d23e56_write(_self_, jule::Str("_self_.data.as<", 15));
								_1a8d23e56_write(_self_, static__1a8d59ac4_structure(_74725_sm.get()._field_owner));
								_1a8d23e56_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _72825_m.get()._field_params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1ab2cd122:;
								if (it != expr.end()) {
									jule::Ptr<_1a5b2d67b_Param> _77324_mp = *it;
									{
										_1a8d23e56_write(_self_, jule::Str(", ", 2));
										_1a8d23e56_write(_self_, static__1a8cd90c5_param(_77324_mp));
									}
									_iter_next_1ab2cd122:;
									++it;
									goto _iter_begin_1ab2cd122;
								}
								_iter_end_1ab2cd122:;
							};
							_1a8d23e56_write(_self_, jule::Str(");\n}\n", 5));
							_1a8d24d8b_done_indent(_self_);
						}
						_iter_next_1ab2c657c:;
						++it;
						goto _iter_begin_1ab2c657c;
					}
					_iter_end_1ab2c657c:;
				};
			}
			_iter_next_1ab2c5c96:;
			++it;
			goto _iter_begin_1ab2c5c96;
		}
		_iter_end_1ab2c5c96:;
	};
}



inline void _1a8d5321b_trait_datas(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	jule::Ptr<_1a5e34531_Trait> _78417_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1ab2d2a94:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d1409a_TraitHash> _78521_hash = *it;
			{
				jule::Str _78617_ident = static__1a8cd8d2d_trait_decl(_78521_hash.get()._field_t);;
				if ((_78521_hash.get()._field_t != _78417_old)) {
					if ((_78417_old != nullptr)) {
						_1a8d24d8b_done_indent(_self_);
						_1a8d35385_indent(_self_);
						_1a8d23e56_write(_self_, jule::Str("};\n", 3));
					};
					_1a8d23e56_write(_self_, jule::Str("static ", 7));
					_1a8d23e56_write(_self_, _78617_ident);
					_1a8d23e56_write(_self_, jule::Str("MptrData ", 9));
					_1a8d23e56_write(_self_, _78617_ident);
					_1a8d23e56_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_78417_old=_78521_hash.get()._field_t;
					_1a8d24671_add_indent(_self_);
				};
				_1a8d35385_indent(_self_);
				_1a8d23e56_write(_self_, jule::Str("{\n", 2));
				_1a8d24671_add_indent(_self_);
				{
					auto &expr = _78521_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ab2d73c3:;
					if (it != expr.end()) {
						jule::Ptr<_1a5b2eeb8_Fn> _80425_m = *it;
						{
							jule::Str _80521_m_ident = static__1a8cd87de_func(_80425_m);;
							_1a8d35385_indent(_self_);
							_1a8d23e56_write(_self_, jule::Str(".", 1));
							_1a8d23e56_write(_self_, _80521_m_ident);
							_1a8d23e56_write(_self_, jule::Str("=", 1));
							_1a8d23e56_write(_self_, _80521_m_ident);
							_1a8d23e56_write(_self_, jule::Str("_", 1));
							_1a8d23e56_write(_self_, _1a8305e2d_itoa(_78521_hash.get()._field_i));
							_1a8d23e56_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1ab2d73c3:;
						++it;
						goto _iter_begin_1ab2d73c3;
					}
					_iter_end_1ab2d73c3:;
				};
				_1a8d24d8b_done_indent(_self_);
				_1a8d35385_indent(_self_);
				_1a8d23e56_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1ab2d2a94:;
			++it;
			goto _iter_begin_1ab2d2a94;
		}
		_iter_end_1ab2d2a94:;
	};
	if ((_78417_old != nullptr)) {
		_1a8d24d8b_done_indent(_self_);
		_1a8d35385_indent(_self_);
		_1a8d23e56_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1a8d5334d_globals(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_globals;
		auto it = expr.begin();
		_iter_begin_1ab2dbeee:;
		if (it != expr.end()) {
			jule::Ptr<_1a8487246_Var> _82721_v = *it;
			{
				_1a8d23e56_write(_self_, static__1a8d5b477_kind(_82721_v.get()._field_kind.get()._field_kind));
				_1a8d23e56_write(_self_, jule::Str(" ", 1));
				if (_82721_v.get()._field_reference) {
					_1a8d23e56_write(_self_, jule::Str("&", 1));
				};
				_1a8d23e56_write(_self_, static__1a8cd9b53_var(_82721_v));
				_1a8d23e56_write(_self_, jule::Str(" = ", 3));
				_1a8cd13b9_val(_self_.get()._field_ec, _82721_v.get()._field_value);
				_1a8d23e56_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1ab2dbeee:;
			++it;
			goto _iter_begin_1ab2dbeee;
		}
		_iter_end_1ab2dbeee:;
	};
}



inline void _1a8d53491_decls(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_1a8d511d6_trait_decls(_self_);
	_1a8d5144a_structure_plain_decls(_self_);
	_1a8d52292_structure_decls(_self_);
	_1a8d5276a_func_decls(_self_);
	_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
	_1a8d5289c_trait_data_types(_self_);
	_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
	_1a8d530d9_trait_wrappers(_self_);
	_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
	_1a8d5321b_trait_datas(_self_);
	_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
	_1a8d5334d_globals(_self_);
}



inline void _1a8d53716_structure_methods(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b39672a9_StructIns>& _85542_s) {
	{
		auto &expr = _85542_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab2e3d19:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _85621_f = *it;
			{
				_1a8d52ea7_func(_self_, _85621_f);
				_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1ab2e3d19:;
			++it;
			goto _iter_begin_1ab2e3d19;
		}
		_iter_end_1ab2e3d19:;
	};
}



inline void _1a8d5398b_structure_derive_defs(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b39672a9_StructIns>& _86246_s) {
	if (_1b3965e56_is_derives(_86246_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1a8d23e56_write(_self_, static__1a8cd3e6b_clone_func_def(_86246_s.get()._field_decl));
		_1a8d23e56_write(_self_, jule::Str("{\n", 2));
		_1a8d24671_add_indent(_self_);
		_1a8d35385_indent(_self_);
		_1a8d23e56_write(_self_, static__1a8d59d6b_structure_ins(_86246_s));
		_1a8d23e56_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _86246_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ab2e76ad:;
			if (it != expr.end()) {
				jule::Ptr<_1b396694b_FieldIns> _87020_f = *it;
				{
					jule::Str _87121_ident = static__1a8cd98ab_field(_87020_f.get()._field_decl);;
					_1a8d35385_indent(_self_);
					_1a8d23e56_write(_self_, jule::Str("clone.", 6));
					_1a8d23e56_write(_self_, _87121_ident);
					_1a8d23e56_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1a8d23e56_write(_self_, _87121_ident);
					_1a8d23e56_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1ab2e76ad:;
				++it;
				goto _iter_begin_1ab2e76ad;
			}
			_iter_end_1ab2e76ad:;
		};
		_1a8d35385_indent(_self_);
		_1a8d23e56_write(_self_, jule::Str("return clone;\n", 14));
		_1a8d24d8b_done_indent(_self_);
		_1a8d23e56_write(_self_, jule::Str("}", 1));
	};
}



inline void _1a8d53c11_structure_ostream(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b39672a9_StructIns>& _88642_s) {
	_1a8d35385_indent(_self_);
	_1a8d23e56_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1a8d23e56_write(_self_, static__1a8cd9614_structure_ins(_88642_s));
	_1a8d23e56_write(_self_, jule::Str(" _Src) {\n", 9));
	_1a8d24671_add_indent(_self_);
	_1a8d35385_indent(_self_);
	jule::Ptr<_1a5b2eeb8_Fn> _89417_fts = _1b3968244_find_method(_88642_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1a8488665_to_str(_89417_fts)) {
		_1a8d23e56_write(_self_, jule::Str("_Stream << ", 11));
		_1a8d23e56_write(_self_, static__1a8cd87de_func(_89417_fts));
		_1a8d23e56_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1a8d23e56_write(_self_, jule::Str("_Stream << \"", 12));
		_1a8d23e56_write(_self_, _88642_s.get()._field_decl.get()._field_ident);
		_1a8d23e56_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _88642_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ab300ce3:;
			if (it != expr.end()) {
				jule::I64 _90418_i = it - expr.begin();
				jule::Ptr<_1b396694b_FieldIns> _90425_f = *it;
				{
					_1a8d35385_indent(_self_);
					_1a8d23e56_write(_self_, jule::Str("_Stream << \"", 12));
					_1a8d23e56_write(_self_, _90425_f.get()._field_decl.get()._field_ident);
					_1a8d23e56_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1b39672a9_StructIns> _91121_strct = _1a8510e90_strct(_90425_f.get()._field_kind.ptr());;
					if ((((_91121_strct != nullptr) && (_91121_strct.get()._field_decl != nullptr)) && _91121_strct.get()._field_decl.get()._field_cpp_linked)) {
						_1a8d23e56_write(_self_, jule::Str(" cpp.", 5));
						_1a8d23e56_write(_self_, static__1a8cd98ab_field(_90425_f.get()._field_decl));
						_1a8d23e56_write(_self_, jule::Str("\"", 1));
					} else {
						_1a8d23e56_write(_self_, jule::Str("\" << _Src.", 10));
						_1a8d23e56_write(_self_, static__1a8cd98ab_field(_90425_f.get()._field_decl));
					};
					if (((_90418_i + 1LL) < _88642_s.get()._field_fields.len())) {
						_1a8d23e56_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1a8d23e56_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1ab300ce3:;
				++it;
				_90418_i++;
				goto _iter_begin_1ab300ce3;
			}
			_iter_end_1ab300ce3:;
		};
		_1a8d35385_indent(_self_);
		_1a8d23e56_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1a8d35385_indent(_self_);
	_1a8d23e56_write(_self_, jule::Str("return _Stream;\n", 16));
	_1a8d24d8b_done_indent(_self_);
	_1a8d23e56_write(_self_, jule::Str("}", 1));
}



inline void _1a8d53e86_structure_ins(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b39672a9_StructIns>& _93738_s) {
	_1a8d53716_structure_methods(_self_, _93738_s);
	_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
	_1a8d5398b_structure_derive_defs(_self_, _93738_s);
	_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
	_1a8d53c11_structure_ostream(_self_, _93738_s);
}



inline void _1a8d5420b_structure(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1b396462a_Struct>& _94534_s) {
	{
		auto &expr = _94534_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab30a193:;
		if (it != expr.end()) {
			jule::Ptr<_1b39672a9_StructIns> _94621_ins = *it;
			{
				_1a8d53e86_structure_ins(_self_, _94621_ins);
				_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1ab30a193:;
			++it;
			goto _iter_begin_1ab30a193;
		}
		_iter_end_1ab30a193:;
	};
}



inline void _1a8d543d7_structures(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1ab30b826:;
		if (it != expr.end()) {
			jule::Ptr<_1b396462a_Struct> _95321_s = *it;
			{
				if ((_95321_s.get()._field_token != nullptr)) {
					_1a8d5420b_structure(_self_, _95321_s);
					_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1ab30b826:;
			++it;
			goto _iter_begin_1ab30b826;
		}
		_iter_end_1ab30b826:;
	};
}



inline void _1a8d545b3_funcs(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_1a8d36b5b_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1a8466c1a_Package>&)>([=](jule::Ptr<_1a8466c1a_Package>& _96236_pkg) mutable -> void {
		_1a8d5540a_iter_files(_96236_pkg,jule::Fn<void(jule::Ptr<_1a84cd7a9_SymbolTable>&)>([=](jule::Ptr<_1a84cd7a9_SymbolTable>& _96337_file) mutable -> void {
			{
				auto &expr = _96337_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1ab30eb9d:;
				if (it != expr.end()) {
					jule::Ptr<_1a5b2eeb8_Fn> _96429_f = *it;
					{
						if (((!(_20dc78cac_TEST)) && _1a8d5cca3_has_directive(_96429_f.get()._field_directives,jule::Str("test", 4)))) {
							goto _iter_next_1ab30eb9d;
						};
						if (((!(_96429_f.get()._field_cpp_linked)) && (_96429_f.get()._field_token != nullptr))) {
							_1a8d52ea7_func(_self_, _96429_f);
							_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1ab30eb9d:;
					++it;
					goto _iter_begin_1ab30eb9d;
				}
				_iter_end_1ab30eb9d:;
			};
		}));
	}));
}



inline void _1a8d54838_push_init(jule::Ptr<_1a8d14287_ObjectCoder> _self_, jule::Ptr<_1a8466c1a_Package>& _97734_pkg) {
	_1a8d5540a_iter_files(_97734_pkg,jule::Fn<void(jule::Ptr<_1a84cd7a9_SymbolTable>&)>([=](jule::Ptr<_1a84cd7a9_SymbolTable>& _97833_file) mutable -> void {
		{
			auto &expr = _97833_file.get()._field_funcs;
			auto it = expr.begin();
			_iter_begin_1ab312c28:;
			if (it != expr.end()) {
				jule::Ptr<_1a5b2eeb8_Fn> _97920_f = *it;
				{
					if ((_97920_f.get()._field_ident == jule::Str("init", 4))) {
						_1a8d35385_indent(_self_);
						_1a8d23e56_write(_self_, static__1a8cd87de_func(_97920_f));
						_1a8d23e56_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1ab312c28:;
				++it;
				goto _iter_begin_1ab312c28;
			}
			_iter_end_1ab312c28:;
		};
	}));
}



inline void _1a8d54a14_init_caller(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_1a8d23e56_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1a8d24671_add_indent(_self_);
	_1a8d36b5b_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1a8466c1a_Package>&)>([=](jule::Ptr<_1a8466c1a_Package>& _99236_pkg) mutable -> void {
		_1a8d54838_push_init(_self_, _99236_pkg);
	}));
	_1a8d24d8b_done_indent(_self_);
	_1a8d23e56_write(_self_, jule::Str("\n}", 2));
}



inline void _1a8d54be0_end(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_1a8d23e56_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_20dc78cac_TEST) {
		_1a8d23e56_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1a8d23e56_write(_self_, jule::Str("entry_point();", 14));
	};
	_1a8d23e56_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a8d54dbb_serialize_head(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_1a8d1540e_prepare_structures(_self_);
	_1a8d510a4_build_trait_map(_self_);
	_1a8d16047_head(_self_);
	_1a8d236e7_links(_self_);
	_1a8d23e56_write(_self_, jule::Str("\n", 1));
	_1a8d53491_decls(_self_);
	_1a8d23e56_write(_self_, jule::Str("\n", 1));
	_1a8d543d7_structures(_self_);
	_1a8d545b3_funcs(_self_);
	_1a8d54a14_init_caller(_self_);
	_1a8d23e56_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a8d55097_serialize(jule::Ptr<_1a8d14287_ObjectCoder> _self_) {
	_1a8d54dbb_serialize_head(_self_);
	_1a8d54be0_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d14287_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "obj:" << _Src._field_obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1a85a8312_IR>,jule::Slice<_210c3ee2a_Log>> static__1a85a8796_build(jule::Str _2825_path, jule::I64 _2836_flags) {
	jule::Ptr<_1e552e218_JuleImporter> _2917_importer = static__1e5534196_new(_1a85aa0b1_build_compile_info());;
	jule::Slice<jule::Ptr<_210eb3d6e_Ast>> _3018_files;;
	jule::Slice<_210c3ee2a_Log> _3029_logs;;
	std::tie(_3018_files,_3029_logs) = _1a85a7278_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Str _3413_root = _2825_path;;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1a8466c1a_Package> _4018_pkg;;
	std::tie(_4018_pkg,_3029_logs) = _1a8527490_analyze_package(_3018_files,jule::Trait<_1a8461be3_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Ptr<_1a85a8312_IR> _4517_ir = jule::new_ptr<_1a85a8312_IR>(_1a85a8312_IR(_3413_root,jule::Slice<jule::Str>(),_4018_pkg,_1e5535d02_all_packages(_2917_importer.ptr()),_1a85aa875_OrderedDefines()));;
	_4517_ir.get()._field_passes=_1a85a9db3_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1a85a8be7_append_structs(_1a85a8312_IR* _self_, jule::Ptr<_1a8466c1a_Package>& _5734_p, jule::Slice<jule::Ptr<_1b396462a_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aad57273:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _5821_f = *it;
			{
				{
					auto &expr = _5821_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1aad5795a:;
					if (it != expr.end()) {
						jule::Ptr<_1b396462a_Struct> _5925_s = *it;
						{
							if ((!(_5925_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_5925_s);;
							};
						}
						_iter_next_1aad5795a:;
						++it;
						goto _iter_begin_1aad5795a;
					}
					_iter_end_1aad5795a:;
				};
			}
			_iter_next_1aad57273:;
			++it;
			goto _iter_begin_1aad57273;
		}
		_iter_end_1aad57273:;
	};
}



inline jule::Slice<jule::Ptr<_1b396462a_Struct>> _1a85a8e5b_get_all_structures(_1a85a8312_IR* _self_) {
	jule::Slice<jule::Ptr<_1b396462a_Struct>> _7017_buffer = nullptr;;
	_1a85a8be7_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1aad590ee:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _7221_u = *it;
			{
				if ((!(_7221_u.get()._field_cpp_linked))) {
					_1a85a8be7_append_structs(&(*_self_), _7221_u.get()._field_package,_7017_buffer);
				};
			}
			_iter_next_1aad590ee:;
			++it;
			goto _iter_begin_1aad590ee;
		}
		_iter_end_1aad590ee:;
	};
	return _7017_buffer;
}



inline void _1a85a927a_append_globals(_1a85a8312_IR* _self_, jule::Ptr<_1a8466c1a_Package>& _8034_p, jule::Slice<jule::Ptr<_1a8487246_Var>>& _8058_buffer) {
	{
		auto &expr = _8034_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aad5ab06:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _8121_f = *it;
			{
				{
					auto &expr = _8121_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1aad5b2dd:;
					if (it != expr.end()) {
						jule::Ptr<_1a8487246_Var> _8225_v = *it;
						{
							if ((((_8225_v.get()._field_token != nullptr) && (!(_8225_v.get()._field_cpp_linked))) && (!(_8225_v.get()._field_constant)))) {
								_8058_buffer = jule::alloc_for_append(_8058_buffer,1);_8058_buffer.__push(_8225_v);;
							};
						}
						_iter_next_1aad5b2dd:;
						++it;
						goto _iter_begin_1aad5b2dd;
					}
					_iter_end_1aad5b2dd:;
				};
			}
			_iter_next_1aad5ab06:;
			++it;
			goto _iter_begin_1aad5ab06;
		}
		_iter_end_1aad5ab06:;
	};
}



inline jule::Slice<jule::Ptr<_1a8487246_Var>> _1a85a94de_get_all_globals(_1a85a8312_IR* _self_) {
	jule::Slice<jule::Ptr<_1a8487246_Var>> _9317_buffer = nullptr;;
	_1a85a927a_append_globals(&(*_self_), (*_self_)._field_main,_9317_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1aad5d08c:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _9521_u = *it;
			{
				if ((!(_9521_u.get()._field_cpp_linked))) {
					_1a85a927a_append_globals(&(*_self_), _9521_u.get()._field_package,_9317_buffer);
				};
			}
			_iter_next_1aad5d08c:;
			++it;
			goto _iter_begin_1aad5d08c;
		}
		_iter_end_1aad5d08c:;
	};
	return _9317_buffer;
}



inline void _1a85a96ba_order(_1a85a8312_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1a85a8e5b_get_all_structures(&(*_self_));
	(*_self_)._field_ordered._field_globals=_1a85a94de_get_all_globals(&(*_self_));
	static__1a85ab4ad_order_structures((*_self_)._field_ordered._field_structs);
	static__1a85ab6bc_order_vars((*_self_)._field_ordered._field_globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1a85a8312_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1a8d9049a_parse_integer_0(_1a8d8ee4a_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1ab3851c9:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_210b8d120_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1ab385240:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_210b8d120_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1ab384948:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_210b8d120_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1ab3849ae:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1ab384a25:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1ab3848d2:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1ab384816:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1a8d9049a_parse_integer_1(_1a8d8ee4a_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1ab38d952:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_210b8d120_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1ab38d9b8:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_210b8d120_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1ab38d1c1:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_210b8d120_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1ab38d237:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1ab38d29d:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1ab38d15a:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1ab38d08e:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1a8d9070e_get_data(_1a8d8ee4a_ArgParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1a8d90984_process_flag(_1a8d8ee4a_ArgParser* _self_, jule::Trait<_1a8d8b331_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d8b650_Flag_3>>()) {
			_case_begin_1ab37cac8:;
			{
				jule::Ptr<_1a8d8b650_Flag_3> _22021_bf = _21736_flag.operator jule::Ptr<_1a8d8b650_Flag_3>();;
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1ab37c9b8:;
	};
	jule::Str _22513_data = _1a8d9070e_get_data(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1a8d8b331_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a8d8ad58_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d8b650_Flag_0>>()) {
			_case_begin_1ab37dd82:;
			{
				jule::Ptr<_1a8d8b650_Flag_0> _23221_intf = _21736_flag.operator jule::Ptr<_1a8d8b650_Flag_0>();;
				jule::Bool _23333_ok;;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1a8d9049a_parse_integer_0(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23372_s, jule::I64 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1a5e68b09_parse_int(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1a8d8b331_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a8d8ad58_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8b650_Flag_1>>()) {
			_case_begin_1ab37e8bb:;
			{
				jule::Ptr<_1a8d8b650_Flag_1> _24021_uintf = _21736_flag.operator jule::Ptr<_1a8d8b650_Flag_1>();;
				jule::Bool _24134_ok;;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1a8d9049a_parse_integer_1(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _24173_s, jule::I64 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1a81c9032_parse_uint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1a8d8b331_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a8d8ad58_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8b650_Flag_2>>()) {
			_case_begin_1ab37e932:;
			{
				jule::Ptr<_1a8d8b650_Flag_2> _24821_ff = _21736_flag.operator jule::Ptr<_1a8d8b650_Flag_2>();;
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1a8302e3b_parse_float(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1a8d8b331_CommonFlag_mptr_data[(_21736_flag).type_offset]._1a8d8ad58_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8b650_Flag_4>>()) {
			_case_begin_1ab37e998:;
			{
				(*(_21736_flag.operator jule::Ptr<_1a8d8b650_Flag_4>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1ab37dc1c:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a8d90c09_single_dash(_1a8d8ee4a_ArgParser* _self_, jule::Str& _25731_arg) {
	if ((_25731_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25731_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1ab394aac:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1a8d8b331_CommonFlag> _26321_flag = _1a8d8d300_find_flag_short(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1a8d90984_process_flag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1ab394aac:;
			++it;
			goto _iter_begin_1ab394aac;
		}
		_iter_end_1ab394aac:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a8d90e7e_double_dash(_1a8d8ee4a_ArgParser* _self_, jule::Str& _27231_arg) {
	if ((_27231_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1a8d8b331_CommonFlag> _27617_flag = _1a8d8cee2_find_flag(&(*_self_)._field_set, _27231_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1a8d90984_process_flag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a8d9115a_try_arg(_1a8d8ee4a_ArgParser* _self_) {
	jule::Str _28513_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28513_arg[0LL] == '-')) {
		if (((_28513_arg.len() > 1LL) && (_28513_arg[1LL] == '-'))) {
			({
				auto except = _1a8d90e7e_double_dash(&(*_self_), _28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1a8d90c09_single_dash(&(*_self_), _28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28513_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a8d91336_parse(_1a8d8ee4a_ArgParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1a8d9115a_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1ab39cca2:;
	}
	_iter_end_1ab39cca2:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8ee4a_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _20dc78086_push_opt_level(jule::I64 _3323_level) {
	_20dc7741a_OPT_COPY=(_3323_level >= static_cast<jule::I64>(1LL));
	_20dc77508_OPT_DEADCODE=(_3323_level >= static_cast<jule::I64>(1LL));
	_20dc775e6_OPT_APPEND=(_3323_level >= static_cast<jule::I64>(1LL));
	_20dc77739_OPT_MATH=(_3323_level >= static_cast<jule::I64>(1LL));
	_20dc778b0_OPT_ACCESS=(_3323_level >= static_cast<jule::I64>(1LL));
	_20dc77a36_OPT_INLINE=(_3323_level >= static_cast<jule::I64>(1LL));
	_20dc77c45_OPT_PTR=(_3323_level >= static_cast<jule::I64>(1LL));
	_20dc77dbb_OPT_COND=(_3323_level >= static_cast<jule::I64>(1LL));
}



inline jule::I32 _20eab1781_decode_rune(jule::I32 _6820_r1, jule::I32 _6830_r2) {
	if (((((55296LL <= _6820_r1) && (_6820_r1 < 56320LL)) && (56320LL <= _6830_r2)) && (_6830_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6820_r1 - 55296LL) << 10LL) | (_6830_r2 - 56320LL)) + 65536LL));
	};
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _20eab1a28_encode_rune(jule::I32 _7824_r) {
	jule::I32 _7835_r1 = jule::I32();
	jule::I32 _7845_r2 = jule::I32();
	if (((_7824_r < 65536LL) || (_7824_r > 1114111LL))) {
		_7835_r1 = 65533LL;
		_7845_r2 = 65533LL;
		return std::make_tuple(_7835_r1,_7845_r2);
	};
	_7824_r-=65536LL;
	_7835_r1 = static_cast<jule::I32>((55296LL + ((_7824_r >> 10LL) & 1023LL)));
	_7845_r2 = static_cast<jule::I32>((56320LL + (_7824_r & 1023LL)));
	return std::make_tuple(_7835_r1,_7845_r2);
}



inline jule::Slice<jule::I32> _20eab20ab_decode(jule::Slice<jule::U16> _11915_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11915_s.len());;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11915_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11915_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1a8da4712:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11915_s.len())) && (56320LL <= _11915_s[(_12213_i + 1LL)])) && (_11915_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1a8da439e:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_20eab1781_decode_rune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11915_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1a8da402a:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1a8da3ea3:;
			};
			(_12113_n)++;
		}
	_iter_next_1a8da31c2:;
	}
	_iter_end_1a8da31c2:;;
	return _12013_a.slice(0LL,_12113_n);
}



inline jule::Slice<jule::U16> _20eab23ec_append_rune(jule::Slice<jule::U16> _14924_a, jule::I32 _14934_r) {
	{
		
		if (((0LL <= _14934_r) && (_14934_r < 55296LL)) || ((57344LL <= _14934_r) && (_14934_r < 65536LL))) {
			_case_begin_1a8da77d1:;
			{
				return jule::append(_14924_a,jule::Slice<jule::U16>({static_cast<jule::U16>(static_cast<jule::U16>(_14934_r))}));
			}
		}
		else if (((65536LL <= _14934_r) && (_14934_r <= 1114111LL))) {
			_case_begin_1a8da7847:;
			{
				jule::I32 _15614_r1;;
				jule::I32 _15618_r2;;
				std::tie(_15614_r1,_15618_r2) = _20eab1a28_encode_rune(_14934_r);
				return jule::append(_14924_a,jule::Slice<jule::U16>({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1a8da6725:;
	};
	return jule::append(_14924_a,jule::Slice<jule::U16>({65533LLU}));
}



inline jule::Slice<jule::U16> _20ea9b54b_utf16_from_str(jule::Str _1423_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1423_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,_209_runes.len());;
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1a8db3c4e:;
		if (it != expr.end()) {
			jule::I32 &_2212_r = *it;
			{
				if ((_2212_r == 0LL)) {
					goto _iter_end_1a8db3c4e;
				};
				_2113_buff=_20eab23ec_append_rune(_2113_buff,_2212_r);
			}
			_iter_next_1a8db3c4e:;
			++it;
			goto _iter_begin_1a8db3c4e;
		}
		_iter_end_1a8db3c4e:;
	};
	return _20eab23ec_append_rune(_2113_buff,0LL);
}



inline jule::Str _20eaa7458_utf16_to_str(jule::Slice<jule::U16> _3421_s) {
	if ((_3421_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _3813_code_page = _3421_s;;
	{
		auto &expr = _3421_s;
		auto it = expr.begin();
		_iter_begin_1a8db5c1d:;
		if (it != expr.end()) {
			jule::I64 _399_i = it - expr.begin();
			jule::U16 &_3912_v = *it;
			{
				if ((_3912_v == 0LLU)) {
					_3813_code_page=_3813_code_page.slice(0LL,_399_i);
					goto _iter_end_1a8db5c1d;
				};
			}
			_iter_next_1a8db5c1d:;
			++it;
			_399_i++;
			goto _iter_begin_1a8db5c1d;
		}
		_iter_end_1a8db5c1d:;
	};
	return static_cast<jule::Str>(_20eab20ab_decode(_3813_code_page));
}



inline jule::Str _20eaa1243_u16_ptr_to_str(jule::U16* _5030_s) {
	if ((_5030_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _5513_code_page = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5030_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_20eab20ab_decode(_5513_code_page));
			};
			_5513_code_page = jule::alloc_for_append(_5513_code_page,1);_5513_code_page.__push(_5813_r);;
		}
	_iter_next_1a8db20c1:;
	}
	_iter_end_1a8db20c1:;;
	return jule::Str();
}



inline jule::I64 _20de45154_get_last_errno(void) {
	return errno;
}



inline jule::U64 _20eab2ed0_get_std_handle(jule::U64 _5423_stdh) {
	return static_cast<jule::U64>(((jule::U64)(GetStdHandle(_5423_stdh))));
}



inline jule::I64 _20eab35a7_wstat(jule::U16* _5821_path, struct stat* _5837_stat) {
	return static_cast<jule::I64>(wstat(((wchar_t*)(_5821_path)),_5837_stat));
}



inline jule::I64 _20eab3992__wopen(jule::U16* _6322_path, jule::I64 _6334_flag, jule::I64 _6345_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_6322_path[0LL])))),_6334_flag,_6345_mode));
}



inline jule::U32 _20eab3b90_get_last_error(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _20eab3ed1_get_current_directory(jule::U32 _7237_bufflen, jule::U16* _7255_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7237_bufflen,((wchar_t*)(_7255_buff))));
}



inline jule::Bool _20eab4520_delete_file(jule::U16* _8327_path) {
	return DeleteFileW(((wchar_t*)(_8327_path)));
}



inline jule::Bool _20eab47b7_create_directory(jule::U16* _8832_path) {
	return CreateDirectoryW(((wchar_t*)(_8832_path)),nullptr);
}



inline jule::Bool _20eab4a5e_remove_directory(jule::U16* _9332_path) {
	return RemoveDirectoryW(((wchar_t*)(_9332_path)));
}



inline _WDIR* _20eab4d06__wopendir(jule::U16* _9825_path) {
	return _wopendir(((wchar_t*)(_9825_path)));
}



inline struct _wdirent* _20eab509d__wreaddir(_WDIR* _10129_dir) {
	return _wreaddir(_10129_dir);
}



inline jule::I64 _20eab5345__wclosedir(_WDIR* _10430_dir) {
	return static_cast<jule::I64>(_wclosedir(_10430_dir));
}



inline jule::U32 _20eab5a1b_get_full_path_name(jule::U16* _10734_path, jule::U32 _10746_bufflen, jule::U16* _1085_buff, jule::U16** _10817_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10734_path)),_10746_bufflen,((wchar_t*)(_1085_buff)),((wchar_t**)(_10817_fname))));
}



inline jule::Bool _20eab5d5c_get_console_mode(jule::U64 _11325_handle, jule::I64& _11346_mode) {
	return GetConsoleMode(((HANDLE)(_11325_handle)),((DWORD*)((&(_11346_mode)))));
}



inline jule::Bool _20eab619d_set_console_mode(jule::U64 _11825_handle, jule::I64 _11841_mode) {
	return SetConsoleMode(((HANDLE)(_11825_handle)),static_cast<DWORD>(_11841_mode));
}



inline jule::Bool _20eab66cb_write_console(jule::U64 _12329_handle, jule::U16* _12345_buffer, jule::I64 _12359_to_write, jule::I64& _12410_written, void* _12424_reserved) {
	return WriteConsoleW(((HANDLE)(_12329_handle)),((void*)(_12345_buffer)),static_cast<DWORD>(_12359_to_write),((DWORD*)(_12410_written)),_12424_reserved);
}



inline jule::Bool _20eab6c09_read_console(jule::U64 _13028_handle, jule::U16* _13048_buffer, jule::I64 _13062_to_read, jule::I64& _13110_readed, void* _13123_input_control) {
	return ReadConsoleW(((HANDLE)(_13028_handle)),((void*)(_13048_buffer)),static_cast<DWORD>(_13062_to_read),((DWORD*)((&(_13110_readed)))),_13123_input_control);
}



inline jule::I64 _20eab903b_seek(jule::I64 _2613_handle, jule::I64 _2626_offset, jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _20eab9426_read(jule::I64 _3120_handle, void* _3137_buff, jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _20eab9756_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _20eab9b41_write(jule::I64 _3921_handle, void* _3934_buff, jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _20eab9d50_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline std::tuple<jule::I32,jule::I64> _20eb97acb_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _1869_p0 = _18220_p[0LL];;
	jule::U8 _1879_x = _20eb969ed_FIRST[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_20eb97070_accept_range _1969_accept = _20eb972e5_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18220_p.len() < _1959_sz)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2009_b1 = _18220_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2079_b2 = _18220_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2149_b3 = _18220_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	_18233_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _20eb9815e_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _2809_end = _27625_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_20eb999e0_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1a8e38521;
			};
		}
	_iter_next_1a8e38521:;
	}
	_iter_end_1a8e38521:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27638_r,_27647_size) = _20eb97acb_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27647_size) != _2809_end)) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::I64 _20eb9869d_rune_len(jule::I32 _35217_r) {
	{
		
		if ((_35217_r < 0LL)) {
			_case_begin_1a8e404a1:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 127LL)) {
			_case_begin_1a8e4010a:;
			{
				return 1LL;
			}
		}
		else if ((_35217_r <= 2047LL)) {
			_case_begin_1a8e40182:;
			{
				return 2LL;
			}
		}
		else if (((55296LL <= _35217_r) && (_35217_r <= 57343LL))) {
			_case_begin_1a8e40270:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 65535LL)) {
			_case_begin_1a8e402d6:;
			{
				return 3LL;
			}
		}
		else if ((_35217_r <= 1114111LL)) {
			_case_begin_1a8e4034c:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1a8e3eb98:;
			{
				return -1LL;
			}
		}
		_match_end_1a8e3e901:;
	};
}



inline jule::I64 _20eb98a77_encode_rune(jule::Slice<jule::U8> _37424_p, jule::I32 _37439_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37439_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1a8e454d9:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37439_r));
				return 1LL;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1a8e45550:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37439_r >> 6LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 2LL;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1a8e4531e:;
			{
				_37439_r=65533LL;
				goto _case_begin_1a8e45385;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1a8e45385:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37439_r >> 12LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 3LL;
			}
		}
		else {
			_case_begin_1a8e42b68:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37439_r >> 18LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 12LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 4LL;
			}
		}
		_match_end_1a8e42abe:;
	};
}



inline jule::Slice<jule::U8> _20eb98db8_append_rune(jule::Slice<jule::U8> _40524_p, jule::I32 _40535_r) {
	if ((_40535_r <= 127LL)) {
		return jule::append(_40524_p,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(_40535_r))}));
	};
	return _20eb99209_append_rune_non_ascii(_40524_p,_40535_r);
}



inline jule::Slice<jule::U8> _20eb99209_append_rune_non_ascii(jule::Slice<jule::U8> _41230_p, jule::I32 _41245_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41245_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1a8e4d14b:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41245_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1a8e4b91e:;
			{
				_41245_r=65533LL;
				goto _case_begin_1a8e4b985;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1a8e4b985:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41245_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1a8e4ae3a:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41245_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		_match_end_1a8e4ad91:;
	};
}



inline jule::I64 _20eb99748_rune_count_str(jule::Str _47323_s) {
	jule::I64 _47333_n = jule::I64();
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47323_s.len()); (_47333_n)++) {
		{
			jule::U8 _47617_c = _47323_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1a8e56c6a;
			};
			jule::U8 _48213_x = _20eb969ed_FIRST[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1a8e56c6a;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47323_s.len())) {
				(_47413_i)++;
				goto _iter_next_1a8e56c6a;
			};
			_20eb97070_accept_range _49213_accept = _20eb972e5_ACCEPT_RANGES[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47323_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47323_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47323_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1a8e56c6a:;
	}
	_iter_end_1a8e56c6a:;;
	return _47333_n;
}



inline jule::Bool _20eb999e0_rune_start(jule::U8 _51719_b) {
	return ((_51719_b & 192LLU) != 128LLU);
}



inline jule::I64 _20ec4ea40_get_last_os_error_windows(void) {
	jule::U32 _169_err = _20eab3b90_get_last_error();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1a8e7eb50:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a8e7e611:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a8e7e677:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1a8e7e6dd:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else {
			_case_begin_1a8e7c367:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1a8e7b5ca:;
	};
}



inline jule::Slice<jule::Str> _20ec508ba_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _20ec50d0a_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _20ec51745___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _20ec51745___getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _20eab3ed1_get_current_directory(261LLU,(&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(_20ec4ea40_get_last_os_error_windows());
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_20eaa1243_u16_ptr_to_str((&(_1513_buff[0LL]))));
}



inline jule::Slice<jule::U8> _20ecd33ed_stobs(jule::Str& _915_s) {
	{
		jule::Slice<jule::U8> slice;;
		slice.data.alloc = _915_s.begin();;
		slice.data.ref = nullptr;;
		slice._slice = slice.data.alloc;;
		slice._len = slice._cap = _915_s.len();;
		return slice;
	};
}



inline jule::Bool _210b95721_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_210bc9733__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	};
	return _210bd0a25_is_excluding_latin(_210b9ad20_LETTER,_7618_r);
}



inline jule::Bool _210bceeb9_is16(jule::Slice<_210bcd380_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1a94c9056:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_210bcd380_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_hi)) {
							return ((_19417_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_lo),_19417_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1a94c9056:;
				++it;
				_19313_i++;
				goto _iter_begin_1a94c9056;
			}
			_iter_end_1a94c9056:;
		};
		return false;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_210bcd380_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi))) {
					return ((_21213_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_lo),_21213_range->_field_stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1a94c7d02:;
	}
	_iter_end_1a94c7d02:;;
	return false;
}



inline jule::Bool _210bd030a_is32(jule::Slice<_210bcd847_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1a94ced70:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_210bcd847_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_hi)) {
							return ((_23117_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_lo),_23117_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1a94ced70:;
				++it;
				_23013_i++;
				goto _iter_begin_1a94ced70;
			}
			_iter_end_1a94ced70:;
		};
		return false;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_210bcd847_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi))) {
					return ((_24913_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_lo),_24913_range->_field_stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1a94ce501:;
	}
	_iter_end_1a94ce501:;;
	return false;
}



inline jule::Bool _210bd0a25_is_excluding_latin(jule::Ptr<_210bcdcba_RangeTable> _27823_range_tab, jule::I32 _27847_r) {
	{
		jule::Slice<_210bcd380_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;;
		if (((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi)))) {
			return _210bceeb9_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		};
	};
	jule::Slice<_210bcd847_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;;
	if (((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo)))) {
		return _210bd030a_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	};
	return false;
}



inline jule::Str _20ecdd3a3_repeat(jule::Str _1415_s, jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	};
	jule::Str _1913_ss = _1415_s;;
	for (; (_1427_n > 1LL); (_1427_n)--) {
		{
			_1913_ss+=_1415_s;
		}
	_iter_next_1a9509949:;
	}
	_iter_end_1a9509949:;;
	return _1913_ss;
}



inline jule::Bool _210b6ec4a__has_prefix(jule::Str& _2617_s, jule::Str& _2626_sub, jule::I64 _2640_start) {
	if (((_2626_sub.len() == 0LL) || ((_2617_s.len() - _2640_start) < _2626_sub.len()))) {
		return false;
	};
	jule::I64 _3113_i = 0LL;;
	for (; (_3113_i < _2626_sub.len()); std::tie(_3113_i,_2640_start) = std::make_tuple(static_cast<jule::I64>((_3113_i + 1LL)),static_cast<jule::I64>((_2640_start + 1LL)))) {
		{
			if ((_2617_s[_2640_start] != _2626_sub[_3113_i])) {
				return false;
			};
		}
	_iter_next_1a950b440:;
	}
	_iter_end_1a950b440:;;
	return true;
}



inline jule::Bool _210b8d120_has_prefix(jule::Str _4119_s, jule::Str _4127_sub) {
	return _210b6ec4a__has_prefix(_4119_s,_4127_sub,0LL);
}



inline jule::Bool _210b89814__has_suffix(jule::Str& _4517_s, jule::Str& _4526_sub, jule::I64 _4540_start) {
	if (((_4526_sub.len() == 0LL) || ((_4517_s.len() - _4540_start) < _4526_sub.len()))) {
		return false;
	};
	_4540_start=static_cast<jule::I64>((_4517_s.len() - _4540_start));
	jule::I64 _5113_i = 0LL;;
	for (; (_5113_i < _4526_sub.len()); (_5113_i)++) {
		{
			if ((_4517_s[((_4540_start - _5113_i) - 1LL)] != _4526_sub[((_4526_sub.len() - _5113_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1a950cce3:;
	}
	_iter_end_1a950cce3:;;
	return true;
}



inline jule::Bool _210b702bc_has_suffix(jule::Str _6119_s, jule::Str _6127_sub) {
	return _210b89814__has_suffix(_6119_s,_6127_sub,0LL);
}



inline jule::I64 _210b707ea_find_at(jule::Str _6916_s, jule::Str _6924_sub, jule::I64 _6938_i) {
	if ((((_6938_i < 0LL) || (_6916_s.len() < _6924_sub.len())) || (_6924_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_6938_i < _6916_s.len()); (_6938_i)++) {
		{
			if (_210b6ec4a__has_prefix(_6916_s,_6924_sub,_6938_i)) {
				return _6938_i;
			};
		}
	_iter_next_1a9511973:;
	}
	_iter_end_1a9511973:;;
	return -1LL;
}



inline jule::I64 _20ece2cae_find_last_at(jule::Str _9221_s, jule::Str _9229_sub, jule::I64 _9239_i) {
	jule::I64 _9313_j = ((_9239_i - _9229_sub.len()) + 1LL);;
	if (((((_9229_sub.len() == 0LL) || (_9239_i < 0LL)) || (_9239_i >= _9221_s.len())) || (_9313_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9313_j >= 0LL); (_9313_j)--) {
		{
			jule::I64 _9917_k = _9313_j;;
			jule::I64 _10017_z = 0LL;;
			for (; (_10017_z < _9229_sub.len()); std::tie(_9917_k,_10017_z) = std::make_tuple(static_cast<jule::I64>((_9917_k + 1LL)),static_cast<jule::I64>((_10017_z + 1LL)))) {
				{
					if ((_9221_s[_9917_k] != _9229_sub[_10017_z])) {
						goto _iter_next_1a9514657;
					};
				}
			_iter_next_1a95161c5:;
			}
			_iter_end_1a95161c5:;;
			return _9313_j;
		}
	_iter_next_1a9514657:;
	}
	_iter_end_1a9514657:;;
	return -1LL;
}



inline jule::I64 _20ece2de1_find_last(jule::Str _11418_s, jule::Str _11426_sub) {
	return static_cast<jule::I64>(_20ece2cae_find_last_at(_11418_s,_11426_sub,static_cast<jule::I64>((_11418_s.len() - 1LL))));
}



inline jule::I64 _210913291__find_rune(jule::Slice<jule::U8>& _17016_s, jule::I32 _17027_r) {
	jule::I64 _17113_i = 0LL;;
	while ((_17113_i < _17016_s.len())) {
		{
			jule::I32 _17314_br;;
			jule::I64 _17318_n;;
			std::tie(_17314_br,_17318_n) = _20eb97acb_decode_rune(_17016_s.slice(_17113_i));
			if ((_17027_r == _17314_br)) {
				return _17113_i;
			};
			_17113_i+=_17318_n;
		}
	_iter_next_1a951e3dc:;
	}
	_iter_end_1a951e3dc:;;
	return -1LL;
}



inline jule::I64 _210913736_find_last_byte(jule::Str _19723_s, jule::U8 _19731_b) {
	jule::I64 _19813_i = (_19723_s.len() - 1LL);;
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			if ((_19723_s[_19813_i] == _19731_b)) {
				return _19813_i;
			};
		}
	_iter_next_1a9520e8d:;
	}
	_iter_end_1a9520e8d:;;
	return -1LL;
}



inline jule::I64 _210913c0e_find_any(jule::Str _23817_s, jule::Str _23825_runes) {
	jule::Slice<jule::U8> _2399_sb = _20ecd33ed_stobs(_23817_s);;
	jule::Slice<jule::U8> _24013_rb = _20ecd33ed_stobs(_23825_runes);;
	jule::I64 _24113_i = 0LL;;
	while ((_24113_i < _2399_sb.len())) {
		{
			jule::I32 _24314_r;;
			jule::I64 _24317_n;;
			std::tie(_24314_r,_24317_n) = _20eb97acb_decode_rune(_2399_sb.slice(_24113_i));
			if ((_210913291__find_rune(_24013_rb,_24314_r) != -1LL)) {
				return _24113_i;
			};
			_24113_i+=_24317_n;
		}
	_iter_next_1a9525679:;
	}
	_iter_end_1a9525679:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _210913e73_split(jule::Str _27214_s, jule::Str _27222_sub, jule::I64 _27236_n) {
	jule::I64 _27313_cap = _27236_n;;
	if ((_27236_n < 0LL)) {
		_27313_cap=16LL;
	};
	jule::Slice<jule::Str> _27713_parts = jule::Slice<jule::Str>::alloc(0LL,_27313_cap);;
	if ((_27236_n == 0LL)) {
		return _27713_parts;
	};
	if ((_27236_n < 0LL)) {
		_27236_n=static_cast<jule::I64>(_27214_s.len());
	};
	jule::I64 _28413_i = 0LL;;
	for (; (_27236_n > 0LL); (_27236_n)--) {
		{
			jule::I64 _28613_j = _210b707ea_find_at(_27214_s,_27222_sub,_28413_i);;
			if ((_28613_j == -1LL)) {
				goto _iter_end_1a952c40b;
			};
			_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i,_28613_j));;
			_28413_i=static_cast<jule::I64>((_28613_j + _27222_sub.len()));
		}
	_iter_next_1a952c40b:;
	}
	_iter_end_1a952c40b:;;
	if (((_27236_n > 0LL) && (_28413_i < _27214_s.len()))) {
		_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i));;
	};
	return _27713_parts;
}



inline jule::Bool _2109140a5_contains(jule::Str _30017_s, jule::Str _30025_sub) {
	return (_210b707ea_find_at(_30017_s,_30025_sub,0LL) != -1LL);
}



inline jule::Bool _210b7108c_contains_any(jule::Str _31621_s, jule::Str _31629_runes) {
	return (_210913c0e_find_any(_31621_s,_31629_runes) != -1LL);
}



inline jule::Str _210bd1196_replace(jule::Str _34216_s, jule::Str _34224_sub, jule::Str _34234_new, jule::I64 _34248_n) {
	if (((_34248_n == 0LL) || (_34224_sub == _34234_new))) {
		return _34216_s;
	};
	if ((_34248_n < 0LL)) {
		_34248_n=static_cast<jule::I64>(_34216_s.len());
	};
	jule::Str _35113_ss = jule::Str();;
	jule::I64 _35213_i = 0LL;;
	for (; (_34248_n > 0LL); (_34248_n)--) {
		{
			jule::I64 _35413_j = _210b707ea_find_at(_34216_s,_34224_sub,_35213_i);;
			if ((_35413_j == -1LL)) {
				goto _iter_end_1a9535a96;
			};
			_35113_ss+=_34216_s.slice(_35213_i,_35413_j);
			_35113_ss+=_34234_new;
			_35213_i=static_cast<jule::I64>((_35413_j + _34224_sub.len()));
		}
	_iter_next_1a9535a96:;
	}
	_iter_end_1a9535a96:;;
	_35113_ss+=_34216_s.slice(_35213_i);
	return _35113_ss;
}



inline void _210913505__trim_left(jule::Slice<jule::U8>& _39420_s, jule::Slice<jule::U8>& _39432_cutset) {
	jule::I64 _39513_i = 0LL;;
	while ((_39513_i < _39420_s.len())) {
		{
			jule::I32 _39714_r;;
			jule::I64 _39717_n;;
			std::tie(_39714_r,_39717_n) = _20eb97acb_decode_rune(_39420_s.slice(_39513_i));
			if ((_210913291__find_rune(_39432_cutset,_39714_r) == -1LL)) {
				_39420_s=_39420_s.slice(_39513_i);
				return;;
			};
			_39513_i+=_39717_n;
		}
	_iter_next_1a953a969:;
	}
	_iter_end_1a953a969:;;
	_39420_s=nullptr;
}



inline jule::Str _210bd1ae2_trim_left(jule::Str _40918_s, jule::Str _40926_cutset) {
	jule::Slice<jule::U8> _41013_bytes = _20ecd33ed_stobs(_40918_s);;
	jule::Slice<jule::U8> _4119_bcutset = _20ecd33ed_stobs(_40926_cutset);;
	_210913505__trim_left(_41013_bytes,_4119_bcutset);
	return static_cast<jule::Str>(_41013_bytes);
}



inline void _210bd1c24__trim_right(jule::Slice<jule::U8>& _41621_s, jule::Slice<jule::U8>& _41633_cutset) {
	jule::I64 _41713_i = _41621_s.len();;
	while ((_41713_i > 0LL)) {
		{
			jule::I32 _41914_r;;
			jule::I64 _41917_n;;
			std::tie(_41914_r,_41917_n) = _20eb9815e_decode_last_rune(_41621_s.slice(0LL,_41713_i));
			if ((_210913291__find_rune(_41633_cutset,_41914_r) == -1LL)) {
				_41621_s=_41621_s.slice(0LL,_41713_i);
				return;;
			};
			_41713_i-=_41917_n;
		}
	_iter_next_1a953d8d4:;
	}
	_iter_end_1a953d8d4:;;
	_41621_s=nullptr;
}



inline jule::Str _210bd1e88_trim(jule::Str _44013_s, jule::Str _44021_cutset) {
	jule::Slice<jule::U8> _44113_bytes = _20ecd33ed_stobs(_44013_s);;
	jule::Slice<jule::U8> _4429_bcutset = _20ecd33ed_stobs(_44021_cutset);;
	_210913505__trim_left(_44113_bytes,_4429_bcutset);
	_210bd1c24__trim_right(_44113_bytes,_4429_bcutset);
	return static_cast<jule::Str>(_44113_bytes);
}



inline jule::Bool _20ec2a532_is_path_sep(jule::U8 _4820_c) {
	return ((_4820_c == 92LLU) || (_4820_c == '/'));
}



inline jule::Bool _20ec28684_is_slash(jule::U8 _5213_c) {
	return ((_5213_c == '\\') || (_5213_c == '/'));
}



inline jule::U8 _20ec287b6_to_upper(jule::U8 _5413_c) {
	if ((('a' <= _5413_c) && (_5413_c <= 'z'))) {
		return static_cast<jule::U8>((_5413_c - ('a' - 'A')));
	};
	return _5413_c;
}



inline jule::I64 _20ec28464_volume_name_len(jule::Str _8220_path) {
	if ((_8220_path.len() < 2LL)) {
		return 0LL;
	};
	jule::U8 _879_c = _8220_path[0LL];;
	if (((_8220_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;
	};
	if (((!(_20ec28684_is_slash(_8220_path[0LL]))) || (!(_20ec28684_is_slash(_8220_path[1LL]))))) {
		return 0LL;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _20ec26242_cut_path(_8220_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _20ec26242_cut_path(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8220_path.len());
	};
	if (((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1)))) {
		return static_cast<jule::I64>(((_8220_path.len() - _9518_rest.len()) - 1LL));
	};
	if (((((_9613_p2.len() == 3LL) && (_20ec287b6_to_upper(_9613_p2[0LL]) == 'U')) && (_20ec287b6_to_upper(_9613_p2[1LL]) == 'N')) && (_20ec287b6_to_upper(_9613_p2[2LL]) == 'C'))) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _20ec26242_cut_path(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _20ec26242_cut_path(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8220_path.len());
		};
	};
	return static_cast<jule::I64>(((_8220_path.len() - _9518_rest.len()) - 1LL));
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _20ec26242_cut_path(jule::Str _11913_path) {
	jule::Str _11926_before = jule::Str();
	jule::Str _11939_after = jule::Str();
	jule::Bool _11951_found = jule::Bool();
	{
		auto &expr = _11913_path;
		auto it = expr.begin();
		_iter_begin_1a956052c:;
		if (it != expr.end()) {
			jule::I64 _1209_i = it - expr.begin();
			{
				if (_20ec28684_is_slash(_11913_path[_1209_i])) {
					_11926_before = _11913_path.slice(0LL,_1209_i);
					_11939_after = _11913_path.slice((_1209_i + 1LL));
					_11951_found = true;
					return std::make_tuple(_11926_before,_11939_after,_11951_found);
				};
			}
			_iter_next_1a956052c:;
			++it;
			_1209_i++;
			goto _iter_begin_1a956052c;
		}
		_iter_end_1a956052c:;
	};
	_11926_before = _11913_path;
	_11939_after = jule::Str();
	_11951_found = false;
	return std::make_tuple(_11926_before,_11939_after,_11951_found);
}



inline std::tuple<jule::Str,jule::Bool> _20ec264d9_full_path(jule::Str _12814_name) {
	jule::Str _12827_path = jule::Str();
	jule::Bool _12838_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16_name = _20ea9b54b_utf16_from_str(_12814_name);;
	jule::U16* _1309_p = (&(_1299_utf16_name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n));;
			_13113_n=static_cast<jule::U32>(_20eab5a1b_get_full_path_name(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr));
			if ((_13113_n == 0LLU)) {
				_12827_path = jule::Str();
				_12838_ok = false;
				return std::make_tuple(_12827_path,_12838_ok);
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				_12827_path = _20eaa7458_utf16_to_str(_13317_buff.slice(0LL,static_cast<jule::I64>(_13113_n)));
				_12838_ok = true;
				return std::make_tuple(_12827_path,_12838_ok);
			};
		}
	_iter_next_1a9562a90:;
	}
	_iter_end_1a9562a90:;;
	_12827_path = jule::Str();
	_12838_ok = false;
	return std::make_tuple(_12827_path,_12838_ok);
}



inline std::tuple<jule::Str,jule::Bool> _20ec26819___abs(jule::Str _14514_path) {
	jule::Bool _14532_ok = jule::Bool();
	if (_14514_path.empty()) {
		_14514_path=jule::Str(".", 1);
	};
	std::tie(_14514_path,_14532_ok) = _20ec264d9_full_path(_14514_path);
	if ((!(_14532_ok))) {
		_14532_ok = false;
		return std::make_tuple(jule::Str(),_14532_ok);
	};
	_14532_ok = true;
	return std::make_tuple(_20ec983c4_clean(_14514_path),_14532_ok);
}



inline jule::Str _20ec26ab1___join(jule::Slice<jule::Str> _15915_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_last_char = 0LLU;;
	{
		auto &expr = _15915_elem;
		auto it = expr.begin();
		_iter_begin_1a9568227:;
		if (it != expr.end()) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1a9568c61:;
					}
					else if (_20ec28684_is_slash(_16113_last_char)) {
						_case_begin_1a9568953:;
						{
							while (((_16217_e.len() > 0LL) && _20ec28684_is_slash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1a9569b63:;
							}
							_iter_end_1a9569b63:;;
						}
					}
					else if ((_16113_last_char == ':')) {
						_case_begin_1a95689b9:;
					}
					else {
						_case_begin_1a95688dc:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_last_char='\\';
						}
					}
					_match_end_1a9568821:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_last_char=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1a9568227:;
			++it;
			goto _iter_begin_1a9568227;
		}
		_iter_end_1a9568227:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();
	};
	return _20ec983c4_clean(_16013_s);
}



inline jule::Str _20ec983c4_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;;
	jule::I64 _1109_vol_len = _20ec28464_volume_name_len(_10818_path);;
	(_10818_path).mut_slice(_1109_vol_len);;
	if (_10818_path.empty()) {
		if ((((_1109_vol_len > 1LL) && _20ec2a532_is_path_sep(_1099_original_path[0LL])) && _20ec2a532_is_path_sep(_1099_original_path[1LL]))) {
			return _20eca68ee_from_slash(_1099_original_path);
		};
		return (_1099_original_path + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _20ec2a532_is_path_sep(_10818_path[0LL]);;
	jule::I64 _1269_n = _10818_path.len();;
	_20ec88738_LazyBuff _12713_out = _20ec88738_LazyBuff(_10818_path,jule::Slice<jule::U8>(),jule::I64(),_1099_original_path,_1109_vol_len);;
	jule::I64 _13214_r = 0LL;;
	jule::I64 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_20ec906a7_append(&_12713_out, 92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_20ec2a532_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1a95755b9:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _20ec2a532_is_path_sep(_10818_path[(_13214_r + 1LL)])))) {
					_case_begin_1a9576114:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _20ec2a532_is_path_sep(_10818_path[(_13214_r + 2LL)])))) {
					_case_begin_1a957617a:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1a957925a:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_20ec2a532_is_path_sep(static_cast<jule::U8>(_20ec8b9e4_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1a9579612:;
									}
									_iter_end_1a9579612:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1a95792e3:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_20ec906a7_append(&_12713_out, 92LLU);
									};
									_20ec906a7_append(&_12713_out, '.');
									_20ec906a7_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1a95791c2:;
						};
					}
				}
				else {
					_case_begin_1a957142d:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_20ec906a7_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_vol_len == 0LL)) && (_13214_r != 0LL))) {
							jule::I64 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_20ec2a532_is_path_sep(_10818_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10818_path[_17525_i] == ':')) {
										_20ec906a7_append(&_12713_out, '.');
										_20ec906a7_append(&_12713_out, 92LLU);
										goto _iter_end_1a9572d36;
									};
								}
							_iter_next_1a9572d36:;
							}
							_iter_end_1a9572d36:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_20ec2a532_is_path_sep(_10818_path[_13214_r])))); (_13214_r)++) {
							{
								_20ec906a7_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1a9572ad3:;
						}
						_iter_end_1a9572ad3:;;
					}
				}
				_match_end_1a9571373:;
			};
		}
	_iter_next_1a9571263:;
	}
	_iter_end_1a9571263:;;
	if ((_12713_out._field_w == 0LL)) {
		_20ec906a7_append(&_12713_out, '.');
	};
	return _20eca68ee_from_slash(_20ec937ba_string(&_12713_out));
}



inline jule::Str _20eca68ee_from_slash(jule::Str _21119_path) {
	if ((92LL == '/')) {
		return _21119_path;
	};
	return _210bd1196_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _20ecb5a51_join(jule::Slice<jule::Str> _22513_elem) {
	return _20ec26ab1___join(_22513_elem);
}



inline jule::Str _20ecb6623_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_20ec2a532_is_path_sep(_23012_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_23012_path[_23113_i] == '.')) {
				return _23012_path.slice(_23113_i);
			};
		}
	_iter_next_1a957e392:;
	}
	_iter_end_1a957e392:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _20ecb81a2_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _20ec26819___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _20eca119b_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25417_path.len() > 0LL) && _20ec2a532_is_path_sep(_25417_path[(_25417_path.len() - 1LL)]))) {
		{
			(_25417_path).mut_slice(0LL,(_25417_path.len() - 1LL));;
		}
	_iter_next_1a95823d9:;
	}
	_iter_end_1a95823d9:;;
	(_25417_path).mut_slice(_20eca9429_volume_name(_25417_path).len());;
	jule::I64 _26513_i = (_25417_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_20ec2a532_is_path_sep(_25417_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1a958383b:;
	}
	_iter_end_1a958383b:;;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(92LL);
	};
	return _25417_path;
}



inline jule::Str _20ec93c93_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _20eca9429_volume_name(_28512_path);;
	jule::I64 _28713_i = (_28512_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_20ec2a532_is_path_sep(_28512_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1a958199e:;
	}
	_iter_end_1a958199e:;;
	jule::Str _2919_dir = _20ec983c4_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _20eca9429_volume_name(jule::Str _30320_path) {
	return _20eca68ee_from_slash(_30320_path.slice(0LL,_20ec28464_volume_name_len(_30320_path)));
}



inline jule::I64 _20dd16245_get_last_fs_error(void) {
	jule::I64 _729_err = _20de45154_get_last_errno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a95b54e9:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a95b4e66:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1a95b4ecc:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1a95b5043:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a95b50a9:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a95b572a:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1a95b5791:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a95b5807:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a95b586d:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a95b58d4:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a95b594a:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a95b59b1:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a95b5a27:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a95b5a8d:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a95b5b04:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1a95b5b6a:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a95b5bd1:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a95b5c47:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a95b5cad:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a95b5d35:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1a95b5dac:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a95b5e34:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a95b5eab:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a95b6033:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a95b60aa:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1a95b6132:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1a95b61a9:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1a95b6231:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1a95b4a8c:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1a95b4d78:;
	};
}



inline jule::Bool _20eb9a55c_is_console_handle(jule::U64 _11622_handle) {
	return (((_11622_handle == _20de58ae6_STDIN) || (_11622_handle == _20ea82a4e_STDOUT)) || (_11622_handle == _20ea8071c_STDERR));
}



inline jule::I64 _210c80146_get_last_process_error(void) {
	jule::I64 _429_err = _20de45154_get_last_errno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a95ca069:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1a95c99d6:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1a95c9a4c:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a95c9ab3:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a95c9b29:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a95c9cd3:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a95c9d49:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1a95c9db0:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1a95c9e26:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1a95c9e8c:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1a95ca29a:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1a95c840d:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1a95c98e8:;
	};
}



inline jule::Slice<wchar_t*> _210c8ed6a_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>> _1730_us) {
	jule::Slice<wchar_t*> _1813_wcs = jule::Slice<wchar_t*>::alloc(0LL,(_1730_us.len() + 1LL));;
	{
		auto &expr = _1730_us;
		auto it = expr.begin();
		_iter_begin_1a95cd2e2:;
		if (it != expr.end()) {
			jule::I64 _199_i = it - expr.begin();
			{
				_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(((wchar_t*)((&(_1730_us[_199_i][0LL])))));;
			}
			_iter_next_1a95cd2e2:;
			++it;
			_199_i++;
			goto _iter_begin_1a95cd2e2;
		}
		_iter_end_1a95cd2e2:;
	};
	_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(nullptr);;
	return _1813_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _210c90145_str_slice_to_ustr_slice(jule::Slice<jule::Str> _2628_s) {
	jule::Slice<jule::Slice<jule::U16>> _2713_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,_2628_s.len());;
	{
		auto &expr = _2628_s;
		auto it = expr.begin();
		_iter_begin_1a95cdaa6:;
		if (it != expr.end()) {
			jule::Str &_2812_p = *it;
			{
				_2713_us = jule::alloc_for_append(_2713_us,1);_2713_us.__push(_20ea9b54b_utf16_from_str(_2812_p));;
			}
			_iter_next_1a95cdaa6:;
			++it;
			goto _iter_begin_1a95cdaa6;
		}
		_iter_end_1a95cdaa6:;
	};
	return _2713_us;
}



inline jule::I64 _210c90475_execvp(jule::Str _3411_file, jule::Slice<jule::Str> _3422_argv) {
	jule::Slice<jule::U16> _359_utf16_file = _20ea9b54b_utf16_from_str(_3411_file);;
	jule::Slice<jule::Slice<jule::U16>> _369_ucargv = _210c90145_str_slice_to_ustr_slice(_3422_argv);;
	jule::Slice<wchar_t*> _379_cargv = _210c8ed6a_ustr_slice_to_wcstr_slice(_369_ucargv);;
	return static_cast<jule::I64>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_359_utf16_file[0LL])))),(&(_379_cargv[0LL]))));
}



inline jule::I64 _210c90860_execve(jule::Str _4111_file, jule::Slice<jule::Str> _4122_argv, jule::Slice<jule::Str> _4135_env) {
	jule::Slice<jule::Slice<jule::U16>> _429_ucargv = _210c90145_str_slice_to_ustr_slice(_4122_argv);;
	jule::Slice<wchar_t*> _439_cargv = _210c8ed6a_ustr_slice_to_wcstr_slice(_429_ucargv);;
	jule::Slice<jule::Slice<jule::U16>> _449_ucenv = _210c90145_str_slice_to_ustr_slice(_4135_env);;
	jule::Slice<wchar_t*> _459_cenv = _210c8ed6a_ustr_slice_to_wcstr_slice(_449_ucenv);;
	jule::Slice<jule::U16> _469_utf16_file = _20ea9b54b_utf16_from_str(_4111_file);;
	return static_cast<jule::I64>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_469_utf16_file[0LL])))),(&(_439_cargv[0LL])),(&(_459_cenv[0LL]))));
}



inline void _210c91564_exit(jule::I64 _1213_code) {
	_20eab9d50_exit(_1213_code);
}



inline jule::Str _210c91762_executable(void) {
	return jule::executable();
}



inline jule::Bool _210c33704_is_std_header_path(jule::Str _2627_p) {
	return ((_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>'));
}



inline jule::Bool _210c33836_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _210c31d84_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1a9611a2e:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3128_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1a9611a2e:;
			++it;
			goto _iter_begin_1a9611a2e;
		}
		_iter_end_1a9611a2e:;
	};
	return false;
}



inline jule::Bool _210c33abc_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _210c3258d_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1a96139cb:;
		if (it != expr.end()) {
			jule::Str &_4712_e = *it;
			{
				if ((_4225_ext == _4712_e)) {
					return true;
				};
			}
			_iter_next_1a96139cb:;
			++it;
			goto _iter_begin_1a96139cb;
		}
		_iter_end_1a96139cb:;
	};
	{
		auto &expr = _20dcb77ac_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1a9613db6:;
		if (it != expr.end()) {
			jule::Str &_5312_e = *it;
			{
				if ((_4225_ext == _5312_e)) {
					return true;
				};
			}
			_iter_next_1a9613db6:;
			++it;
			goto _iter_begin_1a9613db6;
		}
		_iter_end_1a9613db6:;
	};
	return false;
}



inline jule::Str _210c4036a_logf(jule::Str _28913_fmt, jule::Slice<jule::Any> _28926_args) {
	return _210c40c83_apply_fmt(_28913_fmt,jule::Any(_28926_args));
}



inline jule::Str _210c40656_arg_to_str(jule::Any _29315_arg) {
	{
		auto &_match_expr{ _29315_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a9614ee9:;
			{
				return _29315_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1a961589b:;
			{
				return static_cast<jule::Str>(_29315_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1a96157ad:;
			{
				return static_cast<jule::Str>(_29315_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1a96154d3:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1a961547d:;
	};
}



inline jule::I64 _210c408ed_find_next_fmt(jule::Str _30618_fmt) {
	{
		auto &expr = _30618_fmt;
		auto it = expr.begin();
		_iter_begin_1a961610a:;
		if (it != expr.end()) {
			jule::I64 _3079_i = it - expr.begin();
			jule::U8 &_30712_b = *it;
			{
				if ((_30712_b == '@')) {
					return _3079_i;
				};
			}
			_iter_next_1a961610a:;
			++it;
			_3079_i++;
			goto _iter_begin_1a961610a;
		}
		_iter_end_1a961610a:;
	};
	return -1LL;
}



inline jule::Str _210c40c83_apply_fmt(jule::Str _31518_fmt, jule::Slice<jule::Any> _31528_args) {
	jule::Str _31613_s = jule::Str();;
	{
		auto &expr = _31528_args;
		auto it = expr.begin();
		_iter_begin_1a9617bab:;
		if (it != expr.end()) {
			jule::Any &_31812_arg = *it;
			{
				jule::I64 _31913_i = _210c408ed_find_next_fmt(_31518_fmt);;
				if ((_31913_i == -1LL)) {
					goto _iter_end_1a9617bab;
				};
				_31613_s+=_31518_fmt.slice(0LL,_31913_i);
				_31613_s+=_210c40656_arg_to_str(jule::Any(_31812_arg));
				(_31518_fmt).mut_slice((_31913_i + 1LL));;
			}
			_iter_next_1a9617bab:;
			++it;
			goto _iter_begin_1a9617bab;
		}
		_iter_end_1a9617bab:;
	};
	_31613_s+=_31518_fmt;
	return _31613_s;
}



inline jule::Bool _210c41b96_is_top_directive(jule::Str _2825_directive) {
	return ((_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5)));
}



inline jule::Bool _210c43428_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _210c43714_is_darwin(jule::Str _5418_os) {
	return (_5418_os == jule::Str("darwin", 6));
}



inline jule::Bool _210c439ab_is_linux(jule::Str _5717_os) {
	return (_5717_os == jule::Str("linux", 5));
}



inline jule::Bool _210c43c97_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _210c4403e_is_amd64(jule::Str _6317_arch) {
	return (_6317_arch == jule::Str("amd64", 5));
}



inline jule::Bool _210c442d6_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _210c4457d_is_unix(jule::Str _6916_os) {
	return (_210c43714_is_darwin(_6916_os) || _210c439ab_is_linux(_6916_os));
}



inline jule::Bool _210c448ad_is_32bit(jule::Str _7217_arch) {
	return _210c43c97_is_i386(_7217_arch);
}



inline jule::Bool _210c44b55_is_64bit(jule::Str _7517_arch) {
	return (_210c4403e_is_amd64(_7517_arch) || _210c442d6_is_arm64(_7517_arch));
}



inline void _210c7db7d_init(void) {
	jule::Str _2513_path = _210c91762_executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	jule::Str _309_pwd = ({
		auto except = _20ec50d0a_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:31:9"));;
			return;;
			return;;
		} jule::Str();});
	});;
	jule::Str _359_path_exec = _20ec93c93_dir(_2513_path);;
	_2513_path=_20ecb5a51_join(jule::Slice<jule::Str>({_359_path_exec,jule::Str("..", 2)}));
	{
		_210c616ee_PATH_WD=_309_pwd;
		_210c52943_PATH_EXEC=_359_path_exec;
		_210c5359d_PATH_STDLIB=_20ecb5a51_join(jule::Slice<jule::Str>({_2513_path,jule::Str("std", 3)}));
		_210c618ca_PATH_API=_20ecb5a51_join(jule::Slice<jule::Str>({_210c52943_PATH_EXEC,jule::Str("..", 2)}));
		_210c618ca_PATH_API=_20ecb5a51_join(jule::Slice<jule::Str>({_210c618ca_PATH_API,jule::Str("api", 3)}));
		_210c618ca_PATH_API=_20ecb5a51_join(jule::Slice<jule::Str>({_210c618ca_PATH_API,jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _2110e7975_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _2110443d8_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1a96ae02c:;
		if (it != expr.end()) {
			jule::Str &_31412_op = *it;
			{
				if ((_31320_kind == _31412_op)) {
					return true;
				};
			}
			_iter_next_1a96ae02c:;
			++it;
			goto _iter_begin_1a96ae02c;
		}
		_iter_end_1a96ae02c:;
	};
	return false;
}



inline jule::Bool _2110e7c61_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _2110444c6_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1a96a211e:;
		if (it != expr.end()) {
			jule::Str &_32512_op = *it;
			{
				if ((_32418_kind == _32512_op)) {
					return true;
				};
			}
			_iter_next_1a96a211e:;
			++it;
			goto _iter_begin_1a96a211e;
		}
		_iter_end_1a96a211e:;
	};
	return false;
}



inline jule::Bool _2110e82e4_is_str(jule::Str _34615_k) {
	return ((!(_34615_k.empty())) && ((_34615_k[0LL] == '\"') || _2110e858b_is_raw_str(_34615_k)));
}



inline jule::Bool _2110e858b_is_raw_str(jule::Str _34919_k) {
	return ((!(_34919_k.empty())) && (_34919_k[0LL] == '`'));
}



inline jule::Bool _2110e8833_is_rune(jule::Str _35316_k) {
	return ((!(_35316_k.empty())) && (_35316_k[0LL] == '\''));
}



inline jule::Bool _2110e8e0a_is_bool(jule::Str _35916_k) {
	return ((_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5)));
}



inline jule::Bool _2110e91a2_is_float(jule::Str _36217_k) {
	if (_210b8d120_has_prefix(_36217_k,jule::Str("0x", 2))) {
		return _210b7108c_contains_any(_36217_k,jule::Str(".pP", 3));
	};
	return _210b7108c_contains_any(_36217_k,jule::Str(".eE", 3));
}



inline jule::Bool _2110e9449_is_num(jule::Str _37015_k) {
	if (_37015_k.empty()) {
		return false;
	};
	jule::U8 _3759_b = _37015_k[0LL];;
	return ((_3759_b == '.') || (('0' <= _3759_b) && (_3759_b <= '9')));
}



inline jule::Bool _2110e9988_is_ignore_ident(jule::Str _38524_ident) {
	return (_38524_ident == jule::Str("_", 1));
}



inline jule::Bool _2110e9c30_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _2110ea26e_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _2110442ea_SPACES;
		auto it = expr.begin();
		_iter_begin_1a96b9950:;
		if (it != expr.end()) {
			jule::I32 &_40312_cr = *it;
			{
				if ((_40217_r == _40312_cr)) {
					return true;
				};
			}
			_iter_next_1a96b9950:;
			++it;
			goto _iter_begin_1a96b9950;
		}
		_iter_end_1a96b9950:;
	};
	return false;
}



inline jule::Bool _2110ea637_is_letter(jule::I32 _41318_r) {
	return _210b95721_is_letter(_41318_r);
}



inline jule::Bool _2110eab76_is_decimal(jule::U8 _43519_b) {
	return (('0' <= _43519_b) && (_43519_b <= '9'));
}



inline jule::Bool _2110eae1d_is_binary(jule::U8 _43818_b) {
	return ((_43818_b == '0') || (_43818_b == '1'));
}



inline jule::Bool _2110eb1b5_is_octal(jule::U8 _44117_b) {
	return (('0' <= _44117_b) && (_44117_b <= '7'));
}



inline jule::Bool _2110eb45c_is_hex(jule::U8 _44415_b) {
	{
		
		if ((('0' <= _44415_b) && (_44415_b <= '9'))) {
			_case_begin_1a96be12a:;
			{
				return true;
			}
		}
		else if ((('a' <= _44415_b) && (_44415_b <= 'f'))) {
			_case_begin_1a96bd943:;
			{
				return true;
			}
		}
		else if ((('A' <= _44415_b) && (_44415_b <= 'F'))) {
			_case_begin_1a96bd9a9:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a96bd8cc:;
			{
				return false;
			}
		}
		_match_end_1a96bd13a:;
	};
}



inline jule::Bool _2110eb704_is_assign(jule::U64 _45918_id) {
	return (((((((_45918_id == static_cast<jule::U64>(2LLU)) || (_45918_id == static_cast<jule::U64>(31LLU))) || (_45918_id == static_cast<jule::U64>(34LLU))) || (_45918_id == static_cast<jule::U64>(20LLU))) || (_45918_id == static_cast<jule::U64>(28LLU))) || (_45918_id == static_cast<jule::U64>(3LLU))) || (_45918_id == static_cast<jule::U64>(7LLU)));
}



inline jule::Bool _2110eb99b_is_postfix_op(jule::Str _47022_kind) {
	{
		auto &expr = _211044718_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1a96c244c:;
		if (it != expr.end()) {
			jule::Str &_47112_op = *it;
			{
				if ((_47022_kind == _47112_op)) {
					return true;
				};
			}
			_iter_next_1a96c244c:;
			++it;
			goto _iter_begin_1a96c244c;
		}
		_iter_end_1a96c244c:;
	};
	return false;
}



inline jule::Bool _2110ebc43_is_assign_op(jule::Str _48121_kind) {
	if (_2110eb99b_is_postfix_op(_48121_kind)) {
		return true;
	};
	{
		auto &expr = _2110448c2_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1a96c3195:;
		if (it != expr.end()) {
			jule::Str &_48612_op = *it;
			{
				if ((_48121_kind == _48612_op)) {
					return true;
				};
			}
			_iter_next_1a96c3195:;
			++it;
			goto _iter_begin_1a96c3195;
		}
		_iter_end_1a96c3195:;
	};
	return false;
}



inline jule::Ptr<_2110ec628_File> _2110edb57_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_2110ec628_File>(_2110ec628_File(_6321_path,jule::Slice<jule::U8>(),jule::Slice<jule::Ptr<_2110e7238_Token>>()));
}



inline _210c3ee2a_Log _2111001ca_make_err(jule::I64 _11113_row, jule::I64 _11123_col, jule::Ptr<_2110ec628_File>& _11134_f, jule::Str _11144_fmt, jule::Slice<jule::Any> _11157_args) {
	return _210c3ee2a_Log(static_cast<jule::I64>(1LL),_11113_row,_11123_col,_11134_f.get()._field_path,_210c4036a_logf(_11144_fmt,jule::Any(_11157_args)),jule::Str(),jule::Str());
}



inline jule::Bool _211100560_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes, jule::Str _12137_prefix) {
	if ((_12122_bytes.len() < _12137_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1a96c5b48:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12122_bytes[_1259_i] != _12137_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1a96c5b48:;
			++it;
			_1259_i++;
			goto _iter_begin_1a96c5b48;
		}
		_iter_end_1a96c5b48:;
	};
	return true;
}



inline jule::Str _2111008a1_float_fmt_e(jule::Slice<jule::U8>& _13317_txt, jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if ((_13334_i >= _13317_txt.len())) {
		return _13344_lit;
	};
	jule::U8 _13913_b = _13317_txt[_13334_i];;
	if ((_13913_b == '_')) {
		return _13344_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13334_i)++;
		if ((_13334_i >= _13317_txt.len())) {
			return _13344_lit;
		};
		if ((_13317_txt[_13334_i] == '_')) {
			return _13344_lit;
		};
	};
	jule::I64 _1539_first = _13334_i;;
	for (; (_13334_i < _13317_txt.len()); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if (((_13913_b != '_') && (!(_2110eab76_is_decimal(_13913_b))))) {
				goto _iter_end_1a96c8a3b;
			};
		}
	_iter_next_1a96c8a3b:;
	}
	_iter_end_1a96c8a3b:;;
	if ((_13334_i == _1539_first)) {
		_13344_lit = jule::Str();
		return _13344_lit;
	};
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _211100c36_float_fmt_p(jule::Slice<jule::U8>& _16717_txt, jule::I64 _16730_i) {
	return _2111008a1_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _211101077_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt, jule::I64 _17138_i) {
	if ((_17121_txt[_17138_i] != '.')) {
		return jule::Str();
	};
	(_17138_i)++;
	_julec_label_loop:;
	for (; (_17138_i < _17121_txt.len()); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];;
			{
				
				if ((_17913_b == '_') || _2110eab76_is_decimal(_17913_b)) {
					_case_begin_1a96cc29d:;
					{
						goto _iter_next_1a96cb412;
					}
				}
				else if (_2111027a4_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1a96cc325:;
					{
						return _211100c36_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1a96cc204:;
					{
						goto _iter_end_1a96cb412;
					}
				}
				_match_end_1a96cc17c:;
			};
		}
	_iter_next_1a96cb412:;
	}
	_iter_end_1a96cb412:;;
	return jule::Str();
}



inline jule::Str _2111013b8_float_fmt_dotfp(jule::Slice<jule::U8>& _19221_txt, jule::I64 _19238_i) {
	_19238_i+=2LL;
	return _2111008a1_float_fmt_e(_19221_txt,_19238_i);
}



inline jule::Str _211101709_float_fmt_dotp(jule::Slice<jule::U8>& _19720_txt, jule::I64 _19737_i) {
	(_19737_i)++;
	return _2111008a1_float_fmt_e(_19720_txt,_19737_i);
}



inline jule::Str _211101ad3_float_num(jule::Slice<jule::U8>& _20215_txt, jule::I64 _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if ((_20232_i >= _20215_txt.len())) {
		_20242_lit = static_cast<jule::Str>(_20215_txt);
		return _20242_lit;
	};
	if ((_20215_txt[_20232_i] == '_')) {
		(_20232_i)--;
		_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
		return _20242_lit;
	};
	for (; (_20232_i < _20215_txt.len()); (_20232_i)++) {
		{
			jule::U8 _21213_b = _20215_txt[_20232_i];;
			if (((_20232_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20242_lit = _2111008a1_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			};
			if (((_21213_b != '_') && (!(_2110eab76_is_decimal(_21213_b))))) {
				goto _iter_end_1a96d0b86;
			};
		}
	_iter_next_1a96d0b86:;
	}
	_iter_end_1a96d0b86:;;
	if ((_20232_i == 1LL)) {
		return _20242_lit;
	};
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _211101d7a_common_num(jule::Slice<jule::U8>& _22716_txt) {
	jule::Str _22731_lit = jule::Str();
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22716_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22716_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1a96d433d:;
					{
						_22731_lit = _211101ad3_float_num(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1a96d43b5:;
					{
						goto _iter_next_1a96d3826;
					}
				}
				else if (_211102463_is_float_fmt_e(_23113_b,_22813_i)) {
					_case_begin_1a96d443c:;
					{
						_22731_lit = _2111008a1_float_fmt_e(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((!(_2110eab76_is_decimal(_23113_b)))) {
					_case_begin_1a96d44b4:;
					{
						goto _iter_end_1a96d3826;
					}
				}
				_match_end_1a96d4250:;
			};
		}
	_iter_next_1a96d3826:;
	}
	_iter_end_1a96d3826:;;
	if ((_22813_i == 0LL)) {
		return _22731_lit;
	};
	_22731_lit = static_cast<jule::Str>(_22716_txt.slice(0LL,_22813_i));
	return _22731_lit;
}



inline jule::Str _211102122_binary_num(jule::Slice<jule::U8>& _25016_txt) {
	jule::Str _25031_lit = jule::Str();
	if ((!(_211100560_bytes_has_prefix(_25016_txt,jule::Str("0b", 2))))) {
		_25031_lit = jule::Str();
		return _25031_lit;
	};
	if ((_25016_txt.len() < 2LL)) {
		return _25031_lit;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25016_txt.len()); (_25913_i)++) {
		{
			if (((_25016_txt[_25913_i] != '_') && (!(_2110eae1d_is_binary(_25016_txt[_25913_i]))))) {
				goto _iter_end_1a96d7b7c;
			};
		}
	_iter_next_1a96d7b7c:;
	}
	_iter_end_1a96d7b7c:;;
	if ((_25913_i == 2LL)) {
		return _25031_lit;
	};
	_25031_lit = static_cast<jule::Str>(_25016_txt.slice(0LL,_25913_i));
	return _25031_lit;
}



inline jule::Bool _211102463_is_float_fmt_e(jule::U8 _27219_b, jule::I64 _27228_i) {
	return ((_27228_i > 0LL) && ((_27219_b == 'e') || (_27219_b == 'E')));
}



inline jule::Bool _2111027a4_is_float_fmt_p(jule::U8 _27619_b, jule::I64 _27628_i) {
	return ((_27628_i > 0LL) && ((_27619_b == 'p') || (_27619_b == 'P')));
}



inline jule::Bool _211102ae5_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28024_txt, jule::I64 _28041_i) {
	if ((_28024_txt[_28041_i] != '.')) {
		return false;
	};
	(_28041_i)++;
	_julec_label_loop:;
	for (; (_28041_i < _28024_txt.len()); (_28041_i)++) {
		{
			jule::U8 _28713_b = _28024_txt[_28041_i];;
			{
				
				if ((_28713_b == '_') || _2110eab76_is_decimal(_28713_b)) {
					_case_begin_1a96dc3e0:;
					{
						goto _iter_next_1a96db9b6;
					}
				}
				else if (_2111027a4_is_float_fmt_p(_28713_b,_28041_i)) {
					_case_begin_1a96dc467:;
					{
						return true;
					}
				}
				else {
					_case_begin_1a96dc346:;
					{
						goto _iter_end_1a96db9b6;
					}
				}
				_match_end_1a96dc2be:;
			};
		}
	_iter_next_1a96db9b6:;
	}
	_iter_end_1a96db9b6:;;
	return false;
}



inline jule::Bool _211102e36_is_float_fmt_dotp(jule::Slice<jule::U8>& _30123_txt, jule::I64 _30136_i) {
	{
		
		if ((_30123_txt.len() < 3LL)) {
			_case_begin_1a96de2e3:;
			{
				goto _case_begin_1a96ddb0b;
			}
		}
		else if ((_30123_txt[_30136_i] != '.')) {
			_case_begin_1a96ddb0b:;
			{
				goto _case_begin_1a96ddb72;
			}
		}
		else if (((_30123_txt[(_30136_i + 1LL)] != 'p') && (_30123_txt[(_30136_i + 1LL)] != 'P'))) {
			_case_begin_1a96ddb72:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a96dda95:;
			{
				return true;
			}
		}
		_match_end_1a96dd9c9:;
	};
}



inline jule::Bool _211103277_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31424_txt, jule::I64 _31437_i) {
	{
		
		if ((_31424_txt.len() < 4LL)) {
			_case_begin_1a96e14c1:;
			{
				goto _case_begin_1a96e0d94;
			}
		}
		else if ((_31424_txt[_31437_i] != '.')) {
			_case_begin_1a96e0d94:;
			{
				goto _case_begin_1a96e0e0a;
			}
		}
		else if (((_31424_txt[(_31437_i + 1LL)] != 'f') && (_31424_txt[(_31437_i + 1LL)] != 'F'))) {
			_case_begin_1a96e0e0a:;
			{
				goto _case_begin_1a96e0e71;
			}
		}
		else if (((_31424_txt[(_31437_i + 2LL)] != 'p') && (_31424_txt[(_31437_i + 1LL)] != 'P'))) {
			_case_begin_1a96e0e71:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a96e0877:;
			{
				return true;
			}
		}
		_match_end_1a96e07ab:;
	};
}



inline jule::Str _211103640_octal_num(jule::Slice<jule::U8>& _32915_txt) {
	jule::Str _32930_lit = jule::Str();
	if ((_32915_txt[0LL] != '0')) {
		_32930_lit = jule::Str();
		return _32930_lit;
	};
	if ((_32915_txt.len() < 2LL)) {
		return _32930_lit;
	};
	jule::I64 _33713_octal_start = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32915_txt[1LL] == 'o')) {
		if ((_32915_txt.len() < 3LL)) {
			return _32930_lit;
		};
		(_33713_octal_start)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octal_start;;
	for (; (_34813_i < _32915_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32915_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32930_lit = jule::Str();
					return _32930_lit;
				};
				_32930_lit = _211101ad3_float_num(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (_211102463_is_float_fmt_e(_35013_b,_34813_i)) {
				_32930_lit = _2111008a1_float_fmt_e(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (((_35013_b != '_') && (!(_2110eb1b5_is_octal(_35013_b))))) {
				goto _iter_end_1a96e545e;
			};
		}
	_iter_next_1a96e545e:;
	}
	_iter_end_1a96e545e:;;
	if ((_34813_i == _33713_octal_start)) {
		return _32930_lit;
	};
	_32930_lit = static_cast<jule::Str>(_32915_txt.slice(0LL,_34813_i));
	return _32930_lit;
}



inline jule::Str _2111038d7_hex_num(jule::Slice<jule::U8>& _37113_txt) {
	jule::Str _37128_lit = jule::Str();
	if ((_37113_txt.len() < 3LL)) {
		return _37128_lit;
	};
	if (((_37113_txt[0LL] != '0') || ((_37113_txt[1LL] != 'x') && (_37113_txt[1LL] != 'X')))) {
		return _37128_lit;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37113_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37113_txt[_38013_i];;
			{
				
				if (_211102e36_is_float_fmt_dotp(_37113_txt,_38013_i)) {
					_case_begin_1a96eb2de:;
					{
						_37128_lit = _211101709_float_fmt_dotp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_211103277_is_float_fmt_dotfp(_37113_txt,_38013_i)) {
					_case_begin_1a96eb366:;
					{
						_37128_lit = _2111013b8_float_fmt_dotfp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_2111027a4_is_float_fmt_p(_38313_b,_38013_i)) {
					_case_begin_1a96eb3dd:;
					{
						_37128_lit = _211100c36_float_fmt_p(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_211102ae5_is_float_fmt_dotnp(_37113_txt,_38013_i)) {
					_case_begin_1a96eb465:;
					{
						_37128_lit = _211101077_float_fmt_dotnp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_2110eb45c_is_hex(_38313_b))))) {
					_case_begin_1a96eb4dc:;
					{
						goto _iter_end_1a96ea80a;
					}
				}
				_match_end_1a96eb1e0:;
			};
		}
	_iter_next_1a96ea80a:;
	}
	_iter_end_1a96ea80a:;;
	if ((_38013_i == 2LL)) {
		return _37128_lit;
	};
	_37128_lit = static_cast<jule::Str>(_37113_txt.slice(0LL,_38013_i));
	return _37128_lit;
}



inline jule::Str _211103c28_hex_escape(jule::Slice<jule::U8>& _40416_txt, jule::I64 _40429_n) {
	jule::Str _40439_seq = jule::Str();
	if ((_40416_txt.len() < _40429_n)) {
		return _40439_seq;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40429_n); (_41013_i)++) {
		{
			if ((!(_2110eb45c_is_hex(_40416_txt[_41013_i])))) {
				return _40439_seq;
			};
		}
	_iter_next_1a96ee5cd:;
	}
	_iter_end_1a96ee5cd:;;
	_40439_seq=static_cast<jule::Str>(_40416_txt.slice(0LL,_40429_n));
	return _40439_seq;
}



inline jule::Str _211104014_big_unicode_point_escape(jule::Slice<jule::U8>& _42230_txt) {
	return _211103c28_hex_escape(_42230_txt,10LL);
}



inline jule::Str _2111042de_little_unicode_point_escape(jule::Slice<jule::U8>& _42733_txt) {
	return _211103c28_hex_escape(_42733_txt,6LL);
}



inline jule::Str _211104575_hex_byte_escape(jule::Slice<jule::U8>& _43221_txt) {
	return _211103c28_hex_escape(_43221_txt,4LL);
}



inline jule::Str _21110481c_byte_escape(jule::Slice<jule::U8>& _43717_txt) {
	jule::Str _43732_seq = jule::Str();
	if ((_43717_txt.len() < 4LL)) {
		return _43732_seq;
	};
	if ((((!(_2110eb1b5_is_octal(_43717_txt[1LL]))) || (!(_2110eb1b5_is_octal(_43717_txt[2LL])))) || (!(_2110eb1b5_is_octal(_43717_txt[3LL]))))) {
		return _43732_seq;
	};
	_43732_seq = static_cast<jule::Str>(_43717_txt.slice(0LL,4LL));
	return _43732_seq;
}



inline jule::Slice<_210c3ee2a_Log> _211109316_lex(jule::Ptr<_2110ec628_File> _83216_f, jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	};
	_211105004_Lex _83713_lex = _211105004_Lex(_83226_mode,jule::Slice<jule::Ptr<_2110e7238_Token>>(),_83216_f,0LL,jule::I64(),-1LL,jule::Slice<_210c3ee2a_Log>());;
	_211107a95_new_line(&_83713_lex);
	_211105a93_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	};
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline jule::Bool _210e3929a_find_module_file(jule::Slice<jule::Ptr<_20dd9e201_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1a9746889:;
		if (it != expr.end()) {
			jule::Ptr<_20dd9e201_DirEntry> &_1312_d = *it;
			{
				if (((!(_20dde8cb7_is_dir(_1312_d.get()._field_stat.ptr()))) && (_1312_d.get()._field_name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1a9746889:;
			++it;
			goto _iter_begin_1a9746889;
		}
		_iter_end_1a9746889:;
	};
	return false;
}



inline jule::Str _210e3aa3d_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_20dd9e201_DirEntry>> _2617_dirents = ({
				auto except = static__20ebab6c2_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a974678a;
					goto _iter_end_1a974678a;
				} jule::Slice<jule::Ptr<_20dd9e201_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _210e3929a_find_module_file(_2617_dirents);;
			if (_3013_exist) {
				return _2434_path;
			};
			jule::I64 _3513_n = _2434_path.len();;
			_2434_path=_20ec93c93_dir(_2434_path);
			if ((_2434_path.len() == _3513_n)) {
				goto _iter_end_1a974678a;
			};
		}
	_iter_next_1a974678a:;
	}
	_iter_end_1a974678a:;;
	return jule::Str();
}



inline jule::Slice<_210c3ee2a_Log> _210e4d897_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__20ddd1200_read(_20ecb5a51_join(jule::Slice<jule::Str>({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_210c3ee2a_Log>({_210c3ee2a_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
			return jule::Slice<_210c3ee2a_Log>({_210c3ee2a_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _549_s = _210bd1e88_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_210c3ee2a_Log>({_210c3ee2a_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file has syntax error(s)", 31),jule::Str(),jule::Str())});
	};
	return nullptr;
}



inline jule::Ptr<_21173e7a3_FileInfo> _21173eb7c_parse_file(jule::Ptr<_2110ec628_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_21173e7a3_FileInfo> _2813_finf = jule::new_ptr<_21173e7a3_FileInfo>(_21173e7a3_FileInfo());;
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _211784782_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	};
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_210eb3d6e_Ast>,jule::Slice<_210c3ee2a_Log>> _211784782_parse_fileset(jule::Ptr<_2110ec628_File> _6022_f) {
	jule::Ptr<_2117a3592_Parser> _6113_p = jule::new_ptr<_2117a3592_Parser>(_2117a3592_Parser());;
	_2117b2705_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_21110ca9a_ScopeTree> _211785486_new_scope(void) {
	return jule::new_ptr<_21110ca9a_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _211785794_is_st(jule::Ptr<_2110e7238_Token> _4710_current, jule::Ptr<_2110e7238_Token> _4727_prev) {
	jule::Bool _4743_ok = jule::Bool();
	jule::Bool _4753_terminated = jule::Bool();
	_4743_ok=((_4710_current.get()._field_id == static_cast<jule::U64>(5LLU)) || (_4727_prev.get()._field_row < _4710_current.get()._field_row));
	_4753_terminated=(_4710_current.get()._field_id == static_cast<jule::U64>(5LLU));
	return std::make_tuple(_4743_ok,_4753_terminated);
}



inline jule::Bool _211785b29_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_2110e7238_Token>>& _5329_tokens, jule::I64& _5348_i) {
	if (((_5348_i > 1LL) && (_5329_tokens[(_5348_i - 2LL)].get()._field_id == static_cast<jule::U64>(23LLU)))) {
		return false;
	};
	{
		jule::Ptr<_2110e7238_Token> _5913_prev = _5329_tokens[(_5348_i - 1LL)];;
		return ((_5913_prev.get()._field_id == static_cast<jule::U64>(20LLU)) || (((_5913_prev.get()._field_id == static_cast<jule::U64>(7LLU)) && _2110e7c61_is_bin_op(_5913_prev.get()._field_kind)) && (_5913_prev.get()._field_row < _5329_tokens[_5348_i].get()._field_row)));
	};
}



inline std::tuple<jule::I64,jule::Bool> _211785e9d_next_st_pos(jule::Slice<jule::Ptr<_2110e7238_Token>>& _6817_tokens, jule::I64 _6835_start) {
	jule::I64 _6913_brace_n = 0LL;;
	jule::I64 _7013_i = _6835_start;;
	for (; (_7013_i < _6817_tokens.len()); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;;
			jule::Bool _7317_terminated = false;;
			jule::Ptr<_2110e7238_Token> _7413_tok = _6817_tokens[_7013_i];;
			{
				auto &_match_expr{ _7413_tok.get()._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1a9ad2cbe:;
					{
						{
							auto &_match_expr{ _7413_tok.get()._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1a9ad519a:;
								{
									if (((_6913_brace_n == 0LL) && (_7013_i > _6835_start))) {
										if ((!(_211785b29_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _211785794_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
											if (_7217_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_1a9ad38d5:;
								{
									(_6913_brace_n)--;
									if (((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < _6817_tokens.len()))) {
										std::tie(_7217_ok,_7317_terminated) = _211785794_is_st(_6817_tokens[(_7013_i + 1LL)],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1a9ad3a5b:;
						};
						goto _iter_next_1a9ad1d9a;
					}
				}
				_match_end_1a9ad32b9:;
			};
			if ((_6913_brace_n != 0LL)) {
				goto _iter_next_1a9ad1d9a;
			};
			if ((_7013_i > _6835_start)) {
				if (_211785b29_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_1a9ad1d9a;
				};
				std::tie(_7217_ok,_7317_terminated) = _211785794_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _211785794_is_st(_7413_tok,_7413_tok);
			};
			if ((!(_7217_ok))) {
				goto _iter_next_1a9ad1d9a;
			};
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			};
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_1a9ad1d9a:;
	}
	_iter_end_1a9ad1d9a:;;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_2110e7238_Token>>,jule::Bool> _2117862de_skip_st(jule::I64& _13017_i, jule::Slice<jule::Ptr<_2110e7238_Token>> _13029_tokens) {
	jule::I64 _1319_start = _13017_i;;
	jule::Bool _13213_terminated = false;;
	std::tie(_13017_i,_13213_terminated) = _211785e9d_next_st_pos(_13029_tokens,_1319_start);
	jule::Slice<jule::Ptr<_2110e7238_Token>> _13413_st_tokens = _13029_tokens.slice(_1319_start,_13017_i);;
	if (_13213_terminated) {
		if ((_13413_st_tokens.len() == 1LL)) {
			std::tie(_13413_st_tokens,_13213_terminated) = _2117862de_skip_st(_13017_i,_13029_tokens);
			return std::make_tuple(_13413_st_tokens,_13213_terminated);
		};
		_13413_st_tokens=_13413_st_tokens.slice(0LL,(_13413_st_tokens.len() - 1LL));
	};
	return std::make_tuple(_13413_st_tokens,_13213_terminated);
}



inline jule::Slice<jule::Ptr<_2117865db_Stmt>> _211786982_split_stmts(jule::Slice<jule::Ptr<_2110e7238_Token>>& _15221_tokens) {
	jule::Slice<jule::Ptr<_2117865db_Stmt>> _15313_stmts = nullptr;;
	jule::I64 _15413_pos = 0LL;;
	while ((_15413_pos < _15221_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_2110e7238_Token>> _15618_stmt;;
			jule::Bool _15624_terminated;;
			std::tie(_15618_stmt,_15624_terminated) = _2117862de_skip_st(_15413_pos,_15221_tokens);
			_15313_stmts = jule::alloc_for_append(_15313_stmts,1);_15313_stmts.__push(jule::new_ptr<_2117865db_Stmt>(_2117865db_Stmt(_15618_stmt,_15624_terminated)));;
		}
	_iter_next_1a9ada9ec:;
	}
	_iter_end_1a9ada9ec:;;
	return _15313_stmts;
}



inline jule::Ptr<_2117937d5_CallData> _211793b48_get_call_data(jule::Slice<jule::Ptr<_2110e7238_Token>>& _4423_tokens) {
	jule::Ptr<_2117937d5_CallData> _4513_data = jule::new_ptr<_2117937d5_CallData>();;
	std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_args_tokens) = _2117a1e53_range_last(_4423_tokens);
	if ((_4513_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4513_data;
	};
	jule::Ptr<_2110e7238_Token> _529_token = _4513_data.get()._field_expr_tokens[(_4513_data.get()._field_expr_tokens.len() - 1LL)];;
	if (((_529_token.get()._field_id == static_cast<jule::U64>(3LLU)) && (_529_token.get()._field_kind == jule::Str("]", 1)))) {
		std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_generics_tokens) = _2117a1e53_range_last(_4513_data.get()._field_expr_tokens);
	};
	return _4513_data;
}



inline jule::Slice<jule::Ptr<_2110e7238_Token>> _211793e34_get_block_expr(jule::Slice<jule::Ptr<_2110e7238_Token>>& _6024_tokens) {
	jule::I64 _6113_brace_n = 0LL;;
	jule::I64 _6213_skip_to_next_brace_close = 0LL;;
	{
		auto &expr = _6024_tokens;
		auto it = expr.begin();
		_iter_begin_1a9ae1a14:;
		if (it != expr.end()) {
			jule::I64 _639_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> _6312_tok = *it;
			{
				{
					auto &_match_expr{ _6312_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1a9ae2d23:;
						{
							(_6213_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1a9ae3142:;
						{
							{
								auto &_match_expr{ _6312_tok.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a9ae4451:;
									{
										if (((_6113_brace_n > 0LL) || (_6213_skip_to_next_brace_close > 0LL))) {
											if ((_6213_skip_to_next_brace_close > 0LL)) {
												(_6213_skip_to_next_brace_close)--;
											};
											(_6113_brace_n)++;
											goto _match_end_1a9ae4066;
										};
										return _6024_tokens.slice(0LL,_639_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a9ae4660:;
									{
										(_6113_brace_n)++;
									}
								}
								else {
									_case_begin_1a9ae3c8b:;
									{
										(_6113_brace_n)--;
									}
								}
								_match_end_1a9ae4066:;
							};
						}
					}
					_match_end_1a9ae3065:;
				};
			}
			_iter_next_1a9ae1a14:;
			++it;
			_639_i++;
			goto _iter_begin_1a9ae1a14;
		}
		_iter_end_1a9ae1a14:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_2110e7238_Token>>,jule::Slice<jule::Ptr<_2110e7238_Token>>> _2117941cb_split_colon(jule::Slice<jule::Ptr<_2110e7238_Token>>& _9121_tokens) {
	jule::I64 _9213_range_n = 0LL;;
	{
		auto &expr = _9121_tokens;
		auto it = expr.begin();
		_iter_begin_1a9ae472b:;
		if (it != expr.end()) {
			jule::I64 _939_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> _9312_token = *it;
			{
				{
					auto &_match_expr{ _9312_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1a9ae5e58:;
						{
							{
								auto &_match_expr{ _9312_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a9ae6e48:;
									{
										(_9213_range_n)++;
										goto _iter_next_1a9ae472b;
									}
								}
								else {
									_case_begin_1a9ae68d7:;
									{
										(_9213_range_n)--;
									}
								}
								_match_end_1a9ae6a5d:;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(11LLU)) {
						_case_begin_1a9ae6277:;
						{
							if ((_9213_range_n < 1LL)) {
								jule::Slice<jule::Ptr<_2110e7238_Token>> _10725_l = _9121_tokens.slice(0LL,_939_i);;
								jule::Slice<jule::Ptr<_2110e7238_Token>> _10825_r = _9121_tokens.slice((_939_i + 1LL));;
								return std::make_tuple(_10725_l,_10825_r);
							};
						}
					}
					_match_end_1a9ae619a:;
				};
			}
			_iter_next_1a9ae472b:;
			++it;
			_939_i++;
			goto _iter_begin_1a9ae472b;
		}
		_iter_end_1a9ae472b:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _2117944b7_find_lowest_prec_op(jule::Slice<jule::Ptr<_2110e7238_Token>>& _11825_tokens) {
	jule::U8 _12313_prec = 255LLU;;
	jule::I64 _12413_prec_pos = -1LL;;
	jule::I64 _12613_brace_n = 0LL;;
	jule::Bool _12713_skip_to_next_brace_open = false;;
	{
		auto &expr = _11825_tokens;
		auto it = expr.begin();
		_iter_begin_1a9ae91e2:;
		if (it != expr.end()) {
			jule::I64 _1289_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> &_12812_token = *it;
			{
				{
					
					if ((_12812_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1a9ae9c09:;
						{
							{
								auto &_match_expr{ _12812_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a9aeade7:;
									{
										_12713_skip_to_next_brace_open=false;
										goto _case_begin_1a9aeb117;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1a9aeb117:;
									{
										(_12613_brace_n)++;
									}
								}
								else {
									_case_begin_1a9aea8ca:;
									{
										(_12613_brace_n)--;
									}
								}
								_match_end_1a9aeaa51:;
							};
							goto _iter_next_1a9ae91e2;
						}
					}
					else if (_12713_skip_to_next_brace_open) {
						_case_begin_1a9ae9c81:;
						{
							goto _iter_next_1a9ae91e2;
						}
					}
					else if ((_12812_token.get()._field_id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1a9ae9d08:;
						{
							_12713_skip_to_next_brace_open=true;
							goto _iter_next_1a9ae91e2;
						}
					}
					else if ((_1289_i == 0LL)) {
						_case_begin_1a9ae9d80:;
						{
							goto _iter_next_1a9ae91e2;
						}
					}
					else if ((_12812_token.get()._field_id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1a9ae9e07:;
						{
							goto _iter_next_1a9ae91e2;
						}
					}
					else if ((_12613_brace_n > 0LL)) {
						_case_begin_1a9ae9e7e:;
						{
							goto _iter_next_1a9ae91e2;
						}
					}
					_match_end_1a9ae9aa5:;
				};
				jule::Ptr<_2110e7238_Token> _15513_left = _11825_tokens[(_1289_i - 1LL)];;
				if (((_15513_left.get()._field_id == static_cast<jule::U64>(7LLU)) || (_15513_left.get()._field_id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1a9ae91e2;
				};
				if ((((_1289_i > 1LL) && (_15513_left.get()._field_id == static_cast<jule::U64>(3LLU))) && (_15513_left.get()._field_kind == jule::Str("]", 1)))) {
					jule::Ptr<_2110e7238_Token> _16317_lleft = _11825_tokens[(_1289_i - 2LL)];;
					if (((_16317_lleft.get()._field_id == static_cast<jule::U64>(3LLU)) && (_16317_lleft.get()._field_kind == jule::Str("[", 1)))) {
						if (((_12812_token.get()._field_kind == jule::Str("&", 1)) || (_12812_token.get()._field_kind == jule::Str("*", 1)))) {
							goto _iter_next_1a9ae91e2;
						};
					};
				};
				jule::U8 _17213_p = _2110e7623_prec(_12812_token.ptr());;
				if (((_17213_p != 0LLU) && (_17213_p <= _12313_prec))) {
					_12313_prec=_17213_p;
					_12413_prec_pos=_1289_i;
				};
			}
			_iter_next_1a9ae91e2:;
			++it;
			_1289_i++;
			goto _iter_begin_1a9ae91e2;
		}
		_iter_end_1a9ae91e2:;
	};
	return _12413_prec_pos;
}



inline jule::Ptr<_211109cb7_IdentExpr> _21179475e_build_ident_expr(jule::Ptr<_2110e7238_Token>& _18226_token) {
	return jule::new_ptr<_211109cb7_IdentExpr>(_211109cb7_IdentExpr(_18226_token,_18226_token.get()._field_kind,false));
}



inline std::tuple<jule::Slice<jule::Ptr<_2110e7238_Token>>,jule::I64> _211794a06_get_range_expr_tokens(jule::Slice<jule::Ptr<_2110e7238_Token>>& _19031_tokens) {
	jule::I64 _19113_range_n = 0LL;;
	jule::I64 _19213_i = (_19031_tokens.len() - 1LL);;
	for (; (_19213_i >= 0LL); (_19213_i)--) {
		{
			jule::Ptr<_2110e7238_Token> _19413_tok = _19031_tokens[_19213_i];;
			if ((_19413_tok.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _19413_tok.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a9b03d12:;
						{
							(_19113_range_n)++;
						}
					}
					else {
						_case_begin_1a9b03718:;
						{
							(_19113_range_n)--;
						}
					}
					_match_end_1a9b0395a:;
				};
			};
			if ((_19113_range_n == 0LL)) {
				return std::make_tuple(_19031_tokens.slice(0LL,_19213_i),_19113_range_n);
			};
		}
	_iter_next_1a9aed02b:;
	}
	_iter_end_1a9aed02b:;;
	return std::make_tuple(nullptr,_19113_range_n);
}



inline jule::Bool _2117a0407_check_assign_tokens(jule::Slice<jule::Ptr<_2110e7238_Token>>& _1625_tokens) {
	if (((_1625_tokens.len() == 0LL) || (!(_2110eb704_is_assign(_1625_tokens[0LL].get()._field_id))))) {
		return false;
	};
	jule::I64 _2013_brace_n = 0LL;;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1a9b05c26:;
		if (it != expr.end()) {
			jule::Ptr<_2110e7238_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a9b06cb0:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1a9b066a5:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1a9b06908:;
					};
				};
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1a9b05c26;
				} else if (((_2112_t.get()._field_id == static_cast<jule::U64>(7LLU)) && _2110ebc43_is_assign_op(_2112_t.get()._field_kind))) {
					return true;
				};
			}
			_iter_next_1a9b05c26:;
			++it;
			goto _iter_begin_1a9b05c26;
		}
		_iter_end_1a9b05c26:;
	};
	return false;
}



inline _210c3ee2a_Log _2117a1716_make_err(jule::I64 _4913_row, jule::I64 _4923_col, jule::Ptr<_2110ec628_File>& _4934_f, jule::Str _4944_fmt, jule::Slice<jule::Any> _4957_args) {
	return _210c3ee2a_Log(static_cast<jule::I64>(1LL),_4913_row,_4923_col,_4934_f.get()._field_path,_210c4036a_logf(_4944_fmt,jule::Any(_4957_args)),jule::Str(),jule::Str());
}



inline jule::Slice<jule::Ptr<_2110e7238_Token>> _2117a1bab_range(jule::I64& _6815_i, jule::Str _6823_open, jule::Str _6840_close, jule::Slice<jule::Ptr<_2110e7238_Token>>& _6863_tokens) {
	if ((_6815_i >= _6863_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_2110e7238_Token> _739_tok = _6863_tokens[_6815_i];;
	if (((_739_tok.get()._field_id != static_cast<jule::U64>(3LLU)) || (_739_tok.get()._field_kind != _6823_open))) {
		return nullptr;
	};
	(_6815_i)++;
	jule::I64 _7913_range_n = 1LL;;
	jule::I64 _809_start = _6815_i;;
	for (; ((_7913_range_n != 0LL) && (_6815_i < _6863_tokens.len())); (_6815_i)++) {
		{
			jule::Ptr<_2110e7238_Token> _8213_token = _6863_tokens[_6815_i];;
			if ((_8213_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8213_token.get()._field_kind };
					
					if (_match_expr == _6823_open) {
						_case_begin_1a9b0c0d4:;
						{
							(_7913_range_n)++;
						}
					}
					else if (_match_expr == _6840_close) {
						_case_begin_1a9b0c3d1:;
						{
							(_7913_range_n)--;
						}
					}
					_match_end_1a9b0c304:;
				};
			};
		}
	_iter_next_1a9b08c29:;
	}
	_iter_end_1a9b08c29:;;
	return _6863_tokens.slice(_809_start,(_6815_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_2110e7238_Token>>,jule::Slice<jule::Ptr<_2110e7238_Token>>> _2117a1e53_range_last(jule::Slice<jule::Ptr<_2110e7238_Token>>& _10320_tokens) {
	jule::Slice<jule::Ptr<_2110e7238_Token>> _10340_cutted = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::Slice<jule::Ptr<_2110e7238_Token>> _10358_cut = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	if ((_10320_tokens.len() == 0LL)) {
		_10340_cutted = _10320_tokens;
		_10358_cut = nullptr;
		return std::make_tuple(_10340_cutted,_10358_cut);
	} else if ((_10320_tokens[(_10320_tokens.len() - 1LL)].get()._field_id != static_cast<jule::U64>(3LLU))) {
		_10340_cutted = _10320_tokens;
		_10358_cut = nullptr;
		return std::make_tuple(_10340_cutted,_10358_cut);
	};
	jule::I64 _11013_brace_n = 0LL;;
	jule::I64 _11113_i = (_10320_tokens.len() - 1LL);;
	for (; (_11113_i >= 0LL); (_11113_i)--) {
		{
			jule::Ptr<_2110e7238_Token> _11313_token = _10320_tokens[_11113_i];;
			if ((_11313_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11313_token.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a9b112a3:;
						{
							(_11013_brace_n)++;
							goto _iter_next_1a9b0b930;
						}
					}
					else {
						_case_begin_1a9b10ba9:;
						{
							(_11013_brace_n)--;
						}
					}
					_match_end_1a9b10deb:;
				};
			};
			if ((_11013_brace_n == 0LL)) {
				_10340_cutted = _10320_tokens.slice(0LL,_11113_i);
				_10358_cut = _10320_tokens.slice(_11113_i);
				return std::make_tuple(_10340_cutted,_10358_cut);
			};
		}
	_iter_next_1a9b0b930:;
	}
	_iter_end_1a9b0b930:;;
	_10340_cutted = _10320_tokens;
	_10358_cut = nullptr;
	return std::make_tuple(_10340_cutted,_10358_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>>,jule::Slice<_210c3ee2a_Log>> _2117a2382_parts(jule::Slice<jule::Ptr<_2110e7238_Token>>& _14015_tokens, jule::U64 _14033_id, jule::Bool _14046_expr_must) {
	if ((_14015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_2110e7238_Token>>> _14513_parts = nullptr;;
	jule::Slice<_210c3ee2a_Log> _14613_errors = nullptr;;
	jule::I64 _14813_range_n = 0LL;;
	jule::I64 _14913_last = 0LL;;
	{
		auto &expr = _14015_tokens;
		auto it = expr.begin();
		_iter_begin_1a9b13e43:;
		if (it != expr.end()) {
			jule::I64 _1509_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> _15012_token = *it;
			{
				if ((_15012_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _15012_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a9b15263:;
							{
								(_14813_range_n)++;
								goto _iter_next_1a9b13e43;
							}
						}
						else {
							_case_begin_1a9b14b58:;
							{
								(_14813_range_n)--;
							}
						}
						_match_end_1a9b14dab:;
					};
				};
				if ((_14813_range_n > 0LL)) {
					goto _iter_next_1a9b13e43;
				};
				if ((_15012_token.get()._field_id == _14033_id)) {
					if ((_14046_expr_must && ((_1509_i - _14913_last) <= 0LL))) {
						_210c3ee2a_Log _16921_err = _2117a1716_make_err(_15012_token.get()._field_row,_15012_token.get()._field_column,_15012_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14613_errors = jule::alloc_for_append(_14613_errors,1);_14613_errors.__push(_16921_err);;
					};
					_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(_14015_tokens.slice(_14913_last,_1509_i));;
					_14913_last=static_cast<jule::I64>((_1509_i + 1LL));
				};
			}
			_iter_next_1a9b13e43:;
			++it;
			_1509_i++;
			goto _iter_begin_1a9b13e43;
		}
		_iter_end_1a9b13e43:;
	};
	if ((_14913_last < _14015_tokens.len())) {
		_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(_14015_tokens.slice(_14913_last));;
	} else if ((!(_14046_expr_must))) {
		_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(jule::Slice<jule::Ptr<_2110e7238_Token>>());;
	};
	return std::make_tuple(_14513_parts,_14613_errors);
}



inline jule::Str _2117a266d_get_close_kind_of_brace(jule::Str _18628_left) {
	{
		auto &_match_expr{ _18628_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1a9b18c7d:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1a9b18dd2:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1a9b18e48:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1a9b15e56:;
			{
				return jule::Str();
			}
		}
		_match_end_1a9b17d7b:;
	};
}



inline _210c3ee2a_Log _2117a2a47_compiler_err(jule::Ptr<_2110e7238_Token>& _19918_token, jule::Str& _19934_fmt, jule::Slice<jule::Any> _19947_args) {
	return _210c3ee2a_Log(static_cast<jule::I64>(1LL),_19918_token.get()._field_row,_19918_token.get()._field_column,_19918_token.get()._field_file.get()._field_path,_210c4036a_logf(_19934_fmt,jule::Any(_19947_args)),_2110ed805_get_row(_19918_token.get()._field_file.ptr(), _19918_token.get()._field_row),jule::Str());
}



inline void _2117a2d99_push_suggestion(_210c3ee2a_Log* _21031_log, jule::Str _21042_fmt, jule::Slice<jule::Any> _21055_args) {
	_21031_log->_field_suggestion=_210c4036a_logf(_21042_fmt,jule::Any(_21055_args));
}



inline jule::Str _2117a31c9_tokstoa(jule::Slice<jule::Ptr<_2110e7238_Token>>& _21413_tokens) {
	jule::Str _21513_s = jule::Str();;
	{
		auto &expr = _21413_tokens;
		auto it = expr.begin();
		_iter_begin_1a9b1bd2a:;
		if (it != expr.end()) {
			jule::Ptr<_2110e7238_Token> &_21612_token = *it;
			{
				_21513_s+=_21612_token.get()._field_kind;
			}
			_iter_next_1a9b1bd2a:;
			++it;
			goto _iter_begin_1a9b1bd2a;
		}
		_iter_end_1a9b1bd2a:;
	};
	return _21513_s;
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b32e9_build_void_type(void) {
	return jule::new_ptr<_210e7e620_TypeDecl>();
}



inline jule::Ptr<_210e7e620_TypeDecl> _2117b356e_build_prim_type(jule::Ptr<_2110e7238_Token> _2224_t) {
	return jule::new_ptr<_210e7e620_TypeDecl>(_210e7e620_TypeDecl(_2224_t,jule::Any(jule::new_ptr<_210e7e80c_IdentTypeDecl>(_210e7e80c_IdentTypeDecl(_2224_t,_2224_t.get()._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_210e7e620_TypeDecl>>())))));
}



inline std::tuple<jule::Slice<jule::Ptr<_2110e7238_Token>>,jule::I64> _2117b38b0_split_map_range(jule::Slice<jule::Ptr<_2110e7238_Token>>& _3525_tokens, jule::I64& _3548_i) {
	jule::Slice<jule::Ptr<_2110e7238_Token>> _3558_range_tokens = jule::Slice<jule::Ptr<_2110e7238_Token>>();
	jule::I64 _3582_colon = jule::I64();
	_3582_colon=-1LL;
	jule::I64 _3713_range_n = 0LL;;
	jule::I64 _389_start = _3548_i;;
	for (; (_3548_i < _3525_tokens.len()); (_3548_i)++) {
		{
			jule::Ptr<_2110e7238_Token> _4013_token = _3525_tokens[_3548_i];;
			if ((_4013_token.get()._field_id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4013_token.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a9b20070:;
						{
							(_3713_range_n)++;
							goto _iter_next_1a9b1d7bb;
						}
					}
					else {
						_case_begin_1a9b1e987:;
						{
							(_3713_range_n)--;
						}
					}
					_match_end_1a9b1ebb8:;
				};
			};
			if ((_3713_range_n == 0LL)) {
				if (((_389_start + 1LL) > _3548_i)) {
					return std::make_tuple(_3558_range_tokens,_3582_colon);
				};
				_3558_range_tokens=_3525_tokens.slice((_389_start + 1LL),_3548_i);
				goto _iter_end_1a9b1d7bb;
			} else if ((_3713_range_n != 1LL)) {
				goto _iter_next_1a9b1d7bb;
			};
			if (((_3582_colon == -1LL) && (_4013_token.get()._field_id == static_cast<jule::U64>(11LLU)))) {
				_3582_colon=static_cast<jule::I64>(((_3548_i - _389_start) - 1LL));
			};
		}
	_iter_next_1a9b1d7bb:;
	}
	_iter_end_1a9b1d7bb:;;
	return std::make_tuple(_3558_range_tokens,_3582_colon);
}



inline jule::I64 _1a82c7e33_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>((64LL - _1a82ce764_len64(_6124_x)));
}



inline jule::I64 _1a82c887e_trailing_zeros(jule::U64 _8323_x) {
	;
	return static_cast<jule::I64>(_1a82c9495_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _1a82c91ed_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a82c82eb_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & (-(_10525_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1a82c9495_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a82c862b_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & (-(_11425_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1a82ce4bc_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	};
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	};
	_35228_n = static_cast<jule::I64>((_35228_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)])));
	return _35228_n;
}



inline jule::I64 _1a82ce764_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	};
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	};
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	};
	_36628_n = static_cast<jule::I64>((_36628_n + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1a82d0424_add64(jule::U64 _41514_x, jule::U64 _41522_y, jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(((_41514_x + _41522_y) + _41530_carry));
	_41554_carryout=static_cast<jule::U64>((((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1a82d1aa7_mul64(jule::U64 _49914_x, jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49941_lo=static_cast<jule::U64>((_49914_x * _49922_y));
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1a81e5b64_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1a81e5e50_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1a81e61e7_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1a81e64d3_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1a81e844c_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1a9c13aae:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1a824a625_is_inf(_4718_f,0LL) || _1a826ee52_is_nan(_4718_f)) {
			_case_begin_1a9c13b36:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1a9c139c1:;
	};
	std::tie(_4718_f,_4739_exp) = _1a8261a37_normalize(_4718_f);
	jule::U64 _5613_x = _1a81e61e7_f64_bits(_4718_f);;
	_4739_exp+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1a81e64d3_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1a829597d_nan(void) {
	return static_cast<jule::F64>(_1a81e64d3_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1a826ee52_is_nan(jule::F64 _5215_f) {
	return (_5215_f != _5215_f);
}



inline jule::F64 _1a8249657_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1a81e64d3_f64_from_bits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1a81e64d3_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1a824a625_is_inf(jule::F64 _7215_f, jule::I64 _7223_sign) {
	return (((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I64> _1a8261a37_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	;
	if ((_1a82d5b66_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1a82d558e_log(jule::F64 _11112_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1a826ee52_is_nan(_11112_x) || _1a824a625_is_inf(_11112_x,1LL)) {
			_case_begin_1a9c5678e:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1a9c56816:;
			{
				return static_cast<jule::F64>(_1a829597d_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1a9c5688d:;
			{
				return static_cast<jule::F64>(_1a8249657_inf(-1LL));
			}
		}
		_match_end_1a9c566b2:;
	};
	jule::F64 _13314_f1;;
	jule::I64 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1a81e844c_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1a82d5b66_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1a81e64d3_f64_from_bits(static_cast<jule::U64>((_1a81e61e7_f64_bits(_4312_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1a82d7470_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	;
	jule::F64 _469_abs_f = _1a82d5b66_abs(_4413_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_abs_f)) {
			{
				(_4713_i)--;
			}
		_iter_next_1a9cbbbcd:;
		}
		_iter_end_1a9cbbbcd:;;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>((_4413_f - _4713_i));
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1a82d788d_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;;
	jule::I64 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1a81e844c_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1a82d558e_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1a6035368_fmt_float(jule::F64 _7818_f, jule::U8 _7826_fmt, jule::I64 _7837_prec, jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_1a6044e8d_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,_1a80d20b1_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL)),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1a6044e8d_generic_ftoa(jule::Slice<jule::U8> _8221_dst, jule::F64 _8234_val, jule::U8 _8244_fmt, jule::I64 _8259_prec, jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1a808a6da_FloatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a9ee5500:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1a81e5b64_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1a808a6da_FloatInfo>)((&(_1a5e44c4a_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a9ee5566:;
			{
				_8313_bits=static_cast<jule::U64>(_1a81e61e7_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1a808a6da_FloatInfo>)((&(_1a5e6dd0c_F64_INFO))));
			}
		}
		else {
			_case_begin_1a9ee509e:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1a9ee53ce:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1a9ee92a1:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1a9eeb429:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1a9eea67b:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1a9eea219:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'+','i','n','f'}));
						}
					}
					_match_end_1a9eea14d:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a9ee8d1c:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1a9ee5434:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1a9ee8c95:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8244_fmt == 'b')) {
		return _1a7e7d446_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8244_fmt == 'x') || (_8244_fmt == 'X'))) {
		return _1a8057ae7_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1a6719101_DecimalSlice _13213_digs = _1a6719101_DecimalSlice();;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1a83036cd_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa0008c3:;
				{
					_8259_prec=static_cast<jule::I64>(_1a80d20b1_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa00097d:;
				{
					_8259_prec=static_cast<jule::I64>(_1a80d20b1_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa0009e4:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1aa00086d:;
		};
	} else if ((_8244_fmt != 'f')) {
		jule::I64 _15217_digits = _8259_prec;;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa002ed0:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa002ab2:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					};
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1a9ee8db6:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1aa002a5c:;
		};
		if (((_8270_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1a8303337_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1a8303469_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1a65ec9b8_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1a65ee778_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1a65ec9b8_big_ftoa(jule::Slice<jule::U8> _18217_dst, jule::I64 _18234_prec, jule::U8 _18245_fmt, jule::Bool _18256_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1a808a6da_FloatInfo& _18327_flt) {
	_1a8304899_Decimal _18413_d = _1a8304899_Decimal();;
	_1a8304a86_assign(&_18413_d, _1835_mant);
	_1a8304bb8_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1a6719101_DecimalSlice _18713_digs = _1a6719101_DecimalSlice();;
	jule::Bool _1889_shortest = (_18234_prec < 0LL);;
	if (_1889_shortest) {
		_1a662eda2_round_shortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1a6719101_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa009c73:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa00abec:;
				{
					_18234_prec=static_cast<jule::I64>(_1a80d20b1_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa00ac63:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1aa00aa98:;
		};
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa009a42:;
				{
					_1a830505e_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa009aa8:;
				{
					_1a830505e_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18234_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa009b1e:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					};
					_1a830505e_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1aa0099dc:;
		};
		_18713_digs=_1a6719101_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
	};
	return _1a65ee778_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1a65ee778_fmt_digits(jule::Slice<jule::U8> _21919_dst, jule::Bool _21932_shortest, jule::Bool _21948_neg, _1a6719101_DecimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1aa010e55:;
			{
				return _1a6699724_fmt_e(_21919_dst,_21948_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aa010ebb:;
			{
				return _1a66a838c_fmt_f(_21919_dst,_21948_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1aa011043:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21932_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1a6699724_fmt_e(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1a66a838c_fmt_f(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I64>(_1a80d20b1_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1aa010d56:;
	};
	return jule::append(_21919_dst,jule::Slice<jule::U8>({'%',_22040_fmt}));
}



inline void _1a662eda2_round_shortest(_1a8304899_Decimal& _25724_d, jule::U64 _25736_mant, jule::I64 _25747_exp, _1a808a6da_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);;
	if (((_25747_exp > _2789_minexp) && ((332LL * (_25724_d._field_dp - _25724_d._field_nd)) >= (100LL * (_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)))))) {
		return;;
	};
	_1a8304899_Decimal _28713_upper = _1a8304899_Decimal();;
	_1a8304a86_assign(&_28713_upper, static_cast<jule::U64>(((_25736_mant << 1LLU) + 1LLU)));
	_1a8304bb8_shift(&_28713_upper, static_cast<jule::I64>(((_25747_exp - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25736_mant > (1LLU << _25758_flt._field_mantbits)) || (_25747_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25736_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	};
	_1a8304899_Decimal _30613_lower = _1a8304899_Decimal();;
	_1a8304a86_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1a8304bb8_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25758_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp);;
			if ((_33513_mi >= _25724_d._field_nd)) {
				goto _iter_end_1aa019cc7;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1aa0231cb:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1aa023253:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1aa0232ca:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1aa0230ee:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1aa0261ac:;
					{
						_1a830505e_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1aa026223:;
					{
						_1a8304cea_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1aa02629a:;
					{
						_1a8304e2c_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1aa025156:;
			};
		}
	_iter_next_1aa019cc7:;
	}
	_iter_end_1aa019cc7:;;
}



inline jule::Slice<jule::U8> _1a6699724_fmt_e(jule::Slice<jule::U8> _39614_dst, jule::Bool _39627_neg, _1a6719101_DecimalSlice _39638_d, jule::I64 _39655_prec, jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1a808c18c_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39655_prec); (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');;
			}
		_iter_next_1aa02b28e:;
		}
		_iter_end_1aa02b28e:;;
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);;
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);;
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1aa02d637:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1aa02ed86:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1aa02d4d3:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1aa02d47d:;
	};
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1a66a838c_fmt_f(jule::Slice<jule::U8> _45114_dst, jule::Bool _45127_neg, _1a6719101_DecimalSlice _45138_d, jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');;
	};
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1a808c18c_min(_45138_d._field_nd,_45138_d._field_dp);;
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45138_d._field_dp); (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
			}
		_iter_next_1aa03310e:;
		}
		_iter_end_1aa03310e:;;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
	};
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45155_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45138_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd))) {
					_47221_ch=_45138_d._field_d[_47317_j];
				};
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);;
			}
		_iter_next_1aa031a9c:;
		}
		_iter_end_1aa031a9c:;;
	};
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1a7e7d446_fmt_b(jule::Slice<jule::U8> _48414_dst, jule::Bool _48427_neg, jule::U64 _48438_mant, jule::I64 _48453_exp, _1a808a6da_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');;
	};
	std::tie(_48414_dst,std::ignore) = _1a83062c4_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');;
	_48453_exp-=static_cast<jule::I64>(_48464_flt._field_mantbits);
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');;
	};
	std::tie(_48414_dst,std::ignore) = _1a83062c4_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1a8057ae7_fmt_x(jule::Slice<jule::U8> _50614_dst, jule::I64 _50627_prec, jule::U8 _50638_fmt, jule::Bool _50649_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1a808a6da_FloatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1aa039a2d:;
	}
	_iter_end_1aa039a2d:;;
	if (((_50627_prec >= 0LL) && (_50627_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50627_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50638_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');;
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50627_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1aa0402d6:;
		}
		_iter_end_1aa0402d6:;;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50627_prec); (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1aa03e2e6:;
		}
		_iter_end_1aa03e2e6:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50638_fmt == _1a80d2402_lower(_50638_fmt))) {
		_56613_ch='p';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1aa03d834:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1aa046298:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1aa03d7bd:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1aa0441db:;
	};
	return _50614_dst;
}



inline jule::I64 _1a808c18c_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I64 _1a80d20b1_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1a80d2402_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I64> _1a81b7949___parse_uint(jule::Str _5121_s, jule::I64 _5133_base, jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	};
	{
		
		if (((2LL <= _5133_base) && (_5133_base <= 36LL))) {
			_case_begin_1aa04acd6:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1aa04aba4:;
			{
				_5133_base=10LL;
				if ((_5121_s[0LL] == '0')) {
					{
						
						if (((_5121_s.len() >= 3LL) && (_1a80d2402_lower(_5121_s[1LL]) == 'b'))) {
							_case_begin_1aa04cb1d:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1a80d2402_lower(_5121_s[1LL]) == 'o'))) {
							_case_begin_1aa04cc0b:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1a80d2402_lower(_5121_s[1LL]) == 'x'))) {
							_case_begin_1aa04c766:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1aa04c3e2:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);;
							}
						}
						_match_end_1aa04c326:;
					};
				};
			}
		}
		else {
			_case_begin_1aa049e06:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1aa04a478:;
	};
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if (((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1aa0525b2:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1aa05223d:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1aa051b88:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5133_base)) + 1LLU));
			}
		}
		_match_end_1aa051dca:;
	};
	jule::U64 _10013_max_val = 0LLU;;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa0530a7:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa051e30:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1aa053492:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1aa0538d2:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1aa05542d:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1a80d2402_lower(_10912_c)) && (_1a80d2402_lower(_10912_c) <= 'z'))) {
						_case_begin_1aa0552eb:;
						{
							_11017_d=static_cast<jule::U8>(((_1a80d2402_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1aa055362:;
						{
							goto _iter_next_1aa0538d2;
						}
					}
					else {
						_case_begin_1aa054d89:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1aa054d12:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5133_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5133_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val))) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1aa0538d2:;
			++it;
			goto _iter_begin_1aa0538d2;
		}
		_iter_end_1aa0538d2:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1a81c9032_parse_uint(jule::Str _14623_s, jule::I64 _14635_base, jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;;
	jule::I64 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1a81b7949___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1a5e68b09_parse_int(jule::Str _17222_s, jule::I64 _17230_base, jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17222_s[0LL] == '+')) {
		(_17222_s).mut_slice(1LL);;
	} else if ((_17222_s[0LL] == '-')) {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I64 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1a81b7949___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17245_bit_size - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1a66c5662_eisel_lemire64(jule::U64 _4123_man, jule::I64 _4133_exp10, jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1a81e64d3_f64_from_bits(9223372036854775808LLU));
		};
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	if (((_4133_exp10 < -348LL) || (347LL < _4133_exp10))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::I64 _579_clz = _1a82c7e33_leading_zeros64(_4123_man);;
	_4123_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_x_hi;;
	jule::U64 _6324_x_lo;;
	std::tie(_6314_x_hi,_6324_x_lo) = _1a82d1aa7_mul64(_4123_man,_1a65ec226_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if ((((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man))) {
		jule::U64 _6714_y_hi;;
		jule::U64 _6720_y_lo;;
		std::tie(_6714_y_hi,_6720_y_lo) = _1a82d1aa7_mul64(_4123_man,_1a65ec226_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;;
		jule::U64 _6829_merged_lo = (_6324_x_lo + _6714_y_hi);;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,(_6324_x_lo + _6714_y_hi));
		if ((_6829_merged_lo < _6324_x_lo)) {
			(_6818_merged_hi)++;
		};
		if (((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man))) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		};
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	};
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);;
	jule::U64 _8013_ret_mantissa = (_6314_x_hi >> (_799_msb + 9LLU));;
	_6013_ret_exp2-=(1LLU ^ _799_msb);
	if ((((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	_8013_ret_mantissa+=(_8013_ret_mantissa & 1LLU);
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	};
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::U64 _10313_ret_bits = ((_6013_ret_exp2 << 52LLU) | (_8013_ret_mantissa & 4503599627370495LLU));;
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	};
	_4158_f = static_cast<jule::F64>(_1a81e64d3_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1a5e6908d_eisel_lemire32(jule::U64 _11023_man, jule::I64 _11033_exp10, jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1a81e5e50_f32_from_bits(2147483648LLU));
		};
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	if (((_11033_exp10 < -348LL) || (347LL < _11033_exp10))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::I64 _1329_clz = _1a82c7e33_leading_zeros64(_11023_man);;
	_11023_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1a82d1aa7_mul64(_11023_man,_1a65ec226_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1a82d1aa7_mul64(_11023_man,_1a65ec226_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man))) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_ret_mantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_ret_exp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	_15513_ret_mantissa+=(_15513_ret_mantissa & 1LLU);
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	};
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::U64 _17813_ret_bits = ((_13513_ret_exp2 << 23LLU) | (_15513_ret_mantissa & 8388607LLU));;
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	};
	_11058_f = static_cast<jule::F32>(_1a81e5e50_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _1a7eaa220_common_prefix_len_ignore_case(jule::Str _4534_s, jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();;
	if ((_4613_n > _4534_s.len())) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4542_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1aa079e14:;
	}
	_iter_end_1aa079e14:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1a7eaa5e9_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1aa07ecb5:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1aa07ed2b;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1aa07ed2b:;
			{
				jule::I64 _8317_case_n = _1a7eaa220_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_case_n) && (_8317_case_n < 8LL))) {
					_8317_case_n=3LL;
				};
				if (((_8317_case_n == 3LL) || (_8317_case_n == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1a8249657_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1aa07ed92:;
			{
				if ((_1a7eaa220_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1a829597d_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1aa07ec60:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1a80cdeae_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10361_trunc = jule::Bool();
	jule::Bool _10374_hex = jule::Bool();
	jule::I64 _10385_i = jule::I64();
	jule::Bool _10393_ok = jule::Bool();
	if ((_10385_i >= _10315_s.len())) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	{
		
		if ((_10315_s[_10385_i] == '+')) {
			_case_begin_1aa085bbc:;
			{
				(_10385_i)++;
			}
		}
		else if ((_10315_s[_10385_i] == '-')) {
			_case_begin_1aa085e53:;
			{
				_10350_neg=true;
				(_10385_i)++;
			}
		}
		_match_end_1aa085804:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_max_mant_digits = 19LL;;
	jule::U8 _11913_exp_char = 'e';;
	if (((((_10385_i + 2LL) < _10315_s.len()) && (_10315_s[_10385_i] == '0')) && (_1a80d2402_lower(_10315_s[(_10385_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_max_mant_digits=16LL;
		_10385_i+=2LL;
		_11913_exp_char='p';
		_10374_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_nd_mant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (_10385_i < _10315_s.len()); (_10385_i)++) {
		{
			jule::U8 _13313_c = _10315_s[_10385_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1aa08b332:;
					{
						goto _iter_next_1aa08a881;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1aa08b3a9:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1aa08a881;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1aa08b431:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1aa08a881;
						};
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=_11713_base;
							_10325_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_nd_mant)++;
						} else if ((_13313_c != '0')) {
							_10361_trunc=true;
						};
						goto _iter_next_1aa08a881;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1a80d2402_lower(_13313_c))) && (_1a80d2402_lower(_13313_c) <= 'f'))) {
					_case_begin_1aa08b4a8:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(((_1a80d2402_lower(_13313_c) - 'a') + 10LLU));
							(_13013_nd_mant)++;
						} else {
							_10361_trunc=true;
						};
						goto _iter_next_1aa08a881;
					}
				}
				_match_end_1aa08b244:;
			};
			goto _iter_end_1aa08a881;
		}
	_iter_next_1aa08a881:;
	}
	_iter_end_1aa08a881:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_nd_mant*=4LL;
	};
	if (((_10385_i < _10315_s.len()) && (_1a80d2402_lower(_10315_s[_10385_i]) == _11913_exp_char))) {
		(_10385_i)++;
		if ((_10385_i >= _10315_s.len())) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10315_s[_10385_i] == '+')) {
			(_10385_i)++;
		} else if ((_10315_s[_10385_i] == '-')) {
			(_10385_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10385_i >= _10315_s.len()) || (_10315_s[_10385_i] < '0')) || (_10315_s[_10385_i] > '9'))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((_10385_i < _10315_s.len()) && ((('0' <= _10315_s[_10385_i]) && (_10315_s[_10385_i] <= '9')) || (_10315_s[_10385_i] == '_'))); (_10385_i)++) {
			{
				if ((_10315_s[_10385_i] == '_')) {
					goto _iter_next_1aa095a45;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10315_s[_10385_i])) - '0'));
				};
			}
		_iter_next_1aa095a45:;
		}
		_iter_end_1aa095a45:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>((_13113_dp - _13013_nd_mant));
	};
	_10393_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1a6042562_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1a5e6dd0c_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1aa0a0c2b:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1aa0a0ca3:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1a6667b10_F64_POW10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1a6667b10_F64_POW10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1aa0a0d2a:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1a6667b10_F64_POW10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1aa0a0b4e:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1a66a5e28_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1a5e44c4a_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1aa0a5a88:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1aa0a5b10:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1a66a560e_F32_POW10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1a66a560e_F32_POW10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1aa0a5b87:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1a66a560e_F32_POW10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1aa0a59bc:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I64> _1a66a605a_atof_hex(jule::Str _55113_s, _1a808a6da_FloatInfo& _55122_flt, jule::U64 _55142_mantissa, jule::I64 _55161_exp, jule::Bool _55171_neg, jule::Bool _55182_trunc) {
	jule::I64 _5529_max_exp = ((static_cast<jule::I64>((1LL << _55122_flt._field_expbits)) + _55122_flt._field_bias) - 2LL);;
	jule::I64 _5539_min_exp = (_55122_flt._field_bias + 1LL);;
	_55161_exp+=static_cast<jule::I64>(_55122_flt._field_mantbits);
	while (((_55142_mantissa != 0LLU) && ((_55142_mantissa >> (_55122_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55142_mantissa<<=1LLU;
			(_55161_exp)--;
		}
	_iter_next_1aa0aacbe:;
	}
	_iter_end_1aa0aacbe:;;
	if (_55182_trunc) {
		_55142_mantissa|=1LLU;
	};
	while (((_55142_mantissa >> ((1LLU + _55122_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1aa0ac2ba:;
	}
	_iter_end_1aa0ac2ba:;;
	while (((_55142_mantissa > 1LLU) && (_55161_exp < (_5539_min_exp - 2LL)))) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1aa0aa0dc:;
	}
	_iter_end_1aa0aa0dc:;;
	jule::U64 _58313_round = (_55142_mantissa & 3LLU);;
	_55142_mantissa>>=2LLU;
	_58313_round|=(_55142_mantissa & 1LLU);
	_55161_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55142_mantissa)++;
		if ((_55142_mantissa == (1LLU << (1LLU + _55122_flt._field_mantbits)))) {
			_55142_mantissa>>=1LLU;
			(_55161_exp)++;
		};
	};
	if (((_55142_mantissa >> _55122_flt._field_mantbits) == 0LLU)) {
		_55161_exp=_55122_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55161_exp > _5529_max_exp)) {
		_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55122_flt._field_mantbits)));
		_55161_exp=static_cast<jule::I64>((_5529_max_exp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55142_mantissa & ((1LLU << _55122_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55161_exp - _55122_flt._field_bias) & static_cast<jule::I64>(((1LL << _55122_flt._field_expbits) - 1LL)))) << _55122_flt._field_mantbits);
	if (_55171_neg) {
		_60513_bits|=((1LLU << _55122_flt._field_mantbits) << _55122_flt._field_expbits);
	};
	if ((_55122_flt == _1a5e44c4a_F32_INFO)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1a81e5e50_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1a81e64d3_f64_from_bits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1a66a618c_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I64 _61629_n = jule::I64();
	jule::I64 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I64 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1a7eaa5e9_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I64 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I64 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1a80cdeae_read_float(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1a66a605a_atof_hex(_61611_s.slice(0LL,_61629_n),_1a5e44c4a_F32_INFO,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1a66a5e28_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1a5e6908d_eisel_lemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_f_up = 0LL;;
			std::tie(_65321_f_up,_62450_ok) = _1a5e6908d_eisel_lemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_f_up))) {
				_61637_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1a8304899_Decimal _66213_d = _1a8304899_Decimal();;
	if ((!(_1a65ee118_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1a67158c2_float_bits(&_66213_d, _1a5e44c4a_F32_INFO);
	_61621_f=static_cast<jule::F32>(_1a81e5e50_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1a8302bc7_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I64 _67429_n = jule::I64();
	jule::I64 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I64 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1a7eaa5e9_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I64 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I64 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1a80cdeae_read_float(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1a66a605a_atof_hex(_67411_s.slice(0LL,_67429_n),_1a5e6dd0c_F64_INFO,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1a6042562_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1a66c5662_eisel_lemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_f_up = 0LL;;
			std::tie(_71021_f_up,_68250_ok) = _1a66c5662_eisel_lemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_f_up))) {
				_67437_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1a8304899_Decimal _71913_d = _1a8304899_Decimal();;
	if ((!(_1a65ee118_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1a67158c2_float_bits(&_71913_d, _1a5e6dd0c_F64_INFO);
	_67421_f=static_cast<jule::F64>(_1a81e64d3_f64_from_bits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I64>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1a8302d09_parse_float_prefix(jule::Str _73123_s, jule::I64 _73131_bit_size) {
	if ((_73131_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I64 _73317_n;;
		jule::I64 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1a66a618c_atof32(_73123_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I64 _73713_n;;
	jule::I64 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1a8302bc7_atof64(_73123_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1a8302e3b_parse_float(jule::Str _76520_s, jule::I64 _76528_bit_size) {
	jule::F64 _76610_f;;
	jule::I64 _76613_n;;
	jule::I64 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1a8302d09_parse_float_prefix(_76520_s,_76528_bit_size);
	if (((_76613_n != _76520_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1a8303337_ryu_ftoa_fixed32(_1a6719101_DecimalSlice& _4926_d, jule::U32 _4947_mant, jule::I64 _4958_exp, jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _6213_e2 = _4958_exp;;
	jule::I64 _639_b = _1a82ce4bc_len32(_4947_mant);;
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1a8303810_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I64 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1a830402a_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1a830428e_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extra_mask)));
	jule::Bool _9913_round_up = false;;
	if (_7913_exact) {
		_9913_round_up=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_round_up=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1a830359b_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1a8303469_ryu_ftoa_fixed64(_1a6719101_DecimalSlice& _12126_d, jule::U64 _12147_mant, jule::I64 _12158_exp, jule::I64 _12168_prec) {
	if ((_12168_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12147_mant == 0LLU)) {
		std::tie(_12126_d._field_nd,_12126_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I64 _13113_e2 = _12158_exp;;
	jule::I64 _1329_b = _1a82ce764_len64(_12147_mant);;
	if ((_1329_b < 55LL)) {
		_12147_mant=static_cast<jule::U64>((_12147_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1a8303810_mul_by_log2_log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12168_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I64 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1a830415c_mult128bit_pow10(_12147_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1a830428e_divisible_by_pow5(_12147_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extra_mask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extra_mask)));
	jule::Bool _17113_round_up = false;;
	if (_15113_exact) {
		_17113_round_up=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_round_up=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1a830359b_format_decimal(_12126_d,_15314_di,(!(_15329_d0)),_17113_round_up,_12168_prec);
	_12126_d._field_dp-=_1469_q;
}



inline void _1a830359b_format_decimal(_1a6719101_DecimalSlice& _20024_d, jule::U64 _20045_m, jule::Bool _20057_trunc, jule::Bool _20074_round_up, jule::I64 _20090_prec) {
	jule::U64 _2019_max = _1a66cbd61_U64_POW10[_20090_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20045_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20045_m / 10LLU);;
			jule::U64 _20417_b = (_20045_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20045_m / 10LLU),(_20045_m % 10LL));
			_20045_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20074_round_up=true;
			} else if ((_20417_b < 5LLU)) {
				_20074_round_up=false;
			} else {
				_20074_round_up=(_20057_trunc || ((_20045_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20057_trunc=true;
			};
		}
	_iter_next_1aa0e409e:;
	}
	_iter_end_1aa0e409e:;;
	if (_20074_round_up) {
		(_20045_m)++;
	};
	if ((_20045_m >= _2019_max)) {
		_20045_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20090_prec);;
	_20024_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20090_prec));
	jule::U64 _23113_v = _20045_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20024_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1aa0e6d4e:;
	}
	_iter_end_1aa0e6d4e:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20024_d._field_d[(_20024_d._field_nd - 1LL)] == '0')) {
		{
			(_20024_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1aa0ec9c0:;
	}
	_iter_end_1aa0ec9c0:;;
	_20024_d._field_dp=static_cast<jule::I64>((_20024_d._field_nd + _20213_trimmed));
}



inline void _1a83036cd_ryu_ftoa_shortest(_1a6719101_DecimalSlice& _26127_d, jule::U64 _26148_mant, jule::I64 _26159_exp, _1a808a6da_FloatInfo& _26170_flt) {
	if ((_26148_mant == 0LLU)) {
		std::tie(_26127_d._field_nd,_26127_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26159_exp <= 0LL) && (_1a82c9495_trailing_zeros64(_26148_mant) >= (-(_26159_exp))))) {
		_26148_mant>>=static_cast<jule::U64>((-(_26159_exp)));
		_1a8303cb6_ryu_digits(_26127_d,_26148_mant,_26148_mant,_26148_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I64 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1a8303a74_compute_bounds(_26148_mant,_26159_exp,_26170_flt);
	if ((_27326_e2 == 0LL)) {
		_1a8303cb6_ryu_digits(_26127_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1a8303810_mul_by_log2_log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26170_flt == _1a5e44c4a_F32_INFO)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1a830402a_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1a830402a_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1a830402a_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1a830415c_mult128bit_pow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1a830415c_mult128bit_pow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1a830415c_mult128bit_pow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1a830428e_divisible_by_pow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1a830428e_divisible_by_pow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1a830428e_divisible_by_pow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extra_mask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extra_mask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extra_mask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extra_mask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26148_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26148_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1a8303cb6_ryu_digits(_26127_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26127_d._field_dp-=_2799_q;
}



inline jule::I64 _1a8303810_mul_by_log2_log10(jule::I64 _37722_x) {
	return static_cast<jule::I64>(((_37722_x * 78913LL) >> 18LL));
}



inline jule::I64 _1a8303942_mul_by_log10_log2(jule::I64 _38722_x) {
	return static_cast<jule::I64>(((_38722_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1a8303a74_compute_bounds(jule::U64 _39519_mant, jule::I64 _39530_exp, _1a808a6da_FloatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I64 _39662_e2 = jule::I64();
	if (((_39519_mant != (1LLU << _3966_flt._field_mantbits)) || (_39530_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39519_mant)),static_cast<jule::U64>(((2LLU * _39519_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39519_mant)),static_cast<jule::U64>(((4LLU * _39519_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I64>((_39530_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1a8303cb6_ryu_digits(_1a6719101_DecimalSlice& _40920_d, jule::U64 _40937_lower, jule::U64 _40949_central, jule::U64 _40963_upper, jule::Bool _40979_c0, jule::Bool _40993_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1a83043c1_divmod1e9(_40937_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1a83043c1_divmod1e9(_40949_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1a83043c1_divmod1e9(_40963_upper);
	if ((_41210_uhi == 0LLU)) {
		_1a8303de8_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40979_c0=(_40979_c0 && (_41115_clo == 0LLU));
		_40993_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40993_cup));
		_1a8303de8_ryu_digits32(_40920_d,_41014_lhi,_41110_chi,_41210_uhi,_40979_c0,_40993_cup,8LL);
		_40920_d._field_dp+=9LL;
	} else {
		_40920_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40920_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1aa122ce2:;
		}
		_iter_end_1aa122ce2:;;
		_40920_d._field_d=_40920_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40920_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1a8303de8_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,static_cast<jule::I64>((_40920_d._field_nd + 8LL)));
	};
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[(_40920_d._field_nd - 1LL)] == '0'))) {
		{
			(_40920_d._field_nd)--;
		}
	_iter_next_1aa123034:;
	}
	_iter_end_1aa123034:;;
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[0LL] == '0'))) {
		{
			(_40920_d._field_nd)--;
			(_40920_d._field_dp)--;
			_40920_d._field_d=_40920_d._field_d.slice(1LL);
		}
	_iter_next_1aa120e88:;
	}
	_iter_end_1aa120e88:;;
}



inline void _1a8303de8_ryu_digits32(_1a6719101_DecimalSlice& _45422_d, jule::U32 _45443_lower, jule::U32 _45459_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45422_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_c_next_digit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45443_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45459_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45459_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45459_central / 10LLU),(_45459_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1aa129513;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_c_next_digit == 0LL));
			_46313_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			std::tie(_45443_lower,_45459_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1aa129513:;
	}
	_iter_end_1aa129513:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_c_next_digit > 5LL) || ((_46313_c_next_digit == 5LL) && (!(_45525_c0)))) || (((_46313_c_next_digit == 5LL) && _45525_c0) && ((_45459_central & 1LLU) == 1LLU)));
	};
	if (((_45459_central < _4559_upper) && _45539_cup)) {
		(_45459_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45459_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45422_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45422_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45422_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1aa12e53a:;
	}
	_iter_end_1aa12e53a:;;
	if ((_51013_n == _45422_d._field_nd)) {
		_45422_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45422_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45422_d._field_dp=static_cast<jule::I64>((_45422_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1a830402a_mult64bit_pow10(jule::U32 _53420_m, jule::I64 _53432_e2, jule::I64 _53441_q) {
	jule::U32 _53451_resM = jule::U32();
	jule::I64 _53462_resE = jule::I64();
	jule::Bool _53473_exact = jule::Bool();
	if ((_53441_q == 0LL)) {
		_53451_resM = static_cast<jule::U32>((_53420_m << 6LLU));
		_53462_resE = static_cast<jule::I64>((_53432_e2 - 6LL));
		_53473_exact = true;
		return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
	};
	if (((_53441_q < -348LL) || (347LL < _53441_q))) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1a65ec226_DETAILED_POWS_OF_TEN[(_53441_q - -348LL)][1LL];;
	if ((_53441_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1a82d1aa7_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53420_m)),_54313_pow);
	_53432_e2+=((_1a8303942_mul_by_log10_log2(_53441_q) - 63LL) + 57LL);
	_53451_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53462_resE = _53432_e2;
	_53473_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1a830415c_mult128bit_pow10(jule::U64 _56221_m, jule::I64 _56233_e2, jule::I64 _56242_q) {
	jule::U64 _56252_resM = jule::U64();
	jule::I64 _56263_resE = jule::I64();
	jule::Bool _56274_exact = jule::Bool();
	if ((_56242_q == 0LL)) {
		_56252_resM = static_cast<jule::U64>((_56221_m << 8LLU));
		_56263_resE = static_cast<jule::I64>((_56233_e2 - 8LL));
		_56274_exact = true;
		return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
	};
	if (((_56242_q < -348LL) || (347LL < _56242_q))) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1a65ec226_DETAILED_POWS_OF_TEN[(_56242_q - -348LL)];;
	if ((_56242_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56233_e2+=((_1a8303942_mul_by_log10_log2(_56242_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1a82d1aa7_mul64(_56221_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1a82d1aa7_mul64(_56221_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1a82d0424_add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56252_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56263_resE = _56233_e2;
	_56274_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
}



inline jule::Bool _1a830428e_divisible_by_pow5(jule::U64 _58626_m, jule::I64 _58634_k) {
	if ((_58626_m == 0LLU)) {
		return true;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58634_k); (_59013_i)++) {
		{
			if (((_58626_m % 5LL) != 0LLU)) {
				return false;
			};
			_58626_m/=5LLU;
		}
	_iter_next_1aa13b547:;
	}
	_iter_end_1aa13b547:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1a83043c1_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
	jule::U64 _60710_hi;;
	std::tie(_60710_hi,std::ignore) = _1a82d1aa7_mul64(static_cast<jule::U64>((_60214_x >> 1LLU)),9903520314283042200LLU);
	jule::U64 _6089_q = (_60710_hi >> 28LLU);;
	return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>(_6089_q)),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x - (_6089_q * 1000000000LL)))));
}



inline void _1a8305405_trim(_1a8304899_Decimal& _33314_a) {
	while (((_33314_a._field_nd > 0LL) && (_33314_a._field_d[(_33314_a._field_nd - 1LL)] == '0'))) {
		{
			(_33314_a._field_nd)--;
		}
	_iter_next_1aa14298d:;
	}
	_iter_end_1aa14298d:;;
	if ((_33314_a._field_nd == 0LL)) {
		_33314_a._field_dp=0LL;
	};
}



inline void _1a8305537_right_shift(_1a8304899_Decimal& _34321_a, jule::U64 _34333_k) {
	jule::I64 _34413_r = 0LL;;
	jule::I64 _34513_w = 0LL;;
	jule::U64 _34813_n = 0LLU;;
	for (; ((_34813_n >> _34333_k) == 0LLU); (_34413_r)++) {
		{
			if ((_34413_r >= _34321_a._field_nd)) {
				if ((_34813_n == 0LLU)) {
					_34321_a._field_nd=0LL;
					return;;
				};
				while (((_34813_n >> _34333_k) == 0LLU)) {
					{
						_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
						(_34413_r)++;
					}
				_iter_next_1aa14593b:;
				}
				_iter_end_1aa14593b:;;
				goto _iter_end_1aa098e66;
			};
			jule::U64 _36213_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _36213_c) - '0'));
		}
	_iter_next_1aa098e66:;
	}
	_iter_end_1aa098e66:;;
	_34321_a._field_dp-=(_34413_r - 1LL);
	jule::U64 _3679_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _34333_k)) - 1LLU));;
	for (; (_34413_r < _34321_a._field_nd); (_34413_r)++) {
		{
			jule::U64 _37113_c = static_cast<jule::U64>(_34321_a._field_d[_34413_r]);;
			jule::U64 _37213_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_37213_dig + '0')));
			(_34513_w)++;
			_34813_n=static_cast<jule::U64>((((_34813_n * 10LLU) + _37113_c) - '0'));
		}
	_iter_next_1aa147a81:;
	}
	_iter_end_1aa147a81:;;
	while ((_34813_n > 0LLU)) {
		{
			jule::U64 _38113_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			if ((_34513_w < 800LL)) {
				_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38113_dig + '0')));
				(_34513_w)++;
			} else if ((_38113_dig > 0LLU)) {
				_34321_a._field_trunc=true;
			};
			_34813_n=static_cast<jule::U64>((_34813_n * 10LLU));
		}
	_iter_next_1aa148125:;
	}
	_iter_end_1aa148125:;;
	_34321_a._field_nd=_34513_w;
	_1a8305405_trim(_34321_a);
}



inline jule::Bool _1a8305669_prefix_is_less_than(jule::Array<jule::U8,800> _39724_b, jule::I64 _39738_end, jule::Str _39748_s) {
	jule::I64 _39813_i = 0LL;;
	for (; (_39813_i < _39748_s.len()); (_39813_i)++) {
		{
			if ((_39813_i >= _39738_end)) {
				return true;
			};
			if ((_39724_b[_39813_i] != _39748_s[_39813_i])) {
				return (_39724_b[_39813_i] < _39748_s[_39813_i]);
			};
		}
	_iter_next_1aa14c16d:;
	}
	_iter_end_1aa14c16d:;;
	return false;
}



inline void _1a830579b_left_shift(_1a8304899_Decimal& _41120_a, jule::U64 _41132_k) {
	jule::I64 _41213_delta = _1a7e6ec51_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_delta;;
	if (_1a8305669_prefix_is_less_than(_41120_a._field_d,_41120_a._field_nd,_1a7e6ec51_LEFTCHEATS[static_cast<jule::I64>(_41132_k)]._field_cutoff)) {
		(_41213_delta)--;
	};
	jule::I64 _41713_r = _41120_a._field_nd;;
	jule::I64 _41813_w = (_41120_a._field_nd + _41213_delta);;
	jule::U64 _42113_n = 0LLU;;
	(_41713_r)--;
	for (; (_41713_r >= 0LL); (_41713_r)--) {
		{
			_42113_n+=((static_cast<jule::U64>(_41120_a._field_d[_41713_r]) - '0') << _41132_k);
			jule::U64 _42513_quo = (_42113_n / 10LLU);;
			jule::U64 _42613_rem = (_42113_n - (10LLU * _42513_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_42613_rem + '0')));
			} else if ((_42613_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_42513_quo;
		}
	_iter_next_1aa150704:;
	}
	_iter_end_1aa150704:;;
	while ((_42113_n > 0LLU)) {
		{
			jule::U64 _43813_quo = (_42113_n / 10LLU);;
			jule::U64 _43913_rem = (_42113_n - (10LLU * _43813_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_43913_rem + '0')));
			} else if ((_43913_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_43813_quo;
		}
	_iter_next_1aa152b79:;
	}
	_iter_end_1aa152b79:;;
	_41120_a._field_nd+=_41213_delta;
	if ((_41120_a._field_nd >= 800LL)) {
		_41120_a._field_nd=800LL;
	};
	_41120_a._field_dp+=_41213_delta;
	_1a8305405_trim(_41120_a);
}



inline jule::Bool _1a83058cd_should_round_up(_1a8304899_Decimal& _45821_a, jule::I64 _45833_nd) {
	if (((_45833_nd < 0LL) || (_45833_nd >= _45821_a._field_nd))) {
		return false;
	};
	if (((_45821_a._field_d[_45833_nd] == '5') && ((_45833_nd + 1LL) == _45821_a._field_nd))) {
		if (_45821_a._field_trunc) {
			return true;
		};
		return ((_45833_nd > 0LL) && (((_45821_a._field_d[(_45833_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_45821_a._field_d[_45833_nd] >= '5');
}



inline jule::Str _1a8305bb9_fmt_uint(jule::U64 _6017_i, jule::I64 _6025_base) {
	if (((true && (_6017_i < 100LLU)) && (_6025_base == 10LL))) {
		return _1a8306060_small(static_cast<jule::I64>(static_cast<jule::I64>(_6017_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1a83062c4_fmt_bits(nullptr,_6017_i,_6025_base,false,false);
	return _6413_s;
}



inline jule::Str _1a8305ceb_fmt_int(jule::I64 _7116_i, jule::I64 _7124_base) {
	if ((((true && (0LL <= _7116_i)) && (_7116_i < 100LL)) && (_7124_base == 10LL))) {
		return _1a8306060_small(static_cast<jule::I64>(static_cast<jule::I64>(_7116_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1a83062c4_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7116_i)),_7124_base,(_7116_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1a8305e2d_itoa(jule::I64 _8013_i) {
	return _1a8305ceb_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1a8306060_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1a8306192_is_power_of_two(jule::I64 _9220_x) {
	return ((_9220_x & (_9220_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1a83062c4_fmt_bits(jule::Slice<jule::U8> _10117_dst, jule::U64 _10134_u, jule::I64 _10142_base, jule::Bool _10153_neg, jule::Bool _10164_append_) {
	jule::Slice<jule::U8> _10181_d = jule::Slice<jule::U8>();
	jule::Str _10192_s = jule::Str();
	if (((_10142_base < 2LL) || (_10142_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10153_neg) {
		_10134_u=static_cast<jule::U64>((-(_10134_u)));
	};
	if ((_10142_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10134_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1aa1635b3:;
		}
		_iter_end_1aa1635b3:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1a8306192_is_power_of_two(_10142_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1a82c887e_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10142_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10142_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10142_base) - 1LLU);;
		while ((_10134_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10134_u) & _17613_m))]);
				_10134_u>>=_17413_shift;
			}
		_iter_next_1aa16a4bb:;
		}
		_iter_end_1aa16a4bb:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10142_base);;
		while ((_10134_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10134_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10134_u - (_19317_q * _18713_b))))]);
				_10134_u=_19317_q;
			}
		_iter_next_1aa16b005:;
		}
		_iter_end_1aa16b005:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10134_u))]);
	};
	if (_10153_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10164_append_) {
		_10181_d=jule::append(_10117_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10181_d,_10192_s);
	};
	_10192_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10181_d,_10192_s);
}



inline void _1a83b18ac_lshift_unsig(_1a83a871c_Const& _58722_c, _1a83a871c_Const& _58733_x) {
	jule::U64 _5889_l = _1a83aa90b_as_u64(&_58722_c);;
	jule::U64 _5899_r = _1a83aa90b_as_u64(&_58733_x);;
	_1a83ab16a_set_u64(&_58722_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1a83b1ba9_rshift_unsig(_1a83a871c_Const& _59322_c, _1a83a871c_Const& _59333_x) {
	jule::U64 _5949_l = _1a83aa90b_as_u64(&_59322_c);;
	jule::U64 _5959_r = _1a83aa90b_as_u64(&_59333_x);;
	_1a83ab16a_set_u64(&_59322_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::Str _1a84413dc_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1aa1e7ceb:;
			{
				return _1a8440d7b_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1aa1e7d62:;
			{
				return _1a8440e69_SYS_UINT;
			}
		}
		else {
			_case_begin_1aa1e7c85:;
			{
				return _4521_kind;
			}
		}
		_match_end_1aa1e7c30:;
	};
}



inline jule::I64 _1a8441684_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1aa1e8e2e:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa1e8a99:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa1e8b10:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa1e8b76:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1aa1e8c0e:;
			{
				return _1a8440c8d_BIT_SIZE;
			}
		}
		else {
			_case_begin_1aa1e305a:;
			{
				return -1LL;
			}
		}
		_match_end_1aa1e3005:;
	};
}



inline jule::Str _1a8441970_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1aa1eaccc:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1aa1eadcb:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1aa1eae42:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa1eab01:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1aa1ea084:;
			{
				return jule::Str();
			}
		}
		_match_end_1aa1ea161:;
	};
}



inline jule::Str _1a8441c17_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1aa1ec22e:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1aa1ec32d:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1aa1ec394:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa1ec053:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1aa1ebb8a:;
			{
				return jule::Str();
			}
		}
		_match_end_1aa1ebb02:;
	};
}



inline jule::Str _1a8441eae_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa1ed62b:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa1ed780:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1aa1ecc13:;
			{
				return jule::Str();
			}
		}
		_match_end_1aa1ed054:;
	};
}



inline jule::Bool _1a8442a1a_check_bit_float(jule::Str _15024_val, jule::I64 _15034_bit) {
	({
		auto except = _1a8302e3b_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1a8442cb2_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1aa203bb4:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1aa202b80:;
			{
				return 64LL;
			}
		}
		_match_end_1aa20381d:;
	};
}



inline jule::I64 _1a8443059_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if (((-128LL <= _17623_x) && (_17623_x <= 127LL))) {
			_case_begin_1aa204aa5:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17623_x) && (_17623_x <= 32767LL))) {
			_case_begin_1aa204b1b:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL))) {
			_case_begin_1aa204bc6:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1aa204896:;
			{
				return 64LL;
			}
		}
		_match_end_1aa204797:;
	};
}



inline jule::I64 _1a8443301_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1aa206ab8:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1aa206b2e:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1aa206bc8:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1aa206887:;
			{
				return 64LL;
			}
		}
		_match_end_1aa206788:;
	};
}



inline void _1a8443466_update_target(void) {
	{
		{
			auto &_match_expr{ _210c63d2d_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1aa207dd8:;
				{
					_1a8440c8d_BIT_SIZE=64LL;
					_1a8440d7b_SYS_INT=jule::Str("i64", 3);
					_1a8440e69_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1aa206eb4:;
				{
					_1a8440c8d_BIT_SIZE=32LL;
					_1a8440d7b_SYS_INT=jule::Str("i32", 3);
					_1a8440e69_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1aa207d50:;
		};
	};
}



inline void _1a84435cb_init(void) {
	_1a8443466_update_target();
}



inline jule::F64 _1a84459a7_min(jule::Str _6116_k) {
	_6116_k=_1a84413dc_real_kind_of(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1aa20aabc:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa20a8be:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa20a935:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa20a99b:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa20a759:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa20a7d1:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1aa2082d4:;
			{
				return 0LL;
			}
		}
		_match_end_1aa20a36e:;
	};
}



inline jule::F64 _1a8445c93_max(jule::Str _8316_k) {
	_8316_k=_1a84413dc_real_kind_of(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1aa20c75b:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa20c7c2:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa20c838:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa20c5d5:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1aa20c64b:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa20c6b2:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1aa20c283:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1aa20c2e9:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa20c371:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa20c9d1:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1aa20a3c4:;
			{
				return 0LL;
			}
		}
		_match_end_1aa20c22d:;
	};
}



inline jule::Bool _1a8446205_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1a84464e1_is_i16_compatible(jule::Str _1130_k) {
	return ((_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3)));
}



inline jule::Bool _1a8446788_is_i32_compatible(jule::Str _1730_k) {
	return ((((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2)));
}



inline jule::Bool _1a8446a74_is_i64_compatible(jule::Str _2530_k) {
	return ((((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3)));
}



inline jule::Bool _1a8446d1b_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1a84470b3_is_u16_compatible(jule::Str _3830_k) {
	return ((_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3)));
}



inline jule::Bool _1a844735a_is_u32_compatible(jule::Str _4330_k) {
	return (((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3)));
}



inline jule::Bool _1a844768a_is_u64_compatible(jule::Str _5030_k) {
	return ((((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3)));
}



inline jule::Bool _1a8447932_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1a8447bc9_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1a844801a_types_are_compatible(jule::Str _7033_k1, jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1aa215c09:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1aa2160d3:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1aa216149:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1aa215d3b:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1aa215da2:;
			{
				return _1a8446205_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa215e18:;
			{
				return _1a84464e1_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa215e7e:;
			{
				return _1a8446788_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa216006:;
			{
				return _1a8446a74_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1aa2161e3:;
			{
				return _1a8446d1b_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa216259:;
			{
				return _1a84470b3_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1aa2162d1:;
			{
				return _1a844735a_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1aa216358:;
			{
				return _1a844768a_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa2163d0:;
			{
				return _1a8447932_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa216457:;
			{
				return _1a8447bc9_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1aa2164ce:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1aa216556:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1aa215456:;
			{
				return false;
			}
		}
		_match_end_1aa21591d:;
	};
}



inline jule::Bool _1a84482b2_is_i16_greater(jule::Str _11027_k) {
	return (_11027_k == jule::Str("i8", 2));
}



inline jule::Bool _1a8448559_is_i32_greater(jule::Str _11527_k) {
	return ((_11527_k == jule::Str("i8", 2)) || (_11527_k == jule::Str("i16", 3)));
}



inline jule::Bool _1a8448801_is_i64_greater(jule::Str _12027_k) {
	return (((_12027_k == jule::Str("i8", 2)) || (_12027_k == jule::Str("i16", 3))) || (_12027_k == jule::Str("i32", 3)));
}



inline jule::Bool _1a8448a98_is_u16_greater(jule::Str _12727_k) {
	return (_12727_k == jule::Str("u8", 2));
}



inline jule::Bool _1a8448e61_is_u32_greater(jule::Str _13227_k) {
	return ((_13227_k == jule::Str("u8", 2)) || (_13227_k == jule::Str("u16", 3)));
}



inline jule::Bool _1a8449208_is_u64_greater(jule::Str _13827_k) {
	return (((_13827_k == jule::Str("u8", 2)) || (_13827_k == jule::Str("u16", 3))) || (_13827_k == jule::Str("u32", 3)));
}



inline jule::Bool _1a84494a0_is_f32_greater(jule::Str _14523_k) {
	return (_14523_k != jule::Str("f64", 3));
}



inline jule::Bool _1a8449747_is_f64_greater(jule::Str _15023_k) {
	return true;
}



inline jule::Bool _1a8449a88_is_greater(jule::Str _15523_k1, jule::Str _15532_k2) {
	{
		auto &_match_expr{ _15523_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1aa21ebbe:;
			{
				return _1a844abaa_is_sig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1aa21ec35:;
			{
				return _1a844ae96_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1aa21ec9b:;
			{
				return _1a844ae96_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa21ed12:;
			{
				return _1a84482b2_is_i16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa21ee66:;
			{
				return _1a8448559_is_i32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa21eedd:;
			{
				return _1a8448801_is_i64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa220065:;
			{
				return _1a8448a98_is_u16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1aa2200dc:;
			{
				return _1a8448e61_is_u32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1aa22031d:;
			{
				return _1a8449208_is_u64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa220384:;
			{
				return _1a84494a0_is_f32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa2203ea:;
			{
				return _1a8449747_is_f64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1aa220461:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aa21e87d:;
			{
				return false;
			}
		}
		_match_end_1aa21ea48:;
	};
}



inline jule::Bool _1a844abaa_is_sig_int(jule::Str _2723_k) {
	return (((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3)));
}



inline jule::Bool _1a844ae96_is_unsig_int(jule::Str _3625_k) {
	return ((((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1a844b23d_is_int(jule::Str _4615_k) {
	return (_1a844abaa_is_sig_int(_4615_k) || _1a844ae96_is_unsig_int(_4615_k));
}



inline jule::Bool _1a844b529_is_float(jule::Str _5117_k) {
	return ((_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3)));
}



inline jule::Bool _1a844b7c1_is_num(jule::Str _5615_k) {
	return (_1a844b23d_is_int(_5615_k) || _1a844b529_is_float(_5615_k));
}



inline jule::Bool _1a84b6c7b_is_ascii(jule::I32 _1017_r) {
	;
	return (_1017_r <= 127LL);
}



inline jule::I32 _1a84b8750_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1a84b91e0_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _20eb97acb_decode_rune(_1816_bytes);
	};
	return _2313_r;
}



inline jule::Str _1a84b8882_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1a84b8b07_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4215_bytes.len());;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4215_bytes.len())) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1a84b9531_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I64 _5421_size;;
				std::tie(_5418_r,_5421_size) = _20eb97acb_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_20eb98db8_append_rune(_4713_s,_5418_r);
			};
		}
	_iter_next_210d0a0c2:;
	}
	_iter_end_210d0a0c2:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1a84b8d9e_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if (((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6241_seq,_6252_ok);
	};
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_210cb1b17:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_210d09ab6:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_210d2a950:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_210d44d32:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_210d7a1a8:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_210d7a86d:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_210d7ace1:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_210d961e6:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_210dc68ca:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_2117b8244:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_21124581a:;
	};
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1a84b91e0_rune_from_esq_seq(jule::Slice<jule::U8> _9422_bytes, jule::I64& _9442_i) {
	jule::U8 _9510_b;;
	jule::Bool _9513_ok;;
	std::tie(_9510_b,_9513_ok) = _1a84b8d9e_try_btoa_common_esq(_9422_bytes.slice(_9442_i));
	(_9442_i)++;
	if (_9513_ok) {
		(_9442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9510_b));
	};
	{
		auto &_match_expr{ _9422_bytes[_9442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_2117ea81a:;
			{
				;
				jule::I32 _10513_r = static_cast<jule::I32>(({
					auto except = _1a81c9032_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:105:22"));
					(except.result);
				}));;
				_9442_i+=5LL;
				return _10513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_2117ec82d:;
			{
				;
				jule::I32 _11013_r = static_cast<jule::I32>(({
					auto except = _1a81c9032_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:110:22"));
					(except.result);
				}));;
				_9442_i+=9LL;
				return _11013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_2117ed29b:;
			{
				;
				jule::Slice<jule::U8> _11513_seq = _9422_bytes.slice((_9442_i + 1LL),(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a81c9032_parse_uint(static_cast<jule::Str>(_11513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:117:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_2117cd49b:;
			{
				;
				jule::Slice<jule::U8> _12013_seq = _9422_bytes.slice(_9442_i,(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a81c9032_parse_uint(static_cast<jule::Str>(_12013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:122:18"));
					(except.result);
				})));
			}
		}
		_match_end_2117b8112:;
	};
}



inline jule::Slice<jule::U8> _1a84b9531_str_esq_seq(jule::Slice<jule::U8> _12616_bytes, jule::I64& _12636_i) {
	jule::I32 _1279_r = _1a84b91e0_rune_from_esq_seq(_12616_bytes,_12636_i);;
	if ((_1279_r <= 255LL)) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(_1279_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1279_r));
}



inline jule::I64 _1a857aa76_find_format_prefix(jule::Slice<jule::U8>& _924_bytes, jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;;
	while ((_1013_i < _924_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I64 _1217_size;;
			std::tie(_1214_r,_1217_size) = _20eb97acb_decode_rune(_924_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1b355ded3:;
	}
	_iter_end_1b355ded3:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1a857aba8_get_format_range(jule::I64& _2630_i, jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;;
	jule::I64 _2813_braces = 0LL;;
	while ((_2630_i < _2643_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I64 _3017_size;;
			std::tie(_3014_r,_3017_size) = _20eb97acb_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_211864697:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_211865d08:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						};
					}
				}
				_match_end_21184293e:;
			};
		}
	_iter_next_1b3685505:;
	}
	_iter_end_1b3685505:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1a857a37d_fmt_by_default(jule::Any& _4520_arg) {
	if ((_4520_arg == nullptr)) {
		return jule::Slice<jule::U8>({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4520_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_2118eebd8:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a6035368_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4520_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_2119058e2:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a6035368_fmt_float(static_cast<jule::F64>(_4520_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_211906ad0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a8305ceb_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_2119086a3:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a8305ceb_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_211909e79:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a8305ceb_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_21190c8b6:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a8305ceb_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_21190e577:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a8305bb9_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_211915b22:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a8305bb9_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_211916ded:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a8305bb9_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_211916b67:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a8305bb9_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_211925ba9:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4520_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_211927271:;
			{
				if (_4520_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_2118e8451:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4520_arg));
			}
		}
		_match_end_2118e687d:;
	};
}



inline jule::Slice<jule::U8> _1a857a4b0_apply_fmt_by_default(jule::I64& _8330_j, jule::Slice<jule::Any>& _8339_args) {
	jule::Any _849_arg = _8339_args[_8330_j];;
	(_8330_j)++;
	return _1a857a37d_fmt_by_default(_849_arg);
}



inline jule::Slice<jule::U8> _1a857b25d_apply_fmt(jule::Slice<jule::U8>& _9119_fmt, jule::I64& _9137_j, jule::Slice<jule::Any>& _9146_args) {
	if ((_9119_fmt.len() == 2LL)) {
		return _1a857a4b0_apply_fmt_by_default(_9137_j,_9146_args);
	};
	if (((_9119_fmt.len() == 4LL) && (_9119_fmt == jule::Slice<jule::U8>({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>({'{','}'});
	};
	return _9119_fmt;
}



inline jule::Slice<jule::U8> _1a857b390_format_bytes(jule::Str _10517_fmt, jule::Slice<jule::Any> _10527_args) {
	jule::Slice<jule::U8> _10613_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_10517_fmt);;
	if ((_10527_args.len() == 0LL)) {
		return _10613_fmt_bytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10517_fmt.len());;
	jule::I64 _11413_j = 0LL;;
	jule::I64 _11513_last = 0LL;;
	jule::I64 _11613_i = _1a857aa76_find_format_prefix(_10613_fmt_bytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I64>(_1a857aa76_find_format_prefix(_10613_fmt_bytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1a857aba8_get_format_range(_11613_i,_10613_fmt_bytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_211e88260;
			};
			_11213_bytes=jule::append(_11213_bytes,_1a857b25d_apply_fmt(_11917_format,_11413_j,_10527_args));
			if ((_11413_j >= _10527_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11613_i));
				_11513_last=static_cast<jule::I64>(_10613_fmt_bytes.len());
				goto _iter_end_211e88260;
			};
			_11513_last=_11613_i;
		}
	_iter_next_211e88260:;
	}
	_iter_end_211e88260:;;
	if ((_11513_last < _10613_fmt_bytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1a857b4c2_format(jule::Str _16515_fmt, jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1a857b390_format_bytes(_16515_fmt,jule::Any(_16525_args)));
}



inline jule::Bool _1a5b34b6b_kind_uses_generics(jule::Ptr<_1a850cbe5_TypeKind> _42023_k, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>& _42038_generics) {
	jule::Str _4219_pk = _1a850d09c_to_str(_42023_k.ptr());;
	{
		auto &expr = _42038_generics;
		auto it = expr.begin();
		_iter_begin_1aabab36e:;
		if (it != expr.end()) {
			jule::Ptr<_21110be1d_GenericDecl> &_42212_g = *it;
			{
				if (_2109140a5_contains(_4219_pk,_42212_g.get()._field_ident)) {
					return true;
				};
			}
			_iter_next_1aabab36e:;
			++it;
			goto _iter_begin_1aabab36e;
		}
		_iter_end_1aabab36e:;
	};
	return false;
}



inline jule::Bool _1a5b35045_parameter_uses_generics(jule::Ptr<_1a5b2d67b_Param>& _43029_p, jule::Slice<jule::Ptr<_21110be1d_GenericDecl>>& _43041_generics) {
	if (_1a5b2dca8_is_self(_43029_p.ptr())) {
		return false;
	};
	return _1a5b34b6b_kind_uses_generics(_43029_p.get()._field_kind.get()._field_kind,_43041_generics);
}



inline jule::Ptr<_1a8511a84_TypeSymbol> _1a5b378d8_build_type(jule::Ptr<_210e7e620_TypeDecl> _8419_t) {
	if ((_8419_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(_8419_t,jule::Ptr<_1a850cbe5_TypeKind>()));
}



inline jule::Ptr<_1a84d48e2_Value> _1a5b37bc4_build_expr(jule::Ptr<_210e87caa_Expr> _9319_expr) {
	if ((_9319_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1a84d48e2_Value>(_1a84d48e2_Value(_9319_expr,jule::Ptr<_1a84d3869_Data>()));
}



inline jule::Ptr<_1a850bead_TypeAlias> _1a5b37e6b_build_type_alias(jule::Ptr<_21110e591_TypeAliasDecl> _10225_decl) {
	return jule::new_ptr<_1a850bead_TypeAlias>(_1a850bead_TypeAlias(_10225_decl.get()._field_scope,_10225_decl.get()._field_public,_10225_decl.get()._field_cpp_linked,jule::Bool(),jule::Bool(),_10225_decl.get()._field_token,_10225_decl.get()._field_ident,_1a5b378d8_build_type(_10225_decl.get()._field_kind),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>()));
}



inline jule::Ptr<_1b38b3d0a_Field> _1a5b38257_build_field(jule::Ptr<_211110c46_FieldDecl> _11320_decl) {
	return jule::new_ptr<_1b38b3d0a_Field>(_1b38b3d0a_Field(jule::Ptr<_1b396462a_Struct>(),_11320_decl.get()._field_token,_11320_decl.get()._field_public,_11320_decl.get()._field_mutable,_11320_decl.get()._field_ident,_1a5b378d8_build_type(_11320_decl.get()._field_kind),_11320_decl.get()._field_default));
}



inline jule::Slice<jule::Ptr<_1b38b3d0a_Field>> _1a5b384ee_build_fields(jule::Slice<jule::Ptr<_211110c46_FieldDecl>>& _12422_decls) {
	jule::Slice<jule::Ptr<_1b38b3d0a_Field>> _12513_fields = jule::Slice<jule::Ptr<_1b38b3d0a_Field>>::alloc(0LL,_12422_decls.len());;
	{
		auto &expr = _12422_decls;
		auto it = expr.begin();
		_iter_begin_1aabac56d:;
		if (it != expr.end()) {
			jule::Ptr<_211110c46_FieldDecl> _12617_decl = *it;
			{
				_12513_fields = jule::alloc_for_append(_12513_fields,1);_12513_fields.__push(_1a5b38257_build_field(_12617_decl));;
			}
			_iter_next_1aabac56d:;
			++it;
			goto _iter_begin_1aabac56d;
		}
		_iter_end_1aabac56d:;
	};
	return _12513_fields;
}



inline jule::Ptr<_1b396462a_Struct> _1a5b38796_build_struct(jule::Ptr<_2111115a4_StructDecl> _13221_decl) {
	return jule::new_ptr<_1b396462a_Struct>(_1b396462a_Struct(jule::Ptr<_1a846bc42_Sema>(),jule::Slice<jule::Ptr<_1b396462a_Struct>>(),jule::Slice<jule::Ptr<_1b396462a_Struct>>(),_13221_decl.get()._field_token,_13221_decl.get()._field_ident,_1a5b384ee_build_fields(_13221_decl.get()._field_fields),jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>(),jule::Slice<jule::Ptr<_1a8487246_Var>>(),_13221_decl.get()._field_public,_13221_decl.get()._field_cpp_linked,_13221_decl.get()._field_directives,_13221_decl.get()._field_generics,jule::Slice<jule::Ptr<_1a5e34531_Trait>>(),jule::Slice<jule::Ptr<_1b39672a9_StructIns>>()));
}



inline jule::Ptr<_1a5b2d67b_Param> _1a5b38a3d_build_param(jule::Ptr<_21110cc87_ParamDecl> _14420_decl) {
	return jule::new_ptr<_1a5b2d67b_Param>(_1a5b2d67b_Param(_14420_decl.get()._field_token,_14420_decl.get()._field_mutable,_14420_decl.get()._field_variadic,_14420_decl.get()._field_reference,_1a5b378d8_build_type(_14420_decl.get()._field_kind),_14420_decl.get()._field_ident));
}



inline jule::Slice<jule::Ptr<_1a5b2d67b_Param>> _1a5b38d6d_build_params(jule::Slice<jule::Ptr<_21110cc87_ParamDecl>>& _15522_decls) {
	jule::Slice<jule::Ptr<_1a5b2d67b_Param>> _15613_params = jule::Slice<jule::Ptr<_1a5b2d67b_Param>>::alloc(0LL,_15522_decls.len());;
	{
		auto &expr = _15522_decls;
		auto it = expr.begin();
		_iter_begin_1aabb3a08:;
		if (it != expr.end()) {
			jule::Ptr<_21110cc87_ParamDecl> _15717_decl = *it;
			{
				_15613_params = jule::alloc_for_append(_15613_params,1);_15613_params.__push(_1a5b38a3d_build_param(_15717_decl));;
			}
			_iter_next_1aabb3a08:;
			++it;
			goto _iter_begin_1aabb3a08;
		}
		_iter_end_1aabb3a08:;
	};
	return _15613_params;
}



inline jule::Ptr<_1a5b2cea5_RetType> _1a5b39115_build_ret_type(jule::Ptr<_210e87abd_RetTypeDecl> _16323_decl) {
	if (((_16323_decl.get()._field_idents == nullptr) && (_16323_decl.get()._field_kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1a5b2cea5_RetType>(_1a5b2cea5_RetType(_1a5b378d8_build_type(_16323_decl.get()._field_kind),_16323_decl.get()._field_idents));
}



inline jule::Ptr<_1a5b2eeb8_Fn> _1a5b393ac_build_fn(jule::Ptr<_21110ce74_FnDecl> _17317_decl) {
	return jule::new_ptr<_1a5b2eeb8_Fn>(_1a5b2eeb8_Fn(jule::Ptr<_1a846bc42_Sema>(),_17317_decl.get()._field_token,_17317_decl.get()._field_global,_17317_decl.get()._field_unsafety,_17317_decl.get()._field_public,_17317_decl.get()._field_cpp_linked,_17317_decl.get()._field_statically,_17317_decl.get()._field_exceptional,_17317_decl.get()._field_ident,_17317_decl.get()._field_directives,_17317_decl.get()._field_scope,_17317_decl.get()._field_generics,_1a5b39115_build_ret_type(_17317_decl.get()._field_result),_1a5b38d6d_build_params(_17317_decl.get()._field_params),jule::Ptr<_1b396462a_Struct>(),jule::Slice<jule::Ptr<_1a5b33164_FnIns>>()));
}



inline jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> _1a5b39654_build_methods(jule::Slice<jule::Ptr<_21110ce74_FnDecl>>& _19123_decls) {
	jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>> _19213_methods = jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>::alloc(0LL,_19123_decls.len());;
	{
		auto &expr = _19123_decls;
		auto it = expr.begin();
		_iter_begin_1aabb75de:;
		if (it != expr.end()) {
			jule::Ptr<_21110ce74_FnDecl> _19317_decl = *it;
			{
				_19213_methods = jule::alloc_for_append(_19213_methods,1);_19213_methods.__push(_1a5b393ac_build_fn(_19317_decl));;
			}
			_iter_next_1aabb75de:;
			++it;
			goto _iter_begin_1aabb75de;
		}
		_iter_end_1aabb75de:;
	};
	return _19213_methods;
}



inline jule::Ptr<_1a5e34531_Trait> _1a5b398eb_build_trait(jule::Ptr<_211111bae_TraitDecl> _19920_decl) {
	return jule::new_ptr<_1a5e34531_Trait>(_1a5e34531_Trait(_19920_decl.get()._field_token,_19920_decl.get()._field_ident,_19920_decl.get()._field_public,jule::Bool(),_1a5b39654_build_methods(_19920_decl.get()._field_methods),jule::Slice<jule::Ptr<_1b396462a_Struct>>()));
}



inline jule::Ptr<_1a8306406_EnumItem> _1a5b39b93_build_enum_item(jule::Ptr<_21110ed44_EnumItemDecl> _20824_decl) {
	return jule::new_ptr<_1a8306406_EnumItem>(_1a8306406_EnumItem(_20824_decl.get()._field_token,_20824_decl.get()._field_ident,_1a5b37bc4_build_expr(_20824_decl.get()._field_expr)));
}



inline jule::Slice<jule::Ptr<_1a8306406_EnumItem>> _1a5b39e3a_build_enum_items(jule::Slice<jule::Ptr<_21110ed44_EnumItemDecl>>& _21626_decls) {
	jule::Slice<jule::Ptr<_1a8306406_EnumItem>> _21713_items = jule::Slice<jule::Ptr<_1a8306406_EnumItem>>::alloc(0LL,_21626_decls.len());;
	{
		auto &expr = _21626_decls;
		auto it = expr.begin();
		_iter_begin_1aabb9b74:;
		if (it != expr.end()) {
			jule::Ptr<_21110ed44_EnumItemDecl> _21817_decl = *it;
			{
				_21713_items = jule::alloc_for_append(_21713_items,1);_21713_items.__push(_1a5b39b93_build_enum_item(_21817_decl));;
			}
			_iter_next_1aabb9b74:;
			++it;
			goto _iter_begin_1aabb9b74;
		}
		_iter_end_1aabb9b74:;
	};
	return _21713_items;
}



inline jule::Ptr<_1a83065e3_Enum> _1a5b3a1d2_build_enum(jule::Ptr<_211110262_EnumDecl> _22419_decl) {
	return jule::new_ptr<_1a83065e3_Enum>(_1a83065e3_Enum(_22419_decl.get()._field_token,_22419_decl.get()._field_public,_22419_decl.get()._field_ident,_1a5b378d8_build_type(_22419_decl.get()._field_kind),_1a5b39e3a_build_enum_items(_22419_decl.get()._field_items)));
}



inline jule::Ptr<_1a8487246_Var> _1a5b3a59a_build_var(jule::Ptr<_21110d161_VarDecl> _23418_decl) {
	return jule::new_ptr<_1a8487246_Var>(_1a8487246_Var(jule::Ptr<_1a8438e62_Scope>(),_23418_decl.get()._field_token,_23418_decl.get()._field_ident,_23418_decl.get()._field_cpp_linked,_23418_decl.get()._field_constant,_23418_decl.get()._field_mutable,_23418_decl.get()._field_public,jule::Bool(),_23418_decl.get()._field_statically,_23418_decl.get()._field_reference,_1a5b378d8_build_type(_23418_decl.get()._field_kind),_1a5b37bc4_build_expr(_23418_decl.get()._field_expr),static__1a5b364a8_new(),_23418_decl.get()._field_directives,jule::Ptr<_1a8486278_IterRelation>(),jule::Slice<jule::Ptr<_1a8487246_Var>>()));
}



inline jule::Slice<jule::Ptr<_1a8487246_Var>> _1a5b3a842_build_vars(jule::Slice<jule::Ptr<_21110d161_VarDecl>> _25119_decls) {
	jule::Slice<jule::Ptr<_1a8487246_Var>> _25213_vars = jule::Slice<jule::Ptr<_1a8487246_Var>>::alloc(0LL,_25119_decls.len());;
	{
		auto &expr = _25119_decls;
		auto it = expr.begin();
		_iter_begin_1aabbd293:;
		if (it != expr.end()) {
			jule::Ptr<_21110d161_VarDecl> _25317_decl = *it;
			{
				_25213_vars = jule::alloc_for_append(_25213_vars,1);_25213_vars.__push(_1a5b3a59a_build_var(_25317_decl));;
			}
			_iter_next_1aabbd293:;
			++it;
			goto _iter_begin_1aabbd293;
		}
		_iter_end_1aabbd293:;
	};
	return _25213_vars;
}



inline jule::Ptr<_1a8306d30_Impl> _1a5b3aad9_build_impl(jule::Ptr<_2111122b9_Impl> _25919_decl) {
	return jule::new_ptr<_1a8306d30_Impl>(_1a8306d30_Impl(_25919_decl.get()._field_base,_25919_decl.get()._field_dest,_1a5b39654_build_methods(_25919_decl.get()._field_methods),_1a5b3a842_build_vars(_25919_decl.get()._field_statics)));
}



inline jule::Ptr<_1a844d4e8_ScopeChecker> _1a83c25d2_new_scope_checker_base(jule::Ptr<_1a846bc42_Sema>& _4032_s, jule::Ptr<_1a5b33164_FnIns> _4046_owner) {
	return jule::new_ptr<_1a844d4e8_ScopeChecker>(_1a844d4e8_ScopeChecker(jule::Ptr<_2110e7238_Token>(),_4032_s,_4046_owner,jule::Ptr<_1a844d4e8_ScopeChecker>(),jule::I64(),jule::new_ptr<_1a84cd7a9_SymbolTable>(_1a84cd7a9_SymbolTable()),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_21110ca9a_ScopeTree>(),jule::Ptr<_1a5b33164_FnIns>(),jule::U64(),jule::U64(),jule::Ptr<jule::Slice<jule::Ptr<_1a844d11e_ScopeLabel>>>(),jule::Ptr<jule::Slice<jule::Ptr<_1a844d30b_ScopeGoto>>>(),jule::I64()));
}



inline jule::Ptr<_1a844d4e8_ScopeChecker> _1a83d7d12_new_scope_checker(jule::Ptr<_1a846bc42_Sema>& _4827_s, jule::Ptr<_1a5b33164_FnIns> _4841_owner) {
	jule::Ptr<_1a844d4e8_ScopeChecker> _4913_base = _1a83c25d2_new_scope_checker_base(_4827_s,_4841_owner);;
	_4913_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a844d11e_ScopeLabel>>>(nullptr);
	_4913_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a844d30b_ScopeGoto>>>(nullptr);
	return _4913_base;
}



inline jule::Ptr<_1a844d11e_ScopeLabel> _1a83eb8b4_find_label_parent(jule::Str _5822_ident, jule::Ptr<_1a844d4e8_ScopeChecker> _5838_scope) {
	jule::Ptr<_1a844d11e_ScopeLabel> _5913_label = _1a8450ebd_find_label_scope(_5838_scope, _5822_ident);;
	while ((_5913_label == nullptr)) {
		{
			if (((_5838_scope.get()._field_parent == nullptr) || (_5838_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_5838_scope=_5838_scope.get()._field_parent;
			_5913_label=_1a8450ebd_find_label_scope(_5838_scope, _5822_ident);
		}
	_iter_next_1aabc19a0:;
	}
	_iter_end_1aabc19a0:;;
	return _5913_label;
}



inline jule::Bool _1a8417616_stmt_is_goto_scope(jule::Any& _7224_stmt, jule::Ptr<_1a8438e62_Scope>& _7236_sc) {
	{
		auto &_match_expr{ _7224_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a8438e62_Scope>>()) {
			_case_begin_1aabc385e:;
			{
				return (_7224_stmt.operator jule::Ptr<_1a8438e62_Scope>() == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83eb1ee_InfIter>>()) {
			_case_begin_1aabc38c5:;
			{
				return (_7224_stmt.operator jule::Ptr<_1a83eb1ee_InfIter>().get()._field_scope == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83eb5c8_RangeIter>>()) {
			_case_begin_1aabc394c:;
			{
				return (_7224_stmt.operator jule::Ptr<_1a83eb5c8_RangeIter>().get()._field_scope == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83eb3db_WhileIter>>()) {
			_case_begin_1aabc39c4:;
			{
				return (_7224_stmt.operator jule::Ptr<_1a83eb3db_WhileIter>().get()._field_scope == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a844c63a_Match>>()) {
			_case_begin_1aabc3a7e:;
			{
				jule::Ptr<_1a844c63a_Match> _8313_m = _7224_stmt.operator jule::Ptr<_1a844c63a_Match>();;
				{
					auto &expr = _8313_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1aabc5dd3:;
					if (it != expr.end()) {
						jule::Ptr<_1a844ca58_Case> &_8416_c = *it;
						{
							if ((_8416_c.get()._field_scope == _7236_sc)) {
								return true;
							};
						}
						_iter_next_1aabc5dd3:;
						++it;
						goto _iter_begin_1aabc5dd3;
					}
					_iter_end_1aabc5dd3:;
				};
				return ((_8313_m.get()._field_default != nullptr) && (_8313_m.get()._field_default.get()._field_scope == _7236_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a83da5c8_Conditional>>()) {
			_case_begin_1aabc3b06:;
			{
				jule::Ptr<_1a83da5c8_Conditional> _9113_c = _7224_stmt.operator jule::Ptr<_1a83da5c8_Conditional>();;
				{
					auto &expr = _9113_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1aabc7632:;
					if (it != expr.end()) {
						jule::Ptr<_1a844085e_If> &_9216_elif = *it;
						{
							if ((_9216_elif.get()._field_scope == _7236_sc)) {
								return true;
							};
						}
						_iter_next_1aabc7632:;
						++it;
						goto _iter_begin_1aabc7632;
					}
					_iter_end_1aabc7632:;
				};
				return ((_9113_c.get()._field_default != nullptr) && (_9113_c.get()._field_default.get()._field_scope == _7236_sc));
			}
		}
		else {
			_case_begin_1aabc3441:;
			{
				return false;
			}
		}
		_match_end_1aabc33db:;
	};
}



inline jule::I64 _1a8419d33_count_match_type(jule::Ptr<_1a844c63a_Match>& _10322_m, jule::Ptr<_1a850cbe5_TypeKind>& _10334_t) {
	jule::I64 _10413_n = 0LL;;
	jule::Str _1059_kind = _1a850d09c_to_str(_10334_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _10322_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1aabc9117:;
		if (it != expr.end()) {
			jule::Ptr<_1a844ca58_Case> &_10712_c = *it;
			{
				if ((_10712_c == nullptr)) {
					goto _iter_next_1aabc9117;
				};
				{
					auto &expr = _10712_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1aabc9cb6:;
					if (it != expr.end()) {
						jule::Ptr<_1a84d3869_Data> &_11216_expr = *it;
						{
							if ((_11216_expr == nullptr)) {
								goto _iter_end_1aabc9117;
							};
							if ((_1059_kind == _1a850d09c_to_str(_11216_expr.get()._field_model.operator jule::Ptr<_1a850cbe5_TypeKind>().ptr()))) {
								(_10413_n)++;
							};
						}
						_iter_next_1aabc9cb6:;
						++it;
						goto _iter_begin_1aabc9cb6;
					}
					_iter_end_1aabc9cb6:;
				};
			}
			_iter_next_1aabc9117:;
			++it;
			goto _iter_begin_1aabc9117;
		}
		_iter_end_1aabc9117:;
	};
	return _10413_n;
}



inline jule::Slice<jule::Ptr<_1a84d3869_Data>> _1a841a5b4_get_datas_from_tuple_data(jule::Ptr<_1a84d3869_Data>& _12735_d) {
	if ((_1a85116cc_tup(_12735_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _12735_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1b396ee71_TupleExprModel>>()) {
				_case_begin_1aabcd506:;
				{
					return _12735_d.get()._field_model.operator jule::Ptr<_1b396ee71_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1aabcb3a0:;
				{
					jule::Ptr<_1a8516da8_Tuple> _13321_t = _1a85116cc_tup(_12735_d.get()._field_kind.ptr());;
					jule::Slice<jule::Ptr<_1a84d3869_Data>> _13421_r = jule::Slice<jule::Ptr<_1a84d3869_Data>>::alloc(0LL,_13321_t.get()._field_types.len());;
					{
						auto &expr = _13321_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1aabcbd73:;
						if (it != expr.end()) {
							jule::Ptr<_1a850cbe5_TypeKind> _13525_kind = *it;
							{
								_13421_r = jule::alloc_for_append(_13421_r,1);_13421_r.__push(jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(_13525_kind,true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>())));;
							}
							_iter_next_1aabcbd73:;
							++it;
							goto _iter_begin_1aabcbd73;
						}
						_iter_end_1aabcbd73:;
					};
					return _13421_r;
				}
			}
			_match_end_1aabcb34a:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1a84d3869_Data>>({_12735_d});
	};
}



inline jule::Slice<jule::Any> _1a841b1ec_get_expr_models(jule::Any& _14825_m) {
	{
		auto &_match_expr{ _14825_m };
		
		if (_match_expr.type_is<jule::Ptr<_211079ae4_TupleExpr>>()) {
			_case_begin_1aabce040:;
			{
				jule::Ptr<_211079ae4_TupleExpr> _15117_tup = _14825_m.operator jule::Ptr<_211079ae4_TupleExpr>();;
				jule::Slice<jule::Any> _15217_models = jule::Slice<jule::Any>::alloc(0LL,_15117_tup.get()._field_expr.len());;
				{
					auto &expr = _15117_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1aabce9be:;
					if (it != expr.end()) {
						jule::Ptr<_210e87caa_Expr> _15321_expr = *it;
						{
							_15217_models = jule::alloc_for_append(_15217_models,1);_15217_models.__push(jule::Any(_15321_expr.get()._field_kind));;
						}
						_iter_next_1aabce9be:;
						++it;
						goto _iter_begin_1aabce9be;
					}
					_iter_end_1aabce9be:;
				};
				return _15217_models;
			}
		}
		else {
			_case_begin_1aabcc736:;
			{
				return jule::Slice<jule::Any>({jule::Any(_14825_m)});
			}
		}
		_match_end_1aabcd9ac:;
	};
}



inline jule::Bool _1a841d61c_check_mut(jule::Ptr<_1a846bc42_Sema>& _16219_s, jule::Ptr<_1a84d3869_Data>& _16230_left, jule::Ptr<_1a84d3869_Data> _16247_right, jule::Ptr<_2110e7238_Token> _16261_op) {
	jule::Bool _16275_ok = jule::Bool();
	{
		
		if ((!(_16230_left.get()._field_mutable))) {
			_case_begin_1aabd143d:;
			{
				_1a846e65c_push_err(_16219_s.ptr(), _16261_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_16275_ok = false;
				return _16275_ok;
			}
		}
		else if ((((_16247_right != nullptr) && (!(_16247_right.get()._field_mutable))) && _1a850e08c_mutable(_16247_right.get()._field_kind.ptr()))) {
			_case_begin_1aabd154d:;
			{
				if (((_16261_op.get()._field_kind != jule::Str("=", 1)) && (_1a8510e90_strct(_16247_right.get()._field_kind.ptr()) != nullptr))) {
					_16275_ok = true;
					return _16275_ok;
				};
				_1a846e65c_push_err(_16219_s.ptr(), _16261_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_16247_right.get()._field_kind.ptr()))}));
				_16275_ok = false;
				return _16275_ok;
			}
		}
		else {
			_case_begin_1aabd0d66:;
			{
				_16275_ok = true;
				return _16275_ok;
			}
		}
		_match_end_1aabd0805:;
	};
}



inline jule::Bool _1a841dd9d_check_assign(jule::Ptr<_1a846bc42_Sema>& _18122_s, jule::Ptr<_1a84d3869_Data>& _18137_left, jule::Ptr<_1a84d3869_Data> _18154_right, jule::Ptr<_2110e7238_Token> _18168_op) {
	jule::Bool _18182_ok = jule::Bool();
	jule::Ptr<_1a5b33164_FnIns> _1829_f = _1a8510c2b_fnc(_18137_left.get()._field_kind.ptr());;
	if ((((_1829_f != nullptr) && (_1829_f.get()._field_decl != nullptr)) && _1829_f.get()._field_decl.get()._field_global)) {
		_1a846e65c_push_err(_18122_s.ptr(), _18168_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_18182_ok = false;
		return _18182_ok;
	};
	{
		
		if (_1a84d422c_is_const(_18137_left.ptr())) {
			_case_begin_1aabd6586:;
			{
				_1a846e65c_push_err(_18122_s.ptr(), _18168_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1a846e97b_push_suggestion(_18122_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_18182_ok = false;
				return _18182_ok;
			}
		}
		else if ((!(_18137_left.get()._field_lvalue))) {
			_case_begin_1aabd6685:;
			{
				_1a846e65c_push_err(_18122_s.ptr(), _18168_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_18182_ok = false;
				return _18182_ok;
			}
		}
		else if ((!(_1a841d61c_check_mut(_18122_s,_18137_left,_18154_right,_18168_op)))) {
			_case_begin_1aabd66eb:;
			{
				_18182_ok = false;
				return _18182_ok;
			}
		}
		else {
			_case_begin_1aabd5e9d:;
			{
				_18182_ok = true;
				return _18182_ok;
			}
		}
		_match_end_1aabd5dc1:;
	};
}



inline jule::Bool _1a841e640_is_valid_ast_st_for_next_st(jule::Any& _20337_n) {
	{
		auto &_match_expr{ _20337_n };
		
		if (_match_expr.type_is<jule::Ptr<_21110c8ad_AssignSt>>()) {
			_case_begin_1aabd8b71:;
			{
				return (!(_20337_n.operator jule::Ptr<_21110c8ad_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_21110ab31_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_210e87caa_Expr>>()) {
			_case_begin_1aabd8bd7:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aabd8a83:;
			{
				return false;
			}
		}
		_match_end_1aabd8a2d:;
	};
}



inline jule::Bool _1a84266be_is_valid_st_for_next_st(jule::Any& _21529_st) {
	{
		auto &_match_expr{ _21529_st };
		
		if (_match_expr.type_is<jule::Ptr<_1b396b1c0_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a844c074_Postfix>>() || _match_expr.type_is<jule::Ptr<_1a844c261_Assign>>() || _match_expr.type_is<jule::Ptr<_1a844c44d_MultiAssign>>()) {
			_case_begin_1aabd9ce8:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a84d3869_Data>>()) {
			_case_begin_1aabd9d5e:;
			{
				{
					auto &_match_expr{ _21529_st.operator jule::Ptr<_1a84d3869_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1b396b1c0_FnCallExprModel>>()) {
						_case_begin_1aabda7cc:;
						{
							return true;
						}
					}
					else {
						_case_begin_1aabdacc7:;
						{
							return false;
						}
					}
					_match_end_1aabdac72:;
				};
			}
		}
		else {
			_case_begin_1aabd8654:;
			{
				return false;
			}
		}
		_match_end_1aabd85ee:;
	};
}



inline jule::Bool _1a8426e0b_st_is_def(jule::Any& _23415_st) {
	{
		auto &_match_expr{ _23415_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
			_case_begin_1aabdb8dd:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aabdb79a:;
			{
				return false;
			}
		}
		_match_end_1aabdb745:;
	};
}



inline jule::Ptr<_1a8487246_Var> _1a8462078_find_var_in_package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>& _4629_files, jule::Str _4652_ident, jule::Bool _4664_cpp_linked) {
	{
		auto &expr = _4629_files;
		auto it = expr.begin();
		_iter_begin_1aabdc119:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1a8487246_Var> _4817_v = _1a84ce47a_find_var(_4717_f.ptr(), _4652_ident,_4664_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1aabdc119:;
			++it;
			goto _iter_begin_1aabdc119;
		}
		_iter_end_1aabdc119:;
	};
	return nullptr;
}



inline jule::Ptr<_1a850bead_TypeAlias> _1a84624eb_find_type_alias_in_package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>& _5836_files, jule::Str _5859_ident, jule::Bool _5871_cpp_linked) {
	{
		auto &expr = _5836_files;
		auto it = expr.begin();
		_iter_begin_1aabdc4c1:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1a850bead_TypeAlias> _6017_ta = _1a84ce832_find_type_alias(_5917_f.ptr(), _5859_ident,_5871_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1aabdc4c1:;
			++it;
			goto _iter_begin_1aabdc4c1;
		}
		_iter_end_1aabdc4c1:;
	};
	return nullptr;
}



inline jule::Ptr<_1b396462a_Struct> _1a84628c5_find_struct_in_package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>& _7032_files, jule::Str _7055_ident, jule::Bool _7067_cpp_linked) {
	{
		auto &expr = _7032_files;
		auto it = expr.begin();
		_iter_begin_1aabdd8e0:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1b396462a_Struct> _7217_s = _1a84cebd9_find_struct(_7117_f.ptr(), _7055_ident,_7067_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1aabdd8e0:;
			++it;
			goto _iter_begin_1aabdd8e0;
		}
		_iter_end_1aabdd8e0:;
	};
	return nullptr;
}



inline jule::Ptr<_1a5b2eeb8_Fn> _1a8462d04_find_fn_in_package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>& _8228_files, jule::Str _8251_ident, jule::Bool _8263_cpp_linked) {
	{
		auto &expr = _8228_files;
		auto it = expr.begin();
		_iter_begin_1aabded0e:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1a5b2eeb8_Fn> _8417_f = _1a84d0091_find_fn(_8317_file.ptr(), _8251_ident,_8263_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1aabded0e:;
			++it;
			goto _iter_begin_1aabded0e;
		}
		_iter_end_1aabded0e:;
	};
	return nullptr;
}



inline jule::Ptr<_1a5e34531_Trait> _1a8463145_find_trait_in_package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>& _9431_files, jule::Str _9454_ident) {
	{
		auto &expr = _9431_files;
		auto it = expr.begin();
		_iter_begin_1aabe1c34:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1a5e34531_Trait> _9617_t = _1a84d039e_find_trait(_9517_f.ptr(), _9454_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1aabe1c34:;
			++it;
			goto _iter_begin_1aabe1c34;
		}
		_iter_end_1aabe1c34:;
	};
	return nullptr;
}



inline jule::Ptr<_1a83065e3_Enum> _1a8463486_find_enum_in_package(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>& _10630_files, jule::Str _10653_ident) {
	{
		auto &expr = _10630_files;
		auto it = expr.begin();
		_iter_begin_1aabe2c35:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1a83065e3_Enum> _10817_e = _1a84d06ac_find_enum(_10717_f.ptr(), _10653_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1aabe2c35:;
			++it;
			goto _iter_begin_1aabe2c35;
		}
		_iter_end_1aabe2c35:;
	};
	return nullptr;
}



inline jule::Bool _1a8468ec5_is_std_package(jule::Str _32719_f, jule::Str _32727_p) {
	return _210b8d120_has_prefix(_32719_f,_20ecb5a51_join(jule::Slice<jule::Str>({_210c5359d_PATH_STDLIB,_32727_p})));
}



inline jule::Bool _1a8469e60_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
			_case_begin_1aabe5188:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396d9ca_StructSubIdentExprModel>>()) {
			_case_begin_1aabe51ee:;
			{
				jule::Ptr<_1b396d9ca_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1b396d9ca_StructSubIdentExprModel>();;
				return _1a8469e60_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b396d25a_TraitSubIdentExprModel>>()) {
			_case_begin_1aabe5276:;
			{
				jule::Ptr<_1b396d25a_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1b396d25a_TraitSubIdentExprModel>();;
				return _1a8469e60_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b3969784_UnaryExprModel>>()) {
			_case_begin_1aabe52dc:;
			{
				jule::Ptr<_1b3969784_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1b3969784_UnaryExprModel>();;
				if ((_2317_unary.get()._field_op.get()._field_kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1a851027a_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1a8510016_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				};
				return _1a8469e60_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1aabe4c9d:;
			{
				return false;
			}
		}
		_match_end_1aabe361a:;
	};
}



inline _210c3ee2a_Log _1a846a3a0_compiler_err(jule::Ptr<_2110e7238_Token>& _4118_token, jule::Bool _4133_line, jule::Str _4145_fmt, jule::Slice<jule::Any> _4158_args) {
	_210c3ee2a_Log _4213_log = _210c3ee2a_Log(static_cast<jule::I64>(1LL),_4118_token.get()._field_row,_4118_token.get()._field_column,_4118_token.get()._field_file.get()._field_path,_210c4036a_logf(_4145_fmt,jule::Any(_4158_args)),jule::Str(),jule::Str());;
	if (_4133_line) {
		_4213_log._field_line=_2110ed805_get_row(_4118_token.get()._field_file.ptr(), _4118_token.get()._field_row);
	};
	return _4213_log;
}



inline jule::Bool _1a846a6e1_imp_is_lookupable(jule::Ptr<_1a8464058_ImportInfo>& _5523_i, jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	};
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _1a8466687_exist_ident(_5523_i.ptr(), _5539_ident);
		};
	};
	return _5523_i.get()._field_import_all;
}



inline void _1a846a9dd_append_ret_vars(jule::Slice<jule::Ptr<_1a8487246_Var>>& _6825_dest, jule::Ptr<_1a5b33164_FnIns>& _6844_f) {
	if ((_1a5b30419_is_void(_6844_f.get()._field_decl.ptr()) || (_6844_f.get()._field_result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>> _7313_types = _1a5b33b7b_types(_6844_f.ptr());;
	{
		auto &expr = _6844_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1aabed3b1:;
		if (it != expr.end()) {
			jule::I64 _7410_i = it - expr.begin();
			jule::Ptr<_2110e7238_Token> _7417_ident = *it;
			{
				if ((_2110e9988_is_ignore_ident(_7417_ident.get()._field_kind) || _2110e9c30_is_anon_ident(_7417_ident.get()._field_kind))) {
					goto _iter_next_1aabed3b1;
				};
				_6825_dest = jule::alloc_for_append(_6825_dest,1);_6825_dest.__push(jule::new_ptr<_1a8487246_Var>(_1a8487246_Var(_6844_f.get()._field_scope,_7417_ident,_7417_ident.get()._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),_7313_types[_7410_i])),jule::new_ptr<_1a84d48e2_Value>(_1a84d48e2_Value(jule::Ptr<_210e87caa_Expr>(),jule::new_ptr<_1a84d3869_Data>())),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Slice<jule::Ptr<_210eb33e0_Directive>>(),jule::Ptr<_1a8486278_IterRelation>(),jule::Slice<jule::Ptr<_1a8487246_Var>>())));;
			}
			_iter_next_1aabed3b1:;
			++it;
			_7410_i++;
			goto _iter_begin_1aabed3b1;
		}
		_iter_end_1aabed3b1:;
	};
}



inline void _1a846ac96_append_param_vars(jule::Slice<jule::Ptr<_1a8487246_Var>>& _9427_dest, jule::Ptr<_1a5b33164_FnIns>& _9446_f) {
	if ((_9446_f.get()._field_params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9446_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1aabee912:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b322c8_ParamIns> _9917_p = *it;
			{
				if ((_2110e9988_is_ignore_ident(_9917_p.get()._field_decl.get()._field_ident) || _2110e9c30_is_anon_ident(_9917_p.get()._field_decl.get()._field_ident))) {
					goto _iter_next_1aabee912;
				};
				jule::Ptr<_1a8487246_Var> _10417_v = jule::new_ptr<_1a8487246_Var>(_1a8487246_Var(_9446_f.get()._field_scope,_9917_p.get()._field_decl.get()._field_token,_9917_p.get()._field_decl.get()._field_ident,jule::Bool(),jule::Bool(),_9917_p.get()._field_decl.get()._field_mutable,jule::Bool(),true,jule::Bool(),_9917_p.get()._field_decl.get()._field_reference,jule::new_ptr<_1a8511a84_TypeSymbol>(),jule::new_ptr<_1a84d48e2_Value>(_1a84d48e2_Value(jule::Ptr<_210e87caa_Expr>(),jule::new_ptr<_1a84d3869_Data>())),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Slice<jule::Ptr<_210eb33e0_Directive>>(),jule::Ptr<_1a8486278_IterRelation>(),jule::Slice<jule::Ptr<_1a8487246_Var>>()));;
				{
					
					if (_1a5b2dca8_is_self(_9917_p.get()._field_decl.ptr())) {
						_case_begin_1aac0366e:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),false,jule::Trait<_1a850c7b6_Kind>(_9446_f.get()._field_owner, 0)));
							_10417_v.get()._field_reference=(!(_1a5b2e01c_is_ref(_9917_p.get()._field_decl.ptr())));
							if (_1a5b2e01c_is_ref(_9917_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a8515956_Sptr>(_1a8515956_Sptr(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident,jule::Bool(),jule::Bool(),_10417_v.get()._field_kind.get()._field_kind.get()._field_kind)))), 6);
							};
						}
					}
					else if (_9917_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1aac032c8:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),false,jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a85163b3_Slc>(_1a85163b3_Slc(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(_9917_p.get()._field_kind.get()._field_cpp_ident,jule::Bool(),jule::Bool(),_9917_p.get()._field_kind.get()._field_kind)))), 7)));
						}
					}
					else {
						_case_begin_1aac02e87:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_9917_p.get()._field_kind;
						}
					}
					_match_end_1aac02d99:;
				};
				_9427_dest = jule::alloc_for_append(_9427_dest,1);_9427_dest.__push(_10417_v);;
			}
			_iter_next_1aabee912:;
			++it;
			goto _iter_begin_1aabee912;
		}
		_iter_end_1aabee912:;
	};
}



inline void _1a846b093_append_generic_type_aliases(jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>& _15437_dest, jule::Ptr<_1a5b33164_FnIns>& _15462_f) {
	jule::I64 _15513_size = _15462_f.get()._field_generics.len();;
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15513_size+=_15462_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	if ((_15513_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15462_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aac08597:;
		if (it != expr.end()) {
			jule::I64 _16410_i = it - expr.begin();
			jule::Ptr<_1a850cbe5_TypeKind> _16417_g = *it;
			{
				jule::Ptr<_21110be1d_GenericDecl> _16517_decl = _15462_f.get()._field_decl.get()._field_generics[_16410_i];;
				_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1a850bead_TypeAlias>(_1a850bead_TypeAlias(_15462_f.get()._field_decl.get()._field_scope,jule::Bool(),jule::Bool(),true,true,_16517_decl.get()._field_token,_16517_decl.get()._field_ident,jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),_16417_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>())));;
			}
			_iter_next_1aac08597:;
			++it;
			_16410_i++;
			goto _iter_begin_1aac08597;
		}
		_iter_end_1aac08597:;
	};
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1b39672a9_StructIns> _17917_owner = _15462_f.get()._field_owner;;
		{
			auto &expr = _17917_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1aac0a533:;
			if (it != expr.end()) {
				jule::I64 _18014_i = it - expr.begin();
				jule::Ptr<_1a850cbe5_TypeKind> _18021_g = *it;
				{
					jule::Ptr<_21110be1d_GenericDecl> _18121_decl = _17917_owner.get()._field_decl.get()._field_generics[_18014_i];;
					_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1a850bead_TypeAlias>(_1a850bead_TypeAlias(_15462_f.get()._field_decl.get()._field_scope,jule::Bool(),jule::Bool(),true,true,_18121_decl.get()._field_token,_18121_decl.get()._field_ident,jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),_18021_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>())));;
				}
				_iter_next_1aac0a533:;
				++it;
				_18014_i++;
				goto _iter_begin_1aac0a533;
			}
			_iter_end_1aac0a533:;
		};
	};
}



inline jule::Ptr<_1a84cd7a9_SymbolTable> _1a846b3c3_find_file(jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>& _19619_files, jule::Ptr<_2110ec628_File>& _19643_handler) {
	{
		auto &expr = _19619_files;
		auto it = expr.begin();
		_iter_begin_1aac0ab1b:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _19717_fl = *it;
			{
				if ((_19717_fl.get()._field_file == _19643_handler)) {
					return _19717_fl;
				};
			}
			_iter_next_1aac0ab1b:;
			++it;
			goto _iter_begin_1aac0ab1b;
		}
		_iter_end_1aac0ab1b:;
	};
	return nullptr;
}



inline void _1a846b7ad_push_suggestion(_210c3ee2a_Log* _20531_log, jule::Str _20542_fmt, jule::Slice<jule::Any> _20555_args) {
	_20531_log->_field_suggestion=_210c4036a_logf(_20542_fmt,jule::Any(_20555_args));
}



inline jule::Bool _1a84a0a34_trait_has_reference_receiver(jule::Ptr<_1a5e34531_Trait>& _2634_t) {
	{
		auto &expr = _2634_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aac0d767:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_statically) {
					goto _iter_next_1aac0d767;
				};
				jule::Ptr<_1a5b2d67b_Param> _3313_p = _2712_f.get()._field_params[0LL];;
				if ((_1a5b2e01c_is_ref(_3313_p.ptr()) && _1a5b2dca8_is_self(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1aac0d767:;
			++it;
			goto _iter_begin_1aac0d767;
		}
		_iter_end_1aac0d767:;
	};
	return false;
}



inline jule::Bool _1a84b9784_float_assignable(jule::Str _4121_kind, jule::Ptr<_1a84d3869_Data>& _4133_d) {
	jule::Str _429_value = _1a6035368_fmt_float(static_cast<jule::F64>(_1a83aab70_as_f64(_4133_d.get()._field_constant.ptr())),'g',-1LL,64LL);;
	return _1a8442a1a_check_bit_float(_429_value,static_cast<jule::I64>(_1a8441684_bitsize_of(_4121_kind)));
}



inline jule::Bool _1a84b98b6_sig_assignable(jule::Str _4619_kind, jule::Ptr<_1a84d3869_Data>& _4631_d) {
	jule::F64 _479_min = _1a84459a7_min(_4619_kind);;
	jule::F64 _489_max = _1a8445c93_max(_4619_kind);;
	{
		
		if (_1a83ac7cb_is_f64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1aac1200c:;
			{
				jule::F64 _5113_x = _1a83aa433_read_f64(_4631_d.get()._field_constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1a82d7470_modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1a83ac08e_is_u64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1aac12073:;
			{
				jule::F64 _5813_x = _1a83aab70_as_f64(_4631_d.get()._field_constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1a83abd2a_is_i64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1aac120d9:;
			{
				jule::F64 _6313_x = _1a83aab70_as_f64(_4631_d.get()._field_constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1aac11da8:;
	};
	return false;
}



inline jule::Bool _1a84b99e8_unsig_assignable(jule::Str _6921_kind, jule::Ptr<_1a84d3869_Data>& _6933_d) {
	jule::F64 _709_max = _1a8445c93_max(_6921_kind);;
	if ((_6933_d.get()._field_is_rune && (_6921_kind == jule::Str("u8", 2)))) {
		return _1a84b6c7b_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1a83a9982_read_i64(_6933_d.get()._field_constant.ptr()))));
	};
	{
		
		if (_1a83ac7cb_is_f64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1aac16d7a:;
			{
				jule::F64 _7713_x = _1a83aa433_read_f64(_6933_d.get()._field_constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1a82d7470_modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1a83ac08e_is_u64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1aac16de1:;
			{
				jule::F64 _8713_x = _1a83aab70_as_f64(_6933_d.get()._field_constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1a83abd2a_is_i64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1aac16e57:;
			{
				jule::F64 _9213_x = _1a83aab70_as_f64(_6933_d.get()._field_constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1aac16077:;
	};
	return false;
}



inline jule::Bool _1a84b9b2a_int_assignable(jule::Str _9819_kind, jule::Ptr<_1a84d3869_Data>& _9831_d) {
	{
		
		if (_1a844abaa_is_sig_int(_9819_kind)) {
			_case_begin_1aac21736:;
			{
				return _1a84b98b6_sig_assignable(_9819_kind,_9831_d);
			}
		}
		else if (_1a844ae96_is_unsig_int(_9819_kind)) {
			_case_begin_1aac2179c:;
			{
				return _1a84b99e8_unsig_assignable(_9819_kind,_9831_d);
			}
		}
		else {
			_case_begin_1aac1784d:;
			{
				return false;
			}
		}
		_match_end_1aac17782:;
	};
}



inline jule::Ptr<_210eb33e0_Directive> _1a8507838_find_directive(jule::Slice<jule::Ptr<_210eb33e0_Directive>>& _408924_directives, jule::Str _408966_d) {
	{
		auto &expr = _408924_directives;
		auto it = expr.begin();
		_iter_begin_1aac21170:;
		if (it != expr.end()) {
			jule::Ptr<_210eb33e0_Directive> _409017_dr = *it;
			{
				if ((_409017_dr.get()._field_tag.get()._field_kind == _408966_d)) {
					return _409017_dr;
				};
			}
			_iter_next_1aac21170:;
			++it;
			goto _iter_begin_1aac21170;
		}
		_iter_end_1aac21170:;
	};
	return nullptr;
}



inline jule::Any _1a8507bbd_find_builtins_import(jule::Str _409825_ident, jule::Ptr<_1a8464058_ImportInfo> _409837_imp) {
	return jule::Any(_1a852e6ea_find_package_builtin_def(_409837_imp.get()._field_link_path,_409825_ident));
}



inline void _1a8507dcc_fit_bitsize(jule::Ptr<_1a84d3869_Data>& _410521_d) {
	jule::Ptr<_1a8512447_Prim> _410613_prim = _1a850eca2_prim(_410521_d.get()._field_kind.ptr());;
	jule::I64 _41079_z = _1a8441684_bitsize_of(_1a85127aa_to_str(_410613_prim.ptr()));;
	if ((_41079_z == 64LL)) {
		return;;
	};
	jule::I64 _411213_k = 0LL;;
	{
		
		if (_1a83abd2a_is_i64(_410521_d.get()._field_constant.ptr())) {
			_case_begin_1aac24c34:;
			{
				_411213_k=static_cast<jule::I64>(_1a8443059_bitsize_of_int(static_cast<jule::I64>(_1a83a9982_read_i64(_410521_d.get()._field_constant.ptr()))));
				if ((_411213_k > _41079_z)) {
					_410613_prim.get()._field_kind=_1a8441970_int_from_bits(_411213_k);
				};
			}
		}
		else if (_1a83ac08e_is_u64(_410521_d.get()._field_constant.ptr())) {
			_case_begin_1aac24cab:;
			{
				_411213_k=static_cast<jule::I64>(_1a8443301_bitsize_of_uint(static_cast<jule::U64>(_1a83a9be6_read_u64(_410521_d.get()._field_constant.ptr()))));
				if ((_411213_k > _41079_z)) {
					_410613_prim.get()._field_kind=_1a8441c17_uint_from_bits(_411213_k);
				};
			}
		}
		else if (_1a83ac7cb_is_f64(_410521_d.get()._field_constant.ptr())) {
			_case_begin_1aac24d33:;
			{
				_411213_k=static_cast<jule::I64>(_1a8442cb2_bitsize_of_float(static_cast<jule::F64>(_1a83aa433_read_f64(_410521_d.get()._field_constant.ptr()))));
				if ((_411213_k > _41079_z)) {
					_410613_prim.get()._field_kind=_1a8441eae_float_from_bits(_411213_k);
				};
			}
		}
		_match_end_1aac24b57:;
	};
}



inline void _1a85081c9_make_struct_lit_alloc(jule::Ptr<_1a84d3869_Data>& _413231_d, jule::Ptr<_1b396a037_StructLitExprModel>& _413246_lit) {
	_413231_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a8515956_Sptr>(_1a8515956_Sptr(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_413246_lit.get()._field_strct, 0))))), 6)));
	_413231_d.get()._field_model=jule::Any(jule::new_ptr<_1b396a367_AllocStructLitExprModel>(_1b396a367_AllocStructLitExprModel(_413246_lit)));
}



inline jule::Ptr<_1a8487246_Var> _1a850851a_build_error_var(jule::Ptr<_1a8438e62_Scope>& _414325_s, jule::Ptr<_21110ab31_FnCallExpr>& _414341_fc) {
	return jule::new_ptr<_1a8487246_Var>(_1a8487246_Var(_414325_s,_414341_fc.get()._field_token,jule::Str("error", 5),jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),false,jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("any", 3)), 5))))),jule::new_ptr<_1a84d48e2_Value>(_1a84d48e2_Value(jule::Ptr<_210e87caa_Expr>(),jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data()))),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Slice<jule::Ptr<_210eb33e0_Directive>>(),jule::Ptr<_1a8486278_IterRelation>(),jule::Slice<jule::Ptr<_1a8487246_Var>>()));
}



inline jule::Any _1a850885b_find_builtins_sema(jule::Str _416223_ident, jule::Ptr<_1a846bc42_Sema> _416239_s) {
	{
		auto &expr = _416239_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1aac2aed2:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _416317_imp = *it;
			{
				if ((_416317_imp.get()._field_import_all || _1a8466687_exist_ident(_416317_imp.ptr(), _416223_ident))) {
					jule::Any _416521_def = _1a8507bbd_find_builtins_import(_416223_ident,_416317_imp);;
					if ((_416521_def != nullptr)) {
						return jule::Any(_416521_def);
					};
				};
			}
			_iter_next_1aac2aed2:;
			++it;
			goto _iter_begin_1aac2aed2;
		}
		_iter_end_1aac2aed2:;
	};
	jule::Str _417313_ppath = _2110ed01e_dir(_416239_s.get()._field_file.get()._field_file.ptr());;
	if (_210b8d120_has_prefix(_417313_ppath,_210c5359d_PATH_STDLIB)) {
		(_417313_ppath).mut_slice(_210c5359d_PATH_STDLIB.len());;
		_417313_ppath=(jule::Str("std", 3) + _210bd1196_replace(_417313_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1a852e6ea_find_package_builtin_def(_417313_ppath,_416223_ident));
	};
	return nullptr;
}



inline jule::Bool _1a8508b03_is_ok_for_shifting(jule::Ptr<_1a84d3869_Data>& _418728_d) {
	if (_1a84d422c_is_const(_418728_d.ptr())) {
		{
			
			if (_1a83abd2a_is_i64(_418728_d.get()._field_constant.ptr())) {
				_case_begin_1aac2ebd9:;
				{
					return (_1a83a9982_read_i64(_418728_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1a83ac08e_is_u64(_418728_d.get()._field_constant.ptr())) {
				_case_begin_1aac2e502:;
				{
					return true;
				}
			}
			else if (_1a83ac7cb_is_f64(_418728_d.get()._field_constant.ptr())) {
				_case_begin_1aac2e568:;
				{
					return (_1a83aa433_read_f64(_418728_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1aac2e48b:;
				{
					return false;
				}
			}
			_match_end_1aac2e3c0:;
		};
	};
	jule::Ptr<_1a8512447_Prim> _42009_prim = _1a850eca2_prim(_418728_d.get()._field_kind.ptr());;
	return ((_42009_prim != nullptr) && _1a844b23d_is_int(_1a85127aa_to_str(_42009_prim.ptr())));
}



inline jule::Bool _1a8508e33_is_instanced_struct(jule::Ptr<_1b39672a9_StructIns> _420424_s) {
	return (_420424_s.get()._field_decl.get()._field_generics.len() == _420424_s.get()._field_generics.len());
}



inline jule::Bool _1a8509241_is_ptr_arithmetic_compatible_int(jule::Ptr<_1a84d3869_Data>& _420842_d) {
	if (_1a84d422c_is_const(_420842_d.ptr())) {
		return _1a84b9b2a_int_assignable(jule::Str("int", 3),_420842_d);
	};
	_1a84b9c5c_TypeCompatibilityChecker _421213_tcc = _1a84b9c5c_TypeCompatibilityChecker(jule::Ptr<_1a846bc42_Sema>(),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5))),_420842_d.get()._field_kind,jule::Ptr<_2110e7238_Token>());;
	return _1a84ba994_check(&_421213_tcc);
}



inline void _1a85094b6_apply_cast_kind_model(jule::Ptr<_1a84d3869_Data>& _422131_d, jule::Ptr<_1a850cbe5_TypeKind>& _422146_t) {
	_422131_d.get()._field_model=jule::Any(jule::new_ptr<_1b396a895_CastingExprModel>(_1b396a895_CastingExprModel(jule::Ptr<_2110e7238_Token>(),jule::Any(_422131_d.get()._field_model),_422146_t,_422131_d.get()._field_kind)));
}



inline void _1a850976e_apply_cast_kind(jule::Ptr<_1a84d3869_Data>& _422925_d, jule::Ptr<_1a850cbe5_TypeKind>& _422940_t) {
	_1a85094b6_apply_cast_kind_model(_422925_d,_422940_t);
	_422925_d.get()._field_kind=_422940_t;
}



inline jule::Ptr<_1a84d3869_Data> _1a850996c_build_void_data(void) {
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("void", 4)), 5))),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a83a871c_Const>()));
}



inline jule::Str _1a8509c58_check_data_for_integer_indexing(jule::Ptr<_1a84d3869_Data>& _424541_d) {
	jule::Str _424553_err_fmt = jule::Str();
	if ((_424541_d == nullptr)) {
		_424553_err_fmt = jule::Str();
		return _424553_err_fmt;
	};
	{
		
		if ((_1a850eca2_prim(_424541_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1aac3633e:;
			{
				_424553_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _424553_err_fmt;
			}
		}
		else if ((!(_1a844b23d_is_int(_1a85127aa_to_str(_1a850eca2_prim(_424541_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1aac363a5:;
			{
				_424553_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _424553_err_fmt;
			}
		}
		else if (_1a84d422c_is_const(_424541_d.ptr())) {
			_case_begin_1aac3641b:;
			{
				if ((_1a83aab70_as_f64(_424541_d.get()._field_constant.ptr()) < 0LL)) {
					_424553_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _424553_err_fmt;
				};
			}
		}
		else if ((_1a850eca2_prim(_424541_d.get()._field_kind.ptr()) == nullptr) || _1a84d422c_is_const(_424541_d.ptr()) || (_1a84413dc_real_kind_of(_1a85127aa_to_str(_1a850eca2_prim(_424541_d.get()._field_kind.ptr()).ptr())) != _1a84413dc_real_kind_of(jule::Str("int", 3)))) {
			_case_begin_1aac36482:;
			{
				jule::Ptr<_1a850cbe5_TypeKind> _426217_t = jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5)));;
				_1a850976e_apply_cast_kind(_424541_d,_426217_t);
			}
		}
		_match_end_1aac36806:;
	};
	_424553_err_fmt = jule::Str();
	return _424553_err_fmt;
}



inline void _1a850a044_apply_cast_model_by_enum(jule::Ptr<_1a84d3869_Data>& _427134_d, jule::Ptr<_1a83065e3_Enum> _427148_e) {
	if ((_427148_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1a8512447_Prim> _42759_p = _1a850eca2_prim(_427148_e.get()._field_kind.get()._field_kind.ptr());;
	if (_1a8515406_is_str(_42759_p.ptr())) {
		return;;
	};
	_1a85094b6_apply_cast_kind_model(_427134_d,_427148_e.get()._field_kind.get()._field_kind);
}



inline void _1a850a2db_cast_const_by_type(jule::Str& _428224_t, jule::Ptr<_1a84d3869_Data>& _428237_d) {
	{
		
		if (_1a844abaa_is_sig_int(_428224_t)) {
			_case_begin_1aac3c565:;
			{
				{
					auto _match_expr{ _1a8441684_bitsize_of(_1a84413dc_real_kind_of(_428224_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1aac3ccd5:;
						{
							_1a83aade5_set_i64(_428237_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a83aa697_as_i64(_428237_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1aac3d379:;
						{
							_1a83aade5_set_i64(_428237_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1a83aa697_as_i64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1aac3d3e0:;
						{
							_1a83aade5_set_i64(_428237_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1a83aa697_as_i64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1aac3d467:;
						{
							_1a83aade5_set_i64(_428237_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1a83aa697_as_i64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1aac3ceb1:;
				};
			}
		}
		else if (_1a844ae96_is_unsig_int(_428224_t)) {
			_case_begin_1aac3c5dc:;
			{
				{
					auto _match_expr{ _1a8441684_bitsize_of(_1a84413dc_real_kind_of(_428224_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1aac41b41:;
						{
							_1a83ab16a_set_u64(_428237_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a83aa90b_as_u64(_428237_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1aac41ba7:;
						{
							_1a83ab16a_set_u64(_428237_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1a83aa90b_as_u64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1aac41c1d:;
						{
							_1a83ab16a_set_u64(_428237_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1a83aa90b_as_u64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1aac41c84:;
						{
							_1a83ab16a_set_u64(_428237_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1a83aa90b_as_u64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1aac41adb:;
				};
			}
		}
		else if (_1a844b529_is_float(_428224_t)) {
			_case_begin_1aac3c664:;
			{
				{
					auto _match_expr{ _1a8441684_bitsize_of(_1a84413dc_real_kind_of(_428224_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1aac4224b:;
						{
							_1a83ab8da_set_f64(_428237_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a83aab70_as_f64(_428237_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1aac4543b:;
						{
							_1a83ab8da_set_f64(_428237_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1a83aab70_as_f64(_428237_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1aac453d6:;
				};
			}
		}
		_match_end_1aac3c444:;
	};
}



inline jule::Bool _1a850b52e_has_directive(jule::Slice<jule::Ptr<_210eb33e0_Directive>>& _3323_directives, jule::Str _3354_tag) {
	{
		auto &expr = _3323_directives;
		auto it = expr.begin();
		_iter_begin_1aac45a02:;
		if (it != expr.end()) {
			jule::Ptr<_210eb33e0_Directive> _3417_dr = *it;
			{
				if ((_3417_dr.get()._field_tag.get()._field_kind == _3354_tag)) {
					return true;
				};
			}
			_iter_next_1aac45a02:;
			++it;
			goto _iter_begin_1aac45a02;
		}
		_iter_end_1aac45a02:;
	};
	return false;
}



inline jule::Bool _1a8519ce0_can_get_ptr(jule::Ptr<_1a84d3869_Data>& _57121_d) {
	if (((!(_57121_d.get()._field_lvalue)) || _1a84d422c_is_const(_57121_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1a8510c2b_fnc(_57121_d.get()._field_kind.ptr()) != nullptr) || (_1a85104de_enm(_57121_d.get()._field_kind.ptr()) != nullptr))) {
			_case_begin_1aac4874c:;
			{
				return false;
			}
		}
		else {
			_case_begin_1aac48065:;
			{
				return true;
			}
		}
		_match_end_1aac47e55:;
	};
}



inline jule::Bool _1a851a087_is_valid_for_sptr_type(jule::Ptr<_1a850cbe5_TypeKind>& _58532_t) {
	jule::Ptr<_1b39672a9_StructIns> _58613_s = _1a8510e90_strct(_58532_t.ptr());;
	if ((((_58613_s != nullptr) && (_58613_s.get()._field_decl != nullptr)) && _58613_s.get()._field_decl.get()._field_cpp_linked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1a851a373_is_valid_for_ref(jule::Ptr<_1a850cbe5_TypeKind>& _59426_t) {
	return (_1a8510c2b_fnc(_59426_t.ptr()) == nullptr);
}



inline jule::Bool _1a851a65e_is_builtin_str_convertable(jule::Ptr<_1a850cbe5_TypeKind>& _59736_t) {
	return (((!(_1a850dd28_void(_59736_t.ptr()))) && (_1a8510c2b_fnc(_59736_t.ptr()) == nullptr)) && (_1a85116cc_tup(_59736_t.ptr()) == nullptr));
}



inline jule::Str _1a851a939_build_link_path_by_tokens(jule::Slice<jule::Ptr<_2110e7238_Token>>& _60131_tokens) {
	jule::Str _60213_s = _60131_tokens[0LL].get()._field_kind;;
	{
		auto expr = _60131_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1aac4c267:;
		if (it != expr.end()) {
			jule::Ptr<_2110e7238_Token> &_60312_token = *it;
			{
				_60213_s+=jule::Str("::", 2);
				_60213_s+=_60312_token.get()._field_kind;
			}
			_iter_next_1aac4c267:;
			++it;
			goto _iter_begin_1aac4c267;
		}
		_iter_end_1aac4c267:;
	};
	return _60213_s;
}



inline jule::Ptr<_1a8512447_Prim> _1a851abc0_build_prim_type(jule::Str _61020_kind) {
	return jule::new_ptr<_1a8512447_Prim>(_1a8512447_Prim(_61020_kind));
}



inline jule::Ptr<_1b396462a_Struct> _1a851b000_get_struct_from_kind(jule::Ptr<_1a850cbe5_TypeKind> _61629_k) {
	{
		
		if ((_61629_k == nullptr)) {
			_case_begin_1aac4d93e:;
			{
				return nullptr;
			}
		}
		else if ((_1a8510e90_strct(_61629_k.ptr()) != nullptr)) {
			_case_begin_1aac4d9a5:;
			{
				return _1a8510e90_strct(_61629_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1a8510016_sptr(_61629_k.ptr()) != nullptr)) {
			_case_begin_1aac4d6ca:;
			{
				return _1a851b000_get_struct_from_kind(_1a8510016_sptr(_61629_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a85109b7_slc(_61629_k.ptr()) != nullptr)) {
			_case_begin_1aac4d741:;
			{
				return _1a851b000_get_struct_from_kind(_1a85109b7_slc(_61629_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a8510753_arr(_61629_k.ptr()) != nullptr)) {
			_case_begin_1aac4d7a7:;
			{
				return _1a851b000_get_struct_from_kind(_1a8510753_arr(_61629_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a851027a_ptr(_61629_k.ptr()) != nullptr)) {
			_case_begin_1aac4d312:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1aac4c784:;
			{
				return nullptr;
			}
		}
		_match_end_1aac4d246:;
	};
}



inline jule::Bool _1a851b297_is_prim(jule::Str _63912_kind) {
	return ((((((((((((((((_63912_kind == jule::Str("i8", 2)) || (_63912_kind == jule::Str("i16", 3))) || (_63912_kind == jule::Str("i32", 3))) || (_63912_kind == jule::Str("i64", 3))) || (_63912_kind == jule::Str("u8", 2))) || (_63912_kind == jule::Str("u16", 3))) || (_63912_kind == jule::Str("u32", 3))) || (_63912_kind == jule::Str("u64", 3))) || (_63912_kind == jule::Str("f32", 3))) || (_63912_kind == jule::Str("f64", 3))) || (_63912_kind == jule::Str("int", 3))) || (_63912_kind == jule::Str("uint", 4))) || (_63912_kind == jule::Str("uintptr", 7))) || (_63912_kind == jule::Str("bool", 4))) || (_63912_kind == jule::Str("str", 3))) || (_63912_kind == jule::Str("any", 3)));
}



inline void _1a8523ed6_apply_implicit_cast(jule::Ptr<_1a850cbe5_TypeKind>& _152129_dest, jule::Ptr<_1a84d3869_Data>& _152151_d) {
	if (_1a850dab4_is_nil(_152151_d.get()._field_kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a8512447_Prim> _15269_dest_prim = _1a850eca2_prim(_152129_dest.ptr());;
	jule::Ptr<_1a8512447_Prim> _15279_prim = _1a850eca2_prim(_152151_d.get()._field_kind.ptr());;
	if ((_15269_dest_prim != nullptr)) {
		if (_1a851566a_is_any(_15269_dest_prim.ptr())) {
			_1a850976e_apply_cast_kind(_152151_d,_152129_dest);
			return;;
		};
		if (((((((!(_1a850d850_cpp_linked(_152151_d.get()._field_kind.ptr()))) && (!(_152151_d.get()._field_kind.get()._field_variadic))) && (!(_152151_d.get()._field_lvalue))) && (!(_1a84d422c_is_const(_152151_d.ptr())))) && (_15279_prim != nullptr)) && _1a844b7c1_is_num(_15279_prim.get()._field_kind))) {
			_1a850976e_apply_cast_kind(_152151_d,_152129_dest);
		};
		return;;
	};
	if (((_1a8511204_trt(_152129_dest.ptr()) != nullptr) && (_1a8511204_trt(_152151_d.get()._field_kind.ptr()) == nullptr))) {
		_1a85094b6_apply_cast_kind_model(_152151_d,_152129_dest);
	};
}



inline std::tuple<jule::Ptr<_1a84cd7a9_SymbolTable>,jule::Slice<_210c3ee2a_Log>> _1a8526b76_build_symbols(jule::Ptr<_210eb3d6e_Ast>& _1523_ast, jule::Trait<_1a8461be3_Importer>& _1539_importer, jule::Ptr<_1a5b3b139_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1a5b3b139_SymbolBuilder> _1613_sb = jule::new_ptr<_1a5b3b139_SymbolBuilder>(_1a5b3b139_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_210c3ee2a_Log>(),_1523_ast,jule::Ptr<_1a84cd7a9_SymbolTable>()));;
	_1a5b41293_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1a8466c1a_Package>,jule::Slice<_210c3ee2a_Log>> _1a85270a5___analyze_package(jule::Slice<jule::Ptr<_210eb3d6e_Ast>>& _2927_files, jule::Trait<_1a8461be3_Importer>& _2947_importer, jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>::alloc(0LL,_2927_files.len());;
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1aac5ba7e:;
		if (it != expr.end()) {
			jule::Ptr<_210eb3d6e_Ast> _3217_f = *it;
			{
				jule::Ptr<_1a84cd7a9_SymbolTable> _3318_table;;
				jule::Slice<_210c3ee2a_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1a8526b76_build_symbols(_3217_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1aac5ba7e:;
			++it;
			goto _iter_begin_1aac5ba7e;
		}
		_iter_end_1aac5ba7e:;
	};
	jule::Ptr<_1a846bc42_Sema> _4013_sema = jule::new_ptr<_1a846bc42_Sema>(_1a846bc42_Sema(jule::Slice<_210c3ee2a_Log>(),jule::Slice<jule::Ptr<_1a84cd7a9_SymbolTable>>(),jule::Ptr<_1a84cd7a9_SymbolTable>(),_2968_flags));;
	_1a84841ee_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1a8466c1a_Package> _4813_pkg = jule::new_ptr<_1a8466c1a_Package>(_1a8466c1a_Package(_4013_sema.get()._field_files));;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1a8466c1a_Package>,jule::Slice<_210c3ee2a_Log>> _1a8527490_analyze_package(jule::Slice<jule::Ptr<_210eb3d6e_Ast>> _7228_files, jule::Trait<_1a8461be3_Importer> _7247_importer, jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1a8466c1a_Package> _7714_package;;
	jule::Slice<_210c3ee2a_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _1a85270a5___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1a5b33164_FnIns> _1a8531158_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1aac64713:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _2420_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a4484_builtin_caller_out),jule::Bool()));;
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1aac64779:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _2720_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a45b6_builtin_caller_outln),jule::Bool()));;
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1aac6449e:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _3020_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a46e8_builtin_caller_new),jule::Bool()));;
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1aac64515:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _3320_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a4a5b_builtin_caller_panic),jule::Bool()));;
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1aac6457b:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _3620_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a4b8d_builtin_caller_make),jule::Bool()));;
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1aac6423a:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _3920_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a4cc0_builtin_caller_append),jule::Bool()));;
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1aac642a1:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _4220_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a4e02_builtin_caller_copy),jule::Bool()));;
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1aac64328:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _4520_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a5034_builtin_caller_clone),jule::Bool()));;
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1aac64812:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _4820_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a5166_builtin_caller_assert),jule::Bool()));;
				return _4820_f;
			}
		}
		else {
			_case_begin_1aac63c40:;
			{
				return nullptr;
			}
		}
		_match_end_1aac64092:;
	};
}



inline jule::Ptr<_1a850bead_TypeAlias> _1a8533215_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1aac69b47:;
			{
				static jule::Ptr<_1a850bead_TypeAlias> _5820_t = jule::new_ptr<_1a850bead_TypeAlias>(_1a850bead_TypeAlias(jule::Ptr<_21110ca9a_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2110e7238_Token>(),jule::Str(),jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("u8", 2)), 5))))),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>()));;
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1aac69c02:;
			{
				static jule::Ptr<_1a850bead_TypeAlias> _6820_t = jule::new_ptr<_1a850bead_TypeAlias>(_1a850bead_TypeAlias(jule::Ptr<_21110ca9a_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2110e7238_Token>(),jule::Str(),jule::new_ptr<_1a8511a84_TypeSymbol>(_1a8511a84_TypeSymbol(jule::Ptr<_210e7e620_TypeDecl>(),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("i32", 3)), 5))))),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a850bead_TypeAlias>>()));;
				return _6820_t;
			}
		}
		else {
			_case_begin_1aac69581:;
			{
				return nullptr;
			}
		}
		_match_end_1aac6965d:;
	};
}



inline jule::Ptr<_1a5e34531_Trait> _1a8533c4e_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _1a853469a_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_1a5b33164_FnIns> _8713_f = _1a8531158_find_builtin_fn(_8621_ident);;
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	};
	jule::Ptr<_1a850bead_TypeAlias> _9213_ta = _1a8533215_find_builtin_type_alias(_8621_ident);;
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	};
	jule::Ptr<_1a5e34531_Trait> _9713_t = _1a8533c4e_find_builtin_trait(_8621_ident);;
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	};
	return nullptr;
}



inline jule::Any _1a855d4b5_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1aac6dc5b:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _10820_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a6123_builtin_caller_std_debug_out),jule::Bool()));;
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1aac6dd16:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _11120_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a6541_builtin_caller_std_debug_outln),jule::Bool()));;
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1aac6c82b:;
			{
				return nullptr;
			}
		}
		_match_end_1aac6c1dd:;
	};
}



inline jule::Any _1a855e61a_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1aac70587:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _12120_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a5298_builtin_caller_std_mem_size_of),jule::Bool()));;
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1aac70631:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _12420_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a53ca_builtin_caller_std_mem_align_of),jule::Bool()));;
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1aac70697:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _12720_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a550c_builtin_caller_std_mem_free),jule::Bool()));;
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1aac6daa2:;
			{
				return nullptr;
			}
		}
		_match_end_1aac6e9c6:;
	};
}



inline jule::Any _1a854b4d6_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1aac726bb:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _13720_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a5809_builtin_caller_std_jule_integrated_to_str),jule::Bool()));;
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1aac72776:;
			{
				static jule::Ptr<_1a5b33164_FnIns> _14020_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>(),jule::Ptr<_1a850cbe5_TypeKind>(),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a85a5c27_builtin_caller_std_jule_integrated_emit),jule::Bool()));;
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1aac703cd:;
			{
				return nullptr;
			}
		}
		_match_end_1aac71ad8:;
	};
}



inline jule::Any _1a852e6ea_find_package_builtin_def(jule::Str _14729_link_path, jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1aac74129:;
			{
				return jule::Any(_1a855d4b5_find_builtin_def_std_debug(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1aac741c3:;
			{
				return jule::Any(_1a855e61a_find_builtin_def_std_mem(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1aac74239:;
			{
				return jule::Any(_1a854b4d6_find_builtin_def_std_jule_integrated(_14745_ident));
			}
		}
		else {
			_case_begin_1aac6d92b:;
			{
				return nullptr;
			}
		}
		_match_end_1aac73359:;
	};
}



inline jule::Ptr<_1a84d3869_Data> _1a8536845_builtin_caller_common_plain(jule::Ptr<_1a84d53d7_Eval>& _16037_e, jule::Ptr<_21110ab31_FnCallExpr>& _16052_fc, jule::Ptr<_1a84d3869_Data>& _16074_d) {
	jule::Ptr<_1a5b33164_FnIns> _16113_f = _1a8510c2b_fnc(_16074_d.get()._field_kind.ptr());;
	_1a84c05e2_FnCallArgChecker _16313_fcac = _1a84c05e2_FnCallArgChecker(_16037_e,_16052_fc.get()._field_args,_16052_fc.get()._field_token,_16113_f,false,jule::Slice<jule::Any>());;
	if ((!(_1a84c29ac_check(&_16313_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1b396b1c0_FnCallExprModel> _17413_model = jule::new_ptr<_1b396b1c0_FnCallExprModel>(_1b396b1c0_FnCallExprModel(_16052_fc.get()._field_token,_16113_f,jule::Bool(),jule::Any(_16074_d.get()._field_model),_16313_fcac._field_arg_models,jule::Ptr<_1a8438e62_Scope>(),jule::Bool()));;
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_1a850996c_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(_16113_f.get()._field_result,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
	};
	_16074_d.get()._field_model=jule::Any(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a8568a75_builtin_caller_common(jule::Ptr<_1a84d53d7_Eval>& _19331_e, jule::Ptr<_21110ab31_FnCallExpr>& _19346_fc, jule::Ptr<_1a84d3869_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	return _1a8536845_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_1a84d3869_Data> _1a854ac44_builtin_caller_common_mut(jule::Ptr<_1a84d53d7_Eval>& _20135_e, jule::Ptr<_21110ab31_FnCallExpr>& _20150_fc, jule::Ptr<_1a84d3869_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_1a84d58b0_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1a8568a75_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_1a84d3869_Data> _1a854ad76_builtin_caller_error(jule::Ptr<_1a84d53d7_Eval>& _20830_e, jule::Ptr<_21110ab31_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_1a84d58b0_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_1a84d58b0_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _21913_expr = _1a84eea94_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);;
	if ((_21913_expr == nullptr)) {
		return nullptr;
	};
	if (_1a84d3c54_is_nil(_21913_expr.ptr())) {
		_1a84d58b0_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _22813_d = _1a850996c_build_void_data();;
	_22813_d.get()._field_model=jule::Any(jule::new_ptr<_1a5b2ab95_BuiltinErrorCallExprModel>(_1a5b2ab95_BuiltinErrorCallExprModel(jule::Ptr<_1a5b33164_FnIns>(),jule::Any(_21913_expr.get()._field_model))));
	return _22813_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a4484_builtin_caller_out(jule::Ptr<_1a84d53d7_Eval>& _23628_e, jule::Ptr<_21110ab31_FnCallExpr>& _23643_fc, jule::Ptr<_1a84d3869_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_1a84d58b0_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_1a84d58b0_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _24813_expr = _1a84eea94_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);;
	if ((_24813_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1a851a65e_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_1a84d58b0_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a84d3869_Data> _25813_d = _1a850996c_build_void_data();;
	_25813_d.get()._field_model=jule::Any(jule::new_ptr<_1b397036c_BuiltinOutCallExprModel>(_1b397036c_BuiltinOutCallExprModel(jule::Any(_24813_expr.get()._field_model),jule::Bool())));
	return _25813_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a45b6_builtin_caller_outln(jule::Ptr<_1a84d53d7_Eval>& _26330_e, jule::Ptr<_21110ab31_FnCallExpr>& _26345_fc, jule::Ptr<_1a84d3869_Data>& _26367_d) {
	_26367_d=_1a85a4484_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	};
	_26367_d.get()._field_model=jule::Any(jule::new_ptr<_1b3970757_BuiltinOutlnCallExprModel>(_1b3970757_BuiltinOutlnCallExprModel(jule::Any(_26367_d.get()._field_model.operator jule::Ptr<_1b397036c_BuiltinOutCallExprModel>().get()._field_expr),jule::Bool())));
	return _26367_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a46e8_builtin_caller_new(jule::Ptr<_1a84d53d7_Eval>& _27528_e, jule::Ptr<_21110ab31_FnCallExpr>& _27543_fc, jule::Ptr<_1a84d3869_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_1a84d58b0_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_1a84d58b0_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _28713_t = _1a84ee478_eval_expr_kind(_27528_e, jule::Any(_27543_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_28713_t == nullptr)) {
		return nullptr;
	};
	if ((!(_28713_t.get()._field_decl))) {
		_1a84d58b0_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1a851a087_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_1b39672a9_StructIns> _29817_s = _1a8510e90_strct(_28713_t.get()._field_kind.ptr());;
		if ((((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked)) {
			_1a84d58b0_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27565_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a8515956_Sptr>(_1a8515956_Sptr(_28713_t.get()._field_kind)), 6)));
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1a850cbe5_TypeKind> _31217_old = _27528_e.get()._field_prefix;;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_1a84d3869_Data> _31517_init = _1a84eea94_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);;
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			jule::Ptr<_2110e7238_Token> _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;;
			;
			_1a84766db_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_1a84748b5_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1b3970e61_BuiltinNewCallExprModel>(_1b3970e61_BuiltinNewCallExprModel(_28713_t.get()._field_kind,jule::Any(_31517_init.get()._field_model))));
		};
	} else {
		_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1b3970e61_BuiltinNewCallExprModel>(_1b3970e61_BuiltinNewCallExprModel(_28713_t.get()._field_kind,jule::Any())));
	};
	return _27565_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a4a5b_builtin_caller_panic(jule::Ptr<_1a84d53d7_Eval>& _34030_e, jule::Ptr<_21110ab31_FnCallExpr>& _34045_fc, jule::Ptr<_1a84d3869_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_1a84d58b0_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_1a84d58b0_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _35213_expr = _1a84eea94_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);;
	if ((_35213_expr == nullptr)) {
		return nullptr;
	};
	if (((_1a850eca2_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1a8515406_is_str(_1a850eca2_prim(_35213_expr.get()._field_kind.ptr()).ptr()))))) {
		_1a84d58b0_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _36113_d = _1a850996c_build_void_data();;
	_36113_d.get()._field_model=jule::Any(jule::new_ptr<_1b397134b_BuiltinPanicCallExprModel>(_1b397134b_BuiltinPanicCallExprModel(_34045_fc.get()._field_token,jule::Any(_35213_expr.get()._field_model))));
	return _36113_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a4b8d_builtin_caller_make(jule::Ptr<_1a84d53d7_Eval>& _36929_e, jule::Ptr<_21110ab31_FnCallExpr>& _36944_fc, jule::Ptr<_1a84d3869_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_1a84d58b0_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1a84d58b0_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	if ((_36944_fc.get()._field_args.len() > 3LL)) {
		_1a84d58b0_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _38513_t = _1a84ee478_eval_expr_kind(_36929_e, jule::Any(_36944_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_38513_t == nullptr)) {
		return nullptr;
	};
	if (((!(_38513_t.get()._field_decl)) || (_1a85109b7_slc(_38513_t.get()._field_kind.ptr()) == nullptr))) {
		_1a84d58b0_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_36966_d.get()._field_kind=_38513_t.get()._field_kind;
	jule::Ptr<_1a84d3869_Data> _39713_len = _1a84eea94_eval_expr(_1a84740ac_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);;
	if ((_39713_len == nullptr)) {
		return _36966_d;
	};
	_1a84de07d_check_integer_indexing_by_data(_36929_e.ptr(), _39713_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1a84d3869_Data> _40517_cap = _1a84eea94_eval_expr(_1a84740ac_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);;
		if ((_40517_cap == nullptr)) {
			return _36966_d;
		};
		_1a84de07d_check_integer_indexing_by_data(_36929_e.ptr(), _40517_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_1a5b2a568_BuiltinMakeCallExprModel>(_1a5b2a568_BuiltinMakeCallExprModel(_38513_t.get()._field_kind,jule::Any(_39713_len.get()._field_model),jule::Any(_40517_cap.get()._field_model))));
	} else {
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_1a5b2a568_BuiltinMakeCallExprModel>(_1a5b2a568_BuiltinMakeCallExprModel(_38513_t.get()._field_kind,jule::Any(_39713_len.get()._field_model),jule::Any())));
	};
	return _36966_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a4cc0_builtin_caller_append(jule::Ptr<_1a84d53d7_Eval>& _42631_e, jule::Ptr<_21110ab31_FnCallExpr>& _42646_fc, jule::Ptr<_1a84d3869_Data>& _42668_d) {
	if ((_42646_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_42646_fc.get()._field_args.len() < 2LL)) {
		if ((_42646_fc.get()._field_args.len() == 1LL)) {
			_1a84d58b0_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1a84d58b0_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1a84d3869_Data> _43913_t = _1a84eea94_eval_expr(_42631_e, _42646_fc.get()._field_args[0LL]);;
	if ((_43913_t == nullptr)) {
		return nullptr;
	};
	if ((_1a85109b7_slc(_43913_t.get()._field_kind.ptr()) == nullptr)) {
		_1a84d58b0_push_err(_42631_e.ptr(), _42646_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a5b33164_FnIns> _44913_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>({jule::new_ptr<_1a5b322c8_ParamIns>(_1a5b322c8_ParamIns(jule::new_ptr<_1a5b2d67b_Param>(_1a5b2d67b_Param(jule::Ptr<_2110e7238_Token>(),true,jule::Bool(),jule::Bool(),jule::Ptr<_1a8511a84_TypeSymbol>(),jule::Str())),_43913_t.get()._field_kind)),jule::new_ptr<_1a5b322c8_ParamIns>(_1a5b322c8_ParamIns(jule::new_ptr<_1a5b2d67b_Param>(_1a5b2d67b_Param(jule::Ptr<_2110e7238_Token>(),true,true,jule::Bool(),jule::Ptr<_1a8511a84_TypeSymbol>(),jule::Str())),_1a85109b7_slc(_43913_t.get()._field_kind.ptr()).get()._field_elem))}),_43913_t.get()._field_kind,jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a8536845_builtin_caller_common_plain),jule::Bool()));;
	_42668_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_44913_f, 1)));
	_42668_d.get()._field_model=jule::Any(jule::new_ptr<_1b396e613_CommonIdentExprModel>(_1b396e613_CommonIdentExprModel(jule::Str("append", 6))));
	_42668_d=_1a8536845_builtin_caller_common_plain(_42631_e,_42646_fc,_42668_d);
	if ((_42668_d != nullptr)) {
		jule::Ptr<_1b396b1c0_FnCallExprModel> _47717_model = _42668_d.get()._field_model.operator jule::Ptr<_1b396b1c0_FnCallExprModel>();;
		_42668_d.get()._field_model=jule::Any(jule::new_ptr<_1a5b2a7bb_BuiltinAppendCallExprModel>(_1a5b2a7bb_BuiltinAppendCallExprModel(jule::Any(_47717_model.get()._field_args[0LL]),jule::Any(_47717_model.get()._field_args[1LL]))));
	};
	return _42668_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a4e02_builtin_caller_copy(jule::Ptr<_1a84d53d7_Eval>& _48629_e, jule::Ptr<_21110ab31_FnCallExpr>& _48644_fc, jule::Ptr<_1a84d3869_Data>& _48666_d) {
	if ((_48644_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_48644_fc.get()._field_args.len() < 2LL)) {
		if ((_48644_fc.get()._field_args.len() == 1LL)) {
			_1a84d58b0_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1a84d58b0_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_48644_fc.get()._field_args.len() > 2LL)) {
		_1a84d58b0_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _50213_dest = _1a84eea94_eval_expr(_48629_e, _48644_fc.get()._field_args[0LL]);;
	if ((_50213_dest == nullptr)) {
		return nullptr;
	};
	if ((_1a85109b7_slc(_50213_dest.get()._field_kind.ptr()) == nullptr)) {
		_1a84d58b0_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_50213_dest.get()._field_mutable))) {
		_1a84d58b0_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5b2d67b_Param> _51413_empty_param = jule::new_ptr<_1a5b2d67b_Param>();;
	jule::Ptr<_1a5b33164_FnIns> _51513_f = jule::new_ptr<_1a5b33164_FnIns>(_1a5b33164_FnIns(jule::Ptr<_1b39672a9_StructIns>(),jule::Ptr<_1a5b2eeb8_Fn>(),jule::Slice<jule::Ptr<_1a850cbe5_TypeKind>>(),jule::Slice<jule::Ptr<_1a5b322c8_ParamIns>>({jule::new_ptr<_1a5b322c8_ParamIns>(_1a5b322c8_ParamIns(_51413_empty_param,_50213_dest.get()._field_kind)),jule::new_ptr<_1a5b322c8_ParamIns>(_1a5b322c8_ParamIns(_51413_empty_param,_50213_dest.get()._field_kind))}),jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a8438e62_Scope>(),jule::Ptr<_1a5b36222_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a84d3869_Data>(jule::Ptr<_1a84d53d7_Eval>&,jule::Ptr<_21110ab31_FnCallExpr>&,jule::Ptr<_1a84d3869_Data>&)>(_1a8536845_builtin_caller_common_plain),jule::Bool()));;
	_48666_d.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_51513_f, 1)));
	_48666_d.get()._field_model=jule::Any(jule::new_ptr<_1b396e613_CommonIdentExprModel>(_1b396e613_CommonIdentExprModel(jule::Str("copy", 4))));
	_48666_d=_1a8536845_builtin_caller_common_plain(_48629_e,_48644_fc,_48666_d);
	if ((_48666_d != nullptr)) {
		jule::Ptr<_1a84d3869_Data> _54017_src = _48666_d.get()._field_model.operator jule::Ptr<_1b396b1c0_FnCallExprModel>().get()._field_args[1LL].operator jule::Ptr<_1a84d3869_Data>();;
		jule::Ptr<_1a85163b3_Slc> _54117_slc = _1a85109b7_slc(_54017_src.get()._field_kind.ptr());;
		if (((!(_54017_src.get()._field_mutable)) && _1a850e08c_mutable(_54117_slc.get()._field_elem.ptr()))) {
			_1a84d58b0_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
	};
	return _48666_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a5034_builtin_caller_clone(jule::Ptr<_1a84d53d7_Eval>& _54930_e, jule::Ptr<_21110ab31_FnCallExpr>& _54945_fc, jule::Ptr<_1a84d3869_Data>& ) {
	if ((_54945_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_54930_e.ptr(), _54945_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_54945_fc.get()._field_args.len() < 1LL)) {
		_1a84d58b0_push_err(_54930_e.ptr(), _54945_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_54945_fc.get()._field_args.len() > 1LL)) {
		_1a84d58b0_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _56213_d = _1a84ee478_eval_expr_kind(_54930_e, jule::Any(_54945_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_56213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a850e7c9_supports_cloning(_56213_d.get()._field_kind.ptr())))) {
		{
			
			if ((_1a85109b7_slc(_56213_d.get()._field_kind.ptr()) != nullptr) || (_1a8511468_map(_56213_d.get()._field_kind.ptr()) != nullptr) || (_1a8510753_arr(_56213_d.get()._field_kind.ptr()) != nullptr) || (_1a8510016_sptr(_56213_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1aacbed78:;
				{
					{
						_1a84d58b0_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_56213_d.get()._field_kind.ptr()))}));
					};
				}
			}
			else if ((_1a8510e90_strct(_56213_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1aacbe718:;
				{
					{
						_1a84d58b0_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1aacbe6a2:;
				{
					{
						_1a84d58b0_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>({jule::Any(_1a850d09c_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1aacbe031:;
		};
	};
	_56213_d.get()._field_mutable=true;
	_56213_d.get()._field_model=jule::Any(jule::new_ptr<_1b3970a76_BuiltinCloneCallExprModel>(_1b3970a76_BuiltinCloneCallExprModel(jule::Any(_56213_d.get()._field_model))));
	return _56213_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a5166_builtin_caller_assert(jule::Ptr<_1a84d53d7_Eval>& _59531_e, jule::Ptr<_21110ab31_FnCallExpr>& _59546_fc, jule::Ptr<_1a84d3869_Data>& ) {
	if ((_59546_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_59546_fc.get()._field_args.len() < 1LL)) {
		_1a84d58b0_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_59546_fc.get()._field_args.len() > 2LL)) {
		_1a84d58b0_push_err(_59531_e.ptr(), _59546_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _60713_expr = _1a84eea94_eval_expr(_59531_e, _59546_fc.get()._field_args[0LL]);;
	if ((_60713_expr == nullptr)) {
		return nullptr;
	};
	if (((_1a850eca2_prim(_60713_expr.get()._field_kind.ptr()) == nullptr) || (!(_1a8515192_is_bool(_1a850eca2_prim(_60713_expr.get()._field_kind.ptr()).ptr()))))) {
		_1a84d58b0_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b3971802_BuiltinAssertCallExprModel> _61613_model = jule::new_ptr<_1b3971802_BuiltinAssertCallExprModel>(_1b3971802_BuiltinAssertCallExprModel(_59546_fc.get()._field_token,jule::Any(_60713_expr.get()._field_model),jule::Str("assertion failed", 16)));;
	if ((_59546_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1a84d3869_Data> _62417_log = _1a84eea94_eval_expr(_59531_e, _59546_fc.get()._field_args[1LL]);;
		if ((_62417_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1a84d422c_is_const(_62417_log.ptr()))) || (_1a850eca2_prim(_62417_log.get()._field_kind.ptr()) == nullptr)) || (!(_1a8515406_is_str(_1a850eca2_prim(_62417_log.get()._field_kind.ptr()).ptr()))))) {
			_1a84d58b0_push_err(_59531_e.ptr(), _59546_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("const str", 9)),jule::Any(_1a850d09c_to_str(_62417_log.get()._field_kind.ptr()))}));
			return nullptr;
		};
		_61613_model.get()._field_log=_1a83aa1be_read_str(_62417_log.get()._field_constant.ptr());
	};
	jule::Ptr<_1a84d3869_Data> _63713_d = _1a850996c_build_void_data();;
	_63713_d.get()._field_model=jule::Any(_61613_model);
	return _63713_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a5298_builtin_caller_std_mem_size_of(jule::Ptr<_1a84d53d7_Eval>& _64240_e, jule::Ptr<_21110ab31_FnCallExpr>& _64255_fc, jule::Ptr<_1a84d3869_Data>& ) {
	if ((_64255_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_64240_e.ptr(), _64255_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _64613_result = jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("uint", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));;
	if ((_64255_fc.get()._field_args.len() < 1LL)) {
		_1a84d58b0_push_err(_64240_e.ptr(), _64255_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _64613_result;
	};
	if ((_64255_fc.get()._field_args.len() > 1LL)) {
		_1a84d58b0_push_err(_64240_e.ptr(), _64255_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _65813_d = _1a84ee478_eval_expr_kind(_64240_e, jule::Any(_64255_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_65813_d == nullptr)) {
		return _64613_result;
	};
	_64613_result.get()._field_model=jule::Any(jule::new_ptr<_1a5b2ae70_SizeofExprModel>(_1a5b2ae70_SizeofExprModel(jule::Any(_65813_d.get()._field_model))));
	return _64613_result;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a53ca_builtin_caller_std_mem_align_of(jule::Ptr<_1a84d53d7_Eval>& _66741_e, jule::Ptr<_21110ab31_FnCallExpr>& _66756_fc, jule::Ptr<_1a84d3869_Data>& ) {
	if ((_66756_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_66741_e.ptr(), _66756_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _67113_result = jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("uint", 4)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));;
	if ((_66756_fc.get()._field_args.len() < 1LL)) {
		_1a84d58b0_push_err(_66741_e.ptr(), _66756_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _67113_result;
	};
	if ((_66756_fc.get()._field_args.len() > 1LL)) {
		_1a84d58b0_push_err(_66741_e.ptr(), _66756_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _68313_d = _1a84ee478_eval_expr_kind(_66741_e, jule::Any(_66756_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_68313_d == nullptr)) {
		return _67113_result;
	};
	_67113_result.get()._field_model=jule::Any(jule::new_ptr<_1a5b2b5e1_AlignofExprModel>(_1a5b2b5e1_AlignofExprModel(jule::Any(_68313_d.get()._field_model))));
	return _67113_result;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a550c_builtin_caller_std_mem_free(jule::Ptr<_1a84d53d7_Eval>& _69237_e, jule::Ptr<_21110ab31_FnCallExpr>& _69252_fc, jule::Ptr<_1a84d3869_Data>& ) {
	if ((_69252_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_69237_e.ptr(), _69252_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_69252_fc.get()._field_args.len() < 1LL)) {
		_1a84d58b0_push_err(_69237_e.ptr(), _69252_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_69252_fc.get()._field_args.len() > 1LL)) {
		_1a84d58b0_push_err(_69237_e.ptr(), _69252_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _70513_d = _1a84ee478_eval_expr_kind(_69237_e, jule::Any(_69252_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_70513_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a850e565_performs_rc(_70513_d.get()._field_kind.ptr())))) {
		_1a84d58b0_push_err(_69237_e.ptr(), _69252_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _71413_result = _1a850996c_build_void_data();;
	_71413_result.get()._field_model=jule::Any(jule::new_ptr<_1a5b2c24b_FreeExprModel>(_1a5b2c24b_FreeExprModel(jule::Any(_70513_d.get()._field_model))));
	return _71413_result;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a5809_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1a84d53d7_Eval>& _71951_e, jule::Ptr<_21110ab31_FnCallExpr>& _71966_fc, jule::Ptr<_1a84d3869_Data>& ) {
	if ((_71966_fc.get()._field_generics.len() > 0LL)) {
		_1a84d58b0_push_err(_71951_e.ptr(), _71966_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_71966_fc.get()._field_args.len() < 1LL)) {
		_1a84d58b0_push_err(_71951_e.ptr(), _71966_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_71966_fc.get()._field_args.len() > 1LL)) {
		_1a84d58b0_push_err(_71951_e.ptr(), _71966_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a84d3869_Data> _73213_d = _1a84ee478_eval_expr_kind(_71951_e, jule::Any(_71966_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_73213_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1a851a65e_is_builtin_str_convertable(_73213_d.get()._field_kind)))) {
		_1a84d58b0_push_err(_71951_e.ptr(), _71966_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1a84d3869_Data>(_1a84d3869_Data(jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(_1a851abc0_build_prim_type(jule::Str("str", 3)), 5))),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_ptr<_1a5b2bab9_IntegratedToStrExprModel>(_1a5b2bab9_IntegratedToStrExprModel(jule::Any(_73213_d.get()._field_model)))),jule::Bool(),jule::Ptr<_1a83a871c_Const>()));
}



inline jule::Ptr<_1a84d3869_Data> _1a85a5c27_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1a84d53d7_Eval>& _75049_e, jule::Ptr<_21110ab31_FnCallExpr>& _75064_fc, jule::Ptr<_1a84d3869_Data>& ) {
	if ((!(_1a84d62ea_is_unsafe(_75049_e.ptr())))) {
		_1a84d58b0_push_err(_75049_e.ptr(), _75064_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_75064_fc.get()._field_args.len() < 1LL)) {
		_1a84d58b0_push_err(_75049_e.ptr(), _75064_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1a84d3869_Data> _76013_d = _1a84eea94_eval_expr(_75049_e, _75064_fc.get()._field_args[0LL]);;
	if ((_76013_d == nullptr)) {
		return nullptr;
	};
	if (((_1a850eca2_prim(_76013_d.get()._field_kind.ptr()) == nullptr) || (!(_1a8515406_is_str(_1a850eca2_prim(_76013_d.get()._field_kind.ptr()).ptr()))))) {
		_1a84d58b0_push_err(_75049_e.ptr(), _75064_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a850d09c_to_str(_76013_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1a84d422c_is_const(_76013_d.ptr()))) || (!(_1a83ac567_is_str(_76013_d.get()._field_constant.ptr()))))) {
		_1a84d58b0_push_err(_75049_e.ptr(), _75064_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1a84d3869_Data> _77513_r = _1a850996c_build_void_data();;
	if ((_75064_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_1a8470a04_check_generic_quantity(_75049_e.get()._field_s.ptr(), 1LL,static_cast<jule::I64>(_75064_fc.get()._field_generics.len()),_75064_fc.get()._field_token)))) {
			return nullptr;
		};
		jule::Ptr<_1a8511a84_TypeSymbol> _78117_k = _1a5b378d8_build_type(_75064_fc.get()._field_generics[0LL]);;
		if ((!(_1a8472c9d_check_type(_75049_e.get()._field_s, _78117_k,_75049_e.get()._field_lookup)))) {
			return nullptr;
		};
		_77513_r.get()._field_kind=_78117_k.get()._field_kind;
	};
	jule::Ptr<_1a5b2be60_BackendEmitExprModel> _78813_model = jule::new_ptr<_1a5b2be60_BackendEmitExprModel>(_1a5b2be60_BackendEmitExprModel(_1a83aa1be_read_str(_76013_d.get()._field_constant.ptr()),jule::Slice<jule::Any>()));;
	if ((_75064_fc.get()._field_args.len() > 1LL)) {
		_78813_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,(_75064_fc.get()._field_args.len() - 1LL));
		{
			auto expr = _75064_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1aacedd85:;
			if (it != expr.end()) {
				jule::Ptr<_210e87caa_Expr> _79421_arg = *it;
				{
					jule::Ptr<_1a84d3869_Data> _79521_argd = _1a84ee478_eval_expr_kind(_75049_e, jule::Any(_79421_arg.get()._field_kind));;
					if ((_79521_argd == nullptr)) {
						return nullptr;
					};
					_78813_model.get()._field_exprs = jule::alloc_for_append(_78813_model.get()._field_exprs,1);_78813_model.get()._field_exprs.__push(jule::Any(_79521_argd.get()._field_model));;
				}
				_iter_next_1aacedd85:;
				++it;
				goto _iter_begin_1aacedd85;
			}
			_iter_end_1aacedd85:;
		};
	};
	_77513_r.get()._field_model=jule::Any(_78813_model);
	return _77513_r;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a6123_builtin_caller_std_debug_out(jule::Ptr<_1a84d53d7_Eval>& _80738_e, jule::Ptr<_21110ab31_FnCallExpr>& _80753_fc, jule::Ptr<_1a84d3869_Data>& _80775_d) {
	_80775_d=_1a85a4484_builtin_caller_out(_80738_e,_80753_fc,_80775_d);
	if ((_80775_d == nullptr)) {
		return nullptr;
	};
	_80775_d.get()._field_model.operator jule::Ptr<_1b397036c_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _80775_d;
}



inline jule::Ptr<_1a84d3869_Data> _1a85a6541_builtin_caller_std_debug_outln(jule::Ptr<_1a84d53d7_Eval>& _81740_e, jule::Ptr<_21110ab31_FnCallExpr>& _81755_fc, jule::Ptr<_1a84d3869_Data>& _81777_d) {
	_81777_d=_1a85a45b6_builtin_caller_outln(_81740_e,_81755_fc,_81777_d);
	if ((_81777_d == nullptr)) {
		return nullptr;
	};
	_81777_d.get()._field_model.operator jule::Ptr<_1b3970757_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _81777_d;
}



inline std::tuple<jule::Bool,jule::Bool> _210dc3047_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1aad387a4:;
			{
				_925_ok=_210c43428_is_windows(_210c62e92_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1aad3881a:;
			{
				_925_ok=_210c43714_is_darwin(_210c62e92_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1aad38881:;
			{
				_925_ok=_210c439ab_is_linux(_210c62e92_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1aad388e7:;
			{
				_925_ok=_210c4457d_is_unix(_210c62e92_OS);
			}
		}
		else {
			_case_begin_1aad38089:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1aad385b7:;
	};
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _210dc3179_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1aad3b06a:;
			{
				_3027_ok=_210c43c97_is_i386(_210c63d2d_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1aad3b0d1:;
			{
				_3027_ok=_210c4403e_is_amd64(_210c63d2d_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1aad3b147:;
			{
				_3027_ok=_210c442d6_is_arm64(_210c63d2d_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1aad3b1ad:;
			{
				_3027_ok=_210c44b55_is_64bit(_210c63d2d_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1aad3b224:;
			{
				_3027_ok=_210c448ad_is_32bit(_210c63d2d_ARCH);
			}
		}
		else {
			_case_begin_1aad3a8b6:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1aad3ad6c:;
	};
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _210ddc638_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_20eca119b_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();;
	(_5432_p).mut_slice(0LL,(_569_n - _20ecb6623_ext(_5432_p).len()));;
	jule::Str _6213_a1 = jule::Str();;
	jule::Str _6513_a2 = jule::Str();;
	jule::I64 _6813_i = _210913736_find_last_byte(_5432_p,'_');;
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;;
		jule::Bool _7126_exist;;
		std::tie(_7118_ok,_7126_exist) = _210dc3047_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		};
		std::tie(_7118_ok,_7126_exist) = _210dc3179_check_arch(_5432_p);
		return ((!(_7126_exist)) || _7118_ok);
	};
	if (((_6813_i + 1LL) >= _569_n)) {
		return true;
	};
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);;
	_6813_i=static_cast<jule::I64>(_210913736_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	};
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;;
		jule::Bool _9226_exist;;
		std::tie(_9218_ok,_9226_exist) = _210dc3047_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		};
		std::tie(_9218_ok,_9226_exist) = _210dc3179_check_arch(_6213_a1);
		return ((!(_9226_exist)) || _9218_ok);
	};
	jule::Bool _10014_ok;;
	jule::Bool _10022_exist;;
	std::tie(_10014_ok,_10022_exist) = _210dc3179_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		};
		std::tie(_10014_ok,_10022_exist) = _210dc3047_check_os(_6513_a2);
		return ((!(_10022_exist)) || _10014_ok);
	};
	std::tie(_10014_ok,_10022_exist) = _210dc3047_check_os(_6213_a1);
	return ((!(_10022_exist)) || _10014_ok);
}



inline void _210ddd7e3_set_os_vars(jule::Slice<jule::Str>& _3621_vars) {
	_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(_210c62e92_OS);;
	if (_210c4457d_is_unix(_210c62e92_OS)) {
		_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _210ddda46_set_arch_vars(jule::Slice<jule::Str>& _4423_vars) {
	_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(_210c63d2d_ARCH);;
	if (_210c44b55_is_64bit(_210c63d2d_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x64", 3));;
	};
	if (_210c448ad_is_32bit(_210c63d2d_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _210dddcee_init_vars(jule::Slice<jule::Str>& _5519_vars, _210ddd4d5_CompileInfo& _5533_info) {
	_210ddd7e3_set_os_vars(_5519_vars);
	_210ddda46_set_arch_vars(_5519_vars);
	if (_5533_info._field_prod) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("production", 10));;
	};
	if (_5533_info._field_test) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5533_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1aad4765e:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1aad483da:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1aad47e23:;
	};
	{
		auto &_match_expr{ _5533_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1aad489d4:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1aad48a4a:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aad48b16:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1aad4960b:;
	};
}



inline jule::Slice<jule::U8> _1e551a8db_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__20ddd1200_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_210c91564_exit(1LL);
			return nullptr;
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _210c3ee2a_Log _1e55307be_flat_compiler_err(jule::Str _4122_text) {
	return _210c3ee2a_Log(static_cast<jule::I64>(1LL),jule::I64(),jule::I64(),jule::Str(),_4122_text,jule::Str(),jule::Str());
}



inline void _1a85a9a2d_push_passes(jule::Ptr<_1a8466c1a_Package>& _11221_p, jule::Slice<jule::Str>& _11245_passes) {
	{
		auto &expr = _11221_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aad6c442:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _11317_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11317_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1aad70566:;
					if (it != expr.end()) {
						_1a5b37586_Pass _11516_pass = *it;
						{
							if (_11516_pass._field_text.empty()) {
								goto _iter_next_1aad70566;
							};
							{
								auto &expr = _11245_passes;
								auto it = expr.begin();
								_iter_begin_1aad72876:;
								if (it != expr.end()) {
									jule::Str _11920_cpass = *it;
									{
										if ((_11920_cpass == _11516_pass._field_text)) {
											goto _iter_next_1aad70566;
										};
									}
									_iter_next_1aad72876:;
									++it;
									goto _iter_begin_1aad72876;
								}
								_iter_end_1aad72876:;
							};
							_11245_passes = jule::alloc_for_append(_11245_passes,1);_11245_passes.__push(_11516_pass._field_text);;
						}
						_iter_next_1aad70566:;
						++it;
						goto _iter_begin_1aad70566;
					}
					_iter_end_1aad70566:;
				};
			}
			_iter_next_1aad6c442:;
			++it;
			goto _iter_begin_1aad6c442;
		}
		_iter_end_1aad6c442:;
	};
}



inline jule::Slice<jule::Str> _1a85a9db3_get_all_unique_passes(jule::Ptr<_1a8466c1a_Package>& _12931_pkg, jule::Slice<jule::Ptr<_1a8464058_ImportInfo>> _12956_uses) {
	jule::Slice<jule::Str> _13013_passes = nullptr;;
	_1a85a9a2d_push_passes(_12931_pkg,_13013_passes);
	{
		auto &expr = _12956_uses;
		auto it = expr.begin();
		_iter_begin_1aad7404d:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> _13317_u = *it;
			{
				if ((!(_13317_u.get()._field_cpp_linked))) {
					_1a85a9a2d_push_passes(_13317_u.get()._field_package,_13013_passes);
				};
			}
			_iter_next_1aad7404d:;
			++it;
			goto _iter_begin_1aad7404d;
		}
		_iter_end_1aad7404d:;
	};
	return _13013_passes;
}



inline _210ddd4d5_CompileInfo _1a85aa0b1_build_compile_info(void) {
	_210ddd4d5_CompileInfo _14313_info = _210ddd4d5_CompileInfo(_20dbaa925_PRODUCTION,_20dc78cac_TEST,jule::Str("clang", 5),jule::Str("cpp14", 5));;
	{
		auto &_match_expr{ _20dc784a4_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1aad7a087:;
			{
				_14313_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1aad7a0ed:;
			{
				_14313_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1aad7a032:;
	};
	{
		auto &_match_expr{ _20dc787e5_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1aad7abc0:;
			{
				_14313_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1aad7a4c7:;
			{
				_14313_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aad7a53d:;
			{
				_14313_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1aad7aae3:;
	};
	return _14313_info;
}



inline jule::Ptr<_210eb33e0_Directive> _1a85ac987_find_directive(jule::Slice<jule::Ptr<_210eb33e0_Directive>>& _3224_directives, jule::Str _3255_tag) {
	{
		auto &expr = _3224_directives;
		auto it = expr.begin();
		_iter_begin_1aad90ab4:;
		if (it != expr.end()) {
			jule::Ptr<_210eb33e0_Directive> _3317_dr = *it;
			{
				if ((_3317_dr.get()._field_tag.get()._field_kind == _3255_tag)) {
					return _3317_dr;
				};
			}
			_iter_next_1aad90ab4:;
			++it;
			goto _iter_begin_1aad90ab4;
		}
		_iter_end_1aad90ab4:;
	};
	return nullptr;
}



inline jule::Bool _1a85acd1c_has_directive(jule::Slice<jule::Ptr<_210eb33e0_Directive>>& _4219_directives, jule::Str _4250_tag) {
	return (_1a85ac987_find_directive(_4219_directives,_4250_tag) != nullptr);
}



inline jule::Bool _1a85ad15d_is_exist(jule::Slice<jule::Any> _4713_arr, jule::Any _4725_t) {
	{
		auto &expr = _4713_arr;
		auto it = expr.begin();
		_iter_begin_1aad9109d:;
		if (it != expr.end()) {
			jule::Any &_4812_ref = *it;
			{
				if ((_4725_t == _4812_ref)) {
					return true;
				};
			}
			_iter_next_1aad9109d:;
			++it;
			goto _iter_begin_1aad9109d;
		}
		_iter_end_1aad9109d:;
	};
	return false;
}



inline jule::Bool _1a85ad449_is_dead(jule::Any _5716_ref) {
	jule::Bool _5728_dead = jule::Bool();
	if (_1a85ad15d_is_exist(_1a85ac217_deads,jule::Any(_5716_ref))) {
		_5728_dead = true;
		return _5728_dead;
	};
	{
		auto &_match_expr{ _5716_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1a5b33164_FnIns>>()) {
			_case_begin_1aad94986:;
			{
				if (_1a5b30b56_is_init(_5716_ref.operator jule::Ptr<_1a5b33164_FnIns>().get()._field_decl.ptr())) {
					goto _match_end_1aad936cc;
				};
				goto _case_begin_1aad92764;
			}
		}
		else {
			_case_begin_1aad92764:;
			{
				if (((_1a85ac48c_current == _5716_ref) || (_1a85ac68a_main_current == _5716_ref))) {
					_5728_dead = true;
					return _5728_dead;
				};
				if (_1a85ad15d_is_exist(_1a85ac305_checking,jule::Any(_5716_ref))) {
					_5728_dead = true;
					return _5728_dead;
				};
			}
		}
		_match_end_1aad936cc:;
	};
	jule::Any _7813_old = _1a85ac48c_current;;
	_1a85ac48c_current=jule::Any(_5716_ref);
	jule::I64 _809_len = _1a85ac305_checking.len();;
	_1a85ac305_checking = jule::alloc_for_append(_1a85ac305_checking,1);_1a85ac305_checking.__push(jule::Any(_5716_ref));;
	__JULE_DEFER({
		_1a85ac48c_current=jule::Any(_7813_old);
		_1a85ad702_drop_ref(_1a85ac305_checking,_809_len);
	});;
	{
		auto &_match_expr{ _5716_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1a5b33164_FnIns>>()) {
			_case_begin_1aad966e1:;
			{
				_5728_dead = _1a85adc74_is_fn_dead(_5716_ref.operator jule::Ptr<_1a5b33164_FnIns>());
				return _5728_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8487246_Var>>()) {
			_case_begin_1aad96757:;
			{
				_5728_dead = _1a85ae0a4_is_var_dead(_5716_ref.operator jule::Ptr<_1a8487246_Var>());
				return _5728_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39672a9_StructIns>>()) {
			_case_begin_1aad967e0:;
			{
				_5728_dead = _1a85ae88a_is_struct_dead(_5716_ref.operator jule::Ptr<_1b39672a9_StructIns>());
				return _5728_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5e34531_Trait>>()) {
			_case_begin_1aad96856:;
			{
				_5728_dead = _1a85aeb32_is_trait_dead(_5716_ref.operator jule::Ptr<_1a5e34531_Trait>());
				return _5728_dead;
			}
		}
		else {
			_case_begin_1aad95349:;
			{
				_5728_dead = false;
				return _5728_dead;
			}
		}
		_match_end_1aad9647c:;
	};
}



inline void _1a85ad702_drop_ref(jule::Slice<jule::Any>& _10518_refs, jule::I64 _10531_pos) {
	_10518_refs=_10518_refs.slice(0LL,_10531_pos);
}



inline jule::Bool _1a85ad9dd_is_all_references_are_dead(jule::Ptr<_1a5b36222_ReferenceStack> _11335_references) {
	jule::I64 _11413_i = 0LL;;
	for (; (_11413_i < _1a5b3683d_len(_11335_references.ptr())); (_11413_i)++) {
		{
			jule::Any _11617_ref = _1a5b36b4b_at(_11335_references.ptr(), _11413_i);;
			if ((_11617_ref == _1a85ac48c_current)) {
				goto _iter_next_1aad96aed;
			};
			if ((_11617_ref == _1a85ac68a_main_current)) {
				goto _iter_next_1aad96aed;
			};
			if ((!(_1a85ad449_is_dead(jule::Any(_11617_ref))))) {
				return false;
			};
		}
	_iter_next_1aad96aed:;
	}
	_iter_end_1aad96aed:;;
	return true;
}



inline jule::Bool _1a85adc74_is_fn_dead(jule::Ptr<_1a5b33164_FnIns> _13019_f) {
	if ((_13019_f.get()._field_decl.get()._field_cpp_linked || _13019_f.get()._field_anon)) {
		return false;
	};
	if ((_1a5b308e2_is_entry_point(_13019_f.get()._field_decl.ptr()) || _1a5b30b56_is_init(_13019_f.get()._field_decl.ptr()))) {
		return (!(_13019_f.get()._field_decl.get()._field_statically));
	};
	if ((_20dc78cac_TEST && _1a85acd1c_has_directive(_13019_f.get()._field_decl.get()._field_directives,jule::Str("test", 4)))) {
		return false;
	};
	if ((_13019_f.get()._field_owner != nullptr)) {
		if (_1a85ad15d_is_exist(_1a85ac305_checking,jule::Any(_13019_f.get()._field_owner))) {
			return true;
		};
		return _1a85ad449_is_dead(jule::Any(_13019_f.get()._field_owner));
	};
	return _1a85ad9dd_is_all_references_are_dead(_13019_f.get()._field_references);
}



inline jule::Bool _1a85ae0a4_is_var_dead(jule::Ptr<_1a8487246_Var> _16020_v) {
	if (_16020_v.get()._field_constant) {
		return true;
	};
	if (_16020_v.get()._field_cpp_linked) {
		return false;
	};
	return _1a85ad9dd_is_all_references_are_dead(_16020_v.get()._field_references);
}



inline jule::Bool _1a85ae88a_is_struct_dead(jule::Ptr<_1b39672a9_StructIns> _20523_s) {
	return false;
}



inline jule::Bool _1a85aeb32_is_trait_dead(jule::Ptr<_1a5e34531_Trait> _22222_t) {
	return false;
}



inline void _1a85aed85_eliminate_dead_functions(jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>& _23934_funcs) {
	jule::I64 _24013_i = 0LL;;
	while ((_24013_i < _23934_funcs.len())) {
		{
			jule::Ptr<_1a5b2eeb8_Fn> _24217_f = _23934_funcs[_24013_i];;
			jule::I64 _24317_j = 0LL;;
			while ((_24317_j < _24217_f.get()._field_instances.len())) {
				{
					jule::Ptr<_1a5b33164_FnIns> _24521_ins = _24217_f.get()._field_instances[_24317_j];;
					_1a85ac68a_main_current=jule::Any(_24521_ins);
					if (_1a85adc74_is_fn_dead(_24521_ins)) {
						_1a85ac217_deads = jule::alloc_for_append(_1a85ac217_deads,1);_1a85ac217_deads.__push(jule::Any(_24521_ins));;
						_24217_f.get()._field_instances=jule::append(_24217_f.get()._field_instances.slice(0LL,_24317_j),_24217_f.get()._field_instances.slice((_24317_j + 1LL)));
					} else {
						(_24317_j)++;
					};
				}
			_iter_next_1aada824c:;
			}
			_iter_end_1aada824c:;;
			if ((_24217_f.get()._field_instances.len() == 0LL)) {
				_23934_funcs=jule::append(_23934_funcs.slice(0LL,_24013_i),_23934_funcs.slice((_24013_i + 1LL)));
				goto _iter_next_1aada5e09;
			};
			(_24013_i)++;
		}
	_iter_next_1aada5e09:;
	}
	_iter_end_1aada5e09:;;
}



inline void _1a85b0083_eliminate_dead_globals(jule::Ptr<_1a8466c1a_Package>& _26432_pkg) {
	{
		auto &expr = _26432_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aada7713:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _26517_f = *it;
			{
				jule::I64 _26617_i = 0LL;;
				while ((_26617_i < _26517_f.get()._field_vars.len())) {
					{
						jule::Ptr<_1a8487246_Var> _26821_v = _26517_f.get()._field_vars[_26617_i];;
						_1a85ac68a_main_current=jule::Any(_26821_v);
						if (_1a85ae0a4_is_var_dead(_26821_v)) {
							_1a85ac217_deads = jule::alloc_for_append(_1a85ac217_deads,1);_1a85ac217_deads.__push(jule::Any(_26821_v));;
							_26517_f.get()._field_vars=jule::append(_26517_f.get()._field_vars.slice(0LL,_26617_i),_26517_f.get()._field_vars.slice((_26617_i + 1LL)));
						} else {
							(_26617_i)++;
						};
					}
				_iter_next_1aadab382:;
				}
				_iter_end_1aadab382:;;
			}
			_iter_next_1aada7713:;
			++it;
			goto _iter_begin_1aada7713;
		}
		_iter_end_1aada7713:;
	};
}



inline void _1a85b0308_eliminate_dead_functions_package(jule::Ptr<_1a8466c1a_Package>& _28042_pkg) {
	{
		auto &expr = _28042_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aadab728:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _28117_f = *it;
			{
				_1a85aed85_eliminate_dead_functions(_28117_f.get()._field_funcs);
			}
			_iter_next_1aadab728:;
			++it;
			goto _iter_begin_1aadab728;
		}
		_iter_end_1aadab728:;
	};
}



inline void _1a85b0a23_keep_alive_init(jule::Ptr<_1a8466c1a_Package>& _32825_pkg) {
	;
	;
	jule::Ptr<_1a5b2eeb8_Fn> _33113_f = _1a84684ad_find_fn(_32825_pkg.ptr(), jule::Str("init", 4),false);;
	if ((_33113_f != nullptr)) {
		_33113_f.get()._field_statically=true;
	};
}



inline void _1a85b0c32_eliminate_package(jule::Ptr<_1a8466c1a_Package>& _33727_pkg) {
	_1a85ac217_deads=jule::Slice<jule::Any>::alloc(0LL,1024LL);
	_1a85b0a23_keep_alive_init(_33727_pkg);
	_1a85b0083_eliminate_dead_globals(_33727_pkg);
	_1a85b0308_eliminate_dead_functions_package(_33727_pkg);
}



inline void _1a85b0e41_eliminate_defines(jule::Ptr<_1a85a8312_IR>& _34931_ir) {
	jule::I64 _35013_i = (_34931_ir.get()._field_used.len() - 1LL);;
	for (; (_35013_i >= 0LL); (_35013_i)--) {
		{
			jule::Ptr<_1a8464058_ImportInfo> _35217_u = _34931_ir.get()._field_used[_35013_i];;
			if ((!(_35217_u.get()._field_cpp_linked))) {
				_1a85b0c32_eliminate_package(_35217_u.get()._field_package);
			};
		}
	_iter_next_1aadb78ee:;
	}
	_iter_end_1aadb78ee:;;
	_1a85b0c32_eliminate_package(_34931_ir.get()._field_main);
	_1a85ac217_deads=nullptr;
	_1a85ac305_checking=nullptr;
	_1a85ac48c_current=nullptr;
}



inline void _1a85b2915_eliminate_dead_code_of_scope(jule::Ptr<_1a8438e62_Scope> _7637_s) {
	jule::Ptr<_1a85b1a9b_ScopeDeadCode> _7713_sdc = jule::new_ptr<_1a85b1a9b_ScopeDeadCode>(_1a85b1a9b_ScopeDeadCode(jule::Ptr<_1a85b1a9b_ScopeDeadCode>(),_7637_s,(&(_7637_s.get()._field_stmts)),jule::I64()));;
	{
		_1a85b2607_optimize_stmts(_7713_sdc);
	};
}



inline void _1a85b2b9b_eliminate_scope_functions(jule::Slice<jule::Ptr<_1a5b2eeb8_Fn>>& _8535_funcs) {
	{
		auto &expr = _8535_funcs;
		auto it = expr.begin();
		_iter_begin_1aadba407:;
		if (it != expr.end()) {
			jule::Ptr<_1a5b2eeb8_Fn> _8617_func = *it;
			{
				{
					auto &expr = _8617_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1aadbb095:;
					if (it != expr.end()) {
						jule::Ptr<_1a5b33164_FnIns> _8721_ins = *it;
						{
							_1a85b2915_eliminate_dead_code_of_scope(_8721_ins.get()._field_scope);
						}
						_iter_next_1aadbb095:;
						++it;
						goto _iter_begin_1aadbb095;
					}
					_iter_end_1aadbb095:;
				};
			}
			_iter_next_1aadba407:;
			++it;
			goto _iter_begin_1aadba407;
		}
		_iter_end_1aadba407:;
	};
}



inline void _1a85b2e10_eliminate_functions_scope_package(jule::Ptr<_1a8466c1a_Package>& _9343_pkg) {
	{
		auto &expr = _9343_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aadbb309:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _9417_f = *it;
			{
				_1a85b2b9b_eliminate_scope_functions(_9417_f.get()._field_funcs);
			}
			_iter_next_1aadbb309:;
			++it;
			goto _iter_begin_1aadbb309;
		}
		_iter_end_1aadbb309:;
	};
}



inline void _1a85b3174_eliminate_scope_package(jule::Ptr<_1a8466c1a_Package>& _9933_pkg) {
	_1a85b2e10_eliminate_functions_scope_package(_9933_pkg);
}



inline void _1a85b3372_eliminate_scopes(jule::Ptr<_1a85a8312_IR>& _10430_ir) {
	jule::I64 _10513_i = (_10430_ir.get()._field_used.len() - 1LL);;
	for (; (_10513_i >= 0LL); (_10513_i)--) {
		{
			jule::Ptr<_1a8464058_ImportInfo> _10717_u = _10430_ir.get()._field_used[_10513_i];;
			if ((!(_10717_u.get()._field_cpp_linked))) {
				_1a85b3174_eliminate_scope_package(_10717_u.get()._field_package);
			};
		}
	_iter_next_1aadbc76c:;
	}
	_iter_end_1aadbc76c:;;
	_1a85b3174_eliminate_scope_package(_10430_ir.get()._field_main);
}



inline void _1a85d7066_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_210c91564_exit(1LL);
}



inline jule::Bool _1a8cc1057_is_std_package(jule::Str _39719_f, jule::Str _39727_p) {
	return _210b8d120_has_prefix(_39719_f,_20ecb5a51_join(jule::Slice<jule::Str>({_210c5359d_PATH_STDLIB,_39727_p})));
}



inline jule::Bool _1a8cc13a9_is_constant_valid_conditional_case(jule::Ptr<_1a844085e_If>& _40140_i) {
	{
		auto &_match_expr{ _40140_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a83a871c_Const>>()) {
			_case_begin_1aae7ee7d:;
			{
				jule::Ptr<_1a83a871c_Const> _40413_c = _40140_i.get()._field_expr.operator jule::Ptr<_1a83a871c_Const>();;
				return (_1a83ac303_is_bool(_40413_c.ptr()) && _1a83a9e5a_read_bool(_40413_c.ptr()));
			}
		}
		_match_end_1aae7ee17:;
	};
	return false;
}



inline jule::Bool _1a8cc161d_is_unreachable_expr(jule::Any& _41025_expr) {
	{
		auto &_match_expr{ _41025_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a83a871c_Const>>()) {
			_case_begin_1aae80258:;
			{
				jule::Ptr<_1a83a871c_Const> _41313_c = _41025_expr.operator jule::Ptr<_1a83a871c_Const>();;
				return (_1a83ac303_is_bool(_41313_c.ptr()) && (!(_1a83a9e5a_read_bool(_41313_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1b39693cc_BinopExprModel>>()) {
			_case_begin_1aae802be:;
			{
				jule::Ptr<_1b39693cc_BinopExprModel> _41613_m = _41025_expr.operator jule::Ptr<_1b39693cc_BinopExprModel>();;
				if ((_41613_m.get()._field_op.get()._field_kind == jule::Str("&&", 2))) {
					return (_1a8cc161d_is_unreachable_expr(_41613_m.get()._field_left.get()._field_model) || _1a8cc161d_is_unreachable_expr(_41613_m.get()._field_right.get()._field_model));
				};
			}
		}
		_match_end_1aae80c2b:;
	};
	return false;
}



inline jule::Bool _1a8cc194d_is_constant_valid_match_case(jule::Ptr<_1a844ca58_Case>& _42434_case) {
	{
		auto &expr = _42434_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aae81699:;
		if (it != expr.end()) {
			jule::Ptr<_1a84d3869_Data> &_42512_expr = *it;
			{
				if (((_1a84d422c_is_const(_42512_expr.ptr()) && _1a83ac303_is_bool(_42512_expr.get()._field_constant.ptr())) && _1a83a9e5a_read_bool(_42512_expr.get()._field_constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1aae81699:;
			++it;
			goto _iter_begin_1aae81699;
		}
		_iter_end_1aae81699:;
	};
	return false;
}



inline jule::Bool _1a8cc1c28_is_unreachable_conditional_case(jule::Ptr<_1a844085e_If>& _43337_i) {
	return _1a8cc161d_is_unreachable_expr(_43337_i.get()._field_expr);
}



inline jule::Bool _1a8cc2003_is_unreachable_match_case(jule::Ptr<_1a844ca58_Case>& _43731_case) {
	{
		auto &expr = _43731_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aae85307:;
		if (it != expr.end()) {
			jule::Ptr<_1a84d3869_Data> &_43812_expr = *it;
			{
				if ((!(_1a8cc161d_is_unreachable_expr(_43812_expr.get()._field_model)))) {
					return false;
				};
			}
			_iter_next_1aae85307:;
			++it;
			goto _iter_begin_1aae85307;
		}
		_iter_end_1aae85307:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1a8cc915e_check_for_bit_shift_opt(jule::Ptr<_1b3968e15_OperandExprModel>& _42329_l, jule::Ptr<_1b3968e15_OperandExprModel>& _42352_r) {
	jule::Bool _42376_ok = jule::Bool();
	jule::U64 _42386_x = jule::U64();
	if (((!(_1a844b23d_is_int(_1a850d09c_to_str(_42329_l.get()._field_kind.ptr())))) || (!(_1a844b23d_is_int(_1a850d09c_to_str(_42352_r.get()._field_kind.ptr())))))) {
		_42376_ok = false;
		_42386_x = 0LLU;
		return std::make_tuple(_42376_ok,_42386_x);
	};
	{
		auto &_match_expr{ _42352_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a83a871c_Const>>()) {
			_case_begin_1aae87d98:;
			{
				goto _match_end_1aae87826;
			}
		}
		else {
			_case_begin_1aae8787b:;
			{
				_42376_ok = false;
				_42386_x = 0LLU;
				return std::make_tuple(_42376_ok,_42386_x);
			}
		}
		_match_end_1aae87826:;
	};
	_42386_x=static_cast<jule::U64>(_1a83aa90b_as_u64(_42352_r.get()._field_model.operator jule::Ptr<_1a83a871c_Const>().ptr()));
	if (((_42386_x == 0LLU) || ((_42386_x & 1LL) != 0LLU))) {
		_42376_ok = false;
		_42386_x = 0LLU;
		return std::make_tuple(_42376_ok,_42386_x);
	};
	jule::F64 _4379_j = _1a82d788d_log2(static_cast<jule::F64>(static_cast<jule::F64>(_42386_x)));;
	jule::U64 _4389_z = static_cast<jule::U64>(_4379_j);;
	if ((static_cast<jule::F64>(_4389_z) != _4379_j)) {
		_42376_ok = false;
		_42386_x = 0LLU;
		return std::make_tuple(_42376_ok,_42386_x);
	};
	_42376_ok = true;
	_42386_x = _4389_z;
	return std::make_tuple(_42376_ok,_42386_x);
}



inline jule::U64 _1a8d503a0_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1a8d506e1_unix_year_to_seconds(jule::U64 _26225_y, jule::Bool& _26243_leap) {
	if (((_26225_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26225_y - 68LLU) >> 2LLU);;
		_26243_leap=(((_26225_y - 68LLU) & 3LLU) == 0LLU);
		if (_26243_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26225_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26225_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26225_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26243_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26243_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26243_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26243_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26225_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1a8d50a76_unix_month_to_seconds(jule::U64 _31926_m, jule::Bool _31939_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31926_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1aaeb3ee5:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aaeb42e2:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aaeb448a:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1aaeb4501:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1aaeb4567:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1aaeb45cd:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1aaeb4644:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1aaeb46aa:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1aaeb4721:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1aaeb4787:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1aaeb47ed:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1aaeb428c:;
	};
	if ((_31939_leap && (_31926_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1a8cb7636_is_copy_optimizable(jule::Ptr<_1a84d3869_Data>& _73325_expr) {
	if ((!(_73325_expr.get()._field_lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _73325_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1b396cc1b_SlicingExprModel>>()) {
			_case_begin_1ab338952:;
			{
				return false;
			}
		}
		_match_end_1ab345981:;
	};
	return true;
}



inline jule::Bool _1a8cb7768_is_iter_copy_optimizable(jule::Ptr<_1a84d3869_Data>& _74430_expr, jule::Ptr<_1a8487246_Var>& _74444_v) {
	if (((!(_74430_expr.get()._field_lvalue)) && (!(_1a850e08c_mutable(_74430_expr.get()._field_kind.ptr()))))) {
		return true;
	};
	return ((!(_74444_v.get()._field_mutable)) && (!(_74430_expr.get()._field_mutable)));
}



inline jule::Str _1a8cd1991_decompose_common_esq(jule::U8 _115025_b) {
	{
		auto &_match_expr{ _115025_b };
		
		if (_match_expr == '\\') {
			_case_begin_1ab347b09:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ab347b70:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ab34782e:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1ab347895:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1ab34790b:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1ab347499:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1ab347510:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1ab347576:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1ab3475dc:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1ab347be7:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1ab347433:;
			{
				return jule::Str();
			}
		}
		_match_end_1ab3471be:;
	};
}



inline jule::Str _1a8cd1c7c_sbtoa(jule::U8 _117710_b) {
	if ((_117710_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_117710_b < 128LLU)) {
		jule::Str _118213_seq = _1a8cd1991_decompose_common_esq(_117710_b);;
		if ((!(_118213_seq.empty()))) {
			return _118213_seq;
		};
		if (((32LL <= _117710_b) && (_117710_b <= 126LLU))) {
			return static_cast<jule::Str>(_117710_b);
		};
	};
	jule::Str _11909_seq = _1a8305bb9_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_117710_b)),8LL);;
	if ((_11909_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11909_seq);
	};
	return (jule::Str("\\", 1) + _11909_seq);
}



inline jule::Str _1a8cd2024_cstr_bytes(jule::Slice<jule::U8> _119715_bytes) {
	jule::Str _119813_lit = jule::Str();;
	{
		auto &expr = _119715_bytes;
		auto it = expr.begin();
		_iter_begin_1ab34d291:;
		if (it != expr.end()) {
			jule::U8 &_119912_b = *it;
			{
				_119813_lit+=_1a8cd1c7c_sbtoa(_119912_b);
			}
			_iter_next_1ab34d291:;
			++it;
			goto _iter_begin_1ab34d291;
		}
		_iter_end_1ab34d291:;
	};
	return _119813_lit;
}



inline jule::Str _1a8cd2310_cstr_lit(jule::Slice<jule::U8> _120513_bytes) {
	return ((jule::Str("\"", 1) + _1a8cd2024_cstr_bytes(_120513_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1a8cd2651_ftoa(jule::F64 _12099_f, jule::I64 _120917_bitsize) {
	if ((_120917_bitsize != 32LL)) {
		if ((_12099_f == static_cast<jule::F64>(static_cast<jule::I64>(_12099_f)))) {
			return _1a8cd28e8_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12099_f)));
		};
		if ((_12099_f == static_cast<jule::F64>(static_cast<jule::U64>(_12099_f)))) {
			return _1a8cd2b90_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12099_f)));
		};
	};
	jule::Str _121813_m = _1a6035368_fmt_float(_12099_f,'f',-1LL,_120917_bitsize);;
	if ((!(_2109140a5_contains(_121813_m,jule::Str(".", 1))))) {
		_121813_m+=jule::Str(".0", 2);
	};
	return _121813_m;
}



inline jule::Str _1a8cd28e8_itoa(jule::I64 _12259_x) {
	{
		
		if ((_12259_x == jule::MAX_I64)) {
			_case_begin_1ab352064:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12259_x == jule::MIN_I64)) {
			_case_begin_1ab352130:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1ab351e54:;
	};
	jule::Str _12339_fmt = _1a8305ceb_fmt_int(_12259_x,10LL);;
	if (_210c44b55_is_64bit(jule::Str("arm64", 5))) {
		return (_12339_fmt + jule::Str("LL", 2));
	};
	return (_12339_fmt + jule::Str("L", 1));
}



inline jule::Str _1a8cd2b90_utoa(jule::U64 _12409_x) {
	{
		
		if ((_12409_x == jule::MAX_U64)) {
			_case_begin_1ab353e67:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1ab353dbd:;
	};
	jule::Str _12469_fmt = _1a8305bb9_fmt_uint(_12409_x,10LL);;
	if (_210c44b55_is_64bit(jule::Str("arm64", 5))) {
		return (_12469_fmt + jule::Str("LLU", 3));
	};
	return (_12469_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1a8cd2ec0_is_forwarded(jule::Ptr<_1a8438e62_Scope>& _125318_s) {
	jule::Any _12549_last = _125318_s.get()._field_stmts[(_125318_s.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12549_last };
		
		if (_match_expr.type_is<jule::Ptr<_1a84d3869_Data>>()) {
			_case_begin_1ab354bb0:;
			{
				{
					auto &_match_expr{ _12549_last.operator jule::Ptr<_1a84d3869_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a5b2ab95_BuiltinErrorCallExprModel>>()) {
						_case_begin_1ab35684e:;
						{
							return true;
						}
					}
					else {
						_case_begin_1ab356be5:;
						{
							return false;
						}
					}
					_match_end_1ab356b90:;
				};
			}
		}
		else {
			_case_begin_1ab356134:;
			{
				return true;
			}
		}
		_match_end_1ab3560ce:;
	};
}



inline jule::Bool _1a8cd32ab_is_builtin_call_has_debuginf(jule::Ptr<_1b396b1c0_FnCallExprModel>& _126834_m) {
	if ((!(_1a5b33de0_is_builtin(_126834_m.get()._field_func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _126834_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1b396eb96_CommonSubIdentExprModel>>()) {
			_case_begin_1ab356ed1:;
			{
				jule::Ptr<_1b396eb96_CommonSubIdentExprModel> _127413_csie = _126834_m.get()._field_expr.operator jule::Ptr<_1b396eb96_CommonSubIdentExprModel>();;
				return (_127413_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1ab3563dc:;
			{
				return false;
			}
		}
		_match_end_1ab356387:;
	};
}



inline void _1a8d5540a_iter_files(jule::Ptr<_1a8466c1a_Package>& _103920_pkg, jule::Fn<void(jule::Ptr<_1a84cd7a9_SymbolTable>&)> _103935_f) {
	{
		auto &expr = _103920_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ab3587eb:;
		if (it != expr.end()) {
			jule::Ptr<_1a84cd7a9_SymbolTable> _104017_file = *it;
			{
				_103935_f(_104017_file);
			}
			_iter_next_1ab3587eb:;
			++it;
			goto _iter_begin_1ab3587eb;
		}
		_iter_end_1ab3587eb:;
	};
}



inline void _1a8d5565d_prepare_structure(jule::Ptr<_1b396462a_Struct>& _104527_s) {
	{
		auto &expr = _104527_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab359654:;
		if (it != expr.end()) {
			jule::Ptr<_1b39672a9_StructIns> _104617_ins = *it;
			{
				{
					auto &expr = _104617_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ab359d5d:;
					if (it != expr.end()) {
						jule::Ptr<_1a5b2eeb8_Fn> _104721_m = *it;
						{
							if (_104721_m.get()._field_statically) {
								goto _iter_next_1ab359d5d;
							};
							{
								auto &expr = _104721_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1ab35a699:;
								if (it != expr.end()) {
									jule::Ptr<_1a5b33164_FnIns> _105125_mins = *it;
									{
										jule::Ptr<_1a5b322c8_ParamIns> _105225_p = _105125_mins.get()._field_params[0LL];;
										if ((!(_1a5b2e01c_is_ref(_105225_p.get()._field_decl.ptr())))) {
											_105225_p.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a8d5696c_CustomType>(_1a8d5696c_CustomType(static__1a8d58221_as_ptr(static__1a8d5b477_kind(_105225_p.get()._field_kind)))), 12)));
										} else {
											_105225_p.get()._field_kind=jule::new_ptr<_1a850cbe5_TypeKind>(_1a850cbe5_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a850c7b6_Kind>(jule::new_ptr<_1a8d5696c_CustomType>(_1a8d5696c_CustomType(static__1a8d5b477_kind(_105225_p.get()._field_kind))), 12)));
										};
									}
									_iter_next_1ab35a699:;
									++it;
									goto _iter_begin_1ab35a699;
								}
								_iter_end_1ab35a699:;
							};
						}
						_iter_next_1ab359d5d:;
						++it;
						goto _iter_begin_1ab359d5d;
					}
					_iter_end_1ab359d5d:;
				};
			}
			_iter_next_1ab359654:;
			++it;
			goto _iter_begin_1ab359654;
		}
		_iter_end_1ab359654:;
	};
}



inline jule::Str _1a8d55905_concat_all_parts(jule::Slice<jule::Ptr<_2110e7238_Token>> _107221_parts) {
	jule::Str _107313_s = jule::Str();;
	{
		auto &expr = _107221_parts;
		auto it = expr.begin();
		_iter_begin_1ab35ac3d:;
		if (it != expr.end()) {
			jule::Ptr<_2110e7238_Token> &_107412_p = *it;
			{
				_107313_s+=_107412_p.get()._field_kind;
			}
			_iter_next_1ab35ac3d:;
			++it;
			goto _iter_begin_1ab35ac3d;
		}
		_iter_end_1ab35ac3d:;
	};
	return _107313_s;
}



inline jule::Ptr<_210eb33e0_Directive> _1a8d5c91d_find_directive(jule::Slice<jule::Ptr<_210eb33e0_Directive>>& _31824_directives, jule::Str _31855_tag) {
	{
		auto &expr = _31824_directives;
		auto it = expr.begin();
		_iter_begin_1ab35d8de:;
		if (it != expr.end()) {
			jule::Ptr<_210eb33e0_Directive> _31917_dr = *it;
			{
				if ((_31917_dr.get()._field_tag.get()._field_kind == _31855_tag)) {
					return _31917_dr;
				};
			}
			_iter_next_1ab35d8de:;
			++it;
			goto _iter_begin_1ab35d8de;
		}
		_iter_end_1ab35d8de:;
	};
	return nullptr;
}



inline jule::Bool _1a8d5cca3_has_directive(jule::Slice<jule::Ptr<_210eb33e0_Directive>>& _32819_directives, jule::Str _32850_tag) {
	return (_1a8d5c91d_find_directive(_32819_directives,_32850_tag) != nullptr);
}



inline void _210c07134_print_error_message(jule::Str _3024_msg) {
	jule::outln(_3024_msg);
}



inline void _210c1e668_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_210c07134_print_error_message((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _210c08135_HELP_MAP[0LL][0LL].len();;
	{
		auto &expr = _210c08135_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1ab3ab178:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1ab3ab178:;
			++it;
			goto _iter_begin_1ab3ab178;
		}
		_iter_end_1ab3ab178:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _210c08135_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1ab3ac6da:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_20ecdd3a3_repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1ab3ac6da:;
			++it;
			_519_i++;
			goto _iter_begin_1ab3ac6da;
		}
		_iter_end_1ab3ac6da:;
	};
	jule::outln(_4913_s);
}



inline void _210c20c74_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_210c07134_print_error_message((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.11 @master", 18));
}



inline void _210c21516_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _210c42ec7_DISTOS;
		auto it = expr.begin();
		_iter_begin_1ab3b08db:;
		if (it != expr.end()) {
			jule::Str &_7412_os = *it;
			{
				jule::out(_7412_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1ab3b08db:;
			++it;
			goto _iter_begin_1ab3b08db;
		}
		_iter_end_1ab3b08db:;
	};
	jule::outln(jule::Str());
}



inline void _210c21ca8_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _210c431c5_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1ab3b107e:;
		if (it != expr.end()) {
			jule::Str &_8412_arch = *it;
			{
				jule::out(_8412_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1ab3b107e:;
			++it;
			goto _iter_begin_1ab3b107e;
		}
		_iter_end_1ab3b107e:;
	};
	jule::outln(jule::Str());
}



inline void _210c2254a_tool(jule::Slice<jule::Str>& _9210_args) {
	if ((_9210_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9210_args.len() > 3LL)) {
		_210c07134_print_error_message((jule::Str("invalid command: ", 17) + _9210_args[3LL]));
		return;;
	};
	jule::Str _1039_cmd = _9210_args[2LL];;
	{
		auto &_match_expr{ _1039_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1ab3b3db7:;
			{
				_210c21516_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1ab3b3b31:;
			{
				_210c21ca8_tool_distarch();
			}
		}
		else {
			_case_begin_1ab3b2899:;
			{
				_210c07134_print_error_message((jule::Str("undefined command: ", 19) + _1039_cmd));
			}
		}
		_match_end_1ab3b3a10:;
	};
}



inline void _210c22cdc_julenv(jule::Slice<jule::Str>& _11512_args) {
	if ((_11512_args.len() > 2LL)) {
		_210c07134_print_error_message((jule::Str("invalid command: ", 17) + _11512_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.11 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _20dc784a4_COMPILER));
	jule::outln((jule::Str("default C++ standard: ", 22) + _20dc787e5_CPP_STD));
}



inline void _210c32a99_mod(jule::Slice<jule::Str>& _1289_args) {
	if ((_1289_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1289_args.len() > 3LL)) {
		_210c07134_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1289_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1ab3b8471:;
			{
				({
					auto except = static__20ddd48a7_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_210c07134_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1ab3b6d65:;
			{
				_210c07134_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[2LL]));
			}
		}
		_match_end_1ab3b80b9:;
	};
}



inline jule::Bool _210c045a4_process_command(jule::Slice<jule::Str>& _15121_args) {
	{
		auto &_match_expr{ _15121_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1ab3b9d57:;
			{
				_210c1e668_help(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1ab3ba50b:;
			{
				_210c20c74_version(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1ab3ba572:;
			{
				_210c2254a_tool(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1ab3ba352:;
			{
				_210c22cdc_julenv(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1ab3ba3b8:;
			{
				_210c32a99_mod(_15121_args);
			}
		}
		else {
			_case_begin_1ab3b8196:;
			{
				return false;
			}
		}
		_match_end_1ab3b986d:;
	};
	return true;
}



inline void _210c1da85_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18713_args = _20ec508ba_args();;
	if ((_18713_args.len() < 2LL)) {
		_210c1da85_show_info();
		return;;
	};
	if (_210c045a4_process_command(_18713_args)) {
		return;;
	};
	_1a8d91ec4_compile_command(_18713_args);
}



inline void _210c304c0_enable_vtp(void) {
	jule::U64 _199_h_out = _20eab2ed0_get_std_handle(static_cast<jule::U64>(18446744073709551605LLU));;
	if ((_199_h_out == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dw_mode = 0LL;;
	if ((!(_20eab5d5c_get_console_mode(_199_h_out,_2413_dw_mode)))) {
		return;;
	};
	_2413_dw_mode|=4LL;
	_20eab619d_set_console_mode(_199_h_out,_2413_dw_mode);
}



inline void _210c334e5_init(void) {
	_210c304c0_enable_vtp();
}



inline jule::Ptr<_20eac0c8a_File> _1a8939d58_open_output(jule::Str& _4917_path) {
	jule::Str _509_dir = _20ec93c93_dir(_4917_path);;
	({
		auto except = static__20ebe7b81_of(_509_dir);
		if (!except.ok()) {
			({
				auto except = static__20ebacbe0_create(_509_dir);
				if (!except.ok()) {
					_1a85d7066_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__20ddc947e_create(_4917_path);
		(except.ok()) ? (except.result) : ({
			_1a85d7066_throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1a8970377_clear_objects(void) {
	({
		auto except = static__20eb7acac_remove(_1a87e7ac3_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__20ebbbcba_remove(_1a8d645c3_OUT_DIR);
}



inline void _1a8d614d2_compile_ir(jule::Str _7815_compiler, jule::Str _7830_compiler_cmd) {
	jule::Ptr<_210c808a5_Cmd> _7913_cmd = static__210c80cd4_new(_7815_compiler);;
	_7913_cmd.get()._field_args=jule::Slice<jule::Str>({_7815_compiler});
	_7913_cmd.get()._field_args=jule::append(_7913_cmd.get()._field_args,_210913e73_split(_7830_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _829_status = ({
		auto except = _210c8524a_spawn(_7913_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL)) == _match_expr) {
					_case_begin_1ab3c52c4:;
					{
						static__1a85d5086_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL)) == _match_expr) {
					_case_begin_1ab3c533a:;
					{
						static__1a85d5086_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL)) == _match_expr) {
					_case_begin_1ab3c53a1:;
					{
						static__1a85d5086_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL)) == _match_expr) {
					_case_begin_1ab3c5417:;
					{
						static__1a85d5086_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1ab3c501b:;
					{
						static__1a85d5086_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1ab3c50a4:;
			};
			_1a85d7066_throw(jule::Str());
			0LL;
		});
	});;
	if ((_829_status != 0LL)) {
		jule::Str _9913_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _20dc784a4_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a85d5086_print(jule::Str("\033[31m", 5),_9913_error_message);
		_1a85d7066_throw(jule::Str());
	};
	_1a8970377_clear_objects();
}



inline jule::Bool _1a8d73eea_is_cpp_source_file(jule::Str _11023_path) {
	jule::I64 _1119_offset = _210913736_find_last_byte(_11023_path,'.');;
	if ((_1119_offset == -1LL)) {
		return false;
	};
	return _210c33abc_is_valid_cpp_ext(_11023_path.slice(_1119_offset));
}



inline void _1a8d6b355_push_comp_cmd_clang(jule::Str& _11829_cmd) {
	_11829_cmd+=jule::Str("-Wno-everything ", 16);
	_11829_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _20dc787e5_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ab3c9b36:;
			{
				_11829_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ab3cab04:;
			{
				_11829_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ab3cab6a:;
			{
				_11829_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1ab3ca153:;
	};
	_11829_cmd+=jule::Str(" ", 1);
	if (_20dbaa925_PRODUCTION) {
		_11829_cmd+=jule::Str("-O3 ", 4);
		_11829_cmd+=jule::Str("-flto ", 6);
		_11829_cmd+=jule::Str("-DNDEBUG ", 9);
		_11829_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11829_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1a8d5de91_push_comp_cmd_gcc(jule::Str& _14427_cmd) {
	_14427_cmd+=jule::Str("-w ", 3);
	_14427_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _20dc787e5_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ab3cbe79:;
			{
				_14427_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ab3cd09b:;
			{
				_14427_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ab3cd112:;
			{
				_14427_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1ab3cce7a:;
	};
	_14427_cmd+=jule::Str(" ", 1);
	if (_20dbaa925_PRODUCTION) {
		_14427_cmd+=jule::Str("-O3 ", 4);
		_14427_cmd+=jule::Str("-DNDEBUG ", 9);
		_14427_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14427_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1a8ababcb_gen_compile_cmd(jule::Str _17020_source_path, jule::Ptr<_1a85a8312_IR>& _17039_ir) {
	jule::Str &_17110_compiler = _20dc7866e_COMPILER_PATH;;
	jule::Str _17213_cmd = jule::Str();;
	{
		auto &_match_expr{ _20dc784a4_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ab3d03cd:;
			{
				_1a8d5de91_push_comp_cmd_gcc(_17213_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ab3d0741:;
			{
				_1a8d6b355_push_comp_cmd_clang(_17213_cmd);
			}
		}
		_match_end_1ab3d05cb:;
	};
	{
		auto &expr = _17039_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1ab3d1368:;
		if (it != expr.end()) {
			jule::Str &_18212_pass = *it;
			{
				_17213_cmd+=_18212_pass;
				_17213_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1ab3d1368:;
			++it;
			goto _iter_begin_1ab3d1368;
		}
		_iter_end_1ab3d1368:;
	};
	{
		auto &expr = _17039_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1ab3d2028:;
		if (it != expr.end()) {
			jule::Ptr<_1a8464058_ImportInfo> &_18812_u = *it;
			{
				if ((_18812_u.get()._field_cpp_linked && _1a8d73eea_is_cpp_source_file(_18812_u.get()._field_path))) {
					_17213_cmd+=_18812_u.get()._field_path;
					_17213_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1ab3d2028:;
			++it;
			goto _iter_begin_1ab3d2028;
		}
		_iter_end_1ab3d2028:;
	};
	if ((!(_1a8d6a046_OUT.empty()))) {
		_17213_cmd+=jule::Str("-o ", 3);
		_17213_cmd+=_1a8d6a046_OUT;
		_17213_cmd+=jule::Str(" ", 1);
	};
	_17213_cmd+=_17020_source_path;
	return std::make_tuple(_17110_compiler,_17213_cmd);
}



inline jule::Str _1a87e7ac3_get_compile_path(void) {
	return _20ecb5a51_join(jule::Slice<jule::Str>({_1a8d645c3_OUT_DIR,_1a8d64eb9_OUT_NAME}));
}



inline void _1a8d62c75_apply_target_independent_optimizations(jule::Ptr<_1a85a8312_IR>& _21548_ir) {
	if (_20dc77508_OPT_DEADCODE) {
		_1a85b0e41_eliminate_defines(_21548_ir);
	};
	jule::Ptr<_1a8cc9b76_Optimizer> _22213_opt = static__1a8cca094_new(_21548_ir);;
	_1a8ccb4d5_optimize(_22213_opt.ptr());
	if (_20dc77508_OPT_DEADCODE) {
		_1a85b3372_eliminate_scopes(_21548_ir);
	};
}



inline void _1a8663be7_check_compiler_flag(void) {
	{
		auto &_match_expr{ _20dc784a4_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ab3d545a:;
			{
				_1a85d7066_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ab3d4ca6:;
			{
				if (_20dc7866e_COMPILER_PATH.empty()) {
					_20dc7866e_COMPILER_PATH=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ab3d4d1c:;
			{
				if (_20dc7866e_COMPILER_PATH.empty()) {
					_20dc7866e_COMPILER_PATH=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1ab3d4b85:;
			{
				_1a85d7066_throw((jule::Str("invalid option value for --compiler: ", 37) + _20dc784a4_COMPILER));
			}
		}
		_match_end_1ab3d4c1d:;
	};
}



inline void _1a8d5d347_check_target_arch(jule::Str _24822_arch) {
	{
		auto &expr = _210c431c5_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1ab3d667b:;
		if (it != expr.end()) {
			jule::Str &_24912_distarch = *it;
			{
				if ((_24822_arch == _24912_distarch)) {
					return;;
				};
			}
			_iter_next_1ab3d667b:;
			++it;
			goto _iter_begin_1ab3d667b;
		}
		_iter_end_1ab3d667b:;
	};
	_1a85d7066_throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _24822_arch));
}



inline void _1a8d5d479_check_target_os(jule::Str _25720_os) {
	{
		auto &expr = _210c42ec7_DISTOS;
		auto it = expr.begin();
		_iter_begin_1ab3d811c:;
		if (it != expr.end()) {
			jule::Str &_25812_distos = *it;
			{
				if ((_25720_os == _25812_distos)) {
					return;;
				};
			}
			_iter_next_1ab3d811c:;
			++it;
			goto _iter_begin_1ab3d811c;
		}
		_iter_end_1ab3d811c:;
	};
	_1a85d7066_throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _25720_os));
}



inline void _1a8d91556_check_target_flag(jule::Str& _26623_target) {
	if (_26623_target.empty()) {
		_1a85d7066_throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2719_parts = _210913e73_split(_26623_target,jule::Str("-", 1),-1LL);;
	if ((_2719_parts.len() != 2LL)) {
		_1a85d7066_throw((jule::Str("--target: undefined platform target format: ", 44) + _26623_target));
	};
	jule::Str _27610_os = _2719_parts[0LL];;
	jule::Str _27614_arch = _2719_parts[1LL];;
	std::tie(_27610_os,_27614_arch) = std::make_tuple(_2719_parts[0LL],_2719_parts[1LL]);
	if ((_27610_os != jule::Str("native", 6))) {
		_1a8d5d479_check_target_os(_27610_os);
		_210c62e92_OS=_27610_os;
	};
	if ((_27614_arch != jule::Str("native", 6))) {
		_1a8d5d347_check_target_arch(_27614_arch);
		_210c63d2d_ARCH=_27614_arch;
	};
	_1a8443466_update_target();
}



inline void _1a8d91688_check_opt_flag(jule::Str& _28920_opt) {
	if (_28920_opt.empty()) {
		_1a85d7066_throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _28920_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1ab3dd133:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1ab3dd199:;
			{
				_20dc78086_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1ab3dc94b:;
			{
				_1a85d7066_throw((jule::Str("--opt: invalid optimization level: ", 35) + _28920_opt));
			}
		}
		_match_end_1ab3dd0cd:;
	};
}



inline void _1a8d919eb_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _20dc787e5_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ab3de453:;
			{
				goto _match_end_1ab3dddc0;
			}
		}
		else {
			_case_begin_1ab3dd210:;
			{
				_1a85d7066_throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _20dc787e5_CPP_STD));
			}
		}
		_match_end_1ab3dddc0:;
	};
}



inline jule::Slice<jule::Str> _1a8d91b2d_check_flags(jule::Slice<jule::Str>& _31417_args) {
	jule::Str _31513_opt = jule::Str("L0", 2);;
	jule::Str _31613_target = jule::Str("native-native", 13);;
	jule::Ptr<_1a8d8c73e_FlagSet> _31813_fs = static__1a8d8ca2a_new();;
	_1a8d8e90b_add_var_0(_31813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_31513_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1a8d8e90b_add_var_0(_31813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_31613_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1a8d8e90b_add_var_0(_31813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1a8d6a046_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dc789b0_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dc78b36_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1a8d8e90b_add_var_0(_31813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_20dc784a4_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1a8d8e90b_add_var_0(_31813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_20dc7866e_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dbaa925_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dc78e33_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dc79142_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1a8d8e90b_add_var_0(_31813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_20dc787e5_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dc7741a_OPT_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dc77508_OPT_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dc775e6_OPT_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dc77739_OPT_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dc778b0_OPT_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dc77a36_OPT_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dc77c45_OPT_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1a8d8e90b_add_var_1(_31813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_20dc77dbb_OPT_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _34013_content = ({
		auto except = _1a8d8d872_parse(_31813_fs.ptr(), _31417_args);
		(except.ok()) ? (except.result) : ({
			_1a85d7066_throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1a8663be7_check_compiler_flag();
	_1a8d919eb_check_cpp_std_flag();
	_1a8d91556_check_target_flag(_31613_target);
	_1a8d91688_check_opt_flag(_31513_opt);
	return _34013_content;
}



inline void _1a8d91c60_setup_sema_flags(jule::I64& _35326_flags) {
	if (_20dc789b0_SHADOWING) {
		_35326_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a85a8312_IR> _1a8d91d92_build_ir(jule::Slice<jule::Str>& _35914_args) {
	jule::Slice<jule::Str> _3609_content = _1a8d91b2d_check_flags(_35914_args);;
	jule::I64 _36213_sema_flags = static_cast<jule::I64>(0LL);;
	_1a8d91c60_setup_sema_flags(_36213_sema_flags);
	if ((_3609_content.len() == 0LL)) {
		_1a85d7066_throw(_210c4036a_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3609_content.len() > 1LL)) {
		_1a85d7066_throw((jule::Str("undefined content: ", 19) + _3609_content[1LL]));
	};
	jule::Str _37014_path;;
	jule::Bool _37020_ok;;
	std::tie(_37014_path,_37020_ok) = _20ecb81a2_abs(_3609_content[0LL]);
	if ((!(_37020_ok))) {
		_1a85d7066_throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_20eac0e77_Status> _3769_inf = ({
		auto except = static__20ebe7b81_of(_210c5359d_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1a85d7066_throw(_210c4036a_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
			return nullptr;
		} jule::Ptr<_20eac0e77_Status>();});
	});;
	if ((!(_20dde8cb7_is_dir(_3769_inf.ptr())))) {
		_1a85d7066_throw(_210c4036a_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a85a8312_IR> _38414_ir;;
	jule::Slice<_210c3ee2a_Log> _38418_logs;;
	std::tie(_38414_ir,_38418_logs) = static__1a85a8796_build(_37014_path,_36213_sema_flags);
	if (((_38414_ir == nullptr) && (_38418_logs == nullptr))) {
		_1a85d7066_throw(_210c4036a_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>({jule::Any(_37014_path)})));
	};
	if ((_38418_logs != nullptr)) {
		static__1a85d67a2_print_logs(_38418_logs);
		_1a85d7066_throw(jule::Str());
	};
	return _38414_ir;
}



inline void _1a8d91ec4_compile_command(jule::Slice<jule::Str>& _39925_args) {
	_39925_args=_39925_args.slice(1LL);
	if ((_39925_args[0LL] == jule::Str("test", 4))) {
		_20dc78cac_TEST=true;
		_39925_args=_39925_args.slice(1LL);
	};
	jule::Ptr<_1a85a8312_IR> _40513_ir = _1a8d91d92_build_ir(_39925_args);;
	;
	if ((!(_20dc78cac_TEST))) {
		jule::Ptr<_1a5b2eeb8_Fn> _41017_main = _1a84684ad_find_fn(_40513_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
		if ((_41017_main == nullptr)) {
			_1a85d7066_throw(_210c4036a_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
		_41017_main.get()._field_statically=true;
	};
	jule::Ptr<_1a5b2eeb8_Fn> _41613_init = _1a84684ad_find_fn(_40513_ir.get()._field_main.ptr(), jule::Str("init", 4),false);;
	if ((_41613_init != nullptr)) {
		_41613_init.get()._field_statically=true;
	};
	_1a8d62c75_apply_target_independent_optimizations(_40513_ir);
	_1a85a96ba_order(_40513_ir.ptr());
	jule::Str _42610_compiler;;
	jule::Str _42620_compiler_cmd;;
	std::tie(_42610_compiler,_42620_compiler_cmd) = _1a8ababcb_gen_compile_cmd(_1a87e7ac3_get_compile_path(),_40513_ir);
	jule::Ptr<_1a8d14287_ObjectCoder> _42813_oc = static__1a8d22ecc_new(_40513_ir,_1a8d255a6_SerializationInfo(_42610_compiler,_42620_compiler_cmd));;
	if (_20dc78cac_TEST) {
		jule::Ptr<_1a8cd4e4a_TestCoder> _43317_tc = static__1a8cd53bd_new(_42813_oc);;
		_1a8cd6600_serialize(_43317_tc);
	} else {
		_1a8d55097_serialize(_42813_oc);
	};
	jule::Str _4399_path = _1a87e7ac3_get_compile_path();;
	jule::Ptr<_20eac0c8a_File> _44013_file = _1a8939d58_open_output(_4399_path);;
	({
		auto except = _20eb29ee2_write(_44013_file.ptr(), static_cast<jule::Slice<jule::U8>>(_42813_oc.get()._field_obj));
		if (!except.ok()) {
			_1a85d7066_throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _20dde78ba_close(_44013_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:444:5"));
	});
	if ((!(_20dc78b36_TRANSPILATION))) {
		_1a8d614d2_compile_ir(_42610_compiler,_42620_compiler_cmd);
	};
}



void __jule_call_initializers(void) {
	_210c7db7d_init();
	_1a84435cb_init();
	_210c334e5_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}