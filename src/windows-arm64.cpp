// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 30/7/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1a88e5286_comptimeRangeKind{};
struct _1a893a672_Importer{};
struct _1a86ae33b_Kind{};
struct _1a86ccac9_Lookup{};
struct _1a9e2a369_CommonFlag{};
struct _1d0b1798c_acceptRange;
struct _1a4d22a4c_Range16;
struct _1a4d22ec0_Range32;
struct _1a4d23443_RangeTable;
struct _1a4d6397d_lazyBuff;
struct _1d0a261b4_DirEntry;
struct _1d0a26428_Directory;
struct _1d0a32de6_File;
struct _1d0a35536_Status;
struct _1a4e8c447_cmdAttrs;
struct _1a4deb40b_Log;
struct _1a52684c0_Token;
struct _1a526d85a_File;
struct _1a527063c_kindPair;
struct _1a527619d_lex;
struct _1a5518e68_floatInfo;
struct _1a5519a90_decimalSlice;
struct _1a552b046_leftCheat;
struct _1a552ba19_decimal;
struct _1a55406ba_Const;
struct _1a8863347_Ast;
struct _1a88641d3_Node;
struct _1a88645ce_Directive;
struct _1a88970e5_TypeDecl;
struct _1a88976ab_IdentTypeDecl;
struct _1a8897997_SubIdentTypeDecl;
struct _1a8897d1b_NamespaceTypeDecl;
struct _1a8898107_SptrTypeDecl;
struct _1a8898503_SlcTypeDecl;
struct _1a88987de_TupleTypeDecl;
struct _1a8898aca_PtrTypeDecl;
struct _1a88992a1_ArrTypeDecl;
struct _1a88999aa_MapTypeDecl;
struct _1a8899d62_RetTypeDecl;
struct _1a889b270_Expr;
struct _1a889b55b_RangeExpr;
struct _1a889bb11_UseExpr;
struct _1a889bdec_TupleExpr;
struct _1a889c2a4_LitExpr;
struct _1a889c8e2_UnsafeExpr;
struct _1a889cd65_IdentExpr;
struct _1a889d56e_UnaryExpr;
struct _1a889d926_VariadicExpr;
struct _1a889dccd_CastExpr;
struct _1a889e185_NsSelectionExpr;
struct _1a889e608_SubIdentExpr;
struct _1a889ea7b_BinopExpr;
struct _1a88a0186_FnCallExpr;
struct _1a88a0b15_FieldExprPair;
struct _1a88a13da_StructLit;
struct _1a88a185d_BraceLit;
struct _1a88a2243_KeyValPair;
struct _1a88a28b4_SliceExpr;
struct _1a88a3222_IndexingExpr;
struct _1a88a382c_SlicingExpr;
struct _1a88a3b18_Constraint;
struct _1a88a408b_GenericDecl;
struct _1a88a4443_LabelSt;
struct _1a88a47ea_GotoSt;
struct _1a88a4ad6_FallSt;
struct _1a88a51e1_AssignLeft;
struct _1a88a5730_AssignSt;
struct _1a88a6621_Stmt;
struct _1a88a6c2b_ScopeTree;
struct _1a88a7402_ParamDecl;
struct _1a88a8722_FnDecl;
struct _1a88a9701_VarDecl;
struct _1a88a9aa8_RetSt;
struct _1a88aa218_Iter;
struct _1a88aa9dd_WhileKind;
struct _1a88ab37e_RangeKind;
struct _1a88ab736_BreakSt;
struct _1a88abadd_ContSt;
struct _1a88ac061_If;
struct _1a88ac418_Else;
struct _1a88ac88b_Conditional;
struct _1a88ad062_TypeAliasDecl;
struct _1a88ad4d5_Case;
struct _1a88adbab_MatchCase;
struct _1a88ae44d_UseDecl;
struct _1a88ae8c1_EnumItemDecl;
struct _1a88b03e9_EnumDecl;
struct _1a88b0bbe_TypeEnumItemDecl;
struct _1a88b12c9_TypeEnumDecl;
struct _1a88b153d_FieldDecl;
struct _1a88b1d8a_StructDecl;
struct _1a88b2561_TraitDecl;
struct _1a88b2b6b_Impl;
struct _1a88b4266_Field;
struct _1a88b6026_Operators;
struct _1a88b6d3a_Struct;
struct _1a88b915b_FieldIns;
struct _1a88bda56_OperandExprModel;
struct _1a88be01d_BinopExprModel;
struct _1a88be3c5_UnaryExprModel;
struct _1a88be8c0_StructArgExprModel;
struct _1a88bec44_StructLitExprModel;
struct _1a88c0052_AllocStructLitExprModel;
struct _1a88c05a2_CastingExprModel;
struct _1a88c0e54_FnCallExprModel;
struct _1a88c130b_SliceExprModel;
struct _1a88c177e_IndexingExprModel;
struct _1a88c1b36_AnonFnExprModel;
struct _1a88c1edd_KeyValPairExprModel;
struct _1a88c2461_MapExprModel;
struct _1a88c29a0_SlicingExprModel;
struct _1a88c2ede_TraitSubIdentExprModel;
struct _1a88c37c5_StructSubIdentExprModel;
struct _1a88c3b6b_StructStaticIdentExprModel;
struct _1a88c4034_ArrayExprModel;
struct _1a88c4320_CommonIdentExprModel;
struct _1a88c4881_CommonSubIdentExprModel;
struct _1a88c4b7d_TupleExprModel;
struct _1a88c5057_BuiltinOutCallExprModel;
struct _1a88c5442_BuiltinOutlnCallExprModel;
struct _1a88c5761_BuiltinCloneCallExprModel;
struct _1a88c5b4b_BuiltinNewCallExprModel;
struct _1a88c6036_BuiltinPanicCallExprModel;
struct _1a88c64dc_BuiltinAssertCallExprModel;
struct _1a88c6993_BuiltinMakeCallExprModel;
struct _1a88c6d7d_BuiltinAppendCallExprModel;
struct _1a88c719c_BuiltinLenCallExprModel;
struct _1a88c74bb_BuiltinCapCallExprModel;
struct _1a88c7b70_BuiltinDeleteCallExprModel;
struct _1a88c7ed3_BuiltinCopyCallExprModel;
struct _1a88c83bd_BuiltinErrorCallExprModel;
struct _1a88c86ba_SizeofExprModel;
struct _1a88c89a6_AlignofExprModel;
struct _1a88c8c92_RuneExprModel;
struct _1a88c90a0_IntegratedToStrExprModel;
struct _1a88c9468_BackendEmitExprModel;
struct _1a88c9754_FreeExprModel;
struct _1a88ca216_RetType;
struct _1a88ca920_Param;
struct _1a88cc25c_Fn;
struct _1a88ce03e_ParamIns;
struct _1a88cee0d_FnIns;
struct _1a88d2d67_ReferenceStack;
struct _1a88d4198_Pass;
struct _1a88d88d9_symbolBuilder;
struct _1a88de47d_Trait;
struct _1a88e121b_EnumItem;
struct _1a88e1c11_Enum;
struct _1a88e2c78_TypeEnumItem;
struct _1a88e330b_TypeEnum;
struct _1a88e5462_comptimeRange;
struct _1a88e5e57_comptimeStructField;
struct _1a88ec7dd_comptimeStructFields;
struct _1a88edcb7_comptimeStatic;
struct _1a8900879_comptimeStatics;
struct _1a8901cba_comptimeEnumField;
struct _1a8902edb_comptimeEnumFields;
struct _1a890453c_comptimeParam;
struct _1a89065d8_comptimeParams;
struct _1a8907aa1_comptimeTypeInfos;
struct _1a8909069_comptimeTypeInfo;
struct _1a890ea64_comptimeValue;
struct _1a8912160_comptimeFiles;
struct _1a8913628_comptimeFile;
struct _1a8917484_constraintChecker;
struct _1a8919332_Impl;
struct _1a891e38c_Scope;
struct _1a891e788_If;
struct _1a891ea74_Else;
struct _1a891ede8_Conditional;
struct _1a89201d4_InfIter;
struct _1a8920657_WhileIter;
struct _1a892103c_RangeIter;
struct _1a8921438_ContSt;
struct _1a89217e0_BreakSt;
struct _1a8921acb_Label;
struct _1a8921db7_GotoSt;
struct _1a892226e_Postfix;
struct _1a89226e2_Assign;
struct _1a8922a99_MultiAssign;
struct _1a89231a4_Match;
struct _1a8923bee_Case;
struct _1a89242c6_FallSt;
struct _1a8924628_RetSt;
struct _1a8924c33_scopeLabel;
struct _1a89251a6_scopeGoto;
struct _1a8925eba_scopeChecker;
struct _1a8937240_directiveChecker;
struct _1a893d323_ImportInfo;
struct _1a8940e5d_Package;
struct _1a8945acd_commonSemaMeta;
struct _1a89465e5_Sema;
struct _1a896369a_missingRetChecker;
struct _1a89658ab_IterRelation;
struct _1a8966901_Var;
struct _1a896769e_FuncPattern;
struct _1a8999516_typeCompatibilityChecker;
struct _1a899b13e_assignTypeChecker;
struct _1a899cb24_dynamicTypeAnnotation;
struct _1a89a251e_fnCallArgChecker;
struct _1a89a51d1_structLitChecker;
struct _1a89a6cb5_rangeChecker;
struct _1a89a92b2_retTypeChecker;
struct _1a89ab380_SymbolTable;
struct _1a865dbe2_Data;
struct _1a865ec15_Value;
struct _1a8683860_Eval;
struct _1a86a07a0_unaryEval;
struct _1a86a2571_binaryEval;
struct _1a86ad01b_InsGeneric;
struct _1a86ada55_TypeAlias;
struct _1a86ae79d_TypeKind;
struct _1a86b6651_TypeSymbol;
struct _1a86b7003_Prim;
struct _1a86ba754_Sptr;
struct _1a86bb1b1_Slc;
struct _1a86bbcb6_Tuple;
struct _1a86bc767_Map;
struct _1a86bd35b_Arr;
struct _1a86bdcb8_Ptr;
struct _1a86bec0e_referencer;
struct _1a86c0ade_typeChecker;
struct _1a86c7ed1_identTypeLookup;
struct _1a56b3e9d_FileInfo;
struct _1a93a1626_stmt;
struct _1a93a1e51_scopeParser;
struct _1a93ad7ed_exprBuilder;
struct _1a93ba134_assignInfo;
struct _1a93bd643_parser;
struct _1a93ce368_typeBuilder;
struct _1a8b2e415_CompileInfo;
struct _1a8b30768_directiveEval;
struct _1a93d30d6_JuleImporter;
struct _1a93d7d88_OrderedDefines;
struct _1a93d80ec_defineOrderer;
struct _1a9449ceb_liveTable;
struct _1a9480e75_scopeDeadCode;
struct _1a9484dd0_exprDeadCode;
struct _1a87839c6_StrCompExprModel;
struct _1a8783d8e_StrAppendExprModel;
struct _1a878417a_UnsafeBinopExprModel;
struct _1a8784510_UnsafeIndexingExprModel;
struct _1a8784895_PushToSliceExprModel;
struct _1a8784c4c_AppendToSliceExprModel;
struct _1a878528b_MutSlicingExprModel;
struct _1a8785775_StrInsertBeginExprModel;
struct _1a8785a1c_InlineStdInternalNosafeStobs;
struct _1a8786b3e_scopeOptimizer;
struct _1a8a58905_exprOptimizer;
struct _1a93d98b2_stdCacheData;
struct _1a948c04c_Optimizer;
struct _1a8024861_AnsiEscape;
struct _1a8026236_Logger;
struct _1a9d9e211_AbsTime;
struct _1a9d9e8a4_Time;
struct _1a96056c1_scopeCoder;
struct _1a960dbb3_exprCoder;
struct _1a961d981_deriveCoder;
struct _1a9620367_TestCoder;
struct _1a96228a8_identCoder;
struct _1a9da7093_SerializationInfo;
struct _1a9da755a_traitHash;
struct _1a9da7912_traitCast;
struct _1a9db725c_customType;
struct _1a9db7c0d_typeCoder;
struct _1a9dc07c6_resultCoder;
struct _1acd8ac33_Flag;
struct _1acd8e6b5_Flag;
struct _1acd92d6c_Flag;
struct _1acd96568_Flag;
struct _1acd99c20_Flag;
struct _1a9e2bcc7_FlagSet;
struct _1a9e2e4d3_argParser;
struct _1a9da8935_ObjectCoder;
struct _1a944a1b4_ObjectDeadCode;
struct _1a93d5847_IR;
struct _1a88b9b51_StructIns;
struct _1a4e88663_Cmd;
struct _1d0b1798c_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_1d0b1798c_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1d0b1798c_acceptRange _other) { return !this->operator==(_other); }


};
struct _1a4d22a4c_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_1a4d22a4c_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1a4d22a4c_Range16 _other) { return !this->operator==(_other); }


};
struct _1a4d22ec0_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_1a4d22ec0_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1a4d22ec0_Range32 _other) { return !this->operator==(_other); }


};
struct _1a4d23443_RangeTable {
	jule::Slice<_1a4d22a4c_Range16> _field_R16;
	jule::Slice<_1a4d22ec0_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _1a4d6397d_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _1d0a261b4_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_1d0a35536_Status> _field_Stat;
	

	inline bool operator==(_1d0a261b4_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_1d0a261b4_DirEntry _other) { return !this->operator==(_other); }


};
struct _1d0a26428_Directory {
	

	inline bool operator==(_1d0a26428_Directory _other) { return true; }

	inline bool operator!=(_1d0a26428_Directory _other) { return !this->operator==(_other); }


};
struct _1d0a32de6_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_1d0a32de6_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1d0a32de6_File _other) { return !this->operator==(_other); }


};
struct _1d0a35536_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_1d0a35536_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1d0a35536_Status _other) { return !this->operator==(_other); }


};
struct _1a4e8c447_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	inline bool operator==(_1a4e8c447_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_1a4e8c447_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1a4deb40b_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1a4deb40b_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1a4deb40b_Log _other) { return !this->operator==(_other); }


};
struct _1a52684c0_Token {
	jule::Ptr<_1a526d85a_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1a52684c0_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1a52684c0_Token _other) { return !this->operator==(_other); }


};
struct _1a526d85a_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_Tokens;
	


};
struct _1a527063c_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1a527063c_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1a527063c_kindPair _other) { return !this->operator==(_other); }


};
struct _1a527619d_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_tokens;
	jule::Ptr<_1a526d85a_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1a4deb40b_Log> _field_errors;
	


};
struct _1a5518e68_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_1a5518e68_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1a5518e68_floatInfo _other) { return !this->operator==(_other); }


};
struct _1a5519a90_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1a552b046_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1a552b046_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1a552b046_leftCheat _other) { return !this->operator==(_other); }


};
struct _1a552ba19_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1a552ba19_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1a552ba19_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a5545ca8_Eq(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a55460b6_Lt(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a55463c4_LtEq(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a55466d2_Gt(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a55469e0_GtEq(_1a55406ba_Const*, _1a55406ba_Const);
struct _1a55406ba_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1a55406ba_Const _other) { return _1a5545ca8_Eq(this, _other); }

	inline bool operator!=(_1a55406ba_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1a55406ba_Const _other) { return _1a55466d2_Gt(this, _other); }

	inline jule::Bool operator>=(_1a55406ba_Const _other) { return _1a55469e0_GtEq(this, _other); }

	inline jule::Bool operator<(_1a55406ba_Const _other) { return _1a55460b6_Lt(this, _other); }

	inline jule::Bool operator<=(_1a55406ba_Const _other) { return _1a55463c4_LtEq(this, _other); }


};
struct _1a8863347_Ast {
	jule::Ptr<_1a526d85a_File> _field_File;
	jule::Slice<jule::Ptr<_1a88645ce_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1a88ae44d_UseDecl>> _field_UseDecls;
	jule::Slice<_1a88641d3_Node> _field_Nodes;
	


};
struct _1a88641d3_Node {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1a88641d3_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a88641d3_Node _other) { return !this->operator==(_other); }


};
struct _1a88645ce_Directive {
	jule::Ptr<_1a52684c0_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_Args;
	


};
struct _1a88970e5_TypeDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1a88970e5_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a88970e5_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1a88976ab_IdentTypeDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> _field_Generics;
	


};
struct _1a8897997_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1a88976ab_IdentTypeDecl>> _field_Idents;
	


};
struct _1a8897d1b_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_Idents;
	jule::Ptr<_1a88970e5_TypeDecl> _field_Kind;
	


};
struct _1a8898107_SptrTypeDecl {
	jule::Ptr<_1a88970e5_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a8898107_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a8898107_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a8898503_SlcTypeDecl {
	jule::Ptr<_1a88970e5_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a8898503_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a8898503_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a88987de_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> _field_Types;
	


};
struct _1a8898aca_PtrTypeDecl {
	jule::Ptr<_1a88970e5_TypeDecl> _field_Elem;
	

	inline bool operator==(_1a8898aca_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a8898aca_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a88992a1_ArrTypeDecl {
	jule::Ptr<_1a88970e5_TypeDecl> _field_Elem;
	jule::Ptr<_1a889b270_Expr> _field_Size;
	

	inline bool operator==(_1a88992a1_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1a88992a1_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a88999aa_MapTypeDecl {
	jule::Ptr<_1a88970e5_TypeDecl> _field_Key;
	jule::Ptr<_1a88970e5_TypeDecl> _field_Val;
	

	inline bool operator==(_1a88999aa_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a88999aa_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a8899d62_RetTypeDecl {
	jule::Ptr<_1a88970e5_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_Idents;
	


};
struct _1a889b270_Expr {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a52684c0_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1a889b270_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a889b270_Expr _other) { return !this->operator==(_other); }


};
struct _1a889b55b_RangeExpr {
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	

	inline bool operator==(_1a889b55b_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a889b55b_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1a889bb11_UseExpr {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	

	inline bool operator==(_1a889bb11_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a889bb11_UseExpr _other) { return !this->operator==(_other); }


};
struct _1a889bdec_TupleExpr {
	jule::Slice<jule::Ptr<_1a889b270_Expr>> _field_Expr;
	


};
struct _1a889c2a4_LitExpr {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1a889c2a4_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a889c2a4_LitExpr _other) { return !this->operator==(_other); }


};
struct _1a889c8e2_UnsafeExpr {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	

	inline bool operator==(_1a889c8e2_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a889c8e2_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1a889cd65_IdentExpr {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1a889cd65_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1a889cd65_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1a889d56e_UnaryExpr {
	jule::Ptr<_1a52684c0_Token> _field_Op;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	

	inline bool operator==(_1a889d56e_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a889d56e_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1a889d926_VariadicExpr {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	

	inline bool operator==(_1a889d926_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a889d926_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1a889dccd_CastExpr {
	jule::Ptr<_1a88970e5_TypeDecl> _field_Kind;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	

	inline bool operator==(_1a889dccd_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a889dccd_CastExpr _other) { return !this->operator==(_other); }


};
struct _1a889e185_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_Ns;
	jule::Ptr<_1a52684c0_Token> _field_Ident;
	


};
struct _1a889e608_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	jule::Ptr<_1a52684c0_Token> _field_Ident;
	

	inline bool operator==(_1a889e608_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a889e608_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1a889ea7b_BinopExpr {
	jule::Ptr<_1a889b270_Expr> _field_Left;
	jule::Ptr<_1a889b270_Expr> _field_Right;
	jule::Ptr<_1a52684c0_Token> _field_Op;
	

	inline bool operator==(_1a889ea7b_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a889ea7b_BinopExpr _other) { return !this->operator==(_other); }


};
struct _1a88a0186_FnCallExpr {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a889b270_Expr>> _field_Args;
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1a88a0b15_FieldExprPair {
	jule::Ptr<_1a52684c0_Token> _field_Field;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	

	inline bool operator==(_1a88a0b15_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88a0b15_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1a88a13da_StructLit {
	jule::Ptr<_1a52684c0_Token> _field_End;
	jule::Ptr<_1a88970e5_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a889b270_Expr>> _field_Exprs;
	


};
struct _1a88a185d_BraceLit {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a52684c0_Token> _field_End;
	jule::Slice<jule::Ptr<_1a889b270_Expr>> _field_Exprs;
	


};
struct _1a88a2243_KeyValPair {
	jule::Ptr<_1a889b270_Expr> _field_Key;
	jule::Ptr<_1a889b270_Expr> _field_Val;
	jule::Ptr<_1a52684c0_Token> _field_Colon;
	

	inline bool operator==(_1a88a2243_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1a88a2243_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1a88a28b4_SliceExpr {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a52684c0_Token> _field_End;
	jule::Slice<jule::Ptr<_1a889b270_Expr>> _field_Exprs;
	


};
struct _1a88a3222_IndexingExpr {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a52684c0_Token> _field_End;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	jule::Ptr<_1a889b270_Expr> _field_Index;
	

	inline bool operator==(_1a88a3222_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a88a3222_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1a88a382c_SlicingExpr {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a52684c0_Token> _field_End;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	jule::Ptr<_1a889b270_Expr> _field_Start;
	jule::Ptr<_1a889b270_Expr> _field_To;
	

	inline bool operator==(_1a88a382c_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1a88a382c_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1a88a3b18_Constraint {
	jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> _field_Mask;
	


};
struct _1a88a408b_GenericDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a88a3b18_Constraint> _field_Constraint;
	

	inline bool operator==(_1a88a408b_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1a88a408b_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1a88a4443_LabelSt {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a88a4443_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a88a4443_LabelSt _other) { return !this->operator==(_other); }


};
struct _1a88a47ea_GotoSt {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a52684c0_Token> _field_Label;
	

	inline bool operator==(_1a88a47ea_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a88a47ea_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a88a4ad6_FallSt {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	

	inline bool operator==(_1a88a4ad6_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1a88a4ad6_FallSt _other) { return !this->operator==(_other); }


};
struct _1a88a51e1_AssignLeft {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	

	inline bool operator==(_1a88a51e1_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88a51e1_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1a88a5730_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1a52684c0_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1a88a51e1_AssignLeft>> _field_Left;
	jule::Ptr<_1a889b270_Expr> _field_Right;
	


};
struct _1a88a6621_Stmt {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1a88a6621_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a88a6621_Stmt _other) { return !this->operator==(_other); }


};
struct _1a88a6c2b_ScopeTree {
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1a88a6621_Stmt> _field_Stmts;
	jule::Ptr<_1a52684c0_Token> _field_End;
	


};
struct _1a88a7402_ParamDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a88970e5_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a88a7402_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a88a7402_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1a88a8722_FnDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a88645ce_Directive>> _field_Directives;
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>> _field_Generics;
	jule::Ptr<_1a8899d62_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1a88a7402_ParamDecl>> _field_Params;
	


};
struct _1a88a9701_VarDecl {
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_Scope;
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1a88645ce_Directive>> _field_Directives;
	jule::Ptr<_1a88970e5_TypeDecl> _field_Kind;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	


};
struct _1a88a9aa8_RetSt {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	

	inline bool operator==(_1a88a9aa8_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88a9aa8_RetSt _other) { return !this->operator==(_other); }


};
struct _1a88aa218_Iter {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a88aa218_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a88aa218_Iter _other) { return !this->operator==(_other); }


};
struct _1a88aa9dd_WhileKind {
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a52684c0_Token> _field_NextToken;
	

	inline bool operator==(_1a88aa9dd_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1a88aa9dd_WhileKind _other) { return !this->operator==(_other); }


};
struct _1a88ab37e_RangeKind {
	jule::Ptr<_1a52684c0_Token> _field_InToken;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	jule::Ptr<_1a88a9701_VarDecl> _field_KeyA;
	jule::Ptr<_1a88a9701_VarDecl> _field_KeyB;
	

	inline bool operator==(_1a88ab37e_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a88ab37e_RangeKind _other) { return !this->operator==(_other); }


};
struct _1a88ab736_BreakSt {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a52684c0_Token> _field_Label;
	

	inline bool operator==(_1a88ab736_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a88ab736_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a88abadd_ContSt {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a52684c0_Token> _field_Label;
	

	inline bool operator==(_1a88abadd_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a88abadd_ContSt _other) { return !this->operator==(_other); }


};
struct _1a88ac061_If {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a88ac061_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a88ac061_If _other) { return !this->operator==(_other); }


};
struct _1a88ac418_Else {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_Scope;
	

	inline bool operator==(_1a88ac418_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a88ac418_Else _other) { return !this->operator==(_other); }


};
struct _1a88ac88b_Conditional {
	jule::Ptr<_1a88ac061_If> _field_Head;
	jule::Slice<jule::Ptr<_1a88ac061_If>> _field_Tail;
	jule::Ptr<_1a88ac418_Else> _field_Default;
	


};
struct _1a88ad062_TypeAliasDecl {
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a88970e5_TypeDecl> _field_Kind;
	

	inline bool operator==(_1a88ad062_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a88ad062_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1a88ad4d5_Case {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a889b270_Expr>> _field_Exprs;
	


};
struct _1a88adbab_MatchCase {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a52684c0_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a88ad4d5_Case>> _field_Cases;
	jule::Ptr<_1a88ac418_Else> _field_Default;
	


};
struct _1a88ae44d_UseDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1a88ae8c1_EnumItemDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	

	inline bool operator==(_1a88ae8c1_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88ae8c1_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1a88b03e9_EnumDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a88970e5_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a88ae8c1_EnumItemDecl>> _field_Items;
	jule::Ptr<_1a52684c0_Token> _field_End;
	


};
struct _1a88b0bbe_TypeEnumItemDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a88970e5_TypeDecl> _field_Kind;
	

	inline bool operator==(_1a88b0bbe_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a88b0bbe_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1a88b12c9_TypeEnumDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a88b0bbe_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1a52684c0_Token> _field_End;
	


};
struct _1a88b153d_FieldDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a88970e5_TypeDecl> _field_Kind;
	jule::Ptr<_1a889b270_Expr> _field_Default;
	

	inline bool operator==(_1a88b153d_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a88b153d_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1a88b1d8a_StructDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a52684c0_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a88b153d_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a88645ce_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>> _field_Generics;
	


};
struct _1a88b2561_TraitDecl {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a52684c0_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a88a8722_FnDecl>> _field_Methods;
	


};
struct _1a88b2b6b_Impl {
	jule::Ptr<_1a52684c0_Token> _field_End;
	jule::Ptr<_1a88970e5_TypeDecl> _field_Base;
	jule::Ptr<_1a88970e5_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a88a8722_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1a88a9701_VarDecl>> _field_Statics;
	


};
struct _1a88b4266_Field {
	jule::Ptr<_1a88b6d3a_Struct> _field_Owner;
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a86b6651_TypeSymbol> _field_Kind;
	jule::Ptr<_1a889b270_Expr> _field_Default;
	

	inline bool operator==(_1a88b4266_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a88b4266_Field _other) { return !this->operator==(_other); }


};
struct _1a88b6026_Operators {
	jule::Ptr<_1a88cee0d_FnIns> _field_Eq;
	jule::Ptr<_1a88cee0d_FnIns> _field_Gt;
	jule::Ptr<_1a88cee0d_FnIns> _field_GtEq;
	jule::Ptr<_1a88cee0d_FnIns> _field_Lt;
	jule::Ptr<_1a88cee0d_FnIns> _field_LtEq;
	jule::Ptr<_1a88cee0d_FnIns> _field_Shl;
	jule::Ptr<_1a88cee0d_FnIns> _field_Shr;
	jule::Ptr<_1a88cee0d_FnIns> _field_Add;
	jule::Ptr<_1a88cee0d_FnIns> _field_Sub;
	jule::Ptr<_1a88cee0d_FnIns> _field_Div;
	jule::Ptr<_1a88cee0d_FnIns> _field_Mul;
	jule::Ptr<_1a88cee0d_FnIns> _field_Mod;
	jule::Ptr<_1a88cee0d_FnIns> _field_BitAnd;
	jule::Ptr<_1a88cee0d_FnIns> _field_BitOr;
	jule::Ptr<_1a88cee0d_FnIns> _field_BitXor;
	jule::Ptr<_1a88cee0d_FnIns> _field_Neg;
	jule::Ptr<_1a88cee0d_FnIns> _field_Pos;
	jule::Ptr<_1a88cee0d_FnIns> _field_BitNot;
	jule::Ptr<_1a88cee0d_FnIns> _field_AddAssign;
	jule::Ptr<_1a88cee0d_FnIns> _field_SubAssign;
	jule::Ptr<_1a88cee0d_FnIns> _field_DivAssign;
	jule::Ptr<_1a88cee0d_FnIns> _field_MulAssign;
	jule::Ptr<_1a88cee0d_FnIns> _field_ModAssign;
	jule::Ptr<_1a88cee0d_FnIns> _field_ShlAssign;
	jule::Ptr<_1a88cee0d_FnIns> _field_ShrAssign;
	jule::Ptr<_1a88cee0d_FnIns> _field_BitOrAssign;
	jule::Ptr<_1a88cee0d_FnIns> _field_BitAndAssign;
	jule::Ptr<_1a88cee0d_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1a88b6026_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1a88b6026_Operators _other) { return !this->operator==(_other); }


};
struct _1a88b6d3a_Struct {
	jule::Ptr<_1a89465e5_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> _field_Uses;
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a88b4266_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1a88cc25c_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a8966901_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1a88645ce_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1a88de47d_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1a88b9b51_StructIns>> _field_Instances;
	


};
struct _1a88b915b_FieldIns {
	jule::Ptr<_1a88b4266_Field> _field_Decl;
	jule::Ptr<_1a86ae79d_TypeKind> _field_Kind;
	jule::Ptr<_1a865dbe2_Data> _field_Default;
	

	inline bool operator==(_1a88b915b_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a88b915b_FieldIns _other) { return !this->operator==(_other); }


};
struct _1a88bda56_OperandExprModel {
	jule::Ptr<_1a86ae79d_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1a88bda56_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1a88bda56_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1a88be01d_BinopExprModel {
	jule::Ptr<_1a88bda56_OperandExprModel> _field_Left;
	jule::Ptr<_1a88bda56_OperandExprModel> _field_Right;
	jule::Ptr<_1a52684c0_Token> _field_Op;
	

	inline bool operator==(_1a88be01d_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a88be01d_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a88be3c5_UnaryExprModel {
	jule::Ptr<_1a865dbe2_Data> _field_Expr;
	jule::Ptr<_1a52684c0_Token> _field_Op;
	

	inline bool operator==(_1a88be3c5_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a88be3c5_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a88be8c0_StructArgExprModel {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a88b915b_FieldIns> _field_Field;
	jule::Ptr<_1a865dbe2_Data> _field_Expr;
	

	inline bool operator==(_1a88be8c0_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88be8c0_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1a88bec44_StructLitExprModel {
	jule::Ptr<_1a88b9b51_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1a88be8c0_StructArgExprModel>> _field_Args;
	


};
struct _1a88c0052_AllocStructLitExprModel {
	jule::Ptr<_1a88bec44_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1a88c0052_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1a88c0052_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c05a2_CastingExprModel {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a86ae79d_TypeKind> _field_Kind;
	jule::Ptr<_1a86ae79d_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1a88c05a2_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1a88c05a2_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c0e54_FnCallExprModel {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a88cee0d_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1a891e38c_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1a88c130b_SliceExprModel {
	jule::Ptr<_1a86ae79d_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1a88c177e_IndexingExprModel {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a865dbe2_Data> _field_Expr;
	jule::Ptr<_1a865dbe2_Data> _field_Index;
	

	inline bool operator==(_1a88c177e_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a88c177e_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c1b36_AnonFnExprModel {
	jule::Ptr<_1a88cee0d_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1a88c1b36_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1a88c1b36_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c1edd_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1a88c1edd_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a88c1edd_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c2461_MapExprModel {
	jule::Ptr<_1a86ae79d_TypeKind> _field_KeyKind;
	jule::Ptr<_1a86ae79d_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1a88c1edd_KeyValPairExprModel>> _field_Entries;
	


};
struct _1a88c29a0_SlicingExprModel {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1a88c29a0_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a88c29a0_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c2ede_TraitSubIdentExprModel {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a88cc25c_Fn> _field_Method;
	jule::Ptr<_1a88de47d_Trait> _field_Trt;
	

	inline bool operator==(_1a88c2ede_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1a88c2ede_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c37c5_StructSubIdentExprModel {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Ptr<_1a865dbe2_Data> _field_Expr;
	jule::Ptr<_1a88cee0d_FnIns> _field_Method;
	jule::Ptr<_1a88b915b_FieldIns> _field_Field;
	jule::Ptr<_1a88b9b51_StructIns> _field_Owner;
	

	inline bool operator==(_1a88c37c5_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1a88c37c5_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c3b6b_StructStaticIdentExprModel {
	jule::Ptr<_1a88b9b51_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a88cee0d_FnIns> _field_Method;
	

	inline bool operator==(_1a88c3b6b_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1a88c3b6b_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c4034_ArrayExprModel {
	jule::Ptr<_1a86bd35b_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1a88c4320_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	inline bool operator==(_1a88c4320_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a88c4320_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c4881_CommonSubIdentExprModel {
	jule::Ptr<_1a86ae79d_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a88c4881_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a88c4881_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c4b7d_TupleExprModel {
	jule::Slice<jule::Ptr<_1a865dbe2_Data>> _field_Datas;
	


};
struct _1a88c5057_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1a88c5057_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a88c5057_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c5442_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1a88c5442_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a88c5442_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c5761_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a88c5761_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88c5761_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c5b4b_BuiltinNewCallExprModel {
	jule::Ptr<_1a86ae79d_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1a88c5b4b_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1a88c5b4b_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c6036_BuiltinPanicCallExprModel {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a88c6036_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88c6036_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c64dc_BuiltinAssertCallExprModel {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1a88c64dc_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1a88c64dc_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c6993_BuiltinMakeCallExprModel {
	jule::Ptr<_1a86ae79d_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1a88c6993_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1a88c6993_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c6d7d_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1a88c6d7d_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1a88c6d7d_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c719c_BuiltinLenCallExprModel {
	jule::Ptr<_1a865dbe2_Data> _field_Expr;
	

	inline bool operator==(_1a88c719c_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88c719c_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c74bb_BuiltinCapCallExprModel {
	jule::Ptr<_1a865dbe2_Data> _field_Expr;
	

	inline bool operator==(_1a88c74bb_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88c74bb_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c7b70_BuiltinDeleteCallExprModel {
	jule::Ptr<_1a865dbe2_Data> _field_Dest;
	jule::Ptr<_1a865dbe2_Data> _field_Key;
	

	inline bool operator==(_1a88c7b70_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1a88c7b70_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c7ed3_BuiltinCopyCallExprModel {
	jule::Ptr<_1a865dbe2_Data> _field_Dest;
	jule::Ptr<_1a865dbe2_Data> _field_Src;
	

	inline bool operator==(_1a88c7ed3_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1a88c7ed3_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c83bd_BuiltinErrorCallExprModel {
	jule::Ptr<_1a88cee0d_FnIns> _field_Func;
	jule::Ptr<_1a865dbe2_Data> _field_Err;
	

	inline bool operator==(_1a88c83bd_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1a88c83bd_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c86ba_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a88c86ba_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88c86ba_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c89a6_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a88c89a6_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88c89a6_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c8c92_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1a88c8c92_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1a88c8c92_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c90a0_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a88c90a0_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88c90a0_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1a88c9468_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1a88c9754_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a88c9754_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a88c9754_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1a88ca216_RetType {
	jule::Ptr<_1a86b6651_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_Idents;
	


};
struct _1a88ca920_Param {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a86b6651_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1a88ca920_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a88ca920_Param _other) { return !this->operator==(_other); }


};
struct _1a88cc25c_Fn {
	jule::Ptr<_1a89465e5_Sema> _field_sema;
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a88645ce_Directive>> _field_Directives;
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>> _field_Generics;
	jule::Ptr<_1a88ca216_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1a88ca920_Param>> _field_Params;
	jule::Ptr<_1a88b6d3a_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1a88cee0d_FnIns>> _field_Instances;
	


};
struct _1a88ce03e_ParamIns {
	jule::Ptr<_1a88ca920_Param> _field_Decl;
	jule::Ptr<_1a86ae79d_TypeKind> _field_Kind;
	

	inline bool operator==(_1a88ce03e_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a88ce03e_ParamIns _other) { return !this->operator==(_other); }


};
struct _1a88cee0d_FnIns {
	jule::Ptr<_1a88b9b51_StructIns> _field_Owner;
	jule::Ptr<_1a88cc25c_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1a86ad01b_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>> _field_Params;
	jule::Ptr<_1a86ae79d_TypeKind> _field_Result;
	jule::Ptr<_1a891e38c_Scope> _field_Scope;
	jule::Ptr<_1a88d2d67_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1a88d2d67_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1a88d4198_Pass {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1a88d4198_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1a88d4198_Pass _other) { return !this->operator==(_other); }


};
struct _1a88d88d9_symbolBuilder {
	jule::Ptr<_1a88d88d9_symbolBuilder> _field_owner;
	jule::Trait<_1a893a672_Importer> _field_importer;
	jule::Slice<_1a4deb40b_Log> _field_errors;
	jule::Ptr<_1a8863347_Ast> _field_ast;
	jule::Ptr<_1a89ab380_SymbolTable> _field_table;
	


};
struct _1a88de47d_Trait {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_1a86b6651_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1a88cc25c_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> _field_Implemented;
	


};
struct _1a88e121b_EnumItem {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a865ec15_Value> _field_Value;
	

	inline bool operator==(_1a88e121b_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a88e121b_EnumItem _other) { return !this->operator==(_other); }


};
struct _1a88e1c11_Enum {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a86b6651_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a88e121b_EnumItem>> _field_Items;
	


};
struct _1a88e2c78_TypeEnumItem {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a86b6651_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1a88e2c78_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a88e2c78_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1a88e330b_TypeEnum {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a88e2c78_TypeEnumItem>> _field_Items;
	


};
struct _1a88e5462_comptimeRange {
	jule::Trait<_1a88e5286_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1a88e5462_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a88e5462_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1a88e5e57_comptimeStructField {
	jule::Ptr<_1a88b915b_FieldIns> _field_field;
	

	inline bool operator==(_1a88e5e57_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a88e5e57_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1a88ec7dd_comptimeStructFields {
	jule::Slice<jule::Ptr<_1a88b915b_FieldIns>> _field_fields;
	


};
struct _1a88edcb7_comptimeStatic {
	jule::Ptr<_1a8966901_Var> _field_field;
	

	inline bool operator==(_1a88edcb7_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a88edcb7_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1a8900879_comptimeStatics {
	jule::Slice<jule::Ptr<_1a8966901_Var>> _field_fields;
	


};
struct _1a8901cba_comptimeEnumField {
	jule::Ptr<_1a88e121b_EnumItem> _field_field;
	

	inline bool operator==(_1a8901cba_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a8901cba_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1a8902edb_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1a88e121b_EnumItem>> _field_fields;
	


};
struct _1a890453c_comptimeParam {
	jule::Ptr<_1a88ce03e_ParamIns> _field_param;
	

	inline bool operator==(_1a890453c_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1a890453c_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1a89065d8_comptimeParams {
	jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>> _field_params;
	


};
struct _1a8907aa1_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1a8909069_comptimeTypeInfo>> _field_types;
	


};
struct _1a8909069_comptimeTypeInfo {
	jule::Ptr<_1a86ae79d_TypeKind> _field_base;
	

	inline bool operator==(_1a8909069_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1a8909069_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1a890ea64_comptimeValue {
	jule::Ptr<_1a865dbe2_Data> _field_data;
	

	inline bool operator==(_1a890ea64_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a890ea64_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1a8912160_comptimeFiles {
	jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>> _field_files;
	


};
struct _1a8913628_comptimeFile {
	jule::Ptr<_1a89ab380_SymbolTable> _field_file;
	

	inline bool operator==(_1a8913628_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1a8913628_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1a8917484_constraintChecker {
	jule::Ptr<_1a89465e5_Sema> _field_s;
	jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1a86ad01b_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> _field_genericsA;
	jule::Ptr<_1a88cee0d_FnIns> _field_fi;
	jule::Ptr<_1a88b9b51_StructIns> _field_si;
	jule::Ptr<_1a52684c0_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1a8919332_Impl {
	jule::Ptr<_1a88970e5_TypeDecl> _field_Base;
	jule::Ptr<_1a88970e5_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a88cc25c_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a8966901_Var>> _field_Statics;
	


};
struct _1a891e38c_Scope {
	jule::Ptr<_1a891e38c_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1a891e788_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a891e38c_Scope> _field_Scope;
	

	inline bool operator==(_1a891e788_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a891e788_If _other) { return !this->operator==(_other); }


};
struct _1a891ea74_Else {
	jule::Ptr<_1a891e38c_Scope> _field_Scope;
	

	inline bool operator==(_1a891ea74_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a891ea74_Else _other) { return !this->operator==(_other); }


};
struct _1a891ede8_Conditional {
	jule::Slice<jule::Ptr<_1a891e788_If>> _field_Elifs;
	jule::Ptr<_1a891ea74_Else> _field_Default;
	


};
struct _1a89201d4_InfIter {
	jule::Ptr<_1a891e38c_Scope> _field_Scope;
	

	inline bool operator==(_1a89201d4_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a89201d4_InfIter _other) { return !this->operator==(_other); }


};
struct _1a8920657_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a891e38c_Scope> _field_Scope;
	

	inline bool operator==(_1a8920657_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a8920657_WhileIter _other) { return !this->operator==(_other); }


};
struct _1a892103c_RangeIter {
	jule::Ptr<_1a865dbe2_Data> _field_Expr;
	jule::Ptr<_1a891e38c_Scope> _field_Scope;
	jule::Ptr<_1a8966901_Var> _field_KeyA;
	jule::Ptr<_1a8966901_Var> _field_KeyB;
	

	inline bool operator==(_1a892103c_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a892103c_RangeIter _other) { return !this->operator==(_other); }


};
struct _1a8921438_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1a8921438_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1a8921438_ContSt _other) { return !this->operator==(_other); }


};
struct _1a89217e0_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1a89217e0_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1a89217e0_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a8921acb_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1a8921acb_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a8921acb_Label _other) { return !this->operator==(_other); }


};
struct _1a8921db7_GotoSt {
	jule::Str _field_Ident;
	

	inline bool operator==(_1a8921db7_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a8921db7_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a892226e_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1a892226e_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a892226e_Postfix _other) { return !this->operator==(_other); }


};
struct _1a89226e2_Assign {
	jule::Ptr<_1a88bda56_OperandExprModel> _field_L;
	jule::Ptr<_1a88bda56_OperandExprModel> _field_R;
	jule::Ptr<_1a52684c0_Token> _field_Op;
	

	inline bool operator==(_1a89226e2_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a89226e2_Assign _other) { return !this->operator==(_other); }


};
struct _1a8922a99_MultiAssign {
	jule::Slice<jule::Ptr<_1a865dbe2_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1a89231a4_Match {
	jule::Ptr<_1a865dbe2_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1a8923bee_Case>> _field_Cases;
	jule::Ptr<_1a8923bee_Case> _field_Default;
	


};
struct _1a8923bee_Case {
	jule::Ptr<_1a89231a4_Match> _field_Owner;
	jule::Ptr<_1a891e38c_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1a865dbe2_Data>> _field_Exprs;
	jule::Ptr<_1a8923bee_Case> _field_Next;
	


};
struct _1a89242c6_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1a89242c6_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1a89242c6_FallSt _other) { return !this->operator==(_other); }


};
struct _1a8924628_RetSt {
	jule::Ptr<_1a88cee0d_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a8924628_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8924628_RetSt _other) { return !this->operator==(_other); }


};
struct _1a8924c33_scopeLabel {
	jule::Ptr<_1a52684c0_Token> _field_token;
	jule::Ptr<_1a8921acb_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1a8925eba_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1a8924c33_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1a8924c33_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1a89251a6_scopeGoto {
	jule::Ptr<_1a88a47ea_GotoSt> _field_gt;
	jule::Ptr<_1a8925eba_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1a89251a6_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a89251a6_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1a8925eba_scopeChecker {
	jule::Ptr<_1a52684c0_Token> _field_calledFrom;
	jule::Ptr<_1a89465e5_Sema> _field_s;
	jule::Ptr<_1a88cee0d_FnIns> _field_owner;
	jule::Ptr<_1a8925eba_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1a89ab380_SymbolTable> _field_table;
	jule::Ptr<_1a891e38c_Scope> _field_scope;
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_tree;
	jule::Ptr<_1a88cee0d_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a8924c33_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a89251a6_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1a8925eba_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a8925eba_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1a8937240_directiveChecker {
	jule::Ptr<_1a89465e5_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1a88645ce_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1a8937240_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1a8937240_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1a893d323_ImportInfo {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_Selected;
	jule::Ptr<_1a8940e5d_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1a8940e5d_Package {
	jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>> _field_Files;
	


};
struct _1a8945acd_commonSemaMeta {
	jule::Slice<jule::Ptr<_1a8909069_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1a89465e5_Sema {
	jule::Slice<_1a4deb40b_Log> _field_errors;
	jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>> _field_files;
	jule::Ptr<_1a89ab380_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1a8945acd_commonSemaMeta> _field_meta;
	


};
struct _1a896369a_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1a89658ab_IterRelation {
	jule::Ptr<_1a8966901_Var> _field_Range;
	

	inline bool operator==(_1a89658ab_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1a89658ab_IterRelation _other) { return !this->operator==(_other); }


};
struct _1a8966901_Var {
	jule::Ptr<_1a891e38c_Scope> _field_Scope;
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a86b6651_TypeSymbol> _field_Kind;
	jule::Ptr<_1a865ec15_Value> _field_Value;
	jule::Ptr<_1a88d2d67_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1a88645ce_Directive>> _field_Directives;
	jule::Ptr<_1a89658ab_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1a8966901_Var>> _field_Depends;
	


};
struct _1a896769e_FuncPattern {
	


};
struct _1a8999516_typeCompatibilityChecker {
	jule::Ptr<_1a89465e5_Sema> _field_s;
	jule::Ptr<_1a86ae79d_TypeKind> _field_dest;
	jule::Ptr<_1a86ae79d_TypeKind> _field_src;
	jule::Ptr<_1a52684c0_Token> _field_errorToken;
	

	inline bool operator==(_1a8999516_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a8999516_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1a899b13e_assignTypeChecker {
	jule::Ptr<_1a89465e5_Sema> _field_s;
	jule::Ptr<_1a86ae79d_TypeKind> _field_dest;
	jule::Ptr<_1a865dbe2_Data> _field_d;
	jule::Ptr<_1a52684c0_Token> _field_errorToken;
	

	inline bool operator==(_1a899b13e_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a899b13e_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1a899cb24_dynamicTypeAnnotation {
	jule::Ptr<_1a8683860_Eval> _field_e;
	jule::Ptr<_1a88cee0d_FnIns> _field_f;
	jule::Ptr<_1a88ce03e_ParamIns> _field_p;
	jule::Ptr<_1a865dbe2_Data> _field_a;
	jule::Ptr<_1a52684c0_Token> _field_errorToken;
	jule::Ptr<_1a86ae79d_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1a88970e5_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> _field_ignored;
	


};
struct _1a89a251e_fnCallArgChecker {
	jule::Ptr<_1a8683860_Eval> _field_e;
	jule::Slice<jule::Ptr<_1a889b270_Expr>> _field_args;
	jule::Ptr<_1a52684c0_Token> _field_errorToken;
	jule::Ptr<_1a88cee0d_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> _field_ignored;
	


};
struct _1a89a51d1_structLitChecker {
	jule::Ptr<_1a8683860_Eval> _field_e;
	jule::Ptr<_1a52684c0_Token> _field_errorToken;
	jule::Ptr<_1a88b9b51_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1a88be8c0_StructArgExprModel>> _field_args;
	


};
struct _1a89a6cb5_rangeChecker {
	jule::Ptr<_1a8925eba_scopeChecker> _field_sc;
	jule::Ptr<_1a88ab37e_RangeKind> _field_rang;
	jule::Ptr<_1a892103c_RangeIter> _field_Kind;
	jule::Ptr<_1a865dbe2_Data> _field_d;
	

	inline bool operator==(_1a89a6cb5_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a89a6cb5_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1a89a92b2_retTypeChecker {
	jule::Ptr<_1a8925eba_scopeChecker> _field_sc;
	jule::Ptr<_1a88cee0d_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1a889b270_Expr>> _field_exprs;
	jule::Ptr<_1a52684c0_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1a89ab380_SymbolTable {
	jule::Ptr<_1a526d85a_File> _field_File;
	jule::Slice<_1a88d4198_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1a893d323_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1a8966901_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a88cc25c_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1a88de47d_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1a88e1c11_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1a88e330b_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1a8919332_Impl>> _field_Impls;
	


};
struct _1a865dbe2_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1a86ae79d_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1a55406ba_Const> _field_Constant;
	

	inline bool operator==(_1a865dbe2_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1a865dbe2_Data _other) { return !this->operator==(_other); }


};
struct _1a865ec15_Value {
	jule::Ptr<_1a889b270_Expr> _field_Expr;
	jule::Ptr<_1a865dbe2_Data> _field_Data;
	

	inline bool operator==(_1a865ec15_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a865ec15_Value _other) { return !this->operator==(_other); }


};
struct _1a8683860_Eval {
	jule::Ptr<_1a89465e5_Sema> _field_s;
	jule::Trait<_1a86ccac9_Lookup> _field_lookup;
	jule::Ptr<_1a86ae79d_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1a8966901_Var> _field_owner;
	jule::Ptr<_1a88b915b_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1a8683860_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1a8683860_Eval _other) { return !this->operator==(_other); }


};
struct _1a86a07a0_unaryEval {
	jule::Ptr<_1a8683860_Eval> _field_e;
	jule::Ptr<_1a865dbe2_Data> _field_d;
	jule::Ptr<_1a889d56e_UnaryExpr> _field_u;
	

	inline bool operator==(_1a86a07a0_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a86a07a0_unaryEval _other) { return !this->operator==(_other); }


};
struct _1a86a2571_binaryEval {
	jule::Ptr<_1a8683860_Eval> _field_e;
	jule::Ptr<_1a865dbe2_Data> _field_l;
	jule::Ptr<_1a865dbe2_Data> _field_r;
	jule::Ptr<_1a52684c0_Token> _field_op;
	

	inline bool operator==(_1a86a2571_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a86a2571_binaryEval _other) { return !this->operator==(_other); }


};
struct _1a86ad01b_InsGeneric {
	jule::Ptr<_1a86ae79d_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> _field_Constraint;
	


};
struct _1a86ada55_TypeAlias {
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a86b6651_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> _field_Generics;
	


};
struct _1a86ae79d_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1a86ae33b_Kind> _field_Kind;
	

	inline bool operator==(_1a86ae79d_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a86ae79d_TypeKind _other) { return !this->operator==(_other); }


};
struct _1a86b6651_TypeSymbol {
	jule::Ptr<_1a88970e5_TypeDecl> _field_Decl;
	jule::Ptr<_1a86ae79d_TypeKind> _field_Kind;
	

	inline bool operator==(_1a86b6651_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a86b6651_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1a86b7003_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1a86b7003_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a86b7003_Prim _other) { return !this->operator==(_other); }


};
struct _1a86ba754_Sptr {
	jule::Ptr<_1a86ae79d_TypeKind> _field_Elem;
	

	inline bool operator==(_1a86ba754_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a86ba754_Sptr _other) { return !this->operator==(_other); }


};
struct _1a86bb1b1_Slc {
	jule::Ptr<_1a86ae79d_TypeKind> _field_Elem;
	

	inline bool operator==(_1a86bb1b1_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a86bb1b1_Slc _other) { return !this->operator==(_other); }


};
struct _1a86bbcb6_Tuple {
	jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> _field_Types;
	


};
struct _1a86bc767_Map {
	jule::Ptr<_1a86ae79d_TypeKind> _field_Key;
	jule::Ptr<_1a86ae79d_TypeKind> _field_Val;
	

	inline bool operator==(_1a86bc767_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a86bc767_Map _other) { return !this->operator==(_other); }


};
struct _1a86bd35b_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1a86ae79d_TypeKind> _field_Elem;
	

	inline bool operator==(_1a86bd35b_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a86bd35b_Arr _other) { return !this->operator==(_other); }


};
struct _1a86bdcb8_Ptr {
	jule::Ptr<_1a86ae79d_TypeKind> _field_Elem;
	

	inline bool operator==(_1a86bdcb8_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a86bdcb8_Ptr _other) { return !this->operator==(_other); }


};
struct _1a86bec0e_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1a86bec0e_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a86bec0e_referencer _other) { return !this->operator==(_other); }


};
struct _1a86c0ade_typeChecker {
	jule::Ptr<_1a89465e5_Sema> _field_s;
	jule::Trait<_1a86ccac9_Lookup> _field_rootLookup;
	jule::Trait<_1a86ccac9_Lookup> _field_lookup;
	jule::Ptr<_1a86bec0e_referencer> _field_referencer;
	jule::Ptr<_1a88d2d67_ReferenceStack> _field_refers;
	jule::Ptr<_1a52684c0_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1a86ada55_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1a86c7ed1_identTypeLookup {
	

	inline bool operator==(_1a86c7ed1_identTypeLookup _other) { return true; }

	inline bool operator!=(_1a86c7ed1_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1a56b3e9d_FileInfo {
	jule::Ptr<_1a8863347_Ast> _field_Ast;
	jule::Slice<_1a4deb40b_Log> _field_Errors;
	


};
struct _1a93a1626_stmt {
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1a93a1e51_scopeParser {
	jule::Ptr<_1a93bd643_parser> _field_p;
	jule::Ptr<_1a88a6c2b_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a93a1626_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1a93ad7ed_exprBuilder {
	jule::Ptr<_1a93bd643_parser> _field_p;
	

	inline bool operator==(_1a93ad7ed_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1a93ad7ed_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1a93ba134_assignInfo {
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_l;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_r;
	jule::Ptr<_1a52684c0_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1a93bd643_parser {
	jule::Ptr<_1a8863347_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1a88645ce_Directive>> _field_directives;
	jule::Slice<_1a4deb40b_Log> _field_errors;
	jule::Ptr<_1a93ad7ed_exprBuilder> _field_ep;
	


};
struct _1a93ce368_typeBuilder {
	jule::Ptr<_1a93bd643_parser> _field_p;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1a8b2e415_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	inline bool operator==(_1a8b2e415_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1a8b2e415_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1a8b30768_directiveEval {
	jule::Slice<_1a4deb40b_Log> _field_logs;
	jule::Ptr<_1a88645ce_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a93d30d6_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1a893d323_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1a93d7d88_OrderedDefines {
	jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a8966901_Var>> _field_Globals;
	


};
struct _1a93d80ec_defineOrderer {
	

	inline bool operator==(_1a93d80ec_defineOrderer _other) { return true; }

	inline bool operator!=(_1a93d80ec_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1a9449ceb_liveTable {
	jule::Slice<jule::Ptr<_1a8966901_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1a88cee0d_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1a88b9b51_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1a88de47d_Trait>> _field_traits;
	


};
struct _1a9480e75_scopeDeadCode {
	jule::Ptr<_1a9480e75_scopeDeadCode> _field_parent;
	jule::Ptr<_1a891e38c_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a8921acb_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a8921db7_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1a9480e75_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1a9480e75_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1a9484dd0_exprDeadCode {
	jule::Ptr<_1a9480e75_scopeDeadCode> _field_s;
	

	inline bool operator==(_1a9484dd0_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1a9484dd0_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1a87839c6_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1a55406ba_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1a87839c6_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1a87839c6_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1a8783d8e_StrAppendExprModel {
	jule::Any _field_Str = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a8783d8e_StrAppendExprModel _other) {
		return 
			this->_field_Str == _other._field_Str &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8783d8e_StrAppendExprModel _other) { return !this->operator==(_other); }


};
struct _1a878417a_UnsafeBinopExprModel {
	jule::Ptr<_1a88be01d_BinopExprModel> _field_Node;
	

	inline bool operator==(_1a878417a_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1a878417a_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a8784510_UnsafeIndexingExprModel {
	jule::Ptr<_1a88c177e_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1a8784510_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1a8784510_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a8784895_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1a88c130b_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1a8784895_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1a8784895_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a8784c4c_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1a8784c4c_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1a8784c4c_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a878528b_MutSlicingExprModel {
	jule::Ptr<_1a52684c0_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1a878528b_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a878528b_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a8785775_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1a8785775_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a8785775_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
struct _1a8785a1c_InlineStdInternalNosafeStobs {
	jule::Any _field_Str = jule::Any(nullptr);
	

	inline bool operator==(_1a8785a1c_InlineStdInternalNosafeStobs _other) {
		return 
			this->_field_Str == _other._field_Str;
	}

	inline bool operator!=(_1a8785a1c_InlineStdInternalNosafeStobs _other) { return !this->operator==(_other); }


};
struct _1a8786b3e_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1a891e38c_Scope> _field_scope;
	

	inline bool operator==(_1a8786b3e_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a8786b3e_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1a8a58905_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1a8a58905_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a8a58905_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1a93d98b2_stdCacheData {
	jule::Ptr<_1a88cee0d_FnIns> _field_f;
	jule::Fn<void(_1a8a58905_exprOptimizer*,_1a93d98b2_stdCacheData*,jule::Ptr<_1a88c0e54_FnCallExprModel>*)> _field_do;
	


};
struct _1a948c04c_Optimizer {
	jule::Ptr<_1a93d5847_IR> _field_ir;
	

	inline bool operator==(_1a948c04c_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a948c04c_Optimizer _other) { return !this->operator==(_other); }


};
struct _1a8024861_AnsiEscape {
	

	inline bool operator==(_1a8024861_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a8024861_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1a8026236_Logger {
	

	inline bool operator==(_1a8026236_Logger _other) { return true; }

	inline bool operator!=(_1a8026236_Logger _other) { return !this->operator==(_other); }


};
struct _1a9d9e211_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1a9d9e211_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1a9d9e211_AbsTime _other) { return !this->operator==(_other); }


};
struct _1a9d9e8a4_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1a9d9e8a4_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a9d9e8a4_Time _other) { return !this->operator==(_other); }


};
struct _1a96056c1_scopeCoder {
	jule::Ptr<_1a9da8935_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a96056c1_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a96056c1_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1a960dbb3_exprCoder {
	jule::Ptr<_1a9da8935_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a960dbb3_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a960dbb3_exprCoder _other) { return !this->operator==(_other); }


};
struct _1a961d981_deriveCoder {
	jule::Ptr<_1a9da8935_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a961d981_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a961d981_deriveCoder _other) { return !this->operator==(_other); }


};
struct _1a9620367_TestCoder {
	jule::Ptr<_1a88b9b51_StructIns> _field_t;
	jule::Ptr<_1a88cc25c_Fn> _field_tmReset;
	jule::Ptr<_1a88cc25c_Fn> _field_tmFailed;
	jule::Ptr<_1a88cc25c_Fn> _field_tmSkipped;
	jule::Ptr<_1a9da8935_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a9620367_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a9620367_TestCoder _other) { return !this->operator==(_other); }


};
struct _1a96228a8_identCoder {
	

	inline bool operator==(_1a96228a8_identCoder _other) { return true; }

	inline bool operator!=(_1a96228a8_identCoder _other) { return !this->operator==(_other); }


};
struct _1a9da7093_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1a9da7093_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1a9da7093_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a9da755a_traitHash {
	jule::Ptr<_1a88de47d_Trait> _field_t;
	jule::Ptr<_1a88b9b51_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1a9da755a_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a9da755a_traitHash _other) { return !this->operator==(_other); }


};
struct _1a9da7912_traitCast {
	jule::Ptr<_1a88de47d_Trait> _field_t1;
	jule::Ptr<_1a88de47d_Trait> _field_t2;
	

	inline bool operator==(_1a9da7912_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1a9da7912_traitCast _other) { return !this->operator==(_other); }


};
struct _1a9db725c_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1a9db725c_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a9db725c_customType _other) { return !this->operator==(_other); }


};
struct _1a9db7c0d_typeCoder {
	jule::Ptr<_1a9da8935_ObjectCoder> _field_oc;
	jule::Ptr<_1a9dc07c6_resultCoder> _field_rc;
	

	inline bool operator==(_1a9db7c0d_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1a9db7c0d_typeCoder _other) { return !this->operator==(_other); }


};
struct _1a9dc07c6_resultCoder {
	jule::Ptr<_1a9db7c0d_typeCoder> _field_tc;
	

	inline bool operator==(_1a9dc07c6_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1a9dc07c6_resultCoder _other) { return !this->operator==(_other); }


};
struct _1acd8ac33_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1acd8ac33_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1acd8ac33_Flag _other) { return !this->operator==(_other); }


};struct _1acd8e6b5_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1acd8e6b5_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1acd8e6b5_Flag _other) { return !this->operator==(_other); }


};struct _1acd92d6c_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1acd92d6c_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1acd92d6c_Flag _other) { return !this->operator==(_other); }


};struct _1acd96568_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1acd96568_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1acd96568_Flag _other) { return !this->operator==(_other); }


};struct _1acd99c20_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1acd99c20_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1acd99c20_Flag _other) { return !this->operator==(_other); }


};
struct _1a9e2bcc7_FlagSet {
	jule::Slice<jule::Trait<_1a9e2a369_CommonFlag>> _field_flags;
	


};
struct _1a9e2e4d3_argParser {
	_1a9e2bcc7_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1a9da8935_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_1a93d5847_IR> _field_ir;
	_1a9da7093_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a9da755a_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1a9da7912_traitCast> _field_traitCastMap;
	jule::Ptr<_1a960dbb3_exprCoder> _field_ec;
	jule::Ptr<_1a96056c1_scopeCoder> _field_sc;
	jule::Ptr<_1a9db7c0d_typeCoder> _field_tc;
	jule::Ptr<_1a961d981_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1a944a1b4_ObjectDeadCode {
	_1a9449ceb_liveTable _field_live;
	jule::Ptr<_1a93d5847_IR> _field_ir;
	


};
struct _1a93d5847_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1a8940e5d_Package> _field_Main;
	jule::Slice<jule::Ptr<_1a893d323_ImportInfo>> _field_Used;
	_1a93d7d88_OrderedDefines _field_Ordered;
	


};
struct _1a88b9b51_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1a88b6d3a_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1a86ad01b_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a88b915b_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1a8966901_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1a88cc25c_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1a88d2d67_ReferenceStack> _field_Refers;
	_1a88b6026_Operators _field_Operators;
	


};
struct _1a4e88663_Cmd {
	_1a4e8c447_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a865dbe2_Data__jule_tuple_x_1a865dbe2_Data {
	jule::Ptr<_1a865dbe2_Data> __jule_result_arg0;
	jule::Ptr<_1a865dbe2_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1a88ad4d5_Case__jule_tuple_bool {
	jule::Ptr<_1a88ad4d5_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a88ad4d5_Case__jule_tuple_x_1a88ac418_Else {
	jule::Slice<jule::Ptr<_1a88ad4d5_Case>> __jule_result_arg0;
	jule::Ptr<_1a88ac418_Else> __jule_result_arg1;
};
struct __jule_tuple__1a88a63e0_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool {
	jule::Ptr<_1a88a5730_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1a88970e5_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a8899d62_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1a8899d62_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log {
	jule::Slice<jule::Ptr<_1a8863347_Ast>> __jule_result_arg0;
	jule::Slice<_1a4deb40b_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1a4deb40b_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1a4deb40b_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a93d5847_IR__jule_tuple_s_1a4deb40b_Log {
	jule::Ptr<_1a93d5847_IR> __jule_result_arg0;
	jule::Slice<_1a4deb40b_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1b619b28d_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1b619b28d_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1b619b28d_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1b619b28d_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a89ab380_SymbolTable__jule_tuple_s_1a4deb40b_Log {
	jule::Ptr<_1a89ab380_SymbolTable> __jule_result_arg0;
	jule::Slice<_1a4deb40b_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a8940e5d_Package__jule_tuple_s_1a4deb40b_Log {
	jule::Ptr<_1a8940e5d_Package> __jule_result_arg0;
	jule::Slice<_1a4deb40b_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log {
	jule::Ptr<_1a8863347_Ast> __jule_result_arg0;
	jule::Slice<_1a4deb40b_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a52684c0_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1a52684c0_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a52684c0_Token__jule_tuple_sx_1a52684c0_Token {
	jule::Slice<jule::Ptr<_1a52684c0_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1a52684c0_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1a52684c0_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> __jule_result_arg0;
	jule::Slice<_1a4deb40b_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U8 _1a4d63dac_index(_1a4d6397d_lazyBuff*, jule::I64);
inline void _1a4d64132_append(_1a4d6397d_lazyBuff*, jule::U8);
inline jule::Str _1a4d64396_string(_1a4d6397d_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>>> static__1a4d66585_Read(jule::Str);
inline jule::VoidExceptional static__1a4d66794_Create(jule::Str);
inline jule::VoidExceptional static__1a4d669a3_Remove(jule::Str);
inline jule::Ptr<_1d0a32de6_File> static__1d0a33314_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_1d0a32de6_File>> static__1d0a335ab_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1d0a33853_Read(jule::Str);
inline jule::VoidExceptional static__1d0a33ba5_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _1d0a34821_WriteStr(_1d0a32de6_File*, jule::Str*);
inline jule::VoidExceptional _1d0a349ec_Close(_1d0a32de6_File*);
inline jule::Exceptional<jule::Ptr<_1d0a32de6_File>> static__1d0b1b430_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__1d0b1b63e_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _1d0b1ba90_Write(_1d0a32de6_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1d0b1bd9d_Read(_1d0a32de6_File*, jule::Slice<jule::U8>);
inline jule::Bool _1d0a358ee_IsDir(_1d0a35536_Status*);
inline jule::Bool _1d0a35b63_IsReg(_1d0a35536_Status*);
inline jule::U64 _1d0a35dc7_Size(_1d0a35536_Status*);
inline jule::Exceptional<jule::Ptr<_1d0a35536_Status>> static__1a4d673aa_Of(jule::Str);
inline jule::U8 _1a5268833_Prec(_1a52684c0_Token*);
inline void _1a526dc23_Fill(_1a526d85a_File*, jule::Slice<jule::U8>);
inline jule::Str _1a526de87_Dir(_1a526d85a_File*);
inline jule::Str _1a526e1eb_Name(_1a526d85a_File*);
inline jule::Str _1a526e76d_GetRow(_1a526d85a_File*, jule::I64);
inline void _1a52766ed_pushErr(_1a527619d_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1a5276be8_lex(_1a527619d_lex*);
inline jule::Str _1a5277006_id(_1a527619d_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1a527726a_resume(_1a527619d_lex*);
inline void _1a52774e0_lexLineComment(_1a527619d_lex*, jule::Ptr<_1a52684c0_Token>*);
inline void _1a5277765_lexRangeComment(_1a527619d_lex*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Str _1a5277a73_num(_1a527619d_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1a5277d81_escapeSeq(_1a527619d_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1a5278238_getRune(_1a527619d_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1a5278546_lexRune(_1a527619d_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1a52787aa_lexStr(_1a527619d_lex*);
inline void _1a5278bea_newLine(_1a527619d_lex*);
inline jule::Bool _1a52791e5_isOp(_1a527619d_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1a527959c_lexBasicOps(_1a527619d_lex*, jule::Slice<jule::U8>, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1a5279954_lexId(_1a527619d_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1a5279d0b_lexNum(_1a527619d_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Ptr<_1a52684c0_Token> _1a527a070_token(_1a527619d_lex*);
inline jule::Bool _1a5523add_set(_1a552ba19_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _1a5523deb_floatBits(_1a552ba19_decimal*, _1a5518e68_floatInfo*);
inline void _1a552bd9e_assign(_1a552ba19_decimal*, jule::U64);
inline void _1a552c124_shift(_1a552ba19_decimal*, jule::I64);
inline void _1a552c399_roundDown(_1a552ba19_decimal*, jule::I64);
inline void _1a552c61e_roundUp(_1a552ba19_decimal*, jule::I64);
inline void _1a552c894_round(_1a552ba19_decimal*, jule::I64);
inline jule::U64 _1a552cb08_roundedInteger(_1a552ba19_decimal*);
inline jule::Ptr<_1a55406ba_Const> static__1a5540ae9_NewI64(jule::I64);
inline jule::Ptr<_1a55406ba_Const> static__1a5540d91_NewU64(jule::U64);
inline jule::Ptr<_1a55406ba_Const> static__1a5541138_NewBool(jule::Bool);
inline jule::Ptr<_1a55406ba_Const> static__1a55413d0_NewStr(jule::Str);
inline jule::Ptr<_1a55406ba_Const> static__1a5541677_NewF64(jule::F64);
inline jule::Ptr<_1a55406ba_Const> static__1a5541875_NewNil(void);
inline jule::I64 _1a5541eb3_ReadI64(_1a55406ba_Const*);
inline jule::U64 _1a5542227_ReadU64(_1a55406ba_Const*);
inline jule::Bool _1a554248b_ReadBool(_1a55406ba_Const*);
inline jule::Str _1a5542700_ReadStr(_1a55406ba_Const*);
inline jule::F64 _1a5542964_ReadF64(_1a55406ba_Const*);
inline jule::I64 _1a5542bc8_AsI64(_1a55406ba_Const*);
inline jule::U64 _1a5542e3c_AsU64(_1a55406ba_Const*);
inline jule::F64 _1a55431a1_AsF64(_1a55406ba_Const*);
inline void _1a5543426_SetI64(_1a55406ba_Const*, jule::I64);
inline void _1a554369b_SetU64(_1a55406ba_Const*, jule::U64);
inline void _1a5543921_SetBool(_1a55406ba_Const*, jule::Bool);
inline void _1a5543b96_SetStr(_1a55406ba_Const*, jule::Str);
inline void _1a5543e1b_SetF64(_1a55406ba_Const*, jule::F64);
inline jule::Bool _1a554435b_IsI64(_1a55406ba_Const*);
inline jule::Bool _1a55445c0_IsU64(_1a55406ba_Const*);
inline jule::Bool _1a5544834_IsBool(_1a55406ba_Const*);
inline jule::Bool _1a5544a98_IsStr(_1a55406ba_Const*);
inline jule::Bool _1a5544d0c_IsF64(_1a55406ba_Const*);
inline jule::Bool _1a5545071_IsNil(_1a55406ba_Const*);
inline jule::Bool _1a554568c_And(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a554599a_Or(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a5546ced_Add(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a554710b_Sub(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a5547419_Mul(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a5547727_Div(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a5547a35_Mod(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a5547d43_BitwiseAnd(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a5548151_BitwiseOr(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a554845e_Xor(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a554876c_Lshift(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a5548a7a_Rshift(_1a55406ba_Const*, _1a55406ba_Const);
inline jule::Bool _1a8898e2c_IsUnsafe(_1a8898aca_PtrTypeDecl*);
inline jule::Bool _1a8899603_AutoSized(_1a88992a1_ArrTypeDecl*);
inline jule::Bool _1a889c606_IsNil(_1a889c2a4_LitExpr*);
inline jule::Bool _1a88a04e9_Unhandled(_1a88a0186_FnCallExpr*);
inline jule::Bool _1a88a075d_Ignored(_1a88a0186_FnCallExpr*);
inline jule::Bool _1a88a7765_IsSelf(_1a88a7402_ParamDecl*);
inline jule::Bool _1a88a8a74_IsAnon(_1a88a8722_FnDecl*);
inline jule::Bool _1a88aa56a_IsInf(_1a88aa218_Iter*);
inline jule::Bool _1a88aad40_IsWhileNext(_1a88aa9dd_WhileKind*);
inline jule::Ptr<_1a88b915b_FieldIns> _1a88b45c9_instance(jule::Ptr<_1a88b4266_Field>);
inline jule::Ptr<_1a88b9b51_StructIns> _1a88b729c_instance(jule::Ptr<_1a88b6d3a_Struct>);
inline jule::Ptr<_1a88b9b51_StructIns> _1a88b7577_appendInstance(_1a88b6d3a_Struct*, jule::Ptr<_1a88b9b51_StructIns>*);
inline jule::Ptr<_1a88cc25c_Fn> _1a88b792e_FindMethod(_1a88b6d3a_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1a8966901_Var> _1a88b7c3c_FindStatic(_1a88b6d3a_Struct*, jule::Str);
inline jule::Ptr<_1a88b4266_Field> _1a88b804a_FindField(_1a88b6d3a_Struct*, jule::Str);
inline jule::Bool _1a88b8358_IsImplements(_1a88b6d3a_Struct*, jule::Ptr<_1a88de47d_Trait>);
inline jule::Bool _1a88b8666_IsDerives(_1a88b6d3a_Struct*, jule::Str);
inline jule::Bool _1a88b8974_IsUses(_1a88b6d3a_Struct*, jule::Ptr<_1a88b6d3a_Struct>);
inline jule::Ptr<_1a88ce03e_ParamIns> _1a88cac94_instance(jule::Ptr<_1a88ca920_Param>);
inline jule::Bool _1a88cb008_IsSelf(_1a88ca920_Param*);
inline jule::Bool _1a88cb26c_IsRef(_1a88ca920_Param*);
inline jule::Bool _1a88cc6be_IsVoid(_1a88cc25c_Fn*);
inline jule::Bool _1a88cc933_IsMethod(_1a88cc25c_Fn*);
inline jule::Bool _1a88ccb97_IsEntryPoint(_1a88cc25c_Fn*);
inline jule::Bool _1a88cce0b_IsInit(_1a88cc25c_Fn*);
inline jule::Bool _1a88cd170_IsAnon(_1a88cc25c_Fn*);
inline jule::Bool _1a88cd3d4_AnyVar(_1a88cc25c_Fn*);
inline jule::Ptr<_1a88cee0d_FnIns> _1a88cd648_instanceForce(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Ptr<_1a88cee0d_FnIns> _1a88cd8ac_instance(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Ptr<_1a88cee0d_FnIns> _1a88cdb87_appendInstance(_1a88cc25c_Fn*, jule::Ptr<_1a88cee0d_FnIns>*);
inline jule::Str _1a88ce391_Str(_1a88ce03e_ParamIns*);
inline jule::Str _1a88d023d_Str(_1a88cee0d_FnIns*);
inline jule::Bool _1a88d054b_Equal(jule::Ptr<_1a88cee0d_FnIns>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Bool _1a88d09ad_EqualFn(jule::Ptr<_1a88cee0d_FnIns>, jule::Ptr<_1a88cee0d_FnIns>*);
inline jule::Bool _1a88d0cbb_equalTrait(jule::Ptr<_1a88cee0d_FnIns>, jule::Ptr<_1a88cee0d_FnIns>*);
inline jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> _1a88d1030_Types(_1a88cee0d_FnIns*);
inline jule::Bool _1a88d1294_IsBuiltin(_1a88cee0d_FnIns*);
inline jule::Bool _1a88d1508_IsAnon(_1a88cee0d_FnIns*);
inline jule::Bool _1a88d1816_Same(_1a88cee0d_FnIns*, jule::Ptr<_1a88cee0d_FnIns>);
inline jule::Str _1a88d1b24_GetKindStr(_1a88cee0d_FnIns*, jule::Bool);
inline jule::Ptr<_1a88d2d67_ReferenceStack> static__1a88d3076_new(void);
inline jule::I64 _1a88d3450_Len(_1a88d2d67_ReferenceStack*);
inline jule::Any _1a88d375d_At(_1a88d2d67_ReferenceStack*, jule::I64);
inline void _1a88d39d3_Push(_1a88d2d67_ReferenceStack*, jule::Any);
inline jule::Bool _1abdcbcec_Exist(_1a88d2d67_ReferenceStack*, jule::Ptr<_1a88cee0d_FnIns>);
inline jule::Bool _1abde041a_Exist(_1a88d2d67_ReferenceStack*, jule::Ptr<_1a8966901_Var>);
inline jule::Bool _1abe7c30e_Exist(_1a88d2d67_ReferenceStack*, jule::Ptr<_1a88b9b51_StructIns>);
inline jule::Bool _1ac22c3c2_Exist(_1a88d2d67_ReferenceStack*, jule::Ptr<_1a88de47d_Trait>);
inline void _1a88d9214_pushErr(_1a88d88d9_symbolBuilder*, jule::Ptr<_1a52684c0_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1a88d98eb_pushSuggestion(_1a88d88d9_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a88d9ca3_checkCppUseDeclPath(_1a88d88d9_symbolBuilder*, jule::Ptr<_1a88ae44d_UseDecl>*, jule::Str);
inline jule::Ptr<_1a893d323_ImportInfo> _1a88da07d_buildCppHeaderImport(_1a88d88d9_symbolBuilder*, jule::Ptr<_1a88ae44d_UseDecl>*);
inline jule::Ptr<_1a893d323_ImportInfo> _1a88da38b_buildStdImport(_1a88d88d9_symbolBuilder*, jule::Ptr<_1a88ae44d_UseDecl>*);
inline jule::Ptr<_1a893d323_ImportInfo> _1a88da699_buildIdentImport(jule::Ptr<_1a88d88d9_symbolBuilder>, jule::Ptr<_1a88ae44d_UseDecl>*);
inline jule::Ptr<_1a893d323_ImportInfo> _1a88da9a7_buildImport(jule::Ptr<_1a88d88d9_symbolBuilder>, jule::Ptr<_1a88ae44d_UseDecl>*);
inline jule::Bool _1a88dacb5_checkDuplicateUseDecl(_1a88d88d9_symbolBuilder*, jule::Ptr<_1a893d323_ImportInfo>*);
inline void _1a88db0d4_implImportSelections(_1a88d88d9_symbolBuilder*, jule::Ptr<_1a893d323_ImportInfo>*, jule::Ptr<_1a88ae44d_UseDecl>*);
inline jule::Str _1a88db3e2_getAsLinkPath(jule::Ptr<_1a88d88d9_symbolBuilder>, jule::Str);
inline void _1a88db7aa_pushCycleError(jule::Ptr<_1a88d88d9_symbolBuilder>, jule::Ptr<_1a88d88d9_symbolBuilder>*, jule::Str, jule::Str*);
inline void _1a88dbb73_pushCrossCycleError(jule::Ptr<_1a88d88d9_symbolBuilder>, jule::Ptr<_1a88d88d9_symbolBuilder>*, jule::Ptr<_1a893d323_ImportInfo>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1a88dc02a_checkImportCycles(jule::Ptr<_1a88d88d9_symbolBuilder>, jule::Ptr<_1a893d323_ImportInfo>, jule::Ptr<_1a88ae44d_UseDecl>*);
inline void _1a88dc415_checkPackageAccessibility(_1a88d88d9_symbolBuilder*, jule::Ptr<_1a88ae44d_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1a88dc7cd_importPackage(jule::Ptr<_1a88d88d9_symbolBuilder>, jule::Ptr<_1a893d323_ImportInfo>*, jule::Ptr<_1a88ae44d_UseDecl>*);
inline jule::Ptr<_1a893d323_ImportInfo> _1a88dcadb_importUseDecl(jule::Ptr<_1a88d88d9_symbolBuilder>, jule::Ptr<_1a88ae44d_UseDecl>*);
inline void _1a88dccb7_importUseDecls(jule::Ptr<_1a88d88d9_symbolBuilder>);
inline void _1a88dd03c_appendNode(_1a88d88d9_symbolBuilder*, _1a88641d3_Node*);
inline void _1a88dd218_appendNodes(_1a88d88d9_symbolBuilder*);
inline void _1a88dd48d_pushDirectivePass(_1a88d88d9_symbolBuilder*, jule::Ptr<_1a88645ce_Directive>*);
inline void _1a88dd669_appendTopDirectives(_1a88d88d9_symbolBuilder*);
inline void _1a88dd845_build(jule::Ptr<_1a88d88d9_symbolBuilder>);
inline jule::Str _1a88de835_Str(_1a88de47d_Trait*);
inline jule::Bool _1a88deb43_Equal(jule::Ptr<_1a88de47d_Trait>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Bool _1a88e001c_IsBuiltin(_1a88de47d_Trait*);
inline jule::Ptr<_1a88cc25c_Fn> _1a88e032a_FindMethod(_1a88de47d_Trait*, jule::Str);
inline jule::Ptr<_1a88cc25c_Fn> _1a88e0946_findMethodInherit(_1a88de47d_Trait*, jule::Str*);
inline jule::Bool _1a88e15b2_AutoExpr(_1a88e121b_EnumItem*);
inline jule::Str _1a88e2074_Str(_1a88e1c11_Enum*);
inline jule::Bool _1a88e2382_Equal(jule::Ptr<_1a88e1c11_Enum>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a88e121b_EnumItem> _1a88e277d_FindItem(_1a88e1c11_Enum*, jule::Str);
inline jule::Str _1a88e363b_Str(_1a88e330b_TypeEnum*);
inline jule::Bool _1a88e3949_Equal(jule::Ptr<_1a88e330b_TypeEnum>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a88e2c78_TypeEnumItem> _1a88e3d45_FindItem(_1a88e330b_TypeEnum*, jule::Str);
inline jule::Str _1a88e5819_Str(_1a88e5462_comptimeRange*);
inline jule::Bool _1a88e5b27_Equal(jule::Ptr<_1a88e5462_comptimeRange>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Str _1a88e62ba_Str(_1a88e5e57_comptimeStructField*);
inline jule::Bool _1a88e65c8_Equal(jule::Ptr<_1a88e5e57_comptimeStructField>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a865dbe2_Data> _1a88e6aa1__Name(jule::Ptr<_1a88e5e57_comptimeStructField>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a88ebcb5__Type(jule::Ptr<_1a88e5e57_comptimeStructField>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a88ec16c__Public(jule::Ptr<_1a88e5e57_comptimeStructField>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a88ec47a_subIdent(jule::Ptr<_1a88e5e57_comptimeStructField>, jule::Str);
inline jule::Str _1a88ecb62_Str(_1a88ec7dd_comptimeStructFields*);
inline jule::Bool _1a88ece70_Equal(jule::Ptr<_1a88ec7dd_comptimeStructFields>, jule::Ptr<_1a86ae79d_TypeKind>);
inline void _1a88ed39e_ready(_1a88ec7dd_comptimeStructFields*, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
inline void _1a88ed767_step(_1a88ec7dd_comptimeStructFields*, jule::I64, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
inline jule::I64 _1a88ed9cb_len(_1a88ec7dd_comptimeStructFields*);
inline jule::Str _1a88ee12a_Str(_1a88edcb7_comptimeStatic*);
inline jule::Bool _1a88ee438_Equal(jule::Ptr<_1a88edcb7_comptimeStatic>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a865dbe2_Data> _1a88ee911__Name(jule::Ptr<_1a88edcb7_comptimeStatic>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a88eecb8__Type(jule::Ptr<_1a88edcb7_comptimeStatic>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8900170__Public(jule::Ptr<_1a88edcb7_comptimeStatic>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890047d_subIdent(jule::Ptr<_1a88edcb7_comptimeStatic>, jule::Str);
inline jule::Str _1a8900bdc_Str(_1a8900879_comptimeStatics*);
inline jule::Bool _1a8900eea_Equal(jule::Ptr<_1a8900879_comptimeStatics>, jule::Ptr<_1a86ae79d_TypeKind>);
inline void _1a89013a2_ready(_1a8900879_comptimeStatics*, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
inline void _1a890176a_step(_1a8900879_comptimeStatics*, jule::I64, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
inline jule::I64 _1a89019ce_len(_1a8900879_comptimeStatics*);
inline jule::Str _1a890212d_Str(_1a8901cba_comptimeEnumField*);
inline jule::Bool _1a890243b_Equal(jule::Ptr<_1a8901cba_comptimeEnumField>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a865dbe2_Data> _1a89028e2__Name(jule::Ptr<_1a8901cba_comptimeEnumField>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8902c00_subIdent(jule::Ptr<_1a8901cba_comptimeEnumField>, jule::Str);
inline jule::Str _1a890345e_Str(_1a8902edb_comptimeEnumFields*);
inline jule::Bool _1a890376c_Equal(jule::Ptr<_1a8902edb_comptimeEnumFields>, jule::Ptr<_1a86ae79d_TypeKind>);
inline void _1a8903b24_ready(_1a8902edb_comptimeEnumFields*, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
inline void _1a8903edc_step(_1a8902edb_comptimeEnumFields*, jule::I64, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
inline jule::I64 _1a8904251_len(_1a8902edb_comptimeEnumFields*);
inline jule::Str _1a89048a0_Str(_1a890453c_comptimeParam*);
inline jule::Bool _1a8904bad_Equal(jule::Ptr<_1a890453c_comptimeParam>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a865dbe2_Data> _1a8905197__Name(jule::Ptr<_1a890453c_comptimeParam>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890554e__Type(jule::Ptr<_1a890453c_comptimeParam>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8905906__Variadic(jule::Ptr<_1a890453c_comptimeParam>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8905cad__Reference(jule::Ptr<_1a890453c_comptimeParam>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a89060bb_subIdent(jule::Ptr<_1a890453c_comptimeParam>, jule::Str);
inline jule::Str _1a890694b_Str(_1a89065d8_comptimeParams*);
inline jule::Bool _1a8906c59_Equal(jule::Ptr<_1a89065d8_comptimeParams>, jule::Ptr<_1a86ae79d_TypeKind>);
inline void _1a8907188_ready(_1a89065d8_comptimeParams*, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
inline void _1a8907551_step(_1a89065d8_comptimeParams*, jule::I64, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
inline jule::I64 _1a89077b5_len(_1a89065d8_comptimeParams*);
inline jule::Str _1a8907e14_Str(_1a8907aa1_comptimeTypeInfos*);
inline jule::Bool _1a8908222_Equal(jule::Ptr<_1a8907aa1_comptimeTypeInfos>, jule::Ptr<_1a86ae79d_TypeKind>);
inline void _1a8908651_ready(_1a8907aa1_comptimeTypeInfos*, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
inline void _1a8908a19_step(_1a8907aa1_comptimeTypeInfos*, jule::I64, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
inline jule::I64 _1a8908c7d_len(_1a8907aa1_comptimeTypeInfos*);
inline jule::Str _1a89093cc_Str(_1a8909069_comptimeTypeInfo*);
inline jule::Bool _1a89096da_Equal(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a865dbe2_Data> _1a8909cd4__Str(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890a18b__Kind(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890a543__Bits(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890a8ea__Elem(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890aca2__Size(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890b159__Key(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890b511__Value(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890b8b8__Fields(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890bc70__Statics(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890c127__Public(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890c4ce__Binded(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890c886__Ordered(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890cc3d__Comparable(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890d0e5__Mutable(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890d49c__Types(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890d854__Exceptional(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890dc0b__CanNil(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890e0b3__Result(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890e46a__Params(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a890e778_subIdent(jule::Ptr<_1a8909069_comptimeTypeInfo>, jule::Str);
inline jule::Str _1a890edc7_Str(_1a890ea64_comptimeValue*);
inline jule::Bool _1a89101d5_Equal(jule::Ptr<_1a890ea64_comptimeValue>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a865dbe2_Data> _1a89106e1__Unwrap(jule::Ptr<_1a890ea64_comptimeValue>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8910a98__Type(jule::Ptr<_1a890ea64_comptimeValue>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8910e50__Lvalue(jule::Ptr<_1a890ea64_comptimeValue>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8911307__Mutable(jule::Ptr<_1a890ea64_comptimeValue>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a89116ae__Const(jule::Ptr<_1a890ea64_comptimeValue>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8911a66__Field(jule::Ptr<_1a890ea64_comptimeValue>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8911d74_subIdent(jule::Ptr<_1a890ea64_comptimeValue>, jule::Str);
inline jule::Str _1a89124c3_Str(_1a8912160_comptimeFiles*);
inline jule::Bool _1a89127d1_Equal(jule::Ptr<_1a8912160_comptimeFiles>, jule::Ptr<_1a86ae79d_TypeKind>);
inline void _1a8912c10_ready(_1a8912160_comptimeFiles*, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
inline void _1a89130c8_step(_1a8912160_comptimeFiles*, jule::I64, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
inline jule::I64 _1a891333c_len(_1a8912160_comptimeFiles*);
inline jule::Str _1a891398b_Str(_1a8913628_comptimeFile*);
inline jule::Bool _1a8913c99_Equal(jule::Ptr<_1a8913628_comptimeFile>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a865dbe2_Data> _1a8914272__Path(jule::Ptr<_1a8913628_comptimeFile>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8914629__Name(jule::Ptr<_1a8913628_comptimeFile>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a89149d1__Dir(jule::Ptr<_1a8913628_comptimeFile>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8914cde_subIdent(jule::Ptr<_1a8913628_comptimeFile>, jule::Str);
inline jule::Fn<jule::Bool(jule::Ptr<_1a89465e5_Sema>*,jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>*)> _1a891786e_readyFn(jule::Ptr<_1a8917484_constraintChecker>);
inline jule::Bool _1a8917ad3_readyFi(jule::Ptr<_1a8917484_constraintChecker>);
inline jule::Bool _1a8917d47_readySi(jule::Ptr<_1a8917484_constraintChecker>);
inline jule::Bool _1a89180ab_ready(jule::Ptr<_1a8917484_constraintChecker>);
inline jule::Bool _1a8918320_check(jule::Ptr<_1a8917484_constraintChecker>);
inline jule::Bool _1a89196d9_IsTraitImpl(_1a8919332_Impl*);
inline jule::Bool _1a891994d_IsStructImpl(_1a8919332_Impl*);
inline jule::Ptr<_1a893d323_ImportInfo> _1a892643d_SelectPackage(_1a8925eba_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)>);
inline jule::Ptr<_1a8966901_Var> _1a89267e5_FindVar(_1a8925eba_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a86ada55_TypeAlias> _1a8926b9c_FindTypeAlias(_1a8925eba_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88b6d3a_Struct> _1a8927054_FindStruct(_1a8925eba_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88cc25c_Fn> _1a892740b_FindFn(_1a8925eba_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88de47d_Trait> _1a8927719_FindTrait(_1a8925eba_scopeChecker*, jule::Str);
inline jule::Ptr<_1a88e1c11_Enum> _1a8927a27_FindEnum(_1a8925eba_scopeChecker*, jule::Str);
inline jule::Ptr<_1a88e330b_TypeEnum> _1a8927d35_FindTypeEnum(_1a8925eba_scopeChecker*, jule::Str);
inline jule::Bool _1a8928165_isUnsafe(jule::Ptr<_1a8925eba_scopeChecker>);
inline jule::Bool _1a89283c9_isRoot(_1a8925eba_scopeChecker*);
inline void _1a89285a5_stop(_1a8925eba_scopeChecker*);
inline jule::Bool _1a8928819_stopped(_1a8925eba_scopeChecker*);
inline jule::Bool _1a8928a7d_isDeferred(jule::Ptr<_1a8925eba_scopeChecker>);
inline jule::Ptr<_1a8925eba_scopeChecker> _1a8928ce2_getRoot(jule::Ptr<_1a8925eba_scopeChecker>);
inline jule::Ptr<_1a8925eba_scopeChecker> _1a8929056_getHardRoot(jule::Ptr<_1a8925eba_scopeChecker>);
inline jule::Ptr<_1a8921acb_Label> _1a8929364_findLabel(_1a8925eba_scopeChecker*, jule::Str);
inline jule::Ptr<_1a8924c33_scopeLabel> _1a8929672_findLabelScope(jule::Ptr<_1a8925eba_scopeChecker>, jule::Str);
inline jule::Ptr<_1a8924c33_scopeLabel> _1a8929980_findLabelAll(_1a8925eba_scopeChecker*, jule::Str);
inline jule::Bool _1a8929d37_isDuplicatedIdent(_1a8925eba_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1a892a0ac_checkVarDecl(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a9701_VarDecl>);
inline void _1a892a332_checkTypeAliasDecl(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88ad062_TypeAliasDecl>);
inline jule::Ptr<_1a891e38c_Scope> _1a892a596_getChild(_1a8925eba_scopeChecker*);
inline void _1a892a95e_checkChildSsc(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a6c2b_ScopeTree>*, jule::Ptr<_1a891e38c_Scope>*, jule::Ptr<_1a8925eba_scopeChecker>*);
inline jule::Ptr<_1a891e38c_Scope> _1a892ad16_checkChildSc(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a6c2b_ScopeTree>*, jule::Ptr<_1a8925eba_scopeChecker>*);
inline jule::Ptr<_1a891e38c_Scope> _1a892b124_checkChild(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a6c2b_ScopeTree>*);
inline void _1a892b399_checkAnonScope(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a6c2b_ScopeTree>);
inline void _1a892b6b8_processErrorCall(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88c83bd_BuiltinErrorCallExprModel>*, jule::Ptr<_1a52684c0_Token>);
inline void _1a892b93d_checkExpr(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a889b270_Expr>);
inline jule::Ptr<_1a891e788_If> _1a892bc4b_checkIf(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88ac061_If>);
inline jule::Ptr<_1a891ea74_Else> _1a892c059_checkElse(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88ac418_Else>);
inline void _1a892c2ce_checkConditional(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88ac88b_Conditional>);
inline void _1a892c741_checkIterScopeSsc(jule::Ptr<_1a8925eba_scopeChecker>, jule::Uintptr, jule::Ptr<_1a88a6c2b_ScopeTree>, jule::Ptr<_1a891e38c_Scope>*, jule::Ptr<_1a8925eba_scopeChecker>);
inline jule::Ptr<_1a891e38c_Scope> _1a892cb92_checkIterScopeSc(jule::Ptr<_1a8925eba_scopeChecker>, jule::Uintptr, jule::Ptr<_1a88a6c2b_ScopeTree>, jule::Ptr<_1a8925eba_scopeChecker>);
inline jule::Ptr<_1a891e38c_Scope> _1a892d049_checkIterScope(jule::Ptr<_1a8925eba_scopeChecker>, jule::Uintptr, jule::Ptr<_1a88a6c2b_ScopeTree>*);
inline void _1a892d2be_checkInfIter(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88aa218_Iter>*);
inline void _1a892d544_checkWhileIter(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88aa218_Iter>*);
inline void _1a892d90c_checkComptimeRangeIter(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88aa218_Iter>*, jule::Ptr<_1a892103c_RangeIter>*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a892db82_checkRangeIter(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88aa218_Iter>*);
inline void _1a892de07_checkIter(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88aa218_Iter>);
inline jule::Bool _1a892e215_checkValidContLabel(jule::Ptr<_1a8925eba_scopeChecker>, jule::Uintptr);
inline jule::Bool _1a892e523_checkValidBreakLabel(jule::Ptr<_1a8925eba_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1a8921438_ContSt> _1a892e831_checkContValidScope(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88abadd_ContSt>);
inline void _1a892eaa6_checkCont(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88abadd_ContSt>);
inline void _1a892ed2b_checkLabel(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a4443_LabelSt>);
inline void _1a89300a1_pushGoto(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a47ea_GotoSt>);
inline void _1a8930326_checkPostfix(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a5730_AssignSt>);
inline jule::Bool _1a8930634_isNewAssignIdent(_1a8925eba_scopeChecker*, jule::Str);
inline jule::Bool _1a8930a85_checkStructureAssignOp(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88b9b51_StructIns>*, jule::Ptr<_1a88a5730_AssignSt>*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a8930d0a_checkSingleAssign(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a5730_AssignSt>*);
inline void _1a8931338_processEndPartOfMultiAssign(_1a8925eba_scopeChecker*, jule::Ptr<_1a8922a99_MultiAssign>*, jule::Ptr<_1a88a5730_AssignSt>*, jule::Ptr<_1a88a51e1_AssignLeft>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a89315be_checkMultiAssign(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a5730_AssignSt>*);
inline void _1a8931844_singleDeclAssign(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a5730_AssignSt>*);
inline void _1a8931ab9_checkAssignSt(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a5730_AssignSt>);
inline jule::Ptr<_1a891e38c_Scope> _1a8931e71_checkCaseScope(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a8923bee_Case>*, jule::Ptr<_1a88a6c2b_ScopeTree>*);
inline jule::Ptr<_1a8923bee_Case> _1a893246b_checkCase(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a89231a4_Match>, jule::I64, jule::Ptr<_1a88ad4d5_Case>, jule::Ptr<_1a865dbe2_Data>);
inline void _1a8932834_checkCases(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88adbab_MatchCase>*, jule::Ptr<_1a89231a4_Match>, jule::Ptr<_1a865dbe2_Data>);
inline jule::Ptr<_1a8923bee_Case> _1a8932bdb_checkDefault(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a89231a4_Match>, jule::Ptr<_1a88ac418_Else>);
inline void _1a893300a_checkComptimePanic(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a52684c0_Token>, jule::Ptr<_1a891e38c_Scope>*);
inline void _1a8933329_processConstMatch(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a89231a4_Match>*, jule::Ptr<_1a88adbab_MatchCase>*);
inline void _1a893359e_checkTypeMatch(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88adbab_MatchCase>*);
inline void _1a8933824_checkCommonMatch(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88adbab_MatchCase>*);
inline void _1a8933a99_checkMatch(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88adbab_MatchCase>);
inline void _1a8933d1e_checkFall(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a4ad6_FallSt>);
inline jule::Ptr<_1a89217e0_BreakSt> _1a893412c_checkBreakWithLabel(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88ab736_BreakSt>);
inline jule::Ptr<_1a89217e0_BreakSt> _1a893443a_checkPlainBreak(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88ab736_BreakSt>);
inline void _1a89346b0_checkBreak(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88ab736_BreakSt>);
inline void _1a8934935_checkRet(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a9aa8_RetSt>);
inline void _1a8934baa_checkUseExpr(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a889bb11_UseExpr>);
inline void _1a8934e30_checkNode(jule::Ptr<_1a8925eba_scopeChecker>, jule::Any*);
inline void _1a893510b_checkResult(jule::Ptr<_1a8925eba_scopeChecker>);
inline void _1a89352d7_checkTree(jule::Ptr<_1a8925eba_scopeChecker>);
inline void _1a8935606_checkGoto(_1a8925eba_scopeChecker*, jule::Ptr<_1a89251a6_scopeGoto>*, jule::Ptr<_1a8924c33_scopeLabel>*);
inline void _1a89357d2_checkGotos(_1a8925eba_scopeChecker*);
inline void _1a89359ad_checkLabels(_1a8925eba_scopeChecker*);
inline void _1a8935b89_checkVars(_1a8925eba_scopeChecker*);
inline void _1a8935d65_checkAliases(_1a8925eba_scopeChecker*);
inline void _1a8936184_check(jule::Ptr<_1a8925eba_scopeChecker>, jule::Ptr<_1a88a6c2b_ScopeTree>*, jule::Ptr<_1a891e38c_Scope>*);
inline jule::Ptr<_1a8925eba_scopeChecker> _1a89363e8_newChildChecker(jule::Ptr<_1a8925eba_scopeChecker>);
inline void _1a893763b_checkCdef(_1a8937240_directiveChecker*, jule::Ptr<_1a88645ce_Directive>*);
inline void _1a89378b1_checkTypedef(_1a8937240_directiveChecker*, jule::Ptr<_1a88645ce_Directive>*);
inline void _1a8937b36_checkDerive(_1a8937240_directiveChecker*, jule::Ptr<_1a88645ce_Directive>*);
inline void _1a8937dab_checkNamespace(_1a8937240_directiveChecker*, jule::Ptr<_1a88645ce_Directive>*);
inline void _1a8938131_checkDeprecated(_1a8937240_directiveChecker*, jule::Ptr<_1a88645ce_Directive>*);
inline void _1a89383a6_checkTest(_1a8937240_directiveChecker*, jule::Ptr<_1a88645ce_Directive>*);
inline void _1a893862b_checkDirective(_1a8937240_directiveChecker*, jule::Ptr<_1a88645ce_Directive>*);
inline void _1a8938807_check(_1a8937240_directiveChecker*);
inline jule::Ptr<_1a893d323_ImportInfo> _1a893d7da_SelectPackage(_1a893d323_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)>);
inline jule::Ptr<_1a8966901_Var> _1a893db92_FindVar(_1a893d323_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a86ada55_TypeAlias> _1a893e049_FindTypeAlias(_1a893d323_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88b6d3a_Struct> _1a893e401_FindStruct(_1a893d323_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88cc25c_Fn> _1a893e7a8_FindFn(_1a893d323_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88de47d_Trait> _1a893eab6_FindTrait(_1a893d323_ImportInfo*, jule::Str);
inline jule::Ptr<_1a88e1c11_Enum> _1a893edc4_FindEnum(_1a893d323_ImportInfo*, jule::Str);
inline jule::Ptr<_1a88e330b_TypeEnum> _1a89401d2_FindTypeEnum(_1a893d323_ImportInfo*, jule::Str);
inline jule::Bool _1a89405bc_isLookupable(_1a893d323_ImportInfo*, jule::Str);
inline jule::Bool _1a89408ca_existIdent(_1a893d323_ImportInfo*, jule::Str);
inline jule::Bool _1a8940b61_isAccessibleViaSelection(_1a893d323_ImportInfo*);
inline jule::Ptr<_1a893d323_ImportInfo> _1a89413d1_SelectPackage(_1a8940e5d_Package*, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)>);
inline jule::Ptr<_1a8966901_Var> _1a8941788_FindVar(_1a8940e5d_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a86ada55_TypeAlias> _1a8941b40_FindTypeAlias(_1a8940e5d_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88b6d3a_Struct> _1a8941ee7_FindStruct(_1a8940e5d_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88cc25c_Fn> _1a894239e_FindFn(_1a8940e5d_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88de47d_Trait> _1a89426ac_FindTrait(_1a8940e5d_Package*, jule::Str);
inline jule::Ptr<_1a88e1c11_Enum> _1a89429ba_FindEnum(_1a8940e5d_Package*, jule::Str);
inline jule::Ptr<_1a88e330b_TypeEnum> _1a8942cc8_FindTypeEnum(_1a8940e5d_Package*, jule::Str);
inline jule::Ptr<_1a8909069_comptimeTypeInfo> _1a894601d_pushComptimeTypeInfo(_1a8945acd_commonSemaMeta*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Ptr<_1a893d323_ImportInfo> _1a8946a68_SelectPackage(_1a89465e5_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)>);
inline jule::Ptr<_1a8966901_Var> _1a8946e20_FindVar(_1a89465e5_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a86ada55_TypeAlias> _1a89472c7_FindTypeAlias(_1a89465e5_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88b6d3a_Struct> _1a894767e_FindStruct(_1a89465e5_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88cc25c_Fn> _1a8947a36_FindFn(_1a89465e5_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88de47d_Trait> _1a8947d44_FindTrait(_1a89465e5_Sema*, jule::Str);
inline jule::Ptr<_1a88e1c11_Enum> _1a8948152_FindEnum(_1a89465e5_Sema*, jule::Str);
inline jule::Ptr<_1a88e330b_TypeEnum> _1a8948460_FindTypeEnum(_1a89465e5_Sema*, jule::Str);
inline jule::Bool _1a8948839_isFlag(_1a89465e5_Sema*, jule::I64);
inline void _1a8948aae_setCurrentFile(_1a89465e5_Sema*, jule::Ptr<_1a89ab380_SymbolTable>);
inline void _1a8948e77_pushErr(_1a89465e5_Sema*, jule::Ptr<_1a52684c0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a8949296_pushSuggestion(_1a89465e5_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a894964d_isAccessibleDefine(_1a89465e5_Sema*, jule::Bool, jule::Ptr<_1a52684c0_Token>);
inline jule::Bool _1a8949a9e_isDuplicatedIdent(_1a89465e5_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1a8949dbd_checkDirectives(jule::Ptr<_1a89465e5_Sema>, jule::Slice<jule::Ptr<_1a88645ce_Directive>>*, jule::Any);
inline jule::Bool _1a894a31e_checkGenericQuantity(_1a89465e5_Sema*, jule::I64, jule::I64, jule::Ptr<_1a52684c0_Token>);
inline jule::Bool _1a894a6e8_isDuplicatedImportSelection(_1a89465e5_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1a894aab1_getImportDef(_1a89465e5_Sema*, jule::Str, jule::Ptr<_1a893d323_ImportInfo>*);
inline jule::Bool _1aba5390d_checkImportSelection(_1a89465e5_Sema*, jule::Ptr<_1a52684c0_Token>*, jule::Ptr<_1a8966901_Var>*);
inline jule::Bool _1aba5756b_checkImportSelection(_1a89465e5_Sema*, jule::Ptr<_1a52684c0_Token>*, jule::Ptr<_1a86ada55_TypeAlias>*);
inline jule::Bool _1aba5b174_checkImportSelection(_1a89465e5_Sema*, jule::Ptr<_1a52684c0_Token>*, jule::Ptr<_1a88b6d3a_Struct>*);
inline jule::Bool _1aba60046_checkImportSelection(_1a89465e5_Sema*, jule::Ptr<_1a52684c0_Token>*, jule::Ptr<_1a88de47d_Trait>*);
inline jule::Bool _1aba63b71_checkImportSelection(_1a89465e5_Sema*, jule::Ptr<_1a52684c0_Token>*, jule::Ptr<_1a88e1c11_Enum>*);
inline jule::Bool _1aba6779b_checkImportSelection(_1a89465e5_Sema*, jule::Ptr<_1a52684c0_Token>*, jule::Ptr<_1a88e330b_TypeEnum>*);
inline jule::Bool _1aba6b3c6_checkImportSelection(_1a89465e5_Sema*, jule::Ptr<_1a52684c0_Token>*, jule::Ptr<_1a88cc25c_Fn>*);
inline jule::Bool _1a894b298_checkImportSelectedSelections(_1a89465e5_Sema*, jule::Ptr<_1a893d323_ImportInfo>*);
inline jule::Bool _1aba703a8_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema*, jule::Slice<jule::Ptr<_1a8966901_Var>>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1aba73741_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema*, jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1aba73da1_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema*, jule::Slice<jule::Ptr<_1a88b6d3a_Struct>>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1aba76953_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema*, jule::Slice<jule::Ptr<_1a88cc25c_Fn>>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1aba77ec6_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema*, jule::Slice<jule::Ptr<_1a88de47d_Trait>>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1aba7c162_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema*, jule::Slice<jule::Ptr<_1a88e1c11_Enum>>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1aba7ec14_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema*, jule::Slice<jule::Ptr<_1a88e330b_TypeEnum>>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1a894b9c4_checkImportAllSelections(_1a89465e5_Sema*, jule::Ptr<_1a893d323_ImportInfo>*);
inline jule::Bool _1a894bce3_checkImportSelections(_1a89465e5_Sema*, jule::Ptr<_1a893d323_ImportInfo>*);
inline jule::Bool _1a894c101_isUseAliasDuplication(_1a89465e5_Sema*, jule::Ptr<_1a893d323_ImportInfo>*);
inline jule::Bool _1a894c40e_checkImport(_1a89465e5_Sema*, jule::Ptr<_1a893d323_ImportInfo>*);
inline void _1a894c5da_checkImports(_1a89465e5_Sema*);
inline void _1a894c7b6_implFileImpls(jule::Ptr<_1a89465e5_Sema>);
inline void _1a894c992_implImpls(jule::Ptr<_1a89465e5_Sema>);
inline void _1a894cb6d_checkEnums(jule::Ptr<_1a89465e5_Sema>);
inline void _1a894cd49_checkFileInherits(jule::Ptr<_1a89465e5_Sema>);
inline void _1a894d025_checkInherits(jule::Ptr<_1a89465e5_Sema>);
inline _1a86c0ade_typeChecker _1a894d476_typeChecker(jule::Ptr<_1a89465e5_Sema>, jule::Trait<_1a86ccac9_Lookup>, jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>, jule::Ptr<_1a86bec0e_referencer>);
inline jule::Ptr<_1a86ae79d_TypeKind> _1a894d971_buildTypeWithRefers(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88970e5_TypeDecl>*, jule::Trait<_1a86ccac9_Lookup>, jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>, jule::Ptr<_1a86bec0e_referencer>);
inline jule::Bool _1a894de6b_checkTypeWithRefers(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a86b6651_TypeSymbol>*, jule::Trait<_1a86ccac9_Lookup>, jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>, jule::Ptr<_1a86bec0e_referencer>);
inline jule::Ptr<_1a8917484_constraintChecker> _1a894e1d0_constraintChecker(jule::Ptr<_1a89465e5_Sema>);
inline jule::Bool _1a894e587_checkType(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a86b6651_TypeSymbol>*, jule::Trait<_1a86ccac9_Lookup>);
inline jule::Ptr<_1a86ae79d_TypeKind> _1a894e9d8_buildTypeWithGenerics(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88970e5_TypeDecl>*, jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>, jule::Ptr<_1a88d2d67_ReferenceStack>);
inline jule::Ptr<_1a86ae79d_TypeKind> _1a8950104_selectType(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88970e5_TypeDecl>*);
inline jule::Ptr<_1a8683860_Eval> _1a8950555_evalpd(jule::Ptr<_1a89465e5_Sema>, jule::Trait<_1a86ccac9_Lookup>, jule::Ptr<_1a86ae79d_TypeKind>, jule::Ptr<_1a8966901_Var>);
inline jule::Ptr<_1a8683860_Eval> _1a895090c_evalp(jule::Ptr<_1a89465e5_Sema>, jule::Trait<_1a86ccac9_Lookup>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a8683860_Eval> _1a8950c1a_eval(jule::Ptr<_1a89465e5_Sema>, jule::Trait<_1a86ccac9_Lookup>);
inline jule::Bool _1a8951215_checkAssignType(jule::Ptr<_1a89465e5_Sema>, jule::Bool, jule::Ptr<_1a86ae79d_TypeKind>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a52684c0_Token>);
inline jule::Bool _1a8951666_checkTypeCompatibility(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a86ae79d_TypeKind>*, jule::Ptr<_1a86ae79d_TypeKind>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Ptr<_1a86ae79d_TypeKind> _1a8951ad9_buildNonGenericTypeKind(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88970e5_TypeDecl>*, jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>>*, jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>>*);
inline jule::Bool _1a8951ec4_buildFnNonGenericTypeKinds(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cee0d_FnIns>*, jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>>*);
inline jule::Ptr<_1a88cee0d_FnIns> _1a89522e3_getTraitCheckFnKind(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cc25c_Fn>*);
inline jule::Bool _1a8952744_checkConstraintsFn(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cee0d_FnIns>*, jule::Ptr<_1a52684c0_Token>*, jule::Ptr<_1a88cee0d_FnIns>);
inline jule::Bool _1a8952b95_checkConstraintsStruct(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b9b51_StructIns>*, jule::Ptr<_1a52684c0_Token>*, jule::Ptr<_1a88b9b51_StructIns>);
inline jule::Bool _1a895304c_fnEnvironment(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cee0d_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1a89465e5_Sema>*,jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>*)>);
inline void _1a89532c2_checkFnParamKind(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88ce03e_ParamIns>*);
inline jule::Bool _1a89535d0_reloadFnInsTypes(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cee0d_FnIns>);
inline jule::Bool _1a8953a53_checkRefValidityForInitExpr(jule::Ptr<_1a89465e5_Sema>, jule::Bool, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1a895412a_checkValidityForInitExpr(jule::Ptr<_1a89465e5_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1a86ae79d_TypeKind>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1a89544e3_checkTypeAliasDeclKind(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a86ada55_TypeAlias>*, jule::Trait<_1a86ccac9_Lookup>);
inline void _1a8954812_checkTypeAliasDecl(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a86ada55_TypeAlias>*, jule::Trait<_1a86ccac9_Lookup>);
inline void _1a8954a87_checkTypeAliasDeclDup(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a86ada55_TypeAlias>*);
inline jule::Bool _1a8954ceb_checkTypeAliasDecls(jule::Ptr<_1a89465e5_Sema>);
inline void _1abb13d86_checkEnumItemsDup(_1a89465e5_Sema*, jule::Slice<jule::Ptr<_1a88e121b_EnumItem>>);
inline void _1abb1d3ce_checkEnumItemsDup(_1a89465e5_Sema*, jule::Slice<jule::Ptr<_1a88e2c78_TypeEnumItem>>);
inline void _1a89552e6_checkEnumItemsStr(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88e1c11_Enum>*);
inline void _1abaea202_checkEnumItemInt(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88e1c11_Enum>*, jule::Ptr<_1a86b7003_Prim>*, jule::Ptr<_1a88e121b_EnumItem>*, jule::U64*);
inline void _1abb07a5b_checkEnumItemInt(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88e1c11_Enum>*, jule::Ptr<_1a86b7003_Prim>*, jule::Ptr<_1a88e121b_EnumItem>*, jule::I64*);
inline void _1abae6880_checkEnumItemsInt1(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a86b7003_Prim>*, jule::Ptr<_1a88e1c11_Enum>*);
inline void _1abae61ba_checkEnumItemsInt1(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a86b7003_Prim>*, jule::Ptr<_1a88e1c11_Enum>*);
inline void _1a8955d96_checkEnumItemsInt(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88e1c11_Enum>*);
inline void _1a895611b_checkEnumDecl(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88e1c11_Enum>*);
inline void _1a8956391_checkTypeEnumDecl(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88e330b_TypeEnum>*);
inline jule::Bool _1a8956605_checkEnumDecls(jule::Ptr<_1a89465e5_Sema>);
inline jule::Bool _1a8956869_checkTypeEnumDecls(jule::Ptr<_1a89465e5_Sema>);
inline jule::Bool _1a8956b77_checkDeclGenerics(_1a89465e5_Sema*, jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>>*);
inline jule::Bool _1a8956e85_checkFnDeclParamsDup(_1a89465e5_Sema*, jule::Ptr<_1a88cc25c_Fn>*);
inline jule::Bool _1a8957293_checkFnDeclResultDup(_1a89465e5_Sema*, jule::Ptr<_1a88cc25c_Fn>*);
inline jule::Bool _1a89575a1_checkFnVariadicParam(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cc25c_Fn>*);
inline void _1a8957826_checkFnDeclPrototype(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cc25c_Fn>*);
inline jule::Bool _1a8957c77_catchTraitInheritCycle(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88de47d_Trait>, jule::Ptr<_1a88de47d_Trait>, jule::Str*);
inline jule::Bool _1a89580a7__checkTraitDeclInherits(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88de47d_Trait>*);
inline void _1a895833d_checkTraitDeclInherits(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88de47d_Trait>*);
inline void _1a89585b3_checkTraitDeclMethod(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cc25c_Fn>*);
inline void _1a8958838_checkTraitDeclMethods(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88de47d_Trait>*);
inline void _1a8958aad_checkTraitDecl(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88de47d_Trait>*);
inline jule::Bool _1a8958d22_checkTraitDecls(jule::Ptr<_1a89465e5_Sema>);
inline jule::Bool _1a89591c9_checkTraitImplMethods(_1a89465e5_Sema*, jule::Ptr<_1a88de47d_Trait>*, jule::Ptr<_1a8919332_Impl>*);
inline jule::Bool _1a8959581_implToStruct(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b6d3a_Struct>*, jule::Ptr<_1a8919332_Impl>*);
inline void _1a8959806_implTrait(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a8919332_Impl>*);
inline void _1a8959a7b_implStruct(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a8919332_Impl>*);
inline void _1a8959d01_implImpl(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a8919332_Impl>*);
inline void _1a895a120_checkVarDecl(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a8966901_Var>*, jule::Trait<_1a86ccac9_Lookup>);
inline void _1a895a395_checkGlobalVarDecl(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a8966901_Var>*);
inline jule::Bool _1a895a609_checkGlobalDecls(jule::Ptr<_1a89465e5_Sema>);
inline jule::Bool _1a895a9b1_checkStructTraitImpl(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b6d3a_Struct>*, jule::Ptr<_1a88de47d_Trait>*);
inline jule::Bool _1a895acbe_checkStructImpls(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b6d3a_Struct>*);
inline jule::Bool _1a895b0cc_checkStructFields(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b6d3a_Struct>*);
inline void _1a895b352_checkStructDecl(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b6d3a_Struct>*);
inline jule::Bool _1a895b5b6_checkStructDecls(jule::Ptr<_1a89465e5_Sema>);
inline void _1a895b83b_checkAnonFnDecl(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cc25c_Fn>*);
inline void _1a895bab1_checkFnDecl(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cc25c_Fn>*);
inline jule::Bool _1a895bdbe_checkFuncDecls(jule::Ptr<_1a89465e5_Sema>, jule::Slice<jule::Ptr<_1a88cc25c_Fn>>*);
inline jule::Bool _1a895c133_checkFnDecls(jule::Ptr<_1a89465e5_Sema>);
inline void _1a895c4eb_pushCycleError(_1a89465e5_Sema*, jule::Str*, jule::Str*, jule::Str*);
inline jule::Bool _1a895c94c_checkCrossCycle(_1a89465e5_Sema*, jule::Ptr<_1a88b6d3a_Struct>*, jule::Ptr<_1a88b6d3a_Struct>*, jule::Str*);
inline jule::Bool _1a895cdc0_checkStructDeriveIllegalCycles(_1a89465e5_Sema*, jule::Str, jule::Ptr<_1a88b6d3a_Struct>*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a895d211_checkStructInsDeriveClone(_1a89465e5_Sema*, jule::Ptr<_1a88b9b51_StructIns>);
inline void _1a895d3ed_checkPackageDecls(jule::Ptr<_1a89465e5_Sema>);
inline void _1a895d73e_checkDataForTypeInference(_1a89465e5_Sema*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a52684c0_Token>*);
inline void _1a895d9c5_checkVar(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a8966901_Var>*);
inline void _1a895dce4_checkTypeVar(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a8966901_Var>*, jule::Trait<_1a86ccac9_Lookup>);
inline void _1a895dec0_checkGlobalTypes(jule::Ptr<_1a89465e5_Sema>);
inline jule::Ptr<_1a88cee0d_FnIns> _1a895e377_readyToCheckFn(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b9b51_StructIns>*, jule::Ptr<_1a88cc25c_Fn>*);
inline void _1a895e696_checkTypeMethod(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b9b51_StructIns>*, jule::Ptr<_1a88cc25c_Fn>*);
inline jule::Ptr<_1a88cee0d_FnIns> _1a895eae7_checkStructInsOp(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b9b51_StructIns>*, jule::Ptr<_1a88cc25c_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1a88cc25c_Fn>)>);
inline jule::Bool _1a895ee9e_checkStructEnv(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b9b51_StructIns>*, jule::Ptr<_1a52684c0_Token>);
inline jule::Bool _1a8960356_precheckStructIns(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b9b51_StructIns>*, jule::Ptr<_1a52684c0_Token>);
inline void _1a89605cb_checkStructIns(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b9b51_StructIns>*);
inline void _1a8960851_checkTypeStruct(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b6d3a_Struct>*);
inline void _1a8960a2c_checkStructTypes(jule::Ptr<_1a89465e5_Sema>);
inline void _1a8960cc4_checkStructInsOperators(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b9b51_StructIns>);
inline void _1a896105a_precheckStructType(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88b6d3a_Struct>*);
inline void _1a8961236_precheckStructTypes(jule::Ptr<_1a89465e5_Sema>);
inline void _1a89614ab_checkRets(_1a89465e5_Sema*, jule::Ptr<_1a88cee0d_FnIns>*);
inline void _1a89617ca_checkFnInsSc(_1a89465e5_Sema*, jule::Ptr<_1a88cee0d_FnIns>*, jule::Ptr<_1a8925eba_scopeChecker>*);
inline void _1a8961ae9_checkFnInsCaller(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cee0d_FnIns>*, jule::Ptr<_1a52684c0_Token>);
inline void _1a8961d6e_checkFnIns(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cee0d_FnIns>*);
inline void _1a89620e4_checkTypeFn(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cc25c_Fn>*);
inline void _1a8962369_checkTestFn(_1a89465e5_Sema*, jule::Ptr<_1a88cee0d_FnIns>*);
inline void _1a89625de_precheckTypeFn(jule::Ptr<_1a89465e5_Sema>, jule::Ptr<_1a88cc25c_Fn>*);
inline void _1a89627ba_precheckFnTypes(jule::Ptr<_1a89465e5_Sema>);
inline void _1a8962996_checkFnTypes(jule::Ptr<_1a89465e5_Sema>);
inline void _1a8962b72_checkPackageTypes(jule::Ptr<_1a89465e5_Sema>);
inline void _1a8962d4d_setFileSemaFields(jule::Ptr<_1a89465e5_Sema>);
inline void _1a8963029_setSemaFields(jule::Ptr<_1a89465e5_Sema>);
inline void _1a896329e_check(jule::Ptr<_1a89465e5_Sema>, jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>*);
inline _1a896369a_missingRetChecker static__1a8963a63_new(void);
inline jule::Bool _1a8963d3d_checkConditional(_1a896369a_missingRetChecker*, jule::Ptr<_1a891ede8_Conditional>);
inline jule::Bool _1a896414b_checkMatch(_1a896369a_missingRetChecker*, jule::Ptr<_1a89231a4_Match>);
inline jule::Bool _1a8964459_checkInfIter(_1a896369a_missingRetChecker*, jule::Ptr<_1a89201d4_InfIter>);
inline jule::Bool _1a8964767_checkScope(_1a896369a_missingRetChecker*, jule::Ptr<_1a891e38c_Scope>);
inline jule::Bool _1a8964a75_check(_1a896369a_missingRetChecker*, jule::Ptr<_1a891e38c_Scope>);
inline jule::Bool _1a8966c75_IsInitialized(_1a8966901_Var*);
inline jule::Bool _1a8966ed9_IsTypeInferred(_1a8966901_Var*);
inline jule::Bool _1a896724d_untypedConstant(_1a8966901_Var*);
inline jule::Bool static__1a8967ccb_Dispose(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a8968073_Str(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a89683b4_logical(jule::Ptr<_1a88cc25c_Fn>*, jule::Str);
inline jule::Bool static__1a896865b_Eq(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a8968903_Gt(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a8968b9a_GtEq(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a8968e42_Lt(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a89691d9_LtEq(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896952a_result(jule::Ptr<_1a88cc25c_Fn>*, jule::Str);
inline jule::Bool static__1a89697c2_Shl(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a8969a69_Shr(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a8969d11_Add(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896a0a8_Sub(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896a350_Div(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896a5e7_Mul(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896a88e_Mod(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896ab36_BitAnd(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896adcd_BitOr(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896b175_BitXor(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896b4b6_unary(jule::Ptr<_1a88cc25c_Fn>*, jule::Str);
inline jule::Bool static__1a896b75d_Neg(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896ba05_Pos(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896bc9c_BitNot(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896c0dd_assign(jule::Ptr<_1a88cc25c_Fn>*, jule::Str);
inline jule::Bool static__1a896c385_AddAssign(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896c62c_SubAssign(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896c8c4_DivAssign(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896cb6b_MulAssign(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896ce13_ModAssign(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896d1aa_ShlAssign(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896d452_ShrAssign(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896d6e9_BitOrAssign(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896d991_BitAndAssign(jule::Ptr<_1a88cc25c_Fn>);
inline jule::Bool static__1a896dc38_BitXorAssign(jule::Ptr<_1a88cc25c_Fn>);
inline void _1a89999de_pushErr(_1a8999516_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a8999c53_checkTrait(_1a8999516_typeCompatibilityChecker*);
inline jule::Bool _1a8999eb7_checkPtr(_1a8999516_typeCompatibilityChecker*);
inline jule::Bool _1a899a22b_checkPrim(_1a8999516_typeCompatibilityChecker*);
inline jule::Bool _1a899a5d3_typeEnum(_1a8999516_typeCompatibilityChecker*, jule::Ptr<_1a88e330b_TypeEnum>*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a899a847_checkTypeEnum(_1a8999516_typeCompatibilityChecker*);
inline jule::Bool _1a899aaab_check(_1a8999516_typeCompatibilityChecker*);
inline void _1a899b5a1_pushErr(_1a899b13e_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a899b815_checkValidity(_1a899b13e_assignTypeChecker*);
inline jule::Bool _1a899ba79_checkConst(_1a899b13e_assignTypeChecker*);
inline jule::Bool _1a899bcdd_isPrim(_1a899b13e_assignTypeChecker*);
inline jule::Bool _1a899c052_checkCompatibility(_1a899b13e_assignTypeChecker*);
inline jule::Bool _1a899c2b6_check(_1a899b13e_assignTypeChecker*);
inline jule::Bool _1abc93ee4_annotateConstraintElem(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1abc94324_annotateConstraintElem(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1abc9380c_annotateConstraintElem(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1abc980c5_annotateConstraintElem(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a899d4b5_annotateConstraintMap(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a899d7c3_annotateConstraintTup(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a899dad1_annotateConstraintFn(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a899de11_annotateConstraintIdent(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a899e230_annotateConstraint(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline void _1a899e54e_pushGeneric(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*, jule::I64);
inline jule::Bool _1a899e85c_annotatePrim(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a899eb6a_annotateArr(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a899ee78_annotateSlc(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a89a0330_checkMapKey(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a89a063d_annotateMap(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a89a094b_annotateFn(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a89a0c59_annotatePtr(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a89a1067_annotateSptr(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a89a1375_annotateStruct(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a89a1683_annotateAny(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a89a1991_annotateKind(_1a899cb24_dynamicTypeAnnotation*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a89a1c05_annotate(_1a899cb24_dynamicTypeAnnotation*);
inline void _1a89a2a6e_pushErrToken(_1a89a251e_fnCallArgChecker*, jule::Ptr<_1a52684c0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a89a2d8d_pushErr(_1a89a251e_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>> _1a89a3102_getParams(_1a89a251e_fnCallArgChecker*);
inline jule::Bool _1a89a33cc_checkCounts(_1a89a251e_fnCallArgChecker*, jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>>*);
inline jule::Bool _1a89a382d_checkArg(_1a89a251e_fnCallArgChecker*, jule::Ptr<_1a88ce03e_ParamIns>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Bool _1a89a3bd5_push(_1a89a251e_fnCallArgChecker*, jule::Ptr<_1a88ce03e_ParamIns>*, jule::Ptr<_1a889b270_Expr>);
inline jule::Bool _1a89a408c_pushVariadic(_1a89a251e_fnCallArgChecker*, jule::Ptr<_1a88ce03e_ParamIns>*, jule::I64);
inline jule::Bool _1a89a439a_checkArgs(_1a89a251e_fnCallArgChecker*, jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>>*);
inline jule::Bool _1a89a4631_checkDynamicTypeAnnotation(_1a89a251e_fnCallArgChecker*);
inline jule::Bool _1a89a48a6_check(_1a89a251e_fnCallArgChecker*);
inline void _1a89a56dc_pushErr(_1a89a51d1_structLitChecker*, jule::Ptr<_1a52684c0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a89a5a0b_pushSuggestion(_1a89a51d1_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1a89a5dc4_pushMatch(_1a89a51d1_structLitChecker*, jule::Ptr<_1a88b915b_FieldIns>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a52684c0_Token>*);
inline void _1a89a61e3_checkPair(_1a89a51d1_structLitChecker*, jule::Ptr<_1a88a0b15_FieldExprPair>*, jule::Slice<jule::Ptr<_1a889b270_Expr>>*);
inline jule::Bool _1a89a6501_readyExprs(_1a89a51d1_structLitChecker*, jule::Slice<jule::Ptr<_1a889b270_Expr>>*);
inline void _1a89a6776_check(_1a89a51d1_structLitChecker*, jule::Slice<jule::Ptr<_1a889b270_Expr>>*);
inline jule::Ptr<_1a8966901_Var> _1a89a727c_buildVar(_1a89a6cb5_rangeChecker*, jule::Ptr<_1a88a9701_VarDecl>*);
inline void _1a89a7458_setSizeKey(_1a89a6cb5_rangeChecker*);
inline void _1a89a7821_checkRangeExprValidity(_1a89a6cb5_rangeChecker*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline void _1a89a79ec_checkSlice(_1a89a6cb5_rangeChecker*);
inline void _1a89a7bc8_checkArray(_1a89a6cb5_rangeChecker*);
inline void _1a89a7da4_checkMapKeyA(_1a89a6cb5_rangeChecker*);
inline void _1a89a8080_checkMapKeyB(_1a89a6cb5_rangeChecker*);
inline void _1a89a825b_checkMap(_1a89a6cb5_rangeChecker*);
inline void _1a89a8437_checkStr(_1a89a6cb5_rangeChecker*);
inline void _1a89a8613_checkComptime(_1a89a6cb5_rangeChecker*);
inline jule::Bool _1a89a8877_checkComptimeRange(_1a89a6cb5_rangeChecker*);
inline jule::Bool _1a89a8adb_check(_1a89a6cb5_rangeChecker*);
inline void _1a89a96be_prepareTypes(_1a89a92b2_retTypeChecker*);
inline void _1a89a9944_prepareExprs(_1a89a92b2_retTypeChecker*, jule::Ptr<_1a889b270_Expr>*);
inline void _1a89a9b20_checkExprs(_1a89a92b2_retTypeChecker*);
inline jule::Bool _1a89a9e2d_check(_1a89a92b2_retTypeChecker*, jule::Ptr<_1a889b270_Expr>*);
inline jule::Ptr<_1a893d323_ImportInfo> _1a89ab847_SelectPackage(_1a89ab380_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)>);
inline jule::Ptr<_1a8966901_Var> _1a89abbee_FindVar(_1a89ab380_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a86ada55_TypeAlias> _1a89ac0a6_FindTypeAlias(_1a89ab380_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88b6d3a_Struct> _1a89ac45d_FindStruct(_1a89ab380_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88cc25c_Fn> _1a89ac815_FindFn(_1a89ab380_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88de47d_Trait> _1a89acb23_FindTrait(_1a89ab380_SymbolTable*, jule::Str);
inline jule::Ptr<_1a88e1c11_Enum> _1a89ace31_FindEnum(_1a89ab380_SymbolTable*, jule::Str);
inline jule::Ptr<_1a88e330b_TypeEnum> _1a89ad23e_FindTypeEnum(_1a89ab380_SymbolTable*, jule::Str);
inline jule::Ptr<_1a8966901_Var> _1a89ad805_findVar(_1a89ab380_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1a86ada55_TypeAlias> _1a89adc56_findTypeAlias(_1a89ab380_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1a89ae10d_defByIdent(_1a89ab380_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1a89ae55e_isDuplicatedIdent(_1a89ab380_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
inline jule::Bool _1a865e033_IsNil(_1a865dbe2_Data*);
inline jule::Bool _1a865e297_IsVoid(_1a865dbe2_Data*);
inline jule::Bool _1a865e50b_IsConst(_1a865dbe2_Data*);
inline jule::Bool _1a865e819_GoodOperand(_1a865dbe2_Data*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a8683d6b_pushErr(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a868418a_pushSuggestion(_1a8683860_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1a8684366_allowBuiltin(_1a8683860_Eval*);
inline void _1a8684542_disallowBuiltin(_1a8683860_Eval*);
inline jule::Bool _1a86847a6_isUnsafe(_1a8683860_Eval*);
inline jule::Bool _1a8684a1a_isGlobal(_1a8683860_Eval*);
inline jule::Bool _1a8684ce5_applyNumericPrefix(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8685059_litNil(_1a8683860_Eval*);
inline jule::Ptr<_1a865dbe2_Data> _1a8685367_litStr(_1a8683860_Eval*, jule::Ptr<_1a889c2a4_LitExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8685675_litBool(_1a8683860_Eval*, jule::Ptr<_1a889c2a4_LitExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8685983_litRune(_1a8683860_Eval*, jule::Ptr<_1a889c2a4_LitExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8685c91_litFloat(_1a8683860_Eval*, jule::Ptr<_1a889c2a4_LitExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a868609e_litInt(_1a8683860_Eval*, jule::Ptr<_1a889c2a4_LitExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a86863ac_litNum(_1a8683860_Eval*, jule::Ptr<_1a889c2a4_LitExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a86866ba_evalLit(_1a8683860_Eval*, jule::Ptr<_1a889c2a4_LitExpr>);
inline jule::Any _1a86869c8_findBuiltins(_1a8683860_Eval*, jule::Str);
inline jule::Any _1a8686d80_getDef(_1a8683860_Eval*, jule::Str, jule::Bool);
inline void _1abdc93b0_pushReference(_1a8683860_Eval*, jule::Ptr<_1a88cee0d_FnIns>*);
inline void _1abddca22_pushReference(_1a8683860_Eval*, jule::Ptr<_1a8966901_Var>*);
inline void _1abe798a0_pushReference(_1a8683860_Eval*, jule::Ptr<_1a88b9b51_StructIns>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8687413__evalEnum(_1a8683860_Eval*, jule::Ptr<_1a88e1c11_Enum>);
inline jule::Ptr<_1a865dbe2_Data> _1a86877ba_evalEnum(_1a8683860_Eval*, jule::Ptr<_1a88e1c11_Enum>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a8687ac8__evalTypeEnum(_1a8683860_Eval*, jule::Ptr<_1a88e330b_TypeEnum>);
inline jule::Ptr<_1a865dbe2_Data> _1a8687e80_evalTypeEnum(_1a8683860_Eval*, jule::Ptr<_1a88e330b_TypeEnum>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a868828d__evalStruct(_1a8683860_Eval*, jule::Ptr<_1a88b9b51_StructIns>);
inline jule::Ptr<_1a865dbe2_Data> _1a8688645_evalStruct(_1a8683860_Eval*, jule::Ptr<_1a88b9b51_StructIns>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a8688953_evalFnIns(_1a8683860_Eval*, jule::Ptr<_1a88cee0d_FnIns>);
inline void _1a8688c72_checkDeprecated(_1a8683860_Eval*, jule::Slice<jule::Ptr<_1a88645ce_Directive>>*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a8689129_evalFn(_1a8683860_Eval*, jule::Ptr<_1a88cc25c_Fn>, jule::Ptr<_1a52684c0_Token>);
inline void _1a86894e2_pushIllegalCycleError(_1a8683860_Eval*, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*, jule::Str*);
inline jule::Bool _1a8689899_checkCrossCycle(_1a8683860_Eval*, jule::Ptr<_1a8966901_Var>*, jule::Str*);
inline jule::Bool _1a8689c51_checkIllegalCycles(_1a8683860_Eval*, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a868a108_evalVar(_1a8683860_Eval*, jule::Ptr<_1a8966901_Var>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a868a4b0_evalTypeAlias(_1a8683860_Eval*, jule::Ptr<_1a86ada55_TypeAlias>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a868a867_evalDef(_1a8683860_Eval*, jule::Any, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a868ab75_evalIdent(_1a8683860_Eval*, jule::Ptr<_1a889cd65_IdentExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1a868ae83_evalUnary(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a889d56e_UnaryExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1a868b291_evalVariadic(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a889d926_VariadicExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1a868b59e_evalUnsafe(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a889c8e2_UnsafeExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1a868b8ac_evalArr(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a28b4_SliceExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1a868bd0d_evalExpSlc(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a28b4_SliceExpr>, jule::Ptr<_1a86ae79d_TypeKind>, jule::Any);
inline jule::Ptr<_1a865dbe2_Data> _1a868c11b_evalSliceExpr(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a28b4_SliceExpr>);
inline void _1a868c45c_checkIntegerIndexingByData(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a52684c0_Token>);
inline void _1a868c836_indexingPtr(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a88a3222_IndexingExpr>*);
inline void _1a868cbee_indexingArr(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a88a3222_IndexingExpr>*);
inline void _1a868d0b7_indexingSlc(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a88a3222_IndexingExpr>*);
inline void _1a868d480_indexingMap(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a88a3222_IndexingExpr>*);
inline void _1a868d848_indexingStr(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a88a3222_IndexingExpr>*);
inline void _1a868dc11_toIndexing(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a88a3222_IndexingExpr>*);
inline jule::Bool _1a868e184_pushGenericsFromExprSubIdent(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a889e608_SubIdentExpr>*, jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>>*, jule::Ptr<_1a889b270_Expr>*);
inline jule::Bool _1a868e54c_pushGenericsFromData(jule::Ptr<_1a8683860_Eval>, jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>>*, jule::Ptr<_1a889b270_Expr>*);
inline void _1a868e88d_evalIdentDeclFromIndexing(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a88a3222_IndexingExpr>*);
inline jule::Bool _1a868ed00_checkGenericFn(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88cee0d_FnIns>*, jule::Ptr<_1a52684c0_Token>*, jule::Any*);
inline void _1a8690141_evalFnGenericFromIndexing(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a88a3222_IndexingExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8690460_evalIndexing(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a3222_IndexingExpr>);
inline __jule_tuple_x_1a865dbe2_Data__jule_tuple_x_1a865dbe2_Data _1a869076d_evalSlicingExprs(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a382c_SlicingExpr>*);
inline void _1a86909e3_slicingArr(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a8690dab_slicingStr(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a869131d_checkSlicing(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a88a382c_SlicingExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a869162b_evalSlicing(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a382c_SlicingExpr>);
inline void _1a86919e4_castPtr(_1a8683860_Eval*, jule::Ptr<_1a86ae79d_TypeKind>, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline void _1a8691dac_castStruct(_1a8683860_Eval*, jule::Ptr<_1a86ae79d_TypeKind>, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline void _1a8692275_castRef(_1a8683860_Eval*, jule::Ptr<_1a86ae79d_TypeKind>, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline void _1a869263d_castSlc(_1a8683860_Eval*, jule::Ptr<_1a86ae79d_TypeKind>, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline void _1a869295c_castStr(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline void _1a8692d25_castInt(_1a8683860_Eval*, jule::Ptr<_1a86ae79d_TypeKind>, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline void _1a86931dd_castNum(_1a8683860_Eval*, jule::Ptr<_1a86ae79d_TypeKind>, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline void _1a86935a6_castPrim(_1a8683860_Eval*, jule::Ptr<_1a86ae79d_TypeKind>, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline void _1a86938c5_castConstant(_1a8683860_Eval*, jule::Ptr<_1a86ae79d_TypeKind>*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a8693c8d_castTypeEnum(_1a8683860_Eval*, jule::Ptr<_1a86ae79d_TypeKind>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a52684c0_Token>*);
inline void _1a8694156_castTypeEnumT(_1a8683860_Eval*, jule::Ptr<_1a86ae79d_TypeKind>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Ptr<_1a865dbe2_Data> _1a86945a7_evalCastByTypeNData(_1a8683860_Eval*, jule::Ptr<_1a86ae79d_TypeKind>, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a8694a08_evalCastT(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a86ae79d_TypeKind>*, jule::Ptr<_1a889b270_Expr>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8694d16_evalCast(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a889dccd_CastExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1a8695124_evalNsSelection(_1a8683860_Eval*, jule::Ptr<_1a889e185_NsSelectionExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1a8695575_evalStructLitExplicit(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88b9b51_StructIns>, jule::Slice<jule::Ptr<_1a889b270_Expr>>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a8695883_evalStructLit(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a13da_StructLit>);
inline _1a86c0ade_typeChecker _1a8695ae7_typeChecker(_1a8683860_Eval*);
inline jule::Ptr<_1a865dbe2_Data> _1a8695e05_evalType(_1a8683860_Eval*, jule::Ptr<_1a88970e5_TypeDecl>);
inline void _1a8696224_callTypeFn(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a8696543_callBuiltinFn(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a8696884_checkFnOfConcurrentCall(_1a8683860_Eval*, jule::Ptr<_1a88cee0d_FnIns>*, jule::Ptr<_1a52684c0_Token>);
inline void _1a8696c80_processExceptionalHandler(_1a8683860_Eval*, jule::Ptr<_1a88cee0d_FnIns>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a86970b0_callFn(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a86973bd_evalFnCall(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a0186_FnCallExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1a8697775_evalEnumStatic(_1a8683860_Eval*, jule::Ptr<_1a88e1c11_Enum>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a8697b2c_evalTypeEnumStatic(_1a8683860_Eval*, jule::Ptr<_1a88e330b_TypeEnum>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a8697ed4_evalStructStatic(_1a8683860_Eval*, jule::Ptr<_1a88b9b51_StructIns>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a8698435_evalTraitSubIdent(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a88de47d_Trait>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a8698952_evalStructSubIdentField(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a88b9b51_StructIns>*, jule::Ptr<_1a52684c0_Token>*, jule::Ptr<_1a88b915b_FieldIns>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8698e5d_evalStructSubIdent(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a88b9b51_StructIns>, jule::Ptr<_1a889e608_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1a865dbe2_Data> _1a8699315_evalSliceSubIdent(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a86996bc_evalArraySubIdent(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a86999ca_evalIntTypeStatic(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a8699cd8_evalUintTypeStatic(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a869a0e6_evalI8TypeStatic(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a869a404_evalI16TypeStatic(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a869a712_evalI32TypeStatic(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a869aa20_evalI64TypeStatic(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a869ad2d_evalU8TypeStatic(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a869b13b_evalU16TypeStatic(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a869b449_evalU32TypeStatic(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a869b757_evalU64TypeStatic(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a869ba65_evalF32TypeStatic(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a869bd73_evalF64TypeStatic(_1a8683860_Eval*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a869c22a_evalPrimStatic(_1a8683860_Eval*, jule::Str, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a865dbe2_Data> _1a869c5d2_evalTypeStatic(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a889e608_SubIdentExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1ac07785a_comptimeObjSubIdent(_1a8683860_Eval*, jule::Ptr<_1a8909069_comptimeTypeInfo>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a889e608_SubIdentExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1ac07b023_comptimeObjSubIdent(_1a8683860_Eval*, jule::Ptr<_1a88e5e57_comptimeStructField>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a889e608_SubIdentExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1ac07e697_comptimeObjSubIdent(_1a8683860_Eval*, jule::Ptr<_1a8901cba_comptimeEnumField>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a889e608_SubIdentExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1ac0830d5_comptimeObjSubIdent(_1a8683860_Eval*, jule::Ptr<_1a890453c_comptimeParam>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a889e608_SubIdentExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1ac086759_comptimeObjSubIdent(_1a8683860_Eval*, jule::Ptr<_1a88edcb7_comptimeStatic>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a889e608_SubIdentExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1ac089dcd_comptimeObjSubIdent(_1a8683860_Eval*, jule::Ptr<_1a890ea64_comptimeValue>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a889e608_SubIdentExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1ac08d552_comptimeObjSubIdent(_1a8683860_Eval*, jule::Ptr<_1a8913628_comptimeFile>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a889e608_SubIdentExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a869cdda_evalObjSubIdent(_1a8683860_Eval*, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a889e608_SubIdentExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1a869d1e8_evalSubIdent(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a889e608_SubIdentExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1a869d506_evalTuple(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a889bdec_TupleExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1a869d8ad_evalMap(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a86bc767_Map>, jule::Ptr<_1a88a185d_BraceLit>);
inline jule::Ptr<_1a865dbe2_Data> _1a869dbbb_evalBraceLit(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a185d_BraceLit>);
inline jule::Ptr<_1a865dbe2_Data> _1a869dec9_evalAnonFn(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a88a8722_FnDecl>);
inline jule::Ptr<_1a865dbe2_Data> _1a869e2d7_evalBinop(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a889ea7b_BinopExpr>);
inline jule::Ptr<_1a865dbe2_Data> _1a869e5e5_evalExprKind(jule::Ptr<_1a8683860_Eval>, jule::Any);
inline jule::Ptr<_1a865dbe2_Data> _1a869e903_eval1(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a889b270_Expr>);
inline jule::Ptr<_1a865dbe2_Data> _1a869ec11_eval(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a889b270_Expr>);
inline jule::Ptr<_1a865dbe2_Data> _1a86a001e_evalExpr1(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a889b270_Expr>);
inline jule::Ptr<_1a865dbe2_Data> _1a86a032c_evalExpr(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a889b270_Expr>);
inline _1a86a07a0_unaryEval static__1a86a0bce_new(jule::Ptr<_1a8683860_Eval>);
inline void _1a86a0daa_minus(_1a86a07a0_unaryEval*);
inline void _1a86a1086_plus(_1a86a07a0_unaryEval*);
inline void _1a86a1262_caret(_1a86a07a0_unaryEval*);
inline void _1a86a143d_excl(_1a86a07a0_unaryEval*);
inline void _1a86a1619_star(_1a86a07a0_unaryEval*);
inline void _1a86a17e5_amper(_1a86a07a0_unaryEval*);
inline void _1a86a19c1_typeDecl(_1a86a07a0_unaryEval*);
inline void _1a86a1b9c_evalData(_1a86a07a0_unaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a1eaa_eval(_1a86a07a0_unaryEval*, jule::Ptr<_1a889d56e_UnaryExpr>);
inline _1a86a2571_binaryEval static__1a86a2b48_newPlain(jule::Ptr<_1a8683860_Eval>);
inline _1a86a2571_binaryEval static__1a86a2e56_new(jule::Ptr<_1a8683860_Eval>, jule::Ptr<_1a52684c0_Token>);
inline jule::Bool _1a86a31ba_checkTypeCompatibility(_1a86a2571_binaryEval*);
inline jule::Bool _1a86a3462_checkStructCommonOperatorCompatibility(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a3709_evalComptimeTypeInfo(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a396d_evalNil(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a3bd2_evalEnum(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a3e46_evalTypeEnum(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a41aa_evalSptr(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a441e_evalPtr(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a4683_evalArr(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a48e7_evalSlc(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a4b5b_evalStruct(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a4dc0_evalTrait(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a5134_evalAny(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a5398_evalBool(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a560c_evalStr(_1a86a2571_binaryEval*);
inline void _1a86a57d8_setTypeToGreater(_1a86a2571_binaryEval*);
inline void _1a86a5a2a_checkModData(_1a86a2571_binaryEval*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a86a5c06_mod(_1a86a2571_binaryEval*);
inline jule::Bool _1a86a60ad_numbersAreCompatibile(_1a86a2571_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a6322_evalFloat(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a6586_evalInt(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a67ea_evalPrim(_1a86a2571_binaryEval*);
inline void _1a86a69c6_checkSpecialCases(_1a86a2571_binaryEval*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a6c3a_evalOp(_1a86a2571_binaryEval*);
inline void _1a86a6eb0_evalConst(_1a86a2571_binaryEval*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a86a7235_checkData(_1a86a2571_binaryEval*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a86a7411_checkDatas(_1a86a2571_binaryEval*);
inline void _1a86a7686_setModel(_1a86a2571_binaryEval*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a86a790b_postEval(_1a86a2571_binaryEval*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a7cb3_solveExplicit(_1a86a2571_binaryEval*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a86a80c1_eval(_1a86a2571_binaryEval*, jule::Ptr<_1a889ea7b_BinopExpr>*);
inline jule::Str _1a86aeb55_Str(_1a86ae79d_TypeKind*);
inline jule::Bool _1a86aee63_Equal(jule::Ptr<_1a86ae79d_TypeKind>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Bool _1a86b0590_Binded(_1a86ae79d_TypeKind*);
inline jule::Bool _1a86b0804_IsNil(_1a86ae79d_TypeKind*);
inline jule::Bool _1a86b0a68_Void(_1a86ae79d_TypeKind*);
inline jule::Bool _1a86b0ccc_Comparable(_1a86ae79d_TypeKind*);
inline jule::Bool _1a86b1041_Mutable(_1a86ae79d_TypeKind*);
inline jule::Bool _1a86b12a5_Ordered(_1a86ae79d_TypeKind*);
inline jule::Bool _1a86b1519_NilCompatible(_1a86ae79d_TypeKind*);
inline jule::Bool _1a86b177d_PerformsRC(_1a86ae79d_TypeKind*);
inline jule::Bool _1a86b19e2_SupportsCloning(_1a86ae79d_TypeKind*);
inline jule::Bool _1a86b1c56_Variadicable(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a86b7003_Prim> _1a86b1eba_Prim(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a86ba754_Sptr> _1a86b222e_Sptr(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a86bdcb8_Ptr> _1a86b2493_Ptr(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a88e1c11_Enum> _1a86b2707_Enum(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a88e330b_TypeEnum> _1a86b296b_TypeEnum(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a86bd35b_Arr> _1a86b2bd0_Arr(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a86bb1b1_Slc> _1a86b2e44_Slc(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a88cee0d_FnIns> _1a86b31a8_Fn(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a88b9b51_StructIns> _1a86b341c_Struct(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a88de47d_Trait> _1a86b3681_Trait(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a86bc767_Map> _1a86b38e5_Map(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a86bbcb6_Tuple> _1a86b3b59_Tup(_1a86ae79d_TypeKind*);
inline jule::Bool _1a86b3dbd_comptime(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a88ec7dd_comptimeStructFields> _1a86b4132_comptimeStructFields(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a88e5e57_comptimeStructField> _1a86b4396_comptimeStructField(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a8902edb_comptimeEnumFields> _1a86b460a_comptimeEnumFields(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a8901cba_comptimeEnumField> _1a86b486e_comptimeEnumField(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a89065d8_comptimeParams> _1a86b4ad3_comptimeParams(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a890453c_comptimeParam> _1a86b4d47_comptimeParam(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a88e5462_comptimeRange> _1a86b50ab_comptimeRange(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a8907aa1_comptimeTypeInfos> _1a86b5320_comptimeTypeInfos(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a8909069_comptimeTypeInfo> _1a86b5584_comptimeTypeInfo(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a8900879_comptimeStatics> _1a86b57e8_comptimeStatics(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a88edcb7_comptimeStatic> _1a86b5a5c_comptimeStatic(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a890ea64_comptimeValue> _1a86b5cc1_comptimeValue(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a8913628_comptimeFile> _1a86b6035_comptimeFile(_1a86ae79d_TypeKind*);
inline jule::Ptr<_1a8912160_comptimeFiles> _1a86b6299_comptimeFiles(_1a86ae79d_TypeKind*);
inline jule::Bool _1a86b69b4_checked(_1a86b6651_TypeSymbol*);
inline jule::Str _1a86b7333_Str(_1a86b7003_Prim*);
inline jule::Bool _1a86b7641_Equal(jule::Ptr<_1a86b7003_Prim>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Bool _1a86b7ab4_IsConstraint(_1a86b7003_Prim*);
inline jule::Bool _1a86b7d28_IsI8(_1a86b7003_Prim*);
inline jule::Bool _1a86b808c_IsI16(_1a86b7003_Prim*);
inline jule::Bool _1a86b8301_IsI32(_1a86b7003_Prim*);
inline jule::Bool _1a86b8565_IsI64(_1a86b7003_Prim*);
inline jule::Bool _1a86b87c9_IsU8(_1a86b7003_Prim*);
inline jule::Bool _1a86b8a3d_IsU16(_1a86b7003_Prim*);
inline jule::Bool _1a86b8ca2_IsU32(_1a86b7003_Prim*);
inline jule::Bool _1a86b9016_IsU64(_1a86b7003_Prim*);
inline jule::Bool _1a86b927a_IsF32(_1a86b7003_Prim*);
inline jule::Bool _1a86b94de_IsF64(_1a86b7003_Prim*);
inline jule::Bool _1a86b9753_IsInt(_1a86b7003_Prim*);
inline jule::Bool _1a86b99b7_IsUint(_1a86b7003_Prim*);
inline jule::Bool _1a86b9c2b_IsUintptr(_1a86b7003_Prim*);
inline jule::Bool _1a86b9e90_IsBool(_1a86b7003_Prim*);
inline jule::Bool _1a86ba204_IsStr(_1a86b7003_Prim*);
inline jule::Bool _1a86ba468_IsAny(_1a86b7003_Prim*);
inline jule::Str _1a86baab7_Str(_1a86ba754_Sptr*);
inline jule::Bool _1a86badc5_Equal(jule::Ptr<_1a86ba754_Sptr>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Str _1a86bb634_Str(_1a86bb1b1_Slc*);
inline jule::Bool _1a86bb942_Equal(jule::Ptr<_1a86bb1b1_Slc>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Str _1a86bc129_Str(_1a86bbcb6_Tuple*);
inline jule::Bool _1a86bc437_Equal(jule::Ptr<_1a86bbcb6_Tuple>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Str _1a86bcaca_Str(_1a86bc767_Map*);
inline jule::Bool _1a86bcdd8_Equal(jule::Ptr<_1a86bc767_Map>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Str _1a86bd6be_Str(_1a86bd35b_Arr*);
inline jule::Bool _1a86bd9cc_Equal(jule::Ptr<_1a86bd35b_Arr>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Str _1a86be12b_Str(_1a86bdcb8_Ptr*);
inline jule::Bool _1a86be439_Equal(jule::Ptr<_1a86bdcb8_Ptr>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Bool _1a86be78b_IsUnsafe(_1a86bdcb8_Ptr*);
inline void _1a86c12d7_pushErr(_1a86c0ade_typeChecker*, jule::Ptr<_1a52684c0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a86c14b3_allowBuiltin(_1a86c0ade_typeChecker*);
inline void _1a86c168e_disallowBuiltin(_1a86c0ade_typeChecker*);
inline void _1ac227b5e_pushReference(_1a86c0ade_typeChecker*, jule::Ptr<_1a88b9b51_StructIns>*);
inline void _1ac22a788_pushReference(_1a86c0ade_typeChecker*, jule::Ptr<_1a88de47d_Trait>*);
inline void _1a86c1b89_pushReferenceByKind(_1a86c0ade_typeChecker*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline void _1a86c2052_pushCycleError(_1a86c0ade_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _1a86c2409_checkCrossCycle(_1a86c0ade_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _1a86c27b1_checkIllegalCycles(_1a86c0ade_typeChecker*, jule::Ptr<_1a88976ab_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1a86ae33b_Kind> _1a86c2b68_fromTypeAlias(_1a86c0ade_typeChecker*, jule::Ptr<_1a88976ab_IdentTypeDecl>*, jule::Ptr<_1a86ada55_TypeAlias>*);
inline jule::Ptr<_1a88e1c11_Enum> _1a86c3020_fromEnum(_1a86c0ade_typeChecker*, jule::Ptr<_1a88976ab_IdentTypeDecl>*, jule::Ptr<_1a88e1c11_Enum>*);
inline jule::Ptr<_1a88e330b_TypeEnum> _1a86c33c7_fromTypeEnum(_1a86c0ade_typeChecker*, jule::Ptr<_1a88976ab_IdentTypeDecl>*, jule::Ptr<_1a88e330b_TypeEnum>*);
inline jule::Ptr<_1a88de47d_Trait> _1a86c377e_fromTrait(_1a86c0ade_typeChecker*, jule::Ptr<_1a88976ab_IdentTypeDecl>*, jule::Ptr<_1a88de47d_Trait>*);
inline jule::Bool _1a86c3b36_checkStructIns(_1a86c0ade_typeChecker*, jule::Ptr<_1a88b9b51_StructIns>*, jule::Ptr<_1a52684c0_Token>*);
inline void _1a86c3dcd_appendUsedStructReference(_1a86c0ade_typeChecker*, jule::Ptr<_1a88b6d3a_Struct>*);
inline jule::Ptr<_1a88b9b51_StructIns> _1a86c4296_buildStructInstance(_1a86c0ade_typeChecker*, jule::Ptr<_1a88976ab_IdentTypeDecl>*, jule::Ptr<_1a88b6d3a_Struct>*);
inline jule::Ptr<_1a88b9b51_StructIns> _1a86c464d_fromStruct(_1a86c0ade_typeChecker*, jule::Ptr<_1a88976ab_IdentTypeDecl>*, jule::Ptr<_1a88b6d3a_Struct>*);
inline jule::Trait<_1a86ae33b_Kind> _1a86c495b_getDef(_1a86c0ade_typeChecker*, jule::Ptr<_1a88976ab_IdentTypeDecl>*);
inline jule::Trait<_1a86ae33b_Kind> _1a86c4c69_buildIdent(_1a86c0ade_typeChecker*, jule::Ptr<_1a88976ab_IdentTypeDecl>);
inline jule::Trait<_1a86ae33b_Kind> _1a86c5077_buildSubIdent(_1a86c0ade_typeChecker*, jule::Ptr<_1a8897997_SubIdentTypeDecl>);
inline jule::Ptr<_1a86ba754_Sptr> _1a86c5385_buildSptrFromType(_1a86c0ade_typeChecker*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Ptr<_1a86ba754_Sptr> _1a86c5693_buildSptr(_1a86c0ade_typeChecker*, jule::Ptr<_1a8898107_SptrTypeDecl>);
inline jule::Ptr<_1a86bdcb8_Ptr> _1a86c59a1_buildPtrFromType(_1a86c0ade_typeChecker*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Ptr<_1a86bdcb8_Ptr> _1a86c5cae_buildPtr(_1a86c0ade_typeChecker*, jule::Ptr<_1a8898aca_PtrTypeDecl>);
inline jule::Ptr<_1a86bb1b1_Slc> _1a86c60bc_buildSlc(_1a86c0ade_typeChecker*, jule::Ptr<_1a8898503_SlcTypeDecl>);
inline jule::Ptr<_1a86bd35b_Arr> _1a86c63ca_buildArr(_1a86c0ade_typeChecker*, jule::Ptr<_1a88992a1_ArrTypeDecl>);
inline jule::Ptr<_1a86bc767_Map> _1a86c66d8_buildMap(_1a86c0ade_typeChecker*, jule::Ptr<_1a88999aa_MapTypeDecl>);
inline jule::Ptr<_1a86bbcb6_Tuple> _1a86c69e6_buildTuple(_1a86c0ade_typeChecker*, jule::Ptr<_1a88987de_TupleTypeDecl>);
inline jule::Bool _1a86c6d04_checkFnTypes(_1a86c0ade_typeChecker*, jule::Ptr<_1a88cee0d_FnIns>*);
inline jule::Ptr<_1a88cee0d_FnIns> _1a86c7112_buildFn(_1a86c0ade_typeChecker*, jule::Ptr<_1a88a8722_FnDecl>);
inline jule::Trait<_1a86ae33b_Kind> _1a86c7420_buildByNamespace(_1a86c0ade_typeChecker*, jule::Ptr<_1a8897d1b_NamespaceTypeDecl>);
inline jule::Ptr<_1a86ae79d_TypeKind> _1a86c772d_build(_1a86c0ade_typeChecker*, jule::Any*);
inline jule::Ptr<_1a86ae79d_TypeKind> _1a86c7a3b_checkDecl(_1a86c0ade_typeChecker*, jule::Ptr<_1a88970e5_TypeDecl>*);
inline jule::Bool static__1a86c8421_prim(jule::Str*, jule::Ptr<_1a86b7003_Prim>);
inline jule::Bool static__1a86c8762_exist(jule::Str*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline void _1a93a25a0_stop(_1a93a1e51_scopeParser*);
inline jule::Bool _1a93a2814_stopped(_1a93a1e51_scopeParser*);
inline jule::Bool _1a93a2a78_finished(_1a93a1e51_scopeParser*);
inline jule::Bool _1a93a2cdc_isLastSt(_1a93a1e51_scopeParser*);
inline void _1a93a310b_pushErr(_1a93a1e51_scopeParser*, jule::Ptr<_1a52684c0_Token>, jule::Str);
inline void _1a93a342a_pushSuggestion(_1a93a1e51_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1a93a36a0_insertAsNext(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a93a1626_stmt> _1a93a3914_next(_1a93a1e51_scopeParser*);
inline jule::Ptr<_1a88a6c2b_ScopeTree> _1a93a3cbb_buildScope(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a88a9701_VarDecl> _1a93a40c9_buildVarSt(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88a9aa8_RetSt> _1a93a43d7_buildRetSt(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88aa218_Iter> _1a93a46e5_buildWhileNextIter(_1a93a1e51_scopeParser*, jule::Ptr<_1a93a1626_stmt>*);
inline jule::Ptr<_1a88aa9dd_WhileKind> _1a93a4a03_buildWhileIterKind(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _1a93a4d11_getRangeKindKeysTokens(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88a9701_VarDecl> _1a93a511e_buildRangeKindKey(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Slice<jule::Ptr<_1a88a9701_VarDecl>> _1a93a542c_buildRangeKindKeys(_1a93a1e51_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>>*);
inline void _1a93a576d_setupRangeKindKeysPlain(_1a93a1e51_scopeParser*, jule::Ptr<_1a88ab37e_RangeKind>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93a5ac0_setupRangeKindKeysExplicit(_1a93a1e51_scopeParser*, jule::Ptr<_1a88ab37e_RangeKind>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93a5e00_setupRangeKindKeys(_1a93a1e51_scopeParser*, jule::Ptr<_1a88ab37e_RangeKind>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88ab37e_RangeKind> _1a93a6351_buildRangeIterKind(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Any _1a93a6708_buildCommonIterKind(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Ptr<_1a88aa218_Iter> _1a93a6a16_buildCommonIter(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88aa218_Iter> _1a93a6d24_buildIterSt(_1a93a1e51_scopeParser*, jule::Ptr<_1a93a1626_stmt>*);
inline jule::Ptr<_1a88ab736_BreakSt> _1a93a7132_buildBreakSt(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88abadd_ContSt> _1a93a7440_buildContSt(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88ac061_If> _1a93a774d_buildIf(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88ac418_Else> _1a93a7a5b_buildElse(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88ac88b_Conditional> _1a93a7d69_buildIfElseChain(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a889b270_Expr> _1a93a8177_buildCoCallSt(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88a47ea_GotoSt> _1a93a8485_buildGotoSt(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88a4ad6_FallSt> _1a93a8793_buildFallSt(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88ad062_TypeAliasDecl> _1a93a8aa1_buildTypeAliasSt(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93a9013_pushCaseExpr(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>, jule::Ptr<_1a52684c0_Token>, jule::Bool, jule::Slice<jule::Ptr<_1a889b270_Expr>>*);
inline jule::Slice<jule::Ptr<_1a889b270_Expr>> _1a93a9464_buildCaseExprs(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Ptr<_1a52684c0_Token>*, jule::Bool);
inline jule::Ptr<_1a88a6c2b_ScopeTree> _1a93a9772_buildCaseScope(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline __jule_tuple_x_1a88ad4d5_Case__jule_tuple_bool _1a93a9b29_buildCase(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Bool);
inline __jule_tuple_sx_1a88ad4d5_Case__jule_tuple_x_1a88ac418_Else _1a93a9ed1_buildCases(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>, jule::Bool);
inline jule::Ptr<_1a88adbab_MatchCase> _1a93aa2de_buildMatchCase(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88a6c2b_ScopeTree> _1a93aa5ec_buildScopeSt(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88a4443_LabelSt> _1a93aa90a_buildLabelSt(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline __jule_tuple__1a88a63e0_StmtData__jule_tuple_bool _1a93aac18_buildIdSt(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a93ba134_assignInfo> _1a93ab026_buildAssignInfo(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88a51e1_AssignLeft> _1a93ab334_buildAssignL(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Slice<jule::Ptr<_1a88a51e1_AssignLeft>> _1a93ab642_buildAssignLs(_1a93a1e51_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>>*);
inline __jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool _1a93ab950_buildPlainAssign(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Bool _1a93abd07_buildDeclAssign1(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Ptr<_1a88a5730_AssignSt>*);
inline __jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool _1a93ac115_buildDeclAssign(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline __jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool _1a93ac423_buildAssignSt(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a889bb11_UseExpr> _1a93ac731_buildUseExpr(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Any _1a93aca3e_buildSt(_1a93a1e51_scopeParser*, jule::Ptr<_1a93a1626_stmt>*);
inline void _1a93acd5d_build(_1a93a1e51_scopeParser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Ptr<_1a88a6c2b_ScopeTree>*);
inline void _1a93ae07e_pushErr(_1a93ad7ed_exprBuilder*, jule::Ptr<_1a52684c0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a93ae39d_pushSuggestion(_1a93ad7ed_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a889bdec_TupleExpr> _1a93ae6ab_buildTuple(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>>*);
inline jule::Ptr<_1a889c2a4_LitExpr> _1a93ae9b9_buildLit(_1a93ad7ed_exprBuilder*, jule::Ptr<_1a52684c0_Token>);
inline jule::Any _1a93b00d5_buildSingle(_1a93ad7ed_exprBuilder*, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a889cd65_IdentExpr> _1a93b03e3_buildBindIdent(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a889d56e_UnaryExpr> _1a93b0701_buildUnary(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a889e608_SubIdentExpr> _1a93b0a0e_buildObjSubIdent(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a889e185_NsSelectionExpr> _1a93b0d1c_buildNsSubIdent(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93b112a_buildType(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Any _1a93b1438_buildSubIdent(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a889d926_VariadicExpr> _1a93b1746_buildVariadic(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a889b55b_RangeExpr> _1a93b1a76_buildBetweenParentheses(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a889dccd_CastExpr> _1a93b1d95_tryBuildCast(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93b225d_pushArg(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a889b270_Expr>>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>, jule::Ptr<_1a52684c0_Token>);
inline jule::Slice<jule::Ptr<_1a889b270_Expr>> _1a93b256b_buildArgs(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88a0186_FnCallExpr> _1a93b2cca_buildFnCall(_1a93ad7ed_exprBuilder*, jule::Ptr<_1a52684c0_Token>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Any _1a93b30d8_buildParenthesesRange(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a889c8e2_UnsafeExpr> _1a93b33e6_buildUnsafeExpr(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88a8722_FnDecl> _1a93b3704_buildAnonFn(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Any _1a93b3a12_buildUnsafe(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93b3dca_pushRangeLitPart(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>, jule::Ptr<_1a52684c0_Token>, jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _1a93b420a_getBraceRangeLitExprParts(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88a0b15_FieldExprPair> _1a93b4529_buildFieldExprPair(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a889b270_Expr> _1a93b4837_buildStructLitExpr(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Slice<jule::Ptr<_1a889b270_Expr>> _1a93b4b45_buildStructLitExprs(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88a13da_StructLit> _1a93b4e75_buildTypedStructLiteral(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a889b270_Expr> _1a93b5294_buildBraceLitPart(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88a185d_BraceLit> _1a93b55a2_buildBraceLit(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Any _1a93b58b0_buildBraceRange(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _1a93b5bbd_getEnumerableParts(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88a28b4_SliceExpr> _1a93b5ecb_buildSlice(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88a3222_IndexingExpr> _1a93b642c_buildIndexing(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>, jule::Slice<jule::Ptr<_1a52684c0_Token>>, jule::Ptr<_1a52684c0_Token>);
inline jule::Ptr<_1a88a382c_SlicingExpr> _1a93b69c1_buildSlicing(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Ptr<_1a52684c0_Token>*, jule::Ptr<_1a52684c0_Token>);
inline jule::Any _1a93b6cce_buildBracketRange(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Any _1a93b70dc_buildExclRight(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Any _1a93b73ea_buildData(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Any _1a93b77a2_buildBinop(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::I64);
inline jule::Any _1a93b7ab0_build(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Any _1a93b7dbd_buildKind(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a889b270_Expr> _1a93b81cb_buildFromTokens(_1a93ad7ed_exprBuilder*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline void _1a93bd92e_stop(_1a93bd643_parser*);
inline jule::Bool _1a93bdb93_stopped(_1a93bd643_parser*);
inline void _1a93be05b_pushErr(_1a93bd643_parser*, jule::Ptr<_1a52684c0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a93be37a_pushSuggestion(_1a93bd643_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a889b270_Expr> _1a93be688_buildExpr(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88645ce_Directive> _1a93be996_buildDirective(_1a93bd643_parser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline void _1a93bec1b_pushDirective(_1a93bd643_parser*, jule::Ptr<_1a88645ce_Directive>);
inline jule::Ptr<_1a88a6c2b_ScopeTree> _1a93c00c3_buildScope(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Ptr<_1a52684c0_Token>);
inline __jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool _1a93c0524__buildType(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool _1a93c0975_buildType(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1a88ad062_TypeAliasDecl> _1a93c0c83_buildTypeAliasDecl(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93c10a2_buildVarTypeAndExpr(jule::Ptr<_1a93bd643_parser>, jule::Ptr<_1a88a9701_VarDecl>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93c13c1_buildVarCommon(jule::Ptr<_1a93bd643_parser>, jule::Ptr<_1a88a9701_VarDecl>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline void _1a93c1789_buildVarBegin(_1a93bd643_parser*, jule::Ptr<_1a88a9701_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88a9701_VarDecl> _1a93c1a97_buildVar(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88a408b_GenericDecl> _1a93c1da5_buildGeneric(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>> _1a93c225c_buildGenerics(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Ptr<_1a52684c0_Token>*);
inline jule::Ptr<_1a88a7402_ParamDecl> _1a93c256a_buildSelfParam(_1a93bd643_parser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline void _1a93c2933_paramTypeBegin(_1a93bd643_parser*, jule::Ptr<_1a88a7402_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93c2c52_buildParamType(jule::Ptr<_1a93bd643_parser>, jule::Ptr<_1a88a7402_ParamDecl>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93c3071_buildParamBody(jule::Ptr<_1a93bd643_parser>, jule::Ptr<_1a88a7402_ParamDecl>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88a7402_ParamDecl> _1a93c337e_buildParam(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline void _1a93c3604_checkParams(_1a93bd643_parser*, jule::Slice<jule::Ptr<_1a88a7402_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1a88a7402_ParamDecl>> _1a93c39ab_buildParams(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Bool);
inline __jule_tuple_x_1a8899d62_RetTypeDecl__jule_tuple_bool _1a93c3d63_buildMultiRetType(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::I64*);
inline __jule_tuple_x_1a8899d62_RetTypeDecl__jule_tuple_bool _1a93c421a_buildRetType(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::I64*);
inline jule::Ptr<_1a88a8722_FnDecl> _1a93c466b_buildFnPrototype(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1a88a8722_FnDecl> _1a93c4abc_buildFn(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1a52684c0_Token>> _1a93c4dca_getUseDeclSelectors(_1a93bd643_parser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline void _1a93c51e9_buildBindUseDecl(_1a93bd643_parser*, jule::Ptr<_1a88ae44d_UseDecl>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93c5518_buildStdUseDecl(_1a93bd643_parser*, jule::Ptr<_1a88ae44d_UseDecl>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline void _1a93c5837_buildIdentUseDecl(_1a93bd643_parser*, jule::Ptr<_1a88ae44d_UseDecl>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline void _1a93c5b56_parseUseDecl(_1a93bd643_parser*, jule::Ptr<_1a88ae44d_UseDecl>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88ae44d_UseDecl> _1a93c600d_buildUseDecl(_1a93bd643_parser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>, jule::Bool);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93c63b5_buildTypeEnumItemKind(jule::Ptr<_1a93bd643_parser>, jule::I64*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Slice<jule::Ptr<_1a88b0bbe_TypeEnumItemDecl>> _1a93c66c3_buildTypeEnumItems(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88b12c9_TypeEnumDecl> _1a93c69d1_buildTypeEnumDecl(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a889b270_Expr> _1a93c6d88_buildEnumItemExpr(jule::Ptr<_1a93bd643_parser>, jule::I64*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Slice<jule::Ptr<_1a88ae8c1_EnumItemDecl>> _1a93c7196_buildEnumItems(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88b03e9_EnumDecl> _1a93c74a4_buildEnumDecl(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Any _1a93c77b2_buildNodeEnumDecl(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88b153d_FieldDecl> _1a93c7ac0_buildField(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Slice<jule::Ptr<_1a88b153d_FieldDecl>> _1a93c7dcd_buildStructDeclFields(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88b1d8a_StructDecl> _1a93c81db_buildStructDecl(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93c8461_checkMethodReceiver(_1a93bd643_parser*, jule::Ptr<_1a88a8722_FnDecl>*);
inline void _1a93c8780_buildTraitBody(jule::Ptr<_1a93bd643_parser>, jule::Ptr<_1a88b2561_TraitDecl>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88b2561_TraitDecl> _1a93c8a8d_buildTraitDecl(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88a8722_FnDecl> _1a93c8d9b_buildBindFn(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88a9701_VarDecl> _1a93c91a9_buildBindVar(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88b1d8a_StructDecl> _1a93c94b7_buildBindStruct(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88ad062_TypeAliasDecl> _1a93c97c5_buildBindTypeAlias(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Ptr<_1a88ae44d_UseDecl> _1a93c9ad3_buildBindUse(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Any _1a93c9de1_buildBind(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88a8722_FnDecl> _1a93ca1ee_getMethod(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93ca51d_parseImplBody(jule::Ptr<_1a93bd643_parser>, jule::Ptr<_1a88b2b6b_Impl>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a88b2b6b_Impl> _1a93ca82b_buildImpl(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Any _1a93cab39_buildNodeData(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93cadae_applyFnMeta(_1a93bd643_parser*, jule::Ptr<_1a88a8722_FnDecl>*);
inline void _1a93cb134_applyMeta(_1a93bd643_parser*, _1a88641d3_Node*);
inline void _1a93cb3a9_pushUseDecl(jule::Ptr<_1a93bd643_parser>, jule::Ptr<_1a88ae44d_UseDecl>*);
inline jule::Bool _1a93cb6b7_pushMetaNodes(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline _1a88641d3_Node _1a93cb9c5_parseNode(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93cbc4a_appendNode(jule::Ptr<_1a93bd643_parser>, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93cc1ac_removeRange(_1a93bd643_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Slice<jule::I64>*);
inline void _1a93cc575_pushWrongOrderCloseErr(_1a93bd643_parser*, jule::Ptr<_1a52684c0_Token>*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Slice<jule::I64>*);
inline void _1a93cc9d7_pushRangeClose(_1a93bd643_parser*, jule::Ptr<_1a52684c0_Token>, jule::U64, jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::Slice<jule::I64>*);
inline void _1a93ccc5c_checkRanges(_1a93bd643_parser*, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline void _1a93cced2_parse(jule::Ptr<_1a93bd643_parser>, jule::Ptr<_1a526d85a_File>*);
inline void _1a93ce8c9_pushErr(_1a93ce368_typeBuilder*, jule::Ptr<_1a52684c0_Token>, jule::Str);
inline void _1a93cebe8_pushSuggestion(_1a93ce368_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93cee5c_buildNamespace(_1a93ce368_typeBuilder*);
inline jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> _1a93d01c1_buildGenerics(_1a93ce368_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _1a93d0435_identGenerics(_1a93ce368_typeBuilder*);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d0699_buildIdent(_1a93ce368_typeBuilder*);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d090d_buildCppLink(_1a93ce368_typeBuilder*);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d0b72_buildFn(_1a93ce368_typeBuilder*);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d0dd6_buildPtr(_1a93ce368_typeBuilder*);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d114a_buildSptr(_1a93ce368_typeBuilder*);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d13ae_buildSlc(_1a93ce368_typeBuilder*);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d1623_buildArr(_1a93ce368_typeBuilder*);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d1887_buildMap(_1a93ce368_typeBuilder*);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d1aeb_buildEnumerable(_1a93ce368_typeBuilder*);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d1d60_step(_1a93ce368_typeBuilder*);
inline __jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool _1a93d20c4_build(_1a93ce368_typeBuilder*);
inline void _1a8b30c74_pushErr(_1a8b30768_directiveEval*, jule::Ptr<_1a52684c0_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _1a8b3112b_splitOperans(_1a8b30768_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Bool _1a8b31439_evalDirectiveIdent(_1a8b30768_directiveEval*, jule::Str);
inline jule::Bool _1a8b31747_evalDirectivePart(_1a8b30768_directiveEval*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Bool _1a8b319ab_eval(_1a8b30768_directiveEval*);
inline jule::Ptr<_1a93d30d6_JuleImporter> static__1a93d34c1_New(_1a8b2e415_CompileInfo);
inline jule::Slice<jule::Ptr<_1a893d323_ImportInfo>> _1a93d3735_AllPackages(_1a93d30d6_JuleImporter*);
inline void _1a93d3b42_SetModPath(_1a93d30d6_JuleImporter*, jule::Str);
inline jule::Str _1a93d3da6_GetModPath(_1a93d30d6_JuleImporter*);
inline jule::Str _1a93d41b4_ModById(_1a93d30d6_JuleImporter*, jule::I64);
inline jule::Ptr<_1a893d323_ImportInfo> _1a93d44c2_GetImport(_1a93d30d6_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log _1a93d4879_ImportPackage(_1a93d30d6_JuleImporter*, jule::Str, jule::Bool);
inline void _1a93d4aee_Imported(_1a93d30d6_JuleImporter*, jule::Ptr<_1a893d323_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1a4deb40b_Log _1a93d4eea_isPassBuildDirectives(_1a93d30d6_JuleImporter*, jule::Ptr<_1a8863347_Ast>*);
inline jule::Bool _1ac78d5d1_isCommonOrdered(jule::Slice<jule::Ptr<_1a88b6d3a_Struct>>, jule::Ptr<_1a88b6d3a_Struct>);
inline jule::Bool _1ac792ecb_isCommonOrdered(jule::Slice<jule::Ptr<_1a8966901_Var>>, jule::Ptr<_1a8966901_Var>);
inline void _1ac78a204_orderCommon(jule::Slice<jule::Ptr<_1a88b6d3a_Struct>>*);
inline void _1ac78aa40_orderCommon(jule::Slice<jule::Ptr<_1a8966901_Var>>*);
inline void static__1a93d897c_orderStructures(jule::Slice<jule::Ptr<_1a88b6d3a_Struct>>*);
inline void static__1a93d8b8b_orderVars(jule::Slice<jule::Ptr<_1a8966901_Var>>*);
inline void _1a9481409_optimizeChild(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Ptr<_1a891e38c_Scope>*);
inline void _1a94816a1_optimizeBodyChildExceptional(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Ptr<_1a891e38c_Scope>*);
inline void _1a9481937_optimizeBodyChild(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Ptr<_1a891e38c_Scope>*);
inline void _1a9481bac_optimizeExprModel(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Any*);
inline void _1a9481d88_eliminateFollowed(_1a9480e75_scopeDeadCode*);
inline void _1a948210d_pushGoto(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Ptr<_1a8921db7_GotoSt>);
inline void _1a9482383_pushLabel(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Ptr<_1a8921acb_Label>);
inline void _1a9482608_optimizeRangeIter(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Ptr<_1a892103c_RangeIter>);
inline void _1a948287d_optimizeWhileIter(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Ptr<_1a8920657_WhileIter>);
inline void _1a9482b03_optimizeInfIter(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Ptr<_1a89201d4_InfIter>);
inline void _1a9482d78_optimizeConditional(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Ptr<_1a891ede8_Conditional>);
inline void _1a94830ed_optimizeMatch(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Ptr<_1a89231a4_Match>);
inline void _1a9483373_optimizeAssign(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Ptr<_1a89226e2_Assign>);
inline void _1a94835e8_optimizeMultiAssign(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Ptr<_1a8922a99_MultiAssign>);
inline void _1a948386d_optimizeStmt(jule::Ptr<_1a9480e75_scopeDeadCode>, jule::Any);
inline void _1a9483a49_optimizeStmts(jule::Ptr<_1a9480e75_scopeDeadCode>);
inline _1a9484dd0_exprDeadCode static__1a94854b8_new(jule::Ptr<_1a9480e75_scopeDeadCode>*);
inline void _1a948573d_binary(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88be01d_BinopExprModel>);
inline void _1a94859b3_unary(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88be3c5_UnaryExprModel>);
inline void _1a9485c38_structureLit(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88bec44_StructLitExprModel>);
inline void _1a9485ead_allocStructure(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c0052_AllocStructLitExprModel>);
inline void _1a9486233_casting(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c05a2_CastingExprModel>);
inline void _1a94864a8_args(_1a9484dd0_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1a948672d_funcCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c0e54_FnCallExprModel>);
inline void _1a94869a3_slice(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c130b_SliceExprModel>);
inline void _1a9486c28_array(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c4034_ArrayExprModel>);
inline void _1a9486e9d_indexing(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c177e_IndexingExprModel>);
inline void _1a9487223_anonFunc(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c1b36_AnonFnExprModel>);
inline void _1a9487498_mapExpr(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c2461_MapExprModel>);
inline void _1a948771d_slicing(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c29a0_SlicingExprModel>);
inline void _1a9487993_traitSub(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c2ede_TraitSubIdentExprModel>);
inline void _1a9487c18_structureSub(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c37c5_StructSubIdentExprModel>);
inline void _1a9487e8d_commonSub(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c4881_CommonSubIdentExprModel>);
inline void _1a9488213_tuple(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c4b7d_TupleExprModel>);
inline void _1a9488488_newCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c5b4b_BuiltinNewCallExprModel>);
inline void _1a948870d_outCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c5057_BuiltinOutCallExprModel>);
inline void _1a9488983_outlnCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c5442_BuiltinOutlnCallExprModel>);
inline void _1a9488c08_panicCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c6036_BuiltinPanicCallExprModel>);
inline void _1a9488e7d_assertCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c64dc_BuiltinAssertCallExprModel>);
inline void _1a9489203_errorCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c83bd_BuiltinErrorCallExprModel>);
inline void _1a9489478_makeCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c6993_BuiltinMakeCallExprModel>);
inline void _1a94896ed_appendCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c6d7d_BuiltinAppendCallExprModel>);
inline void _1a9489973_lenCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c719c_BuiltinLenCallExprModel>);
inline void _1a9489be8_capCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c74bb_BuiltinCapCallExprModel>);
inline void _1a9489e6d_cloneCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c5761_BuiltinCloneCallExprModel>);
inline void _1a948a1e3_deleteCall(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c7b70_BuiltinDeleteCallExprModel>);
inline void _1a948a468_sizeof(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c86ba_SizeofExprModel>);
inline void _1a948a6dd_alignof(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c89a6_AlignofExprModel>);
inline void _1a948a963_integratedToStr(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c90a0_IntegratedToStrExprModel>);
inline void _1a948abd8_free(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c9754_FreeExprModel>);
inline void _1a948ae5d_backendEmit(_1a9484dd0_exprDeadCode*, jule::Ptr<_1a88c9468_BackendEmitExprModel>);
inline void _1a948b1d3_optimize(_1a9484dd0_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1a8786b3e_scopeOptimizer> static__1a8787117_new(jule::Ptr<_1a891e38c_Scope>);
inline void _1a878738c_setCurrentStmt(_1a8786b3e_scopeOptimizer*, jule::Any);
inline void _1a8787612_optimizeData(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a865dbe2_Data>);
inline void _1a8787887_optimizeVar(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a8966901_Var>);
inline void _1a8787b0c_optimizeConditional(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a891ede8_Conditional>);
inline void _1a8787ee7_buildDefaultConstantTrueCase(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a8923bee_Case>, jule::I64*, jule::Ptr<_1a89231a4_Match>*);
inline void _1a8788206_optimizeMatch(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a89231a4_Match>);
inline void _1a878847b_optimizeRangeIter(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a892103c_RangeIter>);
inline void _1a8788701_optimizeWhileIter(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a8920657_WhileIter>);
inline jule::Bool _1a8788a0e_substr(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a89226e2_Assign>);
inline jule::Bool _1a8788d1c_strInsert(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a89226e2_Assign>);
inline jule::Bool _1a878912a_strAppend(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a89226e2_Assign>);
inline jule::Bool _1a8789438_strAssign(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a89226e2_Assign>);
inline void _1a87896ad_optimizeAssign(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a89226e2_Assign>);
inline void _1a8789933_optimizeMultiAssign(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a8922a99_MultiAssign>);
inline void _1a8789ba8_optimizeRet(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a8924628_RetSt>);
inline void _1a8789e2d_optimizeStmt(_1a8786b3e_scopeOptimizer*, jule::Any);
inline void _1a878a1a3_optimizeChild(_1a8786b3e_scopeOptimizer*, jule::Ptr<_1a891e38c_Scope>);
inline void _1a878a37e_optimize(_1a8786b3e_scopeOptimizer*);
inline void static__1a8a58e11_optimize(jule::Any*);
inline jule::Bool _1a8a5920d_strCond(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88be01d_BinopExprModel>);
inline void _1a8a59483_binary(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88be01d_BinopExprModel>);
inline void _1a8a59708_unary(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88be3c5_UnaryExprModel>);
inline void _1a8a5997d_structureLit(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88bec44_StructLitExprModel>);
inline void _1a8a59c03_allocStructure(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c0052_AllocStructLitExprModel>);
inline void _1a8a59e78_casting(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c05a2_CastingExprModel>);
inline void _1a8a5a1ed_args(_1a8a58905_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1a8a5a473_scope(_1a8a58905_exprOptimizer*, jule::Ptr<_1a891e38c_Scope>*);
inline jule::Bool _1a8a5a7a3_optimizeSpecialFuncCalls(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c0e54_FnCallExprModel>*);
inline void _1a8a5aa39_funcCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c0e54_FnCallExprModel>);
inline void _1a8a5acae_slice(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c130b_SliceExprModel>);
inline void _1a8a5b034_array(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c4034_ArrayExprModel>);
inline void _1a8a5b2a9_indexing(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c177e_IndexingExprModel>);
inline void _1a8a5b52e_anonFunc(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c1b36_AnonFnExprModel>);
inline void _1a8a5b7a4_mapExpr(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c2461_MapExprModel>);
inline void _1a8a5ba29_slicing(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c29a0_SlicingExprModel>);
inline void _1a8a5bc9e_traitSub(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c2ede_TraitSubIdentExprModel>);
inline void _1a8a5c024_structureSub(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c37c5_StructSubIdentExprModel>);
inline void _1a8a5c299_commonSub(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c4881_CommonSubIdentExprModel>);
inline void _1a8a5c51e_tuple(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c4b7d_TupleExprModel>);
inline void _1a8a5c794_newCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c5b4b_BuiltinNewCallExprModel>);
inline void _1a8a5ca19_outCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c5057_BuiltinOutCallExprModel>);
inline void _1a8a5cc8e_outlnCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c5442_BuiltinOutlnCallExprModel>);
inline void _1a8a5d014_panicCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c6036_BuiltinPanicCallExprModel>);
inline void _1a8a5d289_assertCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c64dc_BuiltinAssertCallExprModel>);
inline void _1a8a5d50e_errorCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c83bd_BuiltinErrorCallExprModel>);
inline void _1a8a5d784_makeCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c6993_BuiltinMakeCallExprModel>);
inline void _1a8a5da09_appendCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c6d7d_BuiltinAppendCallExprModel>);
inline void _1a8a5dc7e_lenCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c719c_BuiltinLenCallExprModel>);
inline void _1a8a5e004_capCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c74bb_BuiltinCapCallExprModel>);
inline void _1a8a5e279_cloneCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c5761_BuiltinCloneCallExprModel>);
inline void _1a8a5e4ee_deleteCall(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c7b70_BuiltinDeleteCallExprModel>);
inline void _1a8a5e774_sizeof(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c86ba_SizeofExprModel>);
inline void _1a8a5e9e9_alignof(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c89a6_AlignofExprModel>);
inline void _1a8a5ec6e_integratedToStr(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c90a0_IntegratedToStrExprModel>);
inline void _1a8a5eee4_free(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c9754_FreeExprModel>);
inline void _1a8a60269_backendEmit(_1a8a58905_exprOptimizer*, jule::Ptr<_1a88c9468_BackendEmitExprModel>);
inline void _1a8a60445_do(_1a8a58905_exprOptimizer*);
inline jule::Ptr<_1a948c04c_Optimizer> static__1a948c47b_New(jule::Ptr<_1a93d5847_IR>*);
inline void _1a948c701_optimizeGlobal(_1a948c04c_Optimizer*, jule::Ptr<_1a8966901_Var>*);
inline void _1a948c976_optimizeFunction(_1a948c04c_Optimizer*, jule::Ptr<_1a88cc25c_Fn>*);
inline void _1a948cbeb_optimizeStruct(_1a948c04c_Optimizer*, jule::Ptr<_1a88b6d3a_Struct>*);
inline void _1a948ce71_optimizeGlobals(_1a948c04c_Optimizer*, jule::Ptr<_1a8940e5d_Package>*);
inline void _1a948d1e6_optimizeFunctions(_1a948c04c_Optimizer*, jule::Ptr<_1a8940e5d_Package>*);
inline void _1a948d46b_optimizeStructs(_1a948c04c_Optimizer*, jule::Ptr<_1a8940e5d_Package>*);
inline void _1a948d6e1_optimizePackage(_1a948c04c_Optimizer*, jule::Ptr<_1a8940e5d_Package>*);
inline void _1a948d8bc_Optimize(_1a948c04c_Optimizer*);
inline void static__1a80237c7_Reset(void);
inline void static__1a8024ae7_Print(jule::Str, jule::Str);
inline void static__1a8026478_LogFlat(_1a4deb40b_Log*);
inline void static__1a8026687_LogError(_1a4deb40b_Log*);
inline void static__1a8026896_Log(_1a4deb40b_Log*);
inline void static__1a8026aa5_PrintLogs(jule::Slice<_1a4deb40b_Log>*);
inline _1a9d9e8a4_Time static__1a9d9ec4a_Unix(jule::U64);
inline _1a9d9e8a4_Time static__1a9d9ee48_Now(void);
inline _1a9d9e211_AbsTime _1a9da1510_Abs(_1a9d9e8a4_Time*);
inline jule::Ptr<_1a96056c1_scopeCoder> static__1a9605cba_new(jule::Ptr<_1a9da8935_ObjectCoder>*);
inline void _1aca1c8e8_iterHead(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a892103c_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1a9606408_rangeIndexIter(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a892103c_RangeIter>*);
inline void _1a960667d_rangeHashmapIter(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a892103c_RangeIter>*);
inline void _1a9606903_ifCase(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a891e788_If>);
inline void _1a9606b78_conditional(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a891ede8_Conditional>);
inline void _1a9606ded_infIter(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a89201d4_InfIter>);
inline void _1a9607173_whileIter(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a8920657_WhileIter>);
inline void _1a96073e8_rangeIter(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a892103c_RangeIter>);
inline void _1a960766d_cont(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a8921438_ContSt>);
inline void _1a96078e3_label(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a8921acb_Label>);
inline void _1a9607b68_gotoSt(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a8921db7_GotoSt>);
inline void _1a9607ddd_postfix(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a892226e_Postfix>);
inline void _1a9608163_assign(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a89226e2_Assign>);
inline void _1a96083d8_mapLookupAssign(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a8922a99_MultiAssign>*);
inline void _1a960865d_multiAssignTup(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a8922a99_MultiAssign>*);
inline void _1a96088d3_multiAssignFn(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a8922a99_MultiAssign>*);
inline void _1a9608b58_multiAssign(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a8922a99_MultiAssign>);
inline jule::Fn<void(void)> _1a9608e66_matchExpr(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a89231a4_Match>);
inline void _1a9609285_case(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a89231a4_Match>, jule::Ptr<_1a8923bee_Case>);
inline void _1a960950a_matchSt(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a89231a4_Match>);
inline void _1a9609780_fallSt(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a89242c6_FallSt>);
inline void _1a9609a05_breakSt(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a89217e0_BreakSt>);
inline void _1a9609c7a_setResult(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a8924628_RetSt>);
inline void _1a960a000_retSt(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a8924628_RetSt>);
inline void _1a960a275_var(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a8966901_Var>);
inline void _1a960a4ea_strAppend(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a8783d8e_StrAppendExprModel>);
inline void _1a960a770_st(jule::Ptr<_1a96056c1_scopeCoder>, jule::Any);
inline void _1a960a9e5_scopeStmts(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a891e38c_Scope>*);
inline void _1a960ac6a_scope(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a891e38c_Scope>);
inline void _1a960aee0_funcScope(jule::Ptr<_1a96056c1_scopeCoder>, jule::Ptr<_1a88cee0d_FnIns>);
inline jule::Ptr<_1a960dbb3_exprCoder> static__1a960e06a_new(jule::Ptr<_1a9da8935_ObjectCoder>*);
inline void _1a960e2e0_string(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a55406ba_Const>*);
inline void _1a960e565_boolean(jule::Ptr<_1a960dbb3_exprCoder>, jule::Bool);
inline void _1a960e741_nilLit(jule::Ptr<_1a960dbb3_exprCoder>);
inline jule::Bool _1a960ea4e_ftoaSpecialCases(jule::Ptr<_1a960dbb3_exprCoder>, jule::F64*);
inline void _1a960ecc4_float32(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a55406ba_Const>*);
inline void _1a9610049_float64(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a55406ba_Const>*);
inline void _1a96102be_constant(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a55406ba_Const>);
inline void _1a9610687_divByZeroBinary(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a52684c0_Token>*, jule::Ptr<_1a88bda56_OperandExprModel>*, jule::Ptr<_1a88bda56_OperandExprModel>*);
inline void _1a961090c_unsafeBinary(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88be01d_BinopExprModel>);
inline void _1a9610b82_binary(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88be01d_BinopExprModel>);
inline void _1a9610e07_var(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a8966901_Var>);
inline void _1a961117c_structureIns(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88b9b51_StructIns>);
inline void _1a9611402_unary(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88be3c5_UnaryExprModel>);
inline void _1a9611677_structureLit(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88bec44_StructLitExprModel>);
inline void _1a96118ec_allocStructure(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c0052_AllocStructLitExprModel>);
inline void _1a9611b72_possibleRefExpr(jule::Ptr<_1a960dbb3_exprCoder>, jule::Any);
inline void _1a961203a_castTraitFromTrait(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c05a2_CastingExprModel>*, jule::Ptr<_1a88de47d_Trait>, jule::Ptr<_1a88de47d_Trait>);
inline void _1a96122b0_casting(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c05a2_CastingExprModel>);
inline void _1a9612535_models(jule::Ptr<_1a960dbb3_exprCoder>, jule::Slice<jule::Any>);
inline void _1a96127aa_args(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c0e54_FnCallExprModel>*);
inline void _1a9612a30_modelForCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Any);
inline void _1a9612ca5_pushCallInf(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c0e54_FnCallExprModel>*);
inline jule::Bool _1a96130b3_isWrapped(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c0e54_FnCallExprModel>*);
inline void _1a9613338_pureFuncCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c0e54_FnCallExprModel>*);
inline void _1a96135ad_coFuncCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c0e54_FnCallExprModel>*);
inline void _1a96138cc_writeUseExpr(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88cee0d_FnIns>*, jule::Ptr<_1a865dbe2_Data>);
inline void _1a9613b52_funcCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c0e54_FnCallExprModel>);
inline void _1a9613dc7_slice(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c130b_SliceExprModel>);
inline void _1a961414c_indexing(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c177e_IndexingExprModel>);
inline void _1a96143c2_unsafeIndexing(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a8784510_UnsafeIndexingExprModel>);
inline void _1a9614647_anonFunc(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c1b36_AnonFnExprModel>);
inline void _1a96148bc_mapExpr(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c2461_MapExprModel>);
inline void _1a9614b42_slicing(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c29a0_SlicingExprModel>);
inline void _1a9614db7_traitSub(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c2ede_TraitSubIdentExprModel>);
inline void _1a961513c_structureSub(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c37c5_StructSubIdentExprModel>);
inline void _1a96153b2_commonIdent(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c4320_CommonIdentExprModel>);
inline void _1a9615637_commonSub(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c4881_CommonSubIdentExprModel>);
inline void _1a96158ac_array(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c4034_ArrayExprModel>);
inline void _1a9615b32_funcInsCommon(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88cee0d_FnIns>);
inline void _1a9615da7_funcIns(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88cee0d_FnIns>);
inline void _1a961612c_tuple(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c4b7d_TupleExprModel>);
inline void _1a96163a2_newCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c5b4b_BuiltinNewCallExprModel>);
inline void _1a9616627_outCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c5057_BuiltinOutCallExprModel>);
inline void _1a961689c_outlnCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c5442_BuiltinOutlnCallExprModel>);
inline void _1a9616b22_panicCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c6036_BuiltinPanicCallExprModel>);
inline void _1a9616d97_assertCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c64dc_BuiltinAssertCallExprModel>);
inline void _1a961711c_errorCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c83bd_BuiltinErrorCallExprModel>);
inline void _1a9617392_copyCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c7ed3_BuiltinCopyCallExprModel>);
inline void _1a9617617_lenCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c719c_BuiltinLenCallExprModel>);
inline void _1a961788c_capCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c74bb_BuiltinCapCallExprModel>);
inline void _1a9617b12_deleteCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c7b70_BuiltinDeleteCallExprModel>);
inline void _1a9617d87_makeCallSlice(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c6993_BuiltinMakeCallExprModel>*);
inline void _1a961810c_makeCallStr(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c6993_BuiltinMakeCallExprModel>*);
inline void _1a9618382_makeCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c6993_BuiltinMakeCallExprModel>);
inline void _1a9618607_pushToSlice(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a8784895_PushToSliceExprModel>);
inline void _1a961887c_appendToSlice(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a8784c4c_AppendToSliceExprModel>);
inline void _1a9618b02_appendCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c6d7d_BuiltinAppendCallExprModel>);
inline void _1a9618d77_cloneCall(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c5761_BuiltinCloneCallExprModel>);
inline void _1a96190ec_sizeof(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c86ba_SizeofExprModel>);
inline void _1a9619372_alignof(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c89a6_AlignofExprModel>);
inline jule::Str _1a9619680_runeLit(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c8c92_RuneExprModel>);
inline void _1a9619905_structureStatic(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c3b6b_StructStaticIdentExprModel>);
inline void _1a9619b7a_integratedToStr(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c90a0_IntegratedToStrExprModel>);
inline void _1a9619e00_backendEmit(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c9468_BackendEmitExprModel>);
inline void _1a961a175_free(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a88c9754_FreeExprModel>);
inline void _1a961a3ea_mutSlicing(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a878528b_MutSlicingExprModel>);
inline void _1a961a670_strInsertBegin(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a8785775_StrInsertBeginExprModel>);
inline void _1a961a8e5_strComp(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a87839c6_StrCompExprModel>);
inline void _1a961ab8c_inlineStdInternalNosafeStobs(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a8785a1c_InlineStdInternalNosafeStobs>);
inline void _1a961ae23_model(jule::Ptr<_1a960dbb3_exprCoder>, jule::Any);
inline void _1a961b198_initExpr(jule::Ptr<_1a960dbb3_exprCoder>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a961d981_deriveCoder> static__1a961dd27_new(jule::Ptr<_1a9da8935_ObjectCoder>);
inline jule::Str _1a961e135_cloneFuncDecl(_1a961d981_deriveCoder*, jule::Ptr<_1a88b6d3a_Struct>*);
inline jule::Str _1a961e443_cloneFuncDef(_1a961d981_deriveCoder*, jule::Ptr<_1a88b6d3a_Struct>*);
inline jule::Ptr<_1a9620367_TestCoder> static__1a9620796_New(jule::Ptr<_1a9da8935_ObjectCoder>*);
inline jule::Ptr<_1a893d323_ImportInfo> _1a9620a0a_findTestingPackage(jule::Ptr<_1a9620367_TestCoder>);
inline void _1a9620c80_appendTest(jule::Ptr<_1a9620367_TestCoder>, jule::Ptr<_1a88cee0d_FnIns>);
inline void _1a9621005_appendPackageTests(jule::Ptr<_1a9620367_TestCoder>, jule::Ptr<_1a8940e5d_Package>*);
inline jule::Bool _1a9621269_readyTestingPackage(jule::Ptr<_1a9620367_TestCoder>);
inline void _1a9621445_callTmReset(jule::Ptr<_1a9620367_TestCoder>);
inline void _1a9621621_callTmFailed(jule::Ptr<_1a9620367_TestCoder>);
inline void _1a96217ec_callTmSkipped(jule::Ptr<_1a9620367_TestCoder>);
inline void _1a96219c8_Serialize(jule::Ptr<_1a9620367_TestCoder>);
inline jule::Str static__1a9622e3b_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1a9623326_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__1a96235bd_func(jule::Ptr<_1a88cc25c_Fn>*);
inline jule::Str static__1a9623865_funcIns(jule::Ptr<_1a88cee0d_FnIns>*);
inline jule::Str static__1a9623b0c_traitDecl(jule::Ptr<_1a88de47d_Trait>);
inline jule::Str static__1a9623da4_param(jule::Ptr<_1a88ca920_Param>*);
inline jule::Str static__1a962414b_structure(jule::Ptr<_1a88b6d3a_Struct>*);
inline jule::Str static__1a96243e3_structureIns(jule::Ptr<_1a88b9b51_StructIns>*);
inline jule::Str static__1a962468a_field(jule::Ptr<_1a88b4266_Field>*);
inline jule::Str static__1a9624932_var(jule::Ptr<_1a8966901_Var>);
inline jule::Str static__1a9624bc9_iterBegin(jule::Uintptr);
inline jule::Str static__1a9624e71_iterEnd(jule::Uintptr);
inline jule::Str static__1a9625218_iterNext(jule::Uintptr);
inline jule::Str static__1a96254b0_label(jule::Str*);
inline jule::Str static__1a9625757_matchEnd(jule::Uintptr);
inline jule::Str static__1a96259ee_caseBegin(jule::Uintptr);
inline jule::Str _1a9db7504_Str(_1a9db725c_customType*);
inline jule::Bool _1a9db7812_Equal(jule::Ptr<_1a9db725c_customType>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a9db7c0d_typeCoder> static__1a9db824c_new(jule::Ptr<_1a9da8935_ObjectCoder>*);
inline jule::Str _1a9db855a_toType(_1a9db7c0d_typeCoder*, jule::Str);
inline jule::Str _1a9db8868_prim(_1a9db7c0d_typeCoder*, jule::Ptr<_1a86b7003_Prim>);
inline jule::Str _1a9db8b76_tuple(_1a9db7c0d_typeCoder*, jule::Ptr<_1a86bbcb6_Tuple>);
inline jule::Str _1a9db8e84_asSptr(_1a9db7c0d_typeCoder*, jule::Str);
inline jule::Str _1a9db9292_asPtr(_1a9db7c0d_typeCoder*, jule::Str);
inline jule::Str _1a9db95a0_sptr(_1a9db7c0d_typeCoder*, jule::Ptr<_1a86ba754_Sptr>);
inline jule::Str _1a9db98ad_ptr(_1a9db7c0d_typeCoder*, jule::Ptr<_1a86bdcb8_Ptr>);
inline jule::Str _1a9db9bbb_enumDecl(_1a9db7c0d_typeCoder*, jule::Ptr<_1a88e1c11_Enum>);
inline jule::Str _1a9db9ec9_typeEnumDecl(_1a9db7c0d_typeCoder*, jule::Ptr<_1a88e330b_TypeEnum>);
inline jule::Str _1a9dba2d7_asSlice(_1a9db7c0d_typeCoder*, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Str _1a9dba5e5_slice(_1a9db7c0d_typeCoder*, jule::Ptr<_1a86bb1b1_Slc>);
inline jule::Str _1a9dba903_mapType(_1a9db7c0d_typeCoder*, jule::Ptr<_1a86bc767_Map>);
inline jule::Str _1a9dbac11_traitIdent(_1a9db7c0d_typeCoder*, jule::Str);
inline jule::Str _1a9dbb01e_traitDecl(_1a9db7c0d_typeCoder*, jule::Ptr<_1a88de47d_Trait>);
inline jule::Str _1a9dbb32c_structure(_1a9db7c0d_typeCoder*, jule::Ptr<_1a88b6d3a_Struct>);
inline jule::Str _1a9dbb63a_structureIns(_1a9db7c0d_typeCoder*, jule::Ptr<_1a88b9b51_StructIns>);
inline jule::Str _1a9dbb948_array(_1a9db7c0d_typeCoder*, jule::Ptr<_1a86bd35b_Arr>);
inline jule::Str _1a9dbc064_paramIns(_1a9db7c0d_typeCoder*, jule::Ptr<_1a88ce03e_ParamIns>*);
inline void _1a9dbc691_funcInsResult(_1a9db7c0d_typeCoder*, jule::Str*, jule::Ptr<_1a88cee0d_FnIns>*);
inline jule::Str _1a9dbc99e_anonFunc(_1a9db7c0d_typeCoder*, jule::Ptr<_1a88cee0d_FnIns>);
inline jule::Str _1a9dbccac_func(_1a9db7c0d_typeCoder*, jule::Ptr<_1a88cee0d_FnIns>);
inline jule::Str _1a9dbd0ba_kind(_1a9db7c0d_typeCoder*, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Ptr<_1a9dc07c6_resultCoder> static__1a9dc0c8d_new(jule::Ptr<_1a9db7c0d_typeCoder>*);
inline void _1a9dc10ac_ptr(_1a9dc07c6_resultCoder*, jule::Str*, jule::Ptr<_1a86bdcb8_Ptr>);
inline void _1a9dc13cb_sptr(_1a9dc07c6_resultCoder*, jule::Str*, jule::Ptr<_1a86ba754_Sptr>);
inline void _1a9dc16ea_mapType(_1a9dc07c6_resultCoder*, jule::Str*, jule::Ptr<_1a86bc767_Map>);
inline void _1a9dc1a19_slice(_1a9dc07c6_resultCoder*, jule::Str*, jule::Ptr<_1a86bb1b1_Slc>);
inline void _1a9dc1d38_arr(_1a9dc07c6_resultCoder*, jule::Str*, jule::Ptr<_1a86bd35b_Arr>);
inline void _1a9dc2157_func(_1a9dc07c6_resultCoder*, jule::Str*, jule::Ptr<_1a88cee0d_FnIns>);
inline void _1a9dc2476_tup(_1a9dc07c6_resultCoder*, jule::Str*, jule::Ptr<_1a86bbcb6_Tuple>);
inline void _1a9dc2795_codeMut(_1a9dc07c6_resultCoder*, jule::Str*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline void _1a9dc2ab4_codeMut1(_1a9dc07c6_resultCoder*, jule::Str*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Str _1a9dc2d8e_code(_1a9dc07c6_resultCoder*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Str _1acd8b01e_Name(_1acd8ac33_Flag*);
inline jule::Str _1acd8b151_What(_1acd8ac33_Flag*);
inline void _1acd8b283_Reset(_1acd8ac33_Flag*);
inline jule::I32 _1acd8b3b5_Short(_1acd8ac33_Flag*);
inline jule::Str _1acd8e242_Name(_1acd8e6b5_Flag*);
inline jule::Str _1acd8e9a1_What(_1acd8e6b5_Flag*);
inline void _1acd8ead3_Reset(_1acd8e6b5_Flag*);
inline jule::I32 _1acd8ec15_Short(_1acd8e6b5_Flag*);
inline jule::Str _1acd928e9_Name(_1acd92d6c_Flag*);
inline jule::Str _1acd93158_What(_1acd92d6c_Flag*);
inline void _1acd9328a_Reset(_1acd92d6c_Flag*);
inline jule::I32 _1acd933bc_Short(_1acd92d6c_Flag*);
inline jule::Str _1acd960e5_Name(_1acd96568_Flag*);
inline jule::Str _1acd96854_What(_1acd96568_Flag*);
inline void _1acd96986_Reset(_1acd96568_Flag*);
inline jule::I32 _1acd96ab8_Short(_1acd96568_Flag*);
inline jule::Str _1acd9979c_Name(_1acd99c20_Flag*);
inline jule::Str _1acd9a00b_What(_1acd99c20_Flag*);
inline void _1acd9a13d_Reset(_1acd99c20_Flag*);
inline jule::I32 _1acd9a270_Short(_1acd99c20_Flag*);
inline jule::Ptr<_1a9e2bcc7_FlagSet> static__1a9e2c0b3_New(void);
inline jule::Trait<_1a9e2a369_CommonFlag> _1a9e2c503_FindFlag(_1a9e2bcc7_FlagSet*, jule::Str);
inline jule::Trait<_1a9e2a369_CommonFlag> _1a9e2c811_FindFlagShort(_1a9e2bcc7_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a9e2cd83_Parse(_1a9e2bcc7_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1acd99c20_Flag> _1ace155e8_addFlagCommon(_1a9e2bcc7_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1acd96568_Flag> _1ace1d579_addFlagCommon(_1a9e2bcc7_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1ace1352a_AddVar(_1a9e2bcc7_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1ace1b522_AddVar(_1a9e2bcc7_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1acdac67d_parseInteger(_1a9e2e4d3_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1acdb4bd5_parseInteger(_1a9e2e4d3_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1a9e2ec97_getData(_1a9e2e4d3_argParser*);
inline jule::VoidExceptional _1a9e2eed9_processFlag(_1a9e2e4d3_argParser*, jule::Trait<_1a9e2a369_CommonFlag>*);
inline jule::VoidExceptional _1a9e3025e_singleDash(_1a9e2e4d3_argParser*, jule::Str*);
inline jule::VoidExceptional _1a9e304d4_doubleDash(_1a9e2e4d3_argParser*, jule::Str*);
inline jule::VoidExceptional _1a9e306b0_tryArg(_1a9e2e4d3_argParser*);
inline jule::VoidExceptional _1a9e3088b_parse(_1a9e2e4d3_argParser*);
inline jule::Ptr<_1a9da8935_ObjectCoder> static__1a9da8d0e_New(jule::Ptr<_1a93d5847_IR>*, _1a9da7093_SerializationInfo);
inline void _1a9da9084_write(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Str);
inline void _1a9da9309_writeR(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Str*);
inline void _1a9da94d5_addIndent(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9da96b1_doneIndent(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9da988c_indent(jule::Ptr<_1a9da8935_ObjectCoder>);
inline jule::I64 _1a9da9b9a_findAnyType(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::I64 _1a9da9ea8_pushAnyType(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a86ae79d_TypeKind>);
inline void _1a9daa22d_pushResultIns(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88cee0d_FnIns>*);
inline void _1a9daa4a3_pushResult(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88cc25c_Fn>*);
inline jule::I64 _1a9daa85a_findTypeOffsetS(_1a9da8935_ObjectCoder*, jule::Ptr<_1a88de47d_Trait>, jule::Ptr<_1a88b9b51_StructIns>);
inline jule::I64 _1a9daac12_findTypeOffset(_1a9da8935_ObjectCoder*, jule::Ptr<_1a88de47d_Trait>, jule::Ptr<_1a86ae79d_TypeKind>);
inline void _1a9dab031_pushAndWriteMaskMapper(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88de47d_Trait>, jule::Ptr<_1a88de47d_Trait>);
inline void _1a9dab2a6_locInfo(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a52684c0_Token>*);
inline void _1a9dab482_head(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9dab65d_links(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9dab8d3_prepareStructure(_1a9da8935_ObjectCoder*, jule::Ptr<_1a88b6d3a_Struct>*);
inline void _1a9dabaae_prepareStructures(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9dabd34_iterPackages(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Fn<void(jule::Ptr<_1a8940e5d_Package>*)>);
inline void _1a9dac010_buildTraitMap(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9dac1db_traitDecls(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9dac461_structurePlainDecl(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88b6d3a_Struct>*);
inline void _1a9dac63c_structurePlainDecls(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9dac8b2_fieldDecl(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88b915b_FieldIns>*);
inline void _1a9dacb37_structureDestructor(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88b9b51_StructIns>*);
inline void _1a9dacdce_structureDeriveDefsDecls(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88b9b51_StructIns>*);
inline void _1a9dad20e_structureOperatorEq(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Str*, jule::Ptr<_1a88b9b51_StructIns>*);
inline void _1a9dad52d_structureOperatorNotEq(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Str*, jule::Ptr<_1a88b9b51_StructIns>*);
inline void _1a9dad8e6_structureOperator(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Str*, jule::Ptr<_1a88cee0d_FnIns>*, jule::Str);
inline void _1a9dadb6b_structureOperators(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88b9b51_StructIns>*);
inline void _1a9dadde1_structureInsDecl(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88b9b51_StructIns>*);
inline void _1a9dae166_structureDecl(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88b6d3a_Struct>*);
inline void _1a9dae342_structureDecls(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9dae51d_structureMethodDecls(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9dae793_paramsDecls(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>>*);
inline void _1a9daeab2_funcHead(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88cee0d_FnIns>*, jule::Bool);
inline void _1a9daedd1_funcDeclIns(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88cee0d_FnIns>*, jule::Bool);
inline void _1a9db0200_funcDecl(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88cc25c_Fn>*, jule::Bool);
inline void _1a9db05b8_funcDeclTrait(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88de47d_Trait>*, jule::Ptr<_1a88cc25c_Fn>*, jule::Bool);
inline void _1a9db0794_funcDecls(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9db0ab3_traitDataTypeMethods(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88de47d_Trait>*, jule::Ptr<_1a88de47d_Trait>*);
inline void _1a9db0c8e_traitDataTypes(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9db1014_paramIns(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88ce03e_ParamIns>*);
inline void _1a9db1289_paramsIns(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>>*);
inline void _1a9db15a8_varInitExpr(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a8966901_Var>*, jule::Fn<void(void)>);
inline void _1a9db182d_var(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a8966901_Var>);
inline void _1a9db1aa3_funcIns(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88cee0d_FnIns>*);
inline void _1a9db1d28_func(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88cc25c_Fn>*);
inline void _1a9db2147_funcTrait(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a9da755a_traitHash>*, jule::Ptr<_1a88cc25c_Fn>*);
inline void _1a9db2466_traitWrapper(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88cc25c_Fn>*, jule::Ptr<_1a9da755a_traitHash>*);
inline void _1a9db2642_traitWrappers(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9db2961_traitDataMethods(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88de47d_Trait>*, jule::Ptr<_1a9da755a_traitHash>*);
inline void _1a9db2c80_traitData(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a9da755a_traitHash>*, jule::Ptr<_1a88de47d_Trait>*);
inline void _1a9db2e5b_traitDatas(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9db3137_globals(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9db3313_decls(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9db3588_structureMethods(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88b9b51_StructIns>*);
inline void _1a9db380d_structureDeriveDefs(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88b9b51_StructIns>*);
inline void _1a9db3a83_structureOstream(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88b9b51_StructIns>*);
inline void _1a9db3d08_structureIns(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88b9b51_StructIns>*);
inline void _1a9db407d_structure(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a88b6d3a_Struct>*);
inline void _1a9db4259_structures(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9db4435_funcs(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9db46aa_pushInit(jule::Ptr<_1a9da8935_ObjectCoder>, jule::Ptr<_1a8940e5d_Package>*);
inline void _1a9db4886_initCaller(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9db4a62_end(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9db4c3d_serializeHead(jule::Ptr<_1a9da8935_ObjectCoder>);
inline void _1a9db4e19_Serialize(jule::Ptr<_1a9da8935_ObjectCoder>);
inline jule::Ptr<_1a944a1b4_ObjectDeadCode> static__1a947c081_new(jule::Ptr<_1a93d5847_IR>*);
inline jule::Bool _1ac7bad28_isLive(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a88de47d_Trait>*);
inline jule::Bool _1ac7c0987_isLive(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a88cee0d_FnIns>*);
inline jule::Bool _1ac7c9d7b_isLive(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a88b9b51_StructIns>*);
inline jule::Bool _1ac7cd775_isLive(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a8966901_Var>*);
inline void _1ac7bb17a_pushLive(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a88de47d_Trait>);
inline void _1ac7c149e_pushLive(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a88cee0d_FnIns>);
inline void _1ac7c74b6_pushLive(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a88b9b51_StructIns>);
inline void _1ac7cdac7_pushLive(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a8966901_Var>);
inline void _1a947c889_setReferencesAsLive(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a88d2d67_ReferenceStack>*);
inline void _1a947cb0e_inits(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a8940e5d_Package>*);
inline void _1a947cd84_collectLivePackage(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a8940e5d_Package>*);
inline void _1a947d060_collectLive(jule::Ptr<_1a944a1b4_ObjectDeadCode>);
inline void _1a947d2d5_removeDeadGlobals(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a8966901_Var>>*);
inline void _1a947d55a_removeDeadFns(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a88cc25c_Fn>>*);
inline void _1a947d7d0_removeDeadStructs(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a88b6d3a_Struct>>*);
inline void _1a947da55_removeDeadTraits(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a88de47d_Trait>>*);
inline void _1a947dcca_removeDeadsFile(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a89ab380_SymbolTable>*);
inline void _1a947e050_removeDeadsPackage(jule::Ptr<_1a944a1b4_ObjectDeadCode>, jule::Ptr<_1a8940e5d_Package>*);
inline void _1a947e22b_removeDeads(jule::Ptr<_1a944a1b4_ObjectDeadCode>);
inline void _1a947e407_elimanate(jule::Ptr<_1a944a1b4_ObjectDeadCode>);
inline __jule_tuple_x_1a93d5847_IR__jule_tuple_s_1a4deb40b_Log static__1a93d5c87_Build(jule::Str, jule::I64);
inline void _1a93d622c_appendStructs(_1a93d5847_IR*, jule::Ptr<_1a8940e5d_Package>*, jule::Slice<jule::Ptr<_1a88b6d3a_Struct>>*);
inline jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> _1a93d6491_GetAllStructures(_1a93d5847_IR*);
inline void _1a93d67b0_appendGlobals(_1a93d5847_IR*, jule::Ptr<_1a8940e5d_Package>*, jule::Slice<jule::Ptr<_1a8966901_Var>>*);
inline jule::Slice<jule::Ptr<_1a8966901_Var>> _1a93d6a24_GetAllGlobals(_1a93d5847_IR*);
inline void _1a93d6c00_Order(_1a93d5847_IR*);
inline jule::Str _1a88b9eb4_Str(_1a88b9b51_StructIns*);
inline jule::Bool _1a88ba2c2_Equal(jule::Ptr<_1a88b9b51_StructIns>, jule::Ptr<_1a86ae79d_TypeKind>);
inline jule::Bool _1a88ba745_Same(_1a88b9b51_StructIns*, jule::Ptr<_1a88b9b51_StructIns>);
inline jule::Ptr<_1a88cc25c_Fn> _1a88baaec_FindMethod(_1a88b9b51_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88b915b_FieldIns> _1a88bae0a_FindField(_1a88b9b51_StructIns*, jule::Str);
inline jule::Ptr<_1a8966901_Var> _1a88bb218_FindStatic(_1a88b9b51_StructIns*, jule::Str);
inline jule::Ptr<_1a4e88663_Cmd> static__1a4e88a70_New(jule::Str);
inline jule::VoidExceptional _1a4e88c4b_Spawn(_1a4e88663_Cmd*);
inline jule::Exceptional<jule::I64> _1a4e8918b_Wait(_1a4e88663_Cmd*);
inline jule::VoidExceptional _1a4e8c7aa_spawn(_1a4e88663_Cmd*);
inline jule::Exceptional<jule::I64> _1a4e8cbea_wait(_1a4e88663_Cmd*);
inline jule::I32 _1d09d5250_DecodeRune(jule::I32, jule::I32);
inline __jule_tuple_i32__jule_tuple_i32 _1d09d54e7_EncodeRune(jule::I32);
inline jule::Slice<jule::U16> _1d09d5816_Encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _1d09d5aad_Decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _1d09d5dbb_AppendRune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _1d09d60ec_Utf16FromStr(jule::Str);
inline jule::Str _1d09d63a5_Utf16ToStr(jule::Slice<jule::U16>);
inline jule::Str _1d09d664c_U16PtrToStr(jule::U16*);
inline jule::I64 _1d095b4b2_GetLastErrno(void);
inline jule::Uintptr _1d0a0de05_GetStdHandle(jule::Uintptr);
inline jule::Bool _1d0a0e19c_CloseHandle(jule::Uintptr);
inline jule::I64 _1d0a0e4dd_Wstat(jule::U16*, struct _stat*);
inline jule::I64 _1d0a0e8c8_Wopen(jule::U16*, jule::I64, jule::I64);
inline jule::U32 _1d0a0eac6_GetLastError(void);
inline jule::U32 _1d0a0ee17_GetCurrentDirectory(jule::U32, jule::U16*);
inline jule::Bool _1d0a10456_DeleteFile(jule::U16*);
inline jule::Bool _1d0a106ed_CreateDirectory(jule::U16*);
inline jule::Bool _1d0a10995_RemoveDirectory(jule::U16*);
inline jule::U32 _1d0a10e29_GetFullPathName(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _1d0a1126a_GetConsoleMode(jule::Uintptr, jule::I64*);
inline jule::Bool _1d0a11831_SetConsoleMode(jule::Uintptr, jule::I64);
inline jule::Bool _1d0a11d2b_WriteConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*, void*);
inline jule::Bool _1d0a122b0_ReadConsole(jule::Uintptr, jule::U16*, jule::I64, jule::I64*);
inline jule::Uintptr _1d0a127ee_FindFirstFile(jule::U16*, WIN32_FIND_DATAW*);
inline jule::I64 _1d0a12b40_FindNextFile(jule::Uintptr, WIN32_FIND_DATAW*);
inline jule::I64 _1d0a12dd7_FindClose(jule::Uintptr);
inline jule::I64 _1d0a14ceb_Read(jule::I64, void*, jule::U64);
inline jule::I64 _1d0a15170_Close(jule::I64);
inline jule::I64 _1d0a1555a_Write(jule::I64, void*, jule::U64);
inline void _1d0a15769_Exit(jule::I64);
inline jule::Slice<jule::U8> _1d0a3180c_Stobs(jule::Str*);
inline void _1d0a31eb1_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1d0b1852b_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1d0b1884a_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _1d0b18ae2_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::I64 _1d0b19131_RuneLen(jule::I32);
inline jule::I64 _1d0b1954e_EncodeRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1d0b19890_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1d0b19bd1_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1d0b1a220_RuneCountStr(jule::Str);
inline jule::Bool _1d0b1a4b7_RuneStart(jule::U8);
inline jule::I64 _1b622e5eb_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _1b623061e_Args(void);
inline jule::Exceptional<jule::Str> _1b6230a92_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1b6231455_getwd(void);
inline jule::Bool _1a4cabb3a_IsLetter(jule::I32);
inline jule::Bool _1a4d2460e_is16(jule::Slice<_1a4d22a4c_Range16>, jule::U16);
inline jule::Bool _1a4d24950_is32(jule::Slice<_1a4d22ec0_Range32>, jule::U32);
inline jule::Bool _1a4d251e2_isExcludingLatin(jule::Ptr<_1a4d23443_RangeTable>, jule::I32);
inline jule::Bool _1a4d25489_IsUpper(jule::I32);
inline jule::I64 _1a4d46bc5_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1a4d58ee5_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1a4d592ae_FindByteStr(jule::Str*, jule::U8);
inline jule::I64 _1a4d59600_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _1a4d599b8_Repeat(jule::Str, jule::I64);
inline jule::Bool _1a4d59de7_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1a4d5a238_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1a4d5a69a_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1a4d5a9a8_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1a4d5ad93_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1a4d5b6ce_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1a4d5ba20_FindLast(jule::Str, jule::Str);
inline jule::I64 _1a4d5ccb8_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I64 _1a4d5d604_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1a4d5e418_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1a4d5eb44_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1a4d5ee85_Contains(jule::Str, jule::Str);
inline jule::Bool _1a4d60958_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1a4d60c99_Count(jule::Str, jule::Str);
inline jule::Str _1a4d6122d_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1a4d5d291_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1a4d622d9_TrimLeft(jule::Str, jule::Str);
inline void _1a4d62592_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1a4d62c24_Trim(jule::Str, jule::Str);
inline jule::Bool _1b620a242_IsPathSep(jule::U8);
inline jule::Bool _1b620a52d_isSlash(jule::U8);
inline jule::U8 _1b620a7c5_toUpper(jule::U8);
inline jule::I64 _1b620ad8b_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1b620b133_cutPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1b620b3ca_fullPath(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1b620b74e_abs(jule::Str);
inline jule::Str _1b620b9e6_join(jule::Slice<jule::Str>);
inline jule::Str _1a4d6473c_Clean(jule::Str);
inline jule::Str _1a4d64cc0_FromSlash(jule::Str);
inline jule::Str _1a4d650de_Join(jule::Slice<jule::Str>);
inline jule::Str _1a4d65386_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1a4d6562d_Abs(jule::Str);
inline jule::Str _1a4d658c5_Base(jule::Str);
inline jule::Str _1a4d65c49_Dir(jule::Str);
inline jule::Str _1a4d65ee1_VolumeName(jule::Str);
inline jule::I64 _1d0a25a98_getLastFsError(void);
inline jule::Bool _1d0b1c200_isConsoleHandle(jule::Uintptr);
inline void _1a4e8d06e_appendEscapeArg(jule::Str*, jule::Str);
inline jule::Str _1a4e8d316_makeCmdLine(jule::Slice<jule::Str>);
inline jule::Exceptional<jule::Slice<jule::U16>> _1a4e8d6bd_createEnvBlock(jule::Slice<jule::Str>);
inline jule::I64 _1a4e8e69c_processErrorFromCode(jule::I64);
inline jule::I64 _1a4e8e8ab_getLastProcessError(void);
inline void _1a4e9015e_Exit(jule::I64);
inline jule::Str _1a4e9035c_Executable(void);
inline jule::Bool _1a4ddd8d7_IsStdHeaderPath(jule::Str);
inline jule::Bool _1a4dddb90_IsValidHeaderExt(jule::Str);
inline jule::Bool _1a4ddde37_IsValidCppExt(jule::Str);
inline jule::Str _1a4deb84b_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a4debb37_argToStr(jule::Any);
inline jule::I64 _1a4debdce_findNextFmt(jule::Str);
inline jule::Str _1a4dec264_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a4ded2dc_IsTopDirective(jule::Str);
inline jule::Bool _1a4dee71c_IsWindows(jule::Str);
inline jule::Bool _1a4dee9c5_IsDarwin(jule::Str);
inline jule::Bool _1a4deec6c_IsLinux(jule::Str);
inline jule::Bool _1a4e0008b_IsI386(jule::Str);
inline jule::Bool _1a4e00333_IsAmd64(jule::Str);
inline jule::Bool _1a4e005ca_IsArm64(jule::Str);
inline jule::Bool _1a4e00872_IsUnix(jule::Str);
inline jule::Bool _1a4e00be6_Is32Bit(jule::Str);
inline jule::Bool _1a4e00e8d_Is64Bit(jule::Str);
inline void _1a4e915e4_init(void);
inline jule::Bool _1a5268bc9_IsUnaryOp(jule::U64);
inline jule::Bool _1a5268eb5_IsBinOp(jule::U64);
inline jule::Bool _1a526957b_IsStr(jule::Str);
inline jule::Bool _1a5269823_IsRawStr(jule::Str);
inline jule::Bool _1a5269aba_IsRune(jule::Str);
inline jule::Bool _1a526a1d6_IsBool(jule::Str);
inline jule::Bool _1a526a47d_IsFloat(jule::Str);
inline jule::Bool _1a526a725_IsNum(jule::Str);
inline jule::Bool _1a526ac64_IsIgnoreIdent(jule::Str);
inline jule::Bool _1a526b00b_IsAnonIdent(jule::Str);
inline jule::Bool _1a526b54a_IsSpace(jule::I32);
inline jule::Bool _1a526b99b_IsLetter(jule::I32);
inline jule::Bool _1a526beda_IsDecimal(jule::U8);
inline jule::Bool _1a526c282_IsBinary(jule::U8);
inline jule::Bool _1a526c529_IsOctal(jule::U8);
inline jule::Bool _1a526c7c1_IsHex(jule::U8);
inline jule::Bool _1a526ca68_IsAssign(jule::U64);
inline jule::Bool _1a526cd10_IsPostfixOp(jule::U64);
inline jule::Bool _1a526d0a7_IsAssignOp(jule::U64);
inline jule::Ptr<_1a526d85a_File> _1a526eb14_NewFileSet(jule::Str);
inline _1a4deb40b_Log _1a52713a7_makeErr(jule::I64, jule::I64, jule::Ptr<_1a526d85a_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a527173c_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1a5271a7d_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a5271e13_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a5272254_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a5272595_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a52728d6_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a5272d37_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a52730ce_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1a5273376_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1a52736b7_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1a5273a08_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1a5273d49_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1a527418a_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1a52744cb_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a527492c_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1a5274bc4_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1a5275015_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1a52752ac_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1a5275576_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1a5275730_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1a52759b6_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1a4deb40b_Log> _1a527a4b0_Lex(jule::Ptr<_1a526d85a_File>, jule::I64);
inline jule::I64 _1a5c6a60e_LeadingZeros64(jule::U64);
inline jule::I64 _1a5c6b544_TrailingZeros(jule::U64);
inline jule::I64 _1a5c6be3a_TrailingZeros32(jule::U32);
inline jule::I64 _1a5c6c1d2_TrailingZeros64(jule::U64);
inline jule::I64 _1a54cb8ba_Len32(jule::U32);
inline jule::I64 _1a54cbb62_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1a54cc822_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1a54cdea5_Mul64(jule::U64, jule::U64);
inline jule::U32 _1a5b9a94b_F32Bits(jule::F32);
inline jule::F32 _1a5b9ac37_F32FromBits(jule::U32);
inline jule::U64 _1a5b9aece_F64Bits(jule::F64);
inline jule::F64 _1a5b9b2ed_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1a5b9d7d9_Frexp(jule::F64);
inline jule::F64 _1a54d6188_NaN(void);
inline jule::Bool _1a54d6474_IsNaN(jule::F64);
inline jule::F64 _1a54d671b_Inf(jule::I64);
inline jule::Bool _1a54d6a29_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1a54d6cc1_normalize(jule::F64);
inline jule::F64 _1a54d86b8_Log(jule::F64);
inline jule::F64 _1a54d9169_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1a54e0aaa_Modf(jule::F64);
inline jule::F64 _1a54e136e_Log2(jule::F64);
inline jule::Str _1a551a0ce_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1a551a651_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1a551acc2_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1a5518e68_floatInfo*);
inline jule::Slice<jule::U8> _1a551b421_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1a5519a90_decimalSlice, jule::I64, jule::U8);
inline void _1a551b81c_roundShortest(_1a552ba19_decimal*, jule::U64, jule::I64, _1a5518e68_floatInfo*);
inline jule::Slice<jule::U8> _1a551bd4a_fmtE(jule::Slice<jule::U8>, jule::Bool, _1a5519a90_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1a551c2ce_fmtF(jule::Slice<jule::U8>, jule::Bool, _1a5519a90_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1a551c8d9_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1a5518e68_floatInfo*);
inline jule::Slice<jule::U8> _1a551d05a_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1a5518e68_floatInfo*);
inline jule::I64 _1a551d39b_min(jule::I64, jule::I64);
inline jule::I64 _1a551d6dc_max(jule::I64, jule::I64);
inline jule::U8 _1a551e303_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1b619b28d_ConvError _1a551e732_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1a551eb1c_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1a552007e_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1a5520b95_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1a5521091_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1a5522dd9_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>*, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a55231d6_special(jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a552347d_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _1a5524e0d_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1a55252e8_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1b619b28d_ConvError _1a5525826_atofHex(_1a5518e68_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b619b28d_ConvError _1a5525bcd_atof32(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b619b28d_ConvError _1a5525e75_atof64(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b619b28d_ConvError _1a55262b6_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _1a5526607_ParseFloat(jule::Str, jule::I64);
inline void _1a5526d77_ryuFtoaFixed32(_1a5519a90_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1a55272b7_ryuFtoaFixed64(_1a5519a90_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1a5527a9d_formatDecimal(_1a5519a90_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1a5528021_ryuFtoaShortest(_1a5519a90_decimalSlice*, jule::U64, jule::I64, _1a5518e68_floatInfo*);
inline jule::I64 _1a55282b8_mulByLog2Log10(jule::I64);
inline jule::I64 _1a5528560_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a552894a_computeBounds(jule::U64, jule::I64, _1a5518e68_floatInfo*);
inline void _1a5528ede_ryuDigits(_1a5519a90_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1a55295c7_ryuDigits32(_1a5519a90_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a55299b2_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a5529d9c_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1a552a1dd_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1a552a485_divmod1e9(jule::U64);
inline void _1a552d202_trim(_1a552ba19_decimal*);
inline void _1a552d4aa_rightShift(_1a552ba19_decimal*, jule::U64);
inline jule::Bool _1a552d91c_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _1a552db92_leftShift(_1a552ba19_decimal*, jule::U64);
inline jule::Bool _1a552ded3_shouldRoundUp(_1a552ba19_decimal*, jule::I64);
inline jule::Str _1a5530600_FmtUint(jule::U64, jule::I64);
inline jule::Str _1a5530985_FmtInt(jule::I64, jule::I64);
inline jule::Str _1a5530c2c_Itoa(jule::I64);
inline jule::Str _1a553104b_small(jule::I64);
inline jule::Bool _1a55312e3_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1a5531821_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1a5532aec_RealKindOf(jule::Str);
inline jule::I64 _1a5532d94_BitsizeOf(jule::Str);
inline jule::Str _1a55331b3_IntFromBits(jule::I64);
inline jule::Str _1a553345a_UintFromBits(jule::I64);
inline jule::Str _1a5533702_FloatFromBits(jule::I64);
inline jule::Bool _1a55342a2_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1a5534549_BitsizeOfFloat(jule::F64);
inline jule::I64 _1a55347e1_BitsizeOfInt(jule::I64);
inline jule::I64 _1a5534a88_BitsizeOfUint(jule::U64);
inline void _1a5534bed_UpdateTarget(void);
inline void _1a5534d63_init(void);
inline jule::I64 _1a5538b03_MinI(jule::Str);
inline jule::I64 _1a5538dde_MaxI(jule::Str);
inline jule::U64 _1a5539186_MaxU(jule::Str);
inline jule::F64 _1a5539395_Min(jule::Str);
inline jule::F64 _1a553963c_Max(jule::Str);
inline jule::Bool _1a5539a8d_IsI8Compatible(jule::Str);
inline jule::Bool _1a5539d79_IsI16Compatible(jule::Str);
inline jule::Bool _1a553a121_IsI32Compatible(jule::Str);
inline jule::Bool _1a553a440_IsI64Compatible(jule::Str);
inline jule::Bool _1a553a6d7_IsU8Compatible(jule::Str);
inline jule::Bool _1a553a97e_IsU16Compatible(jule::Str);
inline jule::Bool _1a553ac26_IsU32Compatible(jule::Str);
inline jule::Bool _1a553b09a_IsU64Compatible(jule::Str);
inline jule::Bool _1a553b342_IsF32Compatible(jule::Str);
inline jule::Bool _1a553b5d9_IsF64Compatible(jule::Str);
inline jule::Bool _1a553b92a_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1a553bbc2_IsI16Greater(jule::Str);
inline jule::Bool _1a553be69_IsI32Greater(jule::Str);
inline jule::Bool _1a553c211_IsI64Greater(jule::Str);
inline jule::Bool _1a553c4a8_IsU16Greater(jule::Str);
inline jule::Bool _1a553c909_IsU32Greater(jule::Str);
inline jule::Bool _1a553cba1_IsU64Greater(jule::Str);
inline jule::Bool _1a553ce48_IsF32Greater(jule::Str);
inline jule::Bool _1a553d1e0_IsF64Greater(jule::Str);
inline jule::Bool _1a553d531_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1a553e565_IsSigInt(jule::Str);
inline jule::Bool _1a553e851_IsUnsigInt(jule::Str);
inline jule::Bool _1a553eae8_IsInt(jule::Str);
inline jule::Bool _1a553ee17_IsFloat(jule::Str);
inline jule::Bool _1a55401ae_IsNum(jule::Str);
inline jule::Bool _1a5540456_IsSigNum(jule::Str);
inline void _1a5548ddd_lshiftUnsig(_1a55406ba_Const*, _1a55406ba_Const*);
inline void _1a55491da_rshiftUnsig(_1a55406ba_Const*, _1a55406ba_Const*);
inline jule::Bool _1a8980178_IsAscii(jule::I32);
inline jule::I32 _1a89802aa_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1a8996e3c_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1a899725b_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1a8997503_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1a8997811_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1a8997b52_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1a87691e8_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64*);
inline jule::Slice<jule::U8> _1a876ec9d_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1a8770056_FmtByDefault(jule::Str*, jule::Any*);
inline void _1a8770430_applyFmtByDefault(jule::Str*, jule::I64*, jule::Slice<jule::Any>);
inline void _1a877082b_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Str _1a8770b39_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1a877281c_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a88d2020_parameterUsesGenerics(jule::Ptr<_1a88ce03e_ParamIns>*, jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>>*);
inline jule::Ptr<_1a86b6651_TypeSymbol> _1a88d44ea_buildType(jule::Ptr<_1a88970e5_TypeDecl>);
inline jule::Ptr<_1a865ec15_Value> _1a88d47d6_buildExpr(jule::Ptr<_1a889b270_Expr>);
inline jule::Ptr<_1a86ada55_TypeAlias> _1a88d4a7d_buildTypeAlias(jule::Ptr<_1a88ad062_TypeAliasDecl>);
inline jule::Ptr<_1a88b4266_Field> _1a88d4d9c_buildField(jule::Ptr<_1a88b153d_FieldDecl>);
inline jule::Slice<jule::Ptr<_1a88b4266_Field>> _1a88d5144_buildFields(jule::Slice<jule::Ptr<_1a88b153d_FieldDecl>>*);
inline jule::Ptr<_1a88b6d3a_Struct> _1a88d53db_buildStruct(jule::Ptr<_1a88b1d8a_StructDecl>);
inline jule::Ptr<_1a88ca920_Param> _1a88d5683_buildParam(jule::Ptr<_1a88a7402_ParamDecl>);
inline jule::Slice<jule::Ptr<_1a88ca920_Param>> _1a88d5a07_buildParams(jule::Slice<jule::Ptr<_1a88a7402_ParamDecl>>*);
inline jule::Ptr<_1a88ca216_RetType> _1a88d5c9e_buildRetType(jule::Ptr<_1a8899d62_RetTypeDecl>);
inline jule::Ptr<_1a88cc25c_Fn> _1a88d6046_buildFn(jule::Ptr<_1a88a8722_FnDecl>);
inline jule::Slice<jule::Ptr<_1a88cc25c_Fn>> _1a88d62dd_buildMethods(jule::Slice<jule::Ptr<_1a88a8722_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1a86b6651_TypeSymbol>> _1a88d6585_buildTraitInherits(jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>>*);
inline jule::Ptr<_1a88de47d_Trait> _1a88d682c_buildTrait(jule::Ptr<_1a88b2561_TraitDecl>);
inline jule::Ptr<_1a88e121b_EnumItem> _1a88d6ac4_buildEnumItem(jule::Ptr<_1a88ae8c1_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1a88e121b_EnumItem>> _1a88d6d6b_buildEnumItems(jule::Slice<jule::Ptr<_1a88ae8c1_EnumItemDecl>>*);
inline jule::Ptr<_1a88e1c11_Enum> _1a88d72bc_buildEnum(jule::Ptr<_1a88b03e9_EnumDecl>);
inline jule::Ptr<_1a88e2c78_TypeEnumItem> _1a88d7564_buildTypeEnumItem(jule::Ptr<_1a88b0bbe_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1a88e2c78_TypeEnumItem>> _1a88d780b_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a88b0bbe_TypeEnumItemDecl>>*);
inline jule::Ptr<_1a88e330b_TypeEnum> _1a88d7aa3_buildTypeEnum(jule::Ptr<_1a88b12c9_TypeEnumDecl>);
inline jule::Ptr<_1a8966901_Var> _1a88d7d4a_buildVar(jule::Ptr<_1a88a9701_VarDecl>);
inline jule::Slice<jule::Ptr<_1a8966901_Var>> _1a88d80e2_buildVars(jule::Slice<jule::Ptr<_1a88a9701_VarDecl>>);
inline jule::Ptr<_1a8919332_Impl> _1a88d8389_buildImpl(jule::Ptr<_1a88b2b6b_Impl>);
inline jule::Ptr<_1a865dbe2_Data> _1a8915163_buildAsComptimeMethodData(jule::Ptr<_1a88cee0d_FnIns>*);
inline jule::Ptr<_1a893d323_ImportInfo> _1a8915350_findComptimePackage(jule::Ptr<_1a89465e5_Sema>*);
inline jule::Ptr<_1a865dbe2_Data> _1a89156b3_buildComptimeTypeInfoData(jule::Ptr<_1a89465e5_Sema>*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Ptr<_1a865dbe2_Data> _1a89159e3_buildComptimeValue(jule::Ptr<_1a865dbe2_Data>*);
inline jule::Bool _1a8918760_matchConstraint(jule::Str*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a8918a4b_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1a8925eba_scopeChecker> _1a891b3bc_newScopeCheckerBase(jule::Ptr<_1a89465e5_Sema>*, jule::Ptr<_1a88cee0d_FnIns>);
inline jule::Ptr<_1a8925eba_scopeChecker> _1a891b752_newScopeChecker(jule::Ptr<_1a89465e5_Sema>*, jule::Ptr<_1a88cee0d_FnIns>);
inline jule::Ptr<_1a8924c33_scopeLabel> _1a891ba93_findLabelParent(jule::Str, jule::Ptr<_1a8925eba_scopeChecker>);
inline jule::Bool _1a891be28_modelIsGotoScope(jule::Any, jule::Ptr<_1a891e38c_Scope>*);
inline jule::Bool _1a891c269_stmtIsGotoScope(jule::Any*, jule::Ptr<_1a891e38c_Scope>*);
inline jule::I64 _1a891c5aa_countMatchType(jule::Ptr<_1a89231a4_Match>*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Slice<jule::Ptr<_1a865dbe2_Data>> _1a891c852_getDatasFromTupleData(jule::Ptr<_1a865dbe2_Data>*);
inline jule::Bool _1a891d18d_checkMut(jule::Ptr<_1a89465e5_Sema>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline jule::Bool _1a891d622_checkAssign(jule::Ptr<_1a89465e5_Sema>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>, jule::Ptr<_1a52684c0_Token>);
inline jule::Bool _1a891d8b9_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1a891db61_isValidStForNextSt(jule::Any*);
inline jule::Bool _1a891de08_stmtIsDef(jule::Any*);
inline jule::U64 _1a893674a_removeEqFromOp(jule::U64);
inline jule::Ptr<_1a8966901_Var> _1a893aa3a_findVarInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1a86ada55_TypeAlias> _1a893ae69_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88b6d3a_Struct> _1a893b354_findStructInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88cc25c_Fn> _1a893b7b6_findFnInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1a88de47d_Trait> _1a893bac4_findTraitInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1a88e1c11_Enum> _1a893be15_findEnumInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1a88e330b_TypeEnum> _1a893c256_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>*, jule::Str);
inline jule::Any _1a893c751_defByIdentPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1a8943218_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1a8943e72_isValidModelForRef(jule::Any*);
inline _1a4deb40b_Log _1a8944417_compilerErr(jule::Ptr<_1a52684c0_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a8944758_impIsLookupable(jule::Ptr<_1a893d323_ImportInfo>*, jule::Str);
inline void _1a8944a55_appendRetVars(jule::Slice<jule::Ptr<_1a8966901_Var>>*, jule::Ptr<_1a88cee0d_FnIns>*);
inline void _1a8944d0d_appendParamVars(jule::Slice<jule::Ptr<_1a8966901_Var>>*, jule::Ptr<_1a88cee0d_FnIns>*);
inline void _1a89450d8_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>*, jule::Ptr<_1a88cee0d_FnIns>*);
inline jule::Ptr<_1a89ab380_SymbolTable> _1a894543a_findFile(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>*, jule::Ptr<_1a526d85a_File>*);
inline void _1a894589c_pushSuggestion(_1a4deb40b_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1a8964dd8_pushImplemented(jule::Ptr<_1a88de47d_Trait>, jule::Ptr<_1a88b6d3a_Struct>*);
inline void _1a8965191_pushImplements(jule::Ptr<_1a88b6d3a_Struct>*, jule::Ptr<_1a88de47d_Trait>);
inline jule::Bool _1a89982a1_traitHasReferenceReceiver(jule::Ptr<_1a88de47d_Trait>*);
inline jule::Bool _1a8998548_floatAssignable(jule::Str, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Bool _1a8998889_sigAssignable(jule::Str, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Bool _1a8998c1e_unsigAssignable(jule::Str, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Bool _1a8999060_intAssignable(jule::Str, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a89a4c3b_checkMutRiskOfStructLit(jule::Ptr<_1a89465e5_Sema>*, jule::Ptr<_1a88bec44_StructLitExprModel>*);
inline jule::Ptr<_1a86ae79d_TypeKind> _1a89aa26e_lenKind(void);
inline jule::Bool _1a89aa59e_isGoodValueToInfer(jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a88645ce_Directive> _1a86a84bc_findDirective(jule::Slice<jule::Ptr<_1a88645ce_Directive>>*, jule::Str);
inline jule::Any _1a86a8852_findBuiltinsImport(jule::Str, jule::Ptr<_1a893d323_ImportInfo>);
inline void _1a86a8a61_fitBitsize(jule::Ptr<_1a865dbe2_Data>*);
inline void _1a86a8d5d_makeStructLitAlloc(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a88bec44_StructLitExprModel>*);
inline jule::Ptr<_1a8966901_Var> _1a86a919e_buildErrorVar(jule::Ptr<_1a891e38c_Scope>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Any _1a86a94e0_findBuiltinsSema(jule::Str, jule::Ptr<_1a89465e5_Sema>);
inline jule::Bool _1a86a9787_isOkForShifting(jule::Ptr<_1a865dbe2_Data>*);
inline jule::Bool _1a86a9b3e_isInstancedStruct(jule::Ptr<_1a88b9b51_StructIns>);
inline jule::Bool _1a86a9ea2_isPtrArithmeticCompatible(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a86aa1e4_applyCastKindModel(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline void _1a86aa49c_applyCastKind(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Ptr<_1a865dbe2_Data> _1a86aa69a_buildVoidData(void);
inline jule::Str _1a86aa964_checkDataForIntegerIndexing(jule::Ptr<_1a865dbe2_Data>*);
inline void _1a86aac2d_applyCastModelByEnum(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a88e1c11_Enum>);
inline void _1a86aaed6_castConstByType(jule::Str*, jule::Ptr<_1a865dbe2_Data>*);
inline void _1a86ab4e2_updateModelToGenericIns(jule::Any*, jule::Ptr<_1a88cee0d_FnIns>*);
inline jule::Bool _1a86ab734_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1a8897997_SubIdentTypeDecl>*);
inline jule::Str _1a86ab9cb_constoa(jule::Ptr<_1a55406ba_Const>*);
inline jule::Ptr<_1a865dbe2_Data> _1a86abd1c_evalEnumStatic(jule::Ptr<_1a88e1c11_Enum>*, jule::Ptr<_1a88e121b_EnumItem>*);
inline jule::Ptr<_1a88bec44_StructLitExprModel> _1a86ac0b4_isLitBased(jule::Any*);
inline jule::Bool _1a86c8b5d_kindUsesGenerics(jule::Ptr<_1a86ae79d_TypeKind>*, jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>>*);
inline jule::Bool _1a86c8ee3_hasDirective(jule::Slice<jule::Ptr<_1a88645ce_Directive>>*, jule::Str);
inline jule::Bool _1a86c928a_canGetPtr(jule::Ptr<_1a865dbe2_Data>*);
inline jule::Bool _1a86c95a9_isValidForSptrType(jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a86c9851_isValidForRef(jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Bool _1a86c9b1a_isBuiltinStrConvertable(jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Str _1a86c9d90_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a86b7003_Prim> _1a86ca247_buildPrimType(jule::Str);
inline jule::Ptr<_1a88b6d3a_Struct> _1a86ca4de_getStructFromKind(jule::Ptr<_1a86ae79d_TypeKind>);
inline void _1a86ca797_applyImplicitCast(jule::Ptr<_1a86ae79d_TypeKind>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Bool _1a86caa3e_validTypeForXof(jule::Ptr<_1a86ae79d_TypeKind>*);
inline __jule_tuple_x_1a89ab380_SymbolTable__jule_tuple_s_1a4deb40b_Log _1a86cd7de_buildSymbols(jule::Ptr<_1a8863347_Ast>*, jule::Trait<_1a893a672_Importer>*, jule::Ptr<_1a88d88d9_symbolBuilder>);
inline __jule_tuple_x_1a8940e5d_Package__jule_tuple_s_1a4deb40b_Log _1a86cdc1d_analyzePackage(jule::Slice<jule::Ptr<_1a8863347_Ast>>*, jule::Trait<_1a893a672_Importer>*, jule::I64*);
inline __jule_tuple_x_1a8940e5d_Package__jule_tuple_s_1a4deb40b_Log _1a86ce108_AnalyzePackage(jule::Slice<jule::Ptr<_1a8863347_Ast>>, jule::Trait<_1a893a672_Importer>, jule::I64);
inline jule::Ptr<_1a88cee0d_FnIns> _1a87730d1_findBuiltinFn(jule::Str);
inline jule::Ptr<_1a86ada55_TypeAlias> _1a8773312_primTypeAlias(jule::Ptr<_1a86ae79d_TypeKind>*);
inline jule::Ptr<_1a86ada55_TypeAlias> _1a8776b2e_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1a8776d3d_findBuiltinDef(jule::Str);
inline jule::Any _1a87770d5_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1a877737c_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1a8777646_findBuiltinDefStdComptime(jule::Str);
inline jule::Any _1a87779ed_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1a8777cc8_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1a865dbe2_Data> _1a87781d5_builtinCallerCommonPlain(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a87785d1_builtinCallerCommon(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a87789bb_builtinCallerCommonMut(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8778d0c_builtinCallerError(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*);
inline jule::Ptr<_1a865dbe2_Data> _1a87791e7_builtinCallerOut(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a87795d2_builtinCallerOutln(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8779bed_builtinCallerNew(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877a0d8_builtinCallerPanic(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877a4c3_builtinCallerMake(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877a8ad_builtinCallerAppend(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877ad42_callerCopySlice(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877b2c6_callerCopyStr(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877b6b1_builtinCallerCopy(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877ba02_callerLenSlice(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877bd43_callerLenMap(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877c184_callerLenArr(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877c4c5_callerLenStr(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877c816_callerLenComptime(jule::Ptr<_1a865dbe2_Data>*, jule::I64);
inline jule::Ptr<_1a865dbe2_Data> _1a877cc01_builtinCallerLen(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877d042_callerCapSlice(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877d383_callerCapStr(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877d76d_builtinCallerCap(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877dd34_callerDeleteMap(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877e21e_builtinCallerDelete(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877e609_builtinCallerClone(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877e9e4_builtinCallerAssert(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a877ee01_builtinCallerStdComptimeTypeOf(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a878031e_builtinCallerStdComptimeValueOf(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a87805c7_rangeData(jule::Trait<_1a88e5286_comptimeRangeKind>);
inline jule::Ptr<_1a865dbe2_Data> _1a87809d4_builtinCallerStdComptimeRange(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8780e02_builtinCallerStdComptimeLine(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8781320_builtinCallerStdComptimeFile(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a878173d_builtinCallerStdComptimeFiles(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8781b5b_builtinCallerStdMemSizeOf(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8782079_builtinCallerStdMemAlignOf(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8782497_builtinCallerStdMemFree(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a87828c6_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8782ce4_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a8783234_builtinCallerStdDebugOut(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Ptr<_1a865dbe2_Data> _1a878361e_builtinCallerStdDebugOutln(jule::Ptr<_1a8683860_Eval>*, jule::Ptr<_1a88a0186_FnCallExpr>*, jule::Ptr<_1a865dbe2_Data>*);
inline jule::Bool _1a8b40844_FindModuleFile(jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>>*);
inline jule::Str _1a8b40976_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1a4deb40b_Log> _1a8b40b74_CheckModuleFile(jule::Str);
inline jule::Ptr<_1a56b3e9d_FileInfo> _1a939e5d0_ParseFile(jule::Ptr<_1a526d85a_File>);
inline __jule_tuple_x_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log _1a939eaec_parseFileset(jule::Ptr<_1a526d85a_File>);
inline jule::Ptr<_1a88a6c2b_ScopeTree> _1a93a0526_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a93a0812_isSt(jule::Ptr<_1a52684c0_Token>, jule::Ptr<_1a52684c0_Token>);
inline jule::Bool _1a93a0b53_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1a93a0ed8_nextStPos(jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::I64);
inline __jule_tuple_sx_1a52684c0_Token__jule_tuple_bool _1a93a1329_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Slice<jule::Ptr<_1a93a1626_stmt>> _1a93a19bc_splitStmts(jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Bool _1a93b8572_isTypeOp(jule::U64*);
inline jule::Bool _1a93b885d_isTypeRange(jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Slice<jule::Ptr<_1a52684c0_Token>> _1a93b8b05_getBlockExpr(jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline __jule_tuple_sx_1a52684c0_Token__jule_tuple_sx_1a52684c0_Token _1a93b8e8a_splitDelim(jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::U64);
inline jule::I64 _1a93b9232_findLowestPrecOp(jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Ptr<_1a889cd65_IdentExpr> _1a93b94c9_buildIdentExpr(jule::Ptr<_1a52684c0_Token>*);
inline __jule_tuple_sx_1a52684c0_Token__jule_tuple_int _1a93b9771_getRangeExprTokens(jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Bool _1a93ba4ca_checkAssignTokens(jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline _1a4deb40b_Log _1a93bb6eb_makeErr(jule::I64, jule::I64, jule::Ptr<_1a526d85a_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a52684c0_Token>> _1a93bbbc4_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline __jule_tuple_sx_1a52684c0_Token__jule_tuple_sx_1a52684c0_Token _1a93bbe6b_rangeLast(jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline __jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log _1a93bc356_parts(jule::Slice<jule::Ptr<_1a52684c0_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _1a93bc5ed_getCloseOfBrace(jule::U64);
inline _1a4deb40b_Log _1a93bc9d8_compilerErr(jule::Ptr<_1a52684c0_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1a93bcd3a_pushSuggestion(_1a4deb40b_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a93bd1ae_tokstoa(jule::Slice<jule::Ptr<_1a52684c0_Token>>*);
inline jule::Bool _1a93cd301_isPub(jule::Str*);
inline jule::Ptr<_1a88970e5_TypeDecl> _1a93cdb92_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1a8b19862_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1a8b14928_checkArch(jule::Str);
inline jule::Bool _1a8b14b37_isPassFileAnnotation(jule::Str);
inline void _1a8b2e723_setOsVars(jule::Slice<jule::Str>*);
inline void _1a8b2e976_setArchVars(jule::Slice<jule::Str>*);
inline void _1a8b2ec2e_initVars(jule::Slice<jule::Str>*, _1a8b2e415_CompileInfo*);
inline jule::Slice<jule::U8> _1a93d2899_readBuff(jule::Str);
inline _1a4deb40b_Log _1a93d2b52_flatCompilerErr(jule::Str);
inline void _1a93d7063_pushPasses(jule::Ptr<_1a8940e5d_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1a93d73e8_getAllUniquePasses(jule::Ptr<_1a8940e5d_Package>*, jule::Slice<jule::Ptr<_1a893d323_ImportInfo>>);
inline _1a8b2e415_CompileInfo _1a93d75e6_buildCompileInfo(void);
inline void _1a947e715_EliminateDefines(jule::Ptr<_1a93d5847_IR>*);
inline jule::Ptr<_1a88645ce_Directive> _1a947ea9a_findDirective(jule::Slice<jule::Ptr<_1a88645ce_Directive>>*, jule::Str);
inline jule::Bool _1a947eddb_hasDirective(jule::Slice<jule::Ptr<_1a88645ce_Directive>>*, jule::Str);
inline jule::Bool _1a9480271_isTraitMethod(jule::Ptr<_1a88b9b51_StructIns>*, jule::Ptr<_1a88cee0d_FnIns>*);
inline void _1a9483d79_eliminateDeadCodeOfScope(jule::Ptr<_1a891e38c_Scope>);
inline void _1a9484110_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a88cc25c_Fn>>*);
inline void _1a9484352_eliminateFunctionsScopePackage(jule::Ptr<_1a8940e5d_Package>*);
inline void _1a94845e9_eliminateScopePackage(jule::Ptr<_1a8940e5d_Package>*);
inline void _1a9484808_EliminateScopes(jule::Ptr<_1a93d5847_IR>*);
inline jule::Bool _1a878a7be_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1a878aacc_isConstantValidConditionalCase(jule::Ptr<_1a891e788_If>*);
inline jule::Bool _1a878ad85_isUnreachableExpr(jule::Any*);
inline jule::Bool _1a8a5763a_isConstantValidMatchCase(jule::Ptr<_1a8923bee_Case>*);
inline jule::Bool _1a8a5787c_isUnreachableConditionalCase(jule::Ptr<_1a891e788_If>*);
inline jule::Bool _1a8a57b35_isUnreachableMatchCase(jule::Ptr<_1a8923bee_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1a8a60885_checkForBitShiftOpt(jule::Ptr<_1a88bda56_OperandExprModel>*, jule::Ptr<_1a88bda56_OperandExprModel>*);
inline jule::Bool _1a8a60c1a_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1a8a61424_doInternalNosafeStobs(_1a8a58905_exprOptimizer*, _1a93d98b2_stdCacheData*, jule::Ptr<_1a88c0e54_FnCallExprModel>*);
inline void _1a93da044_buildCache(jule::Ptr<_1a93d5847_IR>*);
inline void _1a93da286_buildStdInternalNosafeCache(jule::Ptr<_1a93d5847_IR>*);
inline void _1a93da5e9_pushCache(jule::Ptr<_1a8940e5d_Package>*, jule::Str, jule::Fn<void(_1a8a58905_exprOptimizer*,_1a93d98b2_stdCacheData*,jule::Ptr<_1a88c0e54_FnCallExprModel>*)>);
inline jule::Ptr<_1a88cee0d_FnIns> _1a93da97e_getFunc(jule::Ptr<_1a8940e5d_Package>*, jule::Str*);
inline jule::Ptr<_1a8940e5d_Package> _1a93dacc0_getPackage(jule::Ptr<_1a93d5847_IR>*, jule::Str*);
inline void _1a93dd410_PushOptLevel(jule::I64);
inline void _1a948db31_detectEnabled(void);
inline void _1a8027523_Throw(jule::Str);
inline jule::U64 _1a9da1840_unix(void);
inline jule::Bool _1a960b386_isCopyOptimizable(jule::Ptr<_1a865dbe2_Data>*);
inline jule::Bool _1a960b71b_isIterCopyOptimizable(jule::Ptr<_1a865dbe2_Data>*, jule::Ptr<_1a8966901_Var>*);
inline jule::Str _1a961b53e_decomposeCommonEsq(jule::U8);
inline jule::Str _1a961b82a_sbtoa(jule::U8);
inline jule::Str _1a961bac2_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1a961bde1_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1a961c1ee_ftoa(jule::F64, jule::I64);
inline jule::Str _1a961c496_itoa(jule::I64);
inline jule::Str _1a961c73d_utoa(jule::U64);
inline jule::Bool _1a961cae5_isForwarded(jule::Ptr<_1a891e38c_Scope>*);
inline jule::Bool _1a961cdae_isBuiltinCallHasDebuginf(jule::Ptr<_1a88c0e54_FnCallExprModel>*);
inline jule::Bool _1a961d0e0_isExprComesFromBind(jule::Ptr<_1a865dbe2_Data>*);
inline jule::Bool _1a961d387_isAny(jule::Ptr<_1a86ae79d_TypeKind>*);
inline void _1a9db52c1_iterFiles(jule::Ptr<_1a8940e5d_Package>*, jule::Fn<void(jule::Ptr<_1a89ab380_SymbolTable>*)>);
inline jule::Str _1a9db55ac_concatAllParts(jule::Slice<jule::Ptr<_1a52684c0_Token>>);
inline jule::Bool _1a9db58ed_containsTraitMethod(jule::Ptr<_1a88de47d_Trait>*, jule::Str*);
inline void _1a9db5bea_pushMethodsFromInherit(jule::Ptr<_1a88de47d_Trait>*, jule::Ptr<_1a88de47d_Trait>*);
inline void _1a9db5ec5_pushMethodsFromInherits(jule::Ptr<_1a88de47d_Trait>*, jule::Ptr<_1a88de47d_Trait>*);
inline jule::Bool _1a9db627d_isOpMethod(jule::Ptr<_1a88cc25c_Fn>*);
inline jule::Bool _1a9db6525_isHeadDecl(jule::Ptr<_1a88cc25c_Fn>*);
inline jule::Ptr<_1a88645ce_Directive> _1a9dc47b9_findDirective(jule::Slice<jule::Ptr<_1a88645ce_Directive>>*, jule::Str);
inline jule::Bool _1a9dc4b4e_hasDirective(jule::Slice<jule::Ptr<_1a88645ce_Directive>>*, jule::Str);
inline jule::Bool _1a9dc4de6_shouldInitialized(jule::Ptr<_1a86ae79d_TypeKind>*);
inline void _1a4e944d7_printErrorMessage(jule::Str);
inline void _1a4e9473a_help(jule::Slice<jule::Str>*);
inline void _1a4e94949_version(jule::Slice<jule::Str>*);
inline void _1a4e94b36_toolDistos(void);
inline void _1a4e94c9b_toolDistarch(void);
inline void _1a4e94eaa_tool(jule::Slice<jule::Str>*);
inline void _1a4e951b9_julenv(jule::Slice<jule::Str>*);
inline void _1a4e954a5_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1a4e9574c_processCommand(jule::Slice<jule::Str>*);
inline void _1a4e958b2_showInfo(void);
void entry_point(void);
inline void _1a4e96385_enableVtp(void);
inline void _1a4e9652d_init(void);
inline void _1a9e31e64_init(void);
inline jule::Ptr<_1d0a32de6_File> _1a9e3221c_openOutput(jule::Str*);
inline void _1a9e32382_clearObjects(void);
inline void _1a9e3267e_compileIr(jule::Str, jule::Str);
inline jule::Bool _1a9e32926_isCppSourceFile(jule::Str);
inline void _1a9e32b35_pushCompCmdClang(jule::Str*);
inline void _1a9e32d44_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _1a9e33295_genCompileCmd(jule::Str, jule::Ptr<_1a93d5847_IR>*);
inline jule::Str _1a9e33493_getCompilePath(void);
inline void _1a9e336d5_applyTargetIndependentOptimizations(jule::Ptr<_1a93d5847_IR>*);
inline void _1a9e3384a_checkCompilerFlag(void);
inline void _1a9e33a15_checkTargetArch(jule::Str);
inline void _1a9e33c24_checkTargetOs(jule::Str);
inline void _1a9e33e33_checkTargetFlag(jule::Str*);
inline void _1a9e34142_checkOptFlag(jule::Str*);
inline void _1a9e344b6_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a9e3474c_checkFlags(jule::Slice<jule::Str>*);
inline void _1a9e3495b_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1a93d5847_IR> _1a9e34c03_buildIr(jule::Slice<jule::Str>*);
inline void _1a9e34e12_compileCommand(jule::Slice<jule::Str>*);


struct _1a88e5286_comptimeRangeKindMptrData {
	void(*_1a88e4a16_ready)(jule::Trait<_1a88e5286_comptimeRangeKind>, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
	void(*_1a88e4dce_step)(jule::Trait<_1a88e5286_comptimeRangeKind>, jule::I64, jule::Ptr<_1a8966901_Var>*, jule::Ptr<_1a8966901_Var>*);
	jule::I64(*_1a88e5143_len)(jule::Trait<_1a88e5286_comptimeRangeKind>);
};

struct _1a893a672_ImporterMptrData {
	void(*_1a8939594_SetModPath)(jule::Trait<_1a893a672_Importer>, jule::Str);
	jule::Str(*_1a89397d6_GetModPath)(jule::Trait<_1a893a672_Importer>);
	jule::Str(*_1a8939ae4_ModById)(jule::Trait<_1a893a672_Importer>, jule::I64);
	jule::Ptr<_1a893d323_ImportInfo>(*_1a8939e02_GetImport)(jule::Trait<_1a893a672_Importer>, jule::Str);
	__jule_tuple_sx_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log(*_1a893a2a9_ImportPackage)(jule::Trait<_1a893a672_Importer>, jule::Str, jule::Bool);
	void(*_1a893a52e_Imported)(jule::Trait<_1a893a672_Importer>, jule::Ptr<_1a893d323_ImportInfo>);
};

struct _1a86ae33b_KindMptrData {
	jule::Str(*_1a86addda_Str)(jule::Trait<_1a86ae33b_Kind>);
	jule::Bool(*_1a86ae1e8_Equal)(jule::Trait<_1a86ae33b_Kind>, jule::Ptr<_1a86ae79d_TypeKind>);
};

struct _1a86ccac9_LookupMptrData {
	jule::Ptr<_1a893d323_ImportInfo>(*_1a86cb08e_SelectPackage)(jule::Trait<_1a86ccac9_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)>);
	jule::Ptr<_1a8966901_Var>(*_1a86cb446_FindVar)(jule::Trait<_1a86ccac9_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a86ada55_TypeAlias>(*_1a86cb7ed_FindTypeAlias)(jule::Trait<_1a86ccac9_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a88b6d3a_Struct>(*_1a86cbba5_FindStruct)(jule::Trait<_1a86ccac9_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a88cc25c_Fn>(*_1a86cc05c_FindFn)(jule::Trait<_1a86ccac9_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a88de47d_Trait>(*_1a86cc36a_FindTrait)(jule::Trait<_1a86ccac9_Lookup>, jule::Str);
	jule::Ptr<_1a88e1c11_Enum>(*_1a86cc678_FindEnum)(jule::Trait<_1a86ccac9_Lookup>, jule::Str);
	jule::Ptr<_1a88e330b_TypeEnum>(*_1a86cc986_FindTypeEnum)(jule::Trait<_1a86ccac9_Lookup>, jule::Str);
};

struct _1a9e2a369_CommonFlagMptrData {
	jule::Str(*_1a9dea779_Name)(jule::Trait<_1a9e2a369_CommonFlag>);
	jule::I32(*_1a9dea8ab_Short)(jule::Trait<_1a9e2a369_CommonFlag>);
	jule::Str(*_1a9deaa65_What)(jule::Trait<_1a9e2a369_CommonFlag>);
	void(*_1a9e2a237_Reset)(jule::Trait<_1a9e2a369_CommonFlag>);
};



inline void _1a88e4a16_ready_comptimeRangeKind_0(jule::Trait<_1a88e5286_comptimeRangeKind> _self_, jule::Ptr<_1a8966901_Var>* _1329_keyA, jule::Ptr<_1a8966901_Var>* _1346_keyB) {
	_1a88ed39e_ready(_self_.safe_ptr<_1a88ec7dd_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _1a88e4dce_step_comptimeRangeKind_0(jule::Trait<_1a88e5286_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1a8966901_Var>* _1436_keyA, jule::Ptr<_1a8966901_Var>* _1453_keyB) {
	_1a88ed767_step(_self_.safe_ptr<_1a88ec7dd_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1a88e5143_len_comptimeRangeKind_0(jule::Trait<_1a88e5286_comptimeRangeKind> _self_) {
	return _1a88ed9cb_len(_self_.safe_ptr<_1a88ec7dd_comptimeStructFields>());
}
inline void _1a88e4a16_ready_comptimeRangeKind_1(jule::Trait<_1a88e5286_comptimeRangeKind> _self_, jule::Ptr<_1a8966901_Var>* _1329_keyA, jule::Ptr<_1a8966901_Var>* _1346_keyB) {
	_1a89013a2_ready(_self_.safe_ptr<_1a8900879_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _1a88e4dce_step_comptimeRangeKind_1(jule::Trait<_1a88e5286_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1a8966901_Var>* _1436_keyA, jule::Ptr<_1a8966901_Var>* _1453_keyB) {
	_1a890176a_step(_self_.safe_ptr<_1a8900879_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1a88e5143_len_comptimeRangeKind_1(jule::Trait<_1a88e5286_comptimeRangeKind> _self_) {
	return _1a89019ce_len(_self_.safe_ptr<_1a8900879_comptimeStatics>());
}
inline void _1a88e4a16_ready_comptimeRangeKind_2(jule::Trait<_1a88e5286_comptimeRangeKind> _self_, jule::Ptr<_1a8966901_Var>* _1329_keyA, jule::Ptr<_1a8966901_Var>* _1346_keyB) {
	_1a8903b24_ready(_self_.safe_ptr<_1a8902edb_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _1a88e4dce_step_comptimeRangeKind_2(jule::Trait<_1a88e5286_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1a8966901_Var>* _1436_keyA, jule::Ptr<_1a8966901_Var>* _1453_keyB) {
	_1a8903edc_step(_self_.safe_ptr<_1a8902edb_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1a88e5143_len_comptimeRangeKind_2(jule::Trait<_1a88e5286_comptimeRangeKind> _self_) {
	return _1a8904251_len(_self_.safe_ptr<_1a8902edb_comptimeEnumFields>());
}
inline void _1a88e4a16_ready_comptimeRangeKind_3(jule::Trait<_1a88e5286_comptimeRangeKind> _self_, jule::Ptr<_1a8966901_Var>* _1329_keyA, jule::Ptr<_1a8966901_Var>* _1346_keyB) {
	_1a8907188_ready(_self_.safe_ptr<_1a89065d8_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _1a88e4dce_step_comptimeRangeKind_3(jule::Trait<_1a88e5286_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1a8966901_Var>* _1436_keyA, jule::Ptr<_1a8966901_Var>* _1453_keyB) {
	_1a8907551_step(_self_.safe_ptr<_1a89065d8_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1a88e5143_len_comptimeRangeKind_3(jule::Trait<_1a88e5286_comptimeRangeKind> _self_) {
	return _1a89077b5_len(_self_.safe_ptr<_1a89065d8_comptimeParams>());
}
inline void _1a88e4a16_ready_comptimeRangeKind_4(jule::Trait<_1a88e5286_comptimeRangeKind> _self_, jule::Ptr<_1a8966901_Var>* _1329_keyA, jule::Ptr<_1a8966901_Var>* _1346_keyB) {
	_1a8908651_ready(_self_.safe_ptr<_1a8907aa1_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _1a88e4dce_step_comptimeRangeKind_4(jule::Trait<_1a88e5286_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1a8966901_Var>* _1436_keyA, jule::Ptr<_1a8966901_Var>* _1453_keyB) {
	_1a8908a19_step(_self_.safe_ptr<_1a8907aa1_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1a88e5143_len_comptimeRangeKind_4(jule::Trait<_1a88e5286_comptimeRangeKind> _self_) {
	return _1a8908c7d_len(_self_.safe_ptr<_1a8907aa1_comptimeTypeInfos>());
}
inline void _1a88e4a16_ready_comptimeRangeKind_5(jule::Trait<_1a88e5286_comptimeRangeKind> _self_, jule::Ptr<_1a8966901_Var>* _1329_keyA, jule::Ptr<_1a8966901_Var>* _1346_keyB) {
	_1a8912c10_ready(_self_.safe_ptr<_1a8912160_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _1a88e4dce_step_comptimeRangeKind_5(jule::Trait<_1a88e5286_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1a8966901_Var>* _1436_keyA, jule::Ptr<_1a8966901_Var>* _1453_keyB) {
	_1a89130c8_step(_self_.safe_ptr<_1a8912160_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1a88e5143_len_comptimeRangeKind_5(jule::Trait<_1a88e5286_comptimeRangeKind> _self_) {
	return _1a891333c_len(_self_.safe_ptr<_1a8912160_comptimeFiles>());
}
inline void _1a8939594_SetModPath_Importer_0(jule::Trait<_1a893a672_Importer> _self_, jule::Str _1729_path) {
	_1a93d3b42_SetModPath(_self_.safe_ptr<_1a93d30d6_JuleImporter>(), _1729_path);
}
inline jule::Str _1a89397d6_GetModPath_Importer_0(jule::Trait<_1a893a672_Importer> _self_) {
	return _1a93d3da6_GetModPath(_self_.safe_ptr<_1a93d30d6_JuleImporter>());
}
inline jule::Str _1a8939ae4_ModById_Importer_0(jule::Trait<_1a893a672_Importer> _self_, jule::I64 _2522_id) {
	return _1a93d41b4_ModById(_self_.safe_ptr<_1a93d30d6_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1a893d323_ImportInfo> _1a8939e02_GetImport_Importer_0(jule::Trait<_1a893a672_Importer> _self_, jule::Str _3128_path) {
	return _1a93d44c2_GetImport(_self_.safe_ptr<_1a93d30d6_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log _1a893a2a9_ImportPackage_Importer_0(jule::Trait<_1a893a672_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1a93d4879_ImportPackage(_self_.safe_ptr<_1a93d30d6_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1a893a52e_Imported_Importer_0(jule::Trait<_1a893a672_Importer> _self_, jule::Ptr<_1a893d323_ImportInfo> _4131__0) {
	_1a93d4aee_Imported(_self_.safe_ptr<_1a93d30d6_JuleImporter>(), _4131__0);
}
inline jule::Str _1a86addda_Str_Kind_0(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a88b9eb4_Str(_self_.safe_ptr<_1a88b9b51_StructIns>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_0(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a88ba2c2_Equal(_self_.data.as<_1a88b9b51_StructIns>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_1(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a88d023d_Str(_self_.safe_ptr<_1a88cee0d_FnIns>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_1(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a88d054b_Equal(_self_.data.as<_1a88cee0d_FnIns>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_2(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a88de835_Str(_self_.safe_ptr<_1a88de47d_Trait>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_2(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a88deb43_Equal(_self_.data.as<_1a88de47d_Trait>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_3(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a88e2074_Str(_self_.safe_ptr<_1a88e1c11_Enum>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_3(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a88e2382_Equal(_self_.data.as<_1a88e1c11_Enum>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_4(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a88e363b_Str(_self_.safe_ptr<_1a88e330b_TypeEnum>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_4(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a88e3949_Equal(_self_.data.as<_1a88e330b_TypeEnum>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_5(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a88e5819_Str(_self_.safe_ptr<_1a88e5462_comptimeRange>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_5(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a88e5b27_Equal(_self_.data.as<_1a88e5462_comptimeRange>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_6(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a88e62ba_Str(_self_.safe_ptr<_1a88e5e57_comptimeStructField>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_6(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a88e65c8_Equal(_self_.data.as<_1a88e5e57_comptimeStructField>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_7(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a88ecb62_Str(_self_.safe_ptr<_1a88ec7dd_comptimeStructFields>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_7(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a88ece70_Equal(_self_.data.as<_1a88ec7dd_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_8(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a88ee12a_Str(_self_.safe_ptr<_1a88edcb7_comptimeStatic>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_8(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a88ee438_Equal(_self_.data.as<_1a88edcb7_comptimeStatic>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_9(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a8900bdc_Str(_self_.safe_ptr<_1a8900879_comptimeStatics>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_9(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a8900eea_Equal(_self_.data.as<_1a8900879_comptimeStatics>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_10(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a890212d_Str(_self_.safe_ptr<_1a8901cba_comptimeEnumField>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_10(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a890243b_Equal(_self_.data.as<_1a8901cba_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_11(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a890345e_Str(_self_.safe_ptr<_1a8902edb_comptimeEnumFields>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_11(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a890376c_Equal(_self_.data.as<_1a8902edb_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_12(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a89048a0_Str(_self_.safe_ptr<_1a890453c_comptimeParam>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_12(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a8904bad_Equal(_self_.data.as<_1a890453c_comptimeParam>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_13(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a890694b_Str(_self_.safe_ptr<_1a89065d8_comptimeParams>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_13(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a8906c59_Equal(_self_.data.as<_1a89065d8_comptimeParams>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_14(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a8907e14_Str(_self_.safe_ptr<_1a8907aa1_comptimeTypeInfos>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_14(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a8908222_Equal(_self_.data.as<_1a8907aa1_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_15(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a89093cc_Str(_self_.safe_ptr<_1a8909069_comptimeTypeInfo>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_15(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a89096da_Equal(_self_.data.as<_1a8909069_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_16(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a890edc7_Str(_self_.safe_ptr<_1a890ea64_comptimeValue>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_16(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a89101d5_Equal(_self_.data.as<_1a890ea64_comptimeValue>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_17(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a89124c3_Str(_self_.safe_ptr<_1a8912160_comptimeFiles>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_17(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a89127d1_Equal(_self_.data.as<_1a8912160_comptimeFiles>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_18(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a891398b_Str(_self_.safe_ptr<_1a8913628_comptimeFile>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_18(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a8913c99_Equal(_self_.data.as<_1a8913628_comptimeFile>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_19(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a86aeb55_Str(_self_.safe_ptr<_1a86ae79d_TypeKind>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_19(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a86aee63_Equal(_self_.data.as<_1a86ae79d_TypeKind>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_20(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a86b7333_Str(_self_.safe_ptr<_1a86b7003_Prim>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_20(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a86b7641_Equal(_self_.data.as<_1a86b7003_Prim>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_21(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a86baab7_Str(_self_.safe_ptr<_1a86ba754_Sptr>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_21(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a86badc5_Equal(_self_.data.as<_1a86ba754_Sptr>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_22(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a86bb634_Str(_self_.safe_ptr<_1a86bb1b1_Slc>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_22(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a86bb942_Equal(_self_.data.as<_1a86bb1b1_Slc>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_23(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a86bc129_Str(_self_.safe_ptr<_1a86bbcb6_Tuple>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_23(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a86bc437_Equal(_self_.data.as<_1a86bbcb6_Tuple>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_24(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a86bcaca_Str(_self_.safe_ptr<_1a86bc767_Map>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_24(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a86bcdd8_Equal(_self_.data.as<_1a86bc767_Map>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_25(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a86bd6be_Str(_self_.safe_ptr<_1a86bd35b_Arr>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_25(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a86bd9cc_Equal(_self_.data.as<_1a86bd35b_Arr>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_26(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a86be12b_Str(_self_.safe_ptr<_1a86bdcb8_Ptr>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_26(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a86be439_Equal(_self_.data.as<_1a86bdcb8_Ptr>(), _5621_other);
}
inline jule::Str _1a86addda_Str_Kind_27(jule::Trait<_1a86ae33b_Kind> _self_) {
	return _1a9db7504_Str(_self_.safe_ptr<_1a9db725c_customType>());
}
inline jule::Bool _1a86ae1e8_Equal_Kind_27(jule::Trait<_1a86ae33b_Kind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _5621_other) {
	return _1a9db7812_Equal(_self_.data.as<_1a9db725c_customType>(), _5621_other);
}
inline jule::Ptr<_1a893d323_ImportInfo> _1a86cb08e_SelectPackage_Lookup_0(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)> _932_selector) {
	return _1a892643d_SelectPackage(_self_.safe_ptr<_1a8925eba_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1a8966901_Var> _1a86cb446_FindVar_Lookup_0(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a89267e5_FindVar(_self_.safe_ptr<_1a8925eba_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a86ada55_TypeAlias> _1a86cb7ed_FindTypeAlias_Lookup_0(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a8926b9c_FindTypeAlias(_self_.safe_ptr<_1a8925eba_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a88b6d3a_Struct> _1a86cbba5_FindStruct_Lookup_0(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a8927054_FindStruct(_self_.safe_ptr<_1a8925eba_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a88cc25c_Fn> _1a86cc05c_FindFn_Lookup_0(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a892740b_FindFn(_self_.safe_ptr<_1a8925eba_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a88de47d_Trait> _1a86cc36a_FindTrait_Lookup_0(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2928_ident) {
	return _1a8927719_FindTrait(_self_.safe_ptr<_1a8925eba_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1a88e1c11_Enum> _1a86cc678_FindEnum_Lookup_0(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _3327_ident) {
	return _1a8927a27_FindEnum(_self_.safe_ptr<_1a8925eba_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1a88e330b_TypeEnum> _1a86cc986_FindTypeEnum_Lookup_0(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _3731_ident) {
	return _1a8927d35_FindTypeEnum(_self_.safe_ptr<_1a8925eba_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1a893d323_ImportInfo> _1a86cb08e_SelectPackage_Lookup_1(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)> _932_selector) {
	return _1a893d7da_SelectPackage(_self_.safe_ptr<_1a893d323_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1a8966901_Var> _1a86cb446_FindVar_Lookup_1(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a893db92_FindVar(_self_.safe_ptr<_1a893d323_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a86ada55_TypeAlias> _1a86cb7ed_FindTypeAlias_Lookup_1(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a893e049_FindTypeAlias(_self_.safe_ptr<_1a893d323_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a88b6d3a_Struct> _1a86cbba5_FindStruct_Lookup_1(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a893e401_FindStruct(_self_.safe_ptr<_1a893d323_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a88cc25c_Fn> _1a86cc05c_FindFn_Lookup_1(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a893e7a8_FindFn(_self_.safe_ptr<_1a893d323_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a88de47d_Trait> _1a86cc36a_FindTrait_Lookup_1(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2928_ident) {
	return _1a893eab6_FindTrait(_self_.safe_ptr<_1a893d323_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1a88e1c11_Enum> _1a86cc678_FindEnum_Lookup_1(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _3327_ident) {
	return _1a893edc4_FindEnum(_self_.safe_ptr<_1a893d323_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1a88e330b_TypeEnum> _1a86cc986_FindTypeEnum_Lookup_1(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _3731_ident) {
	return _1a89401d2_FindTypeEnum(_self_.safe_ptr<_1a893d323_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1a893d323_ImportInfo> _1a86cb08e_SelectPackage_Lookup_2(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)> _932_selector) {
	return _1a89413d1_SelectPackage(_self_.safe_ptr<_1a8940e5d_Package>(), _932_selector);
}
inline jule::Ptr<_1a8966901_Var> _1a86cb446_FindVar_Lookup_2(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a8941788_FindVar(_self_.safe_ptr<_1a8940e5d_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a86ada55_TypeAlias> _1a86cb7ed_FindTypeAlias_Lookup_2(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a8941b40_FindTypeAlias(_self_.safe_ptr<_1a8940e5d_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a88b6d3a_Struct> _1a86cbba5_FindStruct_Lookup_2(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a8941ee7_FindStruct(_self_.safe_ptr<_1a8940e5d_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a88cc25c_Fn> _1a86cc05c_FindFn_Lookup_2(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a894239e_FindFn(_self_.safe_ptr<_1a8940e5d_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a88de47d_Trait> _1a86cc36a_FindTrait_Lookup_2(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2928_ident) {
	return _1a89426ac_FindTrait(_self_.safe_ptr<_1a8940e5d_Package>(), _2928_ident);
}
inline jule::Ptr<_1a88e1c11_Enum> _1a86cc678_FindEnum_Lookup_2(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _3327_ident) {
	return _1a89429ba_FindEnum(_self_.safe_ptr<_1a8940e5d_Package>(), _3327_ident);
}
inline jule::Ptr<_1a88e330b_TypeEnum> _1a86cc986_FindTypeEnum_Lookup_2(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _3731_ident) {
	return _1a8942cc8_FindTypeEnum(_self_.safe_ptr<_1a8940e5d_Package>(), _3731_ident);
}
inline jule::Ptr<_1a893d323_ImportInfo> _1a86cb08e_SelectPackage_Lookup_3(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)> _932_selector) {
	return _1a8946a68_SelectPackage(_self_.safe_ptr<_1a89465e5_Sema>(), _932_selector);
}
inline jule::Ptr<_1a8966901_Var> _1a86cb446_FindVar_Lookup_3(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a8946e20_FindVar(_self_.safe_ptr<_1a89465e5_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a86ada55_TypeAlias> _1a86cb7ed_FindTypeAlias_Lookup_3(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a89472c7_FindTypeAlias(_self_.safe_ptr<_1a89465e5_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a88b6d3a_Struct> _1a86cbba5_FindStruct_Lookup_3(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a894767e_FindStruct(_self_.safe_ptr<_1a89465e5_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a88cc25c_Fn> _1a86cc05c_FindFn_Lookup_3(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a8947a36_FindFn(_self_.safe_ptr<_1a89465e5_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a88de47d_Trait> _1a86cc36a_FindTrait_Lookup_3(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2928_ident) {
	return _1a8947d44_FindTrait(_self_.safe_ptr<_1a89465e5_Sema>(), _2928_ident);
}
inline jule::Ptr<_1a88e1c11_Enum> _1a86cc678_FindEnum_Lookup_3(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _3327_ident) {
	return _1a8948152_FindEnum(_self_.safe_ptr<_1a89465e5_Sema>(), _3327_ident);
}
inline jule::Ptr<_1a88e330b_TypeEnum> _1a86cc986_FindTypeEnum_Lookup_3(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _3731_ident) {
	return _1a8948460_FindTypeEnum(_self_.safe_ptr<_1a89465e5_Sema>(), _3731_ident);
}
inline jule::Ptr<_1a893d323_ImportInfo> _1a86cb08e_SelectPackage_Lookup_4(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)> _932_selector) {
	return _1a89ab847_SelectPackage(_self_.safe_ptr<_1a89ab380_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1a8966901_Var> _1a86cb446_FindVar_Lookup_4(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1a89abbee_FindVar(_self_.safe_ptr<_1a89ab380_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1a86ada55_TypeAlias> _1a86cb7ed_FindTypeAlias_Lookup_4(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1a89ac0a6_FindTypeAlias(_self_.safe_ptr<_1a89ab380_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1a88b6d3a_Struct> _1a86cbba5_FindStruct_Lookup_4(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1a89ac45d_FindStruct(_self_.safe_ptr<_1a89ab380_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1a88cc25c_Fn> _1a86cc05c_FindFn_Lookup_4(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1a89ac815_FindFn(_self_.safe_ptr<_1a89ab380_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1a88de47d_Trait> _1a86cc36a_FindTrait_Lookup_4(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _2928_ident) {
	return _1a89acb23_FindTrait(_self_.safe_ptr<_1a89ab380_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1a88e1c11_Enum> _1a86cc678_FindEnum_Lookup_4(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _3327_ident) {
	return _1a89ace31_FindEnum(_self_.safe_ptr<_1a89ab380_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1a88e330b_TypeEnum> _1a86cc986_FindTypeEnum_Lookup_4(jule::Trait<_1a86ccac9_Lookup> _self_, jule::Str _3731_ident) {
	return _1a89ad23e_FindTypeEnum(_self_.safe_ptr<_1a89ab380_SymbolTable>(), _3731_ident);
}
inline jule::Str _1a9dea779_Name_CommonFlag_0(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd8b01e_Name(_self_.safe_ptr<_1acd8ac33_Flag>());
}
inline jule::I32 _1a9dea8ab_Short_CommonFlag_0(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd8b3b5_Short(_self_.safe_ptr<_1acd8ac33_Flag>());
}
inline jule::Str _1a9deaa65_What_CommonFlag_0(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd8b151_What(_self_.safe_ptr<_1acd8ac33_Flag>());
}
inline void _1a9e2a237_Reset_CommonFlag_0(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	_1acd8b283_Reset(_self_.safe_ptr<_1acd8ac33_Flag>());
}
inline jule::Str _1a9dea779_Name_CommonFlag_1(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd8e242_Name(_self_.safe_ptr<_1acd8e6b5_Flag>());
}
inline jule::I32 _1a9dea8ab_Short_CommonFlag_1(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd8ec15_Short(_self_.safe_ptr<_1acd8e6b5_Flag>());
}
inline jule::Str _1a9deaa65_What_CommonFlag_1(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd8e9a1_What(_self_.safe_ptr<_1acd8e6b5_Flag>());
}
inline void _1a9e2a237_Reset_CommonFlag_1(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	_1acd8ead3_Reset(_self_.safe_ptr<_1acd8e6b5_Flag>());
}
inline jule::Str _1a9dea779_Name_CommonFlag_2(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd928e9_Name(_self_.safe_ptr<_1acd92d6c_Flag>());
}
inline jule::I32 _1a9dea8ab_Short_CommonFlag_2(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd933bc_Short(_self_.safe_ptr<_1acd92d6c_Flag>());
}
inline jule::Str _1a9deaa65_What_CommonFlag_2(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd93158_What(_self_.safe_ptr<_1acd92d6c_Flag>());
}
inline void _1a9e2a237_Reset_CommonFlag_2(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	_1acd9328a_Reset(_self_.safe_ptr<_1acd92d6c_Flag>());
}
inline jule::Str _1a9dea779_Name_CommonFlag_3(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd960e5_Name(_self_.safe_ptr<_1acd96568_Flag>());
}
inline jule::I32 _1a9dea8ab_Short_CommonFlag_3(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd96ab8_Short(_self_.safe_ptr<_1acd96568_Flag>());
}
inline jule::Str _1a9deaa65_What_CommonFlag_3(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd96854_What(_self_.safe_ptr<_1acd96568_Flag>());
}
inline void _1a9e2a237_Reset_CommonFlag_3(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	_1acd96986_Reset(_self_.safe_ptr<_1acd96568_Flag>());
}
inline jule::Str _1a9dea779_Name_CommonFlag_4(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd9979c_Name(_self_.safe_ptr<_1acd99c20_Flag>());
}
inline jule::I32 _1a9dea8ab_Short_CommonFlag_4(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd9a270_Short(_self_.safe_ptr<_1acd99c20_Flag>());
}
inline jule::Str _1a9deaa65_What_CommonFlag_4(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	return _1acd9a00b_What(_self_.safe_ptr<_1acd99c20_Flag>());
}
inline void _1a9e2a237_Reset_CommonFlag_4(jule::Trait<_1a9e2a369_CommonFlag> _self_) {
	_1acd9a13d_Reset(_self_.safe_ptr<_1acd99c20_Flag>());
}


static _1a88e5286_comptimeRangeKindMptrData _1a88e5286_comptimeRangeKind_mptr_data[] = {
	{
		._1a88e4a16_ready=_1a88e4a16_ready_comptimeRangeKind_0,
		._1a88e4dce_step=_1a88e4dce_step_comptimeRangeKind_0,
		._1a88e5143_len=_1a88e5143_len_comptimeRangeKind_0,
	},
	{
		._1a88e4a16_ready=_1a88e4a16_ready_comptimeRangeKind_1,
		._1a88e4dce_step=_1a88e4dce_step_comptimeRangeKind_1,
		._1a88e5143_len=_1a88e5143_len_comptimeRangeKind_1,
	},
	{
		._1a88e4a16_ready=_1a88e4a16_ready_comptimeRangeKind_2,
		._1a88e4dce_step=_1a88e4dce_step_comptimeRangeKind_2,
		._1a88e5143_len=_1a88e5143_len_comptimeRangeKind_2,
	},
	{
		._1a88e4a16_ready=_1a88e4a16_ready_comptimeRangeKind_3,
		._1a88e4dce_step=_1a88e4dce_step_comptimeRangeKind_3,
		._1a88e5143_len=_1a88e5143_len_comptimeRangeKind_3,
	},
	{
		._1a88e4a16_ready=_1a88e4a16_ready_comptimeRangeKind_4,
		._1a88e4dce_step=_1a88e4dce_step_comptimeRangeKind_4,
		._1a88e5143_len=_1a88e5143_len_comptimeRangeKind_4,
	},
	{
		._1a88e4a16_ready=_1a88e4a16_ready_comptimeRangeKind_5,
		._1a88e4dce_step=_1a88e4dce_step_comptimeRangeKind_5,
		._1a88e5143_len=_1a88e5143_len_comptimeRangeKind_5,
	},
};
static _1a893a672_ImporterMptrData _1a893a672_Importer_mptr_data[] = {
	{
		._1a8939594_SetModPath=_1a8939594_SetModPath_Importer_0,
		._1a89397d6_GetModPath=_1a89397d6_GetModPath_Importer_0,
		._1a8939ae4_ModById=_1a8939ae4_ModById_Importer_0,
		._1a8939e02_GetImport=_1a8939e02_GetImport_Importer_0,
		._1a893a2a9_ImportPackage=_1a893a2a9_ImportPackage_Importer_0,
		._1a893a52e_Imported=_1a893a52e_Imported_Importer_0,
	},
};
static _1a86ae33b_KindMptrData _1a86ae33b_Kind_mptr_data[] = {
	{
		._1a86addda_Str=_1a86addda_Str_Kind_0,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_0,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_1,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_1,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_2,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_2,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_3,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_3,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_4,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_4,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_5,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_5,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_6,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_6,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_7,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_7,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_8,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_8,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_9,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_9,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_10,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_10,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_11,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_11,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_12,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_12,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_13,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_13,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_14,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_14,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_15,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_15,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_16,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_16,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_17,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_17,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_18,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_18,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_19,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_19,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_20,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_20,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_21,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_21,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_22,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_22,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_23,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_23,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_24,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_24,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_25,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_25,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_26,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_26,
	},
	{
		._1a86addda_Str=_1a86addda_Str_Kind_27,
		._1a86ae1e8_Equal=_1a86ae1e8_Equal_Kind_27,
	},
};
static _1a86ccac9_LookupMptrData _1a86ccac9_Lookup_mptr_data[] = {
	{
		._1a86cb08e_SelectPackage=_1a86cb08e_SelectPackage_Lookup_0,
		._1a86cb446_FindVar=_1a86cb446_FindVar_Lookup_0,
		._1a86cb7ed_FindTypeAlias=_1a86cb7ed_FindTypeAlias_Lookup_0,
		._1a86cbba5_FindStruct=_1a86cbba5_FindStruct_Lookup_0,
		._1a86cc05c_FindFn=_1a86cc05c_FindFn_Lookup_0,
		._1a86cc36a_FindTrait=_1a86cc36a_FindTrait_Lookup_0,
		._1a86cc678_FindEnum=_1a86cc678_FindEnum_Lookup_0,
		._1a86cc986_FindTypeEnum=_1a86cc986_FindTypeEnum_Lookup_0,
	},
	{
		._1a86cb08e_SelectPackage=_1a86cb08e_SelectPackage_Lookup_1,
		._1a86cb446_FindVar=_1a86cb446_FindVar_Lookup_1,
		._1a86cb7ed_FindTypeAlias=_1a86cb7ed_FindTypeAlias_Lookup_1,
		._1a86cbba5_FindStruct=_1a86cbba5_FindStruct_Lookup_1,
		._1a86cc05c_FindFn=_1a86cc05c_FindFn_Lookup_1,
		._1a86cc36a_FindTrait=_1a86cc36a_FindTrait_Lookup_1,
		._1a86cc678_FindEnum=_1a86cc678_FindEnum_Lookup_1,
		._1a86cc986_FindTypeEnum=_1a86cc986_FindTypeEnum_Lookup_1,
	},
	{
		._1a86cb08e_SelectPackage=_1a86cb08e_SelectPackage_Lookup_2,
		._1a86cb446_FindVar=_1a86cb446_FindVar_Lookup_2,
		._1a86cb7ed_FindTypeAlias=_1a86cb7ed_FindTypeAlias_Lookup_2,
		._1a86cbba5_FindStruct=_1a86cbba5_FindStruct_Lookup_2,
		._1a86cc05c_FindFn=_1a86cc05c_FindFn_Lookup_2,
		._1a86cc36a_FindTrait=_1a86cc36a_FindTrait_Lookup_2,
		._1a86cc678_FindEnum=_1a86cc678_FindEnum_Lookup_2,
		._1a86cc986_FindTypeEnum=_1a86cc986_FindTypeEnum_Lookup_2,
	},
	{
		._1a86cb08e_SelectPackage=_1a86cb08e_SelectPackage_Lookup_3,
		._1a86cb446_FindVar=_1a86cb446_FindVar_Lookup_3,
		._1a86cb7ed_FindTypeAlias=_1a86cb7ed_FindTypeAlias_Lookup_3,
		._1a86cbba5_FindStruct=_1a86cbba5_FindStruct_Lookup_3,
		._1a86cc05c_FindFn=_1a86cc05c_FindFn_Lookup_3,
		._1a86cc36a_FindTrait=_1a86cc36a_FindTrait_Lookup_3,
		._1a86cc678_FindEnum=_1a86cc678_FindEnum_Lookup_3,
		._1a86cc986_FindTypeEnum=_1a86cc986_FindTypeEnum_Lookup_3,
	},
	{
		._1a86cb08e_SelectPackage=_1a86cb08e_SelectPackage_Lookup_4,
		._1a86cb446_FindVar=_1a86cb446_FindVar_Lookup_4,
		._1a86cb7ed_FindTypeAlias=_1a86cb7ed_FindTypeAlias_Lookup_4,
		._1a86cbba5_FindStruct=_1a86cbba5_FindStruct_Lookup_4,
		._1a86cc05c_FindFn=_1a86cc05c_FindFn_Lookup_4,
		._1a86cc36a_FindTrait=_1a86cc36a_FindTrait_Lookup_4,
		._1a86cc678_FindEnum=_1a86cc678_FindEnum_Lookup_4,
		._1a86cc986_FindTypeEnum=_1a86cc986_FindTypeEnum_Lookup_4,
	},
};
static _1a9e2a369_CommonFlagMptrData _1a9e2a369_CommonFlag_mptr_data[] = {
	{
		._1a9dea779_Name=_1a9dea779_Name_CommonFlag_0,
		._1a9dea8ab_Short=_1a9dea8ab_Short_CommonFlag_0,
		._1a9deaa65_What=_1a9deaa65_What_CommonFlag_0,
		._1a9e2a237_Reset=_1a9e2a237_Reset_CommonFlag_0,
	},
	{
		._1a9dea779_Name=_1a9dea779_Name_CommonFlag_1,
		._1a9dea8ab_Short=_1a9dea8ab_Short_CommonFlag_1,
		._1a9deaa65_What=_1a9deaa65_What_CommonFlag_1,
		._1a9e2a237_Reset=_1a9e2a237_Reset_CommonFlag_1,
	},
	{
		._1a9dea779_Name=_1a9dea779_Name_CommonFlag_2,
		._1a9dea8ab_Short=_1a9dea8ab_Short_CommonFlag_2,
		._1a9deaa65_What=_1a9deaa65_What_CommonFlag_2,
		._1a9e2a237_Reset=_1a9e2a237_Reset_CommonFlag_2,
	},
	{
		._1a9dea779_Name=_1a9dea779_Name_CommonFlag_3,
		._1a9dea8ab_Short=_1a9dea8ab_Short_CommonFlag_3,
		._1a9deaa65_What=_1a9deaa65_What_CommonFlag_3,
		._1a9e2a237_Reset=_1a9e2a237_Reset_CommonFlag_3,
	},
	{
		._1a9dea779_Name=_1a9dea779_Name_CommonFlag_4,
		._1a9dea8ab_Short=_1a9dea8ab_Short_CommonFlag_4,
		._1a9deaa65_What=_1a9deaa65_What_CommonFlag_4,
		._1a9e2a237_Reset=_1a9e2a237_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88cee0d_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1a88cee0d_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8966901_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1a8966901_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88b9b51_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1a88b9b51_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88de47d_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1a88de47d_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88b2b6b_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1a88b2b6b_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88ad062_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1a88ad062_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88b1d8a_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1a88b1d8a_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a8722_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1a88a8722_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88b2561_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1a88b2561_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a9701_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1a88a9701_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88b03e9_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1a88b03e9_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88b12c9_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1a88b12c9_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a55406ba_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1a55406ba_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88976ab_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1a88976ab_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8921acb_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1a8921acb_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a891e38c_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1a891e38c_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c83bd_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1a88c83bd_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a865dbe2_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1a865dbe2_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c9468_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1a88c9468_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c6d7d_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1a88c6d7d_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c5761_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1a88c5761_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c5057_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1a88c5057_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c5442_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1a88c5442_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c6036_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1a88c6036_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c64dc_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1a88c64dc_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c7ed3_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1a88c7ed3_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c7b70_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1a88c7b70_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c9754_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1a88c9754_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c0e54_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1a88c0e54_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a891ede8_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1a891ede8_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a89201d4_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1a89201d4_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88aa9dd_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1a88aa9dd_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8920657_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1a8920657_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88ab37e_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1a88ab37e_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a892103c_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1a892103c_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8921438_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1a8921438_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8921db7_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1a8921db7_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a892226e_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1a892226e_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a89226e2_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1a89226e2_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c177e_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1a88c177e_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8922a99_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1a8922a99_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a89231a4_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1a89231a4_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a89242c6_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1a89242c6_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a89217e0_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1a89217e0_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8924628_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1a8924628_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a6c2b_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1a88a6c2b_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889b270_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1a889b270_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88ac88b_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1a88ac88b_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88aa218_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1a88aa218_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88abadd_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1a88abadd_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a4443_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1a88a4443_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a47ea_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1a88a47ea_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a5730_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1a88a5730_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88adbab_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1a88adbab_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a4ad6_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1a88a4ad6_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88ab736_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1a88ab736_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a9aa8_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1a88a9aa8_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889bb11_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1a889bb11_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88cc25c_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1a88cc25c_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88b6d3a_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1a88b6d3a_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a86ada55_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1a86ada55_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88e1c11_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1a88e1c11_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88e330b_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1a88e330b_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c2ede_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1a88c2ede_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c37c5_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1a88c37c5_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c4320_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1a88c4320_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c4881_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1a88c4881_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88be3c5_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1a88be3c5_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88992a1_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1a88992a1_ArrTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8898503_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1a8898503_SlcTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8898aca_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1a8898aca_PtrTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8898107_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1a8898107_SptrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88999aa_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1a88999aa_MapTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88987de_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1a88987de_TupleTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889d926_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1a889d926_VariadicExpr> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c130b_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1a88c130b_SliceExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a0b15_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1a88a0b15_FieldExprPair> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a2243_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1a88a2243_KeyValPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889cd65_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1a889cd65_IdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889bdec_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1a889bdec_TupleExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c4b7d_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1a88c4b7d_TupleExprModel> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c8c92_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1a88c8c92_RuneExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a86ae79d_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1a86ae79d_TypeKind> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c4034_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1a88c4034_ArrayExprModel> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889e608_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1a889e608_SubIdentExpr> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8897997_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1a8897997_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889d56e_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1a889d56e_UnaryExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88970e5_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1a88970e5_TypeDecl> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889e185_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1a889e185_NsSelectionExpr> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8897d1b_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1a8897d1b_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c29a0_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1a88c29a0_SlicingExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c05a2_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1a88c05a2_CastingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a28b4_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1a88a28b4_SliceExpr> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88bec44_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1a88bec44_StructLitExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c3b6b_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1a88c3b6b_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c2461_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1a88c2461_MapExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c1b36_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1a88c1b36_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889b55b_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1a889b55b_RangeExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889c2a4_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1a889c2a4_LitExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889c8e2_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1a889c8e2_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a3222_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1a88a3222_IndexingExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a382c_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1a88a382c_SlicingExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889dccd_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1a889dccd_CastExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a13da_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1a88a13da_StructLit> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a0186_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1a88a0186_FnCallExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88a185d_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1a88a185d_BraceLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a889ea7b_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1a889ea7b_BinopExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88be01d_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1a88be01d_BinopExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c0052_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1a88c0052_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c5b4b_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1a88c5b4b_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c6993_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1a88c6993_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c719c_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1a88c719c_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c74bb_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1a88c74bb_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c86ba_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1a88c86ba_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c89a6_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1a88c89a6_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a88c90a0_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1a88c90a0_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a878528b_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1a878528b_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8785775_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1a8785775_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8783d8e_StrAppendExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1a8783d8e_StrAppendExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8784895_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1a8784895_PushToSliceExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8784c4c_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1a8784c4c_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a87839c6_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1a87839c6_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a878417a_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1a878417a_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8784510_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1a8784510_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a8785a1c_InlineStdInternalNosafeStobs>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1a8785a1c_InlineStdInternalNosafeStobs> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _1a4e9430b_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1a9e3175a_OutDir = jule::Str("dist", 4);
jule::Str _1a9e319e1_OutName = jule::Str("ir.cpp", 6);
jule::Str _1a9e31caa_Out = jule::Str();
jule::Str _1ce998c09_Compiler = jule::Str();
jule::Str _1ce999e80_CompilerPath = jule::Str();
jule::Str _1ce99a1a0_CppStd = jule::Str("cpp17", 5);
jule::Bool _1ce99a403_Shadowing = false;
jule::Bool _1ce99a6bc_Transpilation = false;
jule::Bool _1ce99a986_Test = false;
jule::Bool _1ce99ac50_RC = true;
jule::Bool _1ce99b129_Safety = true;
jule::Bool _1ce99b3e3_Production = false;
jule::Uintptr _1d0a0d641_STDIN = _1d0a0de05_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
jule::Uintptr _1d0a0d90a_STDOUT = _1d0a0de05_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
jule::Uintptr _1d0a0db91_STDERR = _1d0a0de05_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
jule::Array<jule::U8,256> _1d0b17409_first = jule::Array<jule::U8,256>({});
jule::Array<_1d0b1798c_acceptRange,16> _1d0b17c9a_acceptRanges = jule::Array<_1d0b1798c_acceptRange,16>({_1d0b1798c_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1d0b1798c_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1d0b1798c_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1d0b1798c_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1d0b1798c_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_1a4d23443_RangeTable> _1a4cadb81__L = jule::new_ptr<_1a4d23443_RangeTable>(_1a4d23443_RangeTable{._field_R16=jule::Slice<_1a4d22a4c_Range16>::make({_1a4d22a4c_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1a4d22a4c_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1a4d22a4c_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1a4d22a4c_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1a4d22a4c_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1a4d22a4c_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1a4d22a4c_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1a4d22a4c_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1a4d22a4c_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1a4d22a4c_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1a4d22a4c_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1a4d22a4c_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1a4d22a4c_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1a4d22a4c_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1a4d22a4c_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1a4d22a4c_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1a4d22a4c_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1a4d22a4c_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1a4d22a4c_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1a4d22a4c_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1a4d22a4c_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1a4d22a4c_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1a4d22a4c_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1a4d22a4c_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1a4d22a4c_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1a4d22a4c_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1a4d22a4c_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1a4d22a4c_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1a4d22a4c_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1a4d22a4c_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1a4d22a4c_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1a4d22a4c_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1a4d22a4c_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1a4d22a4c_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1a4d22a4c_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1a4d22a4c_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1a4d22a4c_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1a4d22a4c_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1a4d22a4c_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1a4d22a4c_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1a4d22a4c_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1a4d22a4c_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1a4d22a4c_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1a4d22a4c_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1a4d22a4c_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1a4d22a4c_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1a4d22a4c_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1a4d22a4c_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1a4d22a4c_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1a4d22a4c_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1a4d22a4c_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1a4d22a4c_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1a4d22a4c_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1a4d22a4c_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1a4d22a4c_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1a4d22a4c_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1a4d22a4c_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1a4d22a4c_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1a4d22a4c_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1a4d22a4c_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1a4d22ec0_Range32>::make({_1a4d22ec0_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1a4d22ec0_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1a4d22ec0_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1a4d22ec0_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1a4d22ec0_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1a4d22ec0_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1a4d22ec0_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1a4d22ec0_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1a4d22ec0_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1a4d22ec0_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1a4d22ec0_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1a4d22ec0_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1a4d22ec0_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1a4d22ec0_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1a4d22ec0_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1a4d22ec0_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1a4d22ec0_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1a4d22ec0_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1a4d22ec0_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1a4d22ec0_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1a4d22ec0_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1a4d22ec0_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1a4d22ec0_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1a4d22ec0_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1a4d22ec0_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1a4d22ec0_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1a4d22ec0_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1a4d22ec0_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1a4d22ec0_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1a4d22ec0_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1a4d22ec0_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1a4d23443_RangeTable> _1a4caeb71__LU = jule::new_ptr<_1a4d23443_RangeTable>(_1a4d23443_RangeTable{._field_R16=jule::Slice<_1a4d22a4c_Range16>::make({_1a4d22a4c_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1a4d22a4c_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1a4d22a4c_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1a4d22a4c_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1a4d22a4c_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1a4d22a4c_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1a4d22a4c_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1a4d22a4c_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1a4d22a4c_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1a4d22a4c_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1a4d22a4c_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1a4d22a4c_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1a4d22a4c_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1a4d22a4c_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1a4d22a4c_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1a4d22a4c_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1a4d22a4c_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1a4d22ec0_Range32>::make({_1a4d22ec0_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1a4d22ec0_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1a4d22ec0_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1a4d22ec0_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1a4d22ec0_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1a4d22ec0_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1a4d22ec0_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _1a4d1bda9__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _1a4d68c5d_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1a4d68d5c_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1a4ddbcc0_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _1a4e90648_PathStdlib = jule::Str();
jule::Str _1a4e90868_PathExec = jule::Str();
jule::Str _1a4e90b21_PathWd = jule::Str();
jule::Str _1a4e90e2e_PathApi = jule::Str();
jule::Str _1a4e911e8_Os = jule::Str("windows", 7);
jule::Str _1a4e914b2_Arch = jule::Str("arm64", 5);
jule::Array<jule::I32,5> _1a51c2c43_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1a51c2e63_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1a51c3260_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1a526282c_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1a5262b29_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1a527063c_kindPair,31> _1a5270a6b_keywords = jule::Array<_1a527063c_kindPair,31>({_1a527063c_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(4LLU)},_1a527063c_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(4LLU)},_1a527063c_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1a527063c_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1a527063c_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1a527063c_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1a527063c_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1a527063c_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1a527063c_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1a527063c_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1a527063c_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1a527063c_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1a527063c_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1a527063c_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1a527063c_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1a527063c_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1a527063c_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1a527063c_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1a527063c_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1a527063c_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1a527063c_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1a527063c_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1a527063c_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1a527063c_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1a527063c_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1a527063c_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1a527063c_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1a527063c_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1a527063c_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1a527063c_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1a527063c_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1a527063c_kindPair,46> _1a5270dac_basicOps = jule::Array<_1a527063c_kindPair,46>({_1a527063c_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1a527063c_kindPair{._field_kind=jule::Str(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1a527063c_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1a527063c_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1a527063c_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1a527063c_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1a527063c_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1a527063c_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1a527063c_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1a527063c_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1a527063c_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1a527063c_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1a527063c_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1a527063c_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1a527063c_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1a527063c_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1a527063c_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1a527063c_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1a527063c_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1a527063c_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1a527063c_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1a527063c_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1a527063c_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1a527063c_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1a527063c_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1a527063c_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1a527063c_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1a527063c_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1a527063c_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1a527063c_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1a527063c_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1a527063c_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1a527063c_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1a527063c_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1a527063c_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1a527063c_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1a527063c_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1a527063c_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1a527063c_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1a527063c_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1a527063c_kindPair{._field_kind=jule::Str("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1a527063c_kindPair{._field_kind=jule::Str("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1a527063c_kindPair{._field_kind=jule::Str("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1a527063c_kindPair{._field_kind=jule::Str("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1a527063c_kindPair{._field_kind=jule::Str("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1a527063c_kindPair{._field_kind=jule::Str(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Array<jule::U8,32> _1a5c6ac19__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1a5c6b2d0__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1a5518e68_floatInfo _1a5519331_f32info = _1a5518e68_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1a5518e68_floatInfo _1a551963e_f64info = _1a5518e68_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1a5521a0e_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1a55237be_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1a552432a_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1a552466b_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1a55275e7_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1a552b046_leftCheat> _1a552b475_leftCheats = jule::Slice<_1a552b046_leftCheat>::make({_1a552b046_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1a552b046_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1a552b046_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1a552b046_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1a552b046_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1a552b046_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1a552b046_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1a552b046_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1a552b046_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1a552b046_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1a552b046_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1a552b046_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1a552b046_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1a552b046_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1a552b046_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1a552b046_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1a552b046_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1a552b046_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1a552b046_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1a552b046_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1a552b046_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1a552b046_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1a552b046_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1a552b046_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1a552b046_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1a552b046_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1a552b046_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1a552b046_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1a552b046_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1a552b046_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1a552b046_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1a552b046_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1a552b046_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1a552b046_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1a552b046_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1a552b046_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1a552b046_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1a552b046_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1a552b046_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1a552b046_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1a552b046_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1a552b046_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1a552b046_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1a552b046_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1a552b046_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1a552b046_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1a552b046_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1a552b046_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1a552b046_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1a552b046_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1a552b046_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1a552b046_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1a552b046_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1a552b046_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1a552b046_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1a552b046_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1a552b046_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1a552b046_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1a552b046_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1a552b046_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1a552b046_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1a5531dd7_BitSize = 0LL;
jule::Str _1a553214b_SysInt = jule::Str();
jule::Str _1a5532415_SysUint = jule::Str();
jule::Slice<jule::Str> _1a8916bc0_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Ptr<_1a86ae79d_TypeKind> _1a877360e_primVoid = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("void", 4)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a877391c_primAny = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("any", 3)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a8773bd6_primStr = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("str", 3)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a8773ee4_primBool = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("bool", 4)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a87742ad_primUintptr = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("uintptr", 7)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a8774577_primUint = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("uint", 4)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a8774841_primInt = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("int", 3)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a8774c1a_primI8 = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("i8", 2)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a8774ed4_primI16 = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("i16", 3)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a877529d_primI32 = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("i32", 3)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a8775567_primI64 = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("i64", 3)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a8775831_primU8 = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("u8", 2)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a8775aea_primU16 = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("u16", 3)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a8775db4_primU32 = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("u32", 3)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a877617d_primU64 = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("u64", 3)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a8776601_primF32 = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("f32", 3)), 20)});
jule::Ptr<_1a86ae79d_TypeKind> _1a87768ba_primF64 = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(jule::Str("f64", 3)), 20)});
jule::Str _1a93d94b6_stdPackageInternalNosafe = jule::Str("std::internal::nosafe", 21);
jule::Map<jule::Uintptr,_1a93d98b2_stdCacheData> _1a93d9ce1_stdCache = nullptr;
jule::Bool _1a93db595_Copy = false;
jule::Bool _1a93db8a3_Deadcode = false;
jule::Bool _1a93dbb6c_Append = false;
jule::Bool _1a93dbe7a_Math = false;
jule::Bool _1a93dc244_Access = false;
jule::Bool _1a93dc50d_Inline = false;
jule::Bool _1a93dc7c7_Ptr = false;
jule::Bool _1a93dcba1_Cond = false;
jule::Bool _1a93dce6a_Str = false;
jule::Bool _1a93dd234_StdInternalNosafe = false;
jule::Bool _1a948b733_exprEnabled = false;
jule::Bool _1a948ba0d_scopeEnabled = false;
jule::Bool _1a948bcc7_stdEnabled = false;
jule::Array<jule::U64,12> _1a9d9d793_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1a960500b_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_1a4d23443_RangeTable> _1a4cbc376_Upper = _1a4caeb71__LU;
jule::Ptr<_1a4d23443_RangeTable> _1a4cb5d20_Letter = _1a4cadb81__L;





std::ostream &operator<<(std::ostream &_Stream, _1d0b1798c_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d22a4c_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d22ec0_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d23443_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a4d63dac_index(_1a4d6397d_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _1a4d64132_append(_1a4d6397d_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1a4d64396_string(_1a4d6397d_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d6397d_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0a261b4_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>>> static__1a4d66585_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _1613_utf16Path = _1d09d60ec_Utf16FromStr(_1a4d650de_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str("*", 1)})));;
	WIN32_FIND_DATAW _1717_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _1813_handle = _1d0a127ee_FindFirstFile((&(_1613_utf16Path[0LL])), (&(_1717_data)));;
	if ((_1813_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>>>(jule::Any(), __jule_func_result);;
	};
	for (;;) {
		{
			jule::Ptr<_1d0a261b4_DirEntry> _2321_entry = jule::new_ptr<_1d0a261b4_DirEntry>(_1d0a261b4_DirEntry{._field_Name=_1d09d664c_U16PtrToStr(((jule::U16*)(_1717_data.cFileName))), });;
			_2321_entry.get()._field_Stat=({
				auto except = static__1a4d673aa_Of(_1a4d650de_Join(jule::Slice<jule::Str>::make({_1520_path,_2321_entry.get()._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>>>(except.error);
				} jule::Ptr<_1d0a35536_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_2321_entry); };
			if ((_1d0a12b40_FindNextFile(_1813_handle, (&(_1717_data))) == 0LL)) {
				goto _iter_end_1aaba3ab4;
			};
		}
	_iter_next_1aaba3ab4:;
	}
	_iter_end_1aaba3ab4:;;
	_1d0a12dd7_FindClose(_1813_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__1a4d66794_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _4413_utf16Path = _1d09d60ec_Utf16FromStr(_3922_path);;
	if ((!(_1d0a106ed_CreateDirectory((&(_4413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_1d0a25a98_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1a4d669a3_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _5413_utf16Path = _1d09d60ec_Utf16FromStr(_5322_path);;
	if ((!(_1d0a10995_RemoveDirectory((&(_5413_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_1d0a25a98_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1d0a26428_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d0a32de6_File> static__1d0a33314_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_1d0a32de6_File>(_1d0a32de6_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_1d0a32de6_File>> static__1d0a335ab_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_1d0a32de6_File>>(jule::Any(), ({
		auto except = static__1d0b1b430_Open(_5622_path, static_cast<jule::I64>(770LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_1d0a32de6_File>>(except.error);
		} jule::Ptr<_1d0a32de6_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1d0a33853_Read(jule::Str _6820_path) {
	jule::Ptr<_1d0a35536_Status> _6913_s = ({
		auto except = static__1a4d673aa_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1d0a35536_Status>(nullptr);});
	});;
	if ((!(_1d0a35b63_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_1d0a35dc7_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_1d0a32de6_File> _7917_f = ({
		auto except = static__1d0b1b430_Open(_6820_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1d0a32de6_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _1d0a349ec_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_1d0a35dc7_Size(_6913_s.ptr())), static_cast<jule::I64>(_1d0a35dc7_Size(_6913_s.ptr())), 0);;
	jule::I64 _8313_n = ({
		auto except = _1d0b1bd9d_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__1d0a33ba5_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I64 _9246_perm) {
	jule::Ptr<_1d0a32de6_File> _9317_f = ({
		auto except = static__1d0b1b430_Open(_9221_path, static_cast<jule::I64>(769LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1d0a32de6_File>(nullptr);});
	});;
	({
		auto except = _1d0b1ba90_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1d0a349ec_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d0a34821_WriteStr(_1d0a32de6_File* _self_, jule::Str* _12028_data) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result = static_cast<jule::I64>(({
		auto except = _1d0b1ba90_Write(_self_, _1d0a3180c_Stobs(_12028_data));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional _1d0a349ec_Close(_1d0a32de6_File* _self_) {
	if ((_1d0a15170_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_1d0a25a98_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_1d0a32de6_File>> static__1d0b1b430_Open(jule::Str _2120_path, jule::I64 _2131_flag, jule::I64 _2144_mode) {
	jule::Slice<jule::U16> _2213_utf16Path = _1d09d60ec_Utf16FromStr(_2120_path);;
	jule::I64 _2313_handle = _1d0a0e8c8_Wopen((&(_2213_utf16Path[0LL])), static_cast<jule::I64>(_2131_flag), _2144_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d0a32de6_File>>(jule::Any(_1d0a25a98_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_1d0a32de6_File>>(jule::Any(), static__1d0a33314_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));;
}



inline jule::VoidExceptional static__1d0b1b63e_Remove(jule::Str _3422_path) {
	jule::Slice<jule::U16> _3513_utf16Path = _1d09d60ec_Utf16FromStr(_3422_path);;
	if ((!(_1d0a10456_DeleteFile((&(_3513_utf16Path[0LL])))))) {
		return jule::VoidExceptional(jule::Any(_1d0a25a98_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1d0b1ba90_Write(_1d0a32de6_File* _self_, jule::Slice<jule::U8> _4924_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4924_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	if (_1d0b1c200_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16Buff = _1d09d60ec_Utf16FromStr(static_cast<jule::Str>(_4924_buff));;
		jule::Bool _5617_ok = _1d0a11d2b_WriteConsole((*(_self_))._field_handle, (&(_5517_utf16Buff[0LL])), static_cast<jule::I64>(_5517_utf16Buff.len()), &(__jule_func_result), nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I64>(jule::Any(_1d0a25a98_getLastFsError(), &__jule_any_type0));
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_1d0a1555a_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4924_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4924_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1d0a25a98_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _1d0b1bd9d_Read(_1d0a32de6_File* _self_, jule::Slice<jule::U8> _7927_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_7927_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	if (_1d0b1c200_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8521_codepage = jule::Slice<jule::U16>::alloc(_7927_buff.len(), _7927_buff.len(), 0);;
		jule::Bool _8617_ok = _1d0a122b0_ReadConsole((*(_self_))._field_handle, (&(_8521_codepage[0LL])), static_cast<jule::I64>(_7927_buff.len()), &(__jule_func_result));;
		if ((!(_8617_ok))) {
			return jule::Exceptional<jule::I64>(jule::Any(_1d0a25a98_getLastFsError(), &__jule_any_type0));
		};
		jule::Slice<jule::I32> _9117_runes = _1d09d5aad_Decode(_8521_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9117_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aabbaeb6:;
			if (it != expr_end) {
				jule::I32 *_9320_r = it;
				{
					jule::I64 _9421_size = _1d0b19131_RuneLen((*(_9320_r)));;
					if (((__jule_func_result + _9421_size) > _7927_buff.len())) {
						goto _iter_end_1aabbaeb6;
					};
					_1d0b1954e_EncodeRune(_7927_buff.slice(__jule_func_result), (*(_9320_r)));
					__jule_func_result+=_9421_size;
				}
				_iter_next_1aabbaeb6:;
				++it;
				goto _iter_begin_1aabbaeb6;
			}
			_iter_end_1aabbaeb6:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_1d0a14ceb_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_7927_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_7927_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1d0a25a98_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0a32de6_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0a358ee_IsDir(_1d0a35536_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _1d0a35b63_IsReg(_1d0a35536_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _1d0a35dc7_Size(_1d0a35536_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_1d0a35536_Status>> static__1a4d673aa_Of(jule::Str _1218_path) {
	if (_1218_path.empty()) {
		return jule::Exceptional<jule::Ptr<_1d0a35536_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	jule::Slice<jule::U16> _1613_utf16Path = _1d09d60ec_Utf16FromStr(_1218_path);;
	struct _stat _1717_handle = (struct _stat){};;
	jule::I64 _1813_code = _1d0a0e4dd_Wstat((&(_1613_utf16Path[0LL])), (&(_1717_handle)));;
	if ((_1813_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d0a35536_Status>>(jule::Any(_1d0a25a98_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_1d0a35536_Status> _2217_stat = jule::new_ptr<_1d0a35536_Status>();;
	_2217_stat.get()._field_size=_1717_handle.st_size;
	if (((_1717_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1717_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2217_stat.get()._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_1d0a35536_Status>>(jule::Any(), _2217_stat);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0a35536_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4e8c447_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4deb40b_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1a5268833_Prec(_1a52684c0_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1aac83776:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1aac83d3c:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1aac83da3:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1aac83e2a:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1aac83ea2:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1aac83479:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aac832e2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a52684c0_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1a526dc23_Fill(_1a526d85a_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1a526de87_Dir(_1a526d85a_File* _self_) {
	return _1a4d65c49_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1a526e1eb_Name(_1a526d85a_File* _self_) {
	return _1a4d658c5_Base((*(_self_))._field_Path);;
}



inline jule::Str _1a526e76d_GetRow(_1a526d85a_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3917_n = 0LL;;
	jule::I64 _4017_lineStart = 0LL;;
	jule::I64 _4117_i = 0LL;;
	for (; (_4117_i < (*(_self_))._field_Data.len()); (_4117_i)++) {
		{
			if (((*(_self_))._field_Data[_4117_i] != '\n')) {
				goto _iter_next_1aac88e74;
			};
			(_3917_n)++;
			if ((_3917_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4017_lineStart, _4117_i));;
			};
			_4017_lineStart=static_cast<jule::I64>((_4117_i + 1LL));
		}
	_iter_next_1aac88e74:;
	}
	_iter_end_1aac88e74:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _1a526d85a_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a527063c_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1a52766ed_pushErr(_1a527619d_lex* _self_, jule::Str _44926_fmt, jule::Slice<jule::Any> _44939_args) {
	{ jule::Slice<_1a4deb40b_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a52713a7_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44926_fmt, _44939_args)); };
}



inline void _1a5276be8_lex(_1a527619d_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1a5278bea_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1a52684c0_Token> _46421_token = _1a527a070_token(_self_);;
			if ((_46421_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1a52684c0_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46421_token); };
			};
		}
	_iter_next_1aacb7810:;
	}
	_iter_end_1aacb7810:;;
}



inline jule::Str _1a5277006_id(_1a527619d_lex* _self_, jule::Slice<jule::U8>* _47322_ln) {
	if (((*(_47322_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _47714_r = 0;;
	jule::I64 _47721_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1852b_DecodeRune((*(_47322_ln)));
		_47714_r = __jule_assign_result.__jule_result_arg0;
		_47721_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_47714_r != '_') && (!(_1a526b99b_IsLetter(_47714_r))))) {
		return jule::Str();;
	};
	while ((_47721_i < (*(_47322_ln)).len())) {
		{
			jule::I32 _48318_pr = 0;;
			jule::I64 _48322_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1852b_DecodeRune((*(_47322_ln)).slice(_47721_i));
				_48318_pr = __jule_assign_result.__jule_result_arg0;
				_48322_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48318_pr != '_') && (!(_1a526beda_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48318_pr)))))) && (!(_1a526b99b_IsLetter(_48318_pr))))) {
				(*(_self_))._field_pos+=_47721_i;
				return static_cast<jule::Str>((*(_47322_ln)).slice(0LL, _47721_i));;
			};
			_47721_i+=_48322_n;
		}
	_iter_next_1aacba978:;
	}
	_iter_end_1aacba978:;;
	(*(_self_))._field_pos+=(*(_47322_ln)).len();
	return static_cast<jule::Str>((*(_47322_ln)));;
}



inline jule::Slice<jule::U8> _1a527726a_resume(_1a527619d_lex* _self_) {
	jule::I64 _49817_i = (*(_self_))._field_pos;;
	for (; (_49817_i < (*(_self_))._field_file.get()._field_Data.len()); (_49817_i)++) {
		{
			jule::I32 _50017_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_49817_i]);;
			if (_1a526b54a_IsSpace(_50017_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _50017_r };
					
					if (_match_expr == '\n') {
						_case_begin_1aacbeb7a:;
						{
							_1a5278bea_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1aacbe65d:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1aacbca57:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1aacbe53c:;
				};
				goto _iter_next_1aacbce64;
			};
			jule::I64 _51521_j = _49817_i;;
			for (; (_51521_j < (*(_self_))._field_file.get()._field_Data.len()); (_51521_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_51521_j] == '\n')) {
						goto _iter_end_1aacbda03;
					};
				}
			_iter_next_1aacbda03:;
			}
			_iter_end_1aacbda03:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_49817_i, _51521_j);;
		}
	_iter_next_1aacbce64:;
	}
	_iter_end_1aacbce64:;;
	return nullptr;;
}



inline void _1a52774e0_lexLineComment(_1a527619d_lex* _self_, jule::Ptr<_1a52684c0_Token>* _52638_token) {
	jule::I64 _52713_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53017_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_53017_r == '\n') || (_53017_r == '\r'))) {
				goto _iter_end_1aacc1e79;
			};
		}
	_iter_next_1aacc1e79:;
	}
	_iter_end_1aacc1e79:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*(_52638_token)).get()._field_Id=static_cast<jule::U64>(15LLU);
		(*(_52638_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_52713_start, (*(_self_))._field_pos));
	};
}



inline void _1a5277765_lexRangeComment(_1a527619d_lex* _self_, jule::Ptr<_1a52684c0_Token>* _54139_token) {
	jule::I64 _54213_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54517_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_54517_r == '\r')) {
				goto _iter_next_1aacc4e16;
			};
			if ((_54517_r == '\n')) {
				_1a5278bea_newLine(_self_);
				goto _iter_next_1aacc4e16;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_54517_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*(_54139_token)).get()._field_Id=static_cast<jule::U64>(15LLU);
					(*(_54139_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_54213_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1aacc4e16:;
	}
	_iter_end_1aacc4e16:;;
	_1a52766ed_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1a5277a73_num(_1a527619d_lex* _self_, jule::Slice<jule::U8>* _56923_txt) {
	jule::Str __jule_func_result;
	if (((*(_56923_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1a5274bc4_hexNum(_56923_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1a527492c_octalNum(_56923_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1a5273376_binaryNum(_56923_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1a52730ce_commonNum(_56923_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1a5277d81_escapeSeq(_1a527619d_lex* _self_, jule::Slice<jule::U8>* _59129_txt) {
	jule::Str _59217_seq = jule::Str();;
	if (((*(_59129_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_59129_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1aaccdda9:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_59129_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aaccdcdd:;
			{
				_59217_seq=_1a52752ac_bigUnicodePointEscape(_59129_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1aaccda24:;
			{
				_59217_seq=_1a5275576_littleUnicodePointEscape(_59129_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aaccda8a:;
			{
				_59217_seq=_1a5275730_hexByteEscape(_59129_txt);
			}
		}
		else {
			_case_begin_1aaccd3d6:;
			{
				_59217_seq=_1a52759b6_byteEscape(_59129_txt);
			}
		}
		_match_end_1aaccd903:;
	};
	_julec_label_end:;
	if (_59217_seq.empty()) {
		((*(_self_))._field_pos)++;
		_1a52766ed_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59217_seq.len();
	return _59217_seq;;
}



inline jule::Str _1a5278238_getRune(_1a527619d_lex* _self_, jule::Slice<jule::U8>* _62127_txt, jule::Bool _62140_raw) {
	if (((!(_62140_raw)) && ((*(_62127_txt))[0LL] == '\\'))) {
		return _1a5277d81_escapeSeq(_self_, _62127_txt);;
	};
	jule::I32 _62514_r = 0;;
	jule::I64 _62517_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1852b_DecodeRune((*(_62127_txt)));
		_62514_r = __jule_assign_result.__jule_result_arg0;
		_62517_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62517_n;
	return jule::Str::from_rune(_62514_r);;
}



inline jule::Str _1a5278546_lexRune(_1a527619d_lex* _self_, jule::Slice<jule::U8>* _63027_txt) {
	jule::Str _63117_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I64 _63317_n = 0LL;;
	jule::I64 _63417_i = 1LL;;
	for (; (_63417_i < (*(_63027_txt)).len()); (_63417_i)++) {
		{
			if (((*(_63027_txt))[_63417_i] == '\r')) {
				goto _iter_next_1aacd4024;
			};
			if (((*(_63027_txt))[_63417_i] == '\n')) {
				_1a52766ed_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1a5278bea_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64617_part = (*(_63027_txt)).slice(_63417_i);;
			jule::Str _64717_r = _1a5278238_getRune(_self_, &(_64617_part), false);;
			_63117_run+=_64717_r;
			(*(_self_))._field_column+=_1d0b1a220_RuneCountStr(_64717_r);
			if (_64717_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1aacd4024;
			};
			if ((_64717_r.len() > 1LL)) {
				_63417_i+=(_64717_r.len() - 1LL);
			};
			(_63317_n)++;
		}
	_iter_next_1aacd4024:;
	}
	_iter_end_1aacd4024:;;
	if ((_63317_n == 0LL)) {
		_1a52766ed_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63317_n > 1LL)) {
		_1a52766ed_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _63117_run;;
}



inline jule::Str _1a52787aa_lexStr(_1a527619d_lex* _self_) {
	jule::Str _67017_s = jule::Str();;
	jule::U8 _67113_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _67313_raw = (_67113_mark == '`');;
	(_67017_s).append(_67113_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _67817_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_67817_ch == '\r')) {
				goto _iter_next_1aacd9d60;
			};
			if ((_67817_ch == '\n')) {
				_1a5278bea_newLine(_self_);
				if ((!(_67313_raw))) {
					_1a52766ed_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69021_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69117_r = _1a5278238_getRune(_self_, &(_69021_part), _67313_raw);;
			_67017_s+=_69117_r;
			(*(_self_))._field_column+=_1d0b1a220_RuneCountStr(_69117_r);
			if ((_67817_ch == _67113_mark)) {
				goto _iter_end_1aacd9d60;
			};
		}
	_iter_next_1aacd9d60:;
	}
	_iter_end_1aacd9d60:;;
	return _67017_s;;
}



inline void _1a5278bea_newLine(_1a527619d_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1a52791e5_isOp(_1a527619d_lex* _self_, jule::Slice<jule::U8>* _71124_txt, jule::Str _71137_kind, jule::U64 _71148_id, jule::Ptr<_1a52684c0_Token>* _71166_t) {
	if ((!(_1a527173c_bytesHasPrefix(_71124_txt, _71137_kind)))) {
		return false;;
	};
	(*(_71166_t)).get()._field_Kind=_71137_kind;
	(*(_71166_t)).get()._field_Id=_71148_id;
	(*(_self_))._field_pos+=_71137_kind.len();
	return true;;
}



inline jule::Bool _1a527959c_lexBasicOps(_1a527619d_lex* _self_, jule::Slice<jule::U8> _72130_txt, jule::Ptr<_1a52684c0_Token>* _72148_tok) {
	{
		auto expr = &(_1a5270dac_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aace0be0:;
		if (it != expr_end) {
			_1a527063c_kindPair *_72216_pair = it;
			{
				if (_1a52791e5_isOp(_self_, &(_72130_txt), (*(_72216_pair))._field_kind, (*(_72216_pair))._field_id, _72148_tok)) {
					return true;;
				};
			}
			_iter_next_1aace0be0:;
			++it;
			goto _iter_begin_1aace0be0;
		}
		_iter_end_1aace0be0:;
	};
	return false;;
}



inline jule::Bool _1a5279954_lexId(_1a527619d_lex* _self_, jule::Slice<jule::U8>* _73025_txt, jule::Ptr<_1a52684c0_Token>* _73043_t) {
	jule::Str _73113_lex = _1a5277006_id(_self_, _73025_txt);;
	if (_73113_lex.empty()) {
		return false;;
	};
	(*(_73043_t)).get()._field_Kind=_73113_lex;
	(*(_73043_t)).get()._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1a5279d0b_lexNum(_1a527619d_lex* _self_, jule::Slice<jule::U8>* _74026_txt, jule::Ptr<_1a52684c0_Token>* _74044_t) {
	jule::Str _74113_lex = _1a5277a73_num(_self_, _74026_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	(*(_74044_t)).get()._field_Kind=_74113_lex;
	(*(_74044_t)).get()._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1a52684c0_Token> _1a527a070_token(_1a527619d_lex* _self_) {
	jule::Ptr<_1a52684c0_Token> _75217_t = jule::new_ptr<_1a52684c0_Token>(_1a52684c0_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _75713_txt = _1a527726a_resume(_self_);;
	if ((_75713_txt == nullptr)) {
		return _75217_t;;
	};
	_75217_t.get()._field_Column=(*(_self_))._field_column;
	_75217_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_1a5279d0b_lexNum(_self_, &(_75713_txt), &(_75217_t))) {
			_case_begin_1aace6b08:;
			{
				goto _match_end_1aace6036;
			}
		}
		else if ((_75713_txt[0LL] == '\'')) {
			_case_begin_1aace7125:;
			{
				_75217_t.get()._field_Kind=_1a5278546_lexRune(_self_, &(_75713_txt));
				_75217_t.get()._field_Id=static_cast<jule::U64>(4LLU);
				return _75217_t;;
			}
		}
		else if (((_75713_txt[0LL] == '\"') || (_75713_txt[0LL] == '`'))) {
			_case_begin_1aace7554:;
			{
				_75217_t.get()._field_Kind=_1a52787aa_lexStr(_self_);
				_75217_t.get()._field_Id=static_cast<jule::U64>(4LLU);
				return _75217_t;;
			}
		}
		else if (_1a527173c_bytesHasPrefix(&(_75713_txt), jule::Str("//", 2))) {
			_case_begin_1aace75ba:;
			{
				_1a52774e0_lexLineComment(_self_, &(_75217_t));
				return _75217_t;;
			}
		}
		else if (_1a527173c_bytesHasPrefix(&(_75713_txt), jule::Str("/*", 2))) {
			_case_begin_1aace7631:;
			{
				_1a5277765_lexRangeComment(_self_, &(_75217_t));
				return _75217_t;;
			}
		}
		else if (_1a527959c_lexBasicOps(_self_, _75713_txt, &(_75217_t))) {
			_case_begin_1aace609c:;
			{
				goto _match_end_1aace6036;
			}
		}
		else if (_1a5279954_lexId(_self_, &(_75713_txt), &(_75217_t))) {
			_case_begin_1aace6113:;
			{
				{
					auto expr = &(_1a5270a6b_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aacea9a8:;
					if (it != expr_end) {
						_1a527063c_kindPair *_78920_pair = it;
						{
							if (((*(_78920_pair))._field_kind == _75217_t.get()._field_Kind)) {
								_75217_t.get()._field_Id=(*(_78920_pair))._field_id;
								goto _iter_end_1aacea9a8;
							};
						}
						_iter_next_1aacea9a8:;
						++it;
						goto _iter_begin_1aacea9a8;
					}
					_iter_end_1aacea9a8:;
				};
			}
		}
		else {
			_case_begin_1aace571c:;
			{
				jule::I32 _79618_r = 0;;
				jule::I64 _79621_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1852b_DecodeRune(_75713_txt);
					_79618_r = __jule_assign_result.__jule_result_arg0;
					_79621_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1a52766ed_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79618_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79621_sz;
				return _75217_t;;
			}
		}
		_match_end_1aace6036:;
	};
	(*(_self_))._field_column+=_1d0b1a220_RuneCountStr(_75217_t.get()._field_Kind);
	return _75217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a527619d_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5518e68_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5519a90_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a552b046_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a5523add_set(_1a552ba19_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23917_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23917_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23917_i] == '+')) {
			_case_begin_1ab2b049a:;
			{
				(_23917_i)++;
			}
		}
		else if ((_23822_s[_23917_i] == '-')) {
			_case_begin_1ab2b06a9:;
			{
				(*(_self_))._field_neg=true;
				(_23917_i)++;
			}
		}
		_match_end_1ab2b05bb:;
	};
	jule::Bool _25617_sawdot = false;;
	jule::Bool _25717_sawdigits = false;;
	for (; (_23917_i < _23822_s.len()); (_23917_i)++) {
		{
			{
				
				if ((_23822_s[_23917_i] == '_')) {
					_case_begin_1ab2b214a:;
					{
						goto _iter_next_1ab2b19b8;
					}
				}
				else if ((_23822_s[_23917_i] == '.')) {
					_case_begin_1ab2b21c2:;
					{
						if (_25617_sawdot) {
							return __jule_func_result;;
						};
						_25617_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1ab2b19b8;
					}
				}
				else if ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9'))) {
					_case_begin_1ab2b2249:;
					{
						_25717_sawdigits=true;
						if (((_23822_s[_23917_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1ab2b19b8;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23917_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23917_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1ab2b19b8;
					}
				}
				_match_end_1ab2b2029:;
			};
			goto _iter_end_1ab2b19b8;
		}
	_iter_next_1ab2b19b8:;
	}
	_iter_end_1ab2b19b8:;;
	if ((!(_25717_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25617_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23917_i < _23822_s.len()) && (_1a551e303_lower(_23822_s[_23917_i]) == 'e'))) {
		(_23917_i)++;
		if ((_23917_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30221_esign = 1LL;;
		if ((_23822_s[_23917_i] == '+')) {
			(_23917_i)++;
		} else if ((_23822_s[_23917_i] == '-')) {
			(_23917_i)++;
			_30221_esign=-1LL;
		};
		if ((((_23917_i >= _23822_s.len()) || (_23822_s[_23917_i] < '0')) || (_23822_s[_23917_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31221_e = 0LL;;
		for (; ((_23917_i < _23822_s.len()) && ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9')) || (_23822_s[_23917_i] == '_'))); (_23917_i)++) {
			{
				if ((_23822_s[_23917_i] == '_')) {
					goto _iter_next_1ab2b7d76;
				};
				if ((_31221_e < 10000LL)) {
					_31221_e=static_cast<jule::I64>((((_31221_e * 10LL) + static_cast<jule::I64>(_23822_s[_23917_i])) - '0'));
				};
			}
		_iter_next_1ab2b7d76:;
		}
		_iter_end_1ab2b7d76:;;
		(*(_self_))._field_dp+=(_31221_e * _30221_esign);
	};
	if ((_23917_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1a5523deb_floatBits(_1a552ba19_decimal* _self_, _1a5518e68_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33317_exp = 0LL;;
	jule::U64 _33417_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_out;
	};
	_33317_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35921_n = 0LL;;
			if (((*(_self_))._field_dp >= _1a55237be_powtab.len())) {
				_35921_n=27LL;
			} else {
				_35921_n=_1a55237be_powtab[(*(_self_))._field_dp];
			};
			_1a552c124_shift(_self_, static_cast<jule::I64>((-(_35921_n))));
			_33317_exp+=_35921_n;
		}
	_iter_next_1ab2bd8c6:;
	}
	_iter_end_1ab2bd8c6:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36921_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1a55237be_powtab.len())) {
				_36921_n=27LL;
			} else {
				_36921_n=_1a55237be_powtab[(-((*(_self_))._field_dp))];
			};
			_1a552c124_shift(_self_, _36921_n);
			_33317_exp-=_36921_n;
		}
	_iter_next_1ab2be696:;
	}
	_iter_end_1ab2be696:;;
	(_33317_exp)--;
	if ((_33317_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38617_n = (((*(_33229_flt))._field_bias + 1LL) - _33317_exp);;
		_1a552c124_shift(_self_, static_cast<jule::I64>((-(_38617_n))));
		_33317_exp+=_38617_n;
	};
	if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1a552c124_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33417_mant=static_cast<jule::U64>(_1a552cb08_roundedInteger(_self_));
	if ((_33417_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33417_mant>>=1LLU;
		(_33317_exp)++;
		if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_33417_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33317_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_33417_mant=0LLU;
	_33317_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _42217_bits = (_33417_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42217_bits|=(static_cast<jule::U64>(((_33317_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42217_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42217_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1a552bd9e_assign(_1a552ba19_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>();;
	jule::I64 _15517_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15717_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15717_v1);
			_15217_buf[_15517_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15517_n)++;
			_15129_v=_15717_v1;
		}
	_iter_next_1ab2caedd:;
	}
	_iter_end_1ab2caedd:;;
	(*(_self_))._field_nd=0LL;
	(_15517_n)--;
	for (; (_15517_n >= 0LL); (_15517_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15517_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1ab2cb95b:;
	}
	_iter_end_1ab2cb95b:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1a552d202_trim(_self_);
}



inline void _1a552c124_shift(_1a552ba19_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1ab2cd84d:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1ab2cd8c5:;
			{
				while ((_17628_k > 60LL)) {
					{
						_1a552db92_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1ab2ce4db:;
				}
				_iter_end_1ab2ce4db:;;
				_1a552db92_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1ab2cd94c:;
			{
				while ((_17628_k < -60LL)) {
					{
						_1a552d4aa_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1ab2ce431:;
				}
				_iter_end_1ab2ce431:;;
				_1a552d4aa_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_1ab2cd72c:;
	};
}



inline void _1a552c399_roundDown(_1a552ba19_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_1a552d202_trim(_self_);
}



inline void _1a552c61e_roundUp(_1a552ba19_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21117_i = (_20526_nd - 1LL);;
	for (; (_21117_i >= 0LL); (_21117_i)--) {
		{
			jule::U8 _21317_c = (*(_self_))._field_d[_21117_i];;
			if ((_21317_c < '9')) {
				((*(_self_))._field_d[_21117_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21117_i + 1LL));
				return;;
			};
		}
	_iter_next_1ab2d2951:;
	}
	_iter_end_1ab2d2951:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1a552c894_round(_1a552ba19_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1a552ded3_shouldRoundUp(_self_, _23224_nd)) {
		_1a552c61e_roundUp(_self_, _23224_nd);
	} else {
		_1a552c399_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _1a552cb08_roundedInteger(_1a552ba19_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24917_i = 0LL;;
	jule::U64 _25017_n = 0LLU;;
	for (; ((_24917_i < (*(_self_))._field_dp) && (_24917_i < (*(_self_))._field_nd)); (_24917_i)++) {
		{
			_25017_n=static_cast<jule::U64>(((_25017_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24917_i] - '0'))));
		}
	_iter_next_1ab2d52d3:;
	}
	_iter_end_1ab2d52d3:;;
	for (; (_24917_i < (*(_self_))._field_dp); (_24917_i)++) {
		{
			_25017_n*=10LLU;
		}
	_iter_next_1ab2d6cc9:;
	}
	_iter_end_1ab2d6cc9:;;
	if (_1a552ded3_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25017_n)++;
	};
	return _25017_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a552ba19_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a55406ba_Const> static__1a5540ae9_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1a55406ba_Const>(_1a55406ba_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1a55406ba_Const> static__1a5540d91_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1a55406ba_Const>(_1a55406ba_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1a55406ba_Const> static__1a5541138_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1a55406ba_Const>(_1a55406ba_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1a55406ba_Const> static__1a55413d0_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1a55406ba_Const>(_1a55406ba_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1a55406ba_Const> static__1a5541677_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1a55406ba_Const>(_1a55406ba_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1a55406ba_Const> static__1a5541875_NewNil(void) {
	return jule::new_ptr<_1a55406ba_Const>(_1a55406ba_Const{._field_data=nullptr});;
}



inline jule::I64 _1a5541eb3_ReadI64(_1a55406ba_Const* _self_) {
	if ((!(_1a554435b_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _1a5542227_ReadU64(_1a55406ba_Const* _self_) {
	if ((!(_1a55445c0_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _1a554248b_ReadBool(_1a55406ba_Const* _self_) {
	if ((!(_1a5544834_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1a5542700_ReadStr(_1a55406ba_Const* _self_) {
	if ((!(_1a5544a98_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1a5542964_ReadF64(_1a55406ba_Const* _self_) {
	if ((!(_1a5544d0c_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _1a5542bc8_AsI64(_1a55406ba_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab358587:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ab358be7:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ab358c5d:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1ab358ac6:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab35892d:;
	};
}



inline jule::U64 _1a5542e3c_AsU64(_1a55406ba_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ab35a48a:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab35a545:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ab35a5ab:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1ab3592e1:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ab3595bb:;
	};
}



inline jule::F64 _1a55431a1_AsF64(_1a55406ba_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ab35c24a:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab35bc1c:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ab35bcb6:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1ab35aa62:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab35ad3c:;
	};
}



inline void _1a5543426_SetI64(_1a55406ba_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _1a554369b_SetU64(_1a55406ba_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _1a5543921_SetBool(_1a55406ba_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _1a5543b96_SetStr(_1a55406ba_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _1a5543e1b_SetF64(_1a55406ba_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline jule::Bool _1a554435b_IsI64(_1a55406ba_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab3609bd:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab360c54:;
			{
				return false;;
			}
		}
		_match_end_1ab360bee:;
	};
}



inline jule::Bool _1a55445c0_IsU64(_1a55406ba_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ab361617:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab36101d:;
			{
				return false;;
			}
		}
		_match_end_1ab360eb8:;
	};
}



inline jule::Bool _1a5544834_IsBool(_1a55406ba_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ab362096:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab3619ad:;
			{
				return false;;
			}
		}
		_match_end_1ab361958:;
	};
}



inline jule::Bool _1a5544a98_IsStr(_1a55406ba_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab362a25:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab36243c:;
			{
				return false;;
			}
		}
		_match_end_1ab3623d7:;
	};
}



inline jule::Bool _1a5544d0c_IsF64(_1a55406ba_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ab3634a4:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab362dbb:;
			{
				return false;;
			}
		}
		_match_end_1ab362d66:;
	};
}



inline jule::Bool _1a5545071_IsNil(_1a55406ba_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1a554568c_And(_1a55406ba_Const* _self_, _1a55406ba_Const _23818_x) {
	{
		
		if ((_1a5544834_IsBool(_self_) && _1a5544834_IsBool(&_23818_x))) {
			_case_begin_1ab367893:;
			{
				return (_1a554248b_ReadBool(_self_) && _1a554248b_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1ab36782c:;
			{
				return false;;
			}
		}
		_match_end_1ab367420:;
	};
}



inline jule::Bool _1a554599a_Or(_1a55406ba_Const* _self_, _1a55406ba_Const _24917_x) {
	{
		
		if ((_1a5544834_IsBool(_self_) && _1a5544834_IsBool(&_24917_x))) {
			_case_begin_1ab368bd5:;
			{
				return (_1a554248b_ReadBool(_self_) || _1a554248b_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1ab368377:;
			{
				return false;;
			}
		}
		_match_end_1ab3682ab:;
	};
}



inline jule::Bool _1a5545ca8_Eq(_1a55406ba_Const* _self_, _1a55406ba_Const _26017_x) {
	{
		
		if (_1a5545071_IsNil(_self_)) {
			_case_begin_1ab36a599:;
			{
				return _1a5545071_IsNil(&_26017_x);;
			}
		}
		else if (_1a5544834_IsBool(_self_)) {
			_case_begin_1ab36a049:;
			{
				return (_1a5544834_IsBool(&_26017_x) && (_1a554248b_ReadBool(_self_) == _1a554248b_ReadBool(&_26017_x)));;
			}
		}
		else if (_1a5544a98_IsStr(_self_)) {
			_case_begin_1ab36a0c1:;
			{
				return (_1a5544a98_IsStr(&_26017_x) && (_1a5542700_ReadStr(_self_) == _1a5542700_ReadStr(&_26017_x)));;
			}
		}
		else if (_1a554435b_IsI64(_self_)) {
			_case_begin_1ab36a313:;
			{
				return (_1a5541eb3_ReadI64(_self_) == _1a5542bc8_AsI64(&_26017_x));;
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1ab36a379:;
			{
				return (_1a5542227_ReadU64(_self_) == _1a5542e3c_AsU64(&_26017_x));;
			}
		}
		else if (_1a5544d0c_IsF64(_self_)) {
			_case_begin_1ab36a3e0:;
			{
				return (_1a5542964_ReadF64(_self_) == _1a55431a1_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1ab369653:;
			{
				return false;;
			}
		}
		_match_end_1ab369587:;
	};
}



inline jule::Bool _1a55460b6_Lt(_1a55406ba_Const* _self_, _1a55406ba_Const _28717_x) {
	{
		
		if (_1a5544a98_IsStr(_self_)) {
			_case_begin_1ab36db85:;
			{
				return (_1a5544a98_IsStr(&_28717_x) && (_1a5542700_ReadStr(_self_) < _1a5542700_ReadStr(&_28717_x)));;
			}
		}
		else if (_1a554435b_IsI64(_self_)) {
			_case_begin_1ab36dbeb:;
			{
				return (_1a5541eb3_ReadI64(_self_) < _1a5542bc8_AsI64(&_28717_x));;
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1ab36dc73:;
			{
				return (_1a5542227_ReadU64(_self_) < _1a5542e3c_AsU64(&_28717_x));;
			}
		}
		else if (_1a5544d0c_IsF64(_self_)) {
			_case_begin_1ab36dcea:;
			{
				return (_1a5542964_ReadF64(_self_) < _1a55431a1_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1ab36a940:;
			{
				return false;;
			}
		}
		_match_end_1ab36a874:;
	};
}



inline jule::Bool _1a55463c4_LtEq(_1a55406ba_Const* _self_, _1a55406ba_Const _31019_x) {
	{
		
		if (_1a5544a98_IsStr(_self_)) {
			_case_begin_1ab371847:;
			{
				return (_1a5544a98_IsStr(&_31019_x) && (_1a5542700_ReadStr(_self_) <= _1a5542700_ReadStr(&_31019_x)));;
			}
		}
		else if (_1a554435b_IsI64(_self_)) {
			_case_begin_1ab3718ad:;
			{
				return (_1a5541eb3_ReadI64(_self_) <= _1a5542bc8_AsI64(&_31019_x));;
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1ab371935:;
			{
				return (_1a5542227_ReadU64(_self_) <= _1a5542e3c_AsU64(&_31019_x));;
			}
		}
		else if (_1a5544d0c_IsF64(_self_)) {
			_case_begin_1ab3719ac:;
			{
				return (_1a5542964_ReadF64(_self_) <= _1a55431a1_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1ab36e57b:;
			{
				return false;;
			}
		}
		_match_end_1ab36e4b0:;
	};
}



inline jule::Bool _1a55466d2_Gt(_1a55406ba_Const* _self_, _1a55406ba_Const _33317_x) {
	{
		
		if (_1a5544a98_IsStr(_self_)) {
			_case_begin_1ab374509:;
			{
				return (_1a5544a98_IsStr(&_33317_x) && (_1a5542700_ReadStr(_self_) > _1a5542700_ReadStr(&_33317_x)));;
			}
		}
		else if (_1a554435b_IsI64(_self_)) {
			_case_begin_1ab374570:;
			{
				return (_1a5541eb3_ReadI64(_self_) > _1a5542bc8_AsI64(&_33317_x));;
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1ab3745e7:;
			{
				return (_1a5542227_ReadU64(_self_) > _1a5542e3c_AsU64(&_33317_x));;
			}
		}
		else if (_1a5544d0c_IsF64(_self_)) {
			_case_begin_1ab37466e:;
			{
				return (_1a5542964_ReadF64(_self_) > _1a55431a1_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1ab37223d:;
			{
				return false;;
			}
		}
		_match_end_1ab372172:;
	};
}



inline jule::Bool _1a55469e0_GtEq(_1a55406ba_Const* _self_, _1a55406ba_Const _35619_x) {
	{
		
		if (_1a5544a98_IsStr(_self_)) {
			_case_begin_1ab3771bb:;
			{
				return (_1a5544a98_IsStr(&_35619_x) && (_1a5542700_ReadStr(_self_) >= _1a5542700_ReadStr(&_35619_x)));;
			}
		}
		else if (_1a554435b_IsI64(_self_)) {
			_case_begin_1ab377232:;
			{
				return (_1a5541eb3_ReadI64(_self_) >= _1a5542bc8_AsI64(&_35619_x));;
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1ab3772a9:;
			{
				return (_1a5542227_ReadU64(_self_) >= _1a5542e3c_AsU64(&_35619_x));;
			}
		}
		else if (_1a5544d0c_IsF64(_self_)) {
			_case_begin_1ab377331:;
			{
				return (_1a5542964_ReadF64(_self_) >= _1a55431a1_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1ab374e00:;
			{
				return false;;
			}
		}
		_match_end_1ab374d34:;
	};
}



inline jule::Bool _1a5546ced_Add(_1a55406ba_Const* _self_, _1a55406ba_Const _37722_x) {
	{
		
		if (_1a5544a98_IsStr(_self_)) {
			_case_begin_1ab379d7d:;
			{
				if ((!(_1a5544a98_IsStr(&_37722_x)))) {
					return false;;
				};
				_1a5543b96_SetStr(_self_, (_1a5542700_ReadStr(_self_) + _1a5542700_ReadStr(&_37722_x)));
			}
		}
		else if (_1a5544d0c_IsF64(_self_)) {
			_case_begin_1ab379de4:;
			{
				_1a5543e1b_SetF64(_self_, static_cast<jule::F64>((_1a5542964_ReadF64(_self_) + _1a55431a1_AsF64(&_37722_x))));
			}
		}
		else if (_1a554435b_IsI64(_self_)) {
			_case_begin_1ab379e6b:;
			{
				if (_1a5544d0c_IsF64(&_37722_x)) {
					_1a5543e1b_SetF64(_self_, static_cast<jule::F64>((_1a55431a1_AsF64(_self_) + _1a5542964_ReadF64(&_37722_x))));
				} else {
					_1a5543426_SetI64(_self_, static_cast<jule::I64>((_1a5541eb3_ReadI64(_self_) + _1a5542bc8_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1ab379ee3:;
			{
				if (_1a5544d0c_IsF64(&_37722_x)) {
					_1a5543e1b_SetF64(_self_, static_cast<jule::F64>((_1a55431a1_AsF64(_self_) + _1a5542964_ReadF64(&_37722_x))));
				} else {
					_1a554369b_SetU64(_self_, static_cast<jule::U64>((_1a5542227_ReadU64(_self_) + _1a5542e3c_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1ab377ab2:;
			{
				return false;;
			}
		}
		_match_end_1ab3779e6:;
	};
	return true;;
}



inline jule::Bool _1a554710b_Sub(_1a55406ba_Const* _self_, _1a55406ba_Const _40622_x) {
	{
		
		if (_1a5544d0c_IsF64(_self_)) {
			_case_begin_1aae4a71d:;
			{
				_1a5543e1b_SetF64(_self_, static_cast<jule::F64>((_1a5542964_ReadF64(_self_) - _1a55431a1_AsF64(&_40622_x))));
			}
		}
		else if (_1a554435b_IsI64(_self_)) {
			_case_begin_1aae4a784:;
			{
				if (_1a5544d0c_IsF64(&_40622_x)) {
					_1a5543e1b_SetF64(_self_, static_cast<jule::F64>((_1a55431a1_AsF64(_self_) - _1a5542964_ReadF64(&_40622_x))));
				} else {
					_1a5543426_SetI64(_self_, static_cast<jule::I64>((_1a5541eb3_ReadI64(_self_) - _1a5542bc8_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1aae48a5c:;
			{
				if (_1a5544d0c_IsF64(&_40622_x)) {
					_1a5543e1b_SetF64(_self_, static_cast<jule::F64>((_1a55431a1_AsF64(_self_) - _1a5542964_ReadF64(&_40622_x))));
				} else {
					_1a554369b_SetU64(_self_, static_cast<jule::U64>((_1a5542227_ReadU64(_self_) - _1a5542e3c_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1aad82ed5:;
			{
				return false;;
			}
		}
		_match_end_1aad82e3b:;
	};
	return true;;
}



inline jule::Bool _1a5547419_Mul(_1a55406ba_Const* _self_, _1a55406ba_Const _43022_x) {
	{
		
		if (_1a5544d0c_IsF64(_self_)) {
			_case_begin_1aae4e8ed:;
			{
				_1a5543e1b_SetF64(_self_, static_cast<jule::F64>((_1a5542964_ReadF64(_self_) * _1a55431a1_AsF64(&_43022_x))));
			}
		}
		else if (_1a554435b_IsI64(_self_)) {
			_case_begin_1aae4e964:;
			{
				if (_1a5544d0c_IsF64(&_43022_x)) {
					_1a5543e1b_SetF64(_self_, static_cast<jule::F64>((_1a55431a1_AsF64(_self_) * _1a5542964_ReadF64(&_43022_x))));
				} else {
					_1a5543426_SetI64(_self_, static_cast<jule::I64>((_1a5541eb3_ReadI64(_self_) * _1a5542bc8_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1aae4e9ca:;
			{
				if (_1a5544d0c_IsF64(&_43022_x)) {
					_1a5543e1b_SetF64(_self_, static_cast<jule::F64>((_1a55431a1_AsF64(_self_) * _1a5542964_ReadF64(&_43022_x))));
				} else {
					_1a554369b_SetU64(_self_, static_cast<jule::U64>((_1a5542227_ReadU64(_self_) * _1a5542e3c_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1aae4de5d:;
			{
				return false;;
			}
		}
		_match_end_1aae4ddb4:;
	};
	return true;;
}



inline jule::Bool _1a5547727_Div(_1a55406ba_Const* _self_, _1a55406ba_Const _45822_x) {
	{
		
		if (_1a5544d0c_IsF64(_self_)) {
			_case_begin_1aae53ade:;
			{
				jule::F64 _46117_l = _1a55431a1_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1a5543e1b_SetF64(_self_, static_cast<jule::F64>(jule::div(_1a5542964_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_1a554435b_IsI64(_self_)) {
			_case_begin_1aae53b55:;
			{
				jule::F64 _46717_l = _1a55431a1_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1a5543e1b_SetF64(_self_, static_cast<jule::F64>(jule::div(_1a55431a1_AsF64(_self_),_46717_l)));
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1aae53bbb:;
			{
				jule::F64 _47317_l = _1a55431a1_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1a5543e1b_SetF64(_self_, static_cast<jule::F64>(jule::div(_1a55431a1_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1aae5314e:;
			{
				return false;;
			}
		}
		_match_end_1aae530a5:;
	};
	return true;;
}



inline jule::Bool _1a5547a35_Mod(_1a55406ba_Const* _self_, _1a55406ba_Const _48722_x) {
	{
		
		if (_1a554435b_IsI64(_self_)) {
			_case_begin_1aae57cbe:;
			{
				jule::I64 _49017_l = _1a5542bc8_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1a5543426_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1a5541eb3_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1aae57d35:;
			{
				jule::U64 _49617_l = _1a5542e3c_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1a554369b_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1a5542227_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1aae57c58:;
			{
				return false;;
			}
		}
		_match_end_1aae54392:;
	};
	return true;;
}



inline jule::Bool _1a5547d43_BitwiseAnd(_1a55406ba_Const* _self_, _1a55406ba_Const _50929_x) {
	{
		
		if (_1a554435b_IsI64(_self_)) {
			_case_begin_1aae5ac06:;
			{
				_1a5543426_SetI64(_self_, static_cast<jule::I64>((_1a5541eb3_ReadI64(_self_) & _1a5542bc8_AsI64(&_50929_x))));
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1aae5ac6c:;
			{
				_1a554369b_SetU64(_self_, static_cast<jule::U64>((_1a5542227_ReadU64(_self_) & _1a5542e3c_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1aae5ab90:;
			{
				return false;;
			}
		}
		_match_end_1aae5985e:;
	};
	return true;;
}



inline jule::Bool _1a5548151_BitwiseOr(_1a55406ba_Const* _self_, _1a55406ba_Const _52328_x) {
	{
		
		if (_1a554435b_IsI64(_self_)) {
			_case_begin_1aae5ca71:;
			{
				_1a5543426_SetI64(_self_, static_cast<jule::I64>((_1a5541eb3_ReadI64(_self_) | _1a5542bc8_AsI64(&_52328_x))));
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1aae5cad7:;
			{
				_1a554369b_SetU64(_self_, static_cast<jule::U64>((_1a5542227_ReadU64(_self_) | _1a5542e3c_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1aae5ca0a:;
			{
				return false;;
			}
		}
		_match_end_1aae5c950:;
	};
	return true;;
}



inline jule::Bool _1a554845e_Xor(_1a55406ba_Const* _self_, _1a55406ba_Const _53722_x) {
	{
		
		if (_1a554435b_IsI64(_self_)) {
			_case_begin_1aae5e90d:;
			{
				_1a5543426_SetI64(_self_, static_cast<jule::I64>((_1a5541eb3_ReadI64(_self_) ^ _1a5542bc8_AsI64(&_53722_x))));
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1aae5e974:;
			{
				_1a554369b_SetU64(_self_, static_cast<jule::U64>((_1a5542227_ReadU64(_self_) ^ _1a5542e3c_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1aae5e897:;
			{
				return false;;
			}
		}
		_match_end_1aae5e7dc:;
	};
	return true;;
}



inline jule::Bool _1a554876c_Lshift(_1a55406ba_Const* _self_, _1a55406ba_Const _55125_x) {
	{
		
		if (_1a554435b_IsI64(_self_)) {
			_case_begin_1aae6179a:;
			{
				jule::I64 _55417_l = _1a5542bc8_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1a5542e3c_AsU64(&_55125_x);;
					_1a5543426_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1a5548ddd_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1aae61811:;
			{
				_1a5548ddd_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1aae61734:;
			{
				return false;;
			}
		}
		_match_end_1aae61679:;
	};
	return true;;
}



inline jule::Bool _1a5548a7a_Rshift(_1a55406ba_Const* _self_, _1a55406ba_Const _57125_x) {
	{
		
		if (_1a554435b_IsI64(_self_)) {
			_case_begin_1aae63d74:;
			{
				jule::I64 _57417_l = _1a5542bc8_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1a5542e3c_AsU64(&_57125_x);;
					_1a5543426_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1a55491da_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1a55445c0_IsU64(_self_)) {
			_case_begin_1aae63dda:;
			{
				_1a55491da_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1aae63d0d:;
			{
				return false;;
			}
		}
		_match_end_1aae63c42:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a55406ba_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8863347_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88641d3_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88645ce_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88970e5_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88976ab_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8897997_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8897d1b_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8898107_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8898503_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88987de_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8898e2c_IsUnsafe(_1a8898aca_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8898aca_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8899603_AutoSized(_1a88992a1_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88992a1_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88999aa_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8899d62_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889b270_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889b55b_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889bb11_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889bdec_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a889c606_IsNil(_1a889c2a4_LitExpr* _self_) {
	return (*(_self_))._field_Value.equal("nil", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889c2a4_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889c8e2_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889cd65_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889d56e_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889d926_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889dccd_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889e185_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889e608_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a889ea7b_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a88a04e9_Unhandled(_1a88a0186_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1a88a075d_Ignored(_1a88a0186_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a0186_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a0b15_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a13da_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a185d_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a2243_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a28b4_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a3222_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a382c_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a3b18_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a408b_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a4443_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a47ea_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a4ad6_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a51e1_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a5730_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a6621_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a6c2b_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a88a7765_IsSelf(_1a88a7402_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a7402_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a88a8a74_IsAnon(_1a88a8722_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a8722_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a9701_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88a9aa8_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a88aa56a_IsInf(_1a88aa218_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88aa218_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a88aad40_IsWhileNext(_1a88aa9dd_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88aa9dd_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ab37e_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ab736_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88abadd_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ac061_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ac418_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ac88b_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ad062_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ad4d5_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88adbab_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ae44d_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ae8c1_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88b03e9_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88b0bbe_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88b12c9_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88b153d_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88b1d8a_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88b2561_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88b2b6b_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a88b915b_FieldIns> _1a88b45c9_instance(jule::Ptr<_1a88b4266_Field> _self_) {
	return jule::new_ptr<_1a88b915b_FieldIns>(_1a88b915b_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88b4266_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88b6026_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a88b9b51_StructIns> _1a88b729c_instance(jule::Ptr<_1a88b6d3a_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1a88b9b51_StructIns> _9917_ins = jule::new_ptr<_1a88b9b51_StructIns>(_1a88b9b51_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1a88b915b_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1a8966901_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1a88d3076_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab67ab40:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> _10621_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = _9917_ins.get()._field_Statics; __jule_push_dest.push(jule::new_ptr<_1a8966901_Var>((*(_10621_s)))); };
			}
			_iter_next_1ab67ab40:;
			++it;
			goto _iter_begin_1ab67ab40;
		}
		_iter_end_1ab67ab40:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab67b4d1:;
		if (it != expr_end) {
			jule::Ptr<_1a88b4266_Field> _11021_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1a88b915b_FieldIns>> &__jule_push_dest = _9917_ins.get()._field_Fields; __jule_push_dest.push(_1a88b45c9_instance(_11021_f)); };
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1a86b1041_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1ab67b4d1:;
			++it;
			goto _iter_begin_1ab67b4d1;
		}
		_iter_end_1ab67b4d1:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1a88cc25c_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab67e02d:;
			if (it != expr_end) {
				jule::Ptr<_1a88cc25c_Fn> _12125_f = *it;
				{
					jule::Ptr<_1a88cc25c_Fn> _12225_fins = jule::new_ptr<_1a88cc25c_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1a88cc25c_Fn>> &__jule_push_dest = _9917_ins.get()._field_Methods; __jule_push_dest.push(_12225_fins); };
				}
				_iter_next_1ab67e02d:;
				++it;
				goto _iter_begin_1ab67e02d;
			}
			_iter_end_1ab67e02d:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_1a88b9b51_StructIns> _1a88b7577_appendInstance(_1a88b6d3a_Struct* _self_, jule::Ptr<_1a88b9b51_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab681294:;
		if (it != expr_end) {
			jule::Ptr<_1a88b9b51_StructIns> _13921_ains = *it;
			{
				if (_1a88ba745_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_1ab681294:;
			++it;
			goto _iter_begin_1ab681294;
		}
		_iter_end_1ab681294:;
	};
	{ jule::Slice<jule::Ptr<_1a88b9b51_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13338_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1a88cc25c_Fn> _1a88b792e_FindMethod(_1a88b6d3a_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6826a2:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1ab6826a2:;
			++it;
			goto _iter_begin_1ab6826a2;
		}
		_iter_end_1ab6826a2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8966901_Var> _1a88b7c3c_FindStatic(_1a88b6d3a_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab682dbc:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1ab682dbc:;
			++it;
			goto _iter_begin_1ab682dbc;
		}
		_iter_end_1ab682dbc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88b4266_Field> _1a88b804a_FindField(_1a88b6d3a_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6846a4:;
		if (it != expr_end) {
			jule::Ptr<_1a88b4266_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1ab6846a4:;
			++it;
			goto _iter_begin_1ab6846a4;
		}
		_iter_end_1ab6846a4:;
	};
	return nullptr;;
}



inline jule::Bool _1a88b8358_IsImplements(_1a88b6d3a_Struct* _self_, jule::Ptr<_1a88de47d_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab685584:;
		if (it != expr_end) {
			jule::Ptr<_1a88de47d_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_1ab685584:;
			++it;
			goto _iter_begin_1ab685584;
		}
		_iter_end_1ab685584:;
	};
	return false;;
}



inline jule::Bool _1a88b8666_IsDerives(_1a88b6d3a_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab685b06:;
		if (it != expr_end) {
			jule::Ptr<_1a88645ce_Directive> *_19416_d = it;
			{
				if ((*(_19416_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1ab685b06:;
			++it;
			goto _iter_begin_1ab685b06;
		}
		_iter_end_1ab685b06:;
	};
	return false;;
}



inline jule::Bool _1a88b8974_IsUses(_1a88b6d3a_Struct* _self_, jule::Ptr<_1a88b6d3a_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab687ec1:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_1ab688741:;
				}
				_iter_end_1ab688741:;;
			}
			_iter_next_1ab687ec1:;
			++it;
			goto _iter_begin_1ab687ec1;
		}
		_iter_end_1ab687ec1:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88b6d3a_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88b915b_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88bda56_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88be01d_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88be3c5_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88be8c0_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88bec44_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c0052_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c05a2_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c0e54_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c130b_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c177e_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c1b36_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c1edd_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c2461_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c29a0_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c2ede_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c37c5_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c3b6b_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c4034_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c4320_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c4881_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c4b7d_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c5057_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c5442_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c5761_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c5b4b_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c6036_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c64dc_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c6993_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c6d7d_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c719c_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c74bb_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c7b70_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c7ed3_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c83bd_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c86ba_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c89a6_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c8c92_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c90a0_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c9468_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88c9754_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ca216_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a88ce03e_ParamIns> _1a88cac94_instance(jule::Ptr<_1a88ca920_Param> _self_) {
	return jule::new_ptr<_1a88ce03e_ParamIns>(_1a88ce03e_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1a88cb008_IsSelf(_1a88ca920_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1a88cb26c_IsRef(_1a88ca920_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ca920_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a88cc6be_IsVoid(_1a88cc25c_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1a88cc933_IsMethod(_1a88cc25c_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1a88ccb97_IsEntryPoint(_1a88cc25c_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1a88cce0b_IsInit(_1a88cc25c_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1a88cd170_IsAnon(_1a88cc25c_Fn* _self_) {
	return _1a526b00b_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1a88cd3d4_AnyVar(_1a88cc25c_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1a88cee0d_FnIns> _1a88cd648_instanceForce(jule::Ptr<_1a88cc25c_Fn> _self_) {
	jule::Ptr<_1a88cee0d_FnIns> _10017_ins = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1a891e38c_Scope>(), ._field_Refers=static__1a88d3076_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab69b952:;
		if (it != expr_end) {
			jule::Ptr<_1a88ca920_Param> _10721_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>> &__jule_push_dest = _10017_ins.get()._field_Params; __jule_push_dest.push(_1a88cac94_instance(_10721_p)); };
			}
			_iter_next_1ab69b952:;
			++it;
			goto _iter_begin_1ab69b952;
		}
		_iter_end_1ab69b952:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_1a88cee0d_FnIns> _1a88cd8ac_instance(jule::Ptr<_1a88cc25c_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1a88cd648_instanceForce(_self_);;
}



inline jule::Ptr<_1a88cee0d_FnIns> _1a88cdb87_appendInstance(_1a88cc25c_Fn* _self_, jule::Ptr<_1a88cee0d_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1a88cee0d_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1a88cee0d_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6a07be:;
		if (it != expr_end) {
			jule::Ptr<_1a88cee0d_FnIns> _14421_ains = *it;
			{
				if (_1a88d1816_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_1ab6a07be:;
			++it;
			goto _iter_begin_1ab6a07be;
		}
		_iter_end_1ab6a07be:;
	};
	{ jule::Slice<jule::Ptr<_1a88cee0d_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88cc25c_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a88ce391_Str(_1a88ce03e_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		(_16617_s).append("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		(_16617_s).append("&_:", 3);
	};
	if (_1a88cb008_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1a88cb26c_IsRef((*(_self_))._field_Decl.ptr())) {
			(_16617_s).append("&", 1);
		};
		(_16617_s).append("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		(_16617_s).append("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_1a86aeb55_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ce03e_ParamIns _Src) {
	_Stream << _1a88ce391_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a88d023d_Str(_1a88cee0d_FnIns* _self_) {
	;
	return _1a88d1b24_GetKindStr(_self_, false);;
}



inline jule::Bool _1a88d054b_Equal(jule::Ptr<_1a88cee0d_FnIns> _self_, jule::Ptr<_1a86ae79d_TypeKind> _21721_other) {
	jule::Ptr<_1a88cee0d_FnIns> _21813_f = _1a86b31a8_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _1a88d09ad_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _1a88d09ad_EqualFn(jule::Ptr<_1a88cee0d_FnIns> _self_, jule::Ptr<_1a88cee0d_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1a88cc6be_IsVoid(_self_.get()._field_Decl.ptr()) != _1a88cc6be_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1a88ce03e_ParamIns>,jule::Ptr<_1a88ce03e_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1a88ce03e_ParamIns>,jule::Ptr<_1a88ce03e_ParamIns>)>([=](jule::Ptr<_1a88ce03e_ParamIns> _23830_p1, jule::Ptr<_1a88ce03e_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1a88cb008_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1a88cb008_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1a88cb26c_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1a88cb26c_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1a86aee63_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1ab6acea2:;
	}
	_iter_end_1ab6acea2:;;
	if ((!(_1a88cc6be_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1a86aee63_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1a88d0cbb_equalTrait(jule::Ptr<_1a88cee0d_FnIns> _self_, jule::Ptr<_1a88cee0d_FnIns>* _28727_other) {
	if ((_self_.get()._field_Decl.get()._field_Public != (*(_28727_other)).get()._field_Decl.get()._field_Public)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Ident != (*(_28727_other)).get()._field_Decl.get()._field_Ident)) {
		return false;;
	};
	if ((!(_1a88d09ad_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> _1a88d1030_Types(_1a88cee0d_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1ab6b1e73:;
			{
				return nullptr;;
			}
		}
		else if ((_1a86b3b59_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1ab6b1ed9:;
			{
				return jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1ab6b1e0c:;
			{
				return _1a86b3b59_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1ab6b1d41:;
	};
}



inline jule::Bool _1a88d1294_IsBuiltin(_1a88cee0d_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1a88d1508_IsAnon(_1a88cee0d_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1a88cd170_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1a88d1816_Same(_1a88cee0d_FnIns* _self_, jule::Ptr<_1a88cee0d_FnIns> _33019_f) {
	if ((((*(_self_))._field_Decl != _33019_f.get()._field_Decl) || (_33019_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6b52a6:;
		if (it != expr_end) {
			jule::I64 _33513_i = it - expr->begin();
			jule::Ptr<_1a86ad01b_InsGeneric> *_33516_g = it;
			{
				jule::Ptr<_1a86ad01b_InsGeneric> _33617_g2 = _33019_f.get()._field_Generics[_33513_i];;
				if ((((*(_33516_g)).get()._field_Kind.get()._field_BindIdent != _33617_g2.get()._field_Kind.get()._field_BindIdent) || (!(_1a86aee63_Equal((*(_33516_g)).get()._field_Kind, _33617_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1ab6b52a6:;
			++it;
			_33513_i++;
			goto _iter_begin_1ab6b52a6;
		}
		_iter_end_1ab6b52a6:;
	};
	return true;;
}



inline jule::Str _1a88d1b24_GetKindStr(_1a88cee0d_FnIns* _self_, jule::Bool _34725_ident) {
	jule::Str _34817_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		(_34817_s).append("unsafe ", 7);
	};
	(_34817_s).append("fn", 2);
	if ((_34725_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34817_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	(_34817_s).append("(", 1);
	jule::I64 _36113_n = (*(_self_))._field_Params.len();;
	if ((_36113_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab6be18e:;
			if (it != expr_end) {
				jule::Ptr<_1a88ce03e_ParamIns> *_36320_p = it;
				{
					_34817_s+=_1a88ce391_Str((*(_36320_p)).ptr());
					(_34817_s).append(",", 1);
				}
				_iter_next_1ab6be18e:;
				++it;
				goto _iter_begin_1ab6be18e;
			}
			_iter_end_1ab6be18e:;
		};
		(_34817_s).mut_slice(0LL, (_34817_s.len() - 1LL));;
	};
	(_34817_s).append(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		(_34817_s).append("!", 1);
	};
	if ((!(_1a88cc6be_IsVoid((*(_self_))._field_Decl.ptr())))) {
		(_34817_s).append(":", 1);
		_34817_s+=_1a86aeb55_Str((*(_self_))._field_Result.ptr());
	};
	return _34817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88cee0d_FnIns _Src) {
	_Stream << _1a88d023d_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a88d2d67_ReferenceStack> static__1a88d3076_new(void) {
	return jule::new_ptr<_1a88d2d67_ReferenceStack>(_1a88d2d67_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1a88d3450_Len(_1a88d2d67_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1a88d375d_At(_1a88d2d67_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1a88d39d3_Push(_1a88d2d67_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1abdcbcec_Exist(_1a88d2d67_ReferenceStack* _self_, jule::Ptr<_1a88cee0d_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abdcd0c8:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1abdcd0c8:;
			++it;
			goto _iter_begin_1abdcd0c8;
		}
		_iter_end_1abdcd0c8:;
	};
	return false;;
}

inline jule::Bool _1abde041a_Exist(_1a88d2d67_ReferenceStack* _self_, jule::Ptr<_1a8966901_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abde16a2:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1abde16a2:;
			++it;
			goto _iter_begin_1abde16a2;
		}
		_iter_end_1abde16a2:;
	};
	return false;;
}

inline jule::Bool _1abe7c30e_Exist(_1a88d2d67_ReferenceStack* _self_, jule::Ptr<_1a88b9b51_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe7d5da:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1abe7d5da:;
			++it;
			goto _iter_begin_1abe7d5da;
		}
		_iter_end_1abe7d5da:;
	};
	return false;;
}

inline jule::Bool _1ac22c3c2_Exist(_1a88d2d67_ReferenceStack* _self_, jule::Ptr<_1a88de47d_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac22d626:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ac22d626:;
			++it;
			goto _iter_begin_1ac22d626;
		}
		_iter_end_1ac22d626:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88d2d67_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88d4198_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1a88d9214_pushErr(_1a88d88d9_symbolBuilder* _self_, jule::Ptr<_1a52684c0_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_1a4deb40b_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a8944417_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1a88d98eb_pushSuggestion(_1a88d88d9_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1a894589c_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1a88d9ca3_checkCppUseDeclPath(_1a88d88d9_symbolBuilder* _self_, jule::Ptr<_1a88ae44d_UseDecl>* _34539_decl, jule::Str _34555_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _1a4d65386_Ext(_34555_path);;
	if (((!(_1a4dddb90_IsValidHeaderExt(_34613_ext))) && (!(_1a4ddde37_IsValidCppExt(_34613_ext))))) {
		_1a88d9214_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d0a35536_Status> _35313_info = ({
		auto except = static__1a4d673aa_Of(_34555_path);
		(except.ok()) ? (except.result) : ({{
			_1a88d9214_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_1d0a35536_Status>(nullptr);});
	});;
	if (_1d0a358ee_IsDir(_35313_info.ptr())) {
		_1a88d9214_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a88da07d_buildCppHeaderImport(_1a88d88d9_symbolBuilder* _self_, jule::Ptr<_1a88ae44d_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*(_36544_decl)).get()._field_LinkPath;;
	if ((!(_1a4ddd8d7_IsStdHeaderPath((*(_36544_decl)).get()._field_LinkPath)))) {
		_36617_path=_1a4d650de_Join(jule::Slice<jule::Str>::make({_1a526de87_Dir((*(_36544_decl)).get()._field_Token.get()._field_File.ptr()),(*(_36544_decl)).get()._field_LinkPath}));
		jule::Bool _37021_ok = _1a88d9ca3_checkCppUseDeclPath(_self_, _36544_decl, _36617_path);;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a4d6562d_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_1a88d9214_pushErr(_self_, &((*(_36544_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_36544_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_1a893d323_ImportInfo>(_1a893d323_ImportInfo{._field_Token=(*(_36544_decl)).get()._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*(_36544_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a88da38b_buildStdImport(_1a88d88d9_symbolBuilder* _self_, jule::Ptr<_1a88ae44d_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*(_39338_decl)).get()._field_LinkPath.slice(5LL);;
	_39417_path=_1a4d6122d_Replace(_39417_path, jule::Str("::", 2), jule::Str("\\", 1), -1LL);
	_39417_path=_1a4d650de_Join(jule::Slice<jule::Str>::make({_1a4e90648_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a4d6562d_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_1a88d9214_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d0a35536_Status> _40413_info = ({
		auto except = static__1a4d673aa_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_1a88d9214_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_1d0a35536_Status>(nullptr);});
	});;
	if ((!(_1d0a358ee_IsDir(_40413_info.ptr())))) {
		_1a88d9214_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _41413_i = (_1a4d5ba20_FindLast((*(_39338_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*(_39338_decl)).get()._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_1a893d323_ImportInfo>(_1a893d323_ImportInfo{._field_Token=(*(_39338_decl)).get()._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*(_39338_decl)).get()._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*(_39338_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*(_39338_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1a8940e5d_Package>(_1a8940e5d_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a88da699_buildIdentImport(jule::Ptr<_1a88d88d9_symbolBuilder> _self_, jule::Ptr<_1a88ae44d_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _1a893a672_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a89397d6_GetModPath(_self_.get()._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_1a88d9214_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1a88d98eb_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*(_43241_decl)).get()._field_LinkPath;;
	_44017_path=_1a4d6122d_Replace(_44017_path, jule::Str("::", 2), jule::Str("\\", 1), -1LL);
	_44017_path=_1a4d650de_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a4d6562d_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_1a88d9214_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d0a35536_Status> _45113_info = ({
		auto except = static__1a4d673aa_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_1a88d9214_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_1d0a35536_Status>(nullptr);});
	});;
	if ((!(_1d0a358ee_IsDir(_45113_info.ptr())))) {
		_1a88d9214_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _46113_i = (_1a4d5ba20_FindLast((*(_43241_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*(_43241_decl)).get()._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_1a893d323_ImportInfo>(_1a893d323_ImportInfo{._field_Token=(*(_43241_decl)).get()._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*(_43241_decl)).get()._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*(_43241_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*(_43241_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1a8940e5d_Package>(_1a8940e5d_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a88da9a7_buildImport(jule::Ptr<_1a88d88d9_symbolBuilder> _self_, jule::Ptr<_1a88ae44d_UseDecl>* _47936_decl) {
	{
		
		if ((*(_47936_decl)).get()._field_Binded) {
			_case_begin_1ab702090:;
			{
				return _1a88da07d_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*(_47936_decl)).get()._field_Std) {
			_case_begin_1ab7022d2:;
			{
				return _1a88da38b_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1ab701897:;
			{
				return _1a88da699_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1ab7017cb:;
	};
}



inline jule::Bool _1a88dacb5_checkDuplicateUseDecl(_1a88d88d9_symbolBuilder* _self_, jule::Ptr<_1a893d323_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a893d323_ImportInfo> _49213_lpkg = _1a89ab847_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)>([=](jule::Ptr<_1a893d323_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*(_49041_pkg)).get()._field_Path == _49248_spkg.get()._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1a88d9214_pushErr(_self_, &((*(_49041_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_49041_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_1a88d98eb_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1a88db0d4_implImportSelections(_1a88d88d9_symbolBuilder* _self_, jule::Ptr<_1a893d323_ImportInfo>* _50444_imp, jule::Ptr<_1a88ae44d_UseDecl>* _50467_decl) {
	(*(_50444_imp)).get()._field_Selected=(*(_50467_decl)).get()._field_Selected;
	{
		auto expr = &((*(_50444_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab705a00:;
		if (it != expr_end) {
			jule::Ptr<_1a52684c0_Token> _50616_item = *it;
			{
				{
					auto expr = &((*(_50444_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab70622b:;
					if (it != expr_end) {
						jule::Ptr<_1a52684c0_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1ab70622b;
							} else if ((_50616_item.get()._field_Kind == _50720_citem.get()._field_Kind)) {
								_1a88d9214_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_50616_item.get()._field_Kind, &__jule_any_type5)}));
								_1a88d98eb_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1ab70622b;
							};
						}
						_iter_next_1ab70622b:;
						++it;
						goto _iter_begin_1ab70622b;
					}
					_iter_end_1ab70622b:;
				};
			}
			_iter_next_1ab705a00:;
			++it;
			goto _iter_begin_1ab705a00;
		}
		_iter_end_1ab705a00:;
	};
}



inline jule::Str _1a88db3e2_getAsLinkPath(jule::Ptr<_1a88d88d9_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_1a4d5a238_HasPrefix(_51937_path, _1a4e90648_PathStdlib)) {
		(_51937_path).mut_slice(_1a4e90648_PathStdlib.len());;
		return (jule::Str("std", 3) + _1a4d6122d_Replace(_51937_path, jule::Str("\\", 1), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a4d6562d_Abs(_1a893a672_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a89397d6_GetModPath(_self_.get()._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 92LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _1a4d6122d_Replace(_51937_path, jule::Str("\\", 1), jule::Str("::", 2), -1LL);;
}



inline void _1a88db7aa_pushCycleError(jule::Ptr<_1a88d88d9_symbolBuilder> _self_, jule::Ptr<_1a88d88d9_symbolBuilder>* _53335_sb, jule::Str _53355_path, jule::Str* _53371_message) {
	;
	jule::Str _53513_refersTo = _1a4deb84b_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1a88db3e2_getAsLinkPath(_self_, _1a526de87_Dir((*(_53335_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_1a88db3e2_getAsLinkPath(_self_, _53355_path), &__jule_any_type5)}));;
	((*(_53371_message))).buffer.insert(0, (((_1a4d599b8_Repeat(jule::Str(" ", 1), 7LL) + _53513_refersTo) + jule::Str("\n", 1))));;
}



inline void _1a88dbb73_pushCrossCycleError(jule::Ptr<_1a88d88d9_symbolBuilder> _self_, jule::Ptr<_1a88d88d9_symbolBuilder>* _54240_target, jule::Ptr<_1a893d323_ImportInfo>* _54265_imp, jule::Ptr<_1a52684c0_Token>* _54284_errorToken) {
	jule::Str _54317_message = jule::Str();;
	_1a88db7aa_pushCycleError(_self_, &(_self_), (*(_54265_imp)).get()._field_Path, &(_54317_message));
	jule::Ptr<_1a88d88d9_symbolBuilder> _54717_owner = _self_.get()._field_owner;;
	jule::Ptr<_1a88d88d9_symbolBuilder> _54817_old = _self_;;
	while ((_54717_owner.get()._field_owner != nullptr)) {
		{
			_1a88db7aa_pushCycleError(_self_, &(_54817_old.get()._field_owner), _1a526de87_Dir(_54817_old.get()._field_table.get()._field_File.ptr()), &(_54317_message));
			if ((_54717_owner.get()._field_owner == (*(_54240_target)))) {
				_1a88db7aa_pushCycleError(_self_, _54240_target, _1a526de87_Dir(_54717_owner.get()._field_table.get()._field_File.ptr()), &(_54317_message));
				goto _iter_end_1ab70d376;
			};
			_54817_old=_54717_owner;
			_54717_owner=_54717_owner.get()._field_owner;
		}
	_iter_next_1ab70d376:;
	}
	_iter_end_1ab70d376:;;
	_1a88d9214_pushErr(_self_.ptr(), _54284_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_54317_message, &__jule_any_type5)}));
}



inline jule::Bool _1a88dc02a_checkImportCycles(jule::Ptr<_1a88d88d9_symbolBuilder> _self_, jule::Ptr<_1a893d323_ImportInfo> _56537_imp, jule::Ptr<_1a88ae44d_UseDecl>* _56556_decl) {
	if ((_56537_imp.get()._field_Path == _1a526de87_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1a88d9214_pushErr(_self_.ptr(), &((*(_56556_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1a88db3e2_getAsLinkPath(_self_, _56537_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_1a526de87_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_1a88dbb73_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_1a88d88d9_symbolBuilder> _58017_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1a526de87_Dir(_58017_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_1a88dbb73_pushCrossCycleError(_self_, &(_58017_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	if ((_58017_owner.get()._field_owner != nullptr)) {
		_58017_owner=_58017_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _1a88dc415_checkPackageAccessibility(_1a88d88d9_symbolBuilder* _self_, jule::Ptr<_1a88ae44d_UseDecl>* _60145_decl, jule::Str* _60162_mod, jule::Str* _60173_path) {
	if (((_1a893a672_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1a89397d6_GetModPath((*(_self_))._field_importer) != (*(_60162_mod))) && _1a4d5ee85_Contains((*(_60173_path)), jule::Str("internal", 8)))) {
		_1a88d9214_pushErr(_self_, &((*(_60145_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a88dc7cd_importPackage(jule::Ptr<_1a88d88d9_symbolBuilder> _self_, jule::Ptr<_1a893d323_ImportInfo>* _60738_imp, jule::Ptr<_1a88ae44d_UseDecl>* _60761_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_60738_imp)).get()._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a893d323_ImportInfo> _61217_port = _1a893a672_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8939e02_GetImport(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path);;
	if ((_61217_port != nullptr)) {
		(*(_60738_imp)).get()._field_Package=_61217_port.get()._field_Package;
		(*(_60738_imp)).get()._field_Duplicate=true;
		jule::Str _61717_oldMod = _1a893a672_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a89397d6_GetModPath(_self_.get()._field_importer);;
		_1a893a672_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8939594_SetModPath(_self_.get()._field_importer, _1a893a672_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8939ae4_ModById(_self_.get()._field_importer, (*(_60738_imp)).get()._field_ModId));
		_1a88dc415_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_61717_oldMod), &(_61217_port.get()._field_Path));
		_1a893a672_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8939594_SetModPath(_self_.get()._field_importer, _61717_oldMod);
	} else {
		if ((!(_1a88dc02a_checkImportCycles(_self_, (*(_60738_imp)), _60761_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _62617_oldMod = _1a893a672_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a89397d6_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1a893a672_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8939594_SetModPath(_self_.get()._field_importer, _62617_oldMod);
		});;
		if ((*(_60738_imp)).get()._field_Std) {
			_1a893a672_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a8939594_SetModPath(_self_.get()._field_importer, _1a4e90648_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1a8863347_Ast>> _63122_asts;;
		jule::Slice<_1a4deb40b_Log> _63132_errors;;
		({
			__jule_tuple_sx_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a893a672_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a893a2a9_ImportPackage(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path, (!((*(_60738_imp)).get()._field_Std)));
			_63122_asts = __jule_assign_result.__jule_result_arg0;
			_63132_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63132_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_63132_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1a88dc415_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_62617_oldMod), &((*(_60738_imp)).get()._field_Path));
		{
			auto expr = &(_63122_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab71b7e6:;
			if (it != expr_end) {
				jule::Ptr<_1a8863347_Ast> _63925_ast = *it;
				{
					jule::Ptr<_1a89ab380_SymbolTable> _64025_table = nullptr;;
					({
						__jule_tuple_x_1a89ab380_SymbolTable__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a86cd7de_buildSymbols(&(_63925_ast), &(_self_.get()._field_importer), _self_);
						_64025_table = __jule_assign_result.__jule_result_arg0;
						_63132_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63132_errors.len() > 0LL)) {
						(_self_.get()._field_errors).append(_63132_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>> &__jule_push_dest = (*(_60738_imp)).get()._field_Package.get()._field_Files; __jule_push_dest.push(_64025_table); };
				}
				_iter_next_1ab71b7e6:;
				++it;
				goto _iter_begin_1ab71b7e6;
			}
			_iter_end_1ab71b7e6:;
		};
	};
	_1a88db0d4_implImportSelections(_self_.ptr(), _60738_imp, _60761_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a88dcadb_importUseDecl(jule::Ptr<_1a88d88d9_symbolBuilder> _self_, jule::Ptr<_1a88ae44d_UseDecl>* _65438_decl) {
	jule::Ptr<_1a893d323_ImportInfo> _65517_imp = _1a88da9a7_buildImport(_self_, _65438_decl);;
	if ((_65517_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66117_ok = _1a88dacb5_checkDuplicateUseDecl(_self_.ptr(), &(_65517_imp));;
	if ((!(_66117_ok))) {
		return nullptr;;
	};
	_66117_ok=_1a88dc7cd_importPackage(_self_, &(_65517_imp), _65438_decl);
	{ jule::Slice<jule::Ptr<_1a893d323_ImportInfo>> &__jule_push_dest = _self_.get()._field_table.get()._field_Imports; __jule_push_dest.push(_65517_imp); };
	if (_66117_ok) {
		_1a893a672_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a893a52e_Imported(_self_.get()._field_importer, _65517_imp);
		return _65517_imp;;
	};
	return nullptr;;
}



inline void _1a88dccb7_importUseDecls(jule::Ptr<_1a88d88d9_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7210c0:;
		if (it != expr_end) {
			jule::Ptr<_1a88ae44d_UseDecl> _67621_decl = *it;
			{
				_1a88dcadb_importUseDecl(_self_, &(_67621_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1ab7210c0;
				};
			}
			_iter_next_1ab7210c0:;
			++it;
			goto _iter_begin_1ab7210c0;
		}
		_iter_end_1ab7210c0:;
	};
}



inline void _1a88dd03c_appendNode(_1a88d88d9_symbolBuilder* _self_, _1a88641d3_Node* _68534_node) {
	{
		auto &_match_expr{ (*(_68534_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ab722269:;
			{
				{ jule::Slice<jule::Ptr<_1a8919332_Impl>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Impls; __jule_push_dest.push(_1a88d8389_buildImpl((*(_68534_node))._field_Data.cast_ptr<_1a88b2b6b_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ab7224de:;
			{
				jule::Ptr<_1a86ada55_TypeAlias> _69021_ta = _1a88d4a7d_buildTypeAlias((*(_68534_node))._field_Data.cast_ptr<_1a88ad062_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeAliases; __jule_push_dest.push(_69021_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ab722555:;
			{
				jule::Ptr<_1a88b6d3a_Struct> _69321_srct = _1a88d53db_buildStruct((*(_68534_node))._field_Data.cast_ptr<_1a88b1d8a_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Structs; __jule_push_dest.push(_69321_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab7225bb:;
			{
				jule::Ptr<_1a88cc25c_Fn> _69621_f = _1a88d6046_buildFn((*(_68534_node))._field_Data.cast_ptr<_1a88a8722_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1a88cc25c_Fn>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Funcs; __jule_push_dest.push(_69621_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab722632:;
			{
				jule::Ptr<_1a88de47d_Trait> _69921_t = _1a88d682c_buildTrait((*(_68534_node))._field_Data.cast_ptr<_1a88b2561_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1a88de47d_Trait>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Traits; __jule_push_dest.push(_69921_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ab722d91:;
			{
				jule::Ptr<_1a8966901_Var> _70221_v = _1a88d7d4a_buildVar((*(_68534_node))._field_Data.cast_ptr<_1a88a9701_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_70221_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ab722e07:;
			{
				jule::Ptr<_1a88e1c11_Enum> _70521_e = _1a88d72bc_buildEnum((*(_68534_node))._field_Data.cast_ptr<_1a88b03e9_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1a88e1c11_Enum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Enums; __jule_push_dest.push(_70521_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1ab722e6d:;
			{
				jule::Ptr<_1a88e330b_TypeEnum> _70821_e = _1a88d7aa3_buildTypeEnum((*(_68534_node))._field_Data.cast_ptr<_1a88b12c9_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1a88e330b_TypeEnum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeEnums; __jule_push_dest.push(_70821_e); };
			}
		}
		else {
			_case_begin_1ab722478:;
			{
				_1a88d9214_pushErr(_self_, &((*(_68534_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab722423:;
	};
}



inline void _1a88dd218_appendNodes(_1a88d88d9_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab72a2d8:;
		if (it != expr_end) {
			_1a88641d3_Node _71621_node = *it;
			{
				_1a88dd03c_appendNode(_self_, &(_71621_node));
			}
			_iter_next_1ab72a2d8:;
			++it;
			goto _iter_begin_1ab72a2d8;
		}
		_iter_end_1ab72a2d8:;
	};
}



inline void _1a88dd48d_pushDirectivePass(_1a88d88d9_symbolBuilder* _self_, jule::Ptr<_1a88645ce_Directive>* _72141_d) {
	if (((*(_72141_d)).get()._field_Args.len() == 0LL)) {
		_1a88d9214_pushErr(_self_, &((*(_72141_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_72141_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1a52684c0_Token> _72617_arg = (*(_72141_d)).get()._field_Args[1LL];;
		_1a88d9214_pushErr(_self_, &(_72617_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_72141_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1a52684c0_Token> _73013_arg = (*(_72141_d)).get()._field_Args[0LL];;
	if ((_73013_arg.get()._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a88d9214_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_73013_arg.get()._field_Kind[0LL] != '\"')) {
		_1a88d9214_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1a88d4198_Pass> &__jule_push_dest = (*(_self_))._field_table.get()._field_Passes; __jule_push_dest.push(_1a88d4198_Pass{._field_Token=(*(_72141_d)).get()._field_Tag, ._field_Text=_73013_arg.get()._field_Kind.slice(1LL, (_73013_arg.get()._field_Kind.len() - 1LL))}); };
}



inline void _1a88dd669_appendTopDirectives(_1a88d88d9_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab72ee8b:;
		if (it != expr_end) {
			jule::Ptr<_1a88645ce_Directive> _74821_d = *it;
			{
				{
					auto &_match_expr{ _74821_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1ab73181c:;
						{
							_1a88dd48d_pushDirectivePass(_self_, &(_74821_d));
						}
					}
					_match_end_1ab731795:;
				};
			}
			_iter_next_1ab72ee8b:;
			++it;
			goto _iter_begin_1ab72ee8b;
		}
		_iter_end_1ab72ee8b:;
	};
}



inline void _1a88dd845_build(jule::Ptr<_1a88d88d9_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1a89ab380_SymbolTable>(_1a89ab380_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1a88dd669_appendTopDirectives(_self_.ptr());
	_1a88dccb7_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1a88dd218_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a88d88d9_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a88de835_Str(_1a88de47d_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a88deb43_Equal(jule::Ptr<_1a88de47d_Trait> _self_, jule::Ptr<_1a86ae79d_TypeKind> _2621_other) {
	jule::Ptr<_1a88de47d_Trait> _2713_trt = _1a86b3681_Trait(_2621_other.ptr());;
	return (_self_ == _2713_trt);;
}



inline jule::Bool _1a88e001c_IsBuiltin(_1a88de47d_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_1a88cc25c_Fn> _1a88e032a_FindMethod(_1a88de47d_Trait* _self_, jule::Str _4029_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab735216:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_Ident == _4029_ident)) {
					return _4121_f;;
				};
			}
			_iter_next_1ab735216:;
			++it;
			goto _iter_begin_1ab735216;
		}
		_iter_end_1ab735216:;
	};
	return _1a88e0946_findMethodInherit(_self_, &(_4029_ident));;
}



inline jule::Ptr<_1a88cc25c_Fn> _1a88e0946_findMethodInherit(_1a88de47d_Trait* _self_, jule::Str* _6137_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7378bc:;
		if (it != expr_end) {
			jule::Ptr<_1a86b6651_TypeSymbol> _6221_i = *it;
			{
				if ((_6221_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1ab7378bc;
				};
				jule::Ptr<_1a88de47d_Trait> _6621_t = _1a86b3681_Trait(_6221_i.get()._field_Kind.ptr());;
				if ((_6621_t != nullptr)) {
					jule::Ptr<_1a88cc25c_Fn> _6825_f2 = _1a88e032a_FindMethod(_6621_t.ptr(), (*(_6137_ident)));;
					if ((_6825_f2 != nullptr)) {
						return _6825_f2;;
					};
				};
			}
			_iter_next_1ab7378bc:;
			++it;
			goto _iter_begin_1ab7378bc;
		}
		_iter_end_1ab7378bc:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88de47d_Trait _Src) {
	_Stream << _1a88de835_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a88e15b2_AutoExpr(_1a88e121b_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88e121b_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a88e2074_Str(_1a88e1c11_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a88e2382_Equal(jule::Ptr<_1a88e1c11_Enum> _self_, jule::Ptr<_1a86ae79d_TypeKind> _3821_other) {
	jule::Ptr<_1a88e1c11_Enum> _3913_enm = _1a86b2707_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1a88e121b_EnumItem> _1a88e277d_FindItem(_1a88e1c11_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab73b32c:;
		if (it != expr_end) {
			jule::Ptr<_1a88e121b_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1ab73b32c:;
			++it;
			goto _iter_begin_1ab73b32c;
		}
		_iter_end_1ab73b32c:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88e1c11_Enum _Src) {
	_Stream << _1a88e2074_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88e2c78_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a88e363b_Str(_1a88e330b_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a88e3949_Equal(jule::Ptr<_1a88e330b_TypeEnum> _self_, jule::Ptr<_1a86ae79d_TypeKind> _8021_other) {
	jule::Ptr<_1a88e330b_TypeEnum> _8113_tenm = _1a86b296b_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1a88e2c78_TypeEnumItem> _1a88e3d45_FindItem(_1a88e330b_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab73d3ea:;
		if (it != expr_end) {
			jule::Ptr<_1a88e2c78_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1ab73d3ea:;
			++it;
			goto _iter_begin_1ab73d3ea;
		}
		_iter_end_1ab73d3ea:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88e330b_TypeEnum _Src) {
	_Stream << _1a88e363b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a88e5819_Str(_1a88e5462_comptimeRange* _self_) {
	return jule::Str("comptimeRange", 13);;
}



inline jule::Bool _1a88e5b27_Equal(jule::Ptr<_1a88e5462_comptimeRange> _self_, jule::Ptr<_1a86ae79d_TypeKind> _2521_other) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88e5462_comptimeRange _Src) {
	_Stream << _1a88e5819_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a88e62ba_Str(_1a88e5e57_comptimeStructField* _self_) {
	return jule::Str("comptimeStructField", 19);;
}



inline jule::Bool _1a88e65c8_Equal(jule::Ptr<_1a88e5e57_comptimeStructField> _self_, jule::Ptr<_1a86ae79d_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a88e6aa1__Name(jule::Ptr<_1a88e5e57_comptimeStructField> _self_, jule::Ptr<_1a8683860_Eval>* _3926_e, jule::Ptr<_1a88a0186_FnCallExpr>* _3941_fc) {
	if (((*(_3941_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_3926_e)).ptr(), (*(_3941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _4417_constant = static__1a55413d0_NewStr(_self_.get()._field_field.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Model=jule::Any(_4417_constant, &__jule_any_type19), ._field_Constant=_4417_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a88ebcb5__Type(jule::Ptr<_1a88e5e57_comptimeStructField> _self_, jule::Ptr<_1a8683860_Eval>* _5230_e, jule::Ptr<_1a88a0186_FnCallExpr>* _5245_fc) {
	if (((*(_5245_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_5230_e)).ptr(), (*(_5245_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1a89156b3_buildComptimeTypeInfoData(&((*(_5230_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a88ec16c__Public(jule::Ptr<_1a88e5e57_comptimeStructField> _self_, jule::Ptr<_1a8683860_Eval>* _6032_e, jule::Ptr<_1a88a0186_FnCallExpr>* _6047_fc) {
	if (((*(_6047_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_6032_e)).ptr(), (*(_6047_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _6517_constant = static__1a5541138_NewBool(_self_.get()._field_field.get()._field_Decl.get()._field_Public);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_6517_constant, &__jule_any_type19), ._field_Constant=_6517_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a88ec47a_subIdent(jule::Ptr<_1a88e5e57_comptimeStructField> _self_, jule::Str _7328_ident) {
	{
		auto &_match_expr{ _7328_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1ab748ca7:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _7621_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _7733_e, jule::Ptr<_1a88a0186_FnCallExpr>* _7748_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a88e6aa1__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_7621_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1ab748d1d:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _8321_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _8433_e, jule::Ptr<_1a88a0186_FnCallExpr>* _8448_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a88ec16c__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_8321_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1ab748acb:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _9021_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _9133_e, jule::Ptr<_1a88a0186_FnCallExpr>* _9148_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a88ebcb5__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_9021_method));;
			}
		}
		else {
			_case_begin_1ab74868b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab74856a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a88e5e57_comptimeStructField _Src) {
	_Stream << _1a88e62ba_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a88ecb62_Str(_1a88ec7dd_comptimeStructFields* _self_) {
	return jule::Str("comptimeStructFields", 20);;
}



inline jule::Bool _1a88ece70_Equal(jule::Ptr<_1a88ec7dd_comptimeStructFields> _self_, jule::Ptr<_1a86ae79d_TypeKind> _10921_other) {
	return false;;
}



inline void _1a88ed39e_ready(_1a88ec7dd_comptimeStructFields* _self_, jule::Ptr<_1a8966901_Var>* _11329_keyA, jule::Ptr<_1a8966901_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*(_11329_keyA)).get()._field_Constant=true;
		(*(_11329_keyA)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		(*(_11329_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_11329_keyA)).get()._field_Kind=_1a8776b2e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*(_11346_keyB)).get()._field_Constant=true;
		(*(_11346_keyB)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		(*(_11346_keyB)).get()._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a88e5e57_comptimeStructField>(), 6)})});
	};
}



inline void _1a88ed767_step(_1a88ec7dd_comptimeStructFields* _self_, jule::I64 _13523_i, jule::Ptr<_1a8966901_Var>* _13536_keyA, jule::Ptr<_1a8966901_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		_1a86b4396_comptimeStructField((*(_13553_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I64 _1a88ed9cb_len(_1a88ec7dd_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88ec7dd_comptimeStructFields _Src) {
	_Stream << _1a88ecb62_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a88ee12a_Str(_1a88edcb7_comptimeStatic* _self_) {
	return jule::Str("comptimeStatic", 14);;
}



inline jule::Bool _1a88ee438_Equal(jule::Ptr<_1a88edcb7_comptimeStatic> _self_, jule::Ptr<_1a86ae79d_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a88ee911__Name(jule::Ptr<_1a88edcb7_comptimeStatic> _self_, jule::Ptr<_1a8683860_Eval>* _16326_e, jule::Ptr<_1a88a0186_FnCallExpr>* _16341_fc) {
	if (((*(_16341_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_16326_e)).ptr(), (*(_16341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _16817_constant = static__1a55413d0_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Model=jule::Any(_16817_constant, &__jule_any_type19), ._field_Constant=_16817_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a88eecb8__Type(jule::Ptr<_1a88edcb7_comptimeStatic> _self_, jule::Ptr<_1a8683860_Eval>* _17630_e, jule::Ptr<_1a88a0186_FnCallExpr>* _17645_fc) {
	if (((*(_17645_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_17630_e)).ptr(), (*(_17645_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1a89156b3_buildComptimeTypeInfoData(&((*(_17630_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind.get()._field_Kind));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8900170__Public(jule::Ptr<_1a88edcb7_comptimeStatic> _self_, jule::Ptr<_1a8683860_Eval>* _18432_e, jule::Ptr<_1a88a0186_FnCallExpr>* _18447_fc) {
	if (((*(_18447_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_18432_e)).ptr(), (*(_18447_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _18917_constant = static__1a5541138_NewBool(_self_.get()._field_field.get()._field_Public);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_18917_constant, &__jule_any_type19), ._field_Constant=_18917_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890047d_subIdent(jule::Ptr<_1a88edcb7_comptimeStatic> _self_, jule::Str _19728_ident) {
	{
		auto &_match_expr{ _19728_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1ab75b913:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _20021_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _20133_e, jule::Ptr<_1a88a0186_FnCallExpr>* _20148_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a88ee911__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_20021_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1ab75b979:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _20721_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _20833_e, jule::Ptr<_1a88a0186_FnCallExpr>* _20848_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a8900170__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_20721_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1ab75b737:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _21421_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _21533_e, jule::Ptr<_1a88a0186_FnCallExpr>* _21548_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a88eecb8__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_21421_method));;
			}
		}
		else {
			_case_begin_1ab75b2e7:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab75b23c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a88edcb7_comptimeStatic _Src) {
	_Stream << _1a88ee12a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8900bdc_Str(_1a8900879_comptimeStatics* _self_) {
	return jule::Str("comptimeStatics", 15);;
}



inline jule::Bool _1a8900eea_Equal(jule::Ptr<_1a8900879_comptimeStatics> _self_, jule::Ptr<_1a86ae79d_TypeKind> _23321_other) {
	return false;;
}



inline void _1a89013a2_ready(_1a8900879_comptimeStatics* _self_, jule::Ptr<_1a8966901_Var>* _23729_keyA, jule::Ptr<_1a8966901_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*(_23729_keyA)).get()._field_Constant=true;
		(*(_23729_keyA)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		(*(_23729_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_23729_keyA)).get()._field_Kind=_1a8776b2e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*(_23746_keyB)).get()._field_Constant=true;
		(*(_23746_keyB)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		(*(_23746_keyB)).get()._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a88edcb7_comptimeStatic>(), 8)})});
	};
}



inline void _1a890176a_step(_1a8900879_comptimeStatics* _self_, jule::I64 _25923_i, jule::Ptr<_1a8966901_Var>* _25936_keyA, jule::Ptr<_1a8966901_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		_1a86b5a5c_comptimeStatic((*(_25953_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I64 _1a89019ce_len(_1a8900879_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8900879_comptimeStatics _Src) {
	_Stream << _1a8900bdc_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a890212d_Str(_1a8901cba_comptimeEnumField* _self_) {
	return jule::Str("comptimeEnumField", 17);;
}



inline jule::Bool _1a890243b_Equal(jule::Ptr<_1a8901cba_comptimeEnumField> _self_, jule::Ptr<_1a86ae79d_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a89028e2__Name(jule::Ptr<_1a8901cba_comptimeEnumField> _self_, jule::Ptr<_1a8683860_Eval>* _28726_e, jule::Ptr<_1a88a0186_FnCallExpr>* _28741_fc) {
	if (((*(_28741_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_28726_e)).ptr(), (*(_28741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _29217_constant = static__1a55413d0_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Model=jule::Any(_29217_constant, &__jule_any_type19), ._field_Constant=_29217_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8902c00_subIdent(jule::Ptr<_1a8901cba_comptimeEnumField> _self_, jule::Str _30028_ident) {
	{
		auto &_match_expr{ _30028_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1ab76a229:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _30321_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _30433_e, jule::Ptr<_1a88a0186_FnCallExpr>* _30448_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a89028e2__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_30321_method));;
			}
		}
		else {
			_case_begin_1ab76a34a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab76a290:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a8901cba_comptimeEnumField _Src) {
	_Stream << _1a890212d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a890345e_Str(_1a8902edb_comptimeEnumFields* _self_) {
	return jule::Str("comptimeEnumFields", 18);;
}



inline jule::Bool _1a890376c_Equal(jule::Ptr<_1a8902edb_comptimeEnumFields> _self_, jule::Ptr<_1a86ae79d_TypeKind> _32221_other) {
	return false;;
}



inline void _1a8903b24_ready(_1a8902edb_comptimeEnumFields* _self_, jule::Ptr<_1a8966901_Var>* _32629_keyA, jule::Ptr<_1a8966901_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*(_32629_keyA)).get()._field_Constant=true;
		(*(_32629_keyA)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		(*(_32629_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_32629_keyA)).get()._field_Kind=_1a8776b2e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*(_32646_keyB)).get()._field_Constant=true;
		(*(_32646_keyB)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		(*(_32646_keyB)).get()._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a8901cba_comptimeEnumField>(), 10)})});
	};
}



inline void _1a8903edc_step(_1a8902edb_comptimeEnumFields* _self_, jule::I64 _34823_i, jule::Ptr<_1a8966901_Var>* _34836_keyA, jule::Ptr<_1a8966901_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		_1a86b486e_comptimeEnumField((*(_34853_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I64 _1a8904251_len(_1a8902edb_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8902edb_comptimeEnumFields _Src) {
	_Stream << _1a890345e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a89048a0_Str(_1a890453c_comptimeParam* _self_) {
	return jule::Str("comptimeParam", 13);;
}



inline jule::Bool _1a8904bad_Equal(jule::Ptr<_1a890453c_comptimeParam> _self_, jule::Ptr<_1a86ae79d_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8905197__Name(jule::Ptr<_1a890453c_comptimeParam> _self_, jule::Ptr<_1a8683860_Eval>* _37626_e, jule::Ptr<_1a88a0186_FnCallExpr>* _37641_fc) {
	if (((*(_37641_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_37626_e)).ptr(), (*(_37641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _38117_constant = static__1a55413d0_NewStr(_self_.get()._field_param.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Model=jule::Any(_38117_constant, &__jule_any_type19), ._field_Constant=_38117_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890554e__Type(jule::Ptr<_1a890453c_comptimeParam> _self_, jule::Ptr<_1a8683860_Eval>* _38930_e, jule::Ptr<_1a88a0186_FnCallExpr>* _38945_fc) {
	if (((*(_38945_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_38930_e)).ptr(), (*(_38945_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1a89156b3_buildComptimeTypeInfoData(&((*(_38930_e)).get()._field_s), &(_self_.get()._field_param.get()._field_Kind));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8905906__Variadic(jule::Ptr<_1a890453c_comptimeParam> _self_, jule::Ptr<_1a8683860_Eval>* _39734_e, jule::Ptr<_1a88a0186_FnCallExpr>* _39749_fc) {
	if (((*(_39749_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_39734_e)).ptr(), (*(_39749_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Variadic", 8), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _40217_constant = static__1a5541138_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Variadic);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_40217_constant, &__jule_any_type19), ._field_Constant=_40217_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8905cad__Reference(jule::Ptr<_1a890453c_comptimeParam> _self_, jule::Ptr<_1a8683860_Eval>* _41035_e, jule::Ptr<_1a88a0186_FnCallExpr>* _41050_fc) {
	if (((*(_41050_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_41035_e)).ptr(), (*(_41050_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Reference", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _41517_constant = static__1a5541138_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Reference);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_41517_constant, &__jule_any_type19), ._field_Constant=_41517_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a89060bb_subIdent(jule::Ptr<_1a890453c_comptimeParam> _self_, jule::Str _42328_ident) {
	{
		auto &_match_expr{ _42328_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1ab77bbca:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _42621_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _42733_e, jule::Ptr<_1a88a0186_FnCallExpr>* _42748_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a8905197__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_42621_method));;
			}
		}
		else if (_match_expr == jule::Str("Variadic", 8)) {
			_case_begin_1ab77bc41:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _43321_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _43433_e, jule::Ptr<_1a88a0186_FnCallExpr>* _43448_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a8905906__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_43321_method));;
			}
		}
		else if (_match_expr == jule::Str("Reference", 9)) {
			_case_begin_1ab77b9ee:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _44021_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _44133_e, jule::Ptr<_1a88a0186_FnCallExpr>* _44148_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a8905cad__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_44021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1ab77ba65:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _44721_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _44833_e, jule::Ptr<_1a88a0186_FnCallExpr>* _44848_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890554e__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_44721_method));;
			}
		}
		else {
			_case_begin_1ab77b5ae:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab77b48d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a890453c_comptimeParam _Src) {
	_Stream << _1a89048a0_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a890694b_Str(_1a89065d8_comptimeParams* _self_) {
	return jule::Str("comptimeParams", 14);;
}



inline jule::Bool _1a8906c59_Equal(jule::Ptr<_1a89065d8_comptimeParams> _self_, jule::Ptr<_1a86ae79d_TypeKind> _46621_other) {
	return false;;
}



inline void _1a8907188_ready(_1a89065d8_comptimeParams* _self_, jule::Ptr<_1a8966901_Var>* _47029_keyA, jule::Ptr<_1a8966901_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*(_47029_keyA)).get()._field_Constant=true;
		(*(_47029_keyA)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		(*(_47029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_47029_keyA)).get()._field_Kind=_1a8776b2e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*(_47046_keyB)).get()._field_Constant=true;
		(*(_47046_keyB)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		(*(_47046_keyB)).get()._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a890453c_comptimeParam>(), 12)})});
	};
}



inline void _1a8907551_step(_1a89065d8_comptimeParams* _self_, jule::I64 _49223_i, jule::Ptr<_1a8966901_Var>* _49236_keyA, jule::Ptr<_1a8966901_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		_1a86b4d47_comptimeParam((*(_49253_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I64 _1a89077b5_len(_1a89065d8_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1a89065d8_comptimeParams _Src) {
	_Stream << _1a890694b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a8907e14_Str(_1a8907aa1_comptimeTypeInfos* _self_) {
	return jule::Str("comptimeTypeInfos", 17);;
}



inline jule::Bool _1a8908222_Equal(jule::Ptr<_1a8907aa1_comptimeTypeInfos> _self_, jule::Ptr<_1a86ae79d_TypeKind> _51621_other) {
	return false;;
}



inline void _1a8908651_ready(_1a8907aa1_comptimeTypeInfos* _self_, jule::Ptr<_1a8966901_Var>* _52029_keyA, jule::Ptr<_1a8966901_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*(_52029_keyA)).get()._field_Constant=true;
		(*(_52029_keyA)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		(*(_52029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_52029_keyA)).get()._field_Kind=_1a8776b2e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*(_52046_keyB)).get()._field_Constant=true;
		(*(_52046_keyB)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		(*(_52046_keyB)).get()._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a8909069_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1a8908a19_step(_1a8907aa1_comptimeTypeInfos* _self_, jule::I64 _54223_i, jule::Ptr<_1a8966901_Var>* _54236_keyA, jule::Ptr<_1a8966901_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*(_54253_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1a86ae33b_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I64 _1a8908c7d_len(_1a8907aa1_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8907aa1_comptimeTypeInfos _Src) {
	_Stream << _1a8907e14_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a89093cc_Str(_1a8909069_comptimeTypeInfo* _self_) {
	return ((jule::Str("comptimeTypeInfo[", 17) + _1a86aeb55_Str((*(_self_))._field_base.ptr())) + jule::Str("]", 1));;
}



inline jule::Bool _1a89096da_Equal(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a86ae79d_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8909cd4__Str(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _57025_e, jule::Ptr<_1a88a0186_FnCallExpr>* _57040_fc) {
	if (((*(_57040_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_57025_e)).ptr(), (*(_57040_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Str", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _57517_constant = static__1a55413d0_NewStr(_1a86aeb55_Str(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Model=jule::Any(_57517_constant, &__jule_any_type19), ._field_Constant=_57517_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890a18b__Kind(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _58330_e, jule::Ptr<_1a88a0186_FnCallExpr>* _58345_fc) {
	if (((*(_58345_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_58330_e)).ptr(), (*(_58345_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Kind", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a88e1c11_Enum> _58817_enm = _1a893edc4_FindEnum(_1a8915350_findComptimePackage(&((*(_58330_e)).get()._field_s)).ptr(), jule::Str("Kind", 4));;
	jule::Ptr<_1a88e121b_EnumItem> _58917_item = nullptr;;
	{
		
		if (_1a86b0a68_Void(_self_.get()._field_base.ptr())) {
			_case_begin_1ab7956d8:;
			{
				_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Void", 4));
			}
		}
		else if ((_1a86b341c_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1ab795809:;
			{
				_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Struct", 6));
			}
		}
		else if ((_1a86b3681_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1ab79550c:;
			{
				_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Trait", 5));
			}
		}
		else if ((_1a86b2493_Ptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1ab795573:;
			{
				if (_1a86be78b_IsUnsafe(_1a86b2493_Ptr(_self_.get()._field_base.ptr()).ptr())) {
					_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("UnsafePtr", 9));
				} else {
					_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Ptr", 3));
				};
			}
		}
		else if ((_1a86b222e_Sptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1ab795d7b:;
			{
				_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Ref", 3));
			}
		}
		else if ((_1a86b2707_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1ab795de2:;
			{
				_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Enum", 4));
			}
		}
		else if ((_1a86b38e5_Map(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1ab795e58:;
			{
				_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Map", 3));
			}
		}
		else if ((_1a86b2e44_Slc(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1ab795ebe:;
			{
				_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Slice", 5));
			}
		}
		else if ((_1a86b2bd0_Arr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1ab796035:;
			{
				_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Array", 5));
			}
		}
		else if ((_1a86b31a8_Fn(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1ab79609b:;
			{
				_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Func", 4));
			}
		}
		else if ((_1a86b3b59_Tup(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1ab796112:;
			{
				_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Tuple", 5));
			}
		}
		else if ((_1a86b1eba_Prim(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1ab796178:;
			{
				jule::Ptr<_1a86b7003_Prim> _61817_prim = _1a86b1eba_Prim(_self_.get()._field_base.ptr());;
				{
					
					if (_1a86ba468_IsAny(_61817_prim.ptr())) {
						_case_begin_1ab79d9cc:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Any", 3));
						}
					}
					else if (_1a86b9e90_IsBool(_61817_prim.ptr())) {
						_case_begin_1ab79e192:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Bool", 4));
						}
					}
					else if (_1a86ba204_IsStr(_61817_prim.ptr())) {
						_case_begin_1ab79e428:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Str", 3));
						}
					}
					else if (_1a86b927a_IsF32(_61817_prim.ptr())) {
						_case_begin_1ab79e99a:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("F32", 3));
						}
					}
					else if (_1a86b94de_IsF64(_61817_prim.ptr())) {
						_case_begin_1ab79ea11:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("F64", 3));
						}
					}
					else if (_1a86b7d28_IsI8(_61817_prim.ptr())) {
						_case_begin_1ab79ea77:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("I8", 2));
						}
					}
					else if (_1a86b808c_IsI16(_61817_prim.ptr())) {
						_case_begin_1ab79eadd:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("I16", 3));
						}
					}
					else if (_1a86b8301_IsI32(_61817_prim.ptr())) {
						_case_begin_1ab79eb54:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("I32", 3));
						}
					}
					else if (_1a86b8565_IsI64(_61817_prim.ptr())) {
						_case_begin_1ab79ebba:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("I64", 3));
						}
					}
					else if (_1a86b87c9_IsU8(_61817_prim.ptr())) {
						_case_begin_1ab79ec31:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("U8", 2));
						}
					}
					else if (_1a86b8a3d_IsU16(_61817_prim.ptr())) {
						_case_begin_1ab79ec97:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("U16", 3));
						}
					}
					else if (_1a86b8ca2_IsU32(_61817_prim.ptr())) {
						_case_begin_1ab79ed0d:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("U32", 3));
						}
					}
					else if (_1a86b9016_IsU64(_61817_prim.ptr())) {
						_case_begin_1ab79ed74:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("U64", 3));
						}
					}
					else if (_1a86b9753_IsInt(_61817_prim.ptr())) {
						_case_begin_1ab79edda:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Int", 3));
						}
					}
					else if (_1a86b99b7_IsUint(_61817_prim.ptr())) {
						_case_begin_1ab79ee51:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Uint", 4));
						}
					}
					else if (_1a86b9c2b_IsUintptr(_61817_prim.ptr())) {
						_case_begin_1ab79eec8:;
						{
							_58917_item=_1a88e277d_FindItem(_58817_enm.ptr(), jule::Str("Uintptr", 7));
						}
					}
					else {
						_case_begin_1ab79dee9:;
						{
							jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1a86aeb55_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_1ab79de83:;
				};
			}
		}
		else {
			_case_begin_1ab7953a8:;
			{
				jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1a86aeb55_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_1ab795353:;
	};
	return _1a86abd1c_evalEnumStatic(&(_58817_enm), &(_58917_item));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890a543__Bits(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _66130_e, jule::Ptr<_1a88a0186_FnCallExpr>* _66145_fc) {
	if (((*(_66145_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a86b7003_Prim> _66613_prim = _1a86b1eba_Prim(_self_.get()._field_base.ptr());;
	if ((_66613_prim == nullptr)) {
		_1a8683d6b_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _67113_n = _1a5532d94_BitsizeOf(_66613_prim.get()._field_Kind);;
	if ((_67113_n == -1LL)) {
		_1a8683d6b_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _67617_constant = static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67113_n)));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Model=jule::Any(_67617_constant, &__jule_any_type19), ._field_Constant=_67617_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890a8ea__Elem(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _68430_e, jule::Ptr<_1a88a0186_FnCallExpr>* _68445_fc) {
	if (((*(_68445_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a86bdcb8_Ptr> _68917_ptr = _1a86b2493_Ptr(_self_.get()._field_base.ptr());;
	if ((_68917_ptr != nullptr)) {
		if (_1a86be78b_IsUnsafe(_68917_ptr.ptr())) {
			_1a8683d6b_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		return _1a89156b3_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_68917_ptr.get()._field_Elem));;
	};
	jule::Ptr<_1a86ba754_Sptr> _69717_sptr = _1a86b222e_Sptr(_self_.get()._field_base.ptr());;
	if ((_69717_sptr != nullptr)) {
		return _1a89156b3_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_69717_sptr.get()._field_Elem));;
	};
	jule::Ptr<_1a86bb1b1_Slc> _70117_slice = _1a86b2e44_Slc(_self_.get()._field_base.ptr());;
	if ((_70117_slice != nullptr)) {
		return _1a89156b3_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70117_slice.get()._field_Elem));;
	};
	jule::Ptr<_1a86bd35b_Arr> _70517_array = _1a86b2bd0_Arr(_self_.get()._field_base.ptr());;
	if ((_70517_array != nullptr)) {
		return _1a89156b3_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70517_array.get()._field_Elem));;
	};
	jule::Ptr<_1a88e1c11_Enum> _70917_enm = _1a86b2707_Enum(_self_.get()._field_base.ptr());;
	if ((_70917_enm != nullptr)) {
		return _1a89156b3_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70917_enm.get()._field_Kind.get()._field_Kind));;
	};
	_1a8683d6b_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890aca2__Size(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _71730_e, jule::Ptr<_1a88a0186_FnCallExpr>* _71745_fc) {
	if (((*(_71745_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a86bd35b_Arr> _72217_arr = _1a86b2bd0_Arr(_self_.get()._field_base.ptr());;
	if ((_72217_arr == nullptr)) {
		_1a8683d6b_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _72717_constant = static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_72217_arr.get()._field_N)));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8774841_primInt, ._field_Model=jule::Any(_72717_constant, &__jule_any_type19), ._field_Constant=_72717_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890b159__Key(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _73529_e, jule::Ptr<_1a88a0186_FnCallExpr>* _73544_fc) {
	if (((*(_73544_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a86bc767_Map> _74017_m = _1a86b38e5_Map(_self_.get()._field_base.ptr());;
	if ((_74017_m == nullptr)) {
		_1a8683d6b_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1a89156b3_buildComptimeTypeInfoData(&((*(_73529_e)).get()._field_s), &(_74017_m.get()._field_Key));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890b511__Value(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _74831_e, jule::Ptr<_1a88a0186_FnCallExpr>* _74846_fc) {
	if (((*(_74846_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a86bc767_Map> _75317_m = _1a86b38e5_Map(_self_.get()._field_base.ptr());;
	if ((_75317_m == nullptr)) {
		_1a8683d6b_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1a89156b3_buildComptimeTypeInfoData(&((*(_74831_e)).get()._field_s), &(_75317_m.get()._field_Val));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890b8b8__Fields(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _76132_e, jule::Ptr<_1a88a0186_FnCallExpr>* _76147_fc) {
	if (((*(_76147_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a88b9b51_StructIns> _76617_s = _1a86b341c_Struct(_self_.get()._field_base.ptr());;
	if ((_76617_s != nullptr)) {
		return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a88ec7dd_comptimeStructFields>(_1a88ec7dd_comptimeStructFields{._field_fields=_76617_s.get()._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1a88e1c11_Enum> _77617_enm = _1a86b2707_Enum(_self_.get()._field_base.ptr());;
	if ((_77617_enm != nullptr)) {
		return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a8902edb_comptimeEnumFields>(_1a8902edb_comptimeEnumFields{._field_fields=_77617_enm.get()._field_Items}), 11)}), });;
	};
	_1a8683d6b_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890bc70__Statics(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _79033_e, jule::Ptr<_1a88a0186_FnCallExpr>* _79048_fc) {
	if (((*(_79048_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Statics", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a88b9b51_StructIns> _79517_s = _1a86b341c_Struct(_self_.get()._field_base.ptr());;
	if ((_79517_s == nullptr)) {
		_1a8683d6b_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a8900879_comptimeStatics>(_1a8900879_comptimeStatics{._field_fields=_79517_s.get()._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890c127__Public(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _80932_e, jule::Ptr<_1a88a0186_FnCallExpr>* _80947_fc) {
	if (((*(_80947_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Bool _81417_public = false;;
	{
		
		if ((_1a86b341c_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1aa637e94:;
			{
				_81417_public=_1a86b341c_Struct(_self_.get()._field_base.ptr()).get()._field_Decl.get()._field_Public;
			}
		}
		else if ((_1a86b3681_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1aa63800a:;
			{
				_81417_public=_1a86b3681_Trait(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_1a86b2707_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1aa637d1d:;
			{
				_81417_public=_1a86b2707_Enum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_1a86b296b_TypeEnum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1aa637d84:;
			{
				_81417_public=_1a86b296b_TypeEnum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else {
			_case_begin_1aa635ee7:;
			{
				_1a8683d6b_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1aa636e60:;
	};
	jule::Ptr<_1a55406ba_Const> _82817_constant = static__1a5541138_NewBool(_81417_public);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_82817_constant, &__jule_any_type19), ._field_Constant=_82817_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890c4ce__Binded(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _83632_e, jule::Ptr<_1a88a0186_FnCallExpr>* _83647_fc) {
	if (((*(_83647_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_83632_e)).ptr(), (*(_83647_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Binded", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _84117_constant = static__1a5541138_NewBool(_1a86b0590_Binded(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_84117_constant, &__jule_any_type19), ._field_Constant=_84117_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890c886__Ordered(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _84929_e, jule::Ptr<_1a88a0186_FnCallExpr>* _84944_fc) {
	if (((*(_84944_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_84929_e)).ptr(), (*(_84944_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Ordered", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _85417_constant = static__1a5541138_NewBool(_1a86b12a5_Ordered(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Model=jule::Any(_85417_constant, &__jule_any_type19), ._field_Constant=_85417_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890cc3d__Comparable(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _86232_e, jule::Ptr<_1a88a0186_FnCallExpr>* _86247_fc) {
	if (((*(_86247_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_86232_e)).ptr(), (*(_86247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Comparable", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _86717_constant = static__1a5541138_NewBool(_1a86b0ccc_Comparable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Model=jule::Any(_86717_constant, &__jule_any_type19), ._field_Constant=_86717_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890d0e5__Mutable(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _87529_e, jule::Ptr<_1a88a0186_FnCallExpr>* _87544_fc) {
	if (((*(_87544_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_87529_e)).ptr(), (*(_87544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _88017_constant = static__1a5541138_NewBool(_1a86b1041_Mutable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_88017_constant, &__jule_any_type19), ._field_Constant=_88017_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890d49c__Types(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _88831_e, jule::Ptr<_1a88a0186_FnCallExpr>* _88846_fc) {
	if (((*(_88846_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a86bbcb6_Tuple> _89317_tup = _1a86b3b59_Tup(_self_.get()._field_base.ptr());;
	if ((_89317_tup == nullptr)) {
		_1a8683d6b_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a8907aa1_comptimeTypeInfos> _89817_infos = jule::new_ptr<_1a8907aa1_comptimeTypeInfos>(_1a8907aa1_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1a8909069_comptimeTypeInfo>>::alloc(0LL, _89317_tup.get()._field_Types.len())});;
	{
		auto expr = &(_89317_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa647c95:;
		if (it != expr_end) {
			jule::Ptr<_1a86ae79d_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8909069_comptimeTypeInfo>> &__jule_push_dest = _89817_infos.get()._field_types; __jule_push_dest.push(_1a894601d_pushComptimeTypeInfo((*(_88831_e)).get()._field_s.get()._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_1aa647c95:;
			++it;
			goto _iter_begin_1aa647c95;
		}
		_iter_end_1aa647c95:;
	};
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_89817_infos, 14)}), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890d854__Exceptional(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _91137_e, jule::Ptr<_1a88a0186_FnCallExpr>* _91152_fc) {
	if (((*(_91152_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _91617_f = _1a86b31a8_Fn(_self_.get()._field_base.ptr());;
	if ((_91617_f == nullptr)) {
		_1a8683d6b_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _92117_constant = static__1a5541138_NewBool(((_91617_f.get()._field_Decl != nullptr) && _91617_f.get()._field_Decl.get()._field_Exceptional));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_92117_constant, &__jule_any_type19), ._field_Constant=_92117_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890dc0b__CanNil(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _92932_e, jule::Ptr<_1a88a0186_FnCallExpr>* _92947_fc) {
	if (((*(_92947_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_92932_e)).ptr(), (*(_92947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("CanNil", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _93417_constant = static__1a5541138_NewBool(_1a86b1519_NilCompatible(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_93417_constant, &__jule_any_type19), ._field_Constant=_93417_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890e0b3__Result(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _94232_e, jule::Ptr<_1a88a0186_FnCallExpr>* _94247_fc) {
	if (((*(_94247_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _94717_f = _1a86b31a8_Fn(_self_.get()._field_base.ptr());;
	if ((_94717_f == nullptr)) {
		_1a8683d6b_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	if ((_94717_f.get()._field_Result == nullptr)) {
		return _1a89156b3_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_1a877360e_primVoid));;
	};
	return _1a89156b3_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_94717_f.get()._field_Result));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890e46a__Params(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Ptr<_1a8683860_Eval>* _95832_e, jule::Ptr<_1a88a0186_FnCallExpr>* _95847_fc) {
	if (((*(_95847_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _96317_f = _1a86b31a8_Fn(_self_.get()._field_base.ptr());;
	if ((_96317_f == nullptr)) {
		_1a8683d6b_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a89065d8_comptimeParams>(_1a89065d8_comptimeParams{._field_params=_96317_f.get()._field_Params}), 13)}), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a890e778_subIdent(jule::Ptr<_1a8909069_comptimeTypeInfo> _self_, jule::Str _97528_ident) {
	{
		auto &_match_expr{ _97528_ident };
		
		if (_match_expr == jule::Str("Str", 3)) {
			_case_begin_1aa65616b:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _97821_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _97933_e, jule::Ptr<_1a88a0186_FnCallExpr>* _97948_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a8909cd4__Str(_self_, _97933_e, _97948_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_97821_method));;
			}
		}
		else if (_match_expr == jule::Str("Bits", 4)) {
			_case_begin_1aa6568ca:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _98521_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _98633_e, jule::Ptr<_1a88a0186_FnCallExpr>* _98648_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890a543__Bits(_self_, _98633_e, _98648_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_98521_method));;
			}
		}
		else if (_match_expr == jule::Str("Elem", 4)) {
			_case_begin_1aa656941:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _99221_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _99333_e, jule::Ptr<_1a88a0186_FnCallExpr>* _99348_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890a8ea__Elem(_self_, _99333_e, _99348_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_99221_method));;
			}
		}
		else if (_match_expr == jule::Str("Size", 4)) {
			_case_begin_1aa656402:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _99921_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _100033_e, jule::Ptr<_1a88a0186_FnCallExpr>* _100048_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890aca2__Size(_self_, _100033_e, _100048_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_99921_method));;
			}
		}
		else if (_match_expr == jule::Str("Key", 3)) {
			_case_begin_1aa656468:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _100621_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _100733_e, jule::Ptr<_1a88a0186_FnCallExpr>* _100748_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890b159__Key(_self_, _100733_e, _100748_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_100621_method));;
			}
		}
		else if (_match_expr == jule::Str("Value", 5)) {
			_case_begin_1aa6564e0:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _101321_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _101433_e, jule::Ptr<_1a88a0186_FnCallExpr>* _101448_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890b511__Value(_self_, _101433_e, _101448_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_101321_method));;
			}
		}
		else if (_match_expr == jule::Str("Fields", 6)) {
			_case_begin_1aa656567:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _102021_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _102133_e, jule::Ptr<_1a88a0186_FnCallExpr>* _102148_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890b8b8__Fields(_self_, _102133_e, _102148_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_102021_method));;
			}
		}
		else if (_match_expr == jule::Str("Statics", 7)) {
			_case_begin_1aa6569b8:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _102721_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _102833_e, jule::Ptr<_1a88a0186_FnCallExpr>* _102848_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890bc70__Statics(_self_, _102833_e, _102848_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_102721_method));;
			}
		}
		else if (_match_expr == jule::Str("Params", 6)) {
			_case_begin_1aa656a40:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _103421_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _103533_e, jule::Ptr<_1a88a0186_FnCallExpr>* _103548_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890e46a__Params(_self_, _103533_e, _103548_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_103421_method));;
			}
		}
		else if (_match_expr == jule::Str("Types", 5)) {
			_case_begin_1aa656ab7:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _104121_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _104233_e, jule::Ptr<_1a88a0186_FnCallExpr>* _104248_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890d49c__Types(_self_, _104233_e, _104248_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_104121_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1aa656b3e:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _104821_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _104933_e, jule::Ptr<_1a88a0186_FnCallExpr>* _104948_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890c127__Public(_self_, _104933_e, _104948_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_104821_method));;
			}
		}
		else if (_match_expr == jule::Str("Binded", 6)) {
			_case_begin_1aa656bb6:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _105521_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _105633_e, jule::Ptr<_1a88a0186_FnCallExpr>* _105648_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890c4ce__Binded(_self_, _105633_e, _105648_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_105521_method));;
			}
		}
		else if (_match_expr == jule::Str("Ordered", 7)) {
			_case_begin_1aa656c3d:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _106221_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _106333_e, jule::Ptr<_1a88a0186_FnCallExpr>* _106348_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890c886__Ordered(_self_, _106333_e, _106348_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_106221_method));;
			}
		}
		else if (_match_expr == jule::Str("Comparable", 10)) {
			_case_begin_1aa656cb5:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _106921_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _107033_e, jule::Ptr<_1a88a0186_FnCallExpr>* _107048_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890cc3d__Comparable(_self_, _107033_e, _107048_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_106921_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1aa656d3c:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _107621_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _107733_e, jule::Ptr<_1a88a0186_FnCallExpr>* _107748_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890d0e5__Mutable(_self_, _107733_e, _107748_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_107621_method));;
			}
		}
		else if (_match_expr == jule::Str("Exceptional", 11)) {
			_case_begin_1aa656db4:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _108321_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _108433_e, jule::Ptr<_1a88a0186_FnCallExpr>* _108448_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890d854__Exceptional(_self_, _108433_e, _108448_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_108321_method));;
			}
		}
		else if (_match_expr == jule::Str("CanNil", 6)) {
			_case_begin_1aa656e3b:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _109021_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _109133_e, jule::Ptr<_1a88a0186_FnCallExpr>* _109148_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890dc0b__CanNil(_self_, _109133_e, _109148_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_109021_method));;
			}
		}
		else if (_match_expr == jule::Str("Result", 6)) {
			_case_begin_1aa656eb3:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _109721_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _109833_e, jule::Ptr<_1a88a0186_FnCallExpr>* _109848_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890e0b3__Result(_self_, _109833_e, _109848_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_109721_method));;
			}
		}
		else if (_match_expr == jule::Str("Kind", 4)) {
			_case_begin_1aa65703a:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _110421_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _110533_e, jule::Ptr<_1a88a0186_FnCallExpr>* _110548_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a890a18b__Kind(_self_, _110533_e, _110548_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_110421_method));;
			}
		}
		else {
			_case_begin_1aa6562ae:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa656204:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a8909069_comptimeTypeInfo _Src) {
	_Stream << _1a89093cc_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a890edc7_Str(_1a890ea64_comptimeValue* _self_) {
	return jule::Str("comptimeValue", 13);;
}



inline jule::Bool _1a89101d5_Equal(jule::Ptr<_1a890ea64_comptimeValue> _self_, jule::Ptr<_1a86ae79d_TypeKind> _112321_other) {
	return false;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a89106e1__Unwrap(jule::Ptr<_1a890ea64_comptimeValue> _self_, jule::Ptr<_1a8683860_Eval>* _112732_e, jule::Ptr<_1a88a0186_FnCallExpr>* _112747_fc) {
	if (((*(_112747_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_112732_e)).ptr(), (*(_112747_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Unwrap", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return _self_.get()._field_data;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8910a98__Type(jule::Ptr<_1a890ea64_comptimeValue> _self_, jule::Ptr<_1a8683860_Eval>* _113530_e, jule::Ptr<_1a88a0186_FnCallExpr>* _113545_fc) {
	if (((*(_113545_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_113530_e)).ptr(), (*(_113545_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1a89156b3_buildComptimeTypeInfoData(&((*(_113530_e)).get()._field_s), &(_self_.get()._field_data.get()._field_Kind));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8910e50__Lvalue(jule::Ptr<_1a890ea64_comptimeValue> _self_, jule::Ptr<_1a8683860_Eval>* _114332_e, jule::Ptr<_1a88a0186_FnCallExpr>* _114347_fc) {
	if (((*(_114347_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_114332_e)).ptr(), (*(_114347_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Lvalue", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _114817_constant = static__1a5541138_NewBool(_self_.get()._field_data.get()._field_Lvalue);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_114817_constant, &__jule_any_type19), ._field_Constant=_114817_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8911307__Mutable(jule::Ptr<_1a890ea64_comptimeValue> _self_, jule::Ptr<_1a8683860_Eval>* _115633_e, jule::Ptr<_1a88a0186_FnCallExpr>* _115648_fc) {
	if (((*(_115648_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_115633_e)).ptr(), (*(_115648_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _116117_constant = static__1a5541138_NewBool(_self_.get()._field_data.get()._field_Mutable);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_116117_constant, &__jule_any_type19), ._field_Constant=_116117_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a89116ae__Const(jule::Ptr<_1a890ea64_comptimeValue> _self_, jule::Ptr<_1a8683860_Eval>* _116931_e, jule::Ptr<_1a88a0186_FnCallExpr>* _116946_fc) {
	if (((*(_116946_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_116931_e)).ptr(), (*(_116946_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Const", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _117417_constant = static__1a5541138_NewBool(_1a865e50b_IsConst(_self_.get()._field_data.ptr()));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_117417_constant, &__jule_any_type19), ._field_Constant=_117417_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8911a66__Field(jule::Ptr<_1a890ea64_comptimeValue> _self_, jule::Ptr<_1a8683860_Eval>* _118231_e, jule::Ptr<_1a88a0186_FnCallExpr>* _118246_fc) {
	if (((*(_118246_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a88b9b51_StructIns> _118717_s = _1a86b341c_Struct(_self_.get()._field_data.get()._field_Kind.ptr());;
	if ((_118717_s == nullptr)) {
		_1a8683d6b_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_self_.get()._field_data.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a889b270_Expr> _119217_arg = (*(_118246_fc)).get()._field_Args[0LL];;
	jule::Ptr<_1a865dbe2_Data> _119317_d = _1a86a032c_evalExpr((*(_118231_e)), _119217_arg);;
	if ((_119317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a865e50b_IsConst(_119317_d.ptr())))) {
		_1a8683d6b_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a86b7003_Prim> _120113_prim = _1a86b1eba_Prim(_119317_d.get()._field_Kind.ptr());;
	if (((_120113_prim == nullptr) || (!(_1a86ba204_IsStr(_120113_prim.ptr()))))) {
		_1a8683d6b_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_119317_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Str _120613_ident = _1a5542700_ReadStr(_119317_d.get()._field_Constant.ptr());;
	jule::Ptr<_1a88b915b_FieldIns> _120717_f = _1a88bae0a_FindField(_118717_s.ptr(), _120613_ident);;
	if ((_120717_f == nullptr)) {
		_1a8683d6b_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_118717_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_120613_ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_119317_d=jule::new_ptr<_1a865dbe2_Data>((*(_self_.get()._field_data)));
	_119317_d=_1a8698952_evalStructSubIdentField((*(_118231_e)).ptr(), &(_119317_d), &(_118717_s), &(_119217_arg.get()._field_Token), &(_120717_f));
	return _1a89159e3_buildComptimeValue(&(_119317_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8911d74_subIdent(jule::Ptr<_1a890ea64_comptimeValue> _self_, jule::Str _121728_ident) {
	{
		auto &_match_expr{ _121728_ident };
		
		if (_match_expr == jule::Str("Unwrap", 6)) {
			_case_begin_1ab82dcd2:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _122021_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _122133_e, jule::Ptr<_1a88a0186_FnCallExpr>* _122148_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a89106e1__Unwrap(_self_, _122133_e, _122148_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_122021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1ab82dd48:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _122721_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _122833_e, jule::Ptr<_1a88a0186_FnCallExpr>* _122848_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a8910a98__Type(_self_, _122833_e, _122848_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_122721_method));;
			}
		}
		else if (_match_expr == jule::Str("Lvalue", 6)) {
			_case_begin_1ab82db28:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _123421_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _123533_e, jule::Ptr<_1a88a0186_FnCallExpr>* _123548_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a8910e50__Lvalue(_self_, _123533_e, _123548_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_123421_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1ab82dba0:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _124121_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _124233_e, jule::Ptr<_1a88a0186_FnCallExpr>* _124248_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a8911307__Mutable(_self_, _124233_e, _124248_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_124121_method));;
			}
		}
		else if (_match_expr == jule::Str("Const", 5)) {
			_case_begin_1ab82dc27:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _124821_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _124933_e, jule::Ptr<_1a88a0186_FnCallExpr>* _124948_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a89116ae__Const(_self_, _124933_e, _124948_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_124821_method));;
			}
		}
		else if (_match_expr == jule::Str("Field", 5)) {
			_case_begin_1ab82d81a:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _125521_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _125633_e, jule::Ptr<_1a88a0186_FnCallExpr>* _125648_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a8911a66__Field(_self_, _125633_e, _125648_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_125521_method));;
			}
		}
		else {
			_case_begin_1ab82d6b6:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab82d61c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a890ea64_comptimeValue _Src) {
	_Stream << _1a890edc7_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a89124c3_Str(_1a8912160_comptimeFiles* _self_) {
	return jule::Str("comptimeFiles", 13);;
}



inline jule::Bool _1a89127d1_Equal(jule::Ptr<_1a8912160_comptimeFiles> _self_, jule::Ptr<_1a86ae79d_TypeKind> _127421_other) {
	return false;;
}



inline void _1a8912c10_ready(_1a8912160_comptimeFiles* _self_, jule::Ptr<_1a8966901_Var>* _127829_keyA, jule::Ptr<_1a8966901_Var>* _127846_keyB) {
	if (((*(_127829_keyA)) != nullptr)) {
		(*(_127829_keyA)).get()._field_Constant=true;
		(*(_127829_keyA)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		(*(_127829_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_127829_keyA)).get()._field_Kind=_1a8776b2e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_127846_keyB)) != nullptr)) {
		(*(_127846_keyB)).get()._field_Constant=true;
		(*(_127846_keyB)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		(*(_127846_keyB)).get()._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a8913628_comptimeFile>(), 18)})});
	};
}



inline void _1a89130c8_step(_1a8912160_comptimeFiles* _self_, jule::I64 _130023_i, jule::Ptr<_1a8966901_Var>* _130036_keyA, jule::Ptr<_1a8966901_Var>* _130053_keyB) {
	if (((*(_130036_keyA)) != nullptr)) {
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_130023_i)));
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_130053_keyB)) != nullptr)) {
		(*(_130053_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind.cast_ptr<_1a8913628_comptimeFile>(18).get()._field_file=(*(_self_))._field_files[_130023_i];
	};
}



inline jule::I64 _1a891333c_len(_1a8912160_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8912160_comptimeFiles _Src) {
	_Stream << _1a89124c3_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a891398b_Str(_1a8913628_comptimeFile* _self_) {
	return jule::Str("comptimeFile", 12);;
}



inline jule::Bool _1a8913c99_Equal(jule::Ptr<_1a8913628_comptimeFile> _self_, jule::Ptr<_1a86ae79d_TypeKind> _132421_other) {
	return false;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8914272__Path(jule::Ptr<_1a8913628_comptimeFile> _self_, jule::Ptr<_1a8683860_Eval>* _132830_e, jule::Ptr<_1a88a0186_FnCallExpr>* _132845_fc) {
	if (((*(_132845_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_132830_e)).ptr(), (*(_132845_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Path", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _133317_constant = static__1a55413d0_NewStr(_self_.get()._field_file.get()._field_File.get()._field_Path);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Model=jule::Any(_133317_constant, &__jule_any_type19), ._field_Constant=_133317_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8914629__Name(jule::Ptr<_1a8913628_comptimeFile> _self_, jule::Ptr<_1a8683860_Eval>* _134130_e, jule::Ptr<_1a88a0186_FnCallExpr>* _134145_fc) {
	if (((*(_134145_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_134130_e)).ptr(), (*(_134145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _134617_constant = static__1a55413d0_NewStr(_1a526e1eb_Name(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Model=jule::Any(_134617_constant, &__jule_any_type19), ._field_Constant=_134617_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a89149d1__Dir(jule::Ptr<_1a8913628_comptimeFile> _self_, jule::Ptr<_1a8683860_Eval>* _135429_e, jule::Ptr<_1a88a0186_FnCallExpr>* _135444_fc) {
	if (((*(_135444_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_135429_e)).ptr(), (*(_135444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Dir", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a55406ba_Const> _135917_constant = static__1a55413d0_NewStr(_1a526de87_Dir(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Model=jule::Any(_135917_constant, &__jule_any_type19), ._field_Constant=_135917_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8914cde_subIdent(jule::Ptr<_1a8913628_comptimeFile> _self_, jule::Str _136728_ident) {
	{
		auto &_match_expr{ _136728_ident };
		
		if (_match_expr == jule::Str("Path", 4)) {
			_case_begin_1ab848082:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _137021_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _137133_e, jule::Ptr<_1a88a0186_FnCallExpr>* _137148_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a8914272__Path(_self_, _137133_e, _137148_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_137021_method));;
			}
		}
		else if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1ab8480e8:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _137721_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _137833_e, jule::Ptr<_1a88a0186_FnCallExpr>* _137848_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a8914629__Name(_self_, _137833_e, _137848_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_137721_method));;
			}
		}
		else if (_match_expr == jule::Str("Dir", 3)) {
			_case_begin_1ab847da6:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _138421_method = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>([=](jule::Ptr<_1a8683860_Eval>* _138533_e, jule::Ptr<_1a88a0186_FnCallExpr>* _138548_fc, jule::Ptr<_1a865dbe2_Data>* ) mutable -> jule::Ptr<_1a865dbe2_Data> {
					return _1a89149d1__Dir(_self_, _138533_e, _138548_fc);;
				}), });;
				return _1a8915163_buildAsComptimeMethodData(&(_138421_method));;
			}
		}
		else {
			_case_begin_1ab847977:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab847647:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a8913628_comptimeFile _Src) {
	_Stream << _1a891398b_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1a89465e5_Sema>*,jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>*)> _1a891786e_readyFn(jule::Ptr<_1a8917484_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1a89465e5_Sema>*,jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>*)>([=](jule::Ptr<_1a89465e5_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab856249:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_1a88a408b_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1a86ad01b_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1ab856249;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab858405:;
						if (it != expr_end) {
							jule::Ptr<_1a88970e5_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_1a86ae79d_TypeKind> _7229_kind = _1a894d971_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1a86ccac9_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1ab85a0a5:;
											{
												jule::Ptr<_1a88976ab_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1a88976ab_IdentTypeDecl>(&__jule_any_type20);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1a8918a4b_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(_7637_itd.get()._field_Ident), 20)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1ab85a050:;
									};
									return false;;
								};
								_julec_label_success:;
								{ jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> &__jule_push_dest = _6525_generic.get()._field_Constraint; __jule_push_dest.push(_7229_kind); };
							}
							_iter_next_1ab858405:;
							++it;
							goto _iter_begin_1ab858405;
						}
						_iter_end_1ab858405:;
					};
				}
				_iter_next_1ab856249:;
				++it;
				_6418_i++;
				goto _iter_begin_1ab856249;
			}
			_iter_end_1ab856249:;
		};
		return true;;
	});;
}



inline jule::Bool _1a8917ad3_readyFi(jule::Ptr<_1a8917484_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1a895304c_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _1a891786e_readyFn(_self_)));;
}



inline jule::Bool _1a8917d47_readySi(jule::Ptr<_1a8917484_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1a891786e_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _1a89180ab_ready(jule::Ptr<_1a8917484_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1a8917ad3_readyFi(_self_);;
	};
	return _1a8917d47_readySi(_self_);;
}



inline jule::Bool _1a8918320_check(jule::Ptr<_1a8917484_constraintChecker> _self_) {
	if ((!(_1a89180ab_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab861bc2:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_1a86ad01b_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1ab861bc2;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab86272d:;
					if (it != expr_end) {
						jule::Ptr<_1a86ae79d_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1a86b7003_Prim> _12425_prim = _1a86b1eba_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1a86b7ab4_IsConstraint(_12425_prim.ptr()))) {
								if (_1a8918760_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1ab861bc2;
								};
								goto _iter_next_1ab86272d;
							};
							if (_1a86aee63_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1ab861bc2;
							};
						}
						_iter_next_1ab86272d:;
						++it;
						goto _iter_begin_1ab86272d;
					}
					_iter_end_1ab86272d:;
				};
				_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1ab861bc2:;
			++it;
			_11914_i++;
			goto _iter_begin_1ab861bc2;
		}
		_iter_end_1ab861bc2:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8917484_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a89196d9_IsTraitImpl(_1a8919332_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1a891994d_IsStructImpl(_1a8919332_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8919332_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a891e38c_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a891e788_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a891ea74_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a891ede8_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a89201d4_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8920657_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a892103c_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8921438_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a89217e0_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8921acb_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8921db7_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a892226e_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a89226e2_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8922a99_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a89231a4_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8923bee_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a89242c6_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8924628_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8924c33_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a89251a6_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a892643d_SelectPackage(_1a8925eba_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)> _45632_selector) {
	return _1a8946a68_SelectPackage((*(_self_))._field_s.ptr(), _45632_selector);;
}



inline jule::Ptr<_1a8966901_Var> _1a89267e5_FindVar(_1a8925eba_scopeChecker* _self_, jule::Str _46726_ident, jule::Bool _46738_binded) {
	;
	jule::Ptr<_1a8966901_Var> _47017_v = _1a89ad805_findVar((*(_self_))._field_table.ptr(), _46726_ident, _46738_binded, true);;
	if ((_47017_v != nullptr)) {
		return _47017_v;;
	};
	jule::Ptr<_1a8925eba_scopeChecker> _47517_parent = (*(_self_))._field_parent;;
	while ((_47517_parent != nullptr)) {
		{
			_47017_v=_1a89ad805_findVar(_47517_parent.get()._field_table.ptr(), _46726_ident, _46738_binded, true);
			if ((_47017_v != nullptr)) {
				return _47017_v;;
			};
			_47517_parent=_47517_parent.get()._field_parent;
		}
	_iter_next_1ab88d89c:;
	}
	_iter_end_1ab88d89c:;;
	return _1a8946e20_FindVar((*(_self_))._field_s.ptr(), _46726_ident, _46738_binded);;
}



inline jule::Ptr<_1a86ada55_TypeAlias> _1a8926b9c_FindTypeAlias(_1a8925eba_scopeChecker* _self_, jule::Str _49432_ident, jule::Bool _49444_binded) {
	;
	jule::Ptr<_1a86ada55_TypeAlias> _49717_ta = _1a89adc56_findTypeAlias((*(_self_))._field_table.ptr(), _49432_ident, _49444_binded, true);;
	if ((_49717_ta != nullptr)) {
		return _49717_ta;;
	};
	jule::Ptr<_1a8925eba_scopeChecker> _50217_parent = (*(_self_))._field_parent;;
	while ((_50217_parent != nullptr)) {
		{
			_49717_ta=_1a89adc56_findTypeAlias(_50217_parent.get()._field_table.ptr(), _49432_ident, _49444_binded, true);
			if ((_49717_ta != nullptr)) {
				return _49717_ta;;
			};
			_50217_parent=_50217_parent.get()._field_parent;
		}
	_iter_next_1ab891460:;
	}
	_iter_end_1ab891460:;;
	return _1a89472c7_FindTypeAlias((*(_self_))._field_s.ptr(), _49432_ident, _49444_binded);;
}



inline jule::Ptr<_1a88b6d3a_Struct> _1a8927054_FindStruct(_1a8925eba_scopeChecker* _self_, jule::Str _51929_ident, jule::Bool _51941_binded) {
	return _1a894767e_FindStruct((*(_self_))._field_s.ptr(), _51929_ident, _51941_binded);;
}



inline jule::Ptr<_1a88cc25c_Fn> _1a892740b_FindFn(_1a8925eba_scopeChecker* _self_, jule::Str _52825_ident, jule::Bool _52837_binded) {
	return _1a8947a36_FindFn((*(_self_))._field_s.ptr(), _52825_ident, _52837_binded);;
}



inline jule::Ptr<_1a88de47d_Trait> _1a8927719_FindTrait(_1a8925eba_scopeChecker* _self_, jule::Str _53728_ident) {
	return _1a8947d44_FindTrait((*(_self_))._field_s.ptr(), _53728_ident);;
}



inline jule::Ptr<_1a88e1c11_Enum> _1a8927a27_FindEnum(_1a8925eba_scopeChecker* _self_, jule::Str _54627_ident) {
	return _1a8948152_FindEnum((*(_self_))._field_s.ptr(), _54627_ident);;
}



inline jule::Ptr<_1a88e330b_TypeEnum> _1a8927d35_FindTypeEnum(_1a8925eba_scopeChecker* _self_, jule::Str _55531_ident) {
	return _1a8948460_FindTypeEnum((*(_self_))._field_s.ptr(), _55531_ident);;
}



inline jule::Bool _1a8928165_isUnsafe(jule::Ptr<_1a8925eba_scopeChecker> _self_) {
	jule::Ptr<_1a8925eba_scopeChecker> _56317_scope = _self_;;
	_julec_label_iter:;
	if (_56317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_56317_scope.get()._field_parent != nullptr)) {
		_56317_scope=_56317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1a89283c9_isRoot(_1a8925eba_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1a89285a5_stop(_1a8925eba_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1a8928819_stopped(_1a8925eba_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1a8928a7d_isDeferred(jule::Ptr<_1a8925eba_scopeChecker> _self_) {
	jule::Ptr<_1a8925eba_scopeChecker> _59617_scope = _self_;;
	_julec_label_iter:;
	if (_59617_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_59617_scope.get()._field_parent != nullptr)) {
		_59617_scope=_59617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1a8925eba_scopeChecker> _1a8928ce2_getRoot(jule::Ptr<_1a8925eba_scopeChecker> _self_) {
	jule::Ptr<_1a8925eba_scopeChecker> _61417_root = _self_;;
	while (((_61417_root.get()._field_parent != nullptr) && (_61417_root.get()._field_owner == nullptr))) {
		{
			_61417_root=_61417_root.get()._field_parent;
		}
	_iter_next_1ab89a414:;
	}
	_iter_end_1ab89a414:;;
	return _61417_root;;
}



inline jule::Ptr<_1a8925eba_scopeChecker> _1a8929056_getHardRoot(jule::Ptr<_1a8925eba_scopeChecker> _self_) {
	jule::Ptr<_1a8925eba_scopeChecker> _62417_root = _self_;;
	while ((_62417_root.get()._field_parent != nullptr)) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1ab89b4e2:;
	}
	_iter_end_1ab89b4e2:;;
	return _62417_root;;
}



inline jule::Ptr<_1a8921acb_Label> _1a8929364_findLabel(_1a8925eba_scopeChecker* _self_, jule::Str _63428_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab89c02b:;
		if (it != expr_end) {
			jule::Any _63521_st = *it;
			{
				{
					auto &_match_expr{ _63521_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1ab89ca43:;
						{
							jule::Ptr<_1a8921acb_Label> _63825_label = _63521_st.cast_ptr<_1a8921acb_Label>(&__jule_any_type21);;
							if ((_63825_label.get()._field_Ident == _63428_ident)) {
								return _63825_label;;
							};
						}
					}
					_match_end_1ab89c944:;
				};
			}
			_iter_next_1ab89c02b:;
			++it;
			goto _iter_begin_1ab89c02b;
		}
		_iter_end_1ab89c02b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8924c33_scopeLabel> _1a8929672_findLabelScope(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Str _65034_ident) {
	jule::Ptr<_1a8924c33_scopeLabel> _65117_label = _1a8929980_findLabelAll(_self_.ptr(), _65034_ident);;
	if (((_65117_label != nullptr) && (_65117_label.get()._field_scope == _self_))) {
		return _65117_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8924c33_scopeLabel> _1a8929980_findLabelAll(_1a8925eba_scopeChecker* _self_, jule::Str _66231_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab89eb55:;
		if (it != expr_end) {
			jule::Ptr<_1a8924c33_scopeLabel> _66321_lbl = *it;
			{
				if ((_66321_lbl.get()._field_label.get()._field_Ident == _66231_ident)) {
					return _66321_lbl;;
				};
			}
			_iter_next_1ab89eb55:;
			++it;
			goto _iter_begin_1ab89eb55;
		}
		_iter_end_1ab89eb55:;
	};
	return nullptr;;
}



inline jule::Bool _1a8929d37_isDuplicatedIdent(_1a8925eba_scopeChecker* _self_, jule::Uintptr _67436_itself, jule::Str _67453_ident) {
	jule::Ptr<_1a8966901_Var> _67513_v = _1a89267e5_FindVar(_self_, _67453_ident, false);;
	if (((_67513_v != nullptr) && (static_cast<jule::Uintptr>(_67513_v) != _67436_itself))) {
		if ((_67513_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_67513_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_1a8948839_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1a86ada55_TypeAlias> _68313_ta = _1a8926b9c_FindTypeAlias(_self_, _67453_ident, false);;
	if (((_68313_ta != nullptr) && (static_cast<jule::Uintptr>(_68313_ta) != _67436_itself))) {
		if ((_68313_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_1a8948839_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1a892a0ac_checkVarDecl(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a9701_VarDecl> _69436_decl) {
	jule::Ptr<_1a8966901_Var> _69517_v = _1a88d7d4a_buildVar(_69436_decl);;
	_69517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = _self_.get()._field_table.get()._field_Vars; __jule_push_dest.push(_69517_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_69517_v, &__jule_any_type8)); };
	});;
	if (_1a8929d37_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69517_v)), _69517_v.get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _69517_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_69517_v.get()._field_Ident, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a89285a5_stop(_self_.ptr());
		return;;
	};
	_1a895a120_checkVarDecl(_self_.get()._field_s, &(_69517_v), jule::Trait<_1a86ccac9_Lookup>(_self_, 0));
	if (((!(_1a8966ed9_IsTypeInferred(_69517_v.ptr()))) && ((_69517_v.get()._field_Kind == nullptr) || (_69517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1a895dce4_checkTypeVar(_self_.get()._field_s, &(_69517_v), jule::Trait<_1a86ccac9_Lookup>(_self_, 0));
}



inline void _1a892a332_checkTypeAliasDecl(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88ad062_TypeAliasDecl> _71842_decl) {
	jule::Ptr<_1a86ada55_TypeAlias> _71917_ta = _1a88d4a7d_buildTypeAlias(_71842_decl);;
	if (_1a8929d37_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_71917_ta)), _71917_ta.get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _71917_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_71917_ta.get()._field_Ident, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a89285a5_stop(_self_.ptr());
		return;;
	};
	_1a8954812_checkTypeAliasDecl(_self_.get()._field_s, &(_71917_ta), jule::Trait<_1a86ccac9_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> &__jule_push_dest = _self_.get()._field_table.get()._field_TypeAliases; __jule_push_dest.push(_71917_ta); };
	if ((_71917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1a89285a5_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1a891e38c_Scope> _1a892a596_getChild(_1a8925eba_scopeChecker* _self_) {
	return jule::new_ptr<_1a891e38c_Scope>(_1a891e38c_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1a892a95e_checkChildSsc(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a6c2b_ScopeTree>* _74238_tree, jule::Ptr<_1a891e38c_Scope>* _74261_s, jule::Ptr<_1a8925eba_scopeChecker>* _74277_ssc) {
	(*(_74277_ssc)).get()._field_parent=_self_;
	_1a8936184_check((*(_74277_ssc)), _74238_tree, _74261_s);
}



inline jule::Ptr<_1a891e38c_Scope> _1a892ad16_checkChildSc(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a6c2b_ScopeTree>* _74737_tree, jule::Ptr<_1a8925eba_scopeChecker>* _74760_ssc) {
	jule::Ptr<_1a891e38c_Scope> _74817_s = _1a892a596_getChild(_self_.ptr());;
	_1a892a95e_checkChildSsc(_self_, _74737_tree, &(_74817_s), _74760_ssc);
	return _74817_s;;
}



inline jule::Ptr<_1a891e38c_Scope> _1a892b124_checkChild(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a6c2b_ScopeTree>* _75335_tree) {
	jule::Ptr<_1a8925eba_scopeChecker> _75417_ssc = _1a89363e8_newChildChecker(_self_);;
	return _1a892ad16_checkChildSc(_self_, _75335_tree, &(_75417_ssc));;
}



inline void _1a892b399_checkAnonScope(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a6c2b_ScopeTree> _75838_tree) {
	jule::Ptr<_1a891e38c_Scope> _75917_s = _1a892b124_checkChild(_self_, &(_75838_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_75917_s, &__jule_any_type22)); };
}



inline void _1a892b6b8_processErrorCall(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88c83bd_BuiltinErrorCallExprModel>* _76341_m, jule::Ptr<_1a52684c0_Token> _76372_err) {
	if (_1a8928a7d_isDeferred(_self_)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a8925eba_scopeChecker> _76817_root = _1a8928ce2_getRoot(_self_);;
	if ((!(_76817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1a8949296_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_76341_m)).get()._field_Func=_76817_root.get()._field_owner;
}



inline void _1a892b93d_checkExpr(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a889b270_Expr> _77633_expr) {
	jule::Ptr<_1a8683860_Eval> _77717_eval = _1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0));;
	_77717_eval.get()._field_ignored=true;
	jule::Ptr<_1a865dbe2_Data> _77917_d = _1a86a032c_evalExpr(_77717_eval, _77633_expr);;
	if ((_77917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _77917_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab8b45c6:;
			{
				jule::Ptr<_1a88c83bd_BuiltinErrorCallExprModel> _78621_m = _77917_d.get()._field_Model.cast_ptr<_1a88c83bd_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1a892b6b8_processErrorCall(_self_, &(_78621_m), _77633_expr.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_77917_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_1ab8b47d5:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_77917_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1ab8b4681:;
			{
				_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _77633_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab8b476e:;
	};
}



inline jule::Ptr<_1a891e788_If> _1a892bc4b_checkIf(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88ac061_If> _80631_i) {
	jule::Ptr<_1a891e38c_Scope> _80717_s = _1a892b124_checkChild(_self_, &(_80631_i.get()._field_Scope));;
	jule::Ptr<_1a865dbe2_Data> _80917_d = _1a86a032c_evalExpr(_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0)), _80631_i.get()._field_Expr);;
	if ((_80917_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a86b7003_Prim> _81417_prim = _1a86b1eba_Prim(_80917_d.get()._field_Kind.ptr());;
	if (((_81417_prim == nullptr) || (!(_1a86b9e90_IsBool(_81417_prim.ptr()))))) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _80631_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a891e788_If>(_1a891e788_If{._field_Expr=_80917_d.get()._field_Model, ._field_Scope=_80717_s});;
}



inline jule::Ptr<_1a891ea74_Else> _1a892c059_checkElse(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88ac418_Else> _82633_e) {
	return jule::new_ptr<_1a891ea74_Else>(_1a891ea74_Else{._field_Scope=_1a892b124_checkChild(_self_, &(_82633_e.get()._field_Scope))});;
}



inline void _1a892c2ce_checkConditional(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88ac88b_Conditional> _83240_conditional) {
	jule::Ptr<_1a891ede8_Conditional> _83317_c = jule::new_ptr<_1a891ede8_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_83317_c, &__jule_any_type36)); };
	_83317_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1a891e788_If>>::alloc(0LL, (_83240_conditional.get()._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1a891e788_If>> &__jule_push_dest = _83317_c.get()._field_Elifs; __jule_push_dest.push(_1a892bc4b_checkIf(_self_, _83240_conditional.get()._field_Head)); };
	{
		auto expr = &(_83240_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8bd9ed:;
		if (it != expr_end) {
			jule::Ptr<_1a88ac061_If> _83921_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1a891e788_If>> &__jule_push_dest = _83317_c.get()._field_Elifs; __jule_push_dest.push(_1a892bc4b_checkIf(_self_, _83921_elif)); };
			}
			_iter_next_1ab8bd9ed:;
			++it;
			goto _iter_begin_1ab8bd9ed;
		}
		_iter_end_1ab8bd9ed:;
	};
	if ((_83240_conditional.get()._field_Default != nullptr)) {
		_83317_c.get()._field_Default=_1a892c059_checkElse(_self_, _83240_conditional.get()._field_Default);
	};
}



inline void _1a892c741_checkIterScopeSsc(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Uintptr _84837_it, jule::Ptr<_1a88a6c2b_ScopeTree> _84854_tree, jule::Ptr<_1a891e38c_Scope>* _84877_s, jule::Ptr<_1a8925eba_scopeChecker> _84892_ssc) {
	_84892_ssc.get()._field_it=_84837_it;
	_1a892a95e_checkChildSsc(_self_, &(_84854_tree), _84877_s, &(_84892_ssc));
}



inline jule::Ptr<_1a891e38c_Scope> _1a892cb92_checkIterScopeSc(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Uintptr _85336_it, jule::Ptr<_1a88a6c2b_ScopeTree> _85353_tree, jule::Ptr<_1a8925eba_scopeChecker> _85375_ssc) {
	jule::Ptr<_1a891e38c_Scope> _85417_scope = _1a892a596_getChild(_self_.ptr());;
	_1a892c741_checkIterScopeSsc(_self_, _85336_it, _85353_tree, &(_85417_scope), _85375_ssc);
	return _85417_scope;;
}



inline jule::Ptr<_1a891e38c_Scope> _1a892d049_checkIterScope(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Uintptr _85934_it, jule::Ptr<_1a88a6c2b_ScopeTree>* _85952_tree) {
	jule::Ptr<_1a8925eba_scopeChecker> _86017_ssc = _1a89363e8_newChildChecker(_self_);;
	return _1a892cb92_checkIterScopeSc(_self_, _85934_it, (*(_85952_tree)), _86017_ssc);;
}



inline void _1a892d2be_checkInfIter(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88aa218_Iter>* _86437_it) {
	jule::Ptr<_1a89201d4_InfIter> _86517_kind = jule::new_ptr<_1a89201d4_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_86517_kind, &__jule_any_type37)); };
	_86517_kind.get()._field_Scope=_1a892d049_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_86517_kind)), &((*(_86437_it)).get()._field_Scope));
}



inline void _1a892d544_checkWhileIter(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88aa218_Iter>* _87039_it) {
	jule::Ptr<_1a88aa9dd_WhileKind> _87117_wh = (*(_87039_it)).get()._field_Kind.cast_ptr<_1a88aa9dd_WhileKind>(&__jule_any_type38);;
	if (((_87117_wh.get()._field_Expr == nullptr) && (_87117_wh.get()._field_Next == nullptr))) {
		_1a892d2be_checkInfIter(_self_, _87039_it);
		return;;
	};
	jule::Ptr<_1a8920657_WhileIter> _87717_kind = jule::new_ptr<_1a8920657_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_87717_kind, &__jule_any_type39)); };
	_87717_kind.get()._field_Scope=_1a892d049_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87717_kind)), &((*(_87039_it)).get()._field_Scope));
	if ((_87117_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1a865dbe2_Data> _88221_d = _1a86a032c_evalExpr(_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0)), _87117_wh.get()._field_Expr);;
		if ((_88221_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a86b7003_Prim> _88717_prim = _1a86b1eba_Prim(_88221_d.get()._field_Kind.ptr());;
		if ((_88717_prim == nullptr)) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a86b9e90_IsBool(_88717_prim.ptr())))) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_87717_kind.get()._field_Expr=_88221_d.get()._field_Model;
	};
	if (_1a88aad40_IsWhileNext(_87117_wh.ptr())) {
		if ((!(_1a891d8b9_isValidAstStForNextSt(&(_87117_wh.get()._field_Next))))) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _90717_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1a8934e30_checkNode(_self_, &(_87117_wh.get()._field_Next));
		if ((_90717_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91025_st = _self_.get()._field_scope.get()._field_Stmts[_90717_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _90717_n);
			if ((!(_1a891db61_isValidStForNextSt(&(_91025_st))))) {
				_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_87717_kind.get()._field_Next=_91025_st;
		};
	};
}



inline void _1a892d90c_checkComptimeRangeIter(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88aa218_Iter>* _92047_it, jule::Ptr<_1a892103c_RangeIter>* _92063_kind, jule::Ptr<_1a865dbe2_Data>* _92086_d) {
	if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
		if (((!(_1a8948839_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a8929d37_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyA.get()._field_Ident))) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1a8949296_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
		if (((!(_1a8948839_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a8929d37_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyB.get()._field_Ident))) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1a8949296_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1a88e5462_comptimeRange> _93417_comptime = _1a86b50ab_comptimeRange((*(_92086_d)).get()._field_Kind.ptr());;
	_1a88e5286_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1a88e4a16_ready(_93417_comptime.get()._field_kind, &((*(_92063_kind)).get()._field_KeyA), &((*(_92063_kind)).get()._field_KeyB));
	jule::I64 _93617_i = 0LL;;
	jule::I64 _93713_errors = _self_.get()._field_s.get()._field_errors.len();;
	for (; (_93617_i < _1a88e5286_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1a88e5143_len(_93417_comptime.get()._field_kind)); (_93617_i)++) {
		{
			jule::Ptr<_1a8925eba_scopeChecker> _93921_ssc = _1a89363e8_newChildChecker(_self_);;
			jule::Ptr<_1a891e38c_Scope> _94021_scope = _1a892a596_getChild(_self_.ptr());;
			if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
				(*(_92063_kind)).get()._field_KeyA.get()._field_Scope=_94021_scope;
				{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = _93921_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92063_kind)).get()._field_KeyA); };
			};
			if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
				(*(_92063_kind)).get()._field_KeyB.get()._field_Scope=_94021_scope;
				{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = _93921_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92063_kind)).get()._field_KeyB); };
			};
			_1a88e5286_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1a88e4dce_step(_93417_comptime.get()._field_kind, _93617_i, &((*(_92063_kind)).get()._field_KeyA), &((*(_92063_kind)).get()._field_KeyB));
			_1a892a95e_checkChildSsc(_self_, &((*(_92047_it)).get()._field_Scope), &(_94021_scope), &(_93921_ssc));
			if ((_93713_errors != _self_.get()._field_s.get()._field_errors.len())) {
				goto _iter_end_1ab8d3a13;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_94021_scope, &__jule_any_type22)); };
		}
	_iter_next_1ab8d3a13:;
	}
	_iter_end_1ab8d3a13:;;
}



inline void _1a892db82_checkRangeIter(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88aa218_Iter>* _95939_it) {
	jule::Ptr<_1a88ab37e_RangeKind> _96017_rang = (*(_95939_it)).get()._field_Kind.cast_ptr<_1a88ab37e_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_1a865dbe2_Data> _96217_d = _1a86a001e_evalExpr1(_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0)), _96017_rang.get()._field_Expr);;
	if ((_96217_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a892103c_RangeIter> _96717_kind = jule::new_ptr<_1a892103c_RangeIter>(_1a892103c_RangeIter{._field_Expr=_96217_d, });;
	_1a89a6cb5_rangeChecker _97117_rc = _1a89a6cb5_rangeChecker{._field_sc=_self_, ._field_rang=_96017_rang, ._field_Kind=_96717_kind, ._field_d=_96217_d};;
	jule::Bool _97713_ok = _1a89a8adb_check(&_97117_rc);;
	if ((!(_97713_ok))) {
		return;;
	};
	jule::Ptr<_1a88e5462_comptimeRange> _98217_comptimeRange = _1a86b50ab_comptimeRange(_96217_d.get()._field_Kind.ptr());;
	if ((_98217_comptimeRange != nullptr)) {
		_1a892d90c_checkComptimeRangeIter(_self_, _95939_it, &(_96717_kind), &(_96217_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_96717_kind, &__jule_any_type41)); };
	jule::Ptr<_1a8925eba_scopeChecker> _99017_ssc = _1a89363e8_newChildChecker(_self_);;
	jule::Ptr<_1a891e38c_Scope> _99117_scope = _1a892a596_getChild(_self_.ptr());;
	if ((_96717_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1a8948839_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a8929d37_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyA.get()._field_Ident))) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1a8949296_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyA.get()._field_Scope=_99117_scope;
		{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = _99017_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_96717_kind.get()._field_KeyA); };
	};
	if ((_96717_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1a8948839_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a8929d37_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyB.get()._field_Ident))) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1a8949296_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyB.get()._field_Scope=_99117_scope;
		{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = _99017_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_96717_kind.get()._field_KeyB); };
	};
	_1a892c741_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96717_kind)), (*(_95939_it)).get()._field_Scope, &(_99117_scope), _99017_ssc);
	_96717_kind.get()._field_Scope=_99117_scope;
}



inline void _1a892de07_checkIter(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88aa218_Iter> _101533_it) {
	if (_1a88aa56a_IsInf(_101533_it.ptr())) {
		_1a892d2be_checkInfIter(_self_, &(_101533_it));
		return;;
	};
	{
		auto &_match_expr{ _101533_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ab8e4914:;
			{
				_1a892d544_checkWhileIter(_self_, &(_101533_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ab8e446e:;
			{
				_1a892db82_checkRangeIter(_self_, &(_101533_it));
			}
		}
		else {
			_case_begin_1ab8e3d86:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1ab8e3d31:;
	};
}



inline jule::Bool _1a892e215_checkValidContLabel(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Uintptr _103139_it) {
	jule::Ptr<_1a8925eba_scopeChecker> _103217_scope = _self_;;
	_julec_label_iter:;
	if ((_103217_scope.get()._field_it == _103139_it)) {
		return true;;
	};
	if ((_103217_scope.get()._field_parent != nullptr)) {
		_103217_scope=_103217_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1a892e523_checkValidBreakLabel(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Uintptr _104740_ptr) {
	jule::Ptr<_1a8925eba_scopeChecker> _104817_scope = _self_;;
	_julec_label_iter:;
	if ((_104817_scope.get()._field_it == _104740_ptr)) {
		return true;;
	};
	if ((_104817_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _105617_mtch = static_cast<jule::Uintptr>(((_1a8923bee_Case*)(_104817_scope.get()._field_cse))->_field_Owner);;
		if ((_105617_mtch == _104740_ptr)) {
			return true;;
		};
	};
	if ((_104817_scope.get()._field_parent != nullptr)) {
		_104817_scope=_104817_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1a8921438_ContSt> _1a892e831_checkContValidScope(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88abadd_ContSt> _107039_c) {
	if (_1a8928a7d_isDeferred(_self_)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_107039_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1a8921438_ContSt>();;
	};
	jule::Ptr<_1a8925eba_scopeChecker> _108017_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_108017_scope.get()._field_it == 0LLU) && (_108017_scope.get()._field_parent != nullptr)) && (_108017_scope.get()._field_owner == nullptr))) {
			_case_begin_1ab8eb850:;
			{
				_108017_scope=_108017_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_108017_scope.get()._field_it != 0LLU)) {
			_case_begin_1ab8eb8c7:;
			{
				return jule::new_ptr<_1a8921438_ContSt>(_1a8921438_ContSt{._field_It=_108017_scope.get()._field_it});;
			}
		}
		_match_end_1ab8eb795:;
	};
	_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a892eaa6_checkCont(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88abadd_ContSt> _109429_c) {
	jule::Ptr<_1a8921438_ContSt> _109517_cont = _1a892e831_checkContValidScope(_self_, _109429_c);;
	if ((_109517_cont == nullptr)) {
		return;;
	};
	if ((_109429_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1a8924c33_scopeLabel> _110121_label = _1a891ba93_findLabelParent(_109429_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_110121_label == nullptr)) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_110121_label.get()._field_used=true;
		if (((_110121_label.get()._field_pos + 1LL) >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I64 _111417_i = (_110121_label.get()._field_pos + 1LL);;
		if ((_111417_i >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _111825_st = _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_111417_i];;
			{
				auto &_match_expr{ _111825_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1ab904072:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1a89201d4_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_1ab9047ae:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1a892103c_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1ab904825:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1a8920657_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_1ab904627:;
					{
						_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1ab9045c2:;
			};
		};
	};
	if ((_109517_cont.get()._field_It != 0LLU)) {
		if ((!(_1a892e215_checkValidContLabel(_self_, _109517_cont.get()._field_It)))) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_109517_cont, &__jule_any_type42)); };
}



inline void _1a892ed2b_checkLabel(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a4443_LabelSt> _114134_l) {
	if ((_1a8929364_findLabel(_self_.ptr(), _114134_l.get()._field_Ident) != nullptr)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _114134_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_114134_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1a8921acb_Label> _114717_label = jule::new_ptr<_1a8921acb_Label>(_1a8921acb_Label{._field_Ident=_114134_l.get()._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_114717_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1a8924c33_scopeLabel>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(jule::new_ptr<_1a8924c33_scopeLabel>(_1a8924c33_scopeLabel{._field_token=_114134_l.get()._field_Token, ._field_label=_114717_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1a89300a1_pushGoto(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a47ea_GotoSt> _116032_gt) {
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1a8921db7_GotoSt>(_1a8921db7_GotoSt{._field_Ident=_116032_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type43)); };
	{ jule::Slice<jule::Ptr<_1a89251a6_scopeGoto>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1a89251a6_scopeGoto>(_1a89251a6_scopeGoto{._field_gt=_116032_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})); };
}



inline void _1a8930326_checkPostfix(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a5730_AssignSt> _117236_a) {
	if ((_117236_a.get()._field_Left.len() > 1LL)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a889b270_Expr> _117817_expr = _117236_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1a865dbe2_Data> _117917_d = _1a86a032c_evalExpr(_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0)), _117817_expr);;
	if ((_117917_d == nullptr)) {
		return;;
	};
	_1a891d622_checkAssign(&(_self_.get()._field_s), &(_117917_d), nullptr, _117236_a.get()._field_Setter);
	if ((_1a86b2493_Ptr(_117917_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a86bdcb8_Ptr> _118721_ptr = _1a86b2493_Ptr(_117917_d.get()._field_Kind.ptr());;
		if (_1a86be78b_IsUnsafe(_118721_ptr.ptr())) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_1a86b1eba_Prim(_117917_d.get()._field_Kind.ptr()) == nullptr) || (!(_1a55401ae_IsNum(_1a86b1eba_Prim(_117917_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1a892226e_Postfix>(_1a892226e_Postfix{._field_Expr=_117917_d.get()._field_Model, ._field_Op=_117236_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type44)); };
}



inline jule::Bool _1a8930634_isNewAssignIdent(_1a8925eba_scopeChecker* _self_, jule::Str _120535_ident) {
	if ((_1a526ac64_IsIgnoreIdent(_120535_ident) || _120535_ident.empty())) {
		return false;;
	};
	return (_1a89ae10d_defByIdent((*(_self_))._field_table.ptr(), _120535_ident, false) == nullptr);;
}



inline jule::Bool _1a8930a85_checkStructureAssignOp(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88b9b51_StructIns>* _121247_s, jule::Ptr<_1a88a5730_AssignSt>* _121267_a, jule::Ptr<_1a865dbe2_Data>* _121286_r) {
	jule::Ptr<_1a88cee0d_FnIns> _121517_overload = nullptr;;
	{
		auto &_match_expr{ (*(_121267_a)).get()._field_Setter.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ab91764b:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ab9161c7:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ab916617:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1ab91667d:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ab9166e4:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1ab91675a:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1ab9176b2:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1ab917728:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1ab91778e:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1ab917805:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1ab9165a1:;
			{
				_1a8948e77_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1a88b9eb4_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1ab91601d:;
	};
	if ((_121517_overload == nullptr)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1a88b9eb4_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1a88ce03e_ParamIns> _124717_p = _121517_overload.get()._field_Params[1LL];;
	return _1a8951215_checkAssignType(_self_.get()._field_s, _124717_p.get()._field_Decl.get()._field_Reference, &(_124717_p.get()._field_Kind), _121286_r, (*(_121267_a)).get()._field_Setter);;
}



inline void _1a8930d0a_checkSingleAssign(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a5730_AssignSt>* _125142_a) {
	jule::Ptr<_1a865dbe2_Data> _125217_l = nullptr;;
	if ((!(_1a526ac64_IsIgnoreIdent((*(_125142_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1a889b270_Expr> _125521_expr = (*(_125142_a)).get()._field_Left[0LL].get()._field_Expr;;
		_125217_l=_1a86a032c_evalExpr(_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0)), _125521_expr);
		if ((_125217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a8683860_Eval> _126217_eval = nullptr;;
	if ((_125217_l != nullptr)) {
		_126217_eval=_1a895090c_evalp(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0), _125217_l.get()._field_Kind);
	} else {
		_126217_eval=_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0));
	};
	_126217_eval.get()._field_unsafety=_1a8928165_isUnsafe(_self_);
	jule::Ptr<_1a865dbe2_Data> _126917_r = _1a86a032c_evalExpr(_126217_eval, (*(_125142_a)).get()._field_Right);;
	if ((_126917_r == nullptr)) {
		return;;
	};
	if ((_125217_l == nullptr)) {
		if (_1a86b0a68_Void(_126917_r.get()._field_Kind.ptr())) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_126917_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1a891d622_checkAssign(&(_self_.get()._field_s), &(_125217_l), _126917_r, (*(_125142_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_1a86b3b59_Tup(_126917_r.get()._field_Kind.ptr()) != nullptr)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a88bda56_OperandExprModel> _129117_lm = jule::new_ptr<_1a88bda56_OperandExprModel>(_1a88bda56_OperandExprModel{._field_Kind=_125217_l.get()._field_Kind, ._field_Model=_125217_l.get()._field_Model});;
	jule::Ptr<_1a88bda56_OperandExprModel> _129517_rm = jule::new_ptr<_1a88bda56_OperandExprModel>(_1a88bda56_OperandExprModel{._field_Kind=_126917_r.get()._field_Kind, ._field_Model=_126917_r.get()._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1a89226e2_Assign>(_1a89226e2_Assign{._field_L=_129117_lm, ._field_R=_129517_rm, ._field_Op=(*(_125142_a)).get()._field_Setter}), &__jule_any_type45)); };
	if (((*(_125142_a)).get()._field_Setter.get()._field_Id != static_cast<jule::U64>(71LLU))) {
		jule::Ptr<_1a88b9b51_StructIns> _130221_strct = _1a86b341c_Struct(_125217_l.get()._field_Kind.ptr());;
		if ((_130221_strct != nullptr)) {
			_1a8930a85_checkStructureAssignOp(_self_, &(_130221_strct), _125142_a, &(_126917_r));
			return;;
		};
		jule::U64 _130717_id = (*(_125142_a)).get()._field_Setter.get()._field_Id;;
		(*(_125142_a)).get()._field_Setter.get()._field_Id=_1a893674a_removeEqFromOp((*(_125142_a)).get()._field_Setter.get()._field_Id);
		_1a86a2571_binaryEval _130921_solver = static__1a86a2e56_new(_126217_eval, (*(_125142_a)).get()._field_Setter);;
		_126917_r=_1a86a7cb3_solveExplicit(&_130921_solver, &(_125217_l), &(_126917_r));
		(*(_125142_a)).get()._field_Setter.get()._field_Id=_130717_id;
		if ((_126917_r == nullptr)) {
			return;;
		};
		return;;
	};
	_1a899b13e_assignTypeChecker _131817_checker = _1a899b13e_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_125217_l.get()._field_Kind, ._field_d=_126917_r, ._field_errorToken=(*(_125142_a)).get()._field_Setter};;
	if (_1a899c2b6_check(&_131817_checker)) {
		_129517_rm.get()._field_Model=_126917_r.get()._field_Model;
		_129117_lm.get()._field_Model=_125217_l.get()._field_Model;
	};
}



inline void _1a8931338_processEndPartOfMultiAssign(_1a8925eba_scopeChecker* _self_, jule::Ptr<_1a8922a99_MultiAssign>* _133051_st, jule::Ptr<_1a88a5730_AssignSt>* _133114_a, jule::Ptr<_1a88a51e1_AssignLeft>* _133133_lexpr, jule::Ptr<_1a865dbe2_Data>* _133158_l, jule::Ptr<_1a865dbe2_Data>* _133173_r) {
	if (((!((*(_133133_lexpr)).get()._field_Reference)) && _1a526ac64_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident))) {
		if (_1a86b0a68_Void((*(_133173_r)).get()._field_Kind.ptr())) {
			_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_133114_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1a865dbe2_Data>> &__jule_push_dest = (*(_133051_st)).get()._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*(_133114_a)).get()._field_Declarative && ((*(_133133_lexpr)).get()._field_Reference || _1a8930634_isNewAssignIdent(_self_, (*(_133133_lexpr)).get()._field_Ident)))) {
		if (_1a8929d37_isDuplicatedIdent(_self_, 0LLU, (*(_133133_lexpr)).get()._field_Ident)) {
			_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_1a8949296_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1a89285a5_stop(_self_);
			return;;
		};
		if (_1a526ac64_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident)) {
			_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a8966901_Var> _135221_v = jule::new_ptr<_1a8966901_Var>(_1a8966901_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_133133_lexpr)).get()._field_Token, ._field_Ident=(*(_133133_lexpr)).get()._field_Ident, ._field_Mutable=(*(_133133_lexpr)).get()._field_Mutable, ._field_Reference=(*(_133133_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Expr=(*(_133114_a)).get()._field_Right, ._field_Data=(*(_133173_r))}), });;
		_1a895d9c5_checkVar((*(_self_))._field_s, &(_135221_v));
		_135221_v.get()._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1a865dbe2_Data>> &__jule_push_dest = (*(_133051_st)).get()._field_L; __jule_push_dest.push(jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_135221_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_135221_v.get()._field_Mutable, ._field_Reference=_135221_v.get()._field_Reference, ._field_Lvalue=(!(_135221_v.get()._field_Constant)), ._field_Model=jule::Any(_135221_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_135221_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_135221_v, &__jule_any_type8)); };
		return;;
	};
	if (((*(_133133_lexpr)).get()._field_Mutable || (*(_133133_lexpr)).get()._field_Reference)) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_1a8949296_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1a891d622_checkAssign(&((*(_self_))._field_s), _133158_l, (*(_133173_r)), (*(_133133_lexpr)).get()._field_Token)))) {
		return;;
	};
	;
	_1a895412a_checkValidityForInitExpr((*(_self_))._field_s, (*(_133158_l)).get()._field_Mutable, false, &((*(_133158_l)).get()._field_Kind), _133173_r, &((*(_133114_a)).get()._field_Setter));
	_1a899b13e_assignTypeChecker _139517_checker = _1a899b13e_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_133158_l)).get()._field_Kind, ._field_d=(*(_133173_r)), ._field_errorToken=(*(_133114_a)).get()._field_Setter};;
	_1a899c2b6_check(&_139517_checker);
	{ jule::Slice<jule::Ptr<_1a865dbe2_Data>> &__jule_push_dest = (*(_133051_st)).get()._field_L; __jule_push_dest.push((*(_133158_l))); };
}



inline void _1a89315be_checkMultiAssign(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a5730_AssignSt>* _140541_a) {
	jule::Ptr<_1a865dbe2_Data> _140617_rd = _1a86a032c_evalExpr(_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0)), (*(_140541_a)).get()._field_Right);;
	if ((_140617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a865dbe2_Data>> _141017_right = _1a891c852_getDatasFromTupleData(&(_140617_rd));;
	if ((_141017_right.len() == 1LL)) {
		{
			auto &_match_expr{ _141017_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1ab9389d0:;
				{
					jule::Ptr<_1a88c177e_IndexingExprModel> _141425_iem = _141017_right[0LL].get()._field_Model.cast_ptr<_1a88c177e_IndexingExprModel>(&__jule_any_type46);;
					if ((_1a86b38e5_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_141017_right=jule::Slice<jule::Ptr<_1a865dbe2_Data>>::make({jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a86b38e5_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, })});
					};
				}
			}
			_match_end_1ab93897a:;
		};
	};
	{
		
		if (((*(_140541_a)).get()._field_Left.len() > _141017_right.len())) {
			_case_begin_1ab9385c3:;
			{
				_1a8948e77_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_140541_a)).get()._field_Left.len() < _141017_right.len())) {
			_case_begin_1ab93864a:;
			{
				_1a8948e77_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ab938370:;
	};
	jule::Ptr<_1a8922a99_MultiAssign> _143317_st = jule::new_ptr<_1a8922a99_MultiAssign>(_1a8922a99_MultiAssign{._field_R=_140617_rd.get()._field_Model});;
	{
		auto expr = &((*(_140541_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab93c51c:;
		if (it != expr_end) {
			jule::I64 _143613_i = it - expr->begin();
			{
				jule::Ptr<_1a88a51e1_AssignLeft> _143721_lexpr = (*(_140541_a)).get()._field_Left[_143613_i];;
				jule::Ptr<_1a865dbe2_Data> _143821_l = nullptr;;
				if (((!(_1a526ac64_IsIgnoreIdent(_143721_lexpr.get()._field_Ident))) && ((!((*(_140541_a)).get()._field_Declarative)) || (!(_1a8930634_isNewAssignIdent(_self_.ptr(), _143721_lexpr.get()._field_Ident)))))) {
					_143821_l=_1a86a032c_evalExpr(_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0)), _143721_lexpr.get()._field_Expr);
					if ((_143821_l == nullptr)) {
						goto _iter_next_1ab93c51c;
					};
				};
				jule::Ptr<_1a865dbe2_Data> _144621_r = _141017_right[_143613_i];;
				_1a8931338_processEndPartOfMultiAssign(_self_.ptr(), &(_143317_st), _140541_a, &(_143721_lexpr), &(_143821_l), &(_144621_r));
			}
			_iter_next_1ab93c51c:;
			++it;
			_143613_i++;
			goto _iter_begin_1ab93c51c;
		}
		_iter_end_1ab93c51c:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_143317_st, &__jule_any_type47)); };
}



inline void _1a8931844_singleDeclAssign(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a5730_AssignSt>* _145241_a) {
	jule::Ptr<_1a88a51e1_AssignLeft> _145317_lexpr = (*(_145241_a)).get()._field_Left[0LL];;
	if (_1a8929d37_isDuplicatedIdent(_self_.ptr(), 0LLU, _145317_lexpr.get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _145317_lexpr.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_145317_lexpr.get()._field_Ident, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a89285a5_stop(_self_.ptr());
		return;;
	};
	if (_1a526ac64_IsIgnoreIdent(_145317_lexpr.get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _145317_lexpr.get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a865dbe2_Data> _146417_r = _1a86a032c_evalExpr(_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0)), (*(_145241_a)).get()._field_Right);;
	if ((_146417_r == nullptr)) {
		return;;
	};
	jule::Ptr<_1a8966901_Var> _147017_v = jule::new_ptr<_1a8966901_Var>(_1a8966901_Var{._field_Scope=_self_.get()._field_scope, ._field_Token=_145317_lexpr.get()._field_Token, ._field_Ident=_145317_lexpr.get()._field_Ident, ._field_Mutable=_145317_lexpr.get()._field_Mutable, ._field_Reference=_145317_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Expr=(*(_145241_a)).get()._field_Right, ._field_Data=_146417_r}), });;
	_1a895d9c5_checkVar(_self_.get()._field_s, &(_147017_v));
	{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = _self_.get()._field_table.get()._field_Vars; __jule_push_dest.push(_147017_v); };
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_147017_v, &__jule_any_type8)); };
}



inline void _1a8931ab9_checkAssignSt(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a5730_AssignSt> _148637_a) {
	{
		
		if (_1a526cd10_IsPostfixOp(_148637_a.get()._field_Setter.get()._field_Id)) {
			_case_begin_1ab9471c5:;
			{
				_1a8930326_checkPostfix(_self_, _148637_a);
			}
		}
		else if ((_148637_a.get()._field_Left.len() == 1LL)) {
			_case_begin_1ab94759e:;
			{
				if (_148637_a.get()._field_Declarative) {
					_1a8931844_singleDeclAssign(_self_, &(_148637_a));
				} else {
					_1a8930d0a_checkSingleAssign(_self_, &(_148637_a));
				};
			}
		}
		else {
			_case_begin_1ab94627e:;
			{
				_1a89315be_checkMultiAssign(_self_, &(_148637_a));
			}
		}
		_match_end_1ab9461b3:;
	};
}



inline jule::Ptr<_1a891e38c_Scope> _1a8931e71_checkCaseScope(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a8923bee_Case>* _150135_c, jule::Ptr<_1a88a6c2b_ScopeTree>* _150150_tree) {
	jule::Ptr<_1a8925eba_scopeChecker> _150217_ssc = _1a89363e8_newChildChecker(_self_);;
	_150217_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_150135_c))));
	return _1a892ad16_checkChildSc(_self_, _150150_tree, &(_150217_ssc));;
}



inline jule::Ptr<_1a8923bee_Case> _1a893246b_checkCase(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a89231a4_Match> _150733_m, jule::I64 _150744_i, jule::Ptr<_1a88ad4d5_Case> _150756_c, jule::Ptr<_1a865dbe2_Data> _150775_expr) {
	jule::Ptr<_1a8923bee_Case> _150817_case = _150733_m.get()._field_Cases[_150744_i];;
	_150817_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1a865dbe2_Data>>::alloc(0LL, _150756_c.get()._field_Exprs.len());
	jule::Bool _151017_constMatched = false;;
	jule::Ptr<_1a8683860_Eval> _151117_eval = _1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0));;
	{
		auto expr = &(_150756_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab94bad1:;
		if (it != expr_end) {
			jule::Ptr<_1a889b270_Expr> _151221_e = *it;
			{
				jule::Ptr<_1a865dbe2_Data> _151321_d = _1a869e5e5_evalExprKind(_151117_eval, _151221_e.get()._field_Kind);;
				if ((_151321_d == nullptr)) {
					goto _iter_next_1ab94bad1;
				};
				if (_150733_m.get()._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1a865dbe2_Data>> &__jule_push_dest = _150817_case.get()._field_Exprs; __jule_push_dest.push(_151321_d); };
					if ((_1a891c5aa_countMatchType(&(_150733_m), &(_151321_d.get()._field_Kind)) > 1LL)) {
						_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _151221_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_151321_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_150775_expr.get()._field_Kind.get()._field_Generic) {
						_151017_constMatched=(_151017_constMatched || _1a86aee63_Equal(_150775_expr.get()._field_Kind, _151321_d.get()._field_Kind));
					} else {
						if ((_1a86b296b_TypeEnum(_150775_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1a8951666_checkTypeCompatibility(_self_.get()._field_s, &(_150775_expr.get()._field_Kind), &(_151321_d.get()._field_Kind), &(_151221_e.get()._field_Token));
						} else {
							jule::Ptr<_1a88de47d_Trait> _152829_trt = _1a86b3681_Trait(_150775_expr.get()._field_Kind.ptr());;
							if ((_152829_trt != nullptr)) {
								_1a8951666_checkTypeCompatibility(_self_.get()._field_s, &(_150775_expr.get()._field_Kind), &(_151321_d.get()._field_Kind), &(_151221_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1ab94bad1;
				} else if (_150733_m.get()._field_Comptime) {
					if ((!(_1a865e50b_IsConst(_151321_d.ptr())))) {
						_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _151221_e.get()._field_Token, jule::Str("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_151017_constMatched=(_151017_constMatched || _1a554248b_ReadBool(_151321_d.get()._field_Constant.ptr()));
					};
				};
				if (_151321_d.get()._field_Decl) {
					_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _151221_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1a8949296_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1ab94bad1;
				};
				{ jule::Slice<jule::Ptr<_1a865dbe2_Data>> &__jule_push_dest = _150817_case.get()._field_Exprs; __jule_push_dest.push(_151321_d); };
				_1a899b13e_assignTypeChecker _155121_checker = _1a899b13e_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_150775_expr.get()._field_Kind, ._field_d=_151321_d, ._field_errorToken=_151221_e.get()._field_Token};;
				_1a899c2b6_check(&_155121_checker);
			}
			_iter_next_1ab94bad1:;
			++it;
			goto _iter_begin_1ab94bad1;
		}
		_iter_end_1ab94bad1:;
	};
	if (((!(_150733_m.get()._field_Comptime)) || _151017_constMatched)) {
		_150817_case.get()._field_Scope=_1a8931e71_checkCaseScope(_self_, &(_150817_case), &(_150756_c.get()._field_Scope));
	};
	return _150817_case;;
}



inline void _1a8932834_checkCases(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88adbab_MatchCase>* _156535_m, jule::Ptr<_1a89231a4_Match> _156554_rm, jule::Ptr<_1a865dbe2_Data> _156570_expr) {
	_156554_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1a8923bee_Case>>::alloc(0LL, (*(_156535_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_156535_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab956536:;
		if (it != expr_end) {
			jule::I64 _156713_i = it - expr->begin();
			{
				jule::Ptr<_1a8923bee_Case> _156821_case = jule::new_ptr<_1a8923bee_Case>(_1a8923bee_Case{._field_Owner=_156554_rm, });;
				if ((_156713_i > 0LL)) {
					_156554_rm.get()._field_Cases[(_156713_i - 1LL)].get()._field_Next=_156821_case;
				};
				{ jule::Slice<jule::Ptr<_1a8923bee_Case>> &__jule_push_dest = _156554_rm.get()._field_Cases; __jule_push_dest.push(_156821_case); };
			}
			_iter_next_1ab956536:;
			++it;
			_156713_i++;
			goto _iter_begin_1ab956536;
		}
		_iter_end_1ab956536:;
	};
	if (((_156554_rm.get()._field_Default != nullptr) && ((*(_156535_m)).get()._field_Cases.len() > 0LL))) {
		_156554_rm.get()._field_Cases[(_156554_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_156554_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_156535_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab95901c:;
		if (it != expr_end) {
			jule::I64 _158114_i = it - expr->begin();
			jule::Ptr<_1a88ad4d5_Case> _158121_c = *it;
			{
				_1a893246b_checkCase(_self_, _156554_rm, _158114_i, _158121_c, _156570_expr);
			}
			_iter_next_1ab95901c:;
			++it;
			_158114_i++;
			goto _iter_begin_1ab95901c;
		}
		_iter_end_1ab95901c:;
	};
}



inline jule::Ptr<_1a8923bee_Case> _1a8932bdb_checkDefault(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a89231a4_Match> _158636_m, jule::Ptr<_1a88ac418_Else> _158651_d) {
	jule::Ptr<_1a8923bee_Case> _158717_def = jule::new_ptr<_1a8923bee_Case>(_1a8923bee_Case{._field_Owner=_158636_m, });;
	_158717_def.get()._field_Scope=_1a8931e71_checkCaseScope(_self_, &(_158717_def), &(_158651_d.get()._field_Scope));
	return _158717_def;;
}



inline void _1a893300a_checkComptimePanic(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a52684c0_Token> _159438_callToken, jule::Ptr<_1a891e38c_Scope>* _159458_s) {
	if (((*(_159458_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _159813_stmt = (*(_159458_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _159813_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab95c196:;
			{
				jule::Ptr<_1a865dbe2_Data> _160117_d = _159813_stmt.cast_ptr<_1a865dbe2_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ _160117_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1ab95ceee:;
						{
							jule::Ptr<_1a88c6036_BuiltinPanicCallExprModel> _160421_m = _160117_d.get()._field_Model.cast_ptr<_1a88c6036_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ _160421_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1ab95de89:;
									{
										jule::Ptr<_1a55406ba_Const> _160725_c = _160421_m.get()._field_Expr.cast_ptr<_1a55406ba_Const>(&__jule_any_type19);;
										if (_1a5544a98_IsStr(_160725_c.ptr())) {
											if ((_159438_callToken == nullptr)) {
												jule::Ptr<_1a8925eba_scopeChecker> _161037_root = _1a8929056_getHardRoot(_self_);;
												_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _161037_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1a5542700_ReadStr(_160725_c.ptr()), &__jule_any_type5)}));
											} else {
												_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _159438_callToken, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1a5542700_ReadStr(_160725_c.ptr()), &__jule_any_type5)}));
											};
											_1a89285a5_stop(_self_.ptr());
										};
									}
								}
								_match_end_1ab95dc7a:;
							};
						}
					}
					_match_end_1ab95cb03:;
				};
			}
		}
		_match_end_1ab95c130:;
	};
}



inline void _1a8933329_processConstMatch(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a89231a4_Match>* _162242_tm, jule::Ptr<_1a88adbab_MatchCase>* _162259_m) {
	{
		auto expr = &((*(_162242_tm)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab95c6c4:;
		if (it != expr_end) {
			jule::I64 _162314_i = it - expr->begin();
			jule::Ptr<_1a8923bee_Case> _162321_c = *it;
			{
				if ((_162321_c.get()._field_Scope != nullptr)) {
					jule::Ptr<_1a52684c0_Token> _162525_token = nullptr;;
					if (((!((*(_162242_tm)).get()._field_TypeMatch)) && (_162321_c.get()._field_Scope.get()._field_Stmts.len() > 0LL))) {
						_162525_token=(*(_162259_m)).get()._field_Cases[_162314_i].get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
					};
					_1a893300a_checkComptimePanic(_self_, _162525_token, &(_162321_c.get()._field_Scope));
					(*(_162242_tm)).get()._field_Default=_162321_c;
					(*(_162242_tm)).get()._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1ab95c6c4:;
			++it;
			_162314_i++;
			goto _iter_begin_1ab95c6c4;
		}
		_iter_end_1ab95c6c4:;
	};
	if (((*(_162259_m)).get()._field_Default != nullptr)) {
		(*(_162242_tm)).get()._field_Cases=nullptr;
		(*(_162242_tm)).get()._field_Default=_1a8932bdb_checkDefault(_self_, (*(_162242_tm)), (*(_162259_m)).get()._field_Default);
		if (((*(_162242_tm)).get()._field_Default != nullptr)) {
			jule::Ptr<_1a52684c0_Token> _163925_token = nullptr;;
			if ((!((*(_162242_tm)).get()._field_TypeMatch))) {
				_163925_token=(*(_162259_m)).get()._field_Default.get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
			};
			_1a893300a_checkComptimePanic(_self_, _163925_token, &((*(_162242_tm)).get()._field_Default.get()._field_Scope));
		};
	} else {
		(*(_162242_tm)).get()._field_Cases=nullptr;
	};
}



inline void _1a893359e_checkTypeMatch(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88adbab_MatchCase>* _165139_m) {
	jule::Ptr<_1a865dbe2_Data> _165217_d = _1a869ec11_eval(_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0)), (*(_165139_m)).get()._field_Expr);;
	if ((_165217_d == nullptr)) {
		return;;
	};
	if (((!(_165217_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1a86b1eba_Prim(_165217_d.get()._field_Kind.ptr()) != nullptr) && _1a86ba468_IsAny(_1a86b1eba_Prim(_165217_d.get()._field_Kind.ptr()).ptr())) || (_1a86b3681_Trait(_165217_d.get()._field_Kind.ptr()) != nullptr)) || (_1a86b296b_TypeEnum(_165217_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), (*(_165139_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a89231a4_Match> _166317_tm = jule::new_ptr<_1a89231a4_Match>(_1a89231a4_Match{._field_Expr=_165217_d, ._field_TypeMatch=true, });;
	_166317_tm.get()._field_Comptime=_166317_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic;
	if (((!(_166317_tm.get()._field_Comptime)) && ((*(_165139_m)).get()._field_Default != nullptr))) {
		_166317_tm.get()._field_Default=_1a8932bdb_checkDefault(_self_, _166317_tm, (*(_165139_m)).get()._field_Default);
	};
	_1a8932834_checkCases(_self_, _165139_m, _166317_tm, _165217_d);
	if (_166317_tm.get()._field_Comptime) {
		_1a8933329_processConstMatch(_self_, &(_166317_tm), _165139_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_166317_tm, &__jule_any_type48)); };
}



inline void _1a8933824_checkCommonMatch(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88adbab_MatchCase>* _168441_m) {
	jule::Ptr<_1a865dbe2_Data> _168517_d = nullptr;;
	if (((*(_168441_m)).get()._field_Expr == nullptr)) {
		_168517_d=jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Constant=static__1a5541138_NewBool(true)});
		_168517_d.get()._field_Model=jule::Any(_168517_d.get()._field_Constant, &__jule_any_type19);
	} else {
		_168517_d=_1a86a032c_evalExpr(_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0)), (*(_168441_m)).get()._field_Expr);
		if ((_168517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a89231a4_Match> _169917_mc = jule::new_ptr<_1a89231a4_Match>(_1a89231a4_Match{._field_Expr=_168517_d, ._field_Comptime=(((((*(_168441_m)).get()._field_Expr != nullptr) && _1a865e50b_IsConst(_168517_d.ptr())) && _1a5544834_IsBool(_168517_d.get()._field_Constant.ptr())) && _1a554248b_ReadBool(_168517_d.get()._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_169917_mc, &__jule_any_type48)); };
	if (((!(_169917_mc.get()._field_Comptime)) && ((*(_168441_m)).get()._field_Default != nullptr))) {
		_169917_mc.get()._field_Default=_1a8932bdb_checkDefault(_self_, _169917_mc, (*(_168441_m)).get()._field_Default);
	};
	_1a8932834_checkCases(_self_, _168441_m, _169917_mc, _168517_d);
	if (_169917_mc.get()._field_Comptime) {
		_1a8933329_processConstMatch(_self_, &(_169917_mc), _168441_m);
	};
}



inline void _1a8933a99_checkMatch(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88adbab_MatchCase> _172234_m) {
	if (_172234_m.get()._field_TypeMatch) {
		_1a893359e_checkTypeMatch(_self_, &(_172234_m));
		return;;
	};
	_1a8933824_checkCommonMatch(_self_, &(_172234_m));
}



inline void _1a8933d1e_checkFall(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a4ad6_FallSt> _173029_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1a8928a7d_isDeferred(_self_))) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _173029_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1a8923bee_Case* _173817_case = ((_1a8923bee_Case*)(_self_.get()._field_cse));;
	if (_173817_case->_field_Owner.get()._field_Comptime) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _173029_f.get()._field_Token, jule::Str("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if ((_173817_case->_field_Next == nullptr)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _173029_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1a8949296_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1a89242c6_FallSt>(_1a89242c6_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_173817_case->_field_Next))}), &__jule_any_type49)); };
}



inline jule::Ptr<_1a89217e0_BreakSt> _1a893412c_checkBreakWithLabel(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88ab736_BreakSt> _175339_b) {
	jule::Ptr<_1a89217e0_BreakSt> _175417_brk = _1a893443a_checkPlainBreak(_self_, _175339_b);;
	if ((_175417_brk == nullptr)) {
		return nullptr;;
	};
	_175417_brk.get()._field_It=0LLU;
	_175417_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1a8924c33_scopeLabel> _176417_label = _1a891ba93_findLabelParent(_175339_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_176417_label == nullptr)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _175339_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_175339_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_176417_label.get()._field_used=true;
	if (((_176417_label.get()._field_pos + 1LL) >= _176417_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _175339_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_175339_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _177713_i = (_176417_label.get()._field_pos + 1LL);;
	if ((_177713_i >= _176417_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _175339_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_175339_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _178121_st = _176417_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_177713_i];;
		{
			auto &_match_expr{ _178121_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1ab97d0da:;
				{
					_175417_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_178121_st.cast_ptr<_1a89201d4_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1ab97d827:;
				{
					_175417_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_178121_st.cast_ptr<_1a892103c_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1ab97d88d:;
				{
					_175417_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_178121_st.cast_ptr<_1a8920657_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1ab97d915:;
				{
					_175417_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_178121_st.cast_ptr<_1a89231a4_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1ab97d67e:;
				{
					_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _175339_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_175339_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1ab97d629:;
		};
	};
	if ((_175417_brk.get()._field_It != 0LLU)) {
		if ((!(_1a892e523_checkValidBreakLabel(_self_, _175417_brk.get()._field_It)))) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _175339_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_175339_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_175417_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1a892e523_checkValidBreakLabel(_self_, _175417_brk.get()._field_Mtch)))) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _175339_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_175339_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _175417_brk;;
}



inline jule::Ptr<_1a89217e0_BreakSt> _1a893443a_checkPlainBreak(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88ab736_BreakSt> _181135_b) {
	if (_1a8928a7d_isDeferred(_self_)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _181135_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a8925eba_scopeChecker> _181717_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_181717_scope.get()._field_it == 0LLU) && (_181717_scope.get()._field_cse == 0LLU)) && (_181717_scope.get()._field_parent != nullptr)) && (_181717_scope.get()._field_owner == nullptr))) {
			_case_begin_1ab989349:;
			{
				_181717_scope=_181717_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_181717_scope.get()._field_it != 0LLU)) {
			_case_begin_1ab9893c1:;
			{
				return jule::new_ptr<_1a89217e0_BreakSt>(_1a89217e0_BreakSt{._field_It=_181717_scope.get()._field_it, });;
			}
		}
		else if ((_181717_scope.get()._field_cse != 0LLU)) {
			_case_begin_1ab989448:;
			{
				return jule::new_ptr<_1a89217e0_BreakSt>(_1a89217e0_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1a8923bee_Case*)(_181717_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1ab9892a0:;
	};
	_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _181135_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a89346b0_checkBreak(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88ab736_BreakSt> _183330_b) {
	if ((_183330_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1a89217e0_BreakSt> _183521_brk = _1a893412c_checkBreakWithLabel(_self_, _183330_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_183521_brk, &__jule_any_type50)); };
		return;;
	};
	jule::Ptr<_1a89217e0_BreakSt> _184017_brk = _1a893443a_checkPlainBreak(_self_, _183330_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_184017_brk, &__jule_any_type50)); };
}



inline void _1a8934935_checkRet(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a9aa8_RetSt> _184432_r) {
	if (_1a8928a7d_isDeferred(_self_)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _184432_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a8924628_RetSt> _184917_rt = jule::new_ptr<_1a8924628_RetSt>(_1a8924628_RetSt{._field_Func=_1a8928ce2_getRoot(_self_).get()._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_184917_rt, &__jule_any_type51)); };
	jule::Ptr<_1a89a92b2_retTypeChecker> _185417_rtc = jule::new_ptr<_1a89a92b2_retTypeChecker>(_1a89a92b2_retTypeChecker{._field_sc=_self_, ._field_f=_184917_rt.get()._field_Func, ._field_errorToken=_184432_r.get()._field_Token, });;
	jule::Bool _185913_ok = _1a89a9e2d_check(_185417_rtc.ptr(), &(_184432_r.get()._field_Expr));;
	if ((!(_185913_ok))) {
		return;;
	};
	if ((_184432_r.get()._field_Expr != nullptr)) {
		_184917_rt.get()._field_Expr=_185417_rtc.get()._field_model;
	};
}



inline void _1a8934baa_checkUseExpr(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a889bb11_UseExpr> _186932_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _186932_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1a8928a7d_isDeferred(_self_)) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _186932_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _186932_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1a8934e30_checkNode(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Any* _188534_node) {
	{
		auto &_match_expr{ (*(_188534_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ab9962ce:;
			{
				_1a892b399_checkAnonScope(_self_, (*(_188534_node)).cast_ptr<_1a88a6c2b_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ab995ab4:;
			{
				_1a892a0ac_checkVarDecl(_self_, (*(_188534_node)).cast_ptr<_1a88a9701_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ab99618b:;
			{
				_1a892a332_checkTypeAliasDecl(_self_, (*(_188534_node)).cast_ptr<_1a88ad062_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ab995eb0:;
			{
				_1a892b93d_checkExpr(_self_, (*(_188534_node)).cast_ptr<_1a889b270_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1ab9963bc:;
			{
				_1a892c2ce_checkConditional(_self_, (*(_188534_node)).cast_ptr<_1a88ac88b_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1ab996433:;
			{
				_1a892de07_checkIter(_self_, (*(_188534_node)).cast_ptr<_1a88aa218_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1ab996499:;
			{
				_1a892eaa6_checkCont(_self_, (*(_188534_node)).cast_ptr<_1a88abadd_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1ab996510:;
			{
				_1a892ed2b_checkLabel(_self_, (*(_188534_node)).cast_ptr<_1a88a4443_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ab996576:;
			{
				_1a89300a1_pushGoto(_self_, (*(_188534_node)).cast_ptr<_1a88a47ea_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ab9965dc:;
			{
				_1a8931ab9_checkAssignSt(_self_, (*(_188534_node)).cast_ptr<_1a88a5730_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1ab996653:;
			{
				_1a8933a99_checkMatch(_self_, (*(_188534_node)).cast_ptr<_1a88adbab_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1ab9966b9:;
			{
				_1a8933d1e_checkFall(_self_, (*(_188534_node)).cast_ptr<_1a88a4ad6_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1ab996730:;
			{
				_1a89346b0_checkBreak(_self_, (*(_188534_node)).cast_ptr<_1a88ab736_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab9967a7:;
			{
				_1a8934935_checkRet(_self_, (*(_188534_node)).cast_ptr<_1a88a9aa8_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab99682e:;
			{
				_1a8934baa_checkUseExpr(_self_, (*(_188534_node)).cast_ptr<_1a889bb11_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1ab995c3a:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1ab995b5d:;
	};
}



inline void _1a893510b_checkResult(jule::Ptr<_1a8925eba_scopeChecker> _self_) {
	_1a88a6621_Stmt _192317_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _192317_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab99e43b:;
			{
				jule::Ptr<_1a889bb11_UseExpr> _192621_ue = _192317_stmt._field_Data.cast_ptr<_1a889bb11_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_1a865dbe2_Data> _192721_d = _1a86a032c_evalExpr(_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0)), _192621_ue.get()._field_Expr);;
				if ((_192721_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_192721_d, &__jule_any_type24)); };
				jule::Ptr<_1a89a92b2_retTypeChecker> _193221_rtc = jule::new_ptr<_1a89a92b2_retTypeChecker>(_1a89a92b2_retTypeChecker{._field_sc=_self_, ._field_types=_1a88d1030_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_192621_ue.get()._field_Expr.get()._field_Token, });;
				_1a89a9e2d_check(_193221_rtc.ptr(), &(_192621_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ab99dbee:;
			{
				jule::Ptr<_1a889b270_Expr> _193921_expr = _192317_stmt._field_Data.cast_ptr<_1a889b270_Expr>(&__jule_any_type53);;
				jule::Ptr<_1a865dbe2_Data> _194021_d = _1a86a032c_evalExpr(_1a8950c1a_eval(_self_.get()._field_s, jule::Trait<_1a86ccac9_Lookup>(_self_, 0)), _193921_expr);;
				if ((_194021_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _194021_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1ab9a3e9b:;
						{
							jule::Ptr<_1a88c83bd_BuiltinErrorCallExprModel> _194625_m = _194021_d.get()._field_Model.cast_ptr<_1a88c83bd_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1a892b6b8_processErrorCall(_self_, &(_194625_m), _193921_expr.get()._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_194021_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1ab9a3a06:;
						{
							return;;
						}
					}
					_match_end_1ab9a3ae4:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1ab99dc65:;
			{
				_1a8934e30_checkNode(_self_, &(_192317_stmt._field_Data));
			}
		}
		else {
			_case_begin_1ab99db88:;
			{
				_1a8934e30_checkNode(_self_, &(_192317_stmt._field_Data));
				return;;
			}
		}
		_match_end_1ab99da12:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1a89352d7_checkTree(jule::Ptr<_1a8925eba_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _196817_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_196817_n)--;
	};
	for (; (_self_.get()._field_i < _196817_n); (_self_.get()._field_i)++) {
		{
			_1a88a6621_Stmt _197621_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1a8934e30_checkNode(_self_, &(_197621_stmt._field_Data));
			if (_1a8928819_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1ab9a6d6c:;
	}
	_iter_end_1ab9a6d6c:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1a893510b_checkResult(_self_);
	};
}



inline void _1a8935606_checkGoto(_1a8925eba_scopeChecker* _self_, jule::Ptr<_1a89251a6_scopeGoto>* _198733_gt, jule::Ptr<_1a8924c33_scopeLabel>* _198754_label) {
	jule::Ptr<_1a8925eba_scopeChecker> _198817_gtsc = (*(_198733_gt)).get()._field_scope;;
	while (((_198817_gtsc.get()._field_childIndex - 1LL) > (*(_198754_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_198817_gtsc=_198817_gtsc.get()._field_parent;
		}
	_iter_next_1ab9a9754:;
	}
	_iter_end_1ab9a9754:;;
	jule::I64 _199317_n = 0LL;;
	if ((_198817_gtsc.get()._field_scope == (*(_198754_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_198733_gt)).get()._field_pos > (*(_198754_label)).get()._field_pos)) {
			return;;
		};
		_199317_n=(*(_198733_gt)).get()._field_pos;
	};
	jule::I64 _200617_i = ((*(_198754_label)).get()._field_pos - 1LL);;
	if ((_199317_n == 0LL)) {
		{
			auto expr = &((*(_198754_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab9abbda:;
			if (it != expr_end) {
				jule::I64 _200917_j = it - expr->begin();
				jule::Any _200920_stmt = *it;
				{
					if (_1a891c269_stmtIsGotoScope(&(_200920_stmt), &(_198817_gtsc.get()._field_scope))) {
						_199317_n=_200917_j;
						goto _iter_end_1ab9abbda;
					};
				}
				_iter_next_1ab9abbda:;
				++it;
				_200917_j++;
				goto _iter_begin_1ab9abbda;
			}
			_iter_end_1ab9abbda:;
		};
	};
	for (; (_200617_i >= _199317_n); (_200617_i)--) {
		{
			jule::Any _201921_stmt = (*(_198754_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_200617_i];;
			if (_1a891de08_stmtIsDef(&(_201921_stmt))) {
				_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_198733_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_198733_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1ab9acb86:;
	}
	_iter_end_1ab9acb86:;;
}



inline void _1a89357d2_checkGotos(_1a8925eba_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9ab910:;
		if (it != expr_end) {
			jule::Ptr<_1a89251a6_scopeGoto> _202821_gt = *it;
			{
				jule::Ptr<_1a8924c33_scopeLabel> _202921_label = _1a8929980_findLabelAll(_self_, _202821_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_202921_label == nullptr)) {
					_1a8948e77_pushErr((*(_self_))._field_s.ptr(), _202821_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_202821_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1ab9ab910;
				};
				_202921_label.get()._field_used=true;
				_1a8935606_checkGoto(_self_, &(_202821_gt), &(_202921_label));
			}
			_iter_next_1ab9ab910:;
			++it;
			goto _iter_begin_1ab9ab910;
		}
		_iter_end_1ab9ab910:;
	};
}



inline void _1a89359ad_checkLabels(_1a8925eba_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9ae858:;
		if (it != expr_end) {
			jule::Ptr<_1a8924c33_scopeLabel> _204116_l = *it;
			{
				if ((!(_204116_l.get()._field_used))) {
					_1a8948e77_pushErr((*(_self_))._field_s.ptr(), _204116_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_204116_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1ab9ae858:;
			++it;
			goto _iter_begin_1ab9ae858;
		}
		_iter_end_1ab9ae858:;
	};
}



inline void _1a8935b89_checkVars(_1a8925eba_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9b1c23:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> _204916_v = *it;
			{
				if (((((!(_204916_v.get()._field_Used)) && (!(_204916_v.get()._field_Constant))) && (!(_1a526ac64_IsIgnoreIdent(_204916_v.get()._field_Ident)))) && (!(_1a526b00b_IsAnonIdent(_204916_v.get()._field_Ident))))) {
					_1a8948e77_pushErr((*(_self_))._field_s.ptr(), _204916_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_204916_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1ab9b1c23:;
			++it;
			goto _iter_begin_1ab9b1c23;
		}
		_iter_end_1ab9b1c23:;
	};
}



inline void _1a8935d65_checkAliases(_1a8925eba_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9b4a28:;
		if (it != expr_end) {
			jule::Ptr<_1a86ada55_TypeAlias> _205716_a = *it;
			{
				if ((((!(_205716_a.get()._field_Used)) && (!(_1a526ac64_IsIgnoreIdent(_205716_a.get()._field_Ident)))) && (!(_1a526b00b_IsAnonIdent(_205716_a.get()._field_Ident))))) {
					_1a8948e77_pushErr((*(_self_))._field_s.ptr(), _205716_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_205716_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1ab9b4a28:;
			++it;
			goto _iter_begin_1ab9b4a28;
		}
		_iter_end_1ab9b4a28:;
	};
}



inline void _1a8936184_check(jule::Ptr<_1a8925eba_scopeChecker> _self_, jule::Ptr<_1a88a6c2b_ScopeTree>* _206530_tree, jule::Ptr<_1a891e38c_Scope>* _206553_s) {
	(*(_206553_s)).get()._field_Deferred=(*(_206530_tree)).get()._field_Deferred;
	(*(_206553_s)).get()._field_Unsafety=(*(_206530_tree)).get()._field_Unsafety;
	jule::I64 _206913_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_206530_tree));
	_self_.get()._field_scope=(*(_206553_s));
	_1a89352d7_checkTree(_self_);
	if ((_206913_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1a8935b89_checkVars(_self_.ptr());
		_1a8935d65_checkAliases(_self_.ptr());
		if (_1a89283c9_isRoot(_self_.ptr())) {
			_1a89357d2_checkGotos(_self_.ptr());
			_1a89359ad_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1a8925eba_scopeChecker> _1a89363e8_newChildChecker(jule::Ptr<_1a8925eba_scopeChecker> _self_) {
	jule::Ptr<_1a8925eba_scopeChecker> _208917_base = _1a891b3bc_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_208917_base.get()._field_parent=_self_;
	_208917_base.get()._field_labels=_self_.get()._field_labels;
	_208917_base.get()._field_gotos=_self_.get()._field_gotos;
	_208917_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _208917_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8925eba_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1a893763b_checkCdef(_1a8937240_directiveChecker* _self_, jule::Ptr<_1a88645ce_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab9ba622:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1a88cc25c_Fn>(&__jule_any_type65).get()._field_Binded) {
					goto _match_end_1ab9ba853;
				};
				goto _case_begin_1ab9ba8a8;
			}
		}
		else {
			_case_begin_1ab9ba8a8:;
			{
				_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ab9ba853:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a89378b1_checkTypedef(_1a8937240_directiveChecker* _self_, jule::Ptr<_1a88645ce_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab9bca86:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1a88b6d3a_Struct>(&__jule_any_type66).get()._field_Binded) {
					goto _match_end_1ab9bcca6;
				};
				goto _case_begin_1ab9bcd0b;
			}
		}
		else {
			_case_begin_1ab9bcd0b:;
			{
				_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ab9bcca6:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a8937b36_checkDerive(_1a8937240_directiveChecker* _self_, jule::Ptr<_1a88645ce_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab9c001c:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1a88b6d3a_Struct>(&__jule_any_type66).get()._field_Binded))) {
					goto _match_end_1ab9c023c;
				};
				goto _case_begin_1ab9c0292;
			}
		}
		else {
			_case_begin_1ab9c0292:;
			{
				_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab9c023c:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1a8949296_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1ab9c36b3:;
		}
		else {
			_case_begin_1ab9c0b33:;
			{
				_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ab9c32ea:;
	};
}



inline void _1a8937dab_checkNamespace(_1a8937240_directiveChecker* _self_, jule::Ptr<_1a88645ce_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab9c49d3:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1a88b6d3a_Struct>(&__jule_any_type66).get()._field_Binded))) {
					_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab9c4a49:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1a88cc25c_Fn>(&__jule_any_type65).get()._field_Binded))) {
					_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab9c4ab0:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1a8966901_Var>(&__jule_any_type8).get()._field_Binded))) {
					_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1ab9c4906:;
			{
				_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ab9c48a1:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1a52684c0_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab9cc4d0:;
			{
				if ((_1a86a84bc_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1a88645ce_Directive> _11625_typedef = jule::new_ptr<_1a88645ce_Directive>(_1a88645ce_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					{ jule::Slice<jule::Ptr<_1a88645ce_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_11625_typedef); };
				};
			}
		}
		_match_end_1ab9cc47a:;
	};
}



inline void _1a8938131_checkDeprecated(_1a8937240_directiveChecker* _self_, jule::Ptr<_1a88645ce_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab9cdde9:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1a88b6d3a_Struct>(&__jule_any_type66).get()._field_Binded) {
					_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab9ce779:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1a88cc25c_Fn>(&__jule_any_type65).get()._field_Binded) {
					_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab9ce7e0:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1a8966901_Var>(&__jule_any_type8).get()._field_Binded) {
					_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1ab9ce12a:;
			{
				_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ab9cde82:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1a52684c0_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(4LLU))) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1a89383a6_checkTest(_1a8937240_directiveChecker* _self_, jule::Ptr<_1a88645ce_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab9d3618:;
			{
				jule::Ptr<_1a88cc25c_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_1a88cc25c_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_Binded)) && (!(_1a88cce0b_IsInit(_16717_f.ptr())))) && (!(_1a88ccb97_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1ab9d6e13;
				};
				if (_1a88cc933_IsMethod(_16717_f.ptr())) {
					_1a8948e77_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1ab9d6e13;
				};
				goto _case_begin_1ab9d6e68;
			}
		}
		else {
			_case_begin_1ab9d6e68:;
			{
				_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ab9d6e13:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a893862b_checkDirective(_1a8937240_directiveChecker* _self_, jule::Ptr<_1a88645ce_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1ab9da90b:;
			{
				_1a893763b_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1ab9da972:;
			{
				_1a89378b1_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1ab9da9d8:;
			{
				_1a8937b36_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1ab9daa4e:;
			{
				_1a8937dab_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1ab9db588:;
			{
				_1a8938131_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1ab9db5ee:;
			{
				_1a89383a6_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1ab9db665:;
			{
				_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1ab9da895:;
			{
				_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ab9da840:;
	};
}



inline void _1a8938807_check(_1a8937240_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9dd843:;
		if (it != expr_end) {
			jule::Ptr<_1a88645ce_Directive> _20821_d = *it;
			{
				_1a893862b_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1ab9dd843:;
			++it;
			goto _iter_begin_1ab9dd843;
		}
		_iter_end_1ab9dd843:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a8937240_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a893d7da_SelectPackage(_1a893d323_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1a8966901_Var> _1a893db92_FindVar(_1a893d323_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1a89405bc_isLookupable(_self_, _18926_ident)))) {
		return nullptr;;
	};
	return _1a893aa3a_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _18926_ident, false);;
}



inline jule::Ptr<_1a86ada55_TypeAlias> _1a893e049_FindTypeAlias(_1a893d323_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1a89405bc_isLookupable(_self_, _20132_ident)))) {
		return nullptr;;
	};
	return _1a893ae69_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20132_ident, false);;
}



inline jule::Ptr<_1a88b6d3a_Struct> _1a893e401_FindStruct(_1a893d323_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1a89405bc_isLookupable(_self_, _21329_ident)))) {
		return nullptr;;
	};
	return _1a893b354_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21329_ident, false);;
}



inline jule::Ptr<_1a88cc25c_Fn> _1a893e7a8_FindFn(_1a893d323_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1a89405bc_isLookupable(_self_, _22525_ident)))) {
		return nullptr;;
	};
	return _1a893b7b6_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22525_ident, false);;
}



inline jule::Ptr<_1a88de47d_Trait> _1a893eab6_FindTrait(_1a893d323_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1a89405bc_isLookupable(_self_, _23628_ident)))) {
		return nullptr;;
	};
	return _1a893bac4_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23628_ident);;
}



inline jule::Ptr<_1a88e1c11_Enum> _1a893edc4_FindEnum(_1a893d323_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1a89405bc_isLookupable(_self_, _24727_ident)))) {
		return nullptr;;
	};
	return _1a893be15_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _24727_ident);;
}



inline jule::Ptr<_1a88e330b_TypeEnum> _1a89401d2_FindTypeEnum(_1a893d323_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1a89405bc_isLookupable(_self_, _25831_ident)))) {
		return nullptr;;
	};
	return _1a893c256_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25831_ident);;
}



inline jule::Bool _1a89405bc_isLookupable(_1a893d323_ImportInfo* _self_, jule::Str _26727_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1a89408ca_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1a89408ca_existIdent(_self_, _26727_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1a89408ca_existIdent(_1a893d323_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba0369e:;
		if (it != expr_end) {
			jule::Ptr<_1a52684c0_Token> *_28816_sident = it;
			{
				if (((*(_28816_sident)).get()._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1aba0369e:;
			++it;
			goto _iter_begin_1aba0369e;
		}
		_iter_end_1aba0369e:;
	};
	return false;;
}



inline jule::Bool _1a8940b61_isAccessibleViaSelection(_1a893d323_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1a89408ca_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a893d323_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a89413d1_SelectPackage(_1a8940e5d_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1a8966901_Var> _1a8941788_FindVar(_1a8940e5d_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1a893aa3a_findVarInPackage(&((*(_self_))._field_Files), _31426_ident, _31438_binded);;
}



inline jule::Ptr<_1a86ada55_TypeAlias> _1a8941b40_FindTypeAlias(_1a8940e5d_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1a893ae69_findTypeAliasInPackage(&((*(_self_))._field_Files), _32032_ident, _32044_binded);;
}



inline jule::Ptr<_1a88b6d3a_Struct> _1a8941ee7_FindStruct(_1a8940e5d_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1a893b354_findStructInPackage(&((*(_self_))._field_Files), _32629_ident, _32641_binded);;
}



inline jule::Ptr<_1a88cc25c_Fn> _1a894239e_FindFn(_1a8940e5d_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1a893b7b6_findFnInPackage(&((*(_self_))._field_Files), _33225_ident, _33237_binded);;
}



inline jule::Ptr<_1a88de47d_Trait> _1a89426ac_FindTrait(_1a8940e5d_Package* _self_, jule::Str _33828_ident) {
	return _1a893bac4_findTraitInPackage(&((*(_self_))._field_Files), _33828_ident);;
}



inline jule::Ptr<_1a88e1c11_Enum> _1a89429ba_FindEnum(_1a8940e5d_Package* _self_, jule::Str _34427_ident) {
	return _1a893be15_findEnumInPackage(&((*(_self_))._field_Files), _34427_ident);;
}



inline jule::Ptr<_1a88e330b_TypeEnum> _1a8942cc8_FindTypeEnum(_1a8940e5d_Package* _self_, jule::Str _35031_ident) {
	return _1a893c256_findTypeEnumInPackage(&((*(_self_))._field_Files), _35031_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8940e5d_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8909069_comptimeTypeInfo> _1a894601d_pushComptimeTypeInfo(_1a8945acd_commonSemaMeta* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _21344_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba2abe3:;
		if (it != expr_end) {
			jule::Ptr<_1a8909069_comptimeTypeInfo> _21421_t2 = *it;
			{
				if (((_21421_t2.get()._field_base.get()._field_BindIdent == (*(_21344_t)).get()._field_BindIdent) && _1a86aee63_Equal(_21421_t2.get()._field_base, (*(_21344_t))))) {
					return _21421_t2;;
				};
			}
			_iter_next_1aba2abe3:;
			++it;
			goto _iter_begin_1aba2abe3;
		}
		_iter_end_1aba2abe3:;
	};
	jule::Ptr<_1a8909069_comptimeTypeInfo> _21917_t1 = jule::new_ptr<_1a8909069_comptimeTypeInfo>(_1a8909069_comptimeTypeInfo{._field_base=(*(_21344_t))});;
	{ jule::Slice<jule::Ptr<_1a8909069_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_21917_t1); };
	return _21917_t1;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8945acd_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a8946a68_SelectPackage(_1a89465e5_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)> _24232_selector) {
	return _1a89ab847_SelectPackage((*(_self_))._field_file.ptr(), _24232_selector);;
}



inline jule::Ptr<_1a8966901_Var> _1a8946e20_FindVar(_1a89465e5_Sema* _self_, jule::Str _25226_ident, jule::Bool _25238_binded) {
	jule::Ptr<_1a8966901_Var> _25417_v = _1a893aa3a_findVarInPackage(&((*(_self_))._field_files), _25226_ident, _25238_binded);;
	if ((_25417_v != nullptr)) {
		return _25417_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba2dd6c:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _26021_imp = *it;
			{
				if ((!(_1a8944758_impIsLookupable(&(_26021_imp), _25226_ident)))) {
					goto _iter_next_1aba2dd6c;
				};
				_25417_v=_1a893db92_FindVar(_26021_imp.ptr(), _25226_ident, _25238_binded);
				if (((_25417_v != nullptr) && _1a894964d_isAccessibleDefine(_self_, _25417_v.get()._field_Public, _25417_v.get()._field_Token))) {
					return _25417_v;;
				};
			}
			_iter_next_1aba2dd6c:;
			++it;
			goto _iter_begin_1aba2dd6c;
		}
		_iter_end_1aba2dd6c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a86ada55_TypeAlias> _1a89472c7_FindTypeAlias(_1a89465e5_Sema* _self_, jule::Str _27932_ident, jule::Bool _27944_binded) {
	jule::Ptr<_1a86ada55_TypeAlias> _28117_ta = _1a893ae69_findTypeAliasInPackage(&((*(_self_))._field_files), _27932_ident, _27944_binded);;
	if ((_28117_ta != nullptr)) {
		return _28117_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba31556:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _28721_imp = *it;
			{
				if ((!(_1a8944758_impIsLookupable(&(_28721_imp), _27932_ident)))) {
					goto _iter_next_1aba31556;
				};
				_28117_ta=_1a893e049_FindTypeAlias(_28721_imp.ptr(), _27932_ident, _27944_binded);
				if (((_28117_ta != nullptr) && _1a894964d_isAccessibleDefine(_self_, _28117_ta.get()._field_Public, _28117_ta.get()._field_Token))) {
					return _28117_ta;;
				};
			}
			_iter_next_1aba31556:;
			++it;
			goto _iter_begin_1aba31556;
		}
		_iter_end_1aba31556:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88b6d3a_Struct> _1a894767e_FindStruct(_1a89465e5_Sema* _self_, jule::Str _30629_ident, jule::Bool _30641_binded) {
	jule::Ptr<_1a88b6d3a_Struct> _30817_s = _1a893b354_findStructInPackage(&((*(_self_))._field_files), _30629_ident, _30641_binded);;
	if ((_30817_s != nullptr)) {
		return _30817_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba33c40:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _31321_imp = *it;
			{
				if ((!(_1a8944758_impIsLookupable(&(_31321_imp), _30629_ident)))) {
					goto _iter_next_1aba33c40;
				};
				_30817_s=_1a893e401_FindStruct(_31321_imp.ptr(), _30629_ident, _30641_binded);
				if (((_30817_s != nullptr) && _1a894964d_isAccessibleDefine(_self_, _30817_s.get()._field_Public, _30817_s.get()._field_Token))) {
					return _30817_s;;
				};
			}
			_iter_next_1aba33c40:;
			++it;
			goto _iter_begin_1aba33c40;
		}
		_iter_end_1aba33c40:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88cc25c_Fn> _1a8947a36_FindFn(_1a89465e5_Sema* _self_, jule::Str _33125_ident, jule::Bool _33137_binded) {
	jule::Ptr<_1a88cc25c_Fn> _33317_f = _1a893b7b6_findFnInPackage(&((*(_self_))._field_files), _33125_ident, _33137_binded);;
	if ((_33317_f != nullptr)) {
		return _33317_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba36429:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _33921_imp = *it;
			{
				if ((!(_1a8944758_impIsLookupable(&(_33921_imp), _33125_ident)))) {
					goto _iter_next_1aba36429;
				};
				_33317_f=_1a893e7a8_FindFn(_33921_imp.ptr(), _33125_ident, _33137_binded);
				if (((_33317_f != nullptr) && _1a894964d_isAccessibleDefine(_self_, _33317_f.get()._field_Public, _33317_f.get()._field_Token))) {
					return _33317_f;;
				};
			}
			_iter_next_1aba36429:;
			++it;
			goto _iter_begin_1aba36429;
		}
		_iter_end_1aba36429:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88de47d_Trait> _1a8947d44_FindTrait(_1a89465e5_Sema* _self_, jule::Str _35828_ident) {
	jule::Ptr<_1a88de47d_Trait> _36017_t = _1a893bac4_findTraitInPackage(&((*(_self_))._field_files), _35828_ident);;
	if ((_36017_t != nullptr)) {
		return _36017_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba38805:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _36621_imp = *it;
			{
				if ((!(_1a8944758_impIsLookupable(&(_36621_imp), _35828_ident)))) {
					goto _iter_next_1aba38805;
				};
				_36017_t=_1a893eab6_FindTrait(_36621_imp.ptr(), _35828_ident);
				if (((_36017_t != nullptr) && _1a894964d_isAccessibleDefine(_self_, _36017_t.get()._field_Public, _36017_t.get()._field_Token))) {
					return _36017_t;;
				};
			}
			_iter_next_1aba38805:;
			++it;
			goto _iter_begin_1aba38805;
		}
		_iter_end_1aba38805:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88e1c11_Enum> _1a8948152_FindEnum(_1a89465e5_Sema* _self_, jule::Str _38527_ident) {
	jule::Ptr<_1a88e1c11_Enum> _38717_e = _1a893be15_findEnumInPackage(&((*(_self_))._field_files), _38527_ident);;
	if ((_38717_e != nullptr)) {
		return _38717_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba3ac8b:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1a8944758_impIsLookupable(&(_39321_imp), _38527_ident)))) {
					goto _iter_next_1aba3ac8b;
				};
				_38717_e=_1a893edc4_FindEnum(_39321_imp.ptr(), _38527_ident);
				if (((_38717_e != nullptr) && _1a894964d_isAccessibleDefine(_self_, _38717_e.get()._field_Public, _38717_e.get()._field_Token))) {
					return _38717_e;;
				};
			}
			_iter_next_1aba3ac8b:;
			++it;
			goto _iter_begin_1aba3ac8b;
		}
		_iter_end_1aba3ac8b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88e330b_TypeEnum> _1a8948460_FindTypeEnum(_1a89465e5_Sema* _self_, jule::Str _41231_ident) {
	jule::Ptr<_1a88e330b_TypeEnum> _41417_e = _1a893c256_findTypeEnumInPackage(&((*(_self_))._field_files), _41231_ident);;
	if ((_41417_e != nullptr)) {
		return _41417_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba3d222:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _42021_imp = *it;
			{
				if ((!(_1a8944758_impIsLookupable(&(_42021_imp), _41231_ident)))) {
					goto _iter_next_1aba3d222;
				};
				_41417_e=_1a89401d2_FindTypeEnum(_42021_imp.ptr(), _41231_ident);
				if (((_41417_e != nullptr) && _1a894964d_isAccessibleDefine(_self_, _41417_e.get()._field_Public, _41417_e.get()._field_Token))) {
					return _41417_e;;
				};
			}
			_iter_next_1aba3d222:;
			++it;
			goto _iter_begin_1aba3d222;
		}
		_iter_end_1aba3d222:;
	};
	return nullptr;;
}



inline jule::Bool _1a8948839_isFlag(_1a89465e5_Sema* _self_, jule::I64 _43621_flags) {
	return (((*(_self_))._field_flags & _43621_flags) == _43621_flags);;
}



inline void _1a8948aae_setCurrentFile(_1a89465e5_Sema* _self_, jule::Ptr<_1a89ab380_SymbolTable> _43837_f) {
	(*(_self_))._field_file=_43837_f;
}



inline void _1a8948e77_pushErr(_1a89465e5_Sema* _self_, jule::Ptr<_1a52684c0_Token> _44026_token, jule::Str _44041_fmt, jule::Slice<jule::Any> _44054_args) {
	{ jule::Slice<_1a4deb40b_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a8944417_compilerErr(&(_44026_token), true, _44041_fmt, _44054_args)); };
}



inline void _1a8949296_pushSuggestion(_1a89465e5_Sema* _self_, jule::Str _44533_fmt, jule::Slice<jule::Any> _44546_args) {
	{
		_1a894589c_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _44533_fmt, _44546_args);
	};
}



inline jule::Bool _1a894964d_isAccessibleDefine(_1a89465e5_Sema* _self_, jule::Bool _45033_public, jule::Ptr<_1a52684c0_Token> _45047_token) {
	return ((_45033_public || (_45047_token.get()._field_File == nullptr)) || (_1a526de87_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _1a526de87_Dir(_45047_token.get()._field_File.ptr())));;
}



inline jule::Bool _1a8949a9e_isDuplicatedIdent(_1a89465e5_Sema* _self_, jule::Uintptr _45732_itself, jule::Str _45749_ident, jule::Bool _45761_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba44569:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> *_45816_f = it;
			{
				if (_1a89ae55e_isDuplicatedIdent((*(_45816_f)).ptr(), _45732_itself, _45749_ident, _45761_binded)) {
					return true;;
				};
				{
					auto expr = &((*(_45816_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba45108:;
					if (it != expr_end) {
						jule::Ptr<_1a893d323_ImportInfo> *_46320_imp = it;
						{
							{
								auto expr = &((*(_46320_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1aba45b75:;
								if (it != expr_end) {
									jule::Ptr<_1a52684c0_Token> *_46424_selected = it;
									{
										if (((*(_46424_selected)).get()._field_Kind == _45749_ident)) {
											return true;;
										};
									}
									_iter_next_1aba45b75:;
									++it;
									goto _iter_begin_1aba45b75;
								}
								_iter_end_1aba45b75:;
							};
						}
						_iter_next_1aba45108:;
						++it;
						goto _iter_begin_1aba45108;
					}
					_iter_end_1aba45108:;
				};
			}
			_iter_next_1aba44569:;
			++it;
			goto _iter_begin_1aba44569;
		}
		_iter_end_1aba44569:;
	};
	return false;;
}



inline void _1a8949dbd_checkDirectives(jule::Ptr<_1a89465e5_Sema> _self_, jule::Slice<jule::Ptr<_1a88645ce_Directive>>* _47440_d, jule::Any _47466_o) {
	_1a8937240_directiveChecker _47517_dc = _1a8937240_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a88645ce_Directive>>>)((&((*(_47440_d)))))), ._field_o=_47466_o};;
	_1a8938807_check(&_47517_dc);
}



inline jule::Bool _1a894a31e_checkGenericQuantity(_1a89465e5_Sema* _self_, jule::I64 _48339_required, jule::I64 _48354_given, jule::Ptr<_1a52684c0_Token> _48366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_48339_required == 0LL) && (_48354_given > 0LL))) {
			_case_begin_1aba48194:;
			{
				_1a8948e77_pushErr(_self_, _48366_token, jule::Str("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_48339_required > 0LL) && (_48354_given == 0LL))) {
			_case_begin_1aba4821b:;
			{
				_1a8948e77_pushErr(_self_, _48366_token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required < _48354_given)) {
			_case_begin_1aba48293:;
			{
				_1a8948e77_pushErr(_self_, _48366_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required > _48354_given)) {
			_case_begin_1aba4831a:;
			{
				_1a8948e77_pushErr(_self_, _48366_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aba4811c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aba48051:;
	};
}



inline jule::Bool _1a894a6e8_isDuplicatedImportSelection(_1a89465e5_Sema* _self_, jule::Uintptr _50242_itself, jule::Str _50259_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba4ac02:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> *_50316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_50316_imp))) == _50242_itself)) {
					goto _iter_end_1aba4ac02;
				};
				if (_1a89408ca_existIdent((*(_50316_imp)).ptr(), _50259_ident)) {
					return true;;
				};
			}
			_iter_next_1aba4ac02:;
			++it;
			goto _iter_begin_1aba4ac02;
		}
		_iter_end_1aba4ac02:;
	};
	return false;;
}



inline jule::Any _1a894aab1_getImportDef(_1a89465e5_Sema* _self_, jule::Str _51527_ident, jule::Ptr<_1a893d323_ImportInfo>* _51544_imp) {
	if ((_1a8777cc8_findPackageBuiltinDef((*(_51544_imp)).get()._field_LinkPath, _51527_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_51544_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba4ca6c:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _51921_f = *it;
			{
				;
				jule::Any _52221_def = _1a89ae10d_defByIdent(_51921_f.ptr(), _51527_ident, false);;
				if ((_52221_def != nullptr)) {
					return _52221_def;;
				};
			}
			_iter_next_1aba4ca6c:;
			++it;
			goto _iter_begin_1aba4ca6c;
		}
		_iter_end_1aba4ca6c:;
	};
	return nullptr;;
}



inline jule::Bool _1aba5390d_checkImportSelection(_1a89465e5_Sema* _self_, jule::Ptr<_1a52684c0_Token>* _53043_ident, jule::Ptr<_1a8966901_Var>* _53059_s) {
	if ((!(_1a894964d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a893c751_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aba5756b_checkImportSelection(_1a89465e5_Sema* _self_, jule::Ptr<_1a52684c0_Token>* _53043_ident, jule::Ptr<_1a86ada55_TypeAlias>* _53059_s) {
	if ((!(_1a894964d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a893c751_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aba5b174_checkImportSelection(_1a89465e5_Sema* _self_, jule::Ptr<_1a52684c0_Token>* _53043_ident, jule::Ptr<_1a88b6d3a_Struct>* _53059_s) {
	if ((!(_1a894964d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a893c751_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aba60046_checkImportSelection(_1a89465e5_Sema* _self_, jule::Ptr<_1a52684c0_Token>* _53043_ident, jule::Ptr<_1a88de47d_Trait>* _53059_s) {
	if ((!(_1a894964d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a893c751_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aba63b71_checkImportSelection(_1a89465e5_Sema* _self_, jule::Ptr<_1a52684c0_Token>* _53043_ident, jule::Ptr<_1a88e1c11_Enum>* _53059_s) {
	if ((!(_1a894964d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a893c751_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aba6779b_checkImportSelection(_1a89465e5_Sema* _self_, jule::Ptr<_1a52684c0_Token>* _53043_ident, jule::Ptr<_1a88e330b_TypeEnum>* _53059_s) {
	if ((!(_1a894964d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a893c751_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aba6b3c6_checkImportSelection(_1a89465e5_Sema* _self_, jule::Ptr<_1a52684c0_Token>* _53043_ident, jule::Ptr<_1a88cc25c_Fn>* _53059_s) {
	if ((!(_1a894964d_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a893c751_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1a8948e77_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1a894b298_checkImportSelectedSelections(_1a89465e5_Sema* _self_, jule::Ptr<_1a893d323_ImportInfo>* _54453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_54453_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba4e640:;
		if (it != expr_end) {
			jule::Ptr<_1a52684c0_Token> _54616_ident = *it;
			{
				if (_54616_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_1aba4e640;
				};
				if (_1a894a6e8_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_54453_imp)))), _54616_ident.get()._field_Kind)) {
					_1a8948e77_pushErr(_self_, _54616_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
					_1a8949296_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1aba4e640;
				};
				jule::Any _55821_def = _1a894aab1_getImportDef(_self_, _54616_ident.get()._field_Kind, _54453_imp);;
				{
					auto &_match_expr{ _55821_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1aba52643:;
						{
							goto _iter_next_1aba4e640;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1aba50630:;
						{
							jule::Ptr<_1a8966901_Var> _56425_v = _55821_def.cast_ptr<_1a8966901_Var>(&__jule_any_type8);;
							__jule_func_result=(_1aba5390d_checkImportSelection(_self_, &(_54616_ident), &(_56425_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1aba51c6e:;
						{
							jule::Ptr<_1a86ada55_TypeAlias> _56725_ta = _55821_def.cast_ptr<_1a86ada55_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1aba5756b_checkImportSelection(_self_, &(_54616_ident), &(_56725_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1aba51cd5:;
						{
							jule::Ptr<_1a88b6d3a_Struct> _57025_s = _55821_def.cast_ptr<_1a88b6d3a_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1aba5b174_checkImportSelection(_self_, &(_54616_ident), &(_57025_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1aba52775:;
						{
							jule::Ptr<_1a88de47d_Trait> _57325_t = _55821_def.cast_ptr<_1a88de47d_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1aba60046_checkImportSelection(_self_, &(_54616_ident), &(_57325_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1aba527db:;
						{
							jule::Ptr<_1a88e1c11_Enum> _57625_e = _55821_def.cast_ptr<_1a88e1c11_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1aba63b71_checkImportSelection(_self_, &(_54616_ident), &(_57625_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1aba52852:;
						{
							jule::Ptr<_1a88e330b_TypeEnum> _57925_e = _55821_def.cast_ptr<_1a88e330b_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1aba6779b_checkImportSelection(_self_, &(_54616_ident), &(_57925_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1aba528b8:;
						{
							jule::Ptr<_1a88cc25c_Fn> _58225_f = _55821_def.cast_ptr<_1a88cc25c_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1aba6b3c6_checkImportSelection(_self_, &(_54616_ident), &(_58225_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1aba51a82:;
						{
							_1a8948e77_pushErr(_self_, _54616_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1aba4e640;
						}
					}
					_match_end_1aba51a2c:;
				};
			}
			_iter_next_1aba4e640:;
			++it;
			goto _iter_begin_1aba4e640;
		}
		_iter_end_1aba4e640:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aba703a8_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema* _self_, jule::Slice<jule::Ptr<_1a8966901_Var>>* _59362_s, jule::Ptr<_1a52684c0_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba71e15:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1aba5390d_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1aba71e15:;
			++it;
			goto _iter_begin_1aba71e15;
		}
		_iter_end_1aba71e15:;
	};
	return _59417_ok;;
}

inline jule::Bool _1aba73741_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema* _self_, jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>* _59362_s, jule::Ptr<_1a52684c0_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba74a1c:;
		if (it != expr_end) {
			jule::Ptr<_1a86ada55_TypeAlias> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1aba5756b_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1aba74a1c:;
			++it;
			goto _iter_begin_1aba74a1c;
		}
		_iter_end_1aba74a1c:;
	};
	return _59417_ok;;
}

inline jule::Bool _1aba73da1_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema* _self_, jule::Slice<jule::Ptr<_1a88b6d3a_Struct>>* _59362_s, jule::Ptr<_1a52684c0_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba77613:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1aba5b174_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1aba77613:;
			++it;
			goto _iter_begin_1aba77613;
		}
		_iter_end_1aba77613:;
	};
	return _59417_ok;;
}

inline jule::Bool _1aba76953_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema* _self_, jule::Slice<jule::Ptr<_1a88cc25c_Fn>>* _59362_s, jule::Ptr<_1a52684c0_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba7a22b:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1aba6b3c6_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1aba7a22b:;
			++it;
			goto _iter_begin_1aba7a22b;
		}
		_iter_end_1aba7a22b:;
	};
	return _59417_ok;;
}

inline jule::Bool _1aba77ec6_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema* _self_, jule::Slice<jule::Ptr<_1a88de47d_Trait>>* _59362_s, jule::Ptr<_1a52684c0_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba7cccd:;
		if (it != expr_end) {
			jule::Ptr<_1a88de47d_Trait> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1aba60046_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1aba7cccd:;
			++it;
			goto _iter_begin_1aba7cccd;
		}
		_iter_end_1aba7cccd:;
	};
	return _59417_ok;;
}

inline jule::Bool _1aba7c162_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema* _self_, jule::Slice<jule::Ptr<_1a88e1c11_Enum>>* _59362_s, jule::Ptr<_1a52684c0_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba80880:;
		if (it != expr_end) {
			jule::Ptr<_1a88e1c11_Enum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1aba63b71_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1aba80880:;
			++it;
			goto _iter_begin_1aba80880;
		}
		_iter_end_1aba80880:;
	};
	return _59417_ok;;
}

inline jule::Bool _1aba7ec14_checkImportsAllSelectionsFromCollection(_1a89465e5_Sema* _self_, jule::Slice<jule::Ptr<_1a88e330b_TypeEnum>>* _59362_s, jule::Ptr<_1a52684c0_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba834ba:;
		if (it != expr_end) {
			jule::Ptr<_1a88e330b_TypeEnum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1aba6779b_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1aba834ba:;
			++it;
			goto _iter_begin_1aba834ba;
		}
		_iter_end_1aba834ba:;
	};
	return _59417_ok;;
}



inline jule::Bool _1a894b9c4_checkImportAllSelections(_1a89465e5_Sema* _self_, jule::Ptr<_1a893d323_ImportInfo>* _60344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_60344_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba6becb:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> *_60516_file = it;
			{
				__jule_func_result=(_1aba703a8_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Vars), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aba73741_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeAliases), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aba73da1_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Structs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aba76953_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Funcs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aba77ec6_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Traits), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aba7c162_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Enums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aba7ec14_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeEnums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1aba6becb:;
			++it;
			goto _iter_begin_1aba6becb;
		}
		_iter_end_1aba6becb:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a894bce3_checkImportSelections(_1a89465e5_Sema* _self_, jule::Ptr<_1a893d323_ImportInfo>* _61745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_61745_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1a894b298_checkImportSelectedSelections(_self_, _61745_imp);
		return __jule_func_result;;
	} else if ((*(_61745_imp)).get()._field_ImportAll) {
		__jule_func_result = _1a894b9c4_checkImportAllSelections(_self_, _61745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a894c101_isUseAliasDuplication(_1a89465e5_Sema* _self_, jule::Ptr<_1a893d323_ImportInfo>* _62641_imp) {
	if (((*(_62641_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba85a3e:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _63121_imp2 = *it;
			{
				if ((_63121_imp2 == (*(_62641_imp)))) {
					goto _iter_end_1aba85a3e;
				};
				if ((_63121_imp2.get()._field_Alias == (*(_62641_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_63121_imp2.get()._field_Ident == _63121_imp2.get()._field_LinkPath) && (_63121_imp2.get()._field_Ident == (*(_62641_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1aba85a3e:;
			++it;
			goto _iter_begin_1aba85a3e;
		}
		_iter_end_1aba85a3e:;
	};
	return false;;
}



inline jule::Bool _1a894c40e_checkImport(_1a89465e5_Sema* _self_, jule::Ptr<_1a893d323_ImportInfo>* _64635_imp) {
	if (((*(_64635_imp)).get()._field_Binded || ((*(_64635_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1a894c101_isUseAliasDuplication(_self_, _64635_imp)) {
		_1a8948e77_pushErr(_self_, (*(_64635_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_64635_imp)).get()._field_Alias, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_64635_imp)).get()._field_Duplicate))) {
		jule::Ptr<_1a89465e5_Sema> _65721_sema = jule::new_ptr<_1a89465e5_Sema>(_1a89465e5_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1a896329e_check(_65721_sema, &((*(_64635_imp)).get()._field_Package.get()._field_Files));
		if ((_65721_sema.get()._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append(_65721_sema.get()._field_errors);;
			_65721_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1a894bce3_checkImportSelections(_self_, _64635_imp);;
}



inline void _1a894c5da_checkImports(_1a89465e5_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba8a37e:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _67221_file = *it;
			{
				_1a8948aae_setCurrentFile(_self_, _67221_file);
				{
					auto expr = &(_67221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba8bd42:;
					if (it != expr_end) {
						jule::Ptr<_1a893d323_ImportInfo> _67425_imp = *it;
						{
							jule::Bool _67521_ok = _1a894c40e_checkImport(_self_, &(_67425_imp));;
							if ((!(_67521_ok))) {
								return;;
							};
						}
						_iter_next_1aba8bd42:;
						++it;
						goto _iter_begin_1aba8bd42;
					}
					_iter_end_1aba8bd42:;
				};
			}
			_iter_next_1aba8a37e:;
			++it;
			goto _iter_begin_1aba8a37e;
		}
		_iter_end_1aba8a37e:;
	};
}



inline void _1a894c7b6_implFileImpls(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba8b99b:;
		if (it != expr_end) {
			jule::Ptr<_1a8919332_Impl> _68521_imp = *it;
			{
				_1a8959d01_implImpl(_self_, &(_68521_imp));
			}
			_iter_next_1aba8b99b:;
			++it;
			goto _iter_begin_1aba8b99b;
		}
		_iter_end_1aba8b99b:;
	};
}



inline void _1a894c992_implImpls(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba8d371:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _69121_file = *it;
			{
				_1a8948aae_setCurrentFile(_self_.ptr(), _69121_file);
				_1a894c7b6_implFileImpls(_self_);
			}
			_iter_next_1aba8d371:;
			++it;
			goto _iter_begin_1aba8d371;
		}
		_iter_end_1aba8d371:;
	};
}



inline void _1a894cb6d_checkEnums(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba8e718:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _69821_file = *it;
			{
				_1a8948aae_setCurrentFile(_self_.ptr(), _69821_file);
				{
					
					if ((!(_1a8956605_checkEnumDecls(_self_)))) {
						_case_begin_1aba901db:;
					}
					else if ((!(_1a8956869_checkTypeEnumDecls(_self_)))) {
						_case_begin_1aba90263:;
					}
					_match_end_1aba90142:;
				};
			}
			_iter_next_1aba8e718:;
			++it;
			goto _iter_begin_1aba8e718;
		}
		_iter_end_1aba8e718:;
	};
}



inline void _1a894cd49_checkFileInherits(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba8ebbe:;
		if (it != expr_end) {
			jule::Ptr<_1a88de47d_Trait> _70821_t = *it;
			{
				jule::Bool _70917_ok = _1a89580a7__checkTraitDeclInherits(_self_, &(_70821_t));;
				if ((!(_70917_ok))) {
					return;;
				};
			}
			_iter_next_1aba8ebbe:;
			++it;
			goto _iter_begin_1aba8ebbe;
		}
		_iter_end_1aba8ebbe:;
	};
}



inline void _1a894d025_checkInherits(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba90e9a:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _71721_file = *it;
			{
				_1a8948aae_setCurrentFile(_self_.ptr(), _71721_file);
				_1a894cd49_checkFileInherits(_self_);
			}
			_iter_next_1aba90e9a:;
			++it;
			goto _iter_begin_1aba90e9a;
		}
		_iter_end_1aba90e9a:;
	};
}



inline _1a86c0ade_typeChecker _1a894d476_typeChecker(jule::Ptr<_1a89465e5_Sema> _self_, jule::Trait<_1a86ccac9_Lookup> _72335_l, jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> _72350_generics, jule::Ptr<_1a86bec0e_referencer> _72413_referencer) {
	_1a86c0ade_typeChecker _72517_tc = _1a86c0ade_typeChecker{._field_s=_self_, ._field_rootLookup=_72335_l, ._field_lookup=_72335_l, ._field_referencer=_72413_referencer, ._field_useGenerics=_72350_generics, };;
	{
		auto &_match_expr{ _72335_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1aba93970:;
			{
				jule::Ptr<_1a8925eba_scopeChecker> _73421_hard = _1a8929056_getHardRoot(_72335_l.cast_ptr<_1a8925eba_scopeChecker>(0));;
				_72517_tc._field_refers=_73421_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1aba938c6:;
	};
	if (((_72413_referencer != nullptr) && (_72413_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _72413_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1aba94d28:;
				{
					_72517_tc._field_ownerAlias=_72413_referencer.get()._field_owner.cast_ptr<_1a86ada55_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1aba94cc3:;
		};
	};
	return _72517_tc;;
}



inline jule::Ptr<_1a86ae79d_TypeKind> _1a894d971_buildTypeWithRefers(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88970e5_TypeDecl>* _75044_t, jule::Trait<_1a86ccac9_Lookup> _75067_l, jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> _75113_generics, jule::Ptr<_1a86bec0e_referencer> _75141_referencer) {
	return ({ auto _wrap_copy = _1a894d476_typeChecker(_self_, _75067_l, _75113_generics, _75141_referencer); _1a86c7a3b_checkDecl(&_wrap_copy, _75044_t); });;
}



inline jule::Bool _1a894de6b_checkTypeWithRefers(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a86b6651_TypeSymbol>* _75744_t, jule::Trait<_1a86ccac9_Lookup> _75764_l, jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> _75813_generics, jule::Ptr<_1a86bec0e_referencer> _75841_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1a86b69b4_checked((*(_75744_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_75744_t)).get()._field_Kind=_1a894d971_buildTypeWithRefers(_self_, &((*(_75744_t)).get()._field_Decl), _75764_l, _75813_generics, _75841_referencer);
	__jule_func_result = _1a86b69b4_checked((*(_75744_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1a8917484_constraintChecker> _1a894e1d0_constraintChecker(jule::Ptr<_1a89465e5_Sema> _self_) {
	return jule::new_ptr<_1a8917484_constraintChecker>(_1a8917484_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1a894e587_checkType(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a86b6651_TypeSymbol>* _77234_t, jule::Trait<_1a86ccac9_Lookup> _77254_l) {
	return _1a894de6b_checkTypeWithRefers(_self_, _77234_t, _77254_l, nullptr, nullptr);;
}



inline jule::Ptr<_1a86ae79d_TypeKind> _1a894e9d8_buildTypeWithGenerics(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88970e5_TypeDecl>* _77846_t, jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> _77913_generics, jule::Ptr<_1a88d2d67_ReferenceStack> _77941_refers) {
	jule::Ptr<_1a86c0ade_typeChecker> _78017_tc = jule::new_ptr<_1a86c0ade_typeChecker>(_1a86c0ade_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a86ccac9_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a86ccac9_Lookup>(_self_, 3), ._field_refers=_77941_refers, ._field_useGenerics=_77913_generics, });;
	return _1a86c7a3b_checkDecl(_78017_tc.ptr(), _77846_t);;
}



inline jule::Ptr<_1a86ae79d_TypeKind> _1a8950104_selectType(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88970e5_TypeDecl>* _79635_t) {
	jule::Ptr<_1a86c0ade_typeChecker> _79717_tc = jule::new_ptr<_1a86c0ade_typeChecker>(_1a86c0ade_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a86ccac9_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a86ccac9_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1a86c7a3b_checkDecl(_79717_tc.ptr(), _79635_t);;
}



inline jule::Ptr<_1a8683860_Eval> _1a8950555_evalpd(jule::Ptr<_1a89465e5_Sema> _self_, jule::Trait<_1a86ccac9_Lookup> _80830_l, jule::Ptr<_1a86ae79d_TypeKind> _80845_p, jule::Ptr<_1a8966901_Var> _80863_owner) {
	jule::Ptr<_1a8683860_Eval> _80917_e = jule::new_ptr<_1a8683860_Eval>(_1a8683860_Eval{._field_s=_self_, ._field_lookup=_80830_l, ._field_owner=_80863_owner, });;
	{
		auto &_match_expr{ _80830_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1aba9d46e:;
			{
				_80917_e.get()._field_unsafety=_1a8928165_isUnsafe(_80830_l.cast_ptr<_1a8925eba_scopeChecker>(0));
			}
		}
		_match_end_1aba9d3d6:;
	};
	_80917_e.get()._field_prefix=_80845_p;
	return _80917_e;;
}



inline jule::Ptr<_1a8683860_Eval> _1a895090c_evalp(jule::Ptr<_1a89465e5_Sema> _self_, jule::Trait<_1a86ccac9_Lookup> _82329_l, jule::Ptr<_1a86ae79d_TypeKind> _82344_p) {
	return _1a8950555_evalpd(_self_, _82329_l, _82344_p, nullptr);;
}



inline jule::Ptr<_1a8683860_Eval> _1a8950c1a_eval(jule::Ptr<_1a89465e5_Sema> _self_, jule::Trait<_1a86ccac9_Lookup> _82828_l) {
	return _1a895090c_evalp(_self_, _82828_l, nullptr);;
}



inline jule::Bool _1a8951215_checkAssignType(jule::Ptr<_1a89465e5_Sema> _self_, jule::Bool _83235_destIsRef, jule::Ptr<_1a86ae79d_TypeKind>* _83257_dest, jule::Ptr<_1a865dbe2_Data>* _83314_d, jule::Ptr<_1a52684c0_Token> _83328_errorToken) {
	if ((*(_83314_d)).get()._field_Decl) {
		_1a8948e77_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_83235_destIsRef) {
		if ((!(_1a86aee63_Equal((*(_83257_dest)), (*(_83314_d)).get()._field_Kind)))) {
			_1a8948e77_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_83257_dest)).ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_83314_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_1a899b13e_assignTypeChecker> _84421_atc = jule::new_ptr<_1a899b13e_assignTypeChecker>(_1a899b13e_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_83257_dest)), ._field_d=(*(_83314_d)), ._field_errorToken=_83328_errorToken});;
		jule::Bool _85017_ok = _1a899c2b6_check(_84421_atc.ptr());;
		if ((!(_85017_ok))) {
			return false;;
		};
	};
	if (((!(_1a865e50b_IsConst((*(_83314_d)).ptr()))) || (_1a86b1eba_Prim((*(_83257_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _86017_kind = _1a86b1eba_Prim((*(_83257_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_1a553e565_IsSigInt(_86017_kind)) {
			_case_begin_1abaa4871:;
			{
				_1a5543426_SetI64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1a5542bc8_AsI64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1a553e851_IsUnsigInt(_86017_kind)) {
			_case_begin_1abaa48e8:;
			{
				_1a554369b_SetU64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1a5542e3c_AsU64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1a553ee17_IsFloat(_86017_kind)) {
			_case_begin_1abaa4970:;
			{
				_1a5543e1b_SetF64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1a55431a1_AsF64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1abaa47a5:;
	};
	return true;;
}



inline jule::Bool _1a8951666_checkTypeCompatibility(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a86ae79d_TypeKind>* _87447_dest, jule::Ptr<_1a86ae79d_TypeKind>* _87514_src, jule::Ptr<_1a52684c0_Token>* _87535_errorToken) {
	if (((*(_87514_src)) == nullptr)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_1a86b3b59_Tup((*(_87514_src)).ptr()) != nullptr)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_1a8999516_typeCompatibilityChecker _88917_tcc = _1a8999516_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_87447_dest)), ._field_src=(*(_87514_src)), ._field_errorToken=(*(_87535_errorToken))};;
	if (_1a899aaab_check(&_88917_tcc)) {
		return true;;
	};
	_1a8948e77_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_1a86ae79d_TypeKind> _1a8951ad9_buildNonGenericTypeKind(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88970e5_TypeDecl>* _91048_ast, jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>>* _91114_generics, jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>>* _91150_ignored) {
	jule::Ptr<_1a86c0ade_typeChecker> _91217_tc = jule::new_ptr<_1a86c0ade_typeChecker>(_1a86c0ade_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a86ccac9_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a86ccac9_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_91114_generics)), ._field_ignoredGenerics=(&((*(_91150_ignored)))), });;
	return _1a86c7a3b_checkDecl(_91217_tc.ptr(), _91048_ast);;
}



inline jule::Bool _1a8951ec4_buildFnNonGenericTypeKinds(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cee0d_FnIns>* _92251_f, jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>>* _92267_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>> _92417_generics = nullptr;;
	if (_1a88cc933_IsMethod((*(_92251_f)).get()._field_Decl.ptr())) {
		_92417_generics=jule::append((*(_92251_f)).get()._field_Decl.get()._field_Generics,(*(_92251_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_92417_generics=(*(_92251_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_92251_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abaad88b:;
		if (it != expr_end) {
			jule::Ptr<_1a88ce03e_ParamIns> _93121_p = *it;
			{
				if ((!(_1a88cb008_IsSelf(_93121_p.get()._field_Decl.ptr())))) {
					_93121_p.get()._field_Kind=_1a8951ad9_buildNonGenericTypeKind(_self_, &(_93121_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
					__jule_func_result=(__jule_func_result && (_93121_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1abaad88b:;
			++it;
			goto _iter_begin_1abaad88b;
		}
		_iter_end_1abaad88b:;
	};
	if ((!(_1a88cc6be_IsVoid((*(_92251_f)).get()._field_Decl.ptr())))) {
		(*(_92251_f)).get()._field_Result=_1a8951ad9_buildNonGenericTypeKind(_self_, &((*(_92251_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
		__jule_func_result=(__jule_func_result && ((*(_92251_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a88cee0d_FnIns> _1a89522e3_getTraitCheckFnKind(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cc25c_Fn>* _94444_f) {
	if (((*(_94444_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_94444_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_1a88cee0d_FnIns> _94817_ins = _1a88cd648_instanceForce((*(_94444_f)));;
	jule::Ptr<_1a86c0ade_typeChecker> _95017_tc = jule::new_ptr<_1a86c0ade_typeChecker>(_1a86c0ade_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a86ccac9_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a86ccac9_Lookup>(_self_, 3), });;
	{
		auto expr = &(_94817_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abab2b04:;
		if (it != expr_end) {
			jule::Ptr<_1a88ce03e_ParamIns> _95521_p = *it;
			{
				if ((!(_1a88cb008_IsSelf(_95521_p.get()._field_Decl.ptr())))) {
					_95521_p.get()._field_Kind=_1a86c7a3b_checkDecl(_95017_tc.ptr(), &(_95521_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1abab2b04:;
			++it;
			goto _iter_begin_1abab2b04;
		}
		_iter_end_1abab2b04:;
	};
	if ((!(_1a88cc6be_IsVoid((*(_94444_f)).ptr())))) {
		_94817_ins.get()._field_Result=_1a86c7a3b_checkDecl(_95017_tc.ptr(), &((*(_94444_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _94817_ins;;
}



inline jule::Bool _1a8952744_checkConstraintsFn(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cee0d_FnIns>* _96743_f, jule::Ptr<_1a52684c0_Token>* _96759_et, jule::Ptr<_1a88cee0d_FnIns> _96775_exist) {
	jule::Ptr<_1a8917484_constraintChecker> _96817_cc = _1a894e1d0_constraintChecker(_self_);;
	_96817_cc.get()._field_et=(*(_96759_et));
	_96817_cc.get()._field_fi=(*(_96743_f));
	if ((_96775_exist != nullptr)) {
		{
			auto expr = &(_96775_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abab5e04:;
			if (it != expr_end) {
				jule::I64 _97218_i = it - expr->begin();
				jule::Ptr<_1a86ad01b_InsGeneric> _97225_g = *it;
				{
					(*(_96743_f)).get()._field_Generics[_97218_i].get()._field_Constraint=_97225_g.get()._field_Constraint;
				}
				_iter_next_1abab5e04:;
				++it;
				_97218_i++;
				goto _iter_begin_1abab5e04;
			}
			_iter_end_1abab5e04:;
		};
	} else {
		_96817_cc.get()._field_uniq=true;
	};
	return _1a8918320_check(_96817_cc);;
}



inline jule::Bool _1a8952b95_checkConstraintsStruct(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b9b51_StructIns>* _98147_s, jule::Ptr<_1a52684c0_Token>* _98167_et, jule::Ptr<_1a88b9b51_StructIns> _98183_exist) {
	jule::Ptr<_1a8917484_constraintChecker> _98217_cc = _1a894e1d0_constraintChecker(_self_);;
	_98217_cc.get()._field_et=(*(_98167_et));
	_98217_cc.get()._field_si=(*(_98147_s));
	if ((_98183_exist != nullptr)) {
		{
			auto expr = &(_98183_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abab86dc:;
			if (it != expr_end) {
				jule::I64 _98618_i = it - expr->begin();
				jule::Ptr<_1a86ad01b_InsGeneric> _98625_g = *it;
				{
					(*(_98147_s)).get()._field_Generics[_98618_i].get()._field_Constraint=_98625_g.get()._field_Constraint;
				}
				_iter_next_1abab86dc:;
				++it;
				_98618_i++;
				goto _iter_begin_1abab86dc;
			}
			_iter_end_1abab86dc:;
		};
	} else {
		_98217_cc.get()._field_uniq=true;
	};
	return _1a8918320_check(_98217_cc);;
}



inline jule::Bool _1a895304c_fnEnvironment(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cee0d_FnIns>* _99838_f, jule::Fn<jule::Bool(jule::Ptr<_1a89465e5_Sema>*,jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>*)> _99849_algo) {
	jule::Ptr<_1a89465e5_Sema> _99917_sema = (*(_99838_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1a89ab380_SymbolTable> _100017_old = (*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1a8948aae_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100017_old);
	});;
	jule::Ptr<_1a89ab380_SymbolTable> _100217_file = _1a894543a_findFile(&((*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_99838_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_100217_file != nullptr)) {
		_1a8948aae_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100217_file);
	};
	jule::I64 _100717_size = (*(_99838_f)).get()._field_Generics.len();;
	if ((((*(_99838_f)).get()._field_Decl != nullptr) && ((*(_99838_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_100717_size+=(*(_99838_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> _101217_generics = jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>::alloc(0LL, _100717_size);;
	_1a89450d8_appendGenericTypeAliases(&(_101217_generics), _99838_f);
	jule::Bool _101513_ok = _99849_algo(&(_99917_sema), &(_101217_generics));;
	if ((_99917_sema != _self_)) {
		(_self_.get()._field_errors).append(_99917_sema.get()._field_errors);;
		_99917_sema.get()._field_errors=nullptr;
	};
	return _101513_ok;;
}



inline void _1a89532c2_checkFnParamKind(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88ce03e_ParamIns>* _102541_p) {
	(*(_102541_p)).get()._field_Kind.get()._field_Variadic=(*(_102541_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_102541_p)).get()._field_Decl.get()._field_Reference && (!(_1a86c9851_isValidForRef(&((*(_102541_p)).get()._field_Kind)))))) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_102541_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_102541_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _1a89535d0_reloadFnInsTypes(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cee0d_FnIns> _103240_f) {
	if ((_1a88d1294_IsBuiltin(_103240_f.ptr()) || _1a88d1508_IsAnon(_103240_f.ptr()))) {
		return true;;
	};
	return _1a895304c_fnEnvironment(_self_, &(_103240_f), jule::Fn<jule::Bool(jule::Ptr<_1a89465e5_Sema>*,jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>*)>([=](jule::Ptr<_1a89465e5_Sema>* _103643_sema, jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>* _103661_generics) mutable -> jule::Bool {
		jule::Bool _103721_ok = true;;
		{
			auto expr = &(_103240_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abac3d02:;
			if (it != expr_end) {
				jule::Ptr<_1a88ce03e_ParamIns> _103825_p = *it;
				{
					if (_1a88cb008_IsSelf(_103825_p.get()._field_Decl.ptr())) {
						if (_1a88cb26c_IsRef(_103825_p.get()._field_Decl.ptr())) {
							_103825_p.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a86ba754_Sptr>(_1a86ba754_Sptr{._field_Elem=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_103240_f.get()._field_Owner, 0)})}), 21)});
						} else {
							_103825_p.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_103240_f.get()._field_Owner, 0)});
						};
					} else {
						_103825_p.get()._field_Kind=_1a894e9d8_buildTypeWithGenerics((*(_103643_sema)), &(_103825_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
						if ((_103825_p.get()._field_Kind != nullptr)) {
							_1a89532c2_checkFnParamKind(_self_, &(_103825_p));
						} else {
							_103721_ok=false;
						};
					};
				}
				_iter_next_1abac3d02:;
				++it;
				goto _iter_begin_1abac3d02;
			}
			_iter_end_1abac3d02:;
		};
		if ((!(_1a88cc6be_IsVoid(_103240_f.get()._field_Decl.ptr())))) {
			_103240_f.get()._field_Result=_1a894e9d8_buildTypeWithGenerics((*(_103643_sema)), &(_103240_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
			_103721_ok=((_103240_f.get()._field_Result != nullptr) && _103721_ok);
		};
		return _103721_ok;;
	}));;
}



inline jule::Bool _1a8953a53_checkRefValidityForInitExpr(jule::Ptr<_1a89465e5_Sema> _self_, jule::Bool _106847_leftMut, jule::Ptr<_1a865dbe2_Data>* _106867_d, jule::Ptr<_1a52684c0_Token>* _106882_errorToken) {
	{
		auto &_match_expr{ (*(_106867_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1abac8730:;
			{
				goto _match_end_1abac87b8;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1abac9269:;
			{
				jule::Ptr<_1a88c2ede_TraitSubIdentExprModel> _107321_model = (*(_106867_d)).get()._field_Model.cast_ptr<_1a88c2ede_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_1a8943e72_isValidModelForRef(&(_107321_model.get()._field_Expr))))) {
					_1a8948e77_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107321_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1abac92d0:;
			{
				jule::Ptr<_1a88c37c5_StructSubIdentExprModel> _107921_model = (*(_106867_d)).get()._field_Model.cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_1a8943e72_isValidModelForRef(&(_107921_model.get()._field_Expr.get()._field_Model))))) {
					_1a8948e77_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107921_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1abac8a3d:;
			{
				_1a8948e77_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1abac8aa4:;
			{
				jule::Ptr<_1a88be3c5_UnaryExprModel> _108921_unary = (*(_106867_d)).get()._field_Model.cast_ptr<_1a88be3c5_UnaryExprModel>(&__jule_any_type74);;
				if ((_108921_unary.get()._field_Op.get()._field_Id == static_cast<jule::U64>(62LLU))) {
					if ((!(_1a8943e72_isValidModelForRef(&((*(_106867_d)).get()._field_Model))))) {
						_1a8948e77_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1abac87b8;
				};
				goto _case_begin_1abac8961;
			}
		}
		else {
			_case_begin_1abac8961:;
			{
				_1a8948e77_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1abac87b8:;
	};
	if ((_106847_leftMut && (!((*(_106867_d)).get()._field_Mutable)))) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1a895412a_checkValidityForInitExpr(jule::Ptr<_1a89465e5_Sema> _self_, jule::Bool _110944_leftMut, jule::Bool _110959_leftRef, jule::Ptr<_1a86ae79d_TypeKind>* _111010_leftKind, jule::Ptr<_1a865dbe2_Data>* _111036_d, jule::Ptr<_1a52684c0_Token>* _111051_errorToken) {
	if (((_110944_leftMut && (!((*(_111036_d)).get()._field_Mutable))) && _1a86b1041_Mutable((*(_111036_d)).get()._field_Kind.ptr()))) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_111051_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_111036_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	if (_110959_leftRef) {
		if ((!(_1a8953a53_checkRefValidityForInitExpr(_self_, _110944_leftMut, _111036_d, _111051_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1a899b13e_assignTypeChecker> _112017_atc = jule::new_ptr<_1a899b13e_assignTypeChecker>(_1a899b13e_assignTypeChecker{._field_s=_self_, ._field_d=(*(_111036_d)), ._field_errorToken=(*(_111051_errorToken))});;
	return _1a899b815_checkValidity(_112017_atc.ptr());;
}



inline jule::Bool _1a89544e3_checkTypeAliasDeclKind(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a86ada55_TypeAlias>* _112847_ta, jule::Trait<_1a86ccac9_Lookup> _112867_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a89ab380_SymbolTable> _112917_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1a8948aae_setCurrentFile(_self_.ptr(), _112917_old);
	});;
	if (((*(_112847_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_1a89ab380_SymbolTable> _113421_file = _1a894543a_findFile(&(_self_.get()._field_files), &((*(_112847_ta)).get()._field_Token.get()._field_File));;
		if ((_113421_file != nullptr)) {
			_1a8948aae_setCurrentFile(_self_.ptr(), _113421_file);
		};
	};
	__jule_func_result=_1a894de6b_checkTypeWithRefers(_self_, &((*(_112847_ta)).get()._field_Kind), _112867_l, nullptr, jule::new_ptr<_1a86bec0e_referencer>(_1a86bec0e_referencer{._field_ident=(*(_112847_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_112847_ta)), &__jule_any_type67), ._field_refs=(&((*(_112847_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_1a86b2bd0_Arr((*(_112847_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1a86b2bd0_Arr((*(_112847_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_112847_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1a8954812_checkTypeAliasDecl(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a86ada55_TypeAlias>* _115143_ta, jule::Trait<_1a86ccac9_Lookup> _115163_l) {
	if (_1a526ac64_IsIgnoreIdent((*(_115143_ta)).get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_115143_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1a89544e3_checkTypeAliasDeclKind(_self_, _115143_ta, _115163_l);
}



inline void _1a8954a87_checkTypeAliasDeclDup(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a86ada55_TypeAlias>* _115946_ta) {
	if (_1a526ac64_IsIgnoreIdent((*(_115946_ta)).get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_115946_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a8949a9e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_115946_ta)))), (*(_115946_ta)).get()._field_Ident, (*(_115946_ta)).get()._field_Binded)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_115946_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115946_ta)).get()._field_Ident, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a89544e3_checkTypeAliasDeclKind(_self_, _115946_ta, jule::Trait<_1a86ccac9_Lookup>(_self_, 3));
}



inline jule::Bool _1a8954ceb_checkTypeAliasDecls(jule::Ptr<_1a89465e5_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abae02b3:;
		if (it != expr_end) {
			jule::Ptr<_1a86ada55_TypeAlias> _117221_ta = *it;
			{
				_1a8954a87_checkTypeAliasDeclDup(_self_, &(_117221_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abae02b3:;
			++it;
			goto _iter_begin_1abae02b3;
		}
		_iter_end_1abae02b3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1abb13d86_checkEnumItemsDup(_1a89465e5_Sema* _self_, jule::Slice<jule::Ptr<_1a88e121b_EnumItem>> _118339_items) {
	{
		auto expr = &(_118339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb1510c:;
		if (it != expr_end) {
			jule::Ptr<_1a88e121b_EnumItem> *_118416_item = it;
			{
				if ((*(_118416_item)).get()._field_Ident.empty()) {
					goto _iter_next_1abb1510c;
				} else if (_1a526ac64_IsIgnoreIdent((*(_118416_item)).get()._field_Ident)) {
					_1a8948e77_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abb15c9a:;
						if (it != expr_end) {
							jule::Ptr<_1a88e121b_EnumItem> *_119024_citem = it;
							{
								if (((*(_118416_item)) == (*(_119024_citem)))) {
									goto _iter_end_1abb15c9a;
								} else if (((*(_118416_item)).get()._field_Ident == (*(_119024_citem)).get()._field_Ident)) {
									_1a8948e77_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118416_item)).get()._field_Ident, &__jule_any_type5)}));
									_1a8949296_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1abb15c9a;
								};
							}
							_iter_next_1abb15c9a:;
							++it;
							goto _iter_begin_1abb15c9a;
						}
						_iter_end_1abb15c9a:;
					};
				};
			}
			_iter_next_1abb1510c:;
			++it;
			goto _iter_begin_1abb1510c;
		}
		_iter_end_1abb1510c:;
	};
}

inline void _1abb1d3ce_checkEnumItemsDup(_1a89465e5_Sema* _self_, jule::Slice<jule::Ptr<_1a88e2c78_TypeEnumItem>> _118339_items) {
	{
		auto expr = &(_118339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb1e633:;
		if (it != expr_end) {
			jule::Ptr<_1a88e2c78_TypeEnumItem> *_118416_item = it;
			{
				if ((*(_118416_item)).get()._field_Ident.empty()) {
					goto _iter_next_1abb1e633;
				} else if (_1a526ac64_IsIgnoreIdent((*(_118416_item)).get()._field_Ident)) {
					_1a8948e77_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abb202c1:;
						if (it != expr_end) {
							jule::Ptr<_1a88e2c78_TypeEnumItem> *_119024_citem = it;
							{
								if (((*(_118416_item)) == (*(_119024_citem)))) {
									goto _iter_end_1abb202c1;
								} else if (((*(_118416_item)).get()._field_Ident == (*(_119024_citem)).get()._field_Ident)) {
									_1a8948e77_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118416_item)).get()._field_Ident, &__jule_any_type5)}));
									_1a8949296_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1abb202c1;
								};
							}
							_iter_next_1abb202c1:;
							++it;
							goto _iter_begin_1abb202c1;
						}
						_iter_end_1abb202c1:;
					};
				};
			}
			_iter_next_1abb1e633:;
			++it;
			goto _iter_begin_1abb1e633;
		}
		_iter_end_1abb1e633:;
	};
}



inline void _1a89552e6_checkEnumItemsStr(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88e1c11_Enum>* _120342_e) {
	jule::Ptr<_1a8683860_Eval> _120417_eval = _1a8950c1a_eval(_self_, jule::Trait<_1a86ccac9_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_120342_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abae1baa:;
		if (it != expr_end) {
			jule::Ptr<_1a88e121b_EnumItem> _120521_item = *it;
			{
				if (_1a88e15b2_AutoExpr(_120521_item.ptr())) {
					_120521_item.get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Constant=static__1a55413d0_NewStr(_120521_item.get()._field_Ident)})});
					_120521_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120521_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1a865dbe2_Data> _121425_d = _1a86a032c_evalExpr(_120417_eval, _120521_item.get()._field_Value.get()._field_Expr);;
					if ((_121425_d == nullptr)) {
						goto _iter_next_1abae1baa;
					};
					if ((!(_1a865e50b_IsConst(_121425_d.ptr())))) {
						_1a8948e77_pushErr(_self_.ptr(), _120521_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1a8951215_checkAssignType(_self_, false, &((*(_120342_e)).get()._field_Kind.get()._field_Kind), &(_121425_d), _120521_item.get()._field_Token);
					_120521_item.get()._field_Value.get()._field_Data=_121425_d;
				};
			}
			_iter_next_1abae1baa:;
			++it;
			goto _iter_begin_1abae1baa;
		}
		_iter_end_1abae1baa:;
	};
}



inline void _1abaea202_checkEnumItemInt(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a8683860_Eval>* _122946_eval, jule::Ptr<_1a88e1c11_Enum>* _122964_e, jule::Ptr<_1a86b7003_Prim>* _122975_prim, jule::Ptr<_1a88e121b_EnumItem>* _122993_item, jule::U64* _1229115_n) {
	if (_1a88e15b2_AutoExpr((*(_122993_item)).ptr())) {
		(*(_122993_item)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		{
			
{
				_case_begin_1abaecde7:;
				{
					(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1a5540d91_NewU64((*(_1229115_n)));
				}
			}
			_match_end_1abaecb1c:;
		};
		(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1a865dbe2_Data> _124421_d = _1a86a032c_evalExpr((*(_122946_eval)), (*(_122993_item)).get()._field_Value.get()._field_Expr);;
		if ((_124421_d == nullptr)) {
			return;;
		};
		if ((!(_1a865e50b_IsConst(_124421_d.ptr())))) {
			_1a8948e77_pushErr(_self_.ptr(), (*(_122993_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1a8951215_checkAssignType(_self_, false, &((*(_122964_e)).get()._field_Kind.get()._field_Kind), &(_124421_d), (*(_122993_item)).get()._field_Token);
		(*(_122993_item)).get()._field_Value.get()._field_Data=_124421_d;
		{
			
{
				_case_begin_1abb011c5:;
				{
					(*(_1229115_n))=static_cast<jule::U64>(_1a5542227_ReadU64((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1abb010d7:;
		};
	};
}

inline void _1abb07a5b_checkEnumItemInt(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a8683860_Eval>* _122946_eval, jule::Ptr<_1a88e1c11_Enum>* _122964_e, jule::Ptr<_1a86b7003_Prim>* _122975_prim, jule::Ptr<_1a88e121b_EnumItem>* _122993_item, jule::I64* _1229115_n) {
	if (_1a88e15b2_AutoExpr((*(_122993_item)).ptr())) {
		(*(_122993_item)).get()._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()});
		{
			
{
				_case_begin_1abb0a663:;
				{
					(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1a5540ae9_NewI64((*(_1229115_n)));
				}
			}
			_match_end_1abb0a410:;
		};
		(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1a865dbe2_Data> _124421_d = _1a86a032c_evalExpr((*(_122946_eval)), (*(_122993_item)).get()._field_Value.get()._field_Expr);;
		if ((_124421_d == nullptr)) {
			return;;
		};
		if ((!(_1a865e50b_IsConst(_124421_d.ptr())))) {
			_1a8948e77_pushErr(_self_.ptr(), (*(_122993_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1a8951215_checkAssignType(_self_, false, &((*(_122964_e)).get()._field_Kind.get()._field_Kind), &(_124421_d), (*(_122993_item)).get()._field_Token);
		(*(_122993_item)).get()._field_Value.get()._field_Data=_124421_d;
		{
			
{
				_case_begin_1abb0dac8:;
				{
					(*(_1229115_n))=static_cast<jule::I64>(_1a5541eb3_ReadI64((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1abb0da62:;
		};
	};
}



inline void _1abae6880_checkEnumItemsInt1(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a86b7003_Prim>* _126444_prim, jule::Ptr<_1a88e1c11_Enum>* _126462_e) {
	jule::U64 _126517_max = 0LLU;;
	{
		
{
			_case_begin_1abae86ea:;
			{
				_126517_max=static_cast<jule::U64>(_1a5539186_MaxU(_1a86b7333_Str((*(_126444_prim)).ptr())));
			}
		}
		_match_end_1abae84b9:;
	};
	jule::Ptr<_1a8683860_Eval> _127517_eval = _1a8950c1a_eval(_self_, jule::Trait<_1a86ccac9_Lookup>(_self_, 3));;
	jule::U64 _127617_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a88e121b_EnumItem> _127717_first = (*(_126462_e)).get()._field_Items[0LL];;
	_1abaea202_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_127717_first), &(_127617_n));
	if ((_127717_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1abaeab3c:;
				{
					_127617_n=static_cast<jule::U64>(_1a5542e3c_AsU64(_127717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1abb017be:;
		};
	};
	{
		auto expr = (*(_126462_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1abaec039:;
		if (it != expr_end) {
			jule::Ptr<_1a88e121b_EnumItem> _128921_item = *it;
			{
				if (((_1a88e15b2_AutoExpr(_128921_item.ptr()) && (_127617_n > 0LLU)) && ((_126517_max - _127617_n) <= 0LLU))) {
					_1a8948e77_pushErr(_self_.ptr(), _128921_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1abaec039;
				};
				(_127617_n)++;
				_1abaea202_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_128921_item), &(_127617_n));
			}
			_iter_next_1abaec039:;
			++it;
			goto _iter_begin_1abaec039;
		}
		_iter_end_1abaec039:;
	};
}

inline void _1abae61ba_checkEnumItemsInt1(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a86b7003_Prim>* _126444_prim, jule::Ptr<_1a88e1c11_Enum>* _126462_e) {
	jule::I64 _126517_max = 0LL;;
	{
		
{
			_case_begin_1abb05d01:;
			{
				_126517_max=static_cast<jule::I64>(_1a5538dde_MaxI(_1a86b7333_Str((*(_126444_prim)).ptr())));
			}
		}
		_match_end_1abb05b8b:;
	};
	jule::Ptr<_1a8683860_Eval> _127517_eval = _1a8950c1a_eval(_self_, jule::Trait<_1a86ccac9_Lookup>(_self_, 3));;
	jule::I64 _127617_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1a88e121b_EnumItem> _127717_first = (*(_126462_e)).get()._field_Items[0LL];;
	_1abb07a5b_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_127717_first), &(_127617_n));
	if ((_127717_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1abb08474:;
				{
					_127617_n=static_cast<jule::I64>(_1a5542bc8_AsI64(_127717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1abb06c47:;
		};
	};
	{
		auto expr = (*(_126462_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1abb091de:;
		if (it != expr_end) {
			jule::Ptr<_1a88e121b_EnumItem> _128921_item = *it;
			{
				if (((_1a88e15b2_AutoExpr(_128921_item.ptr()) && (_127617_n > 0LL)) && ((_126517_max - _127617_n) <= 0LL))) {
					_1a8948e77_pushErr(_self_.ptr(), _128921_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1abb091de;
				};
				(_127617_n)++;
				_1abb07a5b_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_128921_item), &(_127617_n));
			}
			_iter_next_1abb091de:;
			++it;
			goto _iter_begin_1abb091de;
		}
		_iter_end_1abb091de:;
	};
}



inline void _1a8955d96_checkEnumItemsInt(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88e1c11_Enum>* _129942_e) {
	jule::Ptr<_1a86b7003_Prim> _130013_prim = _1a86b1eba_Prim((*(_129942_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_1a553e565_IsSigInt(_130013_prim.get()._field_Kind)) {
			_case_begin_1abb03abd:;
			{
				_1abae61ba_checkEnumItemsInt1(_self_, &(_130013_prim), _129942_e);
			}
		}
		else {
			_case_begin_1abae6154:;
			{
				_1abae6880_checkEnumItemsInt1(_self_, &(_130013_prim), _129942_e);
			}
		}
		_match_end_1abae60ee:;
	};
}



inline void _1a895611b_checkEnumDecl(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88e1c11_Enum>* _130938_e) {
	if (_1a526ac64_IsIgnoreIdent((*(_130938_e)).get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a8949a9e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_130938_e)))), (*(_130938_e)).get()._field_Ident, false)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_130938_e)).get()._field_Ident, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_130938_e)).get()._field_Items.len() == 0LL)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_130938_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1abb13d86_checkEnumItemsDup(_self_.ptr(), (*(_130938_e)).get()._field_Items);
	if (((*(_130938_e)).get()._field_Kind != nullptr)) {
		if ((!(_1a894e587_checkType(_self_, &((*(_130938_e)).get()._field_Kind), jule::Trait<_1a86ccac9_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_130938_e)).get()._field_Kind=_1a8776b2e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	jule::Ptr<_1a86b7003_Prim> _133317_t = _1a86b1eba_Prim((*(_130938_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_133317_t == nullptr)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a86ba204_IsStr(_133317_t.ptr())) {
			_case_begin_1abb19a6d:;
			{
				_1a89552e6_checkEnumItemsStr(_self_, _130938_e);
			}
		}
		else if (_1a553eae8_IsInt(_1a86b7333_Str(_133317_t.ptr()))) {
			_case_begin_1abb19683:;
			{
				_1a8955d96_checkEnumItemsInt(_self_, _130938_e);
			}
		}
		else {
			_case_begin_1abb18ab1:;
			{
				_1a8948e77_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abb1895c:;
	};
}



inline void _1a8956391_checkTypeEnumDecl(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88e330b_TypeEnum>* _135042_e) {
	if (_1a526ac64_IsIgnoreIdent((*(_135042_e)).get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a8949a9e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_135042_e)))), (*(_135042_e)).get()._field_Ident, false)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_135042_e)).get()._field_Ident, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_135042_e)).get()._field_Items.len() == 0LL)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_135042_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1abb1d3ce_checkEnumItemsDup(_self_.ptr(), (*(_135042_e)).get()._field_Items);
	{
		auto expr = &((*(_135042_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb1d7ca:;
		if (it != expr_end) {
			jule::Ptr<_1a88e2c78_TypeEnumItem> _136421_item = *it;
			{
				if ((_136421_item.get()._field_Kind == nullptr)) {
					_1a8948e77_pushErr(_self_.ptr(), _136421_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1abb1d7ca;
				};
				jule::Bool _136917_ok = _1a894e587_checkType(_self_, &(_136421_item.get()._field_Kind), jule::Trait<_1a86ccac9_Lookup>(_self_, 3));;
				if ((!(_136917_ok))) {
					goto _iter_next_1abb1d7ca;
				};
				jule::Ptr<_1a86b7003_Prim> _137317_p = _1a86b1eba_Prim(_136421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_137317_p != nullptr) && _1a86ba468_IsAny(_137317_p.ptr()))) {
					_1a8948e77_pushErr(_self_.ptr(), _136421_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1abb1d7ca:;
			++it;
			goto _iter_begin_1abb1d7ca;
		}
		_iter_end_1abb1d7ca:;
	};
	if (((*(_135042_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1a88e2c78_TypeEnumItem> _137921_item = (*(_135042_e)).get()._field_Items[0LL];;
		_1a86ae79d_TypeKind _138017_tk = _1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>((*(_135042_e)), 4)};;
		if (((_137921_item.get()._field_Kind.get()._field_Kind != nullptr) && _1a86aee63_Equal(_137921_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1a86ae79d_TypeKind>)((&(_138017_tk))))))) {
			_1a8948e77_pushErr(_self_.ptr(), _137921_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1a88e363b_Str((*(_135042_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _1a8956605_checkEnumDecls(jule::Ptr<_1a89465e5_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb26ddd:;
		if (it != expr_end) {
			jule::Ptr<_1a88e1c11_Enum> _139121_e = *it;
			{
				_1a895611b_checkEnumDecl(_self_, &(_139121_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abb26ddd:;
			++it;
			goto _iter_begin_1abb26ddd;
		}
		_iter_end_1abb26ddd:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a8956869_checkTypeEnumDecls(jule::Ptr<_1a89465e5_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb28285:;
		if (it != expr_end) {
			jule::Ptr<_1a88e330b_TypeEnum> _140321_e = *it;
			{
				_1a8956391_checkTypeEnumDecl(_self_, &(_140321_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abb28285:;
			++it;
			goto _iter_begin_1abb28285;
		}
		_iter_end_1abb28285:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a8956b77_checkDeclGenerics(_1a89465e5_Sema* _self_, jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>>* _141337_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _141337_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb295b6:;
		if (it != expr_end) {
			jule::I64 _141513_i = it - expr->begin();
			jule::Ptr<_1a88a408b_GenericDecl> *_141516_g = it;
			{
				if (_1a526ac64_IsIgnoreIdent((*(_141516_g)).get()._field_Ident)) {
					_1a8948e77_pushErr(_self_, (*(_141516_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1abb295b6;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _141337_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb2a3ca:;
					if (it != expr_end) {
						jule::I64 _142417_j = it - expr->begin();
						jule::Ptr<_1a88a408b_GenericDecl> *_142420_ct = it;
						{
							{
								
								if ((_142417_j >= _141513_i)) {
									_case_begin_1abb2b871:;
									{
										goto _iter_end_1abb2a3ca;
									}
								}
								else if (((*(_141516_g)).get()._field_Ident == (*(_142420_ct)).get()._field_Ident)) {
									_case_begin_1abb2b8e8:;
									{
										_1a8948e77_pushErr(_self_, (*(_141516_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141516_g)).get()._field_Ident, &__jule_any_type5)}));
										_1a8949296_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1abb2a3ca;
									}
								}
								_match_end_1abb2b761:;
							};
						}
						_iter_next_1abb2a3ca:;
						++it;
						_142417_j++;
						goto _iter_begin_1abb2a3ca;
					}
					_iter_end_1abb2a3ca:;
				};
			}
			_iter_next_1abb295b6:;
			++it;
			_141513_i++;
			goto _iter_begin_1abb295b6;
		}
		_iter_end_1abb295b6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8956e85_checkFnDeclParamsDup(_1a89465e5_Sema* _self_, jule::Ptr<_1a88cc25c_Fn>* _144040_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_144040_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb2d7a7:;
		if (it != expr_end) {
			jule::I64 _144313_i = it - expr->begin();
			jule::Ptr<_1a88ca920_Param> *_144316_p = it;
			{
				{
					auto expr = &((*(_144040_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb2e357:;
					if (it != expr_end) {
						jule::Ptr<_1a88a408b_GenericDecl> *_144520_g = it;
						{
							if (((*(_144316_p)).get()._field_Ident == (*(_144520_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_1a8948e77_pushErr(_self_, (*(_144316_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144316_p)).get()._field_Ident, &__jule_any_type5)}));
								_1a8949296_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1abb2d7a7;
							};
						}
						_iter_next_1abb2e357:;
						++it;
						goto _iter_begin_1abb2e357;
					}
					_iter_end_1abb2e357:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_144040_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb2ebc6:;
					if (it != expr_end) {
						jule::I64 _145517_j = it - expr->begin();
						jule::Ptr<_1a88ca920_Param> *_145520_jp = it;
						{
							{
								
								if ((_145517_j >= _144313_i)) {
									_case_begin_1abb31612:;
									{
										goto _iter_end_1abb2ebc6;
									}
								}
								else if (_1a526ac64_IsIgnoreIdent((*(_144316_p)).get()._field_Ident) || _1a526ac64_IsIgnoreIdent((*(_145520_jp)).get()._field_Ident) || _1a526b00b_IsAnonIdent((*(_144316_p)).get()._field_Ident) || _1a526b00b_IsAnonIdent((*(_145520_jp)).get()._field_Ident)) {
									_case_begin_1abb31689:;
									{
										goto _iter_end_1abb2ebc6;
									}
								}
								else if (((*(_144316_p)).get()._field_Ident == (*(_145520_jp)).get()._field_Ident)) {
									_case_begin_1abb31711:;
									{
										__jule_func_result=false;
										_1a8948e77_pushErr(_self_, (*(_144316_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144316_p)).get()._field_Ident, &__jule_any_type5)}));
										_1a8949296_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1abb2d7a7;
									}
								}
								_match_end_1abb314e1:;
							};
						}
						_iter_next_1abb2ebc6:;
						++it;
						_145517_j++;
						goto _iter_begin_1abb2ebc6;
					}
					_iter_end_1abb2ebc6:;
				};
			}
			_iter_next_1abb2d7a7:;
			++it;
			_144313_i++;
			goto _iter_begin_1abb2d7a7;
		}
		_iter_end_1abb2d7a7:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8957293_checkFnDeclResultDup(_1a89465e5_Sema* _self_, jule::Ptr<_1a88cc25c_Fn>* _147740_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1a88cc6be_IsVoid((*(_147740_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_147740_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb34291:;
		if (it != expr_end) {
			jule::I64 _148413_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> *_148416_v = it;
			{
				if ((_1a526ac64_IsIgnoreIdent((*(_148416_v)).get()._field_Kind) || _1a526b00b_IsAnonIdent((*(_148416_v)).get()._field_Kind))) {
					goto _iter_next_1abb34291;
				};
				{
					auto expr = &((*(_147740_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb35704:;
					if (it != expr_end) {
						jule::Ptr<_1a88a408b_GenericDecl> *_148920_g = it;
						{
							if (((*(_148416_v)).get()._field_Kind == (*(_148920_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1abb35704:;
						++it;
						goto _iter_begin_1abb35704;
					}
					_iter_end_1abb35704:;
				};
				{
					auto expr = &((*(_147740_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb36628:;
					if (it != expr_end) {
						jule::Ptr<_1a88ca920_Param> *_149520_p = it;
						{
							if (((*(_148416_v)).get()._field_Kind == (*(_149520_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1abb36628:;
						++it;
						goto _iter_begin_1abb36628;
					}
					_iter_end_1abb36628:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_147740_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb379ae:;
					if (it != expr_end) {
						jule::I64 _150317_j = it - expr->begin();
						jule::Ptr<_1a52684c0_Token> *_150320_jv = it;
						{
							{
								
								if ((_150317_j >= _148413_i)) {
									_case_begin_1abb386a2:;
									{
										goto _iter_end_1abb379ae;
									}
								}
								else if (((*(_150320_jv)).get()._field_Kind == (*(_148416_v)).get()._field_Kind)) {
									_case_begin_1abb38729:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1abb38592:;
							};
						}
						_iter_next_1abb379ae:;
						++it;
						_150317_j++;
						goto _iter_begin_1abb379ae;
					}
					_iter_end_1abb379ae:;
				};
				goto _iter_next_1abb34291;
				_julec_label_exist:;
				_1a8948e77_pushErr(_self_, (*(_148416_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_148416_v)).get()._field_Kind, &__jule_any_type5)}));
				_1a8949296_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1abb34291:;
			++it;
			_148413_i++;
			goto _iter_begin_1abb34291;
		}
		_iter_end_1abb34291:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a89575a1_checkFnVariadicParam(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cc25c_Fn>* _152245_f) {
	if (((*(_152245_f)).get()._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1a88ca920_Param> _152617_param = (*(_152245_f)).get()._field_Params[((*(_152245_f)).get()._field_Params.len() - 1LL)];;
	if ((_152617_param.get()._field_Variadic && _152617_param.get()._field_Reference)) {
		_1a8948e77_pushErr(_self_.ptr(), _152617_param.get()._field_Token, jule::Str("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1a8957826_checkFnDeclPrototype(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cc25c_Fn>* _153545_f) {
	if (((*(_153545_f)).get()._field_Exceptional && (*(_153545_f)).get()._field_Binded)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_153545_f)).get()._field_Exceptional) {
		if (_1a88ccb97_IsEntryPoint((*(_153545_f)).ptr())) {
			_1a8948e77_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1a88cce0b_IsInit((*(_153545_f)).ptr())) {
			_1a8948e77_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a8956b77_checkDeclGenerics(_self_.ptr(), &((*(_153545_f)).get()._field_Generics))))) {
			_case_begin_1abb3d256:;
		}
		else if ((!(_1a8956e85_checkFnDeclParamsDup(_self_.ptr(), _153545_f)))) {
			_case_begin_1abb3d2cd:;
		}
		else if ((!(_1a8957293_checkFnDeclResultDup(_self_.ptr(), _153545_f)))) {
			_case_begin_1abb3d355:;
		}
		else if ((!(_1a89575a1_checkFnVariadicParam(_self_, _153545_f)))) {
			_case_begin_1abb3e510:;
		}
		_match_end_1abb3d81c:;
	};
}



inline jule::Bool _1a8957c77_catchTraitInheritCycle(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88de47d_Trait> _155742_t1, jule::Ptr<_1a88de47d_Trait> _155758_t2, jule::Str* _155775_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &(_155758_t2.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb413e1:;
		if (it != expr_end) {
			jule::Ptr<_1a86b6651_TypeSymbol> _155921_i = *it;
			{
				if ((_155921_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1abb413e1;
				};
				jule::Ptr<_1a88de47d_Trait> _156321_t3 = _1a86b3681_Trait(_155921_i.get()._field_Kind.ptr());;
				if ((_155742_t1 == _156321_t3)) {
					_1a895c4eb_pushCycleError(_self_.ptr(), &(_155758_t2.get()._field_Ident), &(_156321_t3.get()._field_Ident), _155775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1a8957c77_catchTraitInheritCycle(_self_, _155742_t1, _156321_t3, _155775_message)))) {
					_1a895c4eb_pushCycleError(_self_.ptr(), &(_155758_t2.get()._field_Ident), &(_156321_t3.get()._field_Ident), _155775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abb413e1:;
			++it;
			goto _iter_begin_1abb413e1;
		}
		_iter_end_1abb413e1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a89580a7__checkTraitDeclInherits(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88de47d_Trait>* _157648_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_157648_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb44092:;
		if (it != expr_end) {
			jule::I64 _157814_i = it - expr->begin();
			jule::Ptr<_1a86b6651_TypeSymbol> _157821_it = *it;
			{
				if ((!(_1a894e587_checkType(_self_, &(_157821_it), jule::Trait<_1a86ccac9_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1abb44092;
				};
				jule::Ptr<_1a88de47d_Trait> _158321_t2 = _1a86b3681_Trait(_157821_it.get()._field_Kind.ptr());;
				if ((_158321_t2 == nullptr)) {
					_1a8948e77_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*(_157648_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_1a86aeb55_Str(_157821_it.get()._field_Kind.ptr()), &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1abb44092;
				};
				{
					auto expr = &((*(_157648_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb459cd:;
					if (it != expr_end) {
						jule::I64 _158917_j = it - expr->begin();
						jule::Ptr<_1a86b6651_TypeSymbol> _158920_it2 = *it;
						{
							if ((_158917_j >= _157814_i)) {
								goto _iter_end_1abb459cd;
							};
							if (((_158920_it2.get()._field_Kind != nullptr) && _1a86aee63_Equal(_157821_it.get()._field_Kind, _158920_it2.get()._field_Kind))) {
								_1a8948e77_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_158321_t2.get()._field_Ident, &__jule_any_type5)}));
								__jule_func_result=false;
								goto _iter_end_1abb459cd;
							};
						}
						_iter_next_1abb459cd:;
						++it;
						_158917_j++;
						goto _iter_begin_1abb459cd;
					}
					_iter_end_1abb459cd:;
				};
				if (((*(_157648_t)) == _158321_t2)) {
					_1a8948e77_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_157648_t)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				} else {
					jule::Str _160325_message = jule::Str();;
					__jule_func_result=(__jule_func_result && _1a8957c77_catchTraitInheritCycle(_self_, (*(_157648_t)), _158321_t2, &(_160325_message)));
					if ((_160325_message.len() > 0LL)) {
						jule::Str _160629_errMsg = _160325_message;;
						_160325_message=jule::Str();
						_1a895c4eb_pushCycleError(_self_.ptr(), &((*(_157648_t)).get()._field_Ident), &(_158321_t2.get()._field_Ident), &(_160325_message));
						_160629_errMsg+=_160325_message;
						_1a8948e77_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_160629_errMsg, &__jule_any_type5)}));
					};
				};
			}
			_iter_next_1abb44092:;
			++it;
			_157814_i++;
			goto _iter_begin_1abb44092;
		}
		_iter_end_1abb44092:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a895833d_checkTraitDeclInherits(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88de47d_Trait>* _161747_t) {
	{
		auto expr = &((*(_161747_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb43c62:;
		if (it != expr_end) {
			jule::I64 _161814_i = it - expr->begin();
			jule::Ptr<_1a86b6651_TypeSymbol> _161821_it = *it;
			{
				jule::Ptr<_1a88de47d_Trait> _161921_t1 = _1a86b3681_Trait(_161821_it.get()._field_Kind.ptr());;
				{
					auto expr = &((*(_161747_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb4c3ec:;
					if (it != expr_end) {
						jule::I64 _162018_j = it - expr->begin();
						jule::Ptr<_1a86b6651_TypeSymbol> _162025_it2 = *it;
						{
							if ((_162018_j == _161814_i)) {
								goto _iter_next_1abb4c3ec;
							};
							jule::Ptr<_1a88de47d_Trait> _162425_t2 = _1a86b3681_Trait(_162025_it2.get()._field_Kind.ptr());;
							{
								auto expr = &(_161921_t1.get()._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1abb4d7c7:;
								if (it != expr_end) {
									jule::Ptr<_1a88cc25c_Fn> _162529_t1m = *it;
									{
										jule::Ptr<_1a88cc25c_Fn> _162629_t2m = _1a88e032a_FindMethod(_162425_t2.ptr(), _162529_t1m.get()._field_Ident);;
										if ((_162629_t2m == nullptr)) {
											goto _iter_next_1abb4d7c7;
										};
										jule::Ptr<_1a88cee0d_FnIns> _163025_t1f = _1a89522e3_getTraitCheckFnKind(_self_, &(_162529_t1m));;
										jule::Ptr<_1a88cee0d_FnIns> _163125_t2f = _1a89522e3_getTraitCheckFnKind(_self_, &(_162629_t2m));;
										if ((!(_1a88d0cbb_equalTrait(_163025_t1f, &(_163125_t2f))))) {
											_1a8948e77_pushErr(_self_.ptr(), _161821_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*(_161747_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_162425_t2.get()._field_Ident, &__jule_any_type5),jule::Any(_1a88d1b24_GetKindStr(_163025_t1f.ptr(), true), &__jule_any_type5),jule::Any(_1a88d1b24_GetKindStr(_163125_t2f.ptr(), true), &__jule_any_type5)}));
											return;;
										};
									}
									_iter_next_1abb4d7c7:;
									++it;
									goto _iter_begin_1abb4d7c7;
								}
								_iter_end_1abb4d7c7:;
							};
						}
						_iter_next_1abb4c3ec:;
						++it;
						_162018_j++;
						goto _iter_begin_1abb4c3ec;
					}
					_iter_end_1abb4c3ec:;
				};
			}
			_iter_next_1abb43c62:;
			++it;
			_161814_i++;
			goto _iter_begin_1abb43c62;
		}
		_iter_end_1abb43c62:;
	};
}



inline void _1a89585b3_checkTraitDeclMethod(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cc25c_Fn>* _164245_f) {
	if (_1a526ac64_IsIgnoreIdent((*(_164245_f)).get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_164245_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a526b00b_IsAnonIdent((*(_164245_f)).get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_164245_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*(_164245_f)).get()._field_sema=_self_;
	_1a8957826_checkFnDeclPrototype(_self_, _164245_f);
	jule::Ptr<_1a88cee0d_FnIns> _165017_ins = _1a88cd8ac_instance((*(_164245_f)));;
	_1a89535d0_reloadFnInsTypes(_self_, _165017_ins);
	_165017_ins.get()._field_reloaded=true;
	_1a88cdb87_appendInstance((*(_164245_f)).ptr(), &(_165017_ins));
}



inline void _1a8958838_checkTraitDeclMethods(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88de47d_Trait>* _165646_t) {
	{
		auto expr = &((*(_165646_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb53ba6:;
		if (it != expr_end) {
			jule::I64 _165714_i = it - expr->begin();
			jule::Ptr<_1a88cc25c_Fn> _165721_f = *it;
			{
				_1a89585b3_checkTraitDeclMethod(_self_, &(_165721_f));
				(*(_165646_t)).get()._field_Mutable=((*(_165646_t)).get()._field_Mutable || _165721_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1a88e0946_findMethodInherit((*(_165646_t)).ptr(), &(_165721_f.get()._field_Ident)) != nullptr)) {
					_1a8948e77_pushErr(_self_.ptr(), _165721_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_165721_f.get()._field_Ident, &__jule_any_type5)}));
					_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1abb53ba6;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_165646_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb568ac:;
					if (it != expr_end) {
						jule::I64 _167417_j = it - expr->begin();
						jule::Ptr<_1a88cc25c_Fn> _167420_jf = *it;
						{
							{
								
								if ((_167417_j >= _165714_i)) {
									_case_begin_1abb574c3:;
									{
										goto _iter_end_1abb568ac;
									}
								}
								else if ((_165721_f.get()._field_Ident == _167420_jf.get()._field_Ident)) {
									_case_begin_1abb5754a:;
									{
										_1a8948e77_pushErr(_self_.ptr(), _165721_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_165721_f.get()._field_Ident, &__jule_any_type5)}));
										_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1abb568ac;
									}
								}
								_match_end_1abb573b3:;
							};
						}
						_iter_next_1abb568ac:;
						++it;
						_167417_j++;
						goto _iter_begin_1abb568ac;
					}
					_iter_end_1abb568ac:;
				};
			}
			_iter_next_1abb53ba6:;
			++it;
			_165714_i++;
			goto _iter_begin_1abb53ba6;
		}
		_iter_end_1abb53ba6:;
	};
}



inline void _1a8958aad_checkTraitDecl(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88de47d_Trait>* _169339_t) {
	if (_1a526ac64_IsIgnoreIdent((*(_169339_t)).get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_169339_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a8949a9e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_169339_t)))), (*(_169339_t)).get()._field_Ident, false)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_169339_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_169339_t)).get()._field_Ident, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a895833d_checkTraitDeclInherits(_self_, _169339_t);
	_1a8958838_checkTraitDeclMethods(_self_, _169339_t);
}



inline jule::Bool _1a8958d22_checkTraitDecls(jule::Ptr<_1a89465e5_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb5b0a9:;
		if (it != expr_end) {
			jule::Ptr<_1a88de47d_Trait> _170721_t = *it;
			{
				_1a8958aad_checkTraitDecl(_self_, &(_170721_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abb5b0a9:;
			++it;
			goto _iter_begin_1abb5b0a9;
		}
		_iter_end_1abb5b0a9:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a89591c9_checkTraitImplMethods(_1a89465e5_Sema* _self_, jule::Ptr<_1a88de47d_Trait>* _171745_base, jule::Ptr<_1a8919332_Impl>* _171760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_171760_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb5c86e:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> *_171916_f = it;
			{
				if ((_1a88e032a_FindMethod((*(_171745_base)).ptr(), (*(_171916_f)).get()._field_Ident) == nullptr)) {
					_1a8948e77_pushErr(_self_, (*(_171916_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_171745_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_171916_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1abb5c86e:;
			++it;
			goto _iter_begin_1abb5c86e;
		}
		_iter_end_1abb5c86e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8959581_implToStruct(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b6d3a_Struct>* _172837_dest, jule::Ptr<_1a8919332_Impl>* _172857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_172857_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb5e8c6:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _173221_f = *it;
			{
				if (((_1a88b792e_FindMethod((*(_172837_dest)).ptr(), _173221_f.get()._field_Ident, _173221_f.get()._field_Statically) != nullptr) || (_1a88b804a_FindField((*(_172837_dest)).ptr(), _173221_f.get()._field_Ident) != nullptr))) {
					_1a8948e77_pushErr(_self_.ptr(), _173221_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_172837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_173221_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1abb5e8c6;
				};
				if ((((*(_172837_dest)).get()._field_Generics.len() > 0LL) && (_173221_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_173221_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abb61b4d:;
						if (it != expr_end) {
							jule::Ptr<_1a88a408b_GenericDecl> _174024_fg = *it;
							{
								{
									auto expr = &((*(_172837_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1abb62434:;
									if (it != expr_end) {
										jule::Ptr<_1a88a408b_GenericDecl> _174128_dg = *it;
										{
											if ((_174024_fg.get()._field_Ident == _174128_dg.get()._field_Ident)) {
												_1a8948e77_pushErr(_self_.ptr(), _174024_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1abb62434:;
										++it;
										goto _iter_begin_1abb62434;
									}
									_iter_end_1abb62434:;
								};
							}
							_iter_next_1abb61b4d:;
							++it;
							goto _iter_begin_1abb61b4d;
						}
						_iter_end_1abb61b4d:;
					};
				};
				_1a8949dbd_checkDirectives(_self_, &(_173221_f.get()._field_Directives), jule::Any(_173221_f, &__jule_any_type65));
				_173221_f.get()._field_sema=_self_;
				_173221_f.get()._field_Owner=(*(_172837_dest));
				{ jule::Slice<jule::Ptr<_1a88cc25c_Fn>> &__jule_push_dest = (*(_172837_dest)).get()._field_Methods; __jule_push_dest.push(_173221_f); };
			}
			_iter_next_1abb5e8c6:;
			++it;
			goto _iter_begin_1abb5e8c6;
		}
		_iter_end_1abb5e8c6:;
	};
	{
		auto expr = &((*(_172857_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb64733:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> _175721_v = *it;
			{
				;
				if (((_1a88b792e_FindMethod((*(_172837_dest)).ptr(), _175721_v.get()._field_Ident, true) != nullptr) || (_1a88b7c3c_FindStatic((*(_172837_dest)).ptr(), _175721_v.get()._field_Ident) != nullptr))) {
					_1a8948e77_pushErr(_self_.ptr(), _175721_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_172837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_175721_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1abb64733;
				};
				{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = (*(_172837_dest)).get()._field_Statics; __jule_push_dest.push(_175721_v); };
			}
			_iter_next_1abb64733:;
			++it;
			goto _iter_begin_1abb64733;
		}
		_iter_end_1abb64733:;
	};
	return __jule_func_result;;
}



inline void _1a8959806_implTrait(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a8919332_Impl>* _177034_decl) {
	jule::Ptr<_1a86ae79d_TypeKind> _177117_base_t = _1a8950104_selectType(_self_, &((*(_177034_decl)).get()._field_Base));;
	if ((_177117_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a88de47d_Trait> _177517_base = _1a86b3681_Trait(_177117_base_t.ptr());;
	if ((_177517_base == nullptr)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_177117_base_t.ptr()), &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a86ae79d_TypeKind> _178217_destT = _1a8950104_selectType(_self_, &((*(_177034_decl)).get()._field_Dest));;
	if ((_178217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a88b9b51_StructIns> _178617_destS = _1a86b341c_Struct(_178217_destT.ptr());;
	if ((_178617_destS == nullptr)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_178217_destT.ptr()), &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a88b6d3a_Struct> _179317_dest = _178617_destS.get()._field_Decl;;
	if ((_1a526de87_Dir(_179317_dest.get()._field_Token.get()._field_File.ptr()) != _1a526de87_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1a8964dd8_pushImplemented(_177517_base, &(_179317_dest));
	_1a8965191_pushImplements(&(_179317_dest), _177517_base);
	if (((*(_177034_decl)).get()._field_Statics.len() > 0LL)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a89591c9_checkTraitImplMethods(_self_.ptr(), &(_177517_base), _177034_decl)))) {
			_case_begin_1abb6c9c2:;
		}
		else if ((!(_1a8959581_implToStruct(_self_, &(_179317_dest), _177034_decl)))) {
			_case_begin_1abb6ca49:;
		}
		_match_end_1abb6ae87:;
	};
}



inline void _1a8959a7b_implStruct(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a8919332_Impl>* _181335_decl) {
	jule::Ptr<_1a86ae79d_TypeKind> _181417_destT = _1a8950104_selectType(_self_, &((*(_181335_decl)).get()._field_Dest));;
	if ((_181417_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a88b9b51_StructIns> _181817_destS = _1a86b341c_Struct(_181417_destT.ptr());;
	if ((_181817_destS == nullptr)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_181335_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_181417_destT.ptr()), &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a88b6d3a_Struct> _182517_dest = _181817_destS.get()._field_Decl;;
	if ((_1a526de87_Dir(_182517_dest.get()._field_Token.get()._field_File.ptr()) != _1a526de87_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_181335_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a8959581_implToStruct(_self_, &(_182517_dest), _181335_decl)))) {
			_case_begin_1abb72059:;
		}
		_match_end_1abb6ed7b:;
	};
}



inline void _1a8959d01_implImpl(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a8919332_Impl>* _183733_decl) {
	{
		
		if (_1a89196d9_IsTraitImpl((*(_183733_decl)).ptr())) {
			_case_begin_1abb72a0a:;
			{
				_1a8959806_implTrait(_self_, _183733_decl);
			}
		}
		else if (_1a891994d_IsStructImpl((*(_183733_decl)).ptr())) {
			_case_begin_1abb72a82:;
			{
				_1a8959a7b_implStruct(_self_, _183733_decl);
			}
		}
		_match_end_1abb728ea:;
	};
}



inline void _1a895a120_checkVarDecl(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a8966901_Var>* _184837_decl, jule::Trait<_1a86ccac9_Lookup> _184853_l) {
	if (_1a526ac64_IsIgnoreIdent((*(_184837_decl)).get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a8966ed9_IsTypeInferred((*(_184837_decl)).ptr())) {
		if ((!(_1a8966c75_IsInitialized((*(_184837_decl)).ptr())))) {
			_1a8948e77_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1a894e587_checkType(_self_, &((*(_184837_decl)).get()._field_Kind), _184853_l);
	};
	if (((*(_184837_decl)).get()._field_Constant && (*(_184837_decl)).get()._field_Reference)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_1a8966c75_IsInitialized((*(_184837_decl)).ptr())))) {
		if ((*(_184837_decl)).get()._field_Constant) {
			_1a8948e77_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_184837_decl)).get()._field_Statically) {
			_1a8948e77_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_184837_decl)).get()._field_Reference) {
			_1a8948e77_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1a895a395_checkGlobalVarDecl(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a8966901_Var>* _188043_decl) {
	if (_1a8949a9e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_188043_decl)))), (*(_188043_decl)).get()._field_Ident, (*(_188043_decl)).get()._field_Binded)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_188043_decl)).get()._field_Ident, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_188043_decl)).get()._field_Binded && (*(_188043_decl)).get()._field_Constant)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*(_188043_decl)).get()._field_Binded)) && (!((*(_188043_decl)).get()._field_Constant))) && (!((*(_188043_decl)).get()._field_Statically)))) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1a8949dbd_checkDirectives(_self_, &((*(_188043_decl)).get()._field_Directives), jule::Any((*(_188043_decl)), &__jule_any_type8));
	_1a895a120_checkVarDecl(_self_, _188043_decl, jule::Trait<_1a86ccac9_Lookup>(_self_, 3));
}



inline jule::Bool _1a895a609_checkGlobalDecls(jule::Ptr<_1a89465e5_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb7b4b4:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> _189821_decl = *it;
			{
				_1a895a395_checkGlobalVarDecl(_self_, &(_189821_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abb7b4b4:;
			++it;
			goto _iter_begin_1abb7b4b4;
		}
		_iter_end_1abb7b4b4:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a895a9b1_checkStructTraitImpl(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b6d3a_Struct>* _190845_strct, jule::Ptr<_1a88de47d_Trait>* _190866_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_190866_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb7cb9c:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _190921_tf = *it;
			{
				jule::Bool _191021_exist = false;;
				jule::Ptr<_1a88cc25c_Fn> _191121_sf = _1a88b792e_FindMethod((*(_190845_strct)).ptr(), _190921_tf.get()._field_Ident, _190921_tf.get()._field_Statically);;
				jule::Ptr<_1a88cee0d_FnIns> _191217_tfK = _1a89522e3_getTraitCheckFnKind(_self_, &(_190921_tf));;
				if ((_191121_sf != nullptr)) {
					jule::Ptr<_1a88cee0d_FnIns> _191425_sfK = _1a89522e3_getTraitCheckFnKind(_self_, &(_191121_sf));;
					_191021_exist=_1a88d0cbb_equalTrait(_191217_tfK, &(_191425_sfK));
				};
				if (_191021_exist) {
					jule::Ptr<_1a88645ce_Directive> _191821_d = _1a86a84bc_findDirective(&(_191121_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_191821_d != nullptr)) {
						_1a8948e77_pushErr(_self_.ptr(), _191821_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1a8948e77_pushErr(_self_.ptr(), (*(_190845_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_190866_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_1a88d1b24_GetKindStr(_191217_tfK.ptr(), true), &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1abb7cb9c:;
			++it;
			goto _iter_begin_1abb7cb9c;
		}
		_iter_end_1abb7cb9c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a895acbe_checkStructImpls(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b6d3a_Struct>* _193241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_193241_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb828c7:;
		if (it != expr_end) {
			jule::Ptr<_1a88de47d_Trait> _193421_trt = *it;
			{
				__jule_func_result=(_1a895a9b1_checkStructTraitImpl(_self_, _193241_s, &(_193421_trt)) && __jule_func_result);
			}
			_iter_next_1abb828c7:;
			++it;
			goto _iter_begin_1abb828c7;
		}
		_iter_end_1abb828c7:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a895b0cc_checkStructFields(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b6d3a_Struct>* _194042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_194042_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb83cb3:;
		if (it != expr_end) {
			jule::Ptr<_1a88b4266_Field> _194221_f = *it;
			{
				_194221_f.get()._field_Owner=(*(_194042_st));
				{
					auto expr = &((*(_194042_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb8480d:;
					if (it != expr_end) {
						jule::Ptr<_1a88b4266_Field> _194420_cf = *it;
						{
							if ((_194221_f == _194420_cf)) {
								goto _iter_end_1abb8480d;
							} else if ((_194221_f.get()._field_Ident == _194420_cf.get()._field_Ident)) {
								_1a8948e77_pushErr(_self_.ptr(), _194221_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_194221_f.get()._field_Ident, &__jule_any_type5)}));
								_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1abb8480d:;
						++it;
						goto _iter_begin_1abb8480d;
					}
					_iter_end_1abb8480d:;
				};
			}
			_iter_next_1abb83cb3:;
			++it;
			goto _iter_begin_1abb83cb3;
		}
		_iter_end_1abb83cb3:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a895b352_checkStructDecl(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b6d3a_Struct>* _195740_s) {
	if (_1a526ac64_IsIgnoreIdent((*(_195740_s)).get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_195740_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a8949a9e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_195740_s)))), (*(_195740_s)).get()._field_Ident, (*(_195740_s)).get()._field_Binded)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_195740_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_195740_s)).get()._field_Ident, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a8949dbd_checkDirectives(_self_, &((*(_195740_s)).get()._field_Directives), jule::Any((*(_195740_s)), &__jule_any_type66));
	{
		
		if ((!(_1a8956b77_checkDeclGenerics(_self_.ptr(), &((*(_195740_s)).get()._field_Generics))))) {
			_case_begin_1abb8647a:;
		}
		else if ((!(_1a895b0cc_checkStructFields(_self_, _195740_s)))) {
			_case_begin_1abb87ed7:;
		}
		else if ((!(_1a895acbe_checkStructImpls(_self_, _195740_s)))) {
			_case_begin_1abb8804d:;
		}
		else if ((!(_1a895bdbe_checkFuncDecls(_self_, &((*(_195740_s)).get()._field_Methods))))) {
			_case_begin_1abb880b4:;
		}
		_match_end_1abb87da5:;
	};
}



inline jule::Bool _1a895b5b6_checkStructDecls(jule::Ptr<_1a89465e5_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb897d0:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> _197721_s = *it;
			{
				_1a895b352_checkStructDecl(_self_, &(_197721_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abb897d0:;
			++it;
			goto _iter_begin_1abb897d0;
		}
		_iter_end_1abb897d0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a895b83b_checkAnonFnDecl(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cc25c_Fn>* _198740_f) {
	(*(_198740_f)).get()._field_sema=_self_;
	_1a8957826_checkFnDeclPrototype(_self_, _198740_f);
}



inline void _1a895bab1_checkFnDecl(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cc25c_Fn>* _199236_f) {
	if (_1a526ac64_IsIgnoreIdent((*(_199236_f)).get()._field_Ident)) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a88cd170_IsAnon((*(_199236_f)).ptr())) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1a8949dbd_checkDirectives(_self_, &((*(_199236_f)).get()._field_Directives), jule::Any((*(_199236_f)), &__jule_any_type65));
	_1a895b83b_checkAnonFnDecl(_self_, _199236_f);
	if ((((*(_199236_f)).get()._field_Owner == nullptr) && _1a8949a9e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_199236_f)))), (*(_199236_f)).get()._field_Ident, (*(_199236_f)).get()._field_Binded))) {
		if ((*(_199236_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_1a88cc25c_Fn> _200421_init = _1a8947a36_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_200421_init != nullptr)) {
				return;;
			};
		};
		_1a8948e77_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_199236_f)).get()._field_Ident, &__jule_any_type5)}));
		_1a8949296_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a895bdbe_checkFuncDecls(jule::Ptr<_1a89465e5_Sema> _self_, jule::Slice<jule::Ptr<_1a88cc25c_Fn>>* _201439_funcs) {
	{
		auto expr = _201439_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb901cb:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _201521_f = *it;
			{
				_1a895bab1_checkFnDecl(_self_, &(_201521_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1abb901cb:;
			++it;
			goto _iter_begin_1abb901cb;
		}
		_iter_end_1abb901cb:;
	};
	return true;;
}



inline jule::Bool _1a895c133_checkFnDecls(jule::Ptr<_1a89465e5_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a895bdbe_checkFuncDecls(_self_, &(_self_.get()._field_file.get()._field_Funcs));
	return __jule_func_result;;
}



inline void _1a895c4eb_pushCycleError(_1a89465e5_Sema* _self_, jule::Str* _203030_st1, jule::Str* _203041_st2, jule::Str* _203056_message) {
	;
	jule::Str _203213_refers_to = _1a4deb84b_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_203030_st1)), &__jule_any_type5),jule::Any((*(_203041_st2)), &__jule_any_type5)}));;
	((*(_203056_message))).buffer.insert(0, (((_1a4d599b8_Repeat(jule::Str(" ", 1), 7LL) + _203213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a895c94c_checkCrossCycle(_1a89465e5_Sema* _self_, jule::Ptr<_1a88b6d3a_Struct>* _203631_st1, jule::Ptr<_1a88b6d3a_Struct>* _203646_st2, jule::Str* _203665_message) {
	{
		auto expr = &((*(_203646_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb937ea:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> *_203716_u = it;
			{
				if (((*(_203716_u)) == (*(_203631_st1)))) {
					_1a895c4eb_pushCycleError(_self_, &((*(_203646_st2)).get()._field_Ident), &((*(_203716_u)).get()._field_Ident), _203665_message);
					return false;;
				};
				if ((!(_1a895c94c_checkCrossCycle(_self_, _203631_st1, _203716_u, _203665_message)))) {
					_1a895c4eb_pushCycleError(_self_, &((*(_203646_st2)).get()._field_Ident), &((*(_203716_u)).get()._field_Ident), _203665_message);
					return false;;
				};
			}
			_iter_next_1abb937ea:;
			++it;
			goto _iter_begin_1abb937ea;
		}
		_iter_end_1abb937ea:;
	};
	return true;;
}



inline jule::Bool _1a895cdc0_checkStructDeriveIllegalCycles(_1a89465e5_Sema* _self_, jule::Str _205049_derive, jule::Ptr<_1a88b6d3a_Struct>* _205063_st1, jule::Ptr<_1a86ae79d_TypeKind>* _205082_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a88b6d3a_Struct> _205117_st2 = _1a86ca4de_getStructFromKind((*(_205082_k)));;
	if ((_205117_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_205063_st1)) == _205117_st2)) {
		_1a8948e77_pushErr(_self_, (*(_205063_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_205049_derive, &__jule_any_type5),jule::Any((*(_205063_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _206317_message = jule::Str();;
	if ((!(_1a895c94c_checkCrossCycle(_self_, _205063_st1, &(_205117_st2), &(_206317_message))))) {
		jule::Str _206521_errMsg = _206317_message;;
		_206317_message=jule::Str();
		_1a895c4eb_pushCycleError(_self_, &((*(_205063_st1)).get()._field_Ident), &(_205117_st2.get()._field_Ident), &(_206317_message));
		_206521_errMsg+=_206317_message;
		_1a8948e77_pushErr(_self_, (*(_205063_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_205049_derive, &__jule_any_type5),jule::Any(_206521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a895d211_checkStructInsDeriveClone(_1a89465e5_Sema* _self_, jule::Ptr<_1a88b9b51_StructIns> _207548_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1a88b8666_IsDerives(_207548_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_207548_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb99537:;
		if (it != expr_end) {
			jule::Ptr<_1a88b915b_FieldIns> _207921_f = *it;
			{
				if ((_207921_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1abb99537;
				};
				if ((!(_1a86b19e2_SupportsCloning(_207921_f.get()._field_Kind.ptr())))) {
					_1a8948e77_pushErr(_self_, _207548_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_207921_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1a895cdc0_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_207548_st.get()._field_Decl), &(_207921_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abb99537:;
			++it;
			goto _iter_begin_1abb99537;
		}
		_iter_end_1abb99537:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a895d3ed_checkPackageDecls(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb98e71:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _209721_f = *it;
			{
				_1a8948aae_setCurrentFile(_self_.ptr(), _209721_f);
				if ((!(_1a8954ceb_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1abb98e71:;
			++it;
			goto _iter_begin_1abb98e71;
		}
		_iter_end_1abb98e71:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb9c826:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _210421_f = *it;
			{
				_1a8948aae_setCurrentFile(_self_.ptr(), _210421_f);
				if ((!(_1a8958d22_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1abb9c826:;
			++it;
			goto _iter_begin_1abb9c826;
		}
		_iter_end_1abb9c826:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb9c1c7:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _211121_f = *it;
			{
				_1a8948aae_setCurrentFile(_self_.ptr(), _211121_f);
				if ((!(_1a895a609_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1abb9c1c7:;
			++it;
			goto _iter_begin_1abb9c1c7;
		}
		_iter_end_1abb9c1c7:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb9cd21:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _211821_f = *it;
			{
				_1a8948aae_setCurrentFile(_self_.ptr(), _211821_f);
				{
					
					if ((!(_1a895c133_checkFnDecls(_self_)))) {
						_case_begin_1abb9eb47:;
					}
					else if ((!(_1a895b5b6_checkStructDecls(_self_)))) {
						_case_begin_1abb9ebad:;
					}
					else {
						_case_begin_1abb9ead1:;
						{
							goto _iter_next_1abb9cd21;
						}
					}
					_match_end_1abb9ea6a:;
				};
				return;;
			}
			_iter_next_1abb9cd21:;
			++it;
			goto _iter_begin_1abb9cd21;
		}
		_iter_end_1abb9cd21:;
	};
}



inline void _1a895d73e_checkDataForTypeInference(_1a89465e5_Sema* _self_, jule::Ptr<_1a865dbe2_Data>* _213045_d, jule::Ptr<_1a52684c0_Token>* _213056_err_token) {
	{
		
		if (_1a865e033_IsNil((*(_213045_d)).ptr())) {
			_case_begin_1abba0a16:;
			{
				_1a8948e77_pushErr(_self_, (*(_213056_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1a865e297_IsVoid((*(_213045_d)).ptr())) {
			_case_begin_1abba0a8d:;
			{
				_1a8948e77_pushErr(_self_, (*(_213056_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_213045_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_1abba0b15:;
			{
				_1a8948e77_pushErr(_self_, (*(_213056_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abba08e5:;
	};
}



inline void _1a895d9c5_checkVar(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a8966901_Var>* _214133_v) {
	if ((*(_214133_v)).get()._field_Binded) {
		return;;
	};
	if (_1a8966ed9_IsTypeInferred((*(_214133_v)).ptr())) {
		(*(_214133_v)).get()._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=(*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_1a895d73e_checkDataForTypeInference(_self_.ptr(), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_1a895412a_checkValidityForInitExpr(_self_, (*(_214133_v)).get()._field_Mutable, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_1a86bd35b_Arr> _215821_arr = _1a86b2bd0_Arr((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_215821_arr != nullptr)) {
			if (_215821_arr.get()._field_Auto) {
				jule::Ptr<_1a86bd35b_Arr> _216125_dataArr = _1a86b2bd0_Arr((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_216125_dataArr != nullptr)) {
					_215821_arr.get()._field_N=_216125_dataArr.get()._field_N;
				};
			};
		};
		if (_1a8951215_checkAssignType(_self_, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1a895412a_checkValidityForInitExpr(_self_, (*(_214133_v)).get()._field_Mutable, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_214133_v)).get()._field_Reference && (!(_1a86c9851_isValidForRef(&((*(_214133_v)).get()._field_Kind.get()._field_Kind)))))) {
		_1a8948e77_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_214133_v)).get()._field_Constant) {
		jule::Bool _218317_comptime = _1a86b3dbd_comptime((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
		if (((!(_1a865e50b_IsConst((*(_214133_v)).get()._field_Value.get()._field_Data.ptr()))) && (!(_218317_comptime)))) {
			_1a8948e77_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_218317_comptime && (_1a86b50ab_comptimeRange((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()) != nullptr))) {
			_1a8948e77_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		(*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1a86b3b59_Tup((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_214133_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1a895dce4_checkTypeVar(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a8966901_Var>* _220037_decl, jule::Trait<_1a86ccac9_Lookup> _220053_l) {
	if (((*(_220037_decl)).get()._field_Binded || (!(_1a8966c75_IsInitialized((*(_220037_decl)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a8683860_Eval> _220517_eval = nullptr;;
	if (((*(_220037_decl)).get()._field_Kind != nullptr)) {
		_220517_eval=_1a8950555_evalpd(_self_, _220053_l, (*(_220037_decl)).get()._field_Kind.get()._field_Kind, (*(_220037_decl)));
	} else {
		_220517_eval=_1a8950555_evalpd(_self_, _220053_l, nullptr, (*(_220037_decl)));
	};
	_220517_eval.get()._field_immutable=(!((*(_220037_decl)).get()._field_Mutable));
	(*(_220037_decl)).get()._field_Value.get()._field_Data=_1a86a032c_evalExpr(_220517_eval, (*(_220037_decl)).get()._field_Value.get()._field_Expr);
	if (((*(_220037_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1a895d9c5_checkVar(_self_, _220037_decl);
}



inline void _1a895dec0_checkGlobalTypes(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbb11db:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> _222121_decl = *it;
			{
				if (((_1a8966c75_IsInitialized(_222121_decl.ptr()) && (_222121_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1a8966ed9_IsTypeInferred(_222121_decl.ptr()) && (_222121_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1a895dce4_checkTypeVar(_self_, &(_222121_decl), jule::Trait<_1a86ccac9_Lookup>(_self_, 3));
				};
			}
			_iter_next_1abbb11db:;
			++it;
			goto _iter_begin_1abbb11db;
		}
		_iter_end_1abbb11db:;
	};
}



inline jule::Ptr<_1a88cee0d_FnIns> _1a895e377_readyToCheckFn(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b9b51_StructIns>* _223239_s, jule::Ptr<_1a88cc25c_Fn>* _223259_f) {
	jule::Ptr<_1a88cee0d_FnIns> _223317_ins = _1a88cd8ac_instance((*(_223259_f)));;
	if (((*(_223259_f)).get()._field_Instances.len() != 0LL)) {
		return _223317_ins;;
	};
	_223317_ins.get()._field_Owner=(*(_223239_s));
	_1a88cdb87_appendInstance((*(_223259_f)).ptr(), &(_223317_ins));
	_223317_ins.get()._field_reloaded=true;
	if (_1a89535d0_reloadFnInsTypes(_self_, _223317_ins)) {
		return _223317_ins;;
	};
	return nullptr;;
}



inline void _1a895e696_checkTypeMethod(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b9b51_StructIns>* _224640_s, jule::Ptr<_1a88cc25c_Fn>* _224660_f) {
	if (((*(_224660_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _225117_ins = (*(_224660_f)).get()._field_Instances[0LL];;
	if ((_225117_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1a8961d6e_checkFnIns(_self_, &(_225117_ins));
}



inline jule::Ptr<_1a88cee0d_FnIns> _1a895eae7_checkStructInsOp(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b9b51_StructIns>* _225941_s, jule::Ptr<_1a88cc25c_Fn>* _225961_f, jule::Fn<jule::Bool(jule::Ptr<_1a88cc25c_Fn>)> _225969_p) {
	if (((((*(_225961_f)) == nullptr) || ((*(_225961_f)).get()._field_Generics.len() > 0LL)) || (!(_225969_p((*(_225961_f))))))) {
		return nullptr;;
	};
	return (*(_225961_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _1a895ee9e_checkStructEnv(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b9b51_StructIns>* _226939_s, jule::Ptr<_1a52684c0_Token> _226958_errorToken) {
	jule::Bool __jule_func_result = false;
	_1a86c0ade_typeChecker _227017_tc = _1a86c0ade_typeChecker{._field_s=(*(_226939_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1a86ccac9_Lookup>((*(_226939_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1a86ccac9_Lookup>((*(_226939_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1a86bec0e_referencer>(_1a86bec0e_referencer{._field_ident=(*(_226939_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_226939_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_226939_s)).get()._field_Refers, };;
	if (((*(_226939_s)).get()._field_Generics.len() > 0LL)) {
		_227017_tc._field_useGenerics=jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>::alloc(0LL, (*(_226939_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_226939_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abbb9d93:;
			if (it != expr_end) {
				jule::I64 _228318_i = it - expr->begin();
				jule::Ptr<_1a86ad01b_InsGeneric> _228325_g = *it;
				{
					jule::Ptr<_1a88a408b_GenericDecl> _228425_decl = (*(_226939_s)).get()._field_Decl.get()._field_Generics[_228318_i];;
					{ jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> &__jule_push_dest = _227017_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1a86ada55_TypeAlias>(_1a86ada55_TypeAlias{._field_Token=_228425_decl.get()._field_Token, ._field_Ident=_228425_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=_228325_g.get()._field_Kind}), })); };
				}
				_iter_next_1abbb9d93:;
				++it;
				_228318_i++;
				goto _iter_begin_1abbb9d93;
			}
			_iter_end_1abbb9d93:;
		};
	};
	jule::Ptr<_1a89ab380_SymbolTable> _229317_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1a8948aae_setCurrentFile(_self_.ptr(), _229317_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_226939_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1a89ab380_SymbolTable> _229721_file = _1a894543a_findFile(&(_self_.get()._field_files), &((*(_226939_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_229721_file != nullptr)) {
			_1a8948aae_setCurrentFile(_self_.ptr(), _229721_file);
		};
	};
	if (((*(_226939_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1a8917484_constraintChecker> _230421_cc = _1a894e1d0_constraintChecker(_self_);;
		_230421_cc.get()._field_et=_226958_errorToken;
		_230421_cc.get()._field_si=(*(_226939_s));
		_230421_cc.get()._field_genericsA=_227017_tc._field_useGenerics;
		_230421_cc.get()._field_uniq=true;
		if ((!(_1a8918320_check(_230421_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_226939_s)).get()._field_Statics.len() > 0LL)) {
		jule::I64 _231721_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_227017_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_226939_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abbc1691:;
			if (it != expr_end) {
				jule::Ptr<_1a8966901_Var> _231925_v = *it;
				{
					_1a895a120_checkVarDecl(_self_, &(_231925_v), jule::Trait<_1a86ccac9_Lookup>(_self_, 3));
					_1a895dce4_checkTypeVar(_self_, &(_231925_v), jule::Trait<_1a86ccac9_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _231721_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1abbc1691:;
				++it;
				goto _iter_begin_1abbc1691;
			}
			_iter_end_1abbc1691:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_227017_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1a8683860_Eval> _233017_eval = _1a8950c1a_eval(_self_, jule::Trait<_1a86ccac9_Lookup>(_self_, 3));;
	(*(_226939_s)).get()._field_Comparable=(!((*(_226939_s)).get()._field_Decl.get()._field_Binded));
	{
		auto expr = &((*(_226939_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbc4342:;
		if (it != expr_end) {
			jule::Ptr<_1a88b915b_FieldIns> _233221_f = *it;
			{
				jule::Ptr<_1a86ae79d_TypeKind> _233321_kind = _1a86c7a3b_checkDecl(&_227017_tc, &(_233221_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_233321_kind != nullptr) && __jule_func_result);
				if ((_233321_kind == nullptr)) {
					if (((_self_ != (*(_226939_s)).get()._field_Decl.get()._field_sema) && ((*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						(_self_.get()._field_errors).append((*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors);;
						(*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1abbc4342;
				};
				_233221_f.get()._field_Kind=_233321_kind;
				(*(_226939_s)).get()._field_Mutable=((*(_226939_s)).get()._field_Mutable || ((!(_233221_f.get()._field_Decl.get()._field_Mutable)) && _1a86b1041_Mutable(_233221_f.get()._field_Kind.ptr())));
				(*(_226939_s)).get()._field_Comparable=((*(_226939_s)).get()._field_Comparable && _1a86b0ccc_Comparable(_233221_f.get()._field_Kind.ptr()));
				_1a895d211_checkStructInsDeriveClone(_self_.ptr(), (*(_226939_s)));
				if ((_233221_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1abbc4342;
				};
				_233017_eval.get()._field_prefix=_233221_f.get()._field_Kind;
				_233017_eval.get()._field_field=_233221_f;
				_233221_f.get()._field_Default=_1a86a032c_evalExpr(_233017_eval, _233221_f.get()._field_Decl.get()._field_Default);
				if ((_233221_f.get()._field_Default == nullptr)) {
					goto _iter_next_1abbc4342;
				};
				;
				_1a8951215_checkAssignType(_self_, false, &(_233221_f.get()._field_Kind), &(_233221_f.get()._field_Default), _233221_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1abbc4342:;
			++it;
			goto _iter_begin_1abbc4342;
		}
		_iter_end_1abbc4342:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8960356_precheckStructIns(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b9b51_StructIns>* _236742_s, jule::Ptr<_1a52684c0_Token> _236761_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1a895ee9e_checkStructEnv(_self_, _236742_s, _236761_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_236742_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbcad71:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _237221_f = *it;
			{
				if ((_237221_f.get()._field_Generics.len() == 0LL)) {
					if ((_1a895e377_readyToCheckFn(_self_, _236742_s, &(_237221_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1abbcad71:;
			++it;
			goto _iter_begin_1abbcad71;
		}
		_iter_end_1abbcad71:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a89605cb_checkStructIns(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b9b51_StructIns>* _238239_s) {
	{
		auto expr = &((*(_238239_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbcc5ae:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _238321_f = *it;
			{
				_1a895e696_checkTypeMethod(_self_, _238239_s, &(_238321_f));
			}
			_iter_next_1abbcc5ae:;
			++it;
			goto _iter_begin_1abbcc5ae;
		}
		_iter_end_1abbcc5ae:;
	};
}



inline void _1a8960851_checkTypeStruct(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b6d3a_Struct>* _238840_s) {
	if ((*(_238840_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_238840_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_238840_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbcdbdc:;
		if (it != expr_end) {
			jule::Ptr<_1a88b9b51_StructIns> _240121_ins = *it;
			{
				_1a89605cb_checkStructIns(_self_, &(_240121_ins));
			}
			_iter_next_1abbcdbdc:;
			++it;
			goto _iter_begin_1abbcdbdc;
		}
		_iter_end_1abbcdbdc:;
	};
}



inline void _1a8960a2c_checkStructTypes(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbce380:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> _240721_s = *it;
			{
				_1a8960851_checkTypeStruct(_self_, &(_240721_s));
			}
			_iter_next_1abbce380:;
			++it;
			goto _iter_begin_1abbce380;
		}
		_iter_end_1abbce380:;
	};
}



inline void _1a8960cc4_checkStructInsOperators(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b9b51_StructIns> _241247_s) {
	{
		auto expr = &(_241247_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbd054b:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _241321_m = *it;
			{
				{
					auto &_match_expr{ _241321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1abbd12a5:;
						{
							_241247_s.get()._field_Operators._field_Eq=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896865b_Eq);
							_241247_s.get()._field_Comparable=(_241247_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1abbd131b:;
						{
							_241247_s.get()._field_Operators._field_Gt=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a8968903_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1abbd1382:;
						{
							_241247_s.get()._field_Operators._field_GtEq=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a8968b9a_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1abbd1409:;
						{
							_241247_s.get()._field_Operators._field_Lt=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a8968e42_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1abbd1481:;
						{
							_241247_s.get()._field_Operators._field_LtEq=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a89691d9_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1abbd1508:;
						{
							_241247_s.get()._field_Operators._field_Shl=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a89697c2_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1abbd1580:;
						{
							_241247_s.get()._field_Operators._field_Shr=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a8969a69_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1abbd1607:;
						{
							_241247_s.get()._field_Operators._field_Add=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a8969d11_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1abbd167e:;
						{
							_241247_s.get()._field_Operators._field_Sub=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896a0a8_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1abbd1706:;
						{
							_241247_s.get()._field_Operators._field_Div=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896a350_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1abbd177d:;
						{
							_241247_s.get()._field_Operators._field_Mul=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896a5e7_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1abbd1805:;
						{
							_241247_s.get()._field_Operators._field_Mod=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896a88e_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1abbd187c:;
						{
							_241247_s.get()._field_Operators._field_BitAnd=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896ab36_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1abbd1904:;
						{
							_241247_s.get()._field_Operators._field_BitOr=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896adcd_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1abbd197b:;
						{
							_241247_s.get()._field_Operators._field_BitXor=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896b175_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1abbd1a03:;
						{
							_241247_s.get()._field_Operators._field_Neg=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896b75d_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1abbd1a7a:;
						{
							_241247_s.get()._field_Operators._field_Pos=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896ba05_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1abbd1b02:;
						{
							_241247_s.get()._field_Operators._field_BitNot=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896bc9c_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1abbd1b79:;
						{
							_241247_s.get()._field_Operators._field_AddAssign=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896c385_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1abbd1c01:;
						{
							_241247_s.get()._field_Operators._field_SubAssign=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896c62c_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1abbd1c78:;
						{
							_241247_s.get()._field_Operators._field_DivAssign=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896c8c4_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1abbd1d00:;
						{
							_241247_s.get()._field_Operators._field_MulAssign=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896cb6b_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1abbd1d77:;
						{
							_241247_s.get()._field_Operators._field_ModAssign=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896ce13_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1abbd1dee:;
						{
							_241247_s.get()._field_Operators._field_ShlAssign=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896d1aa_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1abbd1e76:;
						{
							_241247_s.get()._field_Operators._field_ShrAssign=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896d452_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1abbd1eed:;
						{
							_241247_s.get()._field_Operators._field_BitOrAssign=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896d6e9_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1abbd2075:;
						{
							_241247_s.get()._field_Operators._field_BitAndAssign=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896d991_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1abbd20ec:;
						{
							_241247_s.get()._field_Operators._field_BitXorAssign=_1a895eae7_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1a896dc38_BitXorAssign);
						}
					}
					_match_end_1abbd0d87:;
				};
			}
			_iter_next_1abbd054b:;
			++it;
			goto _iter_begin_1abbd054b;
		}
		_iter_end_1abbd054b:;
	};
}



inline void _1a896105a_precheckStructType(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88b6d3a_Struct>* _247643_s) {
	if ((*(_247643_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_247643_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_247643_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a88b9b51_StructIns> _248721_ins = _1a88b729c_instance((*(_247643_s)));;
		_248721_ins.get()._field_Checked=true;
		_1a88b7577_appendInstance((*(_247643_s)).ptr(), &(_248721_ins));
		_1a8960356_precheckStructIns(_self_, &(_248721_ins), nullptr);
	};
	_1a8960cc4_checkStructInsOperators(_self_, (*(_247643_s)).get()._field_Instances[0LL]);
}



inline void _1a8961236_precheckStructTypes(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbe2e54:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> _249721_s = *it;
			{
				_1a896105a_precheckStructType(_self_, &(_249721_s));
			}
			_iter_next_1abbe2e54:;
			++it;
			goto _iter_begin_1abbe2e54;
		}
		_iter_end_1abbe2e54:;
	};
}



inline void _1a89614ab_checkRets(_1a89465e5_Sema* _self_, jule::Ptr<_1a88cee0d_FnIns>* _250233_f) {
	if (_1a88cc6be_IsVoid((*(_250233_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_1a896369a_missingRetChecker _250613_mrc = static__1a8963a63_new();;
	jule::Bool _250713_ok = _1a8964a75_check(&_250613_mrc, (*(_250233_f)).get()._field_Scope);;
	if ((!(_250713_ok))) {
		_1a8948e77_pushErr(_self_, (*(_250233_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1a89617ca_checkFnInsSc(_1a89465e5_Sema* _self_, jule::Ptr<_1a88cee0d_FnIns>* _251336_f, jule::Ptr<_1a8925eba_scopeChecker>* _251352_sc) {
	_1a8944a55_appendRetVars(&((*(_251352_sc)).get()._field_table.get()._field_Vars), _251336_f);
	_1a8944d0d_appendParamVars(&((*(_251352_sc)).get()._field_table.get()._field_Vars), _251336_f);
	_1a89450d8_appendGenericTypeAliases(&((*(_251352_sc)).get()._field_table.get()._field_TypeAliases), _251336_f);
	_1a8936184_check((*(_251352_sc)), &((*(_251336_f)).get()._field_Decl.get()._field_Scope), &((*(_251336_f)).get()._field_Scope));
	if ((!(_1a8928819_stopped((*(_251352_sc)).ptr())))) {
		_1a89614ab_checkRets(_self_, _251336_f);
	};
}



inline void _1a8961ae9_checkFnInsCaller(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cee0d_FnIns>* _252641_f, jule::Ptr<_1a52684c0_Token> _252656_caller) {
	if ((*(_252641_f)).get()._field_Decl.get()._field_Binded) {
		return;;
	};
	jule::Ptr<_1a89ab380_SymbolTable> _253117_old = (*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1a8948aae_setCurrentFile((*(_252641_f)).get()._field_Decl.get()._field_sema.ptr(), _253117_old);
	});;
	jule::Ptr<_1a89ab380_SymbolTable> _253317_file = _1a894543a_findFile(&((*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_252641_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_253317_file != nullptr)) {
		_1a8948aae_setCurrentFile((*(_252641_f)).get()._field_Decl.get()._field_sema.ptr(), _253317_file);
	};
	jule::Ptr<_1a8925eba_scopeChecker> _253817_sc = _1a891b752_newScopeChecker(&((*(_252641_f)).get()._field_Decl.get()._field_sema), (*(_252641_f)));;
	_253817_sc.get()._field_calledFrom=_252656_caller;
	_1a89617ca_checkFnInsSc(_self_.ptr(), _252641_f, &(_253817_sc));
	if (((*(_252641_f)).get()._field_Decl.get()._field_sema != _self_)) {
		(_self_.get()._field_errors).append((*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_errors);;
		(*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1a8961d6e_checkFnIns(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cee0d_FnIns>* _254835_f) {
	_1a8961ae9_checkFnInsCaller(_self_, _254835_f, nullptr);
}



inline void _1a89620e4_checkTypeFn(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cc25c_Fn>* _255236_f) {
	if ((*(_255236_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_255236_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_255236_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbecac9:;
		if (it != expr_end) {
			jule::Ptr<_1a88cee0d_FnIns> _256221_ins = *it;
			{
				_1a8961d6e_checkFnIns(_self_, &(_256221_ins));
			}
			_iter_next_1abbecac9:;
			++it;
			goto _iter_begin_1abbecac9;
		}
		_iter_end_1abbecac9:;
	};
}



inline void _1a8962369_checkTestFn(_1a89465e5_Sema* _self_, jule::Ptr<_1a88cee0d_FnIns>* _256735_f) {
	if ((*(_256735_f)).get()._field_Decl.get()._field_Public) {
		_1a8948e77_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1a8949296_pushSuggestion(_self_, jule::Str("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_256735_f)).get()._field_Decl.get()._field_Unsafety || (!(_1a88cc6be_IsVoid((*(_256735_f)).get()._field_Decl.ptr())))) || ((*(_256735_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_256735_f)).get()._field_Params.len() != 1LL)) || (*(_256735_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_256735_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_1a8948e77_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a8949296_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a86ba754_Sptr> _258517_sptr = _1a86b222e_Sptr((*(_256735_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_258517_sptr == nullptr)) {
		_1a8948e77_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a8949296_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a88b9b51_StructIns> _259213_s = _1a86b341c_Struct(_258517_sptr.get()._field_Elem.ptr());;
	if (((_259213_s == nullptr) || (!(_1a8943218_isStdPackage(_259213_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_1a8948e77_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a8949296_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a89625de_precheckTypeFn(jule::Ptr<_1a89465e5_Sema> _self_, jule::Ptr<_1a88cc25c_Fn>* _260039_f) {
	if ((*(_260039_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_260039_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_260039_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a88cee0d_FnIns> _261121_ins = _1a88cd648_instanceForce((*(_260039_f)));;
		{ jule::Slice<jule::Ptr<_1a88cee0d_FnIns>> &__jule_push_dest = (*(_260039_f)).get()._field_Instances; __jule_push_dest.push(_261121_ins); };
		jule::Bool _261317_ok = _1a89535d0_reloadFnInsTypes(_self_, _261121_ins);;
		_261121_ins.get()._field_reloaded=true;
		if ((_261317_ok && _1a86c8ee3_hasDirective(&((*(_260039_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_1a8962369_checkTestFn(_self_.ptr(), &(_261121_ins));
		};
	};
}



inline void _1a89627ba_precheckFnTypes(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0781a:;
		if (it != expr_end) {
			jule::Ptr<_1a88de47d_Trait> _262421_decl = *it;
			{
				{
					auto expr = &(_262421_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc08178:;
					if (it != expr_end) {
						jule::Ptr<_1a88cc25c_Fn> _262525_m = *it;
						{
							_1a89625de_precheckTypeFn(_self_, &(_262525_m));
						}
						_iter_next_1abc08178:;
						++it;
						goto _iter_begin_1abc08178;
					}
					_iter_end_1abc08178:;
				};
			}
			_iter_next_1abc0781a:;
			++it;
			goto _iter_begin_1abc0781a;
		}
		_iter_end_1abc0781a:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc07cb0:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _262921_decl = *it;
			{
				_1a89625de_precheckTypeFn(_self_, &(_262921_decl));
			}
			_iter_next_1abc07cb0:;
			++it;
			goto _iter_begin_1abc07cb0;
		}
		_iter_end_1abc07cb0:;
	};
}



inline void _1a8962996_checkFnTypes(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc08ec0:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _263621_decl = *it;
			{
				_1a89620e4_checkTypeFn(_self_, &(_263621_decl));
			}
			_iter_next_1abc08ec0:;
			++it;
			goto _iter_begin_1abc08ec0;
		}
		_iter_end_1abc08ec0:;
	};
}



inline void _1a8962b72_checkPackageTypes(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0a136:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _264421_f = *it;
			{
				_1a8948aae_setCurrentFile(_self_.ptr(), _264421_f);
				_1a895dec0_checkGlobalTypes(_self_);
				_1a89627ba_precheckFnTypes(_self_);
				_1a8961236_precheckStructTypes(_self_);
			}
			_iter_next_1abc0a136:;
			++it;
			goto _iter_begin_1abc0a136;
		}
		_iter_end_1abc0a136:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0b3ce:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _265521_f = *it;
			{
				_1a8948aae_setCurrentFile(_self_.ptr(), _265521_f);
				_1a8962996_checkFnTypes(_self_);
				_1a8960a2c_checkStructTypes(_self_);
			}
			_iter_next_1abc0b3ce:;
			++it;
			goto _iter_begin_1abc0b3ce;
		}
		_iter_end_1abc0b3ce:;
	};
}



inline void _1a8962d4d_setFileSemaFields(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0c4ce:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _266321_f = *it;
			{
				_266321_f.get()._field_sema=_self_;
			}
			_iter_next_1abc0c4ce:;
			++it;
			goto _iter_begin_1abc0c4ce;
		}
		_iter_end_1abc0c4ce:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0c80e:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> _266621_st = *it;
			{
				_266621_st.get()._field_sema=_self_;
			}
			_iter_next_1abc0c80e:;
			++it;
			goto _iter_begin_1abc0c80e;
		}
		_iter_end_1abc0c80e:;
	};
}



inline void _1a8963029_setSemaFields(jule::Ptr<_1a89465e5_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0d348:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _267221_file = *it;
			{
				_1a8948aae_setCurrentFile(_self_.ptr(), _267221_file);
				_1a8962d4d_setFileSemaFields(_self_);
			}
			_iter_next_1abc0d348:;
			++it;
			goto _iter_begin_1abc0d348;
		}
		_iter_end_1abc0d348:;
	};
}



inline void _1a896329e_check(jule::Ptr<_1a89465e5_Sema> _self_, jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>* _267830_files) {
	_self_.get()._field_files=(*(_267830_files));
	_1a894c5da_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a8963029_setSemaFields(_self_);
	_1a894d025_checkInherits(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a894c992_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a894cb6d_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a895d3ed_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a8962b72_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a89465e5_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1a896369a_missingRetChecker static__1a8963a63_new(void) {
	return _1a896369a_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1a8963d3d_checkConditional(_1a896369a_missingRetChecker* _self_, jule::Ptr<_1a891ede8_Conditional> _272635_c) {
	{
		auto expr = &(_272635_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc12aab:;
		if (it != expr_end) {
			jule::Ptr<_1a891e788_If> _272721_elif = *it;
			{
				if ((_272721_elif == nullptr)) {
					return false;;
				};
				if ((!(_1a8964767_checkScope(_self_, _272721_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1abc12aab:;
			++it;
			goto _iter_begin_1abc12aab;
		}
		_iter_end_1abc12aab:;
	};
	return ((_272635_c.get()._field_Default != nullptr) && _1a8964767_checkScope(_self_, _272635_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1a896414b_checkMatch(_1a896369a_missingRetChecker* _self_, jule::Ptr<_1a89231a4_Match> _273829_m) {
	{
		auto expr = &(_273829_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc1474a:;
		if (it != expr_end) {
			jule::Ptr<_1a8923bee_Case> _273921_c = *it;
			{
				if ((_273921_c == nullptr)) {
					return false;;
				};
				jule::I64 _274317_n = (*(_self_))._field_breaked.len();;
				jule::Bool _274417_ok = _1a8964767_checkScope(_self_, _273921_c.get()._field_Scope);;
				{
					
					if ((_274317_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1abc16252:;
						{
							return false;;
						}
					}
					else if ((!(_274417_ok))) {
						_case_begin_1abc162b8:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1abc1632e;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1abc1632e:;
						{
							(*(_self_))._field_falled=false;
							if ((_273921_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1abc1474a;
						}
					}
					_match_end_1abc15729:;
				};
			}
			_iter_next_1abc1474a:;
			++it;
			goto _iter_begin_1abc1474a;
		}
		_iter_end_1abc1474a:;
	};
	return ((_273829_m.get()._field_Default != nullptr) && _1a8964767_checkScope(_self_, _273829_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1a8964459_checkInfIter(_1a896369a_missingRetChecker* _self_, jule::Ptr<_1a89201d4_InfIter> _276431_it) {
	jule::I64 _276513_n = (*(_self_))._field_breaked.len();;
	if (_1a8964767_checkScope(_self_, _276431_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
		return true;;
	};
	if ((_276513_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _277117_itaddr = static_cast<jule::Uintptr>(_276431_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_276513_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1abc199e7:;
			if (it != expr_end) {
				jule::Uintptr _277220_addr = *it;
				{
					if ((_277117_itaddr == _277220_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
						return false;;
					};
				}
				_iter_next_1abc199e7:;
				++it;
				goto _iter_begin_1abc199e7;
			}
			_iter_end_1abc199e7:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
	};
	return true;;
}



inline jule::Bool _1a8964767_checkScope(_1a896369a_missingRetChecker* _self_, jule::Ptr<_1a891e38c_Scope> _278329_s) {
	if ((_278329_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_278329_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc1b103:;
		if (it != expr_end) {
			jule::Any _278721_st = *it;
			{
				{
					auto &_match_expr{ _278721_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1abc1bdd4:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1abc1bea0:;
						{
							jule::Uintptr _279321_addr = _278721_st.cast_ptr<_1a89217e0_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_279321_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_279321_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1abc1c016:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1abc1c07c:;
						{
							if (_1a8964459_checkInfIter(_self_, _278721_st.cast_ptr<_1a89201d4_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1abc1c0e3:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1abc1c159:;
						{
							if (_1a8964767_checkScope(_self_, _278721_st.cast_ptr<_1a891e38c_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1abc1c1d1:;
						{
							{
								auto &_match_expr{ _278721_st.cast_ptr<_1a865dbe2_Data>(&__jule_any_type24).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1abc20a64:;
									{
										return true;;
									}
								}
								_match_end_1abc2079a:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1abc1c258:;
						{
							if (_1a8963d3d_checkConditional(_self_, _278721_st.cast_ptr<_1a891ede8_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1abc1c2d0:;
						{
							if (_1a896414b_checkMatch(_self_, _278721_st.cast_ptr<_1a89231a4_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_1abc1bca2:;
				};
			}
			_iter_next_1abc1b103:;
			++it;
			goto _iter_begin_1abc1b103;
		}
		_iter_end_1abc1b103:;
	};
	return false;;
}



inline jule::Bool _1a8964a75_check(_1a896369a_missingRetChecker* _self_, jule::Ptr<_1a891e38c_Scope> _282924_s) {
	return _1a8964767_checkScope(_self_, _282924_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a896369a_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a89658ab_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8966c75_IsInitialized(_1a8966901_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1a8966ed9_IsTypeInferred(_1a8966901_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1a896724d_untypedConstant(_1a8966901_Var* _self_) {
	return (_1a8966ed9_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8966901_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a8967ccb_Dispose(jule::Ptr<_1a88cc25c_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1a88cc6be_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1a88cb26c_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1a8968073_Str(jule::Ptr<_1a88cc25c_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1a88cc6be_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1a88cb26c_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1a86b7003_Prim> _3913_prim = _1a86b1eba_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1a86ba204_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1a89683b4_logical(jule::Ptr<_1a88cc25c_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _1a88cc6be_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _1a88cb26c_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_1a86b7003_Prim> _6413_prim = _1a86b1eba_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1a86b9e90_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1a86b341c_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1a896865b_Eq(jule::Ptr<_1a88cc25c_Fn> _7218_f) {
	return static__1a89683b4_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__1a8968903_Gt(jule::Ptr<_1a88cc25c_Fn> _7718_f) {
	return static__1a89683b4_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__1a8968b9a_GtEq(jule::Ptr<_1a88cc25c_Fn> _8220_f) {
	return static__1a89683b4_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__1a8968e42_Lt(jule::Ptr<_1a88cc25c_Fn> _8718_f) {
	return static__1a89683b4_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__1a89691d9_LtEq(jule::Ptr<_1a88cc25c_Fn> _9220_f) {
	return static__1a89683b4_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__1a896952a_result(jule::Ptr<_1a88cc25c_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _1a88cc6be_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _1a88cb26c_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_1a86b341c_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1a89697c2_Shl(jule::Ptr<_1a88cc25c_Fn> _11819_f) {
	return static__1a896952a_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__1a8969a69_Shr(jule::Ptr<_1a88cc25c_Fn> _12319_f) {
	return static__1a896952a_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__1a8969d11_Add(jule::Ptr<_1a88cc25c_Fn> _12819_f) {
	return static__1a896952a_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__1a896a0a8_Sub(jule::Ptr<_1a88cc25c_Fn> _13319_f) {
	return static__1a896952a_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__1a896a350_Div(jule::Ptr<_1a88cc25c_Fn> _13819_f) {
	return static__1a896952a_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__1a896a5e7_Mul(jule::Ptr<_1a88cc25c_Fn> _14319_f) {
	return static__1a896952a_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__1a896a88e_Mod(jule::Ptr<_1a88cc25c_Fn> _14819_f) {
	return static__1a896952a_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__1a896ab36_BitAnd(jule::Ptr<_1a88cc25c_Fn> _15322_f) {
	return static__1a896952a_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1a896adcd_BitOr(jule::Ptr<_1a88cc25c_Fn> _15821_f) {
	return static__1a896952a_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__1a896b175_BitXor(jule::Ptr<_1a88cc25c_Fn> _16322_f) {
	return static__1a896952a_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__1a896b4b6_unary(jule::Ptr<_1a88cc25c_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _1a88cc6be_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _1a88cb26c_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_1a86b341c_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1a896b75d_Neg(jule::Ptr<_1a88cc25c_Fn> _18719_f) {
	return static__1a896b4b6_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__1a896ba05_Pos(jule::Ptr<_1a88cc25c_Fn> _19219_f) {
	return static__1a896b4b6_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__1a896bc9c_BitNot(jule::Ptr<_1a88cc25c_Fn> _19722_f) {
	return static__1a896b4b6_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__1a896c0dd_assign(jule::Ptr<_1a88cc25c_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_1a88cc6be_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _1a88cb26c_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1a896c385_AddAssign(jule::Ptr<_1a88cc25c_Fn> _22125_f) {
	return static__1a896c0dd_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1a896c62c_SubAssign(jule::Ptr<_1a88cc25c_Fn> _22625_f) {
	return static__1a896c0dd_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1a896c8c4_DivAssign(jule::Ptr<_1a88cc25c_Fn> _23125_f) {
	return static__1a896c0dd_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1a896cb6b_MulAssign(jule::Ptr<_1a88cc25c_Fn> _23625_f) {
	return static__1a896c0dd_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1a896ce13_ModAssign(jule::Ptr<_1a88cc25c_Fn> _24125_f) {
	return static__1a896c0dd_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1a896d1aa_ShlAssign(jule::Ptr<_1a88cc25c_Fn> _24625_f) {
	return static__1a896c0dd_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1a896d452_ShrAssign(jule::Ptr<_1a88cc25c_Fn> _25125_f) {
	return static__1a896c0dd_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1a896d6e9_BitOrAssign(jule::Ptr<_1a88cc25c_Fn> _25627_f) {
	return static__1a896c0dd_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1a896d991_BitAndAssign(jule::Ptr<_1a88cc25c_Fn> _26128_f) {
	return static__1a896c0dd_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1a896dc38_BitXorAssign(jule::Ptr<_1a88cc25c_Fn> _26628_f) {
	return static__1a896c0dd_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a896769e_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1a89999de_pushErr(_1a8999516_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _1a8999c53_checkTrait(_1a8999516_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a86b0804_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a88de47d_Trait> _12517_trt = _1a86b3681_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1a86b222e_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1abc5b4d9:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_1a86b222e_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_1a86b341c_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1abc5b561;
			}
		}
		else if ((_1a86b341c_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1abc5b561:;
			{
				jule::Ptr<_1a88b9b51_StructIns> _13617_s = _1a86b341c_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1a88b8358_IsImplements(_13617_s.get()._field_Decl.ptr(), _12517_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _1a89982a1_traitHasReferenceReceiver(&(_12517_trt)))) {
					_1a89999de_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a86b3681_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1abc5b5d8:;
			{
				jule::Ptr<_1a88de47d_Trait> _14621_base = _1a86b3681_Trait((*(_self_))._field_src.ptr());;
				if ((_12517_trt == _14621_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_lookup:;
				{
					auto expr = &(_14621_base.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc6082e:;
					if (it != expr_end) {
						jule::Ptr<_1a88b6d3a_Struct> _15120_s1 = *it;
						{
							{
								auto expr = &(_12517_trt.get()._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1abc61478:;
								if (it != expr_end) {
									jule::Ptr<_1a88b6d3a_Struct> _15224_s2 = *it;
									{
										if ((_15120_s1 == _15224_s2)) {
											goto _iter_next_1abc6082e;
										};
									}
									_iter_next_1abc61478:;
									++it;
									goto _iter_begin_1abc61478;
								}
								_iter_end_1abc61478:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1abc6082e:;
						++it;
						goto _iter_begin_1abc6082e;
					}
					_iter_end_1abc6082e:;
				};
				{
					auto expr = &(_12517_trt.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc62006:;
					if (it != expr_end) {
						jule::Ptr<_1a88cc25c_Fn> _15925_m1 = *it;
						{
							jule::Ptr<_1a88cc25c_Fn> _16025_m2 = _1a88e032a_FindMethod(_14621_base.ptr(), _15925_m1.get()._field_Ident);;
							if ((_16025_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1a88cee0d_FnIns> _16421_m1k = _1a89522e3_getTraitCheckFnKind((*(_self_))._field_s, &(_15925_m1));;
							jule::Ptr<_1a88cee0d_FnIns> _16521_m2k = _1a89522e3_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m2));;
							if ((!(_1a88d0cbb_equalTrait(_16421_m1k, &(_16521_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1abc62006:;
						++it;
						goto _iter_begin_1abc62006;
					}
					_iter_end_1abc62006:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abc5b473:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1abc5b41d:;
	};
}



inline jule::Bool _1a8999eb7_checkPtr(_1a8999516_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a86b0804_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a86bdcb8_Ptr> _18017_dest = _1a86b2493_Ptr((*(_self_))._field_dest.ptr());;
	if (_1a86be78b_IsUnsafe(_18017_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1a86aee63_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a899a22b_checkPrim(_1a8999516_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1a86b7003_Prim> _18917_prim = _1a86b1eba_Prim((*(_self_))._field_dest.ptr());;
		if (((_18917_prim != nullptr) && _1a86ba468_IsAny(_18917_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1a86aee63_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a899a5d3_typeEnum(_1a8999516_typeCompatibilityChecker* _self_, jule::Ptr<_1a88e330b_TypeEnum>* _19728_e, jule::Ptr<_1a86ae79d_TypeKind>* _19747_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_19728_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc67847:;
		if (it != expr_end) {
			jule::Ptr<_1a88e2c78_TypeEnumItem> _19821_item = *it;
			{
				if (_1a86aee63_Equal(_19821_item.get()._field_Kind.get()._field_Kind, (*(_19747_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1a88e330b_TypeEnum> _20221_ke = _1a86b296b_TypeEnum(_19821_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_20221_ke == nullptr)) {
					goto _iter_next_1abc67847;
				};
				if (_1a899a5d3_typeEnum(_self_, &(_20221_ke), _19747_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1abc67847:;
			++it;
			goto _iter_begin_1abc67847;
		}
		_iter_end_1abc67847:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a899a847_checkTypeEnum(_1a8999516_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a86aee63_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a88e330b_TypeEnum> _21717_e = _1a86b296b_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1a899a5d3_typeEnum(_self_, &(_21717_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1a899aaab_check(_1a8999516_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1a86b2493_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1a8999eb7_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1a86b1519_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1a86b0804_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1a86b1eba_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1abc6c385:;
			{
				__jule_func_result = _1a899a22b_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a86b296b_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1abc6c770:;
			{
				__jule_func_result = _1a899a847_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a86b3681_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1abc6c7d6:;
			{
				__jule_func_result = _1a8999c53_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abc6b609:;
			{
				__jule_func_result = _1a86aee63_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1abc6b461:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a8999516_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1a899b5a1_pushErr(_1a899b13e_assignTypeChecker* _self_, jule::Str _25326_fmt, jule::Slice<jule::Any> _25339_args) {
	_1a8948e77_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25326_fmt, _25339_args);
}



inline jule::Bool _1a899b815_checkValidity(_1a899b13e_assignTypeChecker* _self_) {
	jule::Bool _25817_valid = true;;
	{
		
		if ((_1a86b31a8_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc700be:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _26117_f = _1a86b31a8_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1a88d1294_IsBuiltin(_26117_f.ptr())) {
						_case_begin_1abc714ee:;
						{
							_1a899b5a1_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (_26117_f.get()._field_Decl.get()._field_Binded) {
						_case_begin_1abc71576:;
						{
							_1a899b5a1_pushErr(_self_, jule::Str("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((!(_26117_f.get()._field_Decl.get()._field_Statically)) && _1a88cc933_IsMethod(_26117_f.get()._field_Decl.ptr()))) {
						_case_begin_1abc715ed:;
						{
							_1a899b5a1_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((_26117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_26117_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1abc71675:;
						{
							_1a899b5a1_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1a8949296_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					_match_end_1abc71422:;
				};
			}
		}
		else if ((_1a86b3b59_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc70146:;
			{
				_1a899b5a1_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25817_valid=false;
			}
		}
		_match_end_1abc70014:;
	};
	return _25817_valid;;
}



inline jule::Bool _1a899ba79_checkConst(_1a899b13e_assignTypeChecker* _self_) {
	if (((((!(_1a865e50b_IsConst((*(_self_))._field_d.ptr()))) || (_1a86b1eba_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1a86b1eba_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1a55401ae_IsNum(_1a86b1eba_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _29813_kind = _1a86b1eba_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1a553ee17_IsFloat(_29813_kind)) {
			_case_begin_1abc77736:;
			{
				if ((!(_1a8998548_floatAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_1a899b5a1_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else if (_1a553eae8_IsInt(_29813_kind)) {
			_case_begin_1abc7779c:;
			{
				if ((!(_1a8999060_intAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_1a899b5a1_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else {
			_case_begin_1abc776c0:;
			{
				return false;;
			}
		}
		_match_end_1abc7766a:;
	};
	return true;;
}



inline jule::Bool _1a899bcdd_isPrim(_1a899b13e_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1a86b0590_Binded((*(_self_))._field_dest.ptr()) || _1a86b0590_Binded((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1a86b1eba_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1a86b1eba_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1a899c052_checkCompatibility(_1a899b13e_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1abc7bac0:;
			{
				return false;;
			}
		}
		else if ((!(_1a899b815_checkValidity(_self_)))) {
			_case_begin_1abc7bb47:;
			{
				return false;;
			}
		}
		else if (_1a899ba79_checkConst(_self_)) {
			_case_begin_1abc7bbbe:;
			{
				return true;;
			}
		}
		else if ((_1a86b2707_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc7bc46:;
			{
				jule::Ptr<_1a86ae79d_TypeKind> _34221_dkind = (*(_self_))._field_dest;;
				if ((_1a86b2707_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34221_dkind=_1a86b2707_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1a86b1eba_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1abc7b99e;
				};
				if (_1a553b92a_TypesAreCompatible(_1a86b1eba_Prim(_1a86b2707_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _1a86b1eba_Prim(_34221_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1a899bcdd_isPrim(_self_)) {
			_case_begin_1abc7bcbd:;
			{
				jule::Ptr<_1a86b7003_Prim> _35217_dest = _1a86b1eba_Prim((*(_self_))._field_dest.ptr());;
				if (_1a86ba468_IsAny(_35217_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1a86b7003_Prim> _35621_src = _1a86b1eba_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1a553b92a_TypesAreCompatible(_35217_dest.get()._field_Kind, _35621_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1abc7b99e:;
	};
	return _1a8951666_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1a899c2b6_check(_1a899b13e_assignTypeChecker* _self_) {
	jule::Bool _36513_ok = _1a899c052_checkCompatibility(_self_);;
	if ((_36513_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1a86ca797_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36513_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a899b13e_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abc93ee4_annotateConstraintElem(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1abc955bc:;
			{
				jule::Ptr<_1a86ae79d_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1abc963d1:;
						{
							_38821_elem=_1a86b2bd0_Arr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1abc95e4c:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a88992a1_ArrTypeDecl>(&__jule_any_type75).get()._field_Elem;
				return _1a899e230_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1abc95512:;
	};
	return false;;
}

inline jule::Bool _1abc94324_annotateConstraintElem(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1abc989ee:;
			{
				jule::Ptr<_1a86ae79d_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1abc9989b:;
						{
							_38821_elem=_1a86b2e44_Slc((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1abc9937e:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a8898503_SlcTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _1a899e230_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1abc98944:;
	};
	return false;;
}

inline jule::Bool _1abc9380c_annotateConstraintElem(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1abc9beec:;
			{
				jule::Ptr<_1a86ae79d_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1abc9ce10:;
						{
							_38821_elem=_1a86b2493_Ptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1abc9c87c:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a8898aca_PtrTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _1a899e230_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1abc9be42:;
	};
	return false;;
}

inline jule::Bool _1abc980c5_annotateConstraintElem(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1abca0099:;
			{
				jule::Ptr<_1a86ae79d_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1abca1034:;
						{
							_38821_elem=_1a86b222e_Sptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1abca0929:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a8898107_SptrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1a899e230_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1abc9eede:;
	};
	return false;;
}



inline jule::Bool _1a899d4b5_annotateConstraintMap(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _40545_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1abc84314:;
			{
				jule::Ptr<_1a86bc767_Map> _40821_m = _1a86b38e5_Map((*(_40545_k)).ptr());;
				jule::Ptr<_1a88999aa_MapTypeDecl> _40921_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a88999aa_MapTypeDecl>(&__jule_any_type79);;
				(*(_self_))._field_c=_40921_m2.get()._field_Key;
				if ((!(_1a899e230_annotateConstraint(_self_, &(_40821_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_40921_m2.get()._field_Val;
				__jule_func_result = _1a899e230_annotateConstraint(_self_, &(_40821_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1abc8428c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a899d7c3_annotateConstraintTup(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _42045_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1abc869a9:;
			{
				jule::Ptr<_1a88987de_TupleTypeDecl> _42321_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a88987de_TupleTypeDecl>(&__jule_any_type80);;
				jule::Ptr<_1a86bbcb6_Tuple> _42421_tup2 = _1a86b3b59_Tup((*(_42045_k)).ptr());;
				{
					auto expr = &(_42421_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc87db7:;
					if (it != expr_end) {
						jule::Ptr<_1a86ae79d_TypeKind> _42525_t2 = *it;
						{
							{
								auto expr = &(_42321_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1abc8867b:;
								if (it != expr_end) {
									jule::Ptr<_1a88970e5_TypeDecl> _42629_t = *it;
									{
										(*(_self_))._field_c=_42629_t;
										if (_1a899e230_annotateConstraint(_self_, &(_42525_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1abc8867b:;
									++it;
									goto _iter_begin_1abc8867b;
								}
								_iter_end_1abc8867b:;
							};
						}
						_iter_next_1abc87db7:;
						++it;
						goto _iter_begin_1abc87db7;
					}
					_iter_end_1abc87db7:;
				};
			}
		}
		_match_end_1abc86910:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a899dad1_annotateConstraintFn(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _43744_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1abc88417:;
			{
				jule::Ptr<_1a88a8722_FnDecl> _44021_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a88a8722_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1a88cee0d_FnIns> _44121_f = _1a86b31a8_Fn((*(_43744_k)).ptr());;
				{
					auto expr = &(_44121_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc8a7c1:;
					if (it != expr_end) {
						jule::I64 _44218_i = it - expr->begin();
						jule::Ptr<_1a88ce03e_ParamIns> _44225_fp = *it;
						{
							(*(_self_))._field_c=_44021_pf.get()._field_Params[_44218_i].get()._field_Kind;
							if (_1a899e230_annotateConstraint(_self_, &(_44225_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1abc8a7c1:;
						++it;
						_44218_i++;
						goto _iter_begin_1abc8a7c1;
					}
					_iter_end_1abc8a7c1:;
				};
				if ((_44021_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_44021_pf.get()._field_Result.get()._field_Kind;
					if (_1a899e230_annotateConstraint(_self_, &(_44121_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1abc89506:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a899de11_annotateConstraintIdent(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _45847_k) {
	jule::Ptr<_1a88976ab_IdentTypeDecl> _45917_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a88976ab_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1a88b9b51_StructIns> _46017_s = _1a86b341c_Struct((*(_45847_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc8d30c:;
		if (it != expr_end) {
			jule::I64 _46113_i = it - expr->begin();
			jule::Ptr<_1a88a408b_GenericDecl> _46116_g = *it;
			{
				if ((_46116_g.get()._field_Ident == _45917_ident.get()._field_Ident)) {
					jule::Ptr<_1a86ad01b_InsGeneric> _46325_fg = (*(_self_))._field_f.get()._field_Generics[_46113_i];;
					if ((_46325_fg != nullptr)) {
						return false;;
					};
					_1a899e54e_pushGeneric(_self_, _45847_k, _46113_i);
					return true;;
				};
				if ((_46017_s == nullptr)) {
					goto _iter_next_1abc8d30c;
				};
				jule::Ptr<_1a88970e5_TypeDecl> _47321_c = (*(_self_))._field_c;;
				{
					auto expr = &(_45917_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc90ab2:;
					if (it != expr_end) {
						jule::Ptr<_1a88970e5_TypeDecl> _47425_ig = *it;
						{
							(*(_self_))._field_c=_47425_ig;
							{
								auto expr = &(_46017_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1abc9182c:;
								if (it != expr_end) {
									jule::Ptr<_1a86ad01b_InsGeneric> _47629_sg = *it;
									{
										if (_1a899e230_annotateConstraint(_self_, &(_47629_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1abc9182c:;
									++it;
									goto _iter_begin_1abc9182c;
								}
								_iter_end_1abc9182c:;
							};
						}
						_iter_next_1abc90ab2:;
						++it;
						goto _iter_begin_1abc90ab2;
					}
					_iter_end_1abc90ab2:;
				};
				(*(_self_))._field_c=_47321_c;
			}
			_iter_next_1abc8d30c:;
			++it;
			_46113_i++;
			goto _iter_begin_1abc8d30c;
		}
		_iter_end_1abc8d30c:;
	};
	return false;;
}



inline jule::Bool _1a899e230_annotateConstraint(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _48742_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1abc91266:;
			{
				return _1a899de11_annotateConstraintIdent(_self_, _48742_k);;
			}
		}
		_match_end_1abc91211:;
	};
	{
		
		if ((_1a86b2bd0_Arr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1abc9328a:;
			{
				return _1abc93ee4_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1a86b2e44_Slc((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1abc92ba2:;
			{
				return _1abc94324_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1a86b2493_Ptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1abc92c18:;
			{
				return _1abc9380c_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1a86b222e_Sptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1abc9280b:;
			{
				return _1abc980c5_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1a86b38e5_Map((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1abc92872:;
			{
				return _1a899d4b5_annotateConstraintMap(_self_, _48742_k);;
			}
		}
		else if ((_1a86b31a8_Fn((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1abc928d8:;
			{
				return _1a899dad1_annotateConstraintFn(_self_, _48742_k);;
			}
		}
		else if ((_1a86b3b59_Tup((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1abc9294e:;
			{
				return _1a899d7c3_annotateConstraintTup(_self_, _48742_k);;
			}
		}
		else {
			_case_begin_1abc913dc:;
			{
				return false;;
			}
		}
		_match_end_1abc91376:;
	};
}



inline void _1a899e54e_pushGeneric(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _51235_k, jule::I64 _51249_i) {
	(*(_self_))._field_f.get()._field_Generics[_51249_i]=jule::new_ptr<_1a86ad01b_InsGeneric>(_1a86ad01b_InsGeneric{._field_Kind=(*(_51235_k)), });
	jule::Ptr<_1a88a408b_GenericDecl> _51417_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_51249_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abca3784:;
		if (it != expr_end) {
			jule::Ptr<_1a86ae79d_TypeKind> _51521_ignored = *it;
			{
				if ((_51417_gd.get()._field_Ident == _1a86aeb55_Str(_51521_ignored.ptr()))) {
					_51521_ignored.get()._field_Kind=(*(_51235_k)).get()._field_Kind;
				};
			}
			_iter_next_1abca3784:;
			++it;
			goto _iter_begin_1abca3784;
		}
		_iter_end_1abca3784:;
	};
	if (((_51417_gd.get()._field_Constraint == nullptr) || (_51417_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_51417_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1a899e230_annotateConstraint(_self_, _51235_k);
}



inline jule::Bool _1a899e85c_annotatePrim(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _52743_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a89a1683_annotateAny(_self_, _52743_k);
	return __jule_func_result;;
}



inline jule::Bool _1a899eb6a_annotateArr(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a86bd35b_Arr> _53217_parr = _1a86b2bd0_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53217_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a86bd35b_Arr> _53617_arr = _1a86b2bd0_Arr((*(_53142_k)).ptr());;
	(*(_self_))._field_k=(&(_53217_parr.get()._field_Elem));
	__jule_func_result = _1a89a1991_annotateKind(_self_, &(_53617_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a899ee78_annotateSlc(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _54142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a86bb1b1_Slc> _54217_pslc = _1a86b2e44_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54217_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a86bb1b1_Slc> _54617_slc = _1a86b2e44_Slc((*(_54142_k)).ptr());;
	(*(_self_))._field_k=(&(_54217_pslc.get()._field_Elem));
	__jule_func_result = _1a89a1991_annotateKind(_self_, &(_54617_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a89a0330_checkMapKey(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _55141_k, jule::Ptr<_1a86ae79d_TypeKind>* _55161_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a86ae79d_TypeKind>* _55217_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55141_k;
	__jule_func_result=_1a89a1991_annotateKind(_self_, _55161_ck);
	(*(_self_))._field_k=_55217_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a89a063d_annotateMap(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _55942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a86bc767_Map> _56017_pmap = _1a86b38e5_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56017_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a86bc767_Map> _56417_m = _1a86b38e5_Map((*(_55942_k)).ptr());;
	__jule_func_result = (_1a89a0330_checkMapKey(_self_, (&(_56017_pmap.get()._field_Key)), &(_56417_m.get()._field_Key)) && _1a89a0330_checkMapKey(_self_, (&(_56017_pmap.get()._field_Val)), &(_56417_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1a89a094b_annotateFn(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _56941_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a88cee0d_FnIns> _57017_pf = _1a86b31a8_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57017_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _57417_f = _1a86b31a8_Fn((*(_56941_k)).ptr());;
	{
		
		if ((_57017_pf.get()._field_Params.len() != _57417_f.get()._field_Params.len())) {
			_case_begin_1abcae55e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1a88cc6be_IsVoid(_57017_pf.get()._field_Decl.ptr()) != _1a88cc6be_IsVoid(_57417_f.get()._field_Decl.ptr()))) {
			_case_begin_1abcae5c5:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1abcae509:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a86ae79d_TypeKind>* _58317_old = (*(_self_))._field_k;;
	{
		auto expr = &(_57417_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcb0ab0:;
		if (it != expr_end) {
			jule::I64 _58414_i = it - expr->begin();
			jule::Ptr<_1a88ce03e_ParamIns> _58421_fp = *it;
			{
				(*(_self_))._field_k=(&(_57017_pf.get()._field_Params[_58414_i].get()._field_Kind));
				__jule_func_result=(_1a89a1991_annotateKind(_self_, &(_58421_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_1abcb0ab0:;
			++it;
			_58414_i++;
			goto _iter_begin_1abcb0ab0;
		}
		_iter_end_1abcb0ab0:;
	};
	if ((!(_1a88cc6be_IsVoid(_57017_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_57017_pf.get()._field_Result));
		__jule_func_result=(_1a89a1991_annotateKind(_self_, &(_57417_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a89a0c59_annotatePtr(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _59842_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a86bdcb8_Ptr> _59917_pptr = _1a86b2493_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_59917_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a86bdcb8_Ptr> _60317_ptr = _1a86b2493_Ptr((*(_59842_k)).ptr());;
	(*(_self_))._field_k=(&(_59917_pptr.get()._field_Elem));
	__jule_func_result = _1a89a1991_annotateKind(_self_, &(_60317_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a89a1067_annotateSptr(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _60843_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a86ba754_Sptr> _60917_ssptr = _1a86b222e_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_60917_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a86ba754_Sptr> _61317_sptr = _1a86b222e_Sptr((*(_60843_k)).ptr());;
	(*(_self_))._field_k=(&(_60917_ssptr.get()._field_Elem));
	__jule_func_result = _1a89a1991_annotateKind(_self_, &(_61317_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a89a1375_annotateStruct(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _61845_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a88b9b51_StructIns> _61917_s = _1a86b341c_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_61917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a88b9b51_StructIns> _62317_s2 = _1a86b341c_Struct((*(_61845_k)).ptr());;
	if ((_61917_s.get()._field_Generics.len() != _62317_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_61917_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcb8744:;
		if (it != expr_end) {
			jule::I64 _62714_i = it - expr->begin();
			jule::Ptr<_1a86ad01b_InsGeneric> _62721_g = *it;
			{
				jule::Ptr<_1a86ad01b_InsGeneric> _62821_g2 = _62317_s2.get()._field_Generics[_62714_i];;
				if (_1a86aee63_Equal(_62721_g.get()._field_Kind, _62821_g2.get()._field_Kind)) {
					goto _iter_next_1abcb8744;
				};
				(*(_self_))._field_k=(&(_62721_g.get()._field_Kind));
				if ((!(_1a89a1991_annotateKind(_self_, &(_62821_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abcb8744:;
			++it;
			_62714_i++;
			goto _iter_begin_1abcb8744;
		}
		_iter_end_1abcb8744:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a89a1683_annotateAny(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _64042_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64113_kind = _1a86aeb55_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcbb00a:;
		if (it != expr_end) {
			jule::I64 _64213_i = it - expr->begin();
			jule::Ptr<_1a88a408b_GenericDecl> _64216_g = *it;
			{
				if ((_64113_kind != _64216_g.get()._field_Ident)) {
					goto _iter_next_1abcbb00a;
				};
				jule::Ptr<_1a86ad01b_InsGeneric> _64617_t = (*(_self_))._field_f.get()._field_Generics[_64213_i];;
				{
					
					if ((_64617_t == nullptr) || (_64617_t.get()._field_Kind == nullptr)) {
						_case_begin_1abcbca12:;
						{
							_1a899e54e_pushGeneric(_self_, _64042_k, _64213_i);
						}
					}
					else if ((!(_1a86aee63_Equal(_64617_t.get()._field_Kind, (*(_64042_k)))))) {
						_case_begin_1abcbca78:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1abcbbd85:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_64042_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1abcbb00a:;
			++it;
			_64213_i++;
			goto _iter_begin_1abcbb00a;
		}
		_iter_end_1abcbb00a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a89a1991_annotateKind(_1a899cb24_dynamicTypeAnnotation* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _66143_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1a89a1683_annotateAny(_self_, _66143_k)) {
			_case_begin_1abcc0295:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a86b1eba_Prim((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1abcbec56:;
			{
				__jule_func_result = _1a899e85c_annotatePrim(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a86b2bd0_Arr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1abcbeccd:;
			{
				__jule_func_result = _1a899eb6a_annotateArr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a86b2e44_Slc((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1abcc000e:;
			{
				__jule_func_result = _1a899ee78_annotateSlc(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a86b38e5_Map((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1abcc0075:;
			{
				__jule_func_result = _1a89a063d_annotateMap(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a86b31a8_Fn((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1abcc00ec:;
			{
				__jule_func_result = _1a89a094b_annotateFn(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a86b2493_Ptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1abcc0174:;
			{
				__jule_func_result = _1a89a0c59_annotatePtr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a86b222e_Sptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1abcc030b:;
			{
				__jule_func_result = _1a89a1067_annotateSptr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a86b341c_Struct((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1abcc0372:;
			{
				__jule_func_result = _1a89a1375_annotateStruct(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abcbeb24:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1abcbe5b3:;
	};
}



inline jule::Bool _1a89a1c05_annotate(_1a899cb24_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _1a89a1991_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a899cb24_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a89a2a6e_pushErrToken(_1a89a251e_fnCallArgChecker* _self_, jule::Ptr<_1a52684c0_Token> _70631_token, jule::Str _70646_fmt, jule::Slice<jule::Any> _70659_args) {
	_1a8948e77_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _70631_token, _70646_fmt, _70659_args);
}



inline void _1a89a2d8d_pushErr(_1a89a251e_fnCallArgChecker* _self_, jule::Str _71026_fmt, jule::Slice<jule::Any> _71039_args) {
	_1a89a2a6e_pushErrToken(_self_, (*(_self_))._field_errorToken, _71026_fmt, _71039_args);
}



inline jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>> _1a89a3102_getParams(_1a89a251e_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1a88cb008_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _1a89a33cc_checkCounts(_1a89a251e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>>* _72331_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72417_n = (*(_72331_params)).len();;
	if (((_72417_n > 0LL) && _1a88cb008_IsSelf((*(_72331_params))[0LL].get()._field_Decl.ptr()))) {
		(_72417_n)--;
	};
	jule::I64 _72917_diff = (_72417_n - (*(_self_))._field_args.len());;
	jule::Str _73017_log = jule::Str();;
	{
		
		if ((_72917_diff == 0LL)) {
			_case_begin_1abcc9a41:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72417_n > 0LL) && (*(_72331_params))[(_72417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1abcca745:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72917_diff < 0LL) || (_72917_diff > (*(_72331_params)).len()))) {
			_case_begin_1abcca36b:;
			{
				_73017_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1abcca305:;
			{
				_73017_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_1abcca2a0:;
	};
	jule::Str _74117_err = (*(_self_))._field_f.get()._field_Decl.get()._field_Ident;;
	(_74117_err).append("\n       wanted (", 16);
	{
		auto expr = _72331_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abccc648:;
		if (it != expr_end) {
			jule::I64 _74313_i = it - expr->begin();
			jule::Ptr<_1a88ce03e_ParamIns> *_74316_p = it;
			{
				_74117_err+=_1a86aeb55_Str((*(_74316_p)).get()._field_Kind.ptr());
				if ((((*(_72331_params)).len() - _74313_i) > 1LL)) {
					(_74117_err).append(", ", 2);
				};
			}
			_iter_next_1abccc648:;
			++it;
			_74313_i++;
			goto _iter_begin_1abccc648;
		}
		_iter_end_1abccc648:;
	};
	(_74117_err).append(")", 1);
	_1a89a2d8d_pushErr(_self_, _73017_log, jule::Slice<jule::Any>::make({jule::Any(_74117_err, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a89a382d_checkArg(_1a89a251e_fnCallArgChecker* _self_, jule::Ptr<_1a88ce03e_ParamIns>* _75432_p, jule::Ptr<_1a865dbe2_Data>* _75451_arg, jule::Ptr<_1a52684c0_Token>* _75468_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1a88d2020_parameterUsesGenerics(_75432_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=((!((*(_75432_p)).get()._field_Decl.get()._field_Variadic)) && _1a89aa59e_isGoodValueToInfer(_75451_arg));
		if (__jule_func_result) {
			_1a899cb24_dynamicTypeAnnotation _75925_dta = _1a899cb24_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75432_p)), ._field_a=(*(_75451_arg)), ._field_errorToken=(*(_75468_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1a89a1c05_annotate(&_75925_dta);
		};
		if ((!(__jule_func_result))) {
			_1a89a2a6e_pushErrToken(_self_, (*(_75468_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1a895412a_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Mutable, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, _75468_errorToken)) {
		_1a8951215_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, (*(_75468_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a89a3bd5_push(_1a89a251e_fnCallArgChecker* _self_, jule::Ptr<_1a88ce03e_ParamIns>* _78328_p, jule::Ptr<_1a889b270_Expr> _78346_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a86ae79d_TypeKind> _78417_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _78513_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_78328_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_78328_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_78328_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_1a865dbe2_Data> _79317_d = _1a86a032c_evalExpr((*(_self_))._field_e, _78346_arg);;
	(*(_self_))._field_e.get()._field_prefix=_78417_old;
	(*(_self_))._field_e.get()._field_immutable=_78513_oldImmut;
	if ((_79317_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a89a382d_checkArg(_self_, _78328_p, &(_79317_d), &(_78346_arg.get()._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_79317_d.get()._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1a89a408c_pushVariadic(_1a89a251e_fnCallArgChecker* _self_, jule::Ptr<_1a88ce03e_ParamIns>* _80736_p, jule::I64 _80754_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _80917_variadiced = false;;
	jule::Bool _81013_more = ((_80754_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1a88c130b_SliceExprModel> _81117_model = jule::new_ptr<_1a88c130b_SliceExprModel>(_1a88c130b_SliceExprModel{._field_ElemKind=(*(_80736_p)).get()._field_Kind, });;
	jule::Ptr<_1a86ae79d_TypeKind> _81517_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _82013_variadic = (*(_80736_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_80736_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_80736_p)).get()._field_Kind.get()._field_Variadic=_82013_variadic;
	});;
	for (; (_80754_i < (*(_self_))._field_args.len()); (_80754_i)++) {
		{
			jule::Ptr<_1a889b270_Expr> _82721_arg = (*(_self_))._field_args[_80754_i];;
			{
				auto &_match_expr{ _82721_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type81) {
					_case_begin_1abcda4ad:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a86bb1b1_Slc>(_1a86bb1b1_Slc{._field_Elem=(*(_80736_p)).get()._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1abcdac94:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_80736_p)).get()._field_Kind;
					}
				}
				_match_end_1abcdac3e:;
			};
			jule::Ptr<_1a865dbe2_Data> _84021_d = _1a869ec11_eval((*(_self_))._field_e, _82721_arg);;
			if ((_84021_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1abcd99b8;
			};
			if (_84021_d.get()._field_Kind.get()._field_Variadic) {
				_80917_variadiced=true;
				(*(_80736_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1a89a382d_checkArg(_self_, _80736_p, &(_84021_d), &(_82721_arg.get()._field_Token)));
				{
					auto &_match_expr{ _84021_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1abcde2c5:;
						{
							_81117_model=_84021_d.get()._field_Model.cast_ptr<_1a88c130b_SliceExprModel>(&__jule_any_type82);
							_81117_model.get()._field_ElemKind=(*(_80736_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_1abcddb32:;
						{
							_81117_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_84021_d.get()._field_Model); };
						}
					}
					_match_end_1abcddacc:;
				};
				(_80754_i)++;
				goto _iter_end_1abcd99b8;
			};
			__jule_func_result=(__jule_func_result && _1a89a382d_checkArg(_self_, _80736_p, &(_84021_d), &(_82721_arg.get()._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = _81117_model.get()._field_Elems; __jule_push_dest.push(_84021_d.get()._field_Model); };
		}
	_iter_next_1abcd99b8:;
	}
	_iter_end_1abcd99b8:;;
	(*(_self_))._field_e.get()._field_prefix=_81517_old;
	if ((_80917_variadiced && _81013_more)) {
		_1a89a2a6e_pushErrToken(_self_, (*(_self_))._field_args[_80754_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81117_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81117_model, &__jule_any_type82)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a89a439a_checkArgs(_1a89a251e_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>>* _88333_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88413_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _88817_i = 0LL;;
	if ((((*(_88333_params)).len() > 0LL) && _1a88cb008_IsSelf((*(_88333_params))[0LL].get()._field_Decl.ptr()))) {
		(_88817_i)++;
	};
	_julec_label_iter:;
	while ((_88817_i < (*(_88333_params)).len())) {
		{
			jule::Ptr<_1a88ce03e_ParamIns> _89521_p = (*(_88333_params))[_88817_i];;
			{
				
				if (_89521_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1abce486e:;
					{
						__jule_func_result=(_1a89a408c_pushVariadic(_self_, &(_89521_p), _88817_i) && __jule_func_result);
						goto _iter_end_1abce1a58;
					}
				}
				else if (((*(_self_))._field_args.len() <= _88817_i)) {
					_case_begin_1abce4143:;
					{
						__jule_func_result=false;
						goto _iter_end_1abce1a58;
					}
				}
				else {
					_case_begin_1abce44c8:;
					{
						__jule_func_result=(_1a89a3bd5_push(_self_, &(_89521_p), (*(_self_))._field_args[_88817_i]) && __jule_func_result);
					}
				}
				_match_end_1abce4473:;
			};
			(_88817_i)++;
		}
	_iter_next_1abce1a58:;
	}
	_iter_end_1abce1a58:;;
	(*(_self_))._field_e.get()._field_arg=_88413_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a89a4631_checkDynamicTypeAnnotation(_1a89a251e_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abce6563:;
		if (it != expr_end) {
			jule::Ptr<_1a86ad01b_InsGeneric> _91516_g = *it;
			{
				if ((_91516_g == nullptr)) {
					_1a89a2d8d_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abce6563:;
			++it;
			goto _iter_begin_1abce6563;
		}
		_iter_end_1abce6563:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a89a48a6_check(_1a89a251e_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>> _92517_params = _1a89a3102_getParams(_self_);;
	__jule_func_result=_1a89a33cc_checkCounts(_self_, &(_92517_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a89a439a_checkArgs(_self_, &(_92517_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1a89a4631_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a89a251e_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a89a56dc_pushErr(_1a89a51d1_structLitChecker* _self_, jule::Ptr<_1a52684c0_Token> _96326_token, jule::Str _96341_fmt, jule::Slice<jule::Any> _96354_args) {
	_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), _96326_token, _96341_fmt, _96354_args);
}



inline void _1a89a5a0b_pushSuggestion(_1a89a51d1_structLitChecker* _self_, jule::Str _96833_fmt, jule::Slice<jule::Any> _96846_args) {
	_1a868418a_pushSuggestion((*(_self_))._field_e.ptr(), _96833_fmt, _96846_args);
}



inline void _1a89a5dc4_pushMatch(_1a89a51d1_structLitChecker* _self_, jule::Ptr<_1a88b915b_FieldIns>* _97233_f, jule::Ptr<_1a865dbe2_Data>* _97252_d, jule::Ptr<_1a52684c0_Token>* _97267_errorToken) {
	;
	jule::Bool _97613_mutable = ((*(_97233_f)).get()._field_Decl.get()._field_Mutable || (!((*(_self_))._field_e.get()._field_immutable)));;
	if (_1a895412a_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, _97613_mutable, false, &((*(_97233_f)).get()._field_Kind), _97252_d, _97267_errorToken)) {
		_1a8951215_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_97233_f)).get()._field_Kind), _97252_d, (*(_97267_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1a88be8c0_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1a88be8c0_StructArgExprModel>(_1a88be8c0_StructArgExprModel{._field_Token=(*(_97267_errorToken)), ._field_Field=(*(_97233_f)), ._field_Expr=(*(_97252_d))})); };
}



inline void _1a89a61e3_checkPair(_1a89a51d1_structLitChecker* _self_, jule::Ptr<_1a88a0b15_FieldExprPair>* _98933_pair, jule::Slice<jule::Ptr<_1a889b270_Expr>>* _98960_exprs) {
	jule::Ptr<_1a88b915b_FieldIns> _99117_f = _1a88bae0a_FindField((*(_self_))._field_s.ptr(), (*(_98933_pair)).get()._field_Field.get()._field_Kind);;
	if ((_99117_f == nullptr)) {
		_1a89a56dc_pushErr(_self_, (*(_98933_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_98933_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _99117_f.get()._field_Decl.get()._field_Public, _99117_f.get()._field_Decl.get()._field_Token)))) {
		_1a89a56dc_pushErr(_self_, (*(_98933_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_98933_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_1a89a5a0b_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _98960_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd00eb8:;
		if (it != expr_end) {
			jule::Ptr<_1a889b270_Expr> _100321_expr = *it;
			{
				{
					auto &_match_expr{ _100321_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1abd01848:;
						{
							jule::Ptr<_1a88a0b15_FieldExprPair> _100625_dpair = _100321_expr.get()._field_Kind.cast_ptr<_1a88a0b15_FieldExprPair>(&__jule_any_type83);;
							{
								
								if (((*(_98933_pair)) == _100625_dpair)) {
									_case_begin_1abd0274a:;
									{
										goto _iter_end_1abd00eb8;
									}
								}
								else if (((*(_98933_pair)).get()._field_Field.get()._field_Kind == _100625_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1abd027c2:;
									{
										_1a89a56dc_pushErr(_self_, (*(_98933_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_98933_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_1abd00eb8;
									}
								}
								_match_end_1abd02690:;
							};
						}
					}
					_match_end_1abd0168e:;
				};
			}
			_iter_next_1abd00eb8:;
			++it;
			goto _iter_begin_1abd00eb8;
		}
		_iter_end_1abd00eb8:;
	};
	jule::Ptr<_1a86ae79d_TypeKind> _101717_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_101717_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_99117_f.get()._field_Kind;
	jule::Ptr<_1a865dbe2_Data> _102117_d = _1a86a032c_evalExpr((*(_self_))._field_e, (*(_98933_pair)).get()._field_Expr);;
	if ((_102117_d == nullptr)) {
		return;;
	};
	_1a89a5dc4_pushMatch(_self_, &(_99117_f), &(_102117_d), &((*(_98933_pair)).get()._field_Field));
}



inline jule::Bool _1a89a6501_readyExprs(_1a89a51d1_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a889b270_Expr>>* _102834_exprs) {
	jule::Bool _102917_ok = true;;
	{
		auto expr = _102834_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd05ac2:;
		if (it != expr_end) {
			jule::I64 _103014_i = it - expr->begin();
			jule::Ptr<_1a889b270_Expr> _103021_expr = *it;
			{
				{
					auto &_match_expr{ _103021_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1abd0673d:;
						{
							jule::Ptr<_1a88a2243_KeyValPair> _103325_pair = _103021_expr.get()._field_Kind.cast_ptr<_1a88a2243_KeyValPair>(&__jule_any_type84);;
							{
								auto &_match_expr{ _103325_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type85) {
									_case_begin_1abd0708a:;
									{
										goto _match_end_1abd0750d;
									}
								}
								else {
									_case_begin_1abd07783:;
									{
										_1a89a56dc_pushErr(_self_, _103325_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_102917_ok=false;
										goto _iter_next_1abd05ac2;
									}
								}
								_match_end_1abd0750d:;
							};
							(*(_102834_exprs))[_103014_i].get()._field_Kind=jule::Any(jule::new_ptr<_1a88a0b15_FieldExprPair>(_1a88a0b15_FieldExprPair{._field_Field=_103325_pair.get()._field_Key.get()._field_Token, ._field_Expr=_103325_pair.get()._field_Val}), &__jule_any_type83);
						}
					}
					_match_end_1abd06584:;
				};
			}
			_iter_next_1abd05ac2:;
			++it;
			_103014_i++;
			goto _iter_begin_1abd05ac2;
		}
		_iter_end_1abd05ac2:;
	};
	return _102917_ok;;
}



inline void _1a89a6776_check(_1a89a51d1_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a889b270_Expr>>* _105229_exprs) {
	if (((*(_105229_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1a89a6501_readyExprs(_self_, _105229_exprs)))) {
		return;;
	};
	jule::Bool _105917_paired = false;;
	{
		auto expr = _105229_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd064c9:;
		if (it != expr_end) {
			jule::I64 _106014_i = it - expr->begin();
			jule::Ptr<_1a889b270_Expr> _106021_expr = *it;
			{
				{
					auto &_match_expr{ _106021_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1abd0e768:;
						{
							jule::Ptr<_1a88a0b15_FieldExprPair> _106325_pair = _106021_expr.get()._field_Kind.cast_ptr<_1a88a0b15_FieldExprPair>(&__jule_any_type83);;
							if (((_106014_i > 0LL) && (!(_105917_paired)))) {
								_1a89a56dc_pushErr(_self_, _106325_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_105917_paired=true;
							_1a89a61e3_checkPair(_self_, &(_106325_pair), _105229_exprs);
						}
					}
					else {
						_case_begin_1abd0a544:;
						{
							if (_105917_paired) {
								_1a89a56dc_pushErr(_self_, _106021_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_106014_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_1a89a56dc_pushErr(_self_, _106021_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1abd064c9;
							};
							jule::Ptr<_1a88b915b_FieldIns> _107825_field = (*(_self_))._field_s.get()._field_Fields[_106014_i];;
							if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _107825_field.get()._field_Decl.get()._field_Public, _107825_field.get()._field_Decl.get()._field_Token)))) {
								_1a89a56dc_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1a89a5a0b_pushSuggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a86ae79d_TypeKind> _108625_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_108625_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_107825_field.get()._field_Kind;
							jule::Ptr<_1a865dbe2_Data> _109025_d = _1a86a032c_evalExpr((*(_self_))._field_e, _106021_expr);;
							if ((_109025_d == nullptr)) {
								goto _iter_next_1abd064c9;
							};
							_1a89a5dc4_pushMatch(_self_, &(_107825_field), &(_109025_d), &(_106021_expr.get()._field_Token));
						}
					}
					_match_end_1abd0a3bd:;
				};
			}
			_iter_next_1abd064c9:;
			++it;
			_106014_i++;
			goto _iter_begin_1abd064c9;
		}
		_iter_end_1abd064c9:;
	};
	if ((!(_105917_paired))) {
		jule::I64 _110117_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I64 _110221_diff = (_110117_n - (*(_105229_exprs)).len());;
		{
			
			if ((_110221_diff <= 0LL)) {
				_case_begin_1abd0e845:;
				{
					return;;
				}
			}
			_match_end_1abd12051:;
		};
		jule::Str _110821_idents = jule::Str();;
		for (; (_110221_diff > 0LL); (_110221_diff)--) {
			{
				_110821_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_110117_n - _110221_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1abd12914:;
		}
		_iter_end_1abd12914:;;
		(_110821_idents).mut_slice(2LL);;
		_1a89a56dc_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_110821_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a89a51d1_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8966901_Var> _1a89a727c_buildVar(_1a89a6cb5_rangeChecker* _self_, jule::Ptr<_1a88a9701_VarDecl>* _112728_decl) {
	jule::Ptr<_1a8966901_Var> _112817_v = _1a88d7d4a_buildVar((*(_112728_decl)));;
	return _112817_v;;
}



inline void _1a89a7458_setSizeKey(_1a89a6cb5_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1a526ac64_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_1a89a727c_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=_1a8776b2e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1abd15e12:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1a89658ab_IterRelation>(_1a89658ab_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_1a8966901_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1abd15dac:;
	};
}



inline void _1a89a7821_checkRangeExprValidity(_1a89a6cb5_rangeChecker* _self_, jule::Ptr<_1a865dbe2_Data>* _115446_d, jule::Ptr<_1a8966901_Var>* _115457_key, jule::Ptr<_1a86ae79d_TypeKind>* _115473_k) {
	jule::Bool _115517__mut = (*(_115457_key)).get()._field_Mutable;;
	if ((_115517__mut && (!(_1a86b1041_Mutable((*(_115473_k)).ptr()))))) {
		_115517__mut=false;
	};
	_1a895412a_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _115517__mut, (*(_115457_key)).get()._field_Reference, &((*(_115457_key)).get()._field_Kind.get()._field_Kind), _115446_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _1a89a79ec_checkSlice(_1a89a6cb5_rangeChecker* _self_) {
	_1a89a7458_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1a526ac64_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a86bb1b1_Slc> _117317_slc = _1a86b2e44_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1a89a727c_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=_117317_slc.get()._field_Elem});
	_1a89a7821_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_117317_slc.get()._field_Elem));
}



inline void _1a89a7bc8_checkArray(_1a89a6cb5_rangeChecker* _self_) {
	_1a89a7458_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1a526ac64_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a86bd35b_Arr> _118617_arr = _1a86b2bd0_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1a89a727c_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=_118617_arr.get()._field_Elem});
	_1a89a7821_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_118617_arr.get()._field_Elem));
}



inline void _1a89a7da4_checkMapKeyA(_1a89a6cb5_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1a526ac64_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a86bc767_Map> _119817_m = _1a86b38e5_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_1a89a727c_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=_119817_m.get()._field_Key});
	jule::Ptr<_1a865dbe2_Data> _120217_d = jule::new_ptr<_1a865dbe2_Data>((*((*(_self_))._field_d)));;
	_120217_d.get()._field_Kind=_119817_m.get()._field_Key;
	_1a89a7821_checkRangeExprValidity(_self_, &(_120217_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_119817_m.get()._field_Key));
}



inline void _1a89a8080_checkMapKeyB(_1a89a6cb5_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1a526ac64_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a86bc767_Map> _121317_m = _1a86b38e5_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1a89a727c_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=_121317_m.get()._field_Val});
	jule::Ptr<_1a865dbe2_Data> _121717_d = jule::new_ptr<_1a865dbe2_Data>((*((*(_self_))._field_d)));;
	_121717_d.get()._field_Kind=_121317_m.get()._field_Val;
	_1a89a7821_checkRangeExprValidity(_self_, &(_121717_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_121317_m.get()._field_Val));
}



inline void _1a89a825b_checkMap(_1a89a6cb5_rangeChecker* _self_) {
	_1a89a7da4_checkMapKeyA(_self_);
	_1a89a8080_checkMapKeyB(_self_);
}



inline void _1a89a8437_checkStr(_1a89a6cb5_rangeChecker* _self_) {
	_1a89a7458_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1a526ac64_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1a89a727c_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=_1a8776b2e_findBuiltinTypeAlias(jule::Str("u8", 2)).get()._field_Kind;
}



inline void _1a89a8613_checkComptime(_1a89a6cb5_rangeChecker* _self_) {
	_1a89a7458_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyA != nullptr) && (*(_self_))._field_rang.get()._field_KeyA.get()._field_Mutable)) {
		_1a8948e77_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyA.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB != nullptr) && (*(_self_))._field_rang.get()._field_KeyB.get()._field_Mutable)) {
		_1a8948e77_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyB.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1a526ac64_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1a89a727c_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
}



inline jule::Bool _1a89a8877_checkComptimeRange(_1a89a6cb5_rangeChecker* _self_) {
	jule::Ptr<_1a88e5462_comptimeRange> _125217_range = _1a86b50ab_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _125217_range.get()._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1abd2cdd5:;
			{
				_1a89a8613_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1abd2c137:;
			{
				_1a8948e77_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1abd2c0d2:;
	};
}



inline jule::Bool _1a89a8adb_check(_1a89a6cb5_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1abd2dd3c:;
		}
		else if ((_1a86b2e44_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd2dda3:;
			{
				_1a89a79ec_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1a86b2bd0_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd2de19:;
			{
				_1a89a7bc8_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1a86b38e5_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd2de80:;
			{
				_1a89a825b_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1a86b50ab_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd301d4:;
			{
				return _1a89a8877_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1abd2d699:;
			{
				jule::Ptr<_1a86b7003_Prim> _128417_prim = _1a86b1eba_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_128417_prim != nullptr) && _1a86ba204_IsStr(_128417_prim.ptr()))) {
					_1a89a8437_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1abd2dbd8:;
	};
	_1a8948e77_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a89a6cb5_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1a89a96be_prepareTypes(_1a89a92b2_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1a88d1030_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1a89a9944_prepareExprs(_1a89a92b2_retTypeChecker* _self_, jule::Ptr<_1a889b270_Expr>* _131236_e) {
	if (((*(_131236_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_131236_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1abd34d76:;
			{
				(*(_self_))._field_exprs=(*(_131236_e)).get()._field_Kind.cast_ptr<_1a889bdec_TupleExpr>(&__jule_any_type86).get()._field_Expr;
			}
		}
		else {
			_case_begin_1abd3499c:;
			{
				{ jule::Slice<jule::Ptr<_1a889b270_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_131236_e))); };
			}
		}
		_match_end_1abd34947:;
	};
}



inline void _1a89a9b20_checkExprs(_1a89a92b2_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a865dbe2_Data>> _132817_datas = jule::Slice<jule::Ptr<_1a865dbe2_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1a8683860_Eval> _132917_eval = _1a8950c1a_eval((*(_self_))._field_sc.get()._field_s, jule::Trait<_1a86ccac9_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd35717:;
		if (it != expr_end) {
			jule::I64 _133014_i = it - expr->begin();
			jule::Ptr<_1a889b270_Expr> _133021_expr = *it;
			{
				if ((_133014_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1abd35717;
				};
				jule::Ptr<_1a86ae79d_TypeKind> _133521_t = (*(_self_))._field_types[_133014_i];;
				_132917_eval.get()._field_prefix=_133521_t;
				jule::Ptr<_1a865dbe2_Data> _133821_d = _1a86a032c_evalExpr(_132917_eval, _133021_expr);;
				if ((_133821_d == nullptr)) {
					goto _iter_next_1abd35717;
				};
				{ jule::Slice<jule::Ptr<_1a865dbe2_Data>> &__jule_push_dest = _132817_datas; __jule_push_dest.push(_133821_d); };
				if (((!(_133821_d.get()._field_Mutable)) && _1a86b1041_Mutable(_133821_d.get()._field_Kind.ptr()))) {
					_1a8948e77_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1a899b13e_assignTypeChecker _135021_ac = _1a899b13e_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_133521_t, ._field_d=_133821_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1a899c2b6_check(&_135021_ac);
			}
			_iter_next_1abd35717:;
			++it;
			_133014_i++;
			goto _iter_begin_1abd35717;
		}
		_iter_end_1abd35717:;
	};
	if ((_132817_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1a88c4b7d_TupleExprModel>(_1a88c4b7d_TupleExprModel{._field_Datas=_132817_datas}), &__jule_any_type87);
	} else if ((_132817_datas.len() == 1LL)) {
		(*(_self_))._field_model=_132817_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1a89a9e2d_check(_1a89a92b2_retTypeChecker* _self_, jule::Ptr<_1a889b270_Expr>* _136929_e) {
	_1a89a96be_prepareTypes(_self_);
	_1a89a9944_prepareExprs(_self_, _136929_e);
	jule::I64 _137313_n = (*(_self_))._field_exprs.len();;
	if (((_137313_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1a88cd3d4_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_1a8948e77_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_137313_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1a88cc6be_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_1a8948e77_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_137313_n > (*(_self_))._field_types.len())) {
		_1a8948e77_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_137313_n < (*(_self_))._field_types.len())) {
		_1a8948e77_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1a89a9b20_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a89a92b2_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a89ab847_SelectPackage(_1a89ab380_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd42504:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1abd42504:;
			++it;
			goto _iter_begin_1abd42504;
		}
		_iter_end_1abd42504:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8966901_Var> _1a89abbee_FindVar(_1a89ab380_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1a89ad805_findVar(_self_, _4126_ident, _4138_binded, false);;
}



inline jule::Ptr<_1a86ada55_TypeAlias> _1a89ac0a6_FindTypeAlias(_1a89ab380_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1a89adc56_findTypeAlias(_self_, _4732_ident, _4744_binded, false);;
}



inline jule::Ptr<_1a88b6d3a_Struct> _1a89ac45d_FindStruct(_1a89ab380_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd44869:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> _5421_s = *it;
			{
				if (((_5421_s.get()._field_Ident == _5329_ident) && (_5421_s.get()._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1abd44869:;
			++it;
			goto _iter_begin_1abd44869;
		}
		_iter_end_1abd44869:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88cc25c_Fn> _1a89ac815_FindFn(_1a89ab380_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd45c11:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _6521_f = *it;
			{
				if (((_6521_f.get()._field_Ident == _6425_ident) && (_6521_f.get()._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1abd45c11:;
			++it;
			goto _iter_begin_1abd45c11;
		}
		_iter_end_1abd45c11:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88de47d_Trait> _1a89acb23_FindTrait(_1a89ab380_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd463d7:;
		if (it != expr_end) {
			jule::Ptr<_1a88de47d_Trait> _7621_t = *it;
			{
				if ((_7621_t.get()._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1abd463d7:;
			++it;
			goto _iter_begin_1abd463d7;
		}
		_iter_end_1abd463d7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88e1c11_Enum> _1a89ace31_FindEnum(_1a89ab380_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd47bbe:;
		if (it != expr_end) {
			jule::Ptr<_1a88e1c11_Enum> _8721_e = *it;
			{
				if ((_8721_e.get()._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1abd47bbe:;
			++it;
			goto _iter_begin_1abd47bbe;
		}
		_iter_end_1abd47bbe:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88e330b_TypeEnum> _1a89ad23e_FindTypeEnum(_1a89ab380_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd48a9e:;
		if (it != expr_end) {
			jule::Ptr<_1a88e330b_TypeEnum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1abd48a9e:;
			++it;
			goto _iter_begin_1abd48a9e;
		}
		_iter_end_1abd48a9e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8966901_Var> _1a89ad805_findVar(_1a89ab380_SymbolTable* _self_, jule::Str _10826_ident, jule::Bool _10838_binded, jule::Bool _10852_reverse) {
	if (_10852_reverse) {
		jule::I64 _11021_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1a8966901_Var> _11225_v = (*(_self_))._field_Vars[_11021_i];;
				if (((_11225_v.get()._field_Ident == _10826_ident) && (_11225_v.get()._field_Binded == _10838_binded))) {
					return _11225_v;;
				};
			}
		_iter_next_1abd4a9c4:;
		}
		_iter_end_1abd4a9c4:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abd4bc7d:;
			if (it != expr_end) {
				jule::Ptr<_1a8966901_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_Ident == _10826_ident) && (_11825_v.get()._field_Binded == _10838_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1abd4bc7d:;
				++it;
				goto _iter_begin_1abd4bc7d;
			}
			_iter_end_1abd4bc7d:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1a86ada55_TypeAlias> _1a89adc56_findTypeAlias(_1a89ab380_SymbolTable* _self_, jule::Str _12732_ident, jule::Bool _12744_binded, jule::Bool _12758_reverse) {
	if (_12758_reverse) {
		jule::I64 _12921_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1a86ada55_TypeAlias> _13125_ta = (*(_self_))._field_TypeAliases[_12921_i];;
				if (((_13125_ta.get()._field_Ident == _12732_ident) && (_13125_ta.get()._field_Binded == _12744_binded))) {
					return _13125_ta;;
				};
			}
		_iter_next_1abd4d90b:;
		}
		_iter_end_1abd4d90b:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abd4ebb5:;
			if (it != expr_end) {
				jule::Ptr<_1a86ada55_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_Ident == _12732_ident) && (_13725_ta.get()._field_Binded == _12744_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1abd4ebb5:;
				++it;
				goto _iter_begin_1abd4ebb5;
			}
			_iter_end_1abd4ebb5:;
		};
	};
	return nullptr;;
}



inline jule::Any _1a89ae10d_defByIdent(_1a89ab380_SymbolTable* _self_, jule::Str _14829_ident, jule::Bool _14841_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd50b3e:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_Ident == _14829_ident) && (_14921_v.get()._field_Binded == _14841_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1abd50b3e:;
			++it;
			goto _iter_begin_1abd50b3e;
		}
		_iter_end_1abd50b3e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd51601:;
		if (it != expr_end) {
			jule::Ptr<_1a86ada55_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_Ident == _14829_ident) && (_15521_ta.get()._field_Binded == _14841_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type67);;
				};
			}
			_iter_next_1abd51601:;
			++it;
			goto _iter_begin_1abd51601;
		}
		_iter_end_1abd51601:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd52514:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_Ident == _14829_ident) && (_16121_s.get()._field_Binded == _14841_binded))) {
					return jule::Any(_16121_s, &__jule_any_type66);;
				};
			}
			_iter_next_1abd52514:;
			++it;
			goto _iter_begin_1abd52514;
		}
		_iter_end_1abd52514:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd52eb5:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_Ident == _14829_ident) && (_16721_f.get()._field_Binded == _14841_binded))) {
					return jule::Any(_16721_f, &__jule_any_type65);;
				};
			}
			_iter_next_1abd52eb5:;
			++it;
			goto _iter_begin_1abd52eb5;
		}
		_iter_end_1abd52eb5:;
	};
	if (_14841_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd54060:;
		if (it != expr_end) {
			jule::Ptr<_1a88de47d_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_Ident == _14829_ident)) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1abd54060:;
			++it;
			goto _iter_begin_1abd54060;
		}
		_iter_end_1abd54060:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd54c42:;
		if (it != expr_end) {
			jule::Ptr<_1a88e1c11_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18321_e, &__jule_any_type68);;
				};
			}
			_iter_next_1abd54c42:;
			++it;
			goto _iter_begin_1abd54c42;
		}
		_iter_end_1abd54c42:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd559e0:;
		if (it != expr_end) {
			jule::Ptr<_1a88e330b_TypeEnum> _18921_te = *it;
			{
				if ((_18921_te.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18921_te, &__jule_any_type69);;
				};
			}
			_iter_next_1abd559e0:;
			++it;
			goto _iter_begin_1abd559e0;
		}
		_iter_end_1abd559e0:;
	};
	return nullptr;;
}



inline jule::Bool _1a89ae55e_isDuplicatedIdent(_1a89ab380_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str _20149_ident, jule::Bool _20161_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd5668e:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*(_20216_v)).get()._field_Ident == _20149_ident)) && ((*(_20216_v)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1abd5668e:;
			++it;
			goto _iter_begin_1abd5668e;
		}
		_iter_end_1abd5668e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd5664a:;
		if (it != expr_end) {
			jule::Ptr<_1a86ada55_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*(_20816_ta)).get()._field_Ident == _20149_ident)) && ((*(_20816_ta)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1abd5664a:;
			++it;
			goto _iter_begin_1abd5664a;
		}
		_iter_end_1abd5664a:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd56eec:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*(_21416_s)).get()._field_Ident == _20149_ident)) && ((*(_21416_s)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1abd56eec:;
			++it;
			goto _iter_begin_1abd56eec;
		}
		_iter_end_1abd56eec:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd596d6:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*(_22016_f)).get()._field_Ident == _20149_ident)) && ((*(_22016_f)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1abd596d6:;
			++it;
			goto _iter_begin_1abd596d6;
		}
		_iter_end_1abd596d6:;
	};
	if (_20161_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd5a8b3:;
		if (it != expr_end) {
			jule::Ptr<_1a88de47d_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*(_23016_t)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1abd5a8b3:;
			++it;
			goto _iter_begin_1abd5a8b3;
		}
		_iter_end_1abd5a8b3:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd59d13:;
		if (it != expr_end) {
			jule::Ptr<_1a88e1c11_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*(_23616_e)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1abd59d13:;
			++it;
			goto _iter_begin_1abd59d13;
		}
		_iter_end_1abd59d13:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd5c277:;
		if (it != expr_end) {
			jule::Ptr<_1a88e330b_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*(_24216_te)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1abd5c277:;
			++it;
			goto _iter_begin_1abd5c277;
		}
		_iter_end_1abd5c277:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a89ab380_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a865e033_IsNil(_1a865dbe2_Data* _self_) {
	return _1a86b0804_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a865e297_IsVoid(_1a865dbe2_Data* _self_) {
	return _1a86b0a68_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a865e50b_IsConst(_1a865dbe2_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1a865e819_GoodOperand(_1a865dbe2_Data* _self_, jule::Ptr<_1a865dbe2_Data>* _10031_other) {
	if ((_1a86b296b_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1a86b1eba_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_1a86ba468_IsAny(_1a86b1eba_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_1a86b3681_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_1a86b0804_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a865dbe2_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a865ec15_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1a8683d6b_pushErr(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_1a8948e77_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _1a868418a_pushSuggestion(_1a8683860_Eval* _self_, jule::Str _13633_fmt, jule::Slice<jule::Any> _13646_args) {
	_1a8949296_pushSuggestion((*(_self_))._field_s.ptr(), _13633_fmt, _13646_args);
}



inline void _1a8684366_allowBuiltin(_1a8683860_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a8684542_disallowBuiltin(_1a8683860_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1a86847a6_isUnsafe(_1a8683860_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1a8684a1a_isGlobal(_1a8683860_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1abd90a3b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1abd90ad5:;
			{
				return false;;
			}
		}
		_match_end_1abd91157:;
	};
}



inline jule::Bool _1a8684ce5_applyNumericPrefix(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_1a865e50b_IsConst((*(_16342_d)).ptr())))) || (_1a86b1eba_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a86b7003_Prim> _17013_prim = _1a86b1eba_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1a553ee17_IsFloat(_1a86b7333_Str(_17013_prim.ptr()))) {
			_case_begin_1abd93566:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>((*((*(_self_))._field_prefix)));
				_1a5543e1b_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1a55431a1_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1a553e565_IsSigInt(_1a86b7333_Str(_17013_prim.ptr()))) {
			_case_begin_1abd935dd:;
			{
				if ((!(_1a8998889_sigAssignable(_1a86b7333_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>((*((*(_self_))._field_prefix)));
				_1a5543426_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1a5542bc8_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1a553e851_IsUnsigInt(_1a86b7333_Str(_17013_prim.ptr()))) {
			_case_begin_1abd93665:;
			{
				if ((!(_1a8998c1e_unsigAssignable(_1a86b7333_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>((*((*(_self_))._field_prefix)));
				_1a554369b_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1a5542e3c_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_1abd938da:;
	};
	return true;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8685059_litNil(_1a8683860_Eval* _self_) {
	jule::Ptr<_1a55406ba_Const> _20217_constant = static__1a5541875_NewNil();;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type19), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8685367_litStr(_1a8683860_Eval* _self_, jule::Ptr<_1a889c2a4_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_1a5269823_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_1a8996e3c_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_1a899725b_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_1a55406ba_Const> _21817_constant = static__1a55413d0_NewStr(_21217_s);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type19), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8685675_litBool(_1a8683860_Eval* _self_, jule::Ptr<_1a889c2a4_LitExpr>* _22823_l) {
	jule::Ptr<_1a55406ba_Const> _22917_constant = static__1a5541138_NewBool((*(_22823_l)).get()._field_Value.equal("true", 4));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Mutable=true, ._field_Model=jule::Any(_22917_constant, &__jule_any_type19), ._field_Constant=_22917_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8685983_litRune(_1a8683860_Eval* _self_, jule::Ptr<_1a889c2a4_LitExpr>* _23823_l) {
	jule::Str _24013_lt = (*(_23823_l)).get()._field_Value.slice(1LL, ((*(_23823_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24113_r = _1a89802aa_ToRune(static_cast<jule::Slice<jule::U8>>(_24013_lt));;
	jule::Ptr<_1a865dbe2_Data> _24217_data = jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Constant=static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24113_r)))});;
	jule::Bool _24613_isAscii = _1a8980178_IsAscii(_24113_r);;
	if (_24613_isAscii) {
		_24217_data.get()._field_Kind=_1a8775831_primU8;
	} else {
		_24217_data.get()._field_Kind=_1a877529d_primI32;
	};
	_24217_data.get()._field_Mutable=true;
	_24217_data.get()._field_Model=jule::Any(jule::new_ptr<_1a88c8c92_RuneExprModel>(_1a88c8c92_RuneExprModel{._field_Code=_24113_r}), &__jule_any_type88);
	_24217_data.get()._field_IsRune=true;
	_24217_data.get()._field_untyped=true;
	return _24217_data;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8685c91_litFloat(_1a8683860_Eval* _self_, jule::Ptr<_1a889c2a4_LitExpr>* _26024_l) {
	jule::F64 _26113_f = ({
		auto except = _1a5526607_ParseFloat((*(_26024_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1a55406ba_Const> _26217_constant = static__1a5541677_NewF64(_26113_f);;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_untyped=true, ._field_Kind=_1a87768ba_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_26217_constant, &__jule_any_type19), ._field_Constant=_26217_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a868609e_litInt(_1a8683860_Eval* _self_, jule::Ptr<_1a889c2a4_LitExpr>* _27226_l) {
	;
	jule::Str _27517_lit = (*(_27226_l)).get()._field_Value;;
	jule::I64 _27617_base = 0LL;;
	{
		
		if (_1a4d5a238_HasPrefix(_27517_lit, jule::Str("0x", 2))) {
			_case_begin_1abda8070:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=16LLU;
			}
		}
		else if (_1a4d5a238_HasPrefix(_27517_lit, jule::Str("0b", 2))) {
			_case_begin_1abda80d6:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=2LLU;
			}
		}
		else if (_1a4d5a238_HasPrefix(_27517_lit, jule::Str("0o", 2))) {
			_case_begin_1abda7c84:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=8LLU;
			}
		}
		else if (((_27517_lit[0LL] == '0') && (_27517_lit.len() > 1LL))) {
			_case_begin_1abda7cea:;
			{
				(_27517_lit).mut_slice(1LL);;
				_27617_base=8LLU;
			}
		}
		else {
			_case_begin_1abda7c1d:;
			{
				_27617_base=10LLU;
			}
		}
		_match_end_1abda7bb8:;
	};
	jule::Ptr<_1a865dbe2_Data> _29617_d = jule::new_ptr<_1a865dbe2_Data>();;
	jule::Bool _29817_ok = true;;
	jule::I64 _29913_sig = ({
		auto except = _1a552007e_ParseInt(_27517_lit, _27617_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_29817_ok=false;

			0LL;
		});
	});;
	if (_29817_ok) {
		_29617_d.get()._field_Constant=static__1a5540ae9_NewI64(_29913_sig);
		_29617_d.get()._field_Kind=_1a8774841_primInt;
	} else {
		jule::U64 _30717_unsig = ({
			auto except = _1a551eb1c_ParseUint(_27517_lit, _27617_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1a8683d6b_pushErr(_self_, (*(_27226_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1a868418a_pushSuggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_29617_d.get()._field_Constant=static__1a5540d91_NewU64(_30717_unsig);
		_29617_d.get()._field_Kind=_1a8774577_primUint;
	};
	_29617_d.get()._field_Model=jule::Any(_29617_d.get()._field_Constant, &__jule_any_type19);
	if ((!(_1a8684ce5_applyNumericPrefix(_self_, &(_29617_d))))) {
		_1a86a8a61_fitBitsize(&(_29617_d));
	};
	_29617_d.get()._field_Mutable=true;
	_29617_d.get()._field_untyped=true;
	return _29617_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a86863ac_litNum(_1a8683860_Eval* _self_, jule::Ptr<_1a889c2a4_LitExpr>* _32826_l) {
	{
		
		if (_1a526a47d_IsFloat((*(_32826_l)).get()._field_Value)) {
			_case_begin_1abdaee01:;
			{
				return _1a8685c91_litFloat(_self_, _32826_l);;
			}
		}
		else {
			_case_begin_1abdae719:;
			{
				return _1a868609e_litInt(_self_, _32826_l);;
			}
		}
		_match_end_1abdae670:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86866ba_evalLit(_1a8683860_Eval* _self_, jule::Ptr<_1a889c2a4_LitExpr> _33726_lit) {
	{
		
		if (_1a889c606_IsNil(_33726_lit.ptr())) {
			_case_begin_1abdb0907:;
			{
				return _1a8685059_litNil(_self_);;
			}
		}
		else if (_1a526957b_IsStr(_33726_lit.get()._field_Value)) {
			_case_begin_1abdb096d:;
			{
				return _1a8685367_litStr(_self_, &(_33726_lit));;
			}
		}
		else if (_1a526a1d6_IsBool(_33726_lit.get()._field_Value)) {
			_case_begin_1abdb09d4:;
			{
				return _1a8685675_litBool(_self_, &(_33726_lit));;
			}
		}
		else if (_1a5269aba_IsRune(_33726_lit.get()._field_Value)) {
			_case_begin_1abdb0a4a:;
			{
				return _1a8685983_litRune(_self_, &(_33726_lit));;
			}
		}
		else if (_1a526a725_IsNum(_33726_lit.get()._field_Value)) {
			_case_begin_1abdb0b8d:;
			{
				return _1a86863ac_litNum(_self_, &(_33726_lit));;
			}
		}
		else {
			_case_begin_1abdb03c9:;
			{
				return nullptr;;
			}
		}
		_match_end_1abdae9c2:;
	};
}



inline jule::Any _1a86869c8_findBuiltins(_1a8683860_Eval* _self_, jule::Str _35431_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1abdb2dd2:;
			{
				jule::Any _35721_def = _1a86a8852_findBuiltinsImport(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_1a893d323_ImportInfo>(1));;
				if ((_35721_def != nullptr)) {
					return _35721_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1abdb3344:;
			{
				jule::Any _36221_def = _1a86a94e0_findBuiltinsSema(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_1a89465e5_Sema>(3));;
				if ((_36221_def != nullptr)) {
					return _36221_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1abdb33aa:;
			{
				jule::Any _36721_def = _1a86a94e0_findBuiltinsSema(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_1a8925eba_scopeChecker>(0).get()._field_s);;
				if ((_36721_def != nullptr)) {
					return _36721_def;;
				};
			}
		}
		_match_end_1abdb2640:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1a8776d3d_findBuiltinDef(_35431_ident);;
}



inline jule::Any _1a8686d80_getDef(_1a8683860_Eval* _self_, jule::Str _37825_ident, jule::Bool _37837_binded) {
	jule::Ptr<_1a8966901_Var> _38317_v = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cb446_FindVar((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_38317_v != nullptr)) {
		return jule::Any(_38317_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a86ada55_TypeAlias> _38817_ta = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cb7ed_FindTypeAlias((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_38817_ta != nullptr)) {
		return jule::Any(_38817_ta, &__jule_any_type67);;
	};
	if ((!(_37837_binded))) {
		jule::Ptr<_1a88e1c11_Enum> _39421_enm = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cc678_FindEnum((*(_self_))._field_lookup, _37825_ident);;
		if ((_39421_enm != nullptr)) {
			return jule::Any(_39421_enm, &__jule_any_type68);;
		};
		jule::Ptr<_1a88e330b_TypeEnum> _39921_tenm = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cc986_FindTypeEnum((*(_self_))._field_lookup, _37825_ident);;
		if ((_39921_tenm != nullptr)) {
			return jule::Any(_39921_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_1a88cc25c_Fn> _40517_f = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cc05c_FindFn((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_40517_f != nullptr)) {
		return jule::Any(_40517_f, &__jule_any_type65);;
	};
	jule::Ptr<_1a88b6d3a_Struct> _41017_s = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cbba5_FindStruct((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_41017_s != nullptr)) {
		return jule::Any(_41017_s, &__jule_any_type66);;
	};
	return _1a86869c8_findBuiltins(_self_, _37825_ident);;
}



inline void _1abdc93b0_pushReference(_1a8683860_Eval* _self_, jule::Ptr<_1a88cee0d_FnIns>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1abdcad62:;
			{
				jule::Ptr<_1a8925eba_scopeChecker> _42121_sc = _1a8929056_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a8925eba_scopeChecker>(0));;
				if ((!(_1abdcbcec_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_1a88d39d3_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1abdca768:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1abdcbcec_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_1a88d39d3_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1abdca713:;
	};
}

inline void _1abddca22_pushReference(_1a8683860_Eval* _self_, jule::Ptr<_1a8966901_Var>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1abdde480:;
			{
				jule::Ptr<_1a8925eba_scopeChecker> _42121_sc = _1a8929056_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a8925eba_scopeChecker>(0));;
				if ((!(_1abde041a_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_1a88d39d3_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1abdddd86:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1abde041a_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_1a88d39d3_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1abdddd31:;
	};
}

inline void _1abe798a0_pushReference(_1a8683860_Eval* _self_, jule::Ptr<_1a88b9b51_StructIns>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1abe7b374:;
			{
				jule::Ptr<_1a8925eba_scopeChecker> _42121_sc = _1a8929056_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a8925eba_scopeChecker>(0));;
				if ((!(_1abe7c30e_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_1a88d39d3_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1abe7ac7a:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1abe7c30e_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_1a88d39d3_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1abe7ac25:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a8687413__evalEnum(_1a8683860_Eval* _self_, jule::Ptr<_1a88e1c11_Enum> _43528_enm) {
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_43528_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a86877ba_evalEnum(_1a8683860_Eval* _self_, jule::Ptr<_1a88e1c11_Enum> _44431_enm, jule::Ptr<_1a52684c0_Token> _44443_errorToken) {
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), _44431_enm.get()._field_Public, _44431_enm.get()._field_Token)))) {
		_1a8683d6b_pushErr(_self_, _44443_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_44431_enm.get()._field_Ident, &__jule_any_type5)}));
		_1a868418a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a8687413__evalEnum(_self_, _44431_enm);;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8687ac8__evalTypeEnum(_1a8683860_Eval* _self_, jule::Ptr<_1a88e330b_TypeEnum> _45332_enm) {
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_45332_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8687e80_evalTypeEnum(_1a8683860_Eval* _self_, jule::Ptr<_1a88e330b_TypeEnum> _46235_enm, jule::Ptr<_1a52684c0_Token> _46251_errorToken) {
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), _46235_enm.get()._field_Public, _46235_enm.get()._field_Token)))) {
		_1a8683d6b_pushErr(_self_, _46251_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_46235_enm.get()._field_Ident, &__jule_any_type5)}));
		_1a868418a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a8687ac8__evalTypeEnum(_self_, _46235_enm);;
}



inline jule::Ptr<_1a865dbe2_Data> _1a868828d__evalStruct(_1a8683860_Eval* _self_, jule::Ptr<_1a88b9b51_StructIns> _47130_s) {
	jule::Ptr<_1a865dbe2_Data> _47217_d = jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_47130_s, 0)}), ._field_Model=jule::Any(_47130_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_47130_s.get()._field_Decl != nullptr) && _47130_s.get()._field_Decl.get()._field_Binded)) {
		_47217_d.get()._field_Kind.get()._field_BindIdent=_47130_s.get()._field_Decl.get()._field_Ident;
	};
	return _47217_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8688645_evalStruct(_1a8683860_Eval* _self_, jule::Ptr<_1a88b9b51_StructIns> _48533_s, jule::Ptr<_1a52684c0_Token> _48548_errorToken) {
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), _48533_s.get()._field_Decl.get()._field_Public, _48533_s.get()._field_Decl.get()._field_Token)))) {
		_1a8683d6b_pushErr(_self_, _48548_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_48533_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_1a868418a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a8688c72_checkDeprecated(_self_, &(_48533_s.get()._field_Decl.get()._field_Directives), _48548_errorToken);
	return _1a868828d__evalStruct(_self_, _48533_s);;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8688953_evalFnIns(_1a8683860_Eval* _self_, jule::Ptr<_1a88cee0d_FnIns> _49528_f) {
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_49528_f, 1)}), ._field_Model=jule::Any(_49528_f, &__jule_any_type7), });;
}



inline void _1a8688c72_checkDeprecated(_1a8683860_Eval* _self_, jule::Slice<jule::Ptr<_1a88645ce_Directive>>* _50439_directives, jule::Ptr<_1a52684c0_Token> _50470_tok) {
	if (_1a86847a6_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1a88645ce_Directive> _50913_d = _1a86a84bc_findDirective(_50439_directives, jule::Str("deprecated", 10));;
	if ((_50913_d != nullptr)) {
		if ((_50913_d.get()._field_Args.len() == 0LL)) {
			_1a8683d6b_pushErr(_self_, _50470_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_1a8683d6b_pushErr(_self_, _50470_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_50913_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_1a868418a_pushSuggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a8689129_evalFn(_1a8683860_Eval* _self_, jule::Ptr<_1a88cc25c_Fn> _52029_f, jule::Ptr<_1a52684c0_Token> _52037_errorToken) {
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), _52029_f.get()._field_Public, _52029_f.get()._field_Token)))) {
		_1a8683d6b_pushErr(_self_, _52037_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_52029_f.get()._field_Ident, &__jule_any_type5)}));
		_1a868418a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a8688c72_checkDeprecated(_self_, &(_52029_f.get()._field_Directives), _52037_errorToken);
	jule::Ptr<_1a88cee0d_FnIns> _52917_ins = _1a88cd8ac_instance(_52029_f);;
	_1abdc93b0_pushReference(_self_, &(_52917_ins));
	return _1a8688953_evalFnIns(_self_, _52917_ins);;
}



inline void _1a86894e2_pushIllegalCycleError(_1a8683860_Eval* _self_, jule::Ptr<_1a8966901_Var>* _53441_v1, jule::Ptr<_1a8966901_Var>* _53452_v2, jule::Str* _53467_message) {
	;
	jule::Str _53613_refers_to = _1a4deb84b_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_53441_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_53452_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_53467_message))).buffer.insert(0, (((_1a4d599b8_Repeat(jule::Str(" ", 1), 7LL) + _53613_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a8689899_checkCrossCycle(_1a8683860_Eval* _self_, jule::Ptr<_1a8966901_Var>* _54035_v, jule::Str* _54049_message) {
	{
		auto expr = &((*(_54035_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abdd1b26:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> *_54116_d = it;
			{
				if (((*(_54116_d)) == (*(_self_))._field_owner)) {
					_1a86894e2_pushIllegalCycleError(_self_, _54035_v, _54116_d, _54049_message);
					return false;;
				};
				if ((!(_1a8689899_checkCrossCycle(_self_, _54116_d, _54049_message)))) {
					_1a86894e2_pushIllegalCycleError(_self_, _54035_v, _54116_d, _54049_message);
					return false;;
				};
			}
			_iter_next_1abdd1b26:;
			++it;
			goto _iter_begin_1abdd1b26;
		}
		_iter_end_1abdd1b26:;
	};
	return true;;
}



inline jule::Bool _1a8689c51_checkIllegalCycles(_1a8683860_Eval* _self_, jule::Ptr<_1a8966901_Var>* _55942_v, jule::Ptr<_1a52684c0_Token> _55951_decl_token) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*(_self_))._field_owner.get()._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_55942_v)))) {
		_1a8683d6b_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _57217_message = jule::Str();;
	if ((!(_1a8689899_checkCrossCycle(_self_, _55942_v, &(_57217_message))))) {
		jule::Str _57521_errMsg = _57217_message;;
		_57217_message=jule::Str();
		_1a86894e2_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _55942_v, &(_57217_message));
		_57521_errMsg+=_57217_message;
		_1a8683d6b_pushErr(_self_, _55951_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_57521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = (*(_self_))._field_owner.get()._field_Depends; __jule_push_dest.push((*(_55942_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a868a108_evalVar(_1a8683860_Eval* _self_, jule::Ptr<_1a8966901_Var> _58730_v, jule::Ptr<_1a52684c0_Token> _58739_errorToken) {
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), _58730_v.get()._field_Public, _58730_v.get()._field_Token)))) {
		_1a8683d6b_pushErr(_self_, _58739_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_58730_v.get()._field_Ident, &__jule_any_type5)}));
		_1a868418a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a8688c72_checkDeprecated(_self_, &(_58730_v.get()._field_Directives), _58739_errorToken);
	_58730_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1abdd8b61:;
			{
				jule::Bool _60117_ok = _1a8689c51_checkIllegalCycles(_self_, &(_58730_v), _58739_errorToken);;
				if ((!(_60117_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1abdd8c1b:;
			{
				if (((!(_58730_v.get()._field_Reference)) || _1a86847a6_isUnsafe(_self_))) {
					goto _match_end_1abdd8b0b;
				};
				jule::Ptr<_1a8925eba_scopeChecker> _60921_s = (*(_self_))._field_lookup.cast_ptr<_1a8925eba_scopeChecker>(0);;
				while (((_60921_s.get()._field_owner == nullptr) && (_60921_s.get()._field_parent != nullptr))) {
					{
						_60921_s=_60921_s.get()._field_parent;
					}
				_iter_next_1abddad1c:;
				}
				_iter_end_1abddad1c:;;
				if ((((_60921_s.get()._field_owner != nullptr) && _60921_s.get()._field_owner.get()._field_Anon) && (_58730_v.get()._field_Scope != _60921_s.get()._field_owner.get()._field_Scope))) {
					_1a8683d6b_pushErr(_self_, _58739_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_58730_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_1abdd8b0b:;
	};
	if ((_58730_v.get()._field_Scope == nullptr)) {
		_1abddca22_pushReference(_self_, &(_58730_v));
	};
	if (((!(_58730_v.get()._field_Binded)) && ((_58730_v.get()._field_Value == nullptr) || (_58730_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_58730_v.get()._field_Constant) {
			_1a895dce4_checkTypeVar((*(_self_))._field_s, &(_58730_v), jule::Trait<_1a86ccac9_Lookup>((*(_self_))._field_s, 3));
			if (((_58730_v.get()._field_Value == nullptr) || (_58730_v.get()._field_Value.get()._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if (((_58730_v.get()._field_Kind == nullptr) || (_58730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_58730_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1a895dce4_checkTypeVar((*(_self_))._field_s, &(_58730_v), (*(_self_))._field_lookup);
		if (((_58730_v.get()._field_Kind == nullptr) || (_58730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_1a865dbe2_Data> _65217_d = jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_58730_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_58730_v.get()._field_Mutable, ._field_Reference=_58730_v.get()._field_Reference, ._field_Lvalue=(!(_58730_v.get()._field_Constant)), ._field_Model=jule::Any(_58730_v, &__jule_any_type8), });;
	if ((((!(_58730_v.get()._field_Binded)) && _1a8966c75_IsInitialized(_58730_v.ptr())) && (_58730_v.get()._field_Value.get()._field_Data != nullptr))) {
		_65217_d.get()._field_IsRune=_58730_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_58730_v.get()._field_Constant && (_58730_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_65217_d.get()._field_Constant=jule::new_ptr<_1a55406ba_Const>((*(_58730_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_65217_d.get()._field_Model=jule::Any(_65217_d.get()._field_Constant, &__jule_any_type19);
		if (_1a896724d_untypedConstant(_58730_v.ptr())) {
			_1a8684ce5_applyNumericPrefix(_self_, &(_65217_d));
			_65217_d.get()._field_untyped=true;
		};
	};
	return _65217_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a868a4b0_evalTypeAlias(_1a8683860_Eval* _self_, jule::Ptr<_1a86ada55_TypeAlias> _67636_ta, jule::Ptr<_1a52684c0_Token> _67652_errorToken) {
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), _67636_ta.get()._field_Public, _67636_ta.get()._field_Token)))) {
		_1a8683d6b_pushErr(_self_, _67652_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_67636_ta.get()._field_Ident, &__jule_any_type5)}));
		_1a868418a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_67636_ta.get()._field_Used=true;
	jule::Trait<_1a86ae33b_Kind> _68517_kind = _67636_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1a865dbe2_Data> _68617_d = nullptr;;
	{
		auto &_match_expr{ _68517_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1abdedb54:;
			{
				_68617_d=_1a868828d__evalStruct(_self_, _68517_kind.cast_ptr<_1a88b9b51_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1abded406:;
			{
				_68617_d=_1a8687413__evalEnum(_self_, _68517_kind.cast_ptr<_1a88e1c11_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1abdec504:;
			{
				_68617_d=_1a8687ac8__evalTypeEnum(_self_, _68517_kind.cast_ptr<_1a88e330b_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1abdec3d3:;
			{
				_68617_d=jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=_67636_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_67636_ta.get()._field_Binded) {
					_68617_d.get()._field_Kind.get()._field_BindIdent=_67636_ta.get()._field_Ident;
				} else {
					_68617_d.get()._field_Kind.get()._field_BindIdent=_67636_ta.get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
				};
				_68617_d.get()._field_Model=jule::Any(_68617_d.get()._field_Kind, &__jule_any_type89);
			}
		}
		_match_end_1abdec37d:;
	};
	_68617_d.get()._field_Kind.get()._field_Generic=_67636_ta.get()._field_Generic;
	return _68617_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a868a867_evalDef(_1a8683860_Eval* _self_, jule::Any _71230_def, jule::Ptr<_1a52684c0_Token> _71240_ident) {
	{
		auto &_match_expr{ _71230_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1abe0153b:;
			{
				return _1a868a108_evalVar(_self_, _71230_def.cast_ptr<_1a8966901_Var>(&__jule_any_type8), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1abe015a2:;
			{
				return _1a86877ba_evalEnum(_self_, _71230_def.cast_ptr<_1a88e1c11_Enum>(&__jule_any_type68), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1abe01618:;
			{
				return _1a8687e80_evalTypeEnum(_self_, _71230_def.cast_ptr<_1a88e330b_TypeEnum>(&__jule_any_type69), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1abe01690:;
			{
				return _1a8688645_evalStruct(_self_, _1a88b729c_instance(_71230_def.cast_ptr<_1a88b6d3a_Struct>(&__jule_any_type66)), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1abe01706:;
			{
				jule::Ptr<_1a88cc25c_Fn> _72321_f = _71230_def.cast_ptr<_1a88cc25c_Fn>(&__jule_any_type65);;
				if ((!_72321_f.get()._field_Ident.equal("init", 4))) {
					return _1a8689129_evalFn(_self_, _72321_f, _71240_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1abe0177d:;
			{
				return _1a8688953_evalFnIns(_self_, _71230_def.cast_ptr<_1a88cee0d_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1abe01805:;
			{
				return _1a868a4b0_evalTypeAlias(_self_, _71230_def.cast_ptr<_1a86ada55_TypeAlias>(&__jule_any_type67), _71240_ident);;
			}
		}
		_match_end_1abe0144d:;
	};
	_1a8683d6b_pushErr(_self_, _71240_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_71240_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a868ab75_evalIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a889cd65_IdentExpr> _73628_ident) {
	jule::Any _73717_def = _1a8686d80_getDef(_self_, _73628_ident.get()._field_Ident, _73628_ident.get()._field_Binded);;
	return _1a868a867_evalDef(_self_, _73717_def, _73628_ident.get()._field_Token);;
}



inline jule::Ptr<_1a865dbe2_Data> _1a868ae83_evalUnary(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a889d56e_UnaryExpr> _74133_u) {
	_1a86a07a0_unaryEval _74217_unary = static__1a86a0bce_new(_self_);;
	return _1a86a1eaa_eval(&_74217_unary, _74133_u);;
}



inline jule::Ptr<_1a865dbe2_Data> _1a868b291_evalVariadic(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a889d926_VariadicExpr> _74636_v) {
	if ((_74636_v.get()._field_Expr == nullptr)) {
		_1a8683d6b_pushErr(_self_.ptr(), _74636_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a86ae79d_TypeKind> _75217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75217_prefix;
	});;
	jule::Ptr<_1a865dbe2_Data> _75617_d = _1a86a032c_evalExpr(_self_, _74636_v.get()._field_Expr);;
	if ((_75617_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a86b1c56_Variadicable(_75617_d.get()._field_Kind.ptr())))) {
		_1a8683d6b_pushErr(_self_.ptr(), _74636_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_75617_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a86bb1b1_Slc> _76613_slc = _1a86b2e44_Slc(_75617_d.get()._field_Kind.ptr());;
	_75617_d.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_BindIdent=_76613_slc.get()._field_Elem.get()._field_BindIdent, ._field_Generic=_76613_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_76613_slc.get()._field_Elem.get()._field_Kind});
	return _75617_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a868b59e_evalUnsafe(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a889c8e2_UnsafeExpr> _77634_u) {
	jule::Bool _77713_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1a865dbe2_Data> _77917_d = _1a86a032c_evalExpr(_self_, _77634_u.get()._field_Expr);;
	_self_.get()._field_unsafety=_77713_unsafety;
	return _77917_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a868b8ac_evalArr(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a28b4_SliceExpr> _78431_s) {
	jule::Ptr<_1a86bd35b_Arr> _78617_pt = _1a86b2bd0_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1a86bd35b_Arr> _78817_arr = jule::new_ptr<_1a86bd35b_Arr>(_1a86bd35b_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_78617_pt.get()._field_Elem});;
	jule::Bool _79417_filled = false;;
	if ((_78431_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _78431_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1abe10270:;
				{
					if ((_78431_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1a889d926_VariadicExpr>(&__jule_any_type81).get()._field_Expr != nullptr)) {
						goto _match_end_1abe1021a;
					};
					if (_78617_pt.get()._field_Auto) {
						_1a8683d6b_pushErr(_self_.ptr(), _78431_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_79417_filled=true;
					_78431_s.get()._field_Exprs=_78431_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1abe1021a:;
		};
	};
	_78817_arr.get()._field_N=static_cast<jule::I64>(_78431_s.get()._field_Exprs.len());
	if ((!(_78617_pt.get()._field_Auto))) {
		if ((_78817_arr.get()._field_N > _78617_pt.get()._field_N)) {
			_1a8683d6b_pushErr(_self_.ptr(), _78431_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_78817_arr.get()._field_N < _78617_pt.get()._field_N)) {
			_78817_arr.get()._field_N=_78617_pt.get()._field_N;
		};
	};
	jule::Ptr<_1a88c4034_ArrayExprModel> _82317_model = jule::new_ptr<_1a88c4034_ArrayExprModel>(_1a88c4034_ArrayExprModel{._field_Kind=_78817_arr, });;
	if (_79417_filled) {
		_82317_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_82317_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _78431_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1a86ae79d_TypeKind> _83217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78817_arr.get()._field_Elem;
	{
		auto expr = &(_78431_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe150ee:;
		if (it != expr_end) {
			jule::Ptr<_1a889b270_Expr> _83421_elem = *it;
			{
				jule::Ptr<_1a865dbe2_Data> _83521_d = _1a86a032c_evalExpr(_self_, _83421_elem);;
				if ((_83521_d == nullptr)) {
					goto _iter_next_1abe150ee;
				};
				_1a8951215_checkAssignType(_self_.get()._field_s, false, &(_78817_arr.get()._field_Elem), &(_83521_d), _78431_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _82317_model.get()._field_Elems; __jule_push_dest.push(_83521_d.get()._field_Model); };
			}
			_iter_next_1abe150ee:;
			++it;
			goto _iter_begin_1abe150ee;
		}
		_iter_end_1abe150ee:;
	};
	_self_.get()._field_prefix=_83217_prefix;
	if (_79417_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _82317_model.get()._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_78817_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_82317_model, &__jule_any_type90), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a868bd0d_evalExpSlc(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a28b4_SliceExpr> _85834_s, jule::Ptr<_1a86ae79d_TypeKind> _85853_t, jule::Any _85871_first) {
	jule::Ptr<_1a86bb1b1_Slc> _85917_slc = jule::new_ptr<_1a86bb1b1_Slc>(_1a86bb1b1_Slc{._field_Elem=_85853_t});;
	jule::I64 _86317_i = 0LL;;
	jule::Ptr<_1a88c130b_SliceExprModel> _86417_model = jule::new_ptr<_1a88c130b_SliceExprModel>(_1a88c130b_SliceExprModel{._field_ElemKind=_85853_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _85834_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_85871_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _86417_model.get()._field_Elems; __jule_push_dest.push(_85871_first); };
		_86317_i=1LL;
	};
	jule::Ptr<_1a86ae79d_TypeKind> _87317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85917_slc.get()._field_Elem;
	{
		auto expr = _85834_s.get()._field_Exprs.slice(_86317_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1abe1a698:;
		if (it != expr_end) {
			jule::Ptr<_1a889b270_Expr> _87521_elem = *it;
			{
				jule::Ptr<_1a865dbe2_Data> _87621_d = _1a86a032c_evalExpr(_self_, _87521_elem);;
				if ((_87621_d == nullptr)) {
					goto _iter_next_1abe1a698;
				};
				_1a8951215_checkAssignType(_self_.get()._field_s, false, &(_85917_slc.get()._field_Elem), &(_87621_d), _85834_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _86417_model.get()._field_Elems; __jule_push_dest.push(_87621_d.get()._field_Model); };
			}
			_iter_next_1abe1a698:;
			++it;
			goto _iter_begin_1abe1a698;
		}
		_iter_end_1abe1a698:;
	};
	_self_.get()._field_prefix=_87317_prefix;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_85917_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_86417_model, &__jule_any_type82), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a868c11b_evalSliceExpr(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a28b4_SliceExpr> _89437_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1a86b2bd0_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1abe1d635:;
				{
					return _1a868b8ac_evalArr(_self_, _89437_s);;
				}
			}
			else if ((_1a86b2e44_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1abe1d6ac:;
				{
					jule::Ptr<_1a86bb1b1_Slc> _90025_pt = _1a86b2e44_Slc(_self_.get()._field_prefix.ptr());;
					return _1a868bd0d_evalExpSlc(_self_, _89437_s, _90025_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_1abe1d525:;
		};
	};
	jule::Ptr<_1a86ae79d_TypeKind> _90517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_89437_s.get()._field_Exprs.len() == 0LL)) {
		_1a8683d6b_pushErr(_self_.ptr(), _89437_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a865dbe2_Data> _91317_firstElem = _1a86a032c_evalExpr(_self_, _89437_s.get()._field_Exprs[0LL]);;
	if ((_91317_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a865dbe2_Data> _91817_d = _1a868bd0d_evalExpSlc(_self_, _89437_s, _91317_firstElem.get()._field_Kind, _91317_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_90517_prefix;
	return _91817_d;;
}



inline void _1a868c45c_checkIntegerIndexingByData(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data>* _92450_d, jule::Ptr<_1a52684c0_Token> _92460_token) {
	jule::Str _92513_err_key = _1a86aa964_checkDataForIntegerIndexing(_92450_d);;
	{
		auto &_match_expr{ _92513_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1abe23195:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1abe23c9a:;
			{
				_1a8683d6b_pushErr(_self_, _92460_token, _92513_err_key, jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_92450_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1abe23519:;
			{
				_1a8683d6b_pushErr(_self_, _92460_token, _92513_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1abe2343c:;
	};
}



inline void _1a868c836_indexingPtr(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data>* _93635_d, jule::Ptr<_1a865dbe2_Data>* _93650_index, jule::Ptr<_1a88a3222_IndexingExpr>* _93665_i) {
	_1a868c45c_checkIntegerIndexingByData(_self_, _93650_index, (*(_93665_i)).get()._field_Token);
	jule::Ptr<_1a86bdcb8_Ptr> _93917_ptr = _1a86b2493_Ptr((*(_93635_d)).get()._field_Kind.ptr());;
	{
		
		if (_1a86be78b_IsUnsafe(_93917_ptr.ptr())) {
			_case_begin_1abe25a7c:;
			{
				_1a8683d6b_pushErr(_self_, (*(_93665_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a86847a6_isUnsafe(_self_)))) {
			_case_begin_1abe25ae3:;
			{
				_1a8683d6b_pushErr(_self_, (*(_93665_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abe2596c:;
	};
	(*(_93635_d)).get()._field_Kind=_93917_ptr.get()._field_Elem;
}



inline void _1a868cbee_indexingArr(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data>* _95135_d, jule::Ptr<_1a865dbe2_Data>* _95150_index, jule::Ptr<_1a88a3222_IndexingExpr>* _95165_i) {
	jule::Ptr<_1a86bd35b_Arr> _95217_arr = _1a86b2bd0_Arr((*(_95135_d)).get()._field_Kind.ptr());;
	(*(_95135_d)).get()._field_Kind=_95217_arr.get()._field_Elem;
	_1a868c45c_checkIntegerIndexingByData(_self_, _95150_index, (*(_95165_i)).get()._field_Token);
	if ((_1a865e50b_IsConst((*(_95150_index)).ptr()) && (_1a55431a1_AsF64((*(_95150_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_95217_arr.get()._field_N)))) {
		_1a8683d6b_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1a868d0b7_indexingSlc(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data>* _96035_d, jule::Ptr<_1a865dbe2_Data>* _96050_index, jule::Ptr<_1a88a3222_IndexingExpr>* _96065_i) {
	jule::Ptr<_1a86bb1b1_Slc> _96117_slc = _1a86b2e44_Slc((*(_96035_d)).get()._field_Kind.ptr());;
	(*(_96035_d)).get()._field_Kind=_96117_slc.get()._field_Elem;
	_1a868c45c_checkIntegerIndexingByData(_self_, _96050_index, (*(_96065_i)).get()._field_Token);
	if ((!(_1a865e50b_IsConst((*(_96050_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_96035_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1abe2ada1:;
			{
				jule::Ptr<_1a88c130b_SliceExprModel> _97121_m = (*(_96035_d)).get()._field_Model.cast_ptr<_1a88c130b_SliceExprModel>(&__jule_any_type82);;
				jule::F64 _97217_indx = _1a55431a1_AsF64((*(_96050_index)).get()._field_Constant.ptr());;
				if ((_97217_indx >= static_cast<jule::F64>(_97121_m.get()._field_Elems.len()))) {
					_1a8683d6b_pushErr(_self_, (*(_96065_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_96035_d)).get()._field_Model=_97121_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_97217_indx))];
					(*(_96035_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_1abe2ad18:;
	};
}



inline void _1a868d480_indexingMap(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data>* _98235_d, jule::Ptr<_1a865dbe2_Data>* _98250_index, jule::Ptr<_1a88a3222_IndexingExpr>* _98269_i) {
	if (((*(_98250_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1a86bc767_Map> _98617_m = _1a86b38e5_Map((*(_98235_d)).get()._field_Kind.ptr());;
	_1a899b13e_assignTypeChecker _98717_atc = _1a899b13e_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_98617_m.get()._field_Key, ._field_d=(*(_98250_index)), ._field_errorToken=(*(_98269_i)).get()._field_Token};;
	_1a899c2b6_check(&_98717_atc);
	(*(_98235_d)).get()._field_Kind=_98617_m.get()._field_Val;
}



inline void _1a868d848_indexingStr(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data>* _99735_d, jule::Ptr<_1a865dbe2_Data>* _99750_index, jule::Ptr<_1a88a3222_IndexingExpr>* _99765_i) {
	(*(_99735_d)).get()._field_Kind=_1a8775831_primU8;
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	_1a868c45c_checkIntegerIndexingByData(_self_, _99750_index, (*(_99765_i)).get()._field_Token);
	if ((!(_1a865e50b_IsConst((*(_99750_index)).ptr())))) {
		(*(_99735_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_1a865e50b_IsConst((*(_99735_d)).ptr())) {
		jule::Ptr<_1a52684c0_Token> _101217_errorToken = (*(_99765_i)).get()._field_Token;;
		jule::I64 _101317_j = _1a5542bc8_AsI64((*(_99750_index)).get()._field_Constant.ptr());;
		jule::Str _101417_s = _1a5542700_ReadStr((*(_99735_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_101317_j) >= _101417_s.len())) {
			_1a8683d6b_pushErr(_self_, _101217_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1a554369b_SetU64((*(_99735_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101417_s[_101317_j])));
		};
	};
}



inline void _1a868dc11_toIndexing(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data>* _102334_d, jule::Ptr<_1a865dbe2_Data>* _102349_index, jule::Ptr<_1a88a3222_IndexingExpr>* _102368_i) {
	{
		
		if ((_1a86b2493_Ptr((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe34904:;
			{
				_1a868c836_indexingPtr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1a86b2bd0_Arr((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe3497b:;
			{
				_1a868cbee_indexingArr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1a86b2e44_Slc((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe34a03:;
			{
				_1a868d0b7_indexingSlc(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1a86b38e5_Map((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe34a7a:;
			{
				_1a868d480_indexingMap(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1a86b1eba_Prim((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe34b02:;
			{
				jule::Ptr<_1a86b7003_Prim> _103817_prim = _1a86b1eba_Prim((*(_102334_d)).get()._field_Kind.ptr());;
				{
					
					if (_1a86ba204_IsStr(_103817_prim.ptr())) {
						_case_begin_1abe383ca:;
						{
							_1a868d848_indexingStr(_self_, _102334_d, _102349_index, _102368_i);
							return;;
						}
					}
					_match_end_1abe38331:;
				};
			}
		}
		_match_end_1abe347b1:;
	};
	_1a8683d6b_pushErr(_self_, (*(_102368_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_102334_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _1a868e184_pushGenericsFromExprSubIdent(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a889e608_SubIdentExpr>* _104853_sexpr, jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>>* _104914_generics, jule::Ptr<_1a889b270_Expr>* _104942_expr) {
	jule::Ptr<_1a8897997_SubIdentTypeDecl> _105017_t = jule::new_ptr<_1a8897997_SubIdentTypeDecl>();;
	if ((!(_1a86ab734_pushSubIdentFromExpr(jule::Any((*(_104853_sexpr)), &__jule_any_type91), &(_105017_t))))) {
		_1a8683d6b_pushErr(_self_.ptr(), (*(_104942_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> &__jule_push_dest = (*(_104914_generics)); __jule_push_dest.push(jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Kind=jule::Any(_105017_t, &__jule_any_type92)})); };
	return true;;
}



inline jule::Bool _1a868e54c_pushGenericsFromData(jule::Ptr<_1a8683860_Eval> _self_, jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>>* _105945_generics, jule::Ptr<_1a889b270_Expr>* _105973_expr) {
	{
		auto &_match_expr{ (*(_105973_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1abe3bc6e:;
			{
				jule::Ptr<_1a889d56e_UnaryExpr> _106221_u = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1a889d56e_UnaryExpr>(&__jule_any_type93);;
				{
					auto &_match_expr{ _106221_u.get()._field_Op.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1abe3c6ed:;
						{
							jule::Ptr<_1a8898aca_PtrTypeDecl> _106525_kind = jule::new_ptr<_1a8898aca_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> _106625__generics = jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>>::alloc(0LL, 1LL);;
							_1a868e54c_pushGenericsFromData(_self_, &(_106625__generics), &(_106221_u.get()._field_Expr));
							_106525_kind.get()._field_Elem=_106625__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=(*(_105973_expr)).get()._field_Token, ._field_Kind=jule::Any(_106525_kind, &__jule_any_type77)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1abe3d446:;
						{
							jule::Ptr<_1a8898107_SptrTypeDecl> _107425_kind = jule::new_ptr<_1a8898107_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> _107525__generics = jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>>::alloc(0LL, 1LL);;
							_1a868e54c_pushGenericsFromData(_self_, &(_107525__generics), &(_106221_u.get()._field_Expr));
							_107425_kind.get()._field_Elem=_107525__generics[0LL];
							{ jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=(*(_105973_expr)).get()._field_Token, ._field_Kind=jule::Any(_107425_kind, &__jule_any_type78)})); };
						}
					}
					else {
						_case_begin_1abe3cde6:;
						{
							_1a8683d6b_pushErr(_self_.ptr(), _106221_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1abe3cb71:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1abe3bee4:;
			{
				{ jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push((*(_105973_expr)).get()._field_Kind.cast_ptr<_1a88970e5_TypeDecl>(&__jule_any_type94)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1abe3bde5:;
			{
				jule::Ptr<_1a889e608_SubIdentExpr> _108921_sexpr = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1a889e608_SubIdentExpr>(&__jule_any_type91);;
				return _1a868e184_pushGenericsFromExprSubIdent(_self_, &(_108921_sexpr), _105945_generics, _105973_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1abe3b554:;
			{
				jule::Ptr<_1a889cd65_IdentExpr> _109221_ident = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1a889cd65_IdentExpr>(&__jule_any_type85);;
				{ jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a88976ab_IdentTypeDecl>(_1a88976ab_IdentTypeDecl{._field_Token=_109221_ident.get()._field_Token, ._field_Ident=_109221_ident.get()._field_Ident, ._field_Binded=_109221_ident.get()._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1abe3b5ba:;
			{
				{
					auto expr = &((*(_105973_expr)).get()._field_Kind.cast_ptr<_1a889bdec_TupleExpr>(&__jule_any_type86).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abe43b44:;
					if (it != expr_end) {
						jule::Ptr<_1a889b270_Expr> _110125_texpr = *it;
						{
							if ((!(_1a868e54c_pushGenericsFromData(_self_, _105945_generics, &(_110125_texpr))))) {
								return false;;
							};
						}
						_iter_next_1abe43b44:;
						++it;
						goto _iter_begin_1abe43b44;
					}
					_iter_end_1abe43b44:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1abe3b631:;
			{
				jule::Ptr<_1a889e185_NsSelectionExpr> _110721_ns = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1a889e185_NsSelectionExpr>(&__jule_any_type95);;
				jule::Ptr<_1a88976ab_IdentTypeDecl> _110821_decl = jule::new_ptr<_1a88976ab_IdentTypeDecl>(_1a88976ab_IdentTypeDecl{._field_Token=_110721_ns.get()._field_Ident, ._field_Ident=_110721_ns.get()._field_Ident.get()._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=_110821_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a8897d1b_NamespaceTypeDecl>(_1a8897d1b_NamespaceTypeDecl{._field_Idents=_110721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=_110821_decl.get()._field_Token, ._field_Kind=jule::Any(_110821_decl, &__jule_any_type20)})}), &__jule_any_type96)})); };
			}
		}
		else {
			_case_begin_1abe3b4aa:;
			{
				_1a8683d6b_pushErr(_self_.ptr(), (*(_105973_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1abe3b312:;
	};
	return true;;
}



inline void _1a868e88d_evalIdentDeclFromIndexing(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a865dbe2_Data>* _112950_d, jule::Ptr<_1a88a3222_IndexingExpr>* _112965_i) {
	jule::Ptr<_1a88b9b51_StructIns> _113017_s = _1a86b341c_Struct((*(_112950_d)).get()._field_Kind.ptr());;
	if ((_113017_s == nullptr)) {
		_1a8683d6b_pushErr(_self_.ptr(), (*(_112965_i)).get()._field_Expr.get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_112950_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_112950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a88976ab_IdentTypeDecl> _113717_decl = nullptr;;
	{
		auto &_match_expr{ (*(_112965_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1abe49485:;
			{
				jule::Ptr<_1a889cd65_IdentExpr> _114021_expr = (*(_112965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1a889cd65_IdentExpr>(&__jule_any_type85);;
				_113717_decl=jule::new_ptr<_1a88976ab_IdentTypeDecl>(_1a88976ab_IdentTypeDecl{._field_Token=_114021_expr.get()._field_Token, ._field_Ident=_114021_expr.get()._field_Ident, ._field_Binded=_114021_expr.get()._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1abe4a4ca:;
			{
				jule::Ptr<_1a889e185_NsSelectionExpr> _114721_expr = (*(_112965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1a889e185_NsSelectionExpr>(&__jule_any_type95);;
				_113717_decl=jule::new_ptr<_1a88976ab_IdentTypeDecl>(_1a88976ab_IdentTypeDecl{._field_Token=_114721_expr.get()._field_Ident, ._field_Ident=_114721_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1abe498a3:;
			{
				_1a8683d6b_pushErr(_self_.ptr(), (*(_112965_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112950_d))=nullptr;
				return;;
			}
		}
		_match_end_1abe4984d:;
	};
	if ((!(_1a868e54c_pushGenericsFromData(_self_, &(_113717_decl.get()._field_Generics), &((*(_112965_i)).get()._field_Index))))) {
		(*(_112950_d))=nullptr;
		return;;
	};
	_113017_s=({ auto _wrap_copy = _1a8695ae7_typeChecker(_self_.ptr()); _1a86c464d_fromStruct(&_wrap_copy, &(_113717_decl), &(_113017_s.get()._field_Decl)); });
	if ((_113017_s == nullptr)) {
		(*(_112950_d))=nullptr;
		return;;
	};
	(*(_112950_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1a86ae33b_Kind>(_113017_s, 0);
}



inline jule::Bool _1a868ed00_checkGenericFn(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88cee0d_FnIns>* _117239_f, jule::Ptr<_1a52684c0_Token>* _117255_et, jule::Any* _117272_model) {
	jule::Bool _117313_ok = _1a89535d0_reloadFnInsTypes(_self_.get()._field_s, (*(_117239_f)));;
	(*(_117239_f)).get()._field_reloaded=true;
	if ((!(_117313_ok))) {
		return false;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _117817_existInstance = _1a88cdb87_appendInstance((*(_117239_f)).get()._field_Decl.ptr(), _117239_f);;
	if ((!(_1a8952744_checkConstraintsFn(_self_.get()._field_s, _117239_f, _117255_et, _117817_existInstance)))) {
		return false;;
	};
	if ((_117817_existInstance != nullptr)) {
		(*(_117239_f))=_117817_existInstance;
		_1a86ab4e2_updateModelToGenericIns(_117272_model, &(_117817_existInstance));
	} else {
		_1a8961ae9_checkFnInsCaller(_self_.get()._field_s, _117239_f, (*(_117255_et)));
	};
	return true;;
}



inline void _1a8690141_evalFnGenericFromIndexing(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a865dbe2_Data>* _119750_d, jule::Ptr<_1a88a3222_IndexingExpr>* _119765_i) {
	jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> _119817_generics = jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1a868e54c_pushGenericsFromData(_self_, &(_119817_generics), &((*(_119765_i)).get()._field_Index))))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _120417_f = _1a86b31a8_Fn((*(_119750_d)).get()._field_Kind.ptr());;
	jule::I64 _120517_genericsLen = 0LL;;
	if ((_120417_f.get()._field_Decl != nullptr)) {
		_120517_genericsLen=static_cast<jule::I64>(_120417_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1a894a31e_checkGenericQuantity(_self_.get()._field_s.ptr(), _120517_genericsLen, static_cast<jule::I64>(_119817_generics.len()), (*(_119765_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	_120417_f.get()._field_Generics=jule::Slice<jule::Ptr<_1a86ad01b_InsGeneric>>::alloc(0LL, _120417_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_119817_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abe54814:;
		if (it != expr_end) {
			jule::Ptr<_1a88970e5_TypeDecl> _121621_g = *it;
			{
				jule::Ptr<_1a865dbe2_Data> _121721_k = _1a8695e05_evalType(_self_.ptr(), _121621_g);;
				if ((_121721_k == nullptr)) {
					(*(_119750_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1a86ad01b_InsGeneric>> &__jule_push_dest = _120417_f.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_1a86ad01b_InsGeneric>(_1a86ad01b_InsGeneric{._field_Kind=_121721_k.get()._field_Kind, })); };
			}
			_iter_next_1abe54814:;
			++it;
			goto _iter_begin_1abe54814;
		}
		_iter_end_1abe54814:;
	};
	if (_1a88d1294_IsBuiltin(_120417_f.ptr())) {
		return;;
	};
	if (_1a868ed00_checkGenericFn(_self_, &(_120417_f), &((*(_119765_i)).get()._field_Expr.get()._field_Token), &((*(_119750_d)).get()._field_Model))) {
		(*(_119750_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1a86ae33b_Kind>(_120417_f, 1);
	} else {
		(*(_119750_d))=nullptr;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a8690460_evalIndexing(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a3222_IndexingExpr> _123636_i) {
	jule::Ptr<_1a86ae79d_TypeKind> _123717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_123717_prefix;
	});;
	jule::Ptr<_1a865dbe2_Data> _124117_d = _1a869e5e5_evalExprKind(_self_, _123636_i.get()._field_Expr.get()._field_Kind);;
	if ((_124117_d == nullptr)) {
		return nullptr;;
	};
	if (_124117_d.get()._field_Decl) {
		_1a868e88d_evalIdentDeclFromIndexing(_self_, &(_124117_d), &(_123636_i));
		return _124117_d;;
	};
	if ((_1a86b31a8_Fn(_124117_d.get()._field_Kind.ptr()) != nullptr)) {
		_1a8690141_evalFnGenericFromIndexing(_self_, &(_124117_d), &(_123636_i));
		return _124117_d;;
	};
	_1a865dbe2_Data _125717_old_d = (*(_124117_d));;
	jule::Ptr<_1a865dbe2_Data> _125917_index = _1a86a032c_evalExpr(_self_, _123636_i.get()._field_Index);;
	if ((_125917_index == nullptr)) {
		return nullptr;;
	};
	_124117_d.get()._field_Decl=false;
	_1a868dc11_toIndexing(_self_.ptr(), &(_124117_d), &(_125917_index), &(_123636_i));
	if (_1a865e50b_IsConst(_124117_d.ptr())) {
		_124117_d.get()._field_Decl=false;
		_124117_d.get()._field_Model=jule::Any(_124117_d.get()._field_Constant, &__jule_any_type19);
	} else if (_124117_d.get()._field_Decl) {
		_124117_d.get()._field_Decl=false;
	} else {
		_124117_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88c177e_IndexingExprModel>(_1a88c177e_IndexingExprModel{._field_Token=_123636_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1a865dbe2_Data>(_125717_old_d), ._field_Index=_125917_index}), &__jule_any_type46);
	};
	return _124117_d;;
}



inline __jule_tuple_x_1a865dbe2_Data__jule_tuple_x_1a865dbe2_Data _1a869076d_evalSlicingExprs(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a382c_SlicingExpr>* _129041_s) {
	__jule_tuple_x_1a865dbe2_Data__jule_tuple_x_1a865dbe2_Data __jule_func_result;
	jule::Ptr<_1a86ae79d_TypeKind> _129117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_129117_prefix;
	});;
	jule::Ptr<_1a865dbe2_Data> _129517_l = nullptr;;
	jule::Ptr<_1a865dbe2_Data> _129617_r = nullptr;;
	if (((*(_129041_s)).get()._field_Start != nullptr)) {
		_129517_l=_1a86a032c_evalExpr(_self_, (*(_129041_s)).get()._field_Start);
		if ((_129517_l != nullptr)) {
			_1a868c45c_checkIntegerIndexingByData(_self_.ptr(), &(_129517_l), (*(_129041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129517_l=jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8774841_primInt, ._field_Constant=static__1a5540ae9_NewI64(0LL)});
		_129517_l.get()._field_Constant.get()._field_Kind=jule::Str("int", 3);
		_129517_l.get()._field_Model=jule::Any(_129517_l.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_129041_s)).get()._field_To != nullptr)) {
		_129617_r=_1a86a032c_evalExpr(_self_, (*(_129041_s)).get()._field_To);
		if ((_129617_r != nullptr)) {
			_1a868c45c_checkIntegerIndexingByData(_self_.ptr(), &(_129617_r), (*(_129041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129517_l;
	__jule_func_result.__jule_result_arg1 = _129617_r;
	return __jule_func_result;;
}



inline void _1a86909e3_slicingArr(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data>* _132630_d) {
	jule::Ptr<_1a86ae79d_TypeKind> _132717_elemType = _1a86b2bd0_Arr((*(_132630_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_132630_d)).get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a86bb1b1_Slc>(_1a86bb1b1_Slc{._field_Elem=_132717_elemType}), 22)});
	(*(_132630_d)).get()._field_Lvalue=false;
	(*(_132630_d)).get()._field_Mutable=((*(_132630_d)).get()._field_Mutable || (!(_1a86b1041_Mutable(_132717_elemType.ptr()))));
}



inline void _1a8690dab_slicingStr(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data>* _134130_d, jule::Ptr<_1a865dbe2_Data>* _134141_l, jule::Ptr<_1a865dbe2_Data>* _134152_r) {
	(*(_134130_d)).get()._field_Lvalue=false;
	(*(_134130_d)).get()._field_Mutable=true;
	if ((!(_1a865e50b_IsConst((*(_134130_d)).ptr())))) {
		return;;
	};
	if ((((*(_134141_l)) == nullptr) || ((*(_134152_r)) == nullptr))) {
		(*(_134130_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_1a865e50b_IsConst((*(_134141_l)).ptr()) && _1a865e50b_IsConst((*(_134152_r)).ptr()))) {
		jule::I64 _135417_left = _1a5542bc8_AsI64((*(_134141_l)).get()._field_Constant.ptr());;
		if ((_135417_left < 0LL)) {
			return;;
		};
		jule::Str _135917_s = _1a5542700_ReadStr((*(_134130_d)).get()._field_Constant.ptr());;
		jule::I64 _136021_right = 0LL;;
		if (((*(_134152_r)) == nullptr)) {
			_136021_right=static_cast<jule::I64>(static_cast<jule::I64>(_135917_s.len()));
		} else {
			_136021_right=static_cast<jule::I64>(_1a5542bc8_AsI64((*(_134152_r)).get()._field_Constant.ptr()));
		};
		if ((_135417_left > _136021_right)) {
			return;;
		};
		_1a5543b96_SetStr((*(_134130_d)).get()._field_Constant.ptr(), _135917_s.slice(_135417_left, _136021_right));
		(*(_134130_d)).get()._field_Decl=true;
	} else {
		(*(_134130_d)).get()._field_Constant=nullptr;
	};
}



inline void _1a869131d_checkSlicing(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data>* _137736_d, jule::Ptr<_1a865dbe2_Data>* _137747_l, jule::Ptr<_1a865dbe2_Data>* _137758_r, jule::Ptr<_1a88a382c_SlicingExpr>* _137769_s) {
	{
		
		if ((_1a86b2bd0_Arr((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe6a60a:;
			{
				_1a86909e3_slicingArr(_self_, _137736_d);
				return;;
			}
		}
		else if ((_1a86b2e44_Slc((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe6a682:;
			{
				return;;
			}
		}
		else if ((_1a86b1eba_Prim((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe6a709:;
			{
				jule::Ptr<_1a86b7003_Prim> _138517_prim = _1a86b1eba_Prim((*(_137736_d)).get()._field_Kind.ptr());;
				{
					
					if (_1a86ba204_IsStr(_138517_prim.ptr())) {
						_case_begin_1abe6c7b6:;
						{
							_1a8690dab_slicingStr(_self_, _137736_d, _137747_l, _137758_r);
							return;;
						}
					}
					_match_end_1abe6c71c:;
				};
			}
		}
		_match_end_1abe6a4d9:;
	};
	_1a8683d6b_pushErr(_self_, (*(_137769_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_137736_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_1a865dbe2_Data> _1a869162b_evalSlicing(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a382c_SlicingExpr> _139635_s) {
	jule::Ptr<_1a865dbe2_Data> _139717_d = _1a86a032c_evalExpr(_self_, _139635_s.get()._field_Expr);;
	if ((_139717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a865dbe2_Data> _140218_l;;
	jule::Ptr<_1a865dbe2_Data> _140225_r;;
	({
		__jule_tuple_x_1a865dbe2_Data__jule_tuple_x_1a865dbe2_Data __jule_assign_result = _1a869076d_evalSlicingExprs(_self_, &(_139635_s));
		_140218_l = __jule_assign_result.__jule_result_arg0;
		_140225_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140218_l == nullptr)) {
		return _139717_d;;
	};
	_139717_d.get()._field_Decl=false;
	_1a869131d_checkSlicing(_self_.ptr(), &(_139717_d), &(_140218_l), &(_140225_r), &(_139635_s));
	if (_1a865e50b_IsConst(_139717_d.ptr())) {
		_139717_d.get()._field_Decl=false;
		_139717_d.get()._field_Model=jule::Any(_139717_d.get()._field_Constant, &__jule_any_type19);
	} else if (_139717_d.get()._field_Decl) {
		_139717_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1a88c29a0_SlicingExprModel> _142021_model = jule::new_ptr<_1a88c29a0_SlicingExprModel>(_1a88c29a0_SlicingExprModel{._field_Token=_139635_s.get()._field_Token, ._field_Expr=_139717_d.get()._field_Model, ._field_Left=_140218_l.get()._field_Model, });;
		if ((_140225_r != nullptr)) {
			_142021_model.get()._field_Right=_140225_r.get()._field_Model;
		};
		_139717_d.get()._field_Model=jule::Any(_142021_model, &__jule_any_type97);
	};
	return _139717_d;;
}



inline void _1a86919e4_castPtr(_1a8683860_Eval* _self_, jule::Ptr<_1a86ae79d_TypeKind> _143330_t, jule::Ptr<_1a865dbe2_Data> _143348_d, jule::Ptr<_1a52684c0_Token> _143358_errorToken) {
	_143348_d.get()._field_Constant=nullptr;
	jule::Ptr<_1a86ba754_Sptr> _143513_sptr = _1a86b222e_Sptr(_143348_d.get()._field_Kind.ptr());;
	if ((_143513_sptr != nullptr)) {
		if ((!(_1a86aee63_Equal(_1a86b2493_Ptr(_143330_t.ptr()).get()._field_Elem, _143513_sptr.get()._field_Elem)))) {
			_1a8683d6b_pushErr(_self_, _143358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_143348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_143330_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_1a86847a6_isUnsafe(_self_)))) {
		_1a8683d6b_pushErr(_self_, _143358_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a86b7003_Prim> _144813_prim = _1a86b1eba_Prim(_143348_d.get()._field_Kind.ptr());;
	if (((_1a86b2493_Ptr(_143348_d.get()._field_Kind.ptr()) == nullptr) && ((_144813_prim == nullptr) || (!(_1a553eae8_IsInt(_1a86b7333_Str(_144813_prim.ptr()))))))) {
		_1a8683d6b_pushErr(_self_, _143358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_143348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_143330_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1a8691dac_castStruct(_1a8683860_Eval* _self_, jule::Ptr<_1a86ae79d_TypeKind> _145433_t, jule::Ptr<_1a865dbe2_Data> _145451_d, jule::Ptr<_1a52684c0_Token> _145461_errorToken) {
	_145451_d.get()._field_Constant=nullptr;
	jule::Ptr<_1a88de47d_Trait> _145617_tr = _1a86b3681_Trait(_145451_d.get()._field_Kind.ptr());;
	if ((_145617_tr == nullptr)) {
		_1a8683d6b_pushErr(_self_, _145461_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_145451_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_145433_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1a88b9b51_StructIns> _146217_s = _1a86b341c_Struct(_145433_t.ptr());;
	_1abe798a0_pushReference(_self_, &(_146217_s));
	if ((!(_1a88b8358_IsImplements(_146217_s.get()._field_Decl.ptr(), _145617_tr)))) {
		_1a8683d6b_pushErr(_self_, _145461_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_145451_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_145433_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1a8692275_castRef(_1a8683860_Eval* _self_, jule::Ptr<_1a86ae79d_TypeKind> _147030_t, jule::Ptr<_1a865dbe2_Data> _147048_d, jule::Ptr<_1a52684c0_Token> _147058_errorToken) {
	_147048_d.get()._field_Constant=nullptr;
	jule::Ptr<_1a86ba754_Sptr> _147217_sptr = _1a86b222e_Sptr(_147030_t.ptr());;
	jule::Ptr<_1a86bdcb8_Ptr> _147417_ptr = _1a86b2493_Ptr(_147048_d.get()._field_Kind.ptr());;
	if (((_147417_ptr != nullptr) && _1a86aee63_Equal(_147217_sptr.get()._field_Elem, _147417_ptr.get()._field_Elem))) {
		if ((!(_1a86847a6_isUnsafe(_self_)))) {
			_1a8683d6b_pushErr(_self_, _147058_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a86b341c_Struct(_147217_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1a8691dac_castStruct(_self_, _147217_sptr.get()._field_Elem, _147048_d, _147058_errorToken);
		return;;
	};
	_1a8683d6b_pushErr(_self_, _147058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_147048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_147030_t.ptr()), &__jule_any_type5)}));
}



inline void _1a869263d_castSlc(_1a8683860_Eval* _self_, jule::Ptr<_1a86ae79d_TypeKind> _149230_t, jule::Ptr<_1a865dbe2_Data> _149248_d, jule::Ptr<_1a52684c0_Token> _149258_errorToken) {
	jule::Ptr<_1a55406ba_Const> _149313_c = _149248_d.get()._field_Constant;;
	_149248_d.get()._field_Constant=nullptr;
	if ((_1a86b2707_Enum(_149248_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1a86b1eba_Prim(_1a86b2707_Enum(_149248_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1a86ba204_IsStr(_1a86b1eba_Prim(_1a86b2707_Enum(_149248_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1a8683d6b_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_149230_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_1a86b1eba_Prim(_149248_d.get()._field_Kind.ptr()) == nullptr) || (!(_1a86ba204_IsStr(_1a86b1eba_Prim(_149248_d.get()._field_Kind.ptr()).ptr()))))) {
		_1a8683d6b_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_149230_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_149230_t=_1a86b2e44_Slc(_149230_t.ptr()).get()._field_Elem;
	jule::Ptr<_1a86b7003_Prim> _150713_prim = _1a86b1eba_Prim(_149230_t.ptr());;
	if (((_150713_prim == nullptr) || ((!(_1a86b87c9_IsU8(_150713_prim.ptr()))) && (!(_1a86b8301_IsI32(_150713_prim.ptr())))))) {
		_1a8683d6b_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_149230_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	if ((_149313_c != nullptr)) {
		{
			
			if (_1a86b87c9_IsU8(_150713_prim.ptr())) {
				_case_begin_1abe8b1ca:;
				{
					jule::Slice<jule::U8> _151721_bytes = static_cast<jule::Slice<jule::U8>>(_1a5542700_ReadStr(_149313_c.ptr()));;
					jule::Ptr<_1a88c130b_SliceExprModel> _151825_model = jule::new_ptr<_1a88c130b_SliceExprModel>(_1a88c130b_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _151721_bytes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_151721_bytes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abe8c9e5:;
						if (it != expr_end) {
							jule::U8 *_152224_b = it;
							{
								jule::Ptr<_1a55406ba_Const> _152329_bc = static__1a5540d91_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_152224_b)))));;
								_152329_bc.get()._field_Kind=_150713_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _151825_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_152329_bc, &__jule_any_type19)); };
							}
							_iter_next_1abe8c9e5:;
							++it;
							goto _iter_begin_1abe8c9e5;
						}
						_iter_end_1abe8c9e5:;
					};
					_149248_d.get()._field_Model=jule::Any(_151825_model, &__jule_any_type82);
					_149248_d.get()._field_Decl=true;
				}
			}
			else if (_1a86b8301_IsI32(_150713_prim.ptr())) {
				_case_begin_1abe8b252:;
				{
					jule::Slice<jule::I32> _153021_runes = static_cast<jule::Slice<jule::I32>>(_1a5542700_ReadStr(_149313_c.ptr()));;
					jule::Ptr<_1a88c130b_SliceExprModel> _153125_model = jule::new_ptr<_1a88c130b_SliceExprModel>(_1a88c130b_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153021_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153021_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abe9050e:;
						if (it != expr_end) {
							jule::I32 *_153524_r = it;
							{
								jule::Ptr<_1a55406ba_Const> _153629_rc = static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_153524_r)))));;
								_153629_rc.get()._field_Kind=_150713_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _153125_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_153629_rc, &__jule_any_type19)); };
							}
							_iter_next_1abe9050e:;
							++it;
							goto _iter_begin_1abe9050e;
						}
						_iter_end_1abe9050e:;
					};
					_149248_d.get()._field_Model=jule::Any(_153125_model, &__jule_any_type82);
					_149248_d.get()._field_Decl=true;
				}
			}
			_match_end_1abe8b0ba:;
		};
	};
}



inline void _1a869295c_castStr(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data> _154630_d, jule::Ptr<_1a52684c0_Token> _154640_errorToken) {
	if ((_1a86b2707_Enum(_154630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a88e1c11_Enum> _154821_e = _1a86b2707_Enum(_154630_d.get()._field_Kind.ptr());;
		if (((_1a86b1eba_Prim(_154821_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1a86ba204_IsStr(_1a86b1eba_Prim(_154821_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a55406ba_Const> _155413_c = _154630_d.get()._field_Constant;;
	_154630_d.get()._field_Constant=nullptr;
	if ((_1a86b1eba_Prim(_154630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a86b7003_Prim> _155717_prim = _1a86b1eba_Prim(_154630_d.get()._field_Kind.ptr());;
		if (((!(_1a86b87c9_IsU8(_155717_prim.ptr()))) && (!(_1a86b8301_IsI32(_155717_prim.ptr()))))) {
			_1a8683d6b_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
		if ((_155413_c != nullptr)) {
			{
				
				if (_1a86b87c9_IsU8(_155717_prim.ptr())) {
					_case_begin_1abe95e3d:;
					{
						_154630_d.get()._field_Constant=static__1a55413d0_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1a5542e3c_AsU64(_155413_c.ptr()))));
						_154630_d.get()._field_Model=jule::Any(_154630_d.get()._field_Constant, &__jule_any_type19);
						_154630_d.get()._field_Decl=true;
					}
				}
				else if (_1a86b8301_IsI32(_155717_prim.ptr())) {
					_case_begin_1abe95eb5:;
					{
						_154630_d.get()._field_Constant=static__1a55413d0_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1a5542bc8_AsI64(_155413_c.ptr()))));
						_154630_d.get()._field_Model=jule::Any(_154630_d.get()._field_Constant, &__jule_any_type19);
						_154630_d.get()._field_Decl=true;
					}
				}
				_match_end_1abe95d2d:;
			};
		};
		return;;
	};
	jule::Ptr<_1a86bb1b1_Slc> _157817_s = _1a86b2e44_Slc(_154630_d.get()._field_Kind.ptr());;
	if ((_157817_s == nullptr)) {
		_1a8683d6b_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1a86ae79d_TypeKind> _158417_t = _157817_s.get()._field_Elem;;
	jule::Ptr<_1a86b7003_Prim> _158513_prim = _1a86b1eba_Prim(_158417_t.ptr());;
	if (((_158513_prim == nullptr) || ((!(_1a86b87c9_IsU8(_158513_prim.ptr()))) && (!(_1a86b8301_IsI32(_158513_prim.ptr())))))) {
		_1a8683d6b_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
}



inline void _1a8692d25_castInt(_1a8683860_Eval* _self_, jule::Ptr<_1a86ae79d_TypeKind> _159230_t, jule::Ptr<_1a865dbe2_Data> _159248_d, jule::Ptr<_1a52684c0_Token> _159258_errorToken) {
	if (_1a865e50b_IsConst(_159248_d.ptr())) {
		jule::Ptr<_1a86b7003_Prim> _159417_prim = _1a86b1eba_Prim(_159230_t.ptr());;
		{
			
			if (_1a553e565_IsSigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1abe9c61a:;
				{
					_1a5543426_SetI64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a5542bc8_AsI64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1a553e851_IsUnsigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1abe9c692:;
				{
					_1a554369b_SetU64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a5542e3c_AsU64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1abe9c560:;
		};
	} else {
		_159248_d.get()._field_Constant=nullptr;
	};
	if ((_1a86b2707_Enum(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a88e1c11_Enum> _160617_e = _1a86b2707_Enum(_159248_d.get()._field_Kind.ptr());;
		if (_1a55401ae_IsNum(_1a86aeb55_Str(_160617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1a86b222e_Sptr(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a86b7003_Prim> _161317_prim = _1a86b1eba_Prim(_159230_t.ptr());;
		if ((!(_1a86b9c2b_IsUintptr(_161317_prim.ptr())))) {
			_1a8683d6b_pushErr(_self_, _159258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_159230_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1a86b2493_Ptr(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a86b7003_Prim> _162017_prim = _1a86b1eba_Prim(_159230_t.ptr());;
		if (_1a86b9c2b_IsUintptr(_162017_prim.ptr())) {
		} else if ((!(_1a86847a6_isUnsafe(_self_)))) {
			_1a8683d6b_pushErr(_self_, _159258_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a86b7003_Prim> _162913_prim = _1a86b1eba_Prim(_159248_d.get()._field_Kind.ptr());;
	if (((_162913_prim != nullptr) && _1a55401ae_IsNum(_1a86b7333_Str(_162913_prim.ptr())))) {
		return;;
	};
	_1a8683d6b_pushErr(_self_, _159258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_159230_t.ptr()), &__jule_any_type5)}));
}



inline void _1a86931dd_castNum(_1a8683860_Eval* _self_, jule::Ptr<_1a86ae79d_TypeKind> _163730_t, jule::Ptr<_1a865dbe2_Data> _163748_d, jule::Ptr<_1a52684c0_Token> _163758_errorToken) {
	if (_1a865e50b_IsConst(_163748_d.ptr())) {
		jule::Ptr<_1a86b7003_Prim> _163917_prim = _1a86b1eba_Prim(_163730_t.ptr());;
		{
			
			if (_1a553ee17_IsFloat(_163917_prim.get()._field_Kind)) {
				_case_begin_1abea5c1c:;
				{
					_1a5543e1b_SetF64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1a55431a1_AsF64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1a553e565_IsSigInt(_163917_prim.get()._field_Kind)) {
				_case_begin_1abea5c94:;
				{
					_1a5543426_SetI64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a5542bc8_AsI64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1a553e851_IsUnsigInt(_163917_prim.get()._field_Kind)) {
				_case_begin_1abea5d1b:;
				{
					_1a554369b_SetU64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a5542e3c_AsU64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1abea5b51:;
		};
	} else {
		_163748_d.get()._field_Constant=nullptr;
	};
	if ((_1a86b2707_Enum(_163748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a88e1c11_Enum> _165317_e = _1a86b2707_Enum(_163748_d.get()._field_Kind.ptr());;
		if (_1a55401ae_IsNum(_1a86aeb55_Str(_165317_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a86b7003_Prim> _165913_prim = _1a86b1eba_Prim(_163748_d.get()._field_Kind.ptr());;
	if (((_165913_prim != nullptr) && _1a55401ae_IsNum(_1a86b7333_Str(_165913_prim.ptr())))) {
		return;;
	};
	_1a8683d6b_pushErr(_self_, _163758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_163748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_163730_t.ptr()), &__jule_any_type5)}));
}



inline void _1a86935a6_castPrim(_1a8683860_Eval* _self_, jule::Ptr<_1a86ae79d_TypeKind> _166731_t, jule::Ptr<_1a865dbe2_Data> _166749_d, jule::Ptr<_1a52684c0_Token> _166759_errorToken) {
	jule::Ptr<_1a86b7003_Prim> _166813_prim = _1a86b1eba_Prim(_166731_t.ptr());;
	{
		
		if (_1a86ba468_IsAny(_166813_prim.ptr())) {
			_case_begin_1abeab43c:;
			{
				_166749_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1a86ba204_IsStr(_166813_prim.ptr())) {
			_case_begin_1abeab904:;
			{
				_1a869295c_castStr(_self_, _166749_d, _166759_errorToken);
			}
		}
		else if (_1a553eae8_IsInt(_1a86b7333_Str(_166813_prim.ptr()))) {
			_case_begin_1abeab96a:;
			{
				_1a8692d25_castInt(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else if (_1a55401ae_IsNum(_1a86b7333_Str(_166813_prim.ptr()))) {
			_case_begin_1abeab9e2:;
			{
				_1a86931dd_castNum(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else {
			_case_begin_1abeab88d:;
			{
				_1a8683d6b_pushErr(_self_, _166759_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_166731_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_1abeab827:;
	};
}



inline void _1a86938c5_castConstant(_1a8683860_Eval* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _168436_t, jule::Ptr<_1a865dbe2_Data>* _168455_d) {
	if ((((*(_168455_d)) == nullptr) || (!(_1a865e50b_IsConst((*(_168455_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a86b7003_Prim> _168813_prim = _1a86b1eba_Prim((*(_168436_t)).ptr());;
	_1a86aaed6_castConstByType(&(_168813_prim.get()._field_Kind), _168455_d);
	(*(_168455_d)).get()._field_Model=jule::Any((*(_168455_d)).get()._field_Constant, &__jule_any_type19);
}



inline void _1a8693c8d_castTypeEnum(_1a8683860_Eval* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _169336_t, jule::Ptr<_1a865dbe2_Data>* _169355_d, jule::Ptr<_1a52684c0_Token>* _169370_errorToken) {
	jule::I64 _169413_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1a8951666_checkTypeCompatibility((*(_self_))._field_s, &((*(_169355_d)).get()._field_Kind), _169336_t, _169370_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _169413_n);
		_1a8683d6b_pushErr(_self_, (*(_169370_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_169355_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_169336_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_169355_d)).get()._field_Constant=nullptr;
}



inline void _1a8694156_castTypeEnumT(_1a8683860_Eval* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _170237_t, jule::Ptr<_1a865dbe2_Data>* _170256_d, jule::Ptr<_1a52684c0_Token>* _170271_errorToken) {
	jule::I64 _170313_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1a8951666_checkTypeCompatibility((*(_self_))._field_s, _170237_t, &((*(_170256_d)).get()._field_Kind), _170271_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _170313_n);
		_1a8683d6b_pushErr(_self_, (*(_170271_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_170256_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_170237_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_170256_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_1a865dbe2_Data> _1a86945a7_evalCastByTypeNData(_1a8683860_Eval* _self_, jule::Ptr<_1a86ae79d_TypeKind> _171142_t, jule::Ptr<_1a865dbe2_Data> _171160_d, jule::Ptr<_1a52684c0_Token> _171174_errorToken) {
	if (((_171160_d != nullptr) && _171160_d.get()._field_Decl)) {
		_1a8683d6b_pushErr(_self_, _171174_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1a865e033_IsNil(_171160_d.ptr())) {
			_case_begin_1abeb72c2:;
			{
				if ((!(_1a86b1519_NilCompatible(_171142_t.ptr())))) {
					_1a8683d6b_pushErr(_self_, _171174_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_171142_t.ptr()), &__jule_any_type5)}));
				};
				_171160_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1a86b1eba_Prim(_171160_d.get()._field_Kind.ptr()) != nullptr) && _1a86ba468_IsAny(_1a86b1eba_Prim(_171160_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1abeb6a0d:;
			{
				if ((_1a86b2707_Enum(_171142_t.ptr()) != nullptr)) {
					_1a8683d6b_pushErr(_self_, _171174_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1a868418a_pushSuggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1a86b296b_TypeEnum(_171142_t.ptr()) != nullptr)) {
					_1a8683d6b_pushErr(_self_, _171174_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_171160_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1a86b296b_TypeEnum(_171160_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abeb6810:;
			{
				_1a8693c8d_castTypeEnum(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1a86b296b_TypeEnum(_171142_t.ptr()) != nullptr)) {
			_case_begin_1abeb6876:;
			{
				_1a8694156_castTypeEnumT(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1a86b2493_Ptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1abeb7415:;
			{
				_1a86919e4_castPtr(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1a86b222e_Sptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1abeb747b:;
			{
				_1a8692275_castRef(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1a86b2e44_Slc(_171142_t.ptr()) != nullptr)) {
			_case_begin_1abeb74e2:;
			{
				_1a869263d_castSlc(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1a86b341c_Struct(_171142_t.ptr()) != nullptr)) {
			_case_begin_1abeb7558:;
			{
				_1a8691dac_castStruct(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1a86b1eba_Prim(_171142_t.ptr()) != nullptr)) {
			_case_begin_1abeb75be:;
			{
				_1a86935a6_castPrim(_self_, _171142_t, _171160_d, _171174_errorToken);
				_1a86938c5_castConstant(_self_, &(_171142_t), &(_171160_d));
			}
		}
		else {
			_case_begin_1abeb5e2a:;
			{
				_1a8683d6b_pushErr(_self_, _171174_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_171142_t.ptr()), &__jule_any_type5)}));
				_171160_d=nullptr;
			}
		}
		_match_end_1abeb605c:;
	};
	if ((_171160_d == nullptr)) {
		return nullptr;;
	};
	_171160_d.get()._field_Mutable=(_171160_d.get()._field_Mutable || ((!(_1a86b1041_Mutable(_171160_d.get()._field_Kind.ptr()))) && _1a86b1041_Mutable(_171142_t.ptr())));
	if (((!(_171160_d.get()._field_Decl)) && ((_1a86b2707_Enum(_171160_d.get()._field_Kind.ptr()) == nullptr) || (!(_1a86aee63_Equal(_1a86b2707_Enum(_171160_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _171142_t)))))) {
		_1a86aa49c_applyCastKind(&(_171160_d), &(_171142_t));
		_171160_d.get()._field_Model.cast_ptr<_1a88c05a2_CastingExprModel>(&__jule_any_type98).get()._field_Token=_171174_errorToken;
	} else {
		_171160_d.get()._field_Kind=_171142_t;
	};
	_171160_d.get()._field_Decl=false;
	_171160_d.get()._field_Lvalue=false;
	_171160_d.get()._field_untyped=false;
	if (_1a865e50b_IsConst(_171160_d.ptr())) {
		_171160_d.get()._field_Constant.get()._field_Kind=_1a86b1eba_Prim(_171142_t.ptr()).get()._field_Kind;
	};
	return _171160_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8694a08_evalCastT(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a86ae79d_TypeKind>* _178234_t, jule::Ptr<_1a889b270_Expr>* _178253_e, jule::Ptr<_1a52684c0_Token>* _178268_et) {
	jule::Ptr<_1a86ae79d_TypeKind> _178317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_178317_prefix;
	});;
	if ((_1a86b2e44_Slc((*(_178234_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_178253_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1abec4114:;
				{
					_self_.get()._field_prefix=(*(_178234_t));
				}
			}
			_match_end_1abec406a:;
		};
	};
	jule::Ptr<_1a865dbe2_Data> _179217_d = _1a86a032c_evalExpr(_self_, (*(_178253_e)));;
	if (((_179217_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _179217_d;;
	};
	return _1a86945a7_evalCastByTypeNData(_self_.ptr(), (*(_178234_t)), _179217_d, (*(_178268_et)));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8694d16_evalCast(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a889dccd_CastExpr> _179932_c) {
	jule::Ptr<_1a86b6651_TypeSymbol> _180017_t = _1a88d44ea_buildType(_179932_c.get()._field_Kind);;
	jule::Bool _180113_ok = _1a894e587_checkType(_self_.get()._field_s, &(_180017_t), _self_.get()._field_lookup);;
	if ((!(_180113_ok))) {
		return nullptr;;
	};
	return _1a8694a08_evalCastT(_self_, &(_180017_t.get()._field_Kind), &(_179932_c.get()._field_Expr), &(_179932_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8695124_evalNsSelection(_1a8683860_Eval* _self_, jule::Ptr<_1a889e185_NsSelectionExpr> _180834_s) {
	jule::Str _180913_path = _1a86c9d90_buildLinkPathByTokens(&(_180834_s.get()._field_Ns));;
	jule::Ptr<_1a893d323_ImportInfo> _181017_imp = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cb08e_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)>([=](jule::Ptr<_1a893d323_ImportInfo> _181052_imp) mutable -> jule::Bool {
		if (((_180834_s.get()._field_Ns.len() == 1LL) && (_181052_imp.get()._field_Alias == _180913_path))) {
			return true;;
		};
		return ((_181052_imp.get()._field_LinkPath == _180913_path) && _1a8940b61_isAccessibleViaSelection(_181052_imp.ptr()));;
	}));;
	if ((_181017_imp == nullptr)) {
		_1a8683d6b_pushErr(_self_, _180834_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_180913_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_1a86ccac9_Lookup> _182217_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1a86ccac9_Lookup>(_181017_imp, 1);
	;
	_1a8684542_disallowBuiltin(_self_);
	jule::Any _182717_def = _1a8686d80_getDef(_self_, _180834_s.get()._field_Ident.get()._field_Kind, false);;
	_1a8684366_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_182217_lookup;
	jule::Ptr<_1a865dbe2_Data> _183017_d = _1a868a867_evalDef(_self_, _182717_def, _180834_s.get()._field_Ident);;
	return _183017_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8695575_evalStructLitExplicit(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88b9b51_StructIns> _183445_s, jule::Slice<jule::Ptr<_1a889b270_Expr>> _183513_exprs, jule::Ptr<_1a52684c0_Token> _183533_errorToken) {
	jule::Bool _183613_ok = _1a894a31e_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_183445_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_183445_s.get()._field_Generics.len()), _183533_errorToken);;
	if ((!(_183613_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _183445_s.get()._field_Decl))) {
		_1a8683d6b_pushErr(_self_.ptr(), _183533_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_183445_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_1abe798a0_pushReference(_self_.ptr(), &(_183445_s));
	_1a8688c72_checkDeprecated(_self_.ptr(), &(_183445_s.get()._field_Decl.get()._field_Directives), _183533_errorToken);
	_1a89a51d1_structLitChecker _184917_slc = _1a89a51d1_structLitChecker{._field_e=_self_, ._field_errorToken=_183533_errorToken, ._field_s=_183445_s, };;
	_1a89a6776_check(&_184917_slc, &(_183513_exprs));
	jule::Ptr<_1a865dbe2_Data> _185617_d = jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_183445_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1a88bec44_StructLitExprModel>(_1a88bec44_StructLitExprModel{._field_Strct=_183445_s, ._field_Args=_184917_slc._field_args}), &__jule_any_type100), });;
	if (_183445_s.get()._field_Decl.get()._field_Binded) {
		_185617_d.get()._field_Kind.get()._field_BindIdent=_183445_s.get()._field_Decl.get()._field_Ident;
	};
	return _185617_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8695883_evalStructLit(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a13da_StructLit> _187237_lit) {
	jule::Ptr<_1a86b6651_TypeSymbol> _187317_t = _1a88d44ea_buildType(_187237_lit.get()._field_Kind);;
	jule::Bool _187413_ok = _1a894e587_checkType(_self_.get()._field_s, &(_187317_t), _self_.get()._field_lookup);;
	if ((!(_187413_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a88b9b51_StructIns> _187917_s = _1a86b341c_Struct(_187317_t.get()._field_Kind.ptr());;
	if ((_187917_s == nullptr)) {
		if ((_1a86b222e_Sptr(_187317_t.get()._field_Kind.ptr()) != nullptr)) {
			_187917_s=_1a86b341c_Struct(_1a86b222e_Sptr(_187317_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_187917_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1a8683d6b_pushErr(_self_.ptr(), _187237_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_1a865dbe2_Data> _189217_d = _1a8695575_evalStructLitExplicit(_self_, _187917_s, _187237_lit.get()._field_Exprs, _187237_lit.get()._field_Kind.get()._field_Token);;
	if ((_1a86b222e_Sptr(_187317_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a88bec44_StructLitExprModel> _189421_model = _189217_d.get()._field_Model.cast_ptr<_1a88bec44_StructLitExprModel>(&__jule_any_type100);;
		_1a86a8d5d_makeStructLitAlloc(&(_189217_d), &(_189421_model));
	};
	return _189217_d;;
}



inline _1a86c0ade_typeChecker _1a8695ae7_typeChecker(_1a8683860_Eval* _self_) {
	return _1a894d476_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8695e05_evalType(_1a8683860_Eval* _self_, jule::Ptr<_1a88970e5_TypeDecl> _190431_t) {
	jule::Ptr<_1a86b6651_TypeSymbol> _190517_tk = _1a88d44ea_buildType(_190431_t);;
	jule::Bool _190613_ok = _1a894e587_checkType((*(_self_))._field_s, &(_190517_tk), (*(_self_))._field_lookup);;
	if ((!(_190613_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_190517_tk.get()._field_Kind, ._field_Model=jule::Any(_190517_tk.get()._field_Kind, &__jule_any_type89), ._field_Decl=true, });;
}



inline void _1a8696224_callTypeFn(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a0186_FnCallExpr>* _191735_fc, jule::Ptr<_1a865dbe2_Data>* _191757_d) {
	if (((*(_191735_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_191735_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_191757_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_191735_fc)).get()._field_IsCo) {
		_1a8683d6b_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	} else if (((*(_191735_fc)).get()._field_Exception != nullptr)) {
		_1a8683d6b_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	};
	if (((*(_191735_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1a889b270_Expr> _193321_arg = (*(_191735_fc)).get()._field_Args[0LL];;
		(*(_191757_d))=_1a8694a08_evalCastT(_self_, &((*(_191757_d)).get()._field_Kind), &(_193321_arg), &(_193321_arg.get()._field_Token));
		return;;
	};
	if (((*(_191757_d)) != nullptr)) {
		(*(_191757_d)).get()._field_Decl=false;
	};
}



inline void _1a8696543_callBuiltinFn(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a0186_FnCallExpr>* _194338_fc, jule::Ptr<_1a865dbe2_Data>* _194360_d) {
	if ((!(_1a88a04e9_Unhandled((*(_194338_fc)).ptr())))) {
		_1a8683d6b_pushErr(_self_.ptr(), (*(_194338_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_194360_d))=_1a86b31a8_Fn((*(_194360_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _194338_fc, _194360_d);
	if (((*(_194360_d)) == nullptr)) {
		return;;
	};
	(*(_194360_d)).get()._field_Mutable=true;
}



inline void _1a8696884_checkFnOfConcurrentCall(_1a8683860_Eval* _self_, jule::Ptr<_1a88cee0d_FnIns>* _195543_f, jule::Ptr<_1a52684c0_Token> _195554_errorToken) {
	if (_1a86847a6_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_195543_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abee32ba:;
		if (it != expr_end) {
			jule::Ptr<_1a88ce03e_ParamIns> *_195916_p = it;
			{
				if (_1a88cb008_IsSelf((*(_195916_p)).get()._field_Decl.ptr())) {
					if ((!(_1a88cb26c_IsRef((*(_195916_p)).get()._field_Decl.ptr())))) {
						_1a8683d6b_pushErr(_self_, _195554_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1a868418a_pushSuggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_195916_p)).get()._field_Decl.get()._field_Reference) {
					_1a8683d6b_pushErr(_self_, _195554_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1a868418a_pushSuggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1abee32ba:;
			++it;
			goto _iter_begin_1abee32ba;
		}
		_iter_end_1abee32ba:;
	};
}



inline void _1a8696c80_processExceptionalHandler(_1a8683860_Eval* _self_, jule::Ptr<_1a88cee0d_FnIns>* _197449_f, jule::Ptr<_1a88a0186_FnCallExpr>* _197465_fc, jule::Ptr<_1a865dbe2_Data>* _197487_d) {
	jule::Bool _197513_resultNeeded = ((!(_1a88cc6be_IsVoid((*(_197449_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1a8925eba_scopeChecker> _197617_csc = nullptr;;
	jule::Ptr<_1a891e38c_Scope> _197717_ch = nullptr;;
	jule::Ptr<_1a88c0e54_FnCallExprModel> _197917_model = (*(_197487_d)).get()._field_Model.cast_ptr<_1a88c0e54_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_1a8925eba_scopeChecker> _198317_sc = (*(_self_))._field_lookup.cast_ptr<_1a8925eba_scopeChecker>(0);;
	_197617_csc=_1a89363e8_newChildChecker(_198317_sc);
	if (_197513_resultNeeded) {
		_197617_csc.get()._field_result=(*(_197449_f));
	};
	_197717_ch=_1a892a596_getChild(_198317_sc.ptr());
	(*(_197465_fc)).get()._field_Exception.get()._field_Parent=_198317_sc.get()._field_tree;
	{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = _197617_csc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_1a86a919e_buildErrorVar(&(_197717_ch), _197465_fc)); };
	_1a892a95e_checkChildSsc(_198317_sc, &((*(_197465_fc)).get()._field_Exception), &(_197717_ch), &(_197617_csc));
	_197917_model.get()._field_Assigned=_197513_resultNeeded;
	_197917_model.get()._field_Except=_197717_ch;
	if ((_197513_resultNeeded && (_197617_csc.get()._field_result != nullptr))) {
		_1a8683d6b_pushErr(_self_, (*(_197465_fc)).get()._field_Token, jule::Str("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1a86970b0_callFn(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a0186_FnCallExpr>* _200131_fc, jule::Ptr<_1a865dbe2_Data>* _200153_d) {
	jule::Ptr<_1a88cee0d_FnIns> _200217_f = _1a86b31a8_Fn((*(_200153_d)).get()._field_Kind.ptr());;
	if (_1a88d1294_IsBuiltin(_200217_f.ptr())) {
		_1a8696543_callBuiltinFn(_self_, _200131_fc, _200153_d);
		return;;
	};
	if ((_1a8684a1a_isGlobal(_self_.ptr()) && _200217_f.get()._field_Decl.get()._field_Exceptional)) {
		_1a8683d6b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1a868418a_pushSuggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((!(_1a88cc933_IsMethod(_200217_f.get()._field_Decl.ptr()))) && _1a86c8ee3_hasDirective(&(_200217_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_1a8683d6b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((((!((*(_200153_d)).get()._field_Mutable)) && _1a88cc933_IsMethod(_200217_f.get()._field_Decl.ptr())) && (!(_200217_f.get()._field_Decl.get()._field_Statically))) && _200217_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		if ((!(_self_.get()._field_immutable))) {
			_1a8683d6b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1a88bec44_StructLitExprModel> _202821_lit = _1a86ac0b4_isLitBased(&((*(_200153_d)).get()._field_Model));;
			if ((_202821_lit == nullptr)) {
				_1a8683d6b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1a89a4c3b_checkMutRiskOfStructLit(&(_self_.get()._field_s), &(_202821_lit));
			};
		};
	} else if (((!(_1a86847a6_isUnsafe(_self_.ptr()))) && _200217_f.get()._field_Decl.get()._field_Unsafety)) {
		_1a8683d6b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _204017_dynamicAnnotation = (((_200217_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_200217_f.get()._field_Generics.len() == 0LL)) && (_200217_f.get()._field_Params.len() > 0LL));;
	if (_204017_dynamicAnnotation) {
		_200217_f.get()._field_Generics=jule::Slice<jule::Ptr<_1a86ad01b_InsGeneric>>::alloc(_200217_f.get()._field_Decl.get()._field_Generics.len(), _200217_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_200217_f.get()._field_Generics.len() != _200217_f.get()._field_Decl.get()._field_Generics.len())) {
		_1a894a31e_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_200217_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_200217_f.get()._field_Generics.len()), (*(_200131_fc)).get()._field_Token);
		(*(_200153_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a89465e5_Sema> _204917_old = _self_.get()._field_s;;
	if ((_200217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_200217_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_204917_old != _self_.get()._field_s)) {
			(_204917_old.get()._field_errors).append(_self_.get()._field_s.get()._field_errors);;
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_204917_old;
	});;
	_1a89a251e_fnCallArgChecker _206217_fcac = _1a89a251e_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_200131_fc)).get()._field_Args, ._field_errorToken=(*(_200131_fc)).get()._field_Token, ._field_dynamicAnnotation=_204017_dynamicAnnotation, };;
	if ((!(_204017_dynamicAnnotation))) {
		if ((!(_200217_f.get()._field_reloaded))) {
			jule::Bool _207121_ok = _1a89535d0_reloadFnInsTypes(_self_.get()._field_s, _200217_f);;
			_200217_f.get()._field_reloaded=true;
			if ((!(_207121_ok))) {
				(*(_200153_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a88cee0d_FnIns> _207821_existInstance = _1a88cdb87_appendInstance(_200217_f.get()._field_Decl.ptr(), &(_200217_f));;
		if ((_207821_existInstance != nullptr)) {
			_200217_f=_207821_existInstance;
		};
	} else if ((!(_1a8951ec4_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_200217_f), &(_206217_fcac._field_ignored))))) {
		(*(_200153_d))=nullptr;
		return;;
	};
	_206217_fcac._field_f=_200217_f;
	jule::Bool _208917_ok = false;;
	if ((_200217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1a89465e5_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1a89465e5_Sema> _1___jule_assign_arg = _204917_old;
			_204917_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_208917_ok=_1a89a48a6_check(&_206217_fcac);
		({
			jule::Ptr<_1a89465e5_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1a89465e5_Sema> _1___jule_assign_arg = _204917_old;
			_204917_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_208917_ok=_1a89a48a6_check(&_206217_fcac);
	};
	if (_204017_dynamicAnnotation) {
		if ((!(_208917_ok))) {
			(*(_200153_d))=nullptr;
			return;;
		};
		if ((!(_1a868ed00_checkGenericFn(_self_, &(_200217_f), &((*(_200131_fc)).get()._field_Token), &((*(_200153_d)).get()._field_Model))))) {
			(*(_200153_d))=nullptr;
			return;;
		};
	};
	jule::Any _210917_callModel = (*(_200153_d)).get()._field_Model;;
	if (_1a88cc6be_IsVoid(_200217_f.get()._field_Decl.ptr())) {
		(*(_200153_d))=_1a86aa69a_buildVoidData();
	} else {
		(*(_200153_d)).get()._field_Kind=_200217_f.get()._field_Result;
		(*(_200153_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_1a88c0e54_FnCallExprModel> _211817_model = jule::new_ptr<_1a88c0e54_FnCallExprModel>(_1a88c0e54_FnCallExprModel{._field_Token=(*(_200131_fc)).get()._field_Token, ._field_Func=_200217_f, ._field_IsCo=(*(_200131_fc)).get()._field_IsCo, ._field_Expr=_210917_callModel, ._field_Args=_206217_fcac._field_argModels, });;
	(*(_200153_d)).get()._field_Model=jule::Any(_211817_model, &__jule_any_type35);
	(*(_200153_d)).get()._field_Mutable=true;
	if (_200217_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_200131_fc)).get()._field_IsCo) {
			_1a8948e77_pushErr(_self_.get()._field_s.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1a8949296_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1a88a04e9_Unhandled((*(_200131_fc)).ptr())) {
				_case_begin_1ac015d7b:;
				{
					_1a8683d6b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1a868418a_pushSuggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1a88a075d_Ignored((*(_200131_fc)).ptr())) {
				_case_begin_1ac0157c6:;
				{
					goto _match_end_1ac014c59;
				}
			}
			else {
				_case_begin_1ac0149b2:;
				{
					_1a8696c80_processExceptionalHandler(_self_.ptr(), &(_200217_f), _200131_fc, _200153_d);
				}
			}
			_match_end_1ac014c59:;
		};
	} else if ((!(_1a88a04e9_Unhandled((*(_200131_fc)).ptr())))) {
		_1a8683d6b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_200131_fc)).get()._field_IsCo) {
		_1a8696884_checkFnOfConcurrentCall(_self_.ptr(), &(_211817_model.get()._field_Func), (*(_200131_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86973bd_evalFnCall(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a0186_FnCallExpr> _215334_fc) {
	jule::Ptr<_1a86ae79d_TypeKind> _215417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_215417_prefix;
	});;
	{
		auto &_match_expr{ _215334_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ac018631:;
			{
				if (_215334_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _1a8778d0c_builtinCallerError(&(_self_), &(_215334_fc));;
				};
			}
		}
		_match_end_1ac0185cb:;
	};
	jule::Ptr<_1a865dbe2_Data> _216717_d = _1a869e5e5_evalExprKind(_self_, _215334_fc.get()._field_Expr.get()._field_Kind);;
	if ((_216717_d == nullptr)) {
		return nullptr;;
	};
	if (_216717_d.get()._field_Decl) {
		_1a8696224_callTypeFn(_self_, &(_215334_fc), &(_216717_d));
		return _216717_d;;
	};
	if ((_1a86b31a8_Fn(_216717_d.get()._field_Kind.ptr()) == nullptr)) {
		_1a8683d6b_pushErr(_self_.ptr(), _215334_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a86970b0_callFn(_self_, &(_215334_fc), &(_216717_d));
	return _216717_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8697775_evalEnumStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a88e1c11_Enum> _218637_enm, jule::Ptr<_1a52684c0_Token> _218649_ident) {
	jule::Ptr<_1a88e121b_EnumItem> _218717_item = _1a88e277d_FindItem(_218637_enm.ptr(), _218649_ident.get()._field_Kind);;
	if ((_218717_item == nullptr)) {
		_1a8683d6b_pushErr(_self_, _218649_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_218637_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_218649_ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _1a86abd1c_evalEnumStatic(&(_218637_enm), &(_218717_item));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8697b2c_evalTypeEnumStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a88e330b_TypeEnum> _219441_enm, jule::Ptr<_1a52684c0_Token> _219457_ident) {
	jule::Ptr<_1a88e2c78_TypeEnumItem> _219517_item = _1a88e3d45_FindItem(_219441_enm.ptr(), _219457_ident.get()._field_Kind);;
	if ((_219517_item == nullptr)) {
		_1a8683d6b_pushErr(_self_, _219457_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_219441_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_219457_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_1a86b2707_Enum(_219517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac01ec31:;
			{
				return _1a8687413__evalEnum(_self_, _1a86b2707_Enum(_219517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1a86b296b_TypeEnum(_219517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0204a1:;
			{
				return _1a8687ac8__evalTypeEnum(_self_, _1a86b296b_TypeEnum(_219517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1a86b341c_Struct(_219517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac01e802:;
			{
				return _1a868828d__evalStruct(_self_, _1a86b341c_Struct(_219517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1ac01e648:;
			{
				jule::Ptr<_1a865dbe2_Data> _220821_d = jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_219517_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_220821_d.get()._field_Model=jule::Any(_220821_d.get()._field_Kind, &__jule_any_type89);
				return _220821_d;;
			}
		}
		_match_end_1ac01d5c0:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a8697ed4_evalStructStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a88b9b51_StructIns> _221739_s, jule::Ptr<_1a52684c0_Token> _221754_ident) {
	jule::Ptr<_1a865dbe2_Data> _221817_d = jule::new_ptr<_1a865dbe2_Data>();;
	;
	jule::Ptr<_1a88cc25c_Fn> _222217_method = _1a88baaec_FindMethod(_221739_s.ptr(), _221754_ident.get()._field_Kind, true);;
	if ((_222217_method != nullptr)) {
		if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), _222217_method.get()._field_Public, _222217_method.get()._field_Token)))) {
			_1a8683d6b_pushErr(_self_, _221754_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_221754_ident.get()._field_Kind, &__jule_any_type5)}));
			_1a868418a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a88cee0d_FnIns> _222921_ins = _1a88cd8ac_instance(_222217_method);;
		_222921_ins.get()._field_Owner=_221739_s;
		_1abdc93b0_pushReference(_self_, &(_222921_ins));
		_221817_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88c3b6b_StructStaticIdentExprModel>(_1a88c3b6b_StructStaticIdentExprModel{._field_Structure=_221739_s, ._field_Expr=_221817_d.get()._field_Model, ._field_Method=_222921_ins}), &__jule_any_type101);
		_221817_d.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_222921_ins, 1)});
		return _221817_d;;
	};
	jule::Ptr<_1a8966901_Var> _224317_sttc = _1a88bb218_FindStatic(_221739_s.ptr(), _221754_ident.get()._field_Kind);;
	if ((_224317_sttc != nullptr)) {
		return _1a868a108_evalVar(_self_, _224317_sttc, _221754_ident);;
	};
	_1a8683d6b_pushErr(_self_, _221754_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_221739_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_221754_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8698435_evalTraitSubIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data> _225240_d, jule::Ptr<_1a88de47d_Trait> _225254_trt, jule::Ptr<_1a52684c0_Token> _225271_ident) {
	jule::Ptr<_1a88cc25c_Fn> _225317_f = _1a88e032a_FindMethod(_225254_trt.ptr(), _225271_ident.get()._field_Kind);;
	if ((_225317_f == nullptr)) {
		_1a8683d6b_pushErr(_self_, _225271_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_225254_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_225271_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a88cd8ac_instance(_225317_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1a88c2ede_TraitSubIdentExprModel>(_1a88c2ede_TraitSubIdentExprModel{._field_Token=_225271_ident, ._field_Expr=_225240_d.get()._field_Model, ._field_Method=_225317_f, ._field_Trt=_225254_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8698952_evalStructSubIdentField(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data>* _227247_d, jule::Ptr<_1a88b9b51_StructIns>* _227262_s, jule::Ptr<_1a52684c0_Token>* _227282_tok, jule::Ptr<_1a88b915b_FieldIns>* _2272100_f) {
	jule::Ptr<_1a88c37c5_StructSubIdentExprModel> _227317_model = jule::new_ptr<_1a88c37c5_StructSubIdentExprModel>(_1a88c37c5_StructSubIdentExprModel{._field_Token=(*(_227282_tok)), ._field_Expr=jule::new_ptr<_1a865dbe2_Data>((*((*(_227247_d))))), ._field_Field=(*(_2272100_f)), ._field_Owner=(*(_227262_s))});;
	(*(_227247_d)).get()._field_Model=jule::Any(_227317_model, &__jule_any_type71);
	(*(_227247_d)).get()._field_Kind=(*(_2272100_f)).get()._field_Kind;
	(*(_227247_d)).get()._field_Lvalue=true;
	if (((*(_2272100_f)).get()._field_Decl.get()._field_Mutable && (!((*(_227247_d)).get()._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1ac02da86:;
				{
					jule::Ptr<_1a8925eba_scopeChecker> _228721_scope = _1a8928ce2_getRoot((*(_self_))._field_lookup.cast_ptr<_1a8925eba_scopeChecker>(0));;
					(*(_227247_d)).get()._field_Mutable=((_228721_scope.get()._field_owner != nullptr) && (_228721_scope.get()._field_owner.get()._field_Owner == (*(_227262_s))));
				}
			}
			_match_end_1ac02da31:;
		};
	};
	return (*(_227247_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8698e5d_evalStructSubIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data> _229541_d, jule::Ptr<_1a88b9b51_StructIns> _229555_s, jule::Ptr<_1a889e608_SubIdentExpr> _229574_si, jule::Bool _229593_ref) {
	jule::Ptr<_1a88b915b_FieldIns> _229617_f = _1a88bae0a_FindField(_229555_s.ptr(), _229574_si.get()._field_Ident.get()._field_Kind);;
	if ((_229617_f != nullptr)) {
		if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), _229617_f.get()._field_Decl.get()._field_Public, _229617_f.get()._field_Decl.get()._field_Token)))) {
			_1a8683d6b_pushErr(_self_, _229574_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_229617_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_1a868418a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1a8698952_evalStructSubIdentField(_self_, &(_229541_d), &(_229555_s), &(_229574_si.get()._field_Ident), &(_229617_f));;
	};
	;
	jule::Ptr<_1a88cc25c_Fn> _230617_m = _1a88baaec_FindMethod(_229555_s.ptr(), _229574_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_230617_m == nullptr)) {
		_1a8683d6b_pushErr(_self_, _229574_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_229555_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_229574_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), _230617_m.get()._field_Public, _230617_m.get()._field_Token)))) {
		_1a8683d6b_pushErr(_self_, _229574_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_230617_m.get()._field_Ident, &__jule_any_type5)}));
		_1a868418a_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1a88cb26c_IsRef(_230617_m.get()._field_Params[0LL].ptr()) && (!(_229593_ref)))) {
		_1a8683d6b_pushErr(_self_, _229574_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1a8688c72_checkDeprecated(_self_, &(_230617_m.get()._field_Directives), _229574_si.get()._field_Ident);
	jule::Ptr<_1a88cee0d_FnIns> _232217_ins = _1a88cd8ac_instance(_230617_m);;
	_232217_ins.get()._field_Owner=_229555_s;
	_1abdc93b0_pushReference(_self_, &(_232217_ins));
	jule::Ptr<_1a865dbe2_Data> _232517_model = jule::new_ptr<_1a865dbe2_Data>((*(_229541_d)));;
	_229541_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88c37c5_StructSubIdentExprModel>(_1a88c37c5_StructSubIdentExprModel{._field_Token=_229574_si.get()._field_Ident, ._field_Expr=_232517_model, ._field_Method=_232217_ins, ._field_Owner=_229555_s}), &__jule_any_type71);
	_229541_d.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_232217_ins, 1)});
	return _229541_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8699315_evalSliceSubIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data> _233640_d, jule::Ptr<_1a52684c0_Token> _233654_ident) {
	{
		auto &_match_expr{ _233654_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ac0395a8:;
			{
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>>::make({jule::new_ptr<_1a88ce03e_ParamIns>(_1a88ce03e_ParamIns{._field_Decl=jule::new_ptr<_1a88ca920_Param>(_1a88ca920_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_1a89aa26e_lenKind()}),jule::new_ptr<_1a88ce03e_ParamIns>(_1a88ce03e_ParamIns{._field_Decl=jule::new_ptr<_1a88ca920_Param>(_1a88ca920_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_1a89aa26e_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a87789bb_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_233640_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1a88c4881_CommonSubIdentExprModel>(_1a88c4881_CommonSubIdentExprModel{._field_ExprKind=_233640_d.get()._field_Kind, ._field_Expr=_233640_d.get()._field_Model, ._field_Token=_233654_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1ac039883:;
			{
				_1a8683d6b_pushErr(_self_, _233654_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_233640_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_233654_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac039641:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86996bc_evalArraySubIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data> _237340_d, jule::Ptr<_1a52684c0_Token> _237354_ident) {
	{
		auto &_match_expr{ _237354_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ac039a70:;
			{
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>>::make({jule::new_ptr<_1a88ce03e_ParamIns>(_1a88ce03e_ParamIns{._field_Decl=jule::new_ptr<_1a88ca920_Param>(_1a88ca920_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_1a89aa26e_lenKind()}),jule::new_ptr<_1a88ce03e_ParamIns>(_1a88ce03e_ParamIns{._field_Decl=jule::new_ptr<_1a88ca920_Param>(_1a88ca920_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_1a89aa26e_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a87789bb_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_237340_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1a88c4881_CommonSubIdentExprModel>(_1a88c4881_CommonSubIdentExprModel{._field_ExprKind=_237340_d.get()._field_Kind, ._field_Expr=_237340_d.get()._field_Model, ._field_Token=_237354_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1ac03d26b:;
			{
				_1a8683d6b_pushErr(_self_, _237354_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_237340_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_237354_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac03d1e4:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86999ca_evalIntTypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _241036_ident) {
	;
	{
		auto &_match_expr{ _241036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ac042a23:;
			{
				jule::Ptr<_1a55406ba_Const> _241421_c = static__1a5540ae9_NewI64(static_cast<jule::I64>(_1a5538dde_MaxI(jule::Str("int", 3))));;
				_241421_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8774841_primInt, ._field_Model=jule::Any(_241421_c, &__jule_any_type19), ._field_Constant=_241421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ac041cb9:;
			{
				jule::Ptr<_1a55406ba_Const> _242221_c = static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a5539395_Min(jule::Str("int", 3)))));;
				_242221_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8774841_primInt, ._field_Model=jule::Any(_242221_c, &__jule_any_type19), ._field_Constant=_242221_c});;
			}
		}
		else {
			_case_begin_1ac042050:;
			{
				_1a8683d6b_pushErr(_self_, _241036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_241036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac041ea6:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a8699cd8_evalUintTypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _243537_ident) {
	;
	{
		auto &_match_expr{ _243537_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ac044a03:;
			{
				jule::Ptr<_1a55406ba_Const> _243921_c = static__1a5540d91_NewU64(static_cast<jule::U64>(_1a5539186_MaxU(jule::Str("uint", 4))));;
				_243921_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8774577_primUint, ._field_Model=jule::Any(_243921_c, &__jule_any_type19), ._field_Constant=_243921_c});;
			}
		}
		else {
			_case_begin_1ac04541b:;
			{
				_1a8683d6b_pushErr(_self_, _243537_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_243537_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac04221a:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869a0e6_evalI8TypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _245235_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245235_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ac047880:;
			{
				jule::Ptr<_1a55406ba_Const> _245821_c = static__1a5540ae9_NewI64(127LL);;
				_245821_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8774c1a_primI8, ._field_Model=jule::Any(_245821_c, &__jule_any_type19), ._field_Constant=_245821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ac048b5b:;
			{
				jule::Ptr<_1a55406ba_Const> _246621_c = static__1a5540ae9_NewI64(-128LL);;
				_246621_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8774c1a_primI8, ._field_Model=jule::Any(_246621_c, &__jule_any_type19), ._field_Constant=_246621_c});;
			}
		}
		else {
			_case_begin_1ac048144:;
			{
				_1a8683d6b_pushErr(_self_, _245235_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_245235_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac048045:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869a404_evalI16TypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _247936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _247936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ac04b2bd:;
			{
				jule::Ptr<_1a55406ba_Const> _248521_c = static__1a5540ae9_NewI64(32767LL);;
				_248521_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8774ed4_primI16, ._field_Model=jule::Any(_248521_c, &__jule_any_type19), ._field_Constant=_248521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ac04c588:;
			{
				jule::Ptr<_1a55406ba_Const> _249321_c = static__1a5540ae9_NewI64(-32768LL);;
				_249321_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8774ed4_primI16, ._field_Model=jule::Any(_249321_c, &__jule_any_type19), ._field_Constant=_249321_c});;
			}
		}
		else {
			_case_begin_1ac04ba71:;
			{
				_1a8683d6b_pushErr(_self_, _247936_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_247936_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac04b972:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869a712_evalI32TypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _250636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _250636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ac04ebea:;
			{
				jule::Ptr<_1a55406ba_Const> _251221_c = static__1a5540ae9_NewI64(2147483647LL);;
				_251221_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a877529d_primI32, ._field_Model=jule::Any(_251221_c, &__jule_any_type19), ._field_Constant=_251221_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ac050eb5:;
			{
				jule::Ptr<_1a55406ba_Const> _252021_c = static__1a5540ae9_NewI64(-2147483648LL);;
				_252021_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a877529d_primI32, ._field_Model=jule::Any(_252021_c, &__jule_any_type19), ._field_Constant=_252021_c});;
			}
		}
		else {
			_case_begin_1ac05049d:;
			{
				_1a8683d6b_pushErr(_self_, _250636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_250636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac05039e:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869aa20_evalI64TypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _253336_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _253336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ac053627:;
			{
				jule::Ptr<_1a55406ba_Const> _253921_c = static__1a5540ae9_NewI64(jule::MAX_I64);;
				_253921_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8775567_primI64, ._field_Model=jule::Any(_253921_c, &__jule_any_type19), ._field_Constant=_253921_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ac0548e2:;
			{
				jule::Ptr<_1a55406ba_Const> _254721_c = static__1a5540ae9_NewI64(jule::MIN_I64);;
				_254721_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8775567_primI64, ._field_Model=jule::Any(_254721_c, &__jule_any_type19), ._field_Constant=_254721_c});;
			}
		}
		else {
			_case_begin_1ac053dca:;
			{
				_1a8683d6b_pushErr(_self_, _253336_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_253336_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac053ccb:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869ad2d_evalU8TypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _256035_ident) {
	;
	;
	{
		auto &_match_expr{ _256035_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ac057d35:;
			{
				jule::Ptr<_1a55406ba_Const> _256521_c = static__1a5540d91_NewU64(255LLU);;
				_256521_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8775831_primU8, ._field_Model=jule::Any(_256521_c, &__jule_any_type19), ._field_Constant=_256521_c});;
			}
		}
		else {
			_case_begin_1ac057054:;
			{
				_1a8683d6b_pushErr(_self_, _256035_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_256035_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac0571a8:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869b13b_evalU16TypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _257836_ident) {
	;
	;
	{
		auto &_match_expr{ _257836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ac05a4b9:;
			{
				jule::Ptr<_1a55406ba_Const> _258321_c = static__1a5540d91_NewU64(65535LLU);;
				_258321_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8775aea_primU16, ._field_Model=jule::Any(_258321_c, &__jule_any_type19), ._field_Constant=_258321_c});;
			}
		}
		else {
			_case_begin_1ac0596a5:;
			{
				_1a8683d6b_pushErr(_self_, _257836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_257836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac05983c:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869b449_evalU32TypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _259636_ident) {
	;
	;
	{
		auto &_match_expr{ _259636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ac05cb4d:;
			{
				jule::Ptr<_1a55406ba_Const> _260121_c = static__1a5540d91_NewU64(4294967295LLU);;
				_260121_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8775db4_primU32, ._field_Model=jule::Any(_260121_c, &__jule_any_type19), ._field_Constant=_260121_c});;
			}
		}
		else {
			_case_begin_1ac05bd39:;
			{
				_1a8683d6b_pushErr(_self_, _259636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_259636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac05bec1:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869b757_evalU64TypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _261436_ident) {
	;
	;
	{
		auto &_match_expr{ _261436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ac0602d2:;
			{
				jule::Ptr<_1a55406ba_Const> _261921_c = static__1a5540d91_NewU64(jule::MAX_U64);;
				_261921_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a877617d_primU64, ._field_Model=jule::Any(_261921_c, &__jule_any_type19), ._field_Constant=_261921_c});;
			}
		}
		else {
			_case_begin_1ac05e4bd:;
			{
				_1a8683d6b_pushErr(_self_, _261436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_261436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac05e655:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869ba65_evalF32TypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _263236_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _263236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ac0632a2:;
			{
				jule::Ptr<_1a55406ba_Const> _263921_c = static__1a5541677_NewF64(340282346638528860000000000000000000000.0);;
				_263921_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8776601_primF32, ._field_Model=jule::Any(_263921_c, &__jule_any_type19), ._field_Constant=_263921_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ac062c0d:;
			{
				jule::Ptr<_1a55406ba_Const> _264721_c = static__1a5541677_NewF64(-340282346638528860000000000000000000000.0);;
				_264721_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8776601_primF32, ._field_Model=jule::Any(_264721_c, &__jule_any_type19), ._field_Constant=_264721_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1ac063390:;
			{
				jule::Ptr<_1a55406ba_Const> _265521_c = static__1a5541677_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_265521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8776601_primF32, ._field_Model=jule::Any(_265521_c, &__jule_any_type19), ._field_Constant=_265521_c});;
			}
		}
		else {
			_case_begin_1ac0626be:;
			{
				_1a8683d6b_pushErr(_self_, _263236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type5),jule::Any(_263236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac062669:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869bd73_evalF64TypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a52684c0_Token> _266836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _266836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ac067e11:;
			{
				jule::Ptr<_1a55406ba_Const> _267521_c = static__1a5541677_NewF64(jule::MAX_F64);;
				_267521_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a87768ba_primF64, ._field_Model=jule::Any(_267521_c, &__jule_any_type19), ._field_Constant=_267521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ac06786c:;
			{
				jule::Ptr<_1a55406ba_Const> _268321_c = static__1a5541677_NewF64(jule::MIN_F64);;
				_268321_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a87768ba_primF64, ._field_Model=jule::Any(_268321_c, &__jule_any_type19), ._field_Constant=_268321_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1ac067eee:;
			{
				jule::Ptr<_1a55406ba_Const> _269121_c = static__1a5541677_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_269121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a87768ba_primF64, ._field_Model=jule::Any(_269121_c, &__jule_any_type19), ._field_Constant=_269121_c});;
			}
		}
		else {
			_case_begin_1ac06732d:;
			{
				_1a8683d6b_pushErr(_self_, _266836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type5),jule::Any(_266836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac0672c8:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869c22a_evalPrimStatic(_1a8683860_Eval* _self_, jule::Str _270433_kind, jule::Ptr<_1a52684c0_Token> _270444_ident) {
	{
		auto &_match_expr{ _270433_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ac06a980:;
			{
				return _1a86999ca_evalIntTypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ac06ba91:;
			{
				return _1a8699cd8_evalUintTypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ac06bb7e:;
			{
				return _1a869a0e6_evalI8TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ac06bbe5:;
			{
				return _1a869a404_evalI16TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ac06b233:;
			{
				return _1a869a712_evalI32TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ac06b299:;
			{
				return _1a869aa20_evalI64TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ac06bc5b:;
			{
				return _1a869ad2d_evalU8TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ac06bcc2:;
			{
				return _1a869b13b_evalU16TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ac06bd38:;
			{
				return _1a869b449_evalU32TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ac06bd9e:;
			{
				return _1a869b757_evalU64TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac06be15:;
			{
				return _1a869ba65_evalF32TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac06be7b:;
			{
				return _1a869bd73_evalF64TypeStatic(_self_, _270444_ident);;
			}
		}
		else {
			_case_begin_1ac06b035:;
			{
				_1a8683d6b_pushErr(_self_, _270444_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_270433_kind, &__jule_any_type5),jule::Any(_270444_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac0680ba:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869c5d2_evalTypeStatic(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data> _273637_d, jule::Ptr<_1a889e608_SubIdentExpr> _273651_si) {
	{
		
		if ((_1a86b1eba_Prim(_273637_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac071d3d:;
			{
				return _1a869c22a_evalPrimStatic(_self_, _1a86b7333_Str(_1a86b1eba_Prim(_273637_d.get()._field_Kind.ptr()).ptr()), _273651_si.get()._field_Ident);;
			}
		}
		else if ((_1a86b2707_Enum(_273637_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac071da4:;
			{
				return _1a8697775_evalEnumStatic(_self_, _1a86b2707_Enum(_273637_d.get()._field_Kind.ptr()), _273651_si.get()._field_Ident);;
			}
		}
		else if ((_1a86b296b_TypeEnum(_273637_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac071ba6:;
			{
				return _1a8697b2c_evalTypeEnumStatic(_self_, _1a86b296b_TypeEnum(_273637_d.get()._field_Kind.ptr()), _273651_si.get()._field_Ident);;
			}
		}
		else if ((_1a86b341c_Struct(_273637_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac071c1c:;
			{
				return _1a8697ed4_evalStructStatic(_self_, _1a86b341c_Struct(_273637_d.get()._field_Kind.ptr()), _273651_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1ac070e4c:;
			{
				_1a8683d6b_pushErr(_self_, _273651_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_273637_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac0708b9:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1ac07785a_comptimeObjSubIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a8909069_comptimeTypeInfo>* _275257_ct, jule::Ptr<_1a865dbe2_Data>* _275277_d, jule::Ptr<_1a889e608_SubIdentExpr>* _275288_si) {
	jule::Ptr<_1a865dbe2_Data> _275317_cd = _1a890e778_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_1a8683d6b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}

inline jule::Ptr<_1a865dbe2_Data> _1ac07b023_comptimeObjSubIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a88e5e57_comptimeStructField>* _275257_ct, jule::Ptr<_1a865dbe2_Data>* _275277_d, jule::Ptr<_1a889e608_SubIdentExpr>* _275288_si) {
	jule::Ptr<_1a865dbe2_Data> _275317_cd = _1a88ec47a_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_1a8683d6b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}

inline jule::Ptr<_1a865dbe2_Data> _1ac07e697_comptimeObjSubIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a8901cba_comptimeEnumField>* _275257_ct, jule::Ptr<_1a865dbe2_Data>* _275277_d, jule::Ptr<_1a889e608_SubIdentExpr>* _275288_si) {
	jule::Ptr<_1a865dbe2_Data> _275317_cd = _1a8902c00_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_1a8683d6b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}

inline jule::Ptr<_1a865dbe2_Data> _1ac0830d5_comptimeObjSubIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a890453c_comptimeParam>* _275257_ct, jule::Ptr<_1a865dbe2_Data>* _275277_d, jule::Ptr<_1a889e608_SubIdentExpr>* _275288_si) {
	jule::Ptr<_1a865dbe2_Data> _275317_cd = _1a89060bb_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_1a8683d6b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}

inline jule::Ptr<_1a865dbe2_Data> _1ac086759_comptimeObjSubIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a88edcb7_comptimeStatic>* _275257_ct, jule::Ptr<_1a865dbe2_Data>* _275277_d, jule::Ptr<_1a889e608_SubIdentExpr>* _275288_si) {
	jule::Ptr<_1a865dbe2_Data> _275317_cd = _1a890047d_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_1a8683d6b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}

inline jule::Ptr<_1a865dbe2_Data> _1ac089dcd_comptimeObjSubIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a890ea64_comptimeValue>* _275257_ct, jule::Ptr<_1a865dbe2_Data>* _275277_d, jule::Ptr<_1a889e608_SubIdentExpr>* _275288_si) {
	jule::Ptr<_1a865dbe2_Data> _275317_cd = _1a8911d74_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_1a8683d6b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}

inline jule::Ptr<_1a865dbe2_Data> _1ac08d552_comptimeObjSubIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a8913628_comptimeFile>* _275257_ct, jule::Ptr<_1a865dbe2_Data>* _275277_d, jule::Ptr<_1a889e608_SubIdentExpr>* _275288_si) {
	jule::Ptr<_1a865dbe2_Data> _275317_cd = _1a8914cde_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_1a8683d6b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a869cdda_evalObjSubIdent(_1a8683860_Eval* _self_, jule::Ptr<_1a865dbe2_Data> _276038_d, jule::Ptr<_1a889e608_SubIdentExpr> _276052_si) {
	if (_1a526ac64_IsIgnoreIdent(_276052_si.get()._field_Ident.get()._field_Kind)) {
		_1a8683d6b_pushErr(_self_, _276052_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if ((_1a86b5584_comptimeTypeInfo(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0756d2:;
			{
				jule::Ptr<_1a8909069_comptimeTypeInfo> _276821_ct = _1a86b5584_comptimeTypeInfo(_276038_d.get()._field_Kind.ptr());;
				return _1ac07785a_comptimeObjSubIdent(_self_, &(_276821_ct), &(_276038_d), &(_276052_si));;
			}
		}
		else if ((_1a86b4396_comptimeStructField(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac076073:;
			{
				jule::Ptr<_1a88e5e57_comptimeStructField> _277121_ct = _1a86b4396_comptimeStructField(_276038_d.get()._field_Kind.ptr());;
				return _1ac07b023_comptimeObjSubIdent(_self_, &(_277121_ct), &(_276038_d), &(_276052_si));;
			}
		}
		else if ((_1a86b486e_comptimeEnumField(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0760d9:;
			{
				jule::Ptr<_1a8901cba_comptimeEnumField> _277421_ct = _1a86b486e_comptimeEnumField(_276038_d.get()._field_Kind.ptr());;
				return _1ac07e697_comptimeObjSubIdent(_self_, &(_277421_ct), &(_276038_d), &(_276052_si));;
			}
		}
		else if ((_1a86b4d47_comptimeParam(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac076150:;
			{
				jule::Ptr<_1a890453c_comptimeParam> _277721_ct = _1a86b4d47_comptimeParam(_276038_d.get()._field_Kind.ptr());;
				return _1ac0830d5_comptimeObjSubIdent(_self_, &(_277721_ct), &(_276038_d), &(_276052_si));;
			}
		}
		else if ((_1a86b5a5c_comptimeStatic(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0761b6:;
			{
				jule::Ptr<_1a88edcb7_comptimeStatic> _278021_ct = _1a86b5a5c_comptimeStatic(_276038_d.get()._field_Kind.ptr());;
				return _1ac086759_comptimeObjSubIdent(_self_, &(_278021_ct), &(_276038_d), &(_276052_si));;
			}
		}
		else if ((_1a86b5cc1_comptimeValue(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac07622c:;
			{
				jule::Ptr<_1a890ea64_comptimeValue> _278321_ct = _1a86b5cc1_comptimeValue(_276038_d.get()._field_Kind.ptr());;
				return _1ac089dcd_comptimeObjSubIdent(_self_, &(_278321_ct), &(_276038_d), &(_276052_si));;
			}
		}
		else if ((_1a86b6035_comptimeFile(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac076293:;
			{
				jule::Ptr<_1a8913628_comptimeFile> _278621_ct = _1a86b6035_comptimeFile(_276038_d.get()._field_Kind.ptr());;
				return _1ac08d552_comptimeObjSubIdent(_self_, &(_278621_ct), &(_276038_d), &(_276052_si));;
			}
		}
		_match_end_1ac07579d:;
	};
	jule::Ptr<_1a86ae79d_TypeKind> _279017_kind = _276038_d.get()._field_Kind;;
	{
		
		if ((_1a86b2493_Ptr(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac089a37:;
			{
				jule::Ptr<_1a86bdcb8_Ptr> _279317_ptr = _1a86b2493_Ptr(_276038_d.get()._field_Kind.ptr());;
				if (_1a86be78b_IsUnsafe(_279317_ptr.ptr())) {
					goto _match_end_1ac07634d;
				};
				if (((!(_276052_si.get()._field_IsSelf)) && (!(_1a86847a6_isUnsafe(_self_))))) {
					_1a8683d6b_pushErr(_self_, _276052_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_279017_kind=_1a86b2493_Ptr(_276038_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1a86b222e_Sptr(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac090158:;
			{
				_279017_kind=_1a86b222e_Sptr(_276038_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1ac07634d:;
	};
	{
		
		if ((_1a86b3681_Trait(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac093524:;
			{
				return _1a8698435_evalTraitSubIdent(_self_, _276038_d, _1a86b3681_Trait(_276038_d.get()._field_Kind.ptr()), _276052_si.get()._field_Ident);;
			}
		}
		else if ((_1a86b341c_Struct(_279017_kind.ptr()) != nullptr)) {
			_case_begin_1ac09359b:;
			{
				jule::Ptr<_1a88b9b51_StructIns> _280917_s = _1a86b341c_Struct(_279017_kind.ptr());;
				if (_1a86a9b3e_isInstancedStruct(_280917_s)) {
					jule::Bool _281125_usedReferenceElem = (_1a86b222e_Sptr(_276038_d.get()._field_Kind.ptr()) != nullptr);;
					return _1a8698e5d_evalStructSubIdent(_self_, _276038_d, _1a86b341c_Struct(_279017_kind.ptr()), _276052_si, _281125_usedReferenceElem);;
				};
			}
		}
		else if ((_1a86b2e44_Slc(_279017_kind.ptr()) != nullptr)) {
			_case_begin_1ac093623:;
			{
				return _1a8699315_evalSliceSubIdent(_self_, _276038_d, _276052_si.get()._field_Ident);;
			}
		}
		else if ((_1a86b2bd0_Arr(_279017_kind.ptr()) != nullptr)) {
			_case_begin_1ac09369a:;
			{
				return _1a86996bc_evalArraySubIdent(_self_, _276038_d, _276052_si.get()._field_Ident);;
			}
		}
		_match_end_1ac093447:;
	};
	_1a8683d6b_pushErr(_self_, _276052_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_276038_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a869d1e8_evalSubIdent(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a889e608_SubIdentExpr> _282336_si) {
	jule::Ptr<_1a86ae79d_TypeKind> _282417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_282417_prefix;
	});;
	jule::Ptr<_1a865dbe2_Data> _282717_d = _1a869e5e5_evalExprKind(_self_, _282336_si.get()._field_Expr.get()._field_Kind);;
	if ((_282717_d == nullptr)) {
		return nullptr;;
	};
	if (_282717_d.get()._field_Decl) {
		return _1a869c5d2_evalTypeStatic(_self_.ptr(), _282717_d, _282336_si);;
	};
	return _1a869cdda_evalObjSubIdent(_self_.ptr(), _282717_d, _282336_si);;
}



inline jule::Ptr<_1a865dbe2_Data> _1a869d506_evalTuple(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a889bdec_TupleExpr> _283733_tup) {
	jule::Ptr<_1a86bbcb6_Tuple> _283817_tupT = jule::new_ptr<_1a86bbcb6_Tuple>();;
	_283817_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>>::alloc(0LL, _283733_tup.get()._field_Expr.len());
	jule::Ptr<_1a88c4b7d_TupleExprModel> _284117_model = jule::new_ptr<_1a88c4b7d_TupleExprModel>(_1a88c4b7d_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1a865dbe2_Data>>::alloc(0LL, _283733_tup.get()._field_Expr.len())});;
	jule::Bool _284517_ok = true;;
	{
		auto expr = &(_283733_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac09bad2:;
		if (it != expr_end) {
			jule::Ptr<_1a889b270_Expr> _284621_expr = *it;
			{
				jule::Ptr<_1a865dbe2_Data> _284721_d = _1a86a032c_evalExpr(_self_, _284621_expr);;
				if ((_284721_d == nullptr)) {
					_284517_ok=false;
					goto _iter_next_1ac09bad2;
				};
				{ jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> &__jule_push_dest = _283817_tupT.get()._field_Types; __jule_push_dest.push(_284721_d.get()._field_Kind); };
				{ jule::Slice<jule::Ptr<_1a865dbe2_Data>> &__jule_push_dest = _284117_model.get()._field_Datas; __jule_push_dest.push(_284721_d); };
			}
			_iter_next_1ac09bad2:;
			++it;
			goto _iter_begin_1ac09bad2;
		}
		_iter_end_1ac09bad2:;
	};
	if ((!(_284517_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_283817_tupT, 23)}), ._field_Model=jule::Any(_284117_model, &__jule_any_type87), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a869d8ad_evalMap(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a86bc767_Map> _286631_m, jule::Ptr<_1a88a185d_BraceLit> _286644_lit) {
	jule::Ptr<_1a88c2461_MapExprModel> _286717_model = jule::new_ptr<_1a88c2461_MapExprModel>(_1a88c2461_MapExprModel{._field_KeyKind=_286631_m.get()._field_Key, ._field_ValKind=_286631_m.get()._field_Val, });;
	{
		auto expr = &(_286644_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac09ed38:;
		if (it != expr_end) {
			jule::Ptr<_1a889b270_Expr> _287221_expr = *it;
			{
				{
					auto &_match_expr{ _287221_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1ac0a0553:;
						{
							goto _match_end_1ac0a05ec;
						}
					}
					else {
						_case_begin_1ac0a0784:;
						{
							_1a8683d6b_pushErr(_self_.ptr(), _286644_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ac0a05ec:;
				};
				jule::Ptr<_1a88a2243_KeyValPair> _288221_pair = _287221_expr.get()._field_Kind.cast_ptr<_1a88a2243_KeyValPair>(&__jule_any_type84);;
				jule::Ptr<_1a865dbe2_Data> _288421_key = _1a86a032c_evalExpr(_self_, _288221_pair.get()._field_Key);;
				if ((_288421_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1a865dbe2_Data> _288921_val = _1a86a032c_evalExpr(_self_, _288221_pair.get()._field_Val);;
				if ((_288921_val == nullptr)) {
					return nullptr;;
				};
				_1a8951215_checkAssignType(_self_.get()._field_s, false, &(_286631_m.get()._field_Key), &(_288421_key), _288221_pair.get()._field_Colon);
				_1a8951215_checkAssignType(_self_.get()._field_s, false, &(_286631_m.get()._field_Val), &(_288921_val), _288221_pair.get()._field_Colon);
				{ jule::Slice<jule::Ptr<_1a88c1edd_KeyValPairExprModel>> &__jule_push_dest = _286717_model.get()._field_Entries; __jule_push_dest.push(jule::new_ptr<_1a88c1edd_KeyValPairExprModel>(_1a88c1edd_KeyValPairExprModel{._field_Key=_288421_key.get()._field_Model, ._field_Val=_288921_val.get()._field_Model})); };
			}
			_iter_next_1ac09ed38:;
			++it;
			goto _iter_begin_1ac09ed38;
		}
		_iter_end_1ac09ed38:;
	};
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_286631_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_286717_model, &__jule_any_type102), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a869dbbb_evalBraceLit(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a185d_BraceLit> _291036_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1ac0a53e3:;
			{
				_1a8683d6b_pushErr(_self_.ptr(), _291036_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a86b38e5_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ac0a579a:;
			{
				return _1a869d8ad_evalMap(_self_, _1a86b38e5_Map(_self_.get()._field_prefix.ptr()), _291036_lit);;
			}
		}
		else if ((_1a86b341c_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ac0a5899:;
			{
				return _1a8695575_evalStructLitExplicit(_self_, _1a86b341c_Struct(_self_.get()._field_prefix.ptr()), _291036_lit.get()._field_Exprs, _291036_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1ac0a4cc7:;
			{
				_1a8683d6b_pushErr(_self_.ptr(), _291036_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac0a49ec:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869dec9_evalAnonFn(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a88a8722_FnDecl> _292534_decl) {
	_1a86c0ade_typeChecker _292617_tc = _1a86c0ade_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1a88cee0d_FnIns> _293117_ins = _1a86c7112_buildFn(&_292617_tc, _292534_decl);;
	if ((_293117_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ac0a931a:;
			{
				jule::Ptr<_1a8925eba_scopeChecker> _293721_sc = _self_.get()._field_lookup.cast_ptr<_1a8925eba_scopeChecker>(0);;
				jule::Ptr<_1a8925eba_scopeChecker> _293821_scc = _1a89363e8_newChildChecker(_293721_sc);;
				_293821_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a8924c33_scopeLabel>>>(nullptr);
				_293821_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a89251a6_scopeGoto>>>(nullptr);
				_293821_scc.get()._field_owner=nullptr;
				_293821_scc.get()._field_childIndex=0LL;
				_293821_scc.get()._field_it=0LLU;
				_293821_scc.get()._field_cse=0LLU;
				_293821_scc.get()._field_owner=_293117_ins;
				_1a89617ca_checkFnInsSc(_self_.get()._field_s.ptr(), &(_293117_ins), &(_293821_scc));
			}
		}
		else {
			_case_begin_1ac0a91c7:;
			{
				_1a8961d6e_checkFnIns(_self_.get()._field_s, &(_293117_ins));
			}
		}
		_match_end_1ac0a9172:;
	};
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_293117_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1a88c1b36_AnonFnExprModel>(_1a88c1b36_AnonFnExprModel{._field_Func=_293117_ins, ._field_Global=_1a8684a1a_isGlobal(_self_.ptr())}), &__jule_any_type103), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a869e2d7_evalBinop(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a889ea7b_BinopExpr> _296033_op) {
	_1a86a2571_binaryEval _296117_bs = static__1a86a2b48_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1a86b7003_Prim> _296417_prim = _1a86b1eba_Prim(_self_.get()._field_prefix.ptr());;
		if (((_296417_prim == nullptr) || (!(_1a55401ae_IsNum(_1a86b7333_Str(_296417_prim.ptr())))))) {
			jule::Ptr<_1a86ae79d_TypeKind> _296625_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_296625_prefix;
			});;
			return _1a86a80c1_eval(&_296117_bs, &(_296033_op));;
		};
	};
	return _1a86a80c1_eval(&_296117_bs, &(_296033_op));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a869e5e5_evalExprKind(jule::Ptr<_1a8683860_Eval> _self_, jule::Any _297536_kind) {
	{
		auto &_match_expr{ _297536_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ac0b0970:;
			{
				jule::Ptr<_1a889b55b_RangeExpr> _297821_e = _297536_kind.cast_ptr<_1a889b55b_RangeExpr>(&__jule_any_type104);;
				return _1a869e5e5_evalExprKind(_self_, _297821_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ac0b160d:;
			{
				return _1a86866ba_evalLit(_self_.ptr(), _297536_kind.cast_ptr<_1a889c2a4_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ac0b1674:;
			{
				return _1a868ab75_evalIdent(_self_.ptr(), _297536_kind.cast_ptr<_1a889cd65_IdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac0b1157:;
			{
				return _1a868ae83_evalUnary(_self_, _297536_kind.cast_ptr<_1a889d56e_UnaryExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ac0b11bd:;
			{
				return _1a868b291_evalVariadic(_self_, _297536_kind.cast_ptr<_1a889d926_VariadicExpr>(&__jule_any_type81));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ac0b1245:;
			{
				return _1a868b59e_evalUnsafe(_self_, _297536_kind.cast_ptr<_1a889c8e2_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ac0b12bc:;
			{
				return _1a868c11b_evalSliceExpr(_self_, _297536_kind.cast_ptr<_1a88a28b4_SliceExpr>(&__jule_any_type99));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ac0b16eb:;
			{
				return _1a8690460_evalIndexing(_self_, _297536_kind.cast_ptr<_1a88a3222_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ac0b1773:;
			{
				return _1a869162b_evalSlicing(_self_, _297536_kind.cast_ptr<_1a88a382c_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ac0b17ea:;
			{
				return _1a8694d16_evalCast(_self_, _297536_kind.cast_ptr<_1a889dccd_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ac0b1872:;
			{
				return _1a8695124_evalNsSelection(_self_.ptr(), _297536_kind.cast_ptr<_1a889e185_NsSelectionExpr>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac0b18e9:;
			{
				return _1a8695883_evalStructLit(_self_, _297536_kind.cast_ptr<_1a88a13da_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ac0b1971:;
			{
				return _1a8695e05_evalType(_self_.ptr(), _297536_kind.cast_ptr<_1a88970e5_TypeDecl>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac0b19e8:;
			{
				return _1a86973bd_evalFnCall(_self_, _297536_kind.cast_ptr<_1a88a0186_FnCallExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ac0b1a70:;
			{
				return _1a869d1e8_evalSubIdent(_self_, _297536_kind.cast_ptr<_1a889e608_SubIdentExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ac0b1ae7:;
			{
				return _1a869d506_evalTuple(_self_, _297536_kind.cast_ptr<_1a889bdec_TupleExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ac0b1b6e:;
			{
				return _1a869dbbb_evalBraceLit(_self_, _297536_kind.cast_ptr<_1a88a185d_BraceLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac0b1be6:;
			{
				return _1a869dec9_evalAnonFn(_self_, _297536_kind.cast_ptr<_1a88a8722_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ac0b1c6d:;
			{
				return _1a869e2d7_evalBinop(_self_, _297536_kind.cast_ptr<_1a889ea7b_BinopExpr>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1ac0b1058:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac0b1003:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a869e903_eval1(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a889b270_Expr> _302329_expr) {
	jule::Ptr<_1a865dbe2_Data> _302417_d = _1a869e5e5_evalExprKind(_self_, _302329_expr.get()._field_Kind);;
	if (((_302417_d == nullptr) || (_302417_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1a86b31a8_Fn(_302417_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0bb1ea:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _303121_f = _1a86b31a8_Fn(_302417_d.get()._field_Kind.ptr());;
				if (_1a88d1294_IsBuiltin(_303121_f.ptr())) {
					_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _302329_expr.get()._field_Token, jule::Str("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1ac0baae0;
				};
				if ((_303121_f.get()._field_Generics.len() != _303121_f.get()._field_Decl.get()._field_Generics.len())) {
					_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _302329_expr.get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!(_303121_f.get()._field_Decl.get()._field_Statically)) && _1a88cc933_IsMethod(_303121_f.get()._field_Decl.ptr()))) {
					_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _302329_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1ac0baae0:;
	};
	return _302417_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a869ec11_eval(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a889b270_Expr> _305028_expr) {
	jule::Ptr<_1a865dbe2_Data> _305117_d = _1a869e903_eval1(_self_, _305028_expr);;
	if ((_305117_d == nullptr)) {
		return nullptr;;
	};
	if ((((_self_.get()._field_owner == nullptr) || (!(_self_.get()._field_owner.get()._field_Constant))) && _1a86b3dbd_comptime(_305117_d.get()._field_Kind.ptr()))) {
		_1a8948e77_pushErr(_self_.get()._field_s.ptr(), _305028_expr.get()._field_Token, jule::Str("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _305117_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a001e_evalExpr1(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a889b270_Expr> _306533_expr) {
	jule::Ptr<_1a865dbe2_Data> _306617_d = _1a869e903_eval1(_self_, _306533_expr);;
	{
		
		if ((_306617_d == nullptr)) {
			_case_begin_1ac0c1db0:;
			{
				return nullptr;;
			}
		}
		else if (_306617_d.get()._field_Decl) {
			_case_begin_1ac0c1e37:;
			{
				_1a8683d6b_pushErr(_self_.ptr(), _306533_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ac0c1d16:;
			{
				return _306617_d;;
			}
		}
		_match_end_1ac0c1c7d:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a032c_evalExpr(jule::Ptr<_1a8683860_Eval> _self_, jule::Ptr<_1a889b270_Expr> _308132_expr) {
	jule::Ptr<_1a865dbe2_Data> _308217_d = _1a869ec11_eval(_self_, _308132_expr);;
	{
		
		if ((_308217_d == nullptr)) {
			_case_begin_1ac0c38b7:;
			{
				return nullptr;;
			}
		}
		else if (_308217_d.get()._field_Decl) {
			_case_begin_1ac0c393e:;
			{
				_1a8683d6b_pushErr(_self_.ptr(), _308132_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ac0c381d:;
			{
				return _308217_d;;
			}
		}
		_match_end_1ac0c3774:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a8683860_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a86a07a0_unaryEval static__1a86a0bce_new(jule::Ptr<_1a8683860_Eval> _310223_e) {
	return _1a86a07a0_unaryEval{._field_e=_310223_e, };;
}



inline void _1a86a0daa_minus(_1a86a07a0_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1ac0c527b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a86b1eba_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0c4e5c:;
			{
				if ((!(_1a55401ae_IsNum(_1a86aeb55_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a86b341c_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0c4ec3:;
			{
				if ((_1a86b341c_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ac0c4de6:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac0c4c09:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1a865e50b_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a5544d0c_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ac0c8eb6:;
				{
					_1a5543e1b_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1a5542964_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a554435b_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ac0c903d:;
				{
					_1a5543426_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1a5541eb3_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a55445c0_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ac0c90b5:;
				{
					_1a5543426_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1a5542bc8_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1ac0c8acb:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3140:17"));;
				}
			}
			_match_end_1ac0c8a10:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88be3c5_UnaryExprModel>(_1a88be3c5_UnaryExprModel{._field_Expr=jule::new_ptr<_1a865dbe2_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1a86a1086_plus(_1a86a07a0_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1ac0cceba:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a86b1eba_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0ccb8a:;
			{
				if ((!(_1a55401ae_IsNum(_1a86aeb55_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a86b341c_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0ccc01:;
			{
				if ((_1a86b341c_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ac0ccb24:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac0cca58:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1a865e50b_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a5544d0c_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ac0d1c05:;
				{
					_1a5543e1b_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1a5542964_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a554435b_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ac0d1c7c:;
				{
					_1a5543426_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1a5541eb3_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a55445c0_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ac0d1d04:;
				{
					_1a5543426_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1a5542bc8_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1ac0d181a:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3185:17"));;
				}
			}
			_match_end_1ac0d174e:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88be3c5_UnaryExprModel>(_1a88be3c5_UnaryExprModel{._field_Expr=jule::new_ptr<_1a865dbe2_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1a86a1262_caret(_1a86a07a0_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1ac0d5c09:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a86b1eba_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0d58c9:;
			{
				if ((!(_1a553eae8_IsInt(_1a86aeb55_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a86b341c_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0d5940:;
			{
				if ((_1a86b341c_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ac0d5863:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac0d5797:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1a865e50b_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a554435b_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ac0d9933:;
				{
					_1a5543426_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1a5541eb3_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a55445c0_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ac0d99aa:;
				{
					_1a554369b_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1a5542227_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1ac0d9559:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3228:17"));;
				}
			}
			_match_end_1ac0d948d:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88be3c5_UnaryExprModel>(_1a88be3c5_UnaryExprModel{._field_Expr=jule::new_ptr<_1a865dbe2_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1a86a143d_excl(_1a86a07a0_unaryEval* _self_) {
	jule::Ptr<_1a86b7003_Prim> _324213_t = _1a86b1eba_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_324213_t == nullptr) || (!(_1a86b9e90_IsBool(_324213_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1a865e50b_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a5544834_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ac0de707:;
				{
					_1a5543921_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_1a554248b_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1ac0de33e:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3256:17"));;
				}
			}
			_match_end_1ac0de273:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88be3c5_UnaryExprModel>(_1a88be3c5_UnaryExprModel{._field_Expr=jule::new_ptr<_1a865dbe2_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1a86a1619_star(_1a86a07a0_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88be3c5_UnaryExprModel>(_1a88be3c5_UnaryExprModel{._field_Expr=jule::new_ptr<_1a865dbe2_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_1a86b2493_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0e2331:;
			{
				if ((!(_1a86847a6_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a86bdcb8_Ptr> _328121_t = _1a86b2493_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1a86be78b_IsUnsafe(_328121_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_328121_t.get()._field_Elem;
				(*(_self_))._field_d.get()._field_Mutable=true;
			}
		}
		else if ((_1a86b222e_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac0e2023:;
			{
				(*(_self_))._field_d.get()._field_Kind=_1a86b222e_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1ac0e1eac:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac0e1253:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _1a86a17e5_amper(_1a86a07a0_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ac0e8b95:;
			{
				jule::Ptr<_1a88bec44_StructLitExprModel> _330221_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_1a88bec44_StructLitExprModel>(&__jule_any_type100);;
				_1a86a8d5d_makeStructLitAlloc(&((*(_self_))._field_d), &(_330221_lit));
			}
		}
		else {
			_case_begin_1ac0e65bb:;
			{
				{
					
					if (_1a86c928a_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1ac0e6258:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a86bdcb8_Ptr>(_1a86bdcb8_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 26)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88be3c5_UnaryExprModel>(_1a88be3c5_UnaryExprModel{._field_Expr=jule::new_ptr<_1a865dbe2_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_1ac0e6ab6:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1ac0e69ea:;
				};
			}
		}
		_match_end_1ac0e6544:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
}



inline void _1a86a19c1_typeDecl(_1a86a07a0_unaryEval* _self_) {
	_1a86c0ade_typeChecker _332617_tc = _1a86c0ade_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac0ea2a1:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86c59a1_buildPtrFromType(&_332617_tc, &((*(_self_))._field_d.get()._field_Kind)), 26)});
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac0ec98a:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a86c5385_buildSptrFromType(&_332617_tc, &((*(_self_))._field_d.get()._field_Kind)), 21)});
			}
		}
		else {
			_case_begin_1ac0eb417:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ac0eb3b2:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _1a86a1b9c_evalData(_1a86a07a0_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac0eedee:;
			{
				jule::Ptr<_1a86ae79d_TypeKind> _334921_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_1a869ec11_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
				(*(_self_))._field_e.get()._field_prefix=_334921_prefix;
			}
		}
		else {
			_case_begin_1ac0ee9c0:;
			{
				(*(_self_))._field_d=_1a869ec11_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
			}
		}
		_match_end_1ac0ee96a:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a1eaa_eval(_1a86a07a0_unaryEval* _self_, jule::Ptr<_1a889d56e_UnaryExpr> _335827_u) {
	(*(_self_))._field_u=_335827_u;
	_1a86a1b9c_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_1a86a19c1_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1a86ae79d_TypeKind> _336913_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ac103d6a:;
			{
				_1a86a0daa_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ac10385e:;
			{
				_1a86a1086_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac1038c5:;
			{
				_1a86a1262_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1ac10393b:;
			{
				_1a86a143d_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac1039a2:;
			{
				_1a86a1619_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac104013:;
			{
				_1a86a17e5_amper(_self_);
			}
		}
		else {
			_case_begin_1ac1037e8:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1ac103793:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ac104079:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str(_336913_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_1a865e50b_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1ac105ba2:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1ac105e38:;
	};
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86a07a0_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1a86a2571_binaryEval static__1a86a2b48_newPlain(jule::Ptr<_1a8683860_Eval> _340628_e) {
	return _1a86a2571_binaryEval{._field_e=_340628_e, };;
}



inline _1a86a2571_binaryEval static__1a86a2e56_new(jule::Ptr<_1a8683860_Eval> _341223_e, jule::Ptr<_1a52684c0_Token> _341237_op) {
	return _1a86a2571_binaryEval{._field_e=_341223_e, ._field_op=_341237_op};;
}



inline jule::Bool _1a86a31ba_checkTypeCompatibility(_1a86a2571_binaryEval* _self_) {
	return _1a8951666_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1a86a3462_checkStructCommonOperatorCompatibility(_1a86a2571_binaryEval* _self_) {
	jule::Ptr<_1a88cee0d_FnIns> _342617_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ac10b1a2:;
			{
				_342617_overload=_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ac109a74:;
			{
				_342617_overload=_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ac10b0a3:;
			{
				_342617_overload=_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ac10a107:;
			{
				_342617_overload=_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ac10a16d:;
			{
				_342617_overload=_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac10b218:;
			{
				_342617_overload=_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ac10b27e:;
			{
				_342617_overload=_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac10b2e5:;
			{
				_342617_overload=_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ac10b35b:;
			{
				_342617_overload=_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac10b3c2:;
			{
				_342617_overload=_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1ac109ec5:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1ac109e4d:;
	};
	if ((_342617_overload == nullptr)) {
		_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1a88ce03e_ParamIns> _345817_p = _342617_overload.get()._field_Params[1LL];;
	return _1a8951215_checkAssignType((*(_self_))._field_e.get()._field_s, _345817_p.get()._field_Decl.get()._field_Reference, &(_345817_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a3709_evalComptimeTypeInfo(_1a86a2571_binaryEval* _self_) {
	jule::Ptr<_1a8909069_comptimeTypeInfo> _346317_r = _1a86b5584_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((_346317_r == nullptr)) {
		_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("comptimeTypeInfo", 16), &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a8909069_comptimeTypeInfo> _346817_l = _1a86b5584_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1abed8d71:;
			{
				jule::Ptr<_1a55406ba_Const> _347121_constant = static__1a5541138_NewBool(_1a86aee63_Equal(_346817_l.get()._field_base, _346317_r.get()._field_base));;
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_347121_constant, &__jule_any_type19), ._field_Constant=_347121_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac116eb0:;
			{
				jule::Ptr<_1a55406ba_Const> _347821_constant = static__1a5541138_NewBool((!(_1a86aee63_Equal(_346817_l.get()._field_base, _346317_r.get()._field_base))));;
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, ._field_Model=jule::Any(_347821_constant, &__jule_any_type19), ._field_Constant=_347821_constant});;
			}
		}
		else {
			_case_begin_1ac115e26:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac115dc1:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a396d_evalNil(_1a86a2571_binaryEval* _self_) {
	if ((!(_1a86b1519_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac118db3:;
			{
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else {
			_case_begin_1ac11a436:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac11a38c:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a3bd2_evalEnum(_1a86a2571_binaryEval* _self_) {
	jule::Ptr<_1a88e1c11_Enum> _350917_enm = _1a86b2707_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac11c306:;
			{
				jule::Ptr<_1a86ae79d_TypeKind> _351321_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_1a86b2707_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_351321_rkind=_1a86b2707_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1a8951666_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_350917_enm.get()._field_Kind.get()._field_Kind), &(_351321_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		_match_end_1ac11c27e:;
	};
	if (((_1a86b2707_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_350917_enm != _1a86b2707_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_350917_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ac11b28e:;
			{
				if ((!(_1a55401ae_IsNum(_1a86aeb55_Str(_350917_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_350917_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac1220b9:;
			{
				jule::Ptr<_1a88e121b_EnumItem> _354317_first = _350917_enm.get()._field_Items[0LL];;
				{
					
					if (_1a554435b_IsI64(_354317_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1ac124ab1:;
						{
							if ((_1a5541eb3_ReadI64(_354317_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else if (_1a55445c0_IsU64(_354317_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1ac1241dc:;
						{
							if ((_1a5542227_ReadU64(_354317_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else {
						_case_begin_1ac12471a:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3556:17"));;
						}
					}
					_match_end_1ac1246a4:;
				};
				_julec_label_err:;
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_350917_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_1a868418a_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_next:;
				goto _case_begin_1ac122130;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac122130:;
			{
				if (((_1a86b1eba_Prim(_350917_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1a553eae8_IsInt(_1a86b7333_Str(_1a86b1eba_Prim(_350917_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_350917_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ac1211b7:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_350917_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac1210c9:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a3e46_evalTypeEnum(_1a86a2571_binaryEval* _self_) {
	jule::Ptr<_1a88e330b_TypeEnum> _357617_enm = _1a86b296b_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_1a86a31ba_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac12bdc6:;
			{
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else {
			_case_begin_1ac12b986:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a88e363b_Str(_357617_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac12b656:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a41aa_evalSptr(_1a86a2571_binaryEval* _self_) {
	if ((!(_1a86a31ba_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac12d757:;
			{
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else {
			_case_begin_1ac12d878:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac12cca6:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a441e_evalPtr(_1a86a2571_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ac13024d:;
			{
				if ((!(_1a86a31ba_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ac13143b:;
			{
				if ((_1a86b2493_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_1a86be78b_IsUnsafe(_1a86b2493_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_1a86a9ea2_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ac12ec31:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac12ebcb:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a4683_evalArr(_1a86a2571_binaryEval* _self_) {
	if ((!(_1a86a31ba_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac1362dc:;
			{
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else {
			_case_begin_1ac1363b9:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac132030:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a48e7_evalSlc(_1a86a2571_binaryEval* _self_) {
	if ((!(_1a86a31ba_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac138201:;
			{
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else {
			_case_begin_1ac138322:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac137750:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a4b5b_evalStruct(_1a86a2571_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ac139741:;
			{
				if ((_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ac1397b8:;
			{
				if ((_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1ac139e28:;
			{
				if ((_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ac139e8e:;
			{
				if ((_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac13a005:;
			{
				if ((!(_1a86a31ba_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		_match_end_1ac139675:;
	};
	if ((!(_1a86a3462_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a4dc0_evalTrait(_1a86a2571_binaryEval* _self_) {
	if ((!(_1a86a31ba_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac143173:;
			{
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else {
			_case_begin_1ac143294:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac142eb9:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a5134_evalAny(_1a86a2571_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac144b69:;
			{
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else {
			_case_begin_1ac14464c:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac1445e7:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a5398_evalBool(_1a86a2571_binaryEval* _self_) {
	if ((!(_1a86a31ba_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ac1467d6:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ac146907:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac145d35:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a560c_evalStr(_1a86a2571_binaryEval* _self_) {
	jule::Str _377517_rk = _1a86aeb55_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_377517_rk.equal("str", 3))) {
		_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_377517_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ac148464:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ac14a785:;
			{
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		else {
			_case_begin_1ac148cc2:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac148c6c:;
	};
}



inline void _1a86a57d8_setTypeToGreater(_1a86a2571_binaryEval* _self_) {
	jule::Ptr<_1a86b7003_Prim> _380013_lp = _1a86b1eba_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1a86b7003_Prim> _380113_rp = _1a86b1eba_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_1a865e50b_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1a865e50b_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_380113_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1a865e50b_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_380013_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1a865e50b_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_380113_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1a553d531_IsGreater(_380113_rp.get()._field_Kind, _380013_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1a865e50b_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_380113_rp.get()._field_Kind;
		};
	};
}



inline void _1a86a5a2a_checkModData(_1a86a2571_binaryEval* _self_, jule::Ptr<_1a865dbe2_Data>* _383336_d) {
	if ((!(_1a865e50b_IsConst((*(_383336_d)).ptr())))) {
		if (((_1a86b1eba_Prim((*(_383336_d)).get()._field_Kind.ptr()) == nullptr) || (!(_1a553eae8_IsInt(_1a86b1eba_Prim((*(_383336_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a8998889_sigAssignable(jule::Str("i64", 3), _383336_d)) {
			_case_begin_1ac154d22:;
			{
				_1a5543426_SetI64((*(_383336_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1a5542bc8_AsI64((*(_383336_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1a8998c1e_unsigAssignable(jule::Str("u64", 3), _383336_d)) {
			_case_begin_1ac154a25:;
			{
				_1a554369b_SetU64((*(_383336_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1a5542e3c_AsU64((*(_383336_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1ac1535a1:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac15354b:;
	};
}



inline void _1a86a5c06_mod(_1a86a2571_binaryEval* _self_) {
	_1a86a5a2a_checkModData(_self_, &((*(_self_))._field_l));
	_1a86a5a2a_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1a86a60ad_numbersAreCompatibile(_1a86a2571_binaryEval* _self_, jule::Str* _385537_lk, jule::Str* _385547_rk) {
	if ((!(_1a55401ae_IsNum((*(_385547_rk)))))) {
		return false;;
	};
	if ((_1a865e50b_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_385537_lk)).equal("f32", 3)) {
		if ((_1a865e50b_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_385547_rk)).equal("f32", 3);;
	};
	if ((*(_385537_lk)).equal("f64", 3)) {
		if ((_1a865e50b_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_385547_rk)).equal("f64", 3);;
	};
	if ((_1a865e50b_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_385537_lk)) == (*(_385547_rk)));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a6322_evalFloat(_1a86a2571_binaryEval* _self_) {
	jule::Str _388113_lk = _1a86b1eba_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _388213_rk = _1a86b1eba_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1a86a60ad_numbersAreCompatibile(_self_, &(_388113_lk), &(_388213_rk))))) {
		_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_388113_lk, &__jule_any_type5),jule::Any(_388213_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ac15c8eb:;
			{
				if (((!(_1a865e50b_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a8999060_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_388113_lk, &__jule_any_type5),jule::Any(_388213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_1a865e50b_IsConst((*(_self_))._field_r.ptr()))) || (!(_1a8999060_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_388113_lk, &__jule_any_type5),jule::Any(_388213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1a5543426_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a5542bc8_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_1a554369b_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a5542e3c_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_1a86a9787_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ac15bdb2:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ac1620b5:;
			{
				_1a86a57d8_setTypeToGreater(_self_);
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		_match_end_1ac162060:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ac15bbb4:;
			{
				_1a86a57d8_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ac164051:;
			{
				if ((!(_1a553eae8_IsInt(_388213_rk)))) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_388113_lk, &__jule_any_type5),jule::Any(_388213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1a86a5c06_mod(_self_);
				_1a86a57d8_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1ac1633c4:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac162e2e:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a6586_evalInt(_1a86a2571_binaryEval* _self_) {
	jule::Str _394513_lk = _1a86b1eba_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _394613_rk = _1a86b1eba_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ac1647c1:;
			{
				if (((!(_1a553eae8_IsInt(_394513_lk))) || (!(_1a553eae8_IsInt(_394613_rk))))) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_394513_lk, &__jule_any_type5),jule::Any(_394613_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_1a86a9787_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1ac1671b9:;
	};
	if ((!(_1a86a60ad_numbersAreCompatibile(_self_, &(_394513_lk), &(_394613_rk))))) {
		_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_394513_lk, &__jule_any_type5),jule::Any(_394613_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ac16ed4d:;
			{
				return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773ee4_primBool, });;
			}
		}
		_match_end_1ac16ec60:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac1672eb:;
			{
				_1a86a57d8_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ac171aec:;
			{
				_1a86a5c06_mod(_self_);
				_1a86a57d8_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ac170d71:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac17106e:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a67ea_evalPrim(_1a86a2571_binaryEval* _self_) {
	jule::Ptr<_1a86b7003_Prim> _400213_prim = _1a86b1eba_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1a86b9e90_IsBool(_400213_prim.ptr())) {
			_case_begin_1ac173ca8:;
			{
				return _1a86a5398_evalBool(_self_);;
			}
		}
		else if (_1a86ba204_IsStr(_400213_prim.ptr())) {
			_case_begin_1ac173d30:;
			{
				return _1a86a560c_evalStr(_self_);;
			}
		}
		_match_end_1ac173bed:;
	};
	if ((_1a86b1eba_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a86b7333_Str(_400213_prim.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_1a553ee17_IsFloat(_400213_prim.get()._field_Kind)) {
			_case_begin_1ac1763c6:;
			{
				return _1a86a6322_evalFloat(_self_);;
			}
		}
		else if (_1a553eae8_IsInt(_400213_prim.get()._field_Kind)) {
			_case_begin_1ac175c99:;
			{
				return _1a86a6586_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1ac175c33:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac17090e:;
	};
}



inline void _1a86a69c6_checkSpecialCases(_1a86a2571_binaryEval* _self_) {
	if (((!(_1a86b0ccc_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_1a86b0804_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_1a86b0ccc_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_1a86b0804_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a6c3a_evalOp(_1a86a2571_binaryEval* _self_) {
	_1a86a69c6_checkSpecialCases(_self_);
	{
		
		if (_1a86b0a68_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1ac17a155:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if ((_1a86b5584_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac179a39:;
			{
				({
					jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ac17b0bd;
			}
		}
		else if ((_1a86b5584_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b0bd:;
			{
				return _1a86a3709_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1a86b1eba_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _1a86ba468_IsAny(_1a86b1eba_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ac17b1ab:;
			{
				({
					jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ac17b277;
			}
		}
		else if (_1a86b0804_IsNil((*(_self_))._field_r.get()._field_Kind.ptr())) {
			_case_begin_1ac17b277:;
			{
				({
					jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ac17b2dd;
			}
		}
		else if (_1a86b0804_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1ac17b2dd:;
			{
				return _1a86a396d_evalNil(_self_);;
			}
		}
		else if (((_1a86b1eba_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _1a86ba468_IsAny(_1a86b1eba_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ac17b354:;
			{
				return _1a86a5134_evalAny(_self_);;
			}
		}
		else if ((_1a86b296b_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b3ba:;
			{
				({
					jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ac17b431;
			}
		}
		else if ((_1a86b296b_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b431:;
			{
				return _1a86a3e46_evalTypeEnum(_self_);;
			}
		}
		else if ((_1a86b2707_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b497:;
			{
				({
					jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ac17b50d;
			}
		}
		else if ((_1a86b2707_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b50d:;
			{
				return _1a86a3bd2_evalEnum(_self_);;
			}
		}
		else if ((_1a86b222e_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b574:;
			{
				({
					jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ac17b5da;
			}
		}
		else if ((_1a86b222e_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b5da:;
			{
				return _1a86a41aa_evalSptr(_self_);;
			}
		}
		else if ((_1a86b2493_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b651:;
			{
				({
					jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ac17b6b7;
			}
		}
		else if ((_1a86b2493_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b6b7:;
			{
				return _1a86a441e_evalPtr(_self_);;
			}
		}
		else if ((_1a86b2bd0_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b72d:;
			{
				return _1a86a4683_evalArr(_self_);;
			}
		}
		else if ((_1a86b2e44_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b794:;
			{
				return _1a86a48e7_evalSlc(_self_);;
			}
		}
		else if ((_1a86b3681_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b80a:;
			{
				({
					jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ac17b871;
			}
		}
		else if ((_1a86b3681_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b871:;
			{
				return _1a86a4dc0_evalTrait(_self_);;
			}
		}
		else if ((_1a86b341c_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b8d7:;
			{
				return _1a86a4b5b_evalStruct(_self_);;
			}
		}
		else if ((_1a86b1eba_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac17b94d:;
			{
				return _1a86a67ea_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1ac179e57:;
			{
				_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a86aeb55_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac179de1:;
	};
}



inline void _1a86a6eb0_evalConst(_1a86a2571_binaryEval* _self_, jule::Ptr<_1a865dbe2_Data>* _409333_d) {
	{
		
		if (((*(_409333_d)) == nullptr) || ((*(_self_))._field_l.get()._field_Model == nullptr) || ((*(_self_))._field_r.get()._field_Model == nullptr)) {
			_case_begin_1ac18b1cc:;
			{
				return;;
			}
		}
		else if ((!(_1a865e50b_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a865e50b_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1ac18b7c6:;
			{
				(*(_409333_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1ac18b0bc:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ac18d498:;
			{
				(*(_409333_d)).get()._field_Constant=static__1a5541138_NewBool(_1a5545ca8_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac18d50e:;
			{
				(*(_409333_d)).get()._field_Constant=static__1a5541138_NewBool((!(_1a5545ca8_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ac18d575:;
			{
				(*(_409333_d)).get()._field_Constant=static__1a5541138_NewBool(_1a554599a_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ac18d5db:;
			{
				(*(_409333_d)).get()._field_Constant=static__1a5541138_NewBool(_1a554568c_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ac18d652:;
			{
				(*(_409333_d)).get()._field_Constant=static__1a5541138_NewBool(_1a55466d2_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1ac18d6b8:;
			{
				(*(_409333_d)).get()._field_Constant=static__1a5541138_NewBool(_1a55460b6_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ac18d72e:;
			{
				(*(_409333_d)).get()._field_Constant=static__1a5541138_NewBool(_1a55469e0_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ac18d795:;
			{
				(*(_409333_d)).get()._field_Constant=static__1a5541138_NewBool(_1a55463c4_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ac18d80b:;
			{
				_1a5546ced_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ac18d872:;
			{
				_1a554710b_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac18d8d8:;
			{
				_1a5547419_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ac18d94e:;
			{
				jule::Bool _413217_ok = _1a5547727_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_413217_ok)) && (_1a55431a1_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_1a86b7003_Prim> _413721_prim = _1a86b1eba_Prim((*(_409333_d)).get()._field_Kind.ptr());;
				{
					
					if (_1a553e565_IsSigInt(_413721_prim.get()._field_Kind)) {
						_case_begin_1ac19a3ea:;
						{
							_1a5543426_SetI64((*(_409333_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1a5542bc8_AsI64((*(_409333_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_1a553e851_IsUnsigInt(_413721_prim.get()._field_Kind)) {
						_case_begin_1ac19a472:;
						{
							_1a554369b_SetU64((*(_409333_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1a5542e3c_AsU64((*(_409333_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_1ac19a340:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ac18d9c6:;
			{
				jule::Bool _414517_ok = _1a5547a35_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_414517_ok)) && (_1a55431a1_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ac18da4d:;
			{
				_1a5548151_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac18dac5:;
			{
				_1a5547d43_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac18db4c:;
			{
				_1a554845e_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ac18dbc4:;
			{
				_1a554876c_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ac18dc4b:;
			{
				_1a5548a7a_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_1ac18cc5b:;
	};
	(*(_409333_d)).get()._field_Model=jule::Any((*(_409333_d)).get()._field_Constant, &__jule_any_type19);
	_1a86aac2d_applyCastModelByEnum(_409333_d, _1a86b2707_Enum((*(_409333_d)).get()._field_Kind.ptr()));
}



inline void _1a86a7235_checkData(_1a86a2571_binaryEval* _self_, jule::Ptr<_1a865dbe2_Data>* _417033_d) {
	jule::Ptr<_1a88cee0d_FnIns> _417113_f = _1a86b31a8_Fn((*(_417033_d)).get()._field_Kind.ptr());;
	if ((((_417113_f != nullptr) && (_417113_f.get()._field_Decl != nullptr)) && _1a88cc933_IsMethod(_417113_f.get()._field_Decl.ptr()))) {
		_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1a86a7411_checkDatas(_1a86a2571_binaryEval* _self_) {
	_1a86a7235_checkData(_self_, &((*(_self_))._field_l));
	_1a86a7235_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1a86a7686_setModel(_1a86a2571_binaryEval* _self_, jule::Ptr<_1a865dbe2_Data>* _418232_d) {
	if (_1a865e50b_IsConst((*(_418232_d)).ptr())) {
		if (((_1a865e50b_IsConst((*(_self_))._field_l.ptr()) && _1a865e50b_IsConst((*(_self_))._field_r.ptr())) || (((*(_self_))._field_l.get()._field_Model == nullptr) && ((*(_self_))._field_r.get()._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1a865dbe2_Data> _419118_l;;
	jule::Ptr<_1a865dbe2_Data> _419125_r;;
	({
		jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_419118_l = ___jule_assign_arg;
		_419125_r = _1___jule_assign_arg;
	});
	if ((!(_1a865e819_GoodOperand(_419118_l.ptr(), &(_419125_r))))) {
		({
			jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = _419125_r;
			jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = _419118_l;
			_419118_l = ___jule_assign_arg;
			_419125_r = _1___jule_assign_arg;
		});
	};
	(*(_418232_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88be01d_BinopExprModel>(_1a88be01d_BinopExprModel{._field_Left=jule::new_ptr<_1a88bda56_OperandExprModel>(_1a88bda56_OperandExprModel{._field_Kind=_419118_l.get()._field_Kind, ._field_Model=_419118_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1a88bda56_OperandExprModel>(_1a88bda56_OperandExprModel{._field_Kind=_419125_r.get()._field_Kind, ._field_Model=_419125_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _1a86a790b_postEval(_1a86a2571_binaryEval* _self_, jule::Ptr<_1a865dbe2_Data>* _420932_d) {
	(*(_420932_d)).get()._field_Lvalue=false;
	_1a86a7686_setModel(_self_, _420932_d);
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a7cb3_solveExplicit(_1a86a2571_binaryEval* _self_, jule::Ptr<_1a865dbe2_Data>* _421437_l, jule::Ptr<_1a865dbe2_Data>* _421452_r) {
	({
		jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = (*(_421437_l));
		jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = (*(_421452_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a86a7411_checkDatas(_self_);
	jule::Ptr<_1a865dbe2_Data> _421917_d = _1a86a6c3a_evalOp(_self_);;
	({
		jule::Ptr<_1a865dbe2_Data> ___jule_assign_arg = (*(_421437_l));
		jule::Ptr<_1a865dbe2_Data> _1___jule_assign_arg = (*(_421452_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a86a6eb0_evalConst(_self_, &(_421917_d));
	if ((_421917_d != nullptr)) {
		_421917_d.get()._field_Mutable=true;
		_1a86a790b_postEval(_self_, &(_421917_d));
	};
	return _421917_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a86a80c1_eval(_1a86a2571_binaryEval* _self_, jule::Ptr<_1a889ea7b_BinopExpr>* _423428_op) {
	if (((*(_423428_op)).get()._field_Op.get()._field_Id == static_cast<jule::U64>(71LLU))) {
		_1a8683d6b_pushErr((*(_self_))._field_e.ptr(), (*(_423428_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1a868418a_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a865dbe2_Data> _424117_l = _1a86a001e_evalExpr1((*(_self_))._field_e, (*(_423428_op)).get()._field_Left);;
	if (((_424117_l == nullptr) || (_424117_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1a86ae79d_TypeKind> _424617_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_424117_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_424617_prefix;
	});;
	jule::Ptr<_1a865dbe2_Data> _424917_r = _1a86a001e_evalExpr1((*(_self_))._field_e, (*(_423428_op)).get()._field_Right);;
	if (((_424917_r == nullptr) || (_424917_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_423428_op)).get()._field_Op;
	jule::Ptr<_1a865dbe2_Data> _425617_d = _1a86a7cb3_solveExplicit(_self_, &(_424117_l), &(_424917_r));;
	if ((((_425617_d != nullptr) && _424117_l.get()._field_IsRune) && _424917_r.get()._field_IsRune)) {
		_425617_d.get()._field_IsRune=true;
	};
	return _425617_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86a2571_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86ad01b_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86ada55_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a86aeb55_Str(_1a86ae79d_TypeKind* _self_) {
	if (_1a86b0804_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		(_7417_kind).append("...", 3);
	};
	if (_1a86b0590_Binded(_self_)) {
		(_7417_kind).append("cpp.", 4);
		_7417_kind+=(*(_self_))._field_BindIdent;
	} else {
		_7417_kind+=_1a86ae33b_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1a86addda_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _1a86aee63_Equal(jule::Ptr<_1a86ae79d_TypeKind> _self_, jule::Ptr<_1a86ae79d_TypeKind> _9021_other) {
	if (_1a86b0804_IsNil(_self_.ptr())) {
		return _1a86b0804_IsNil(_9021_other.ptr());;
	};
	if (_1a86b0590_Binded(_self_.ptr())) {
		return (_1a86b0590_Binded(_9021_other.ptr()) && (_self_.get()._field_BindIdent == _9021_other.get()._field_BindIdent));;
	};
	return _1a86ae33b_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1a86ae1e8_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1a86b0590_Binded(_1a86ae79d_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1a86b0804_IsNil(_1a86ae79d_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1a86b0a68_Void(_1a86ae79d_TypeKind* _self_) {
	jule::Ptr<_1a86b7003_Prim> _11013_prim = _1a86b1eba_Prim(_self_);;
	return ((_11013_prim != nullptr) && _11013_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _1a86b0ccc_Comparable(_1a86ae79d_TypeKind* _self_) {
	{
		_1a86ae79d_TypeKind* _11721__self = (&((*(_self_))));;
		if ((_1a86b341c_Struct(_11721__self) != nullptr)) {
			return _1a86b341c_Struct(_11721__self).get()._field_Comparable;;
		};
		return (((_1a86b38e5_Map(_11721__self) == nullptr) && (_1a86b2e44_Slc(_11721__self) == nullptr)) && (_1a86b31a8_Fn(_11721__self) == nullptr));;
	};
}



inline jule::Bool _1a86b1041_Mutable(_1a86ae79d_TypeKind* _self_) {
	{
		_1a86ae79d_TypeKind* _12821__self = (&((*(_self_))));;
		if ((_1a86b341c_Struct(_12821__self) != nullptr)) {
			return _1a86b341c_Struct(_12821__self).get()._field_Mutable;;
		};
		if ((_1a86b3681_Trait(_12821__self) != nullptr)) {
			return _1a86b3681_Trait(_12821__self).get()._field_Mutable;;
		};
		if ((_1a86b1eba_Prim(_12821__self) != nullptr)) {
			jule::Ptr<_1a86b7003_Prim> _13621_p = _1a86b1eba_Prim(_12821__self);;
			return _1a86ba468_IsAny(_13621_p.ptr());;
		};
		if ((_1a86b2bd0_Arr(_12821__self) != nullptr)) {
			return _1a86b1041_Mutable(_1a86b2bd0_Arr(_12821__self).get()._field_Elem.ptr());;
		};
		return (((_1a86b2e44_Slc(_12821__self) != nullptr) || (_1a86b2493_Ptr(_12821__self) != nullptr)) || (_1a86b222e_Sptr(_12821__self) != nullptr));;
	};
}



inline jule::Bool _1a86b12a5_Ordered(_1a86ae79d_TypeKind* _self_) {
	{
		_1a86ae79d_TypeKind* _15121__self = (&((*(_self_))));;
		jule::Ptr<_1a86b7003_Prim> _15217_prim = _1a86b1eba_Prim(_15121__self);;
		if ((_15217_prim != nullptr)) {
			return (_1a55401ae_IsNum(_15217_prim.get()._field_Kind) || _1a86ba204_IsStr(_15217_prim.ptr()));;
		};
		if ((_1a86b2493_Ptr(_15121__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1a88b9b51_StructIns> _15917_s = _1a86b341c_Struct(_15121__self);;
		if ((_15917_s != nullptr)) {
			return ((((_15917_s.get()._field_Operators._field_Gt != nullptr) && (_15917_s.get()._field_Operators._field_GtEq != nullptr)) && (_15917_s.get()._field_Operators._field_Lt != nullptr)) && (_15917_s.get()._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1a88e1c11_Enum> _16617_enm = _1a86b2707_Enum(_15121__self);;
		if ((_16617_enm != nullptr)) {
			return _1a55401ae_IsNum(_1a86aeb55_Str(_16617_enm.get()._field_Kind.get()._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1a86b1519_NilCompatible(_1a86ae79d_TypeKind* _self_) {
	{
		_1a86ae79d_TypeKind* _17721__self = (&((*(_self_))));;
		jule::Ptr<_1a86b7003_Prim> _17917_prim = _1a86b1eba_Prim(_17721__self);;
		if (((_17917_prim != nullptr) && _1a86ba468_IsAny(_17917_prim.ptr()))) {
			return true;;
		};
		return (((((((_1a86b0804_IsNil(_17721__self) || (_1a86b31a8_Fn(_17721__self) != nullptr)) || (_1a86b222e_Sptr(_17721__self) != nullptr)) || (_1a86b2493_Ptr(_17721__self) != nullptr)) || (_1a86b3681_Trait(_17721__self) != nullptr)) || (_1a86b2e44_Slc(_17721__self) != nullptr)) || (_1a86b38e5_Map(_17721__self) != nullptr)) || (_1a86b296b_TypeEnum(_17721__self) != nullptr));;
	};
}



inline jule::Bool _1a86b177d_PerformsRC(_1a86ae79d_TypeKind* _self_) {
	{
		_1a86ae79d_TypeKind* _19821__self = (&((*(_self_))));;
		jule::Ptr<_1a86b7003_Prim> _19917_prim = _1a86b1eba_Prim(_19821__self);;
		if ((_19917_prim != nullptr)) {
			return _1a86ba468_IsAny(_19917_prim.ptr());;
		};
		return (((_1a86b222e_Sptr(_19821__self) != nullptr) || (_1a86b2e44_Slc(_19821__self) != nullptr)) || (_1a86b3681_Trait(_19821__self) != nullptr));;
	};
}



inline jule::Bool _1a86b19e2_SupportsCloning(_1a86ae79d_TypeKind* _self_) {
	{
		_1a86ae79d_TypeKind* _21021__self = (&((*(_self_))));;
		{
			
			if ((_1a86b1eba_Prim(_21021__self) != nullptr)) {
				_case_begin_1ac1d8d40:;
				{
					return (!(_1a86ba468_IsAny(_1a86b1eba_Prim(_21021__self).ptr())));;
				}
			}
			else if ((_1a86b2707_Enum(_21021__self) != nullptr)) {
				_case_begin_1ac1d978b:;
				{
					return true;;
				}
			}
			else if ((_1a86b31a8_Fn(_21021__self) != nullptr)) {
				_case_begin_1ac1d9802:;
				{
					return true;;
				}
			}
			else if ((_1a86b2493_Ptr(_21021__self) != nullptr)) {
				_case_begin_1ac1d9307:;
				{
					return true;;
				}
			}
			else if ((_1a86b2e44_Slc(_21021__self) != nullptr)) {
				_case_begin_1ac1d936d:;
				{
					return _1a86b19e2_SupportsCloning(_1a86b2e44_Slc(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1a86b38e5_Map(_21021__self) != nullptr)) {
				_case_begin_1ac1d93d4:;
				{
					jule::Ptr<_1a86bc767_Map> _22321_m = _1a86b38e5_Map(_21021__self);;
					return (_1a86b19e2_SupportsCloning(_22321_m.get()._field_Key.ptr()) && _1a86b19e2_SupportsCloning(_22321_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1a86b2bd0_Arr(_21021__self) != nullptr)) {
				_case_begin_1ac1d944a:;
				{
					return _1a86b19e2_SupportsCloning(_1a86b2bd0_Arr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1a86b222e_Sptr(_21021__self) != nullptr)) {
				_case_begin_1ac1d9945:;
				{
					return _1a86b19e2_SupportsCloning(_1a86b222e_Sptr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1a86b341c_Struct(_21021__self) != nullptr)) {
				_case_begin_1ac1d99ab:;
				{
					jule::Ptr<_1a88b9b51_StructIns> _23025_s = _1a86b341c_Struct(_21021__self);;
					return (((_23025_s.get()._field_Decl != nullptr) && (!(_23025_s.get()._field_Decl.get()._field_Binded))) && _1a88b8666_IsDerives(_23025_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1ac1d9291:;
				{
					return false;;
				}
			}
			_match_end_1ac1d922a:;
		};
	};
}



inline jule::Bool _1a86b1c56_Variadicable(_1a86ae79d_TypeKind* _self_) {
	{
		_1a86ae79d_TypeKind* _24121__self = (&((*(_self_))));;
		return (_1a86b2e44_Slc(_24121__self) != nullptr);;
	};
}



inline jule::Ptr<_1a86b7003_Prim> _1a86b1eba_Prim(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1ac1e1364:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a86b7003_Prim>(20);;
			}
		}
		else {
			_case_begin_1ac1ce440:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1ce3da:;
	};
}



inline jule::Ptr<_1a86ba754_Sptr> _1a86b222e_Sptr(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1ac1e15ea:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a86ba754_Sptr>(21);;
			}
		}
		else {
			_case_begin_1ac1e1c49:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1e1be4:;
	};
}



inline jule::Ptr<_1a86bdcb8_Ptr> _1a86b2493_Ptr(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1ac1e1cd2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a86bdcb8_Ptr>(26);;
			}
		}
		else {
			_case_begin_1ac1e28b5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1e2ce4:;
	};
}



inline jule::Ptr<_1a88e1c11_Enum> _1a86b2707_Enum(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1ac1e2970:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a88e1c11_Enum>(3);;
			}
		}
		else {
			_case_begin_1ac1e3586:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1e39b5:;
	};
}



inline jule::Ptr<_1a88e330b_TypeEnum> _1a86b296b_TypeEnum(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1ac1e3641:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a88e330b_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1ac1e4257:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1e4686:;
	};
}



inline jule::Ptr<_1a86bd35b_Arr> _1a86b2bd0_Arr(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1ac1e4312:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a86bd35b_Arr>(25);;
			}
		}
		else {
			_case_begin_1ac1e4e28:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1e5357:;
	};
}



inline jule::Ptr<_1a86bb1b1_Slc> _1a86b2e44_Slc(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1ac1e4ed3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a86bb1b1_Slc>(22);;
			}
		}
		else {
			_case_begin_1ac1e5ae9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1e6028:;
	};
}



inline jule::Ptr<_1a88cee0d_FnIns> _1a86b31a8_Fn(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1ac1e5ba4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a88cee0d_FnIns>(1);;
			}
		}
		else {
			_case_begin_1ac1e67ba:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1e6be9:;
	};
}



inline jule::Ptr<_1a88b9b51_StructIns> _1a86b341c_Struct(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ac1e6875:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a88b9b51_StructIns>(0);;
			}
		}
		else {
			_case_begin_1ac1e748b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1e78ba:;
	};
}



inline jule::Ptr<_1a88de47d_Trait> _1a86b3681_Trait(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1ac1e7546:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a88de47d_Trait>(2);;
			}
		}
		else {
			_case_begin_1ac1e815c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1e858b:;
	};
}



inline jule::Ptr<_1a86bc767_Map> _1a86b38e5_Map(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1ac1e8217:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a86bc767_Map>(24);;
			}
		}
		else {
			_case_begin_1ac1e8d2d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1e925c:;
	};
}



inline jule::Ptr<_1a86bbcb6_Tuple> _1a86b3b59_Tup(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1ac1e8dd8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a86bbcb6_Tuple>(23);;
			}
		}
		else {
			_case_begin_1ac1e9a87:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1e9a32:;
	};
}



inline jule::Bool _1a86b3dbd_comptime(_1a86ae79d_TypeKind* _self_) {
	return ((((((((((((((_1a86b5320_comptimeTypeInfos(_self_) != nullptr) || (_1a86b5584_comptimeTypeInfo(_self_) != nullptr)) || (_1a86b4132_comptimeStructFields(_self_) != nullptr)) || (_1a86b4396_comptimeStructField(_self_) != nullptr)) || (_1a86b460a_comptimeEnumFields(_self_) != nullptr)) || (_1a86b486e_comptimeEnumField(_self_) != nullptr)) || (_1a86b57e8_comptimeStatics(_self_) != nullptr)) || (_1a86b5a5c_comptimeStatic(_self_) != nullptr)) || (_1a86b4ad3_comptimeParams(_self_) != nullptr)) || (_1a86b4d47_comptimeParam(_self_) != nullptr)) || (_1a86b50ab_comptimeRange(_self_) != nullptr)) || (_1a86b5cc1_comptimeValue(_self_) != nullptr)) || (_1a86b6299_comptimeFiles(_self_) != nullptr)) || (_1a86b6035_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1a88ec7dd_comptimeStructFields> _1a86b4132_comptimeStructFields(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1ac1ea6e2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a88ec7dd_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1ac1eea15:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1ee86c:;
	};
}



inline jule::Ptr<_1a88e5e57_comptimeStructField> _1a86b4396_comptimeStructField(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1ac1eebbe:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a88e5e57_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1ac200373:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac20031d:;
	};
}



inline jule::Ptr<_1a8902edb_comptimeEnumFields> _1a86b460a_comptimeEnumFields(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1ac20040b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8902edb_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1ac201088:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac201033:;
	};
}



inline jule::Ptr<_1a8901cba_comptimeEnumField> _1a86b486e_comptimeEnumField(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1ac201121:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8901cba_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1ac201c37:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac201bd2:;
	};
}



inline jule::Ptr<_1a89065d8_comptimeParams> _1a86b4ad3_comptimeParams(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1ac201cc0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a89065d8_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1ac20294c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2028e7:;
	};
}



inline jule::Ptr<_1a890453c_comptimeParam> _1a86b4d47_comptimeParam(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1ac2029d5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a890453c_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1ac2035eb:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac203596:;
	};
}



inline jule::Ptr<_1a88e5462_comptimeRange> _1a86b50ab_comptimeRange(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1ac203684:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a88e5462_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1ac204311:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2042ab:;
	};
}



inline jule::Ptr<_1a8907aa1_comptimeTypeInfos> _1a86b5320_comptimeTypeInfos(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1ac204399:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8907aa1_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1ac205004:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac204e9e:;
	};
}



inline jule::Ptr<_1a8909069_comptimeTypeInfo> _1a86b5584_comptimeTypeInfo(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1ac20508c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8909069_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1ac205ba3:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac205b4d:;
	};
}



inline jule::Ptr<_1a8900879_comptimeStatics> _1a86b57e8_comptimeStatics(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1ac205c3b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8900879_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1ac206874:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac20681e:;
	};
}



inline jule::Ptr<_1a88edcb7_comptimeStatic> _1a86b5a5c_comptimeStatic(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1ac20690c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a88edcb7_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1ac207545:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2074e0:;
	};
}



inline jule::Ptr<_1a890ea64_comptimeValue> _1a86b5cc1_comptimeValue(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1ac2075cd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a890ea64_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1ac20825a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac208205:;
	};
}



inline jule::Ptr<_1a8913628_comptimeFile> _1a86b6035_comptimeFile(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1ac2082e3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8913628_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1ac208e4d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac208de8:;
	};
}



inline jule::Ptr<_1a8912160_comptimeFiles> _1a86b6299_comptimeFiles(_1a86ae79d_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1ac208ed6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a8912160_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1ac209aec:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac209a97:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a86ae79d_TypeKind _Src) {
	_Stream << _1a86aeb55_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a86b69b4_checked(_1a86b6651_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86b6651_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a86b7333_Str(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a86b7641_Equal(jule::Ptr<_1a86b7003_Prim> _self_, jule::Ptr<_1a86ae79d_TypeKind> _53821_other) {
	jule::Ptr<_1a86b7003_Prim> _53913_prim = _1a86b1eba_Prim(_53821_other.ptr());;
	if ((_53913_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _53913_prim.get()._field_Kind);;
}



inline jule::Bool _1a86b7ab4_IsConstraint(_1a86b7003_Prim* _self_) {
	return ((((!(_1a86ba204_IsStr(_self_))) && (!(_1a86ba468_IsAny(_self_)))) && (!(_1a86b9e90_IsBool(_self_)))) && (!(_1a55401ae_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1a86b7d28_IsI8(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1a86b808c_IsI16(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1a86b8301_IsI32(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1a86b8565_IsI64(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1a86b87c9_IsU8(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1a86b8a3d_IsU16(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1a86b8ca2_IsU32(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1a86b9016_IsU64(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1a86b927a_IsF32(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1a86b94de_IsF64(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1a86b9753_IsInt(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1a86b99b7_IsUint(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1a86b9c2b_IsUintptr(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1a86b9e90_IsBool(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1a86ba204_IsStr(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1a86ba468_IsAny(_1a86b7003_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86b7003_Prim _Src) {
	_Stream << _1a86b7333_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a86baab7_Str(_1a86ba754_Sptr* _self_) {
	return (jule::Str("&", 1) + _1a86aeb55_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a86badc5_Equal(jule::Ptr<_1a86ba754_Sptr> _self_, jule::Ptr<_1a86ae79d_TypeKind> _61521_other) {
	jule::Ptr<_1a86ba754_Sptr> _61613_sptr = _1a86b222e_Sptr(_61521_other.ptr());;
	if ((_61613_sptr == nullptr)) {
		return false;;
	};
	return _1a86aee63_Equal(_self_.get()._field_Elem, _61613_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86ba754_Sptr _Src) {
	_Stream << _1a86baab7_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a86bb634_Str(_1a86bb1b1_Slc* _self_) {
	return (jule::Str("[]", 2) + _1a86aeb55_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a86bb942_Equal(jule::Ptr<_1a86bb1b1_Slc> _self_, jule::Ptr<_1a86ae79d_TypeKind> _63421_other) {
	jule::Ptr<_1a86bb1b1_Slc> _63513_slc = _1a86b2e44_Slc(_63421_other.ptr());;
	if ((_63513_slc == nullptr)) {
		return false;;
	};
	return _1a86aee63_Equal(_self_.get()._field_Elem, _63513_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86bb1b1_Slc _Src) {
	_Stream << _1a86bb634_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a86bc129_Str(_1a86bbcb6_Tuple* _self_) {
	jule::Str _65117_s = jule::Str("(", 1);;
	_65117_s+=_1a86aeb55_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac218d09:;
		if (it != expr_end) {
			jule::Ptr<_1a86ae79d_TypeKind> *_65316_t = it;
			{
				(_65117_s).append(",", 1);
				_65117_s+=_1a86aeb55_Str((*(_65316_t)).ptr());
			}
			_iter_next_1ac218d09:;
			++it;
			goto _iter_begin_1ac218d09;
		}
		_iter_end_1ac218d09:;
	};
	(_65117_s).append(")", 1);
	return _65117_s;;
}



inline jule::Bool _1a86bc437_Equal(jule::Ptr<_1a86bbcb6_Tuple> _self_, jule::Ptr<_1a86ae79d_TypeKind> _66221_other) {
	jule::Ptr<_1a86bbcb6_Tuple> _66313_tup = _1a86b3b59_Tup(_66221_other.ptr());;
	if ((_66313_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _66313_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _67017_i = 0LL;;
	for (; (_67017_i < _self_.get()._field_Types.len()); (_67017_i)++) {
		{
			if ((!(_1a86aee63_Equal(_self_.get()._field_Types[_67017_i], _66313_tup.get()._field_Types[_67017_i])))) {
				return false;;
			};
		}
	_iter_next_1ac21b416:;
	}
	_iter_end_1ac21b416:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86bbcb6_Tuple _Src) {
	_Stream << _1a86bc129_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a86bcaca_Str(_1a86bc767_Map* _self_) {
	jule::Str _69017_s = jule::Str("map[", 4);;
	_69017_s+=_1a86aeb55_Str((*(_self_))._field_Key.ptr());
	(_69017_s).append("]", 1);
	_69017_s+=_1a86aeb55_Str((*(_self_))._field_Val.ptr());
	return _69017_s;;
}



inline jule::Bool _1a86bcdd8_Equal(jule::Ptr<_1a86bc767_Map> _self_, jule::Ptr<_1a86ae79d_TypeKind> _69821_other) {
	jule::Ptr<_1a86bc767_Map> _69913_m = _1a86b38e5_Map(_69821_other.ptr());;
	if ((_69913_m == nullptr)) {
		return false;;
	};
	return (_1a86aee63_Equal(_self_.get()._field_Key, _69913_m.get()._field_Key) && _1a86aee63_Equal(_self_.get()._field_Val, _69913_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86bc767_Map _Src) {
	_Stream << _1a86bcaca_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a86bd6be_Str(_1a86bd35b_Arr* _self_) {
	jule::Str _71717_s = jule::Str("[", 1);;
	_71717_s+=_1a5530c2c_Itoa((*(_self_))._field_N);
	(_71717_s).append("]", 1);
	_71717_s+=_1a86aeb55_Str((*(_self_))._field_Elem.ptr());
	return _71717_s;;
}



inline jule::Bool _1a86bd9cc_Equal(jule::Ptr<_1a86bd35b_Arr> _self_, jule::Ptr<_1a86ae79d_TypeKind> _72521_other) {
	jule::Ptr<_1a86bd35b_Arr> _72613_arr = _1a86b2bd0_Arr(_72521_other.ptr());;
	if ((_72613_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _72613_arr.get()._field_N) && _1a86aee63_Equal(_self_.get()._field_Elem, _72613_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86bd35b_Arr _Src) {
	_Stream << _1a86bd6be_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a86be12b_Str(_1a86bdcb8_Ptr* _self_) {
	if (_1a86be78b_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1a86aeb55_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a86be439_Equal(jule::Ptr<_1a86bdcb8_Ptr> _self_, jule::Ptr<_1a86ae79d_TypeKind> _74921_other) {
	jule::Ptr<_1a86bdcb8_Ptr> _75013_ptr = _1a86b2493_Ptr(_74921_other.ptr());;
	if ((_75013_ptr == nullptr)) {
		return false;;
	};
	return _1a86aee63_Equal(_self_.get()._field_Elem, _75013_ptr.get()._field_Elem);;
}



inline jule::Bool _1a86be78b_IsUnsafe(_1a86bdcb8_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86bdcb8_Ptr _Src) {
	_Stream << _1a86be12b_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86bec0e_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a86c12d7_pushErr(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a52684c0_Token> _83526_token, jule::Str _83541_fmt, jule::Slice<jule::Any> _83554_args) {
	_1a8948e77_pushErr((*(_self_))._field_s.ptr(), _83526_token, _83541_fmt, _83554_args);
}



inline void _1a86c14b3_allowBuiltin(_1a86c0ade_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a86c168e_disallowBuiltin(_1a86c0ade_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1ac227b5e_pushReference(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88b9b51_StructIns>* _84740_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1abe7c30e_Exist((*(_self_))._field_refers.ptr(), (*(_84740_t)))) {
		return;;
	};
	_1a88d39d3_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84740_t)), &__jule_any_type9));
}

inline void _1ac22a788_pushReference(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88de47d_Trait>* _84740_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ac22c3c2_Exist((*(_self_))._field_refers.ptr(), (*(_84740_t)))) {
		return;;
	};
	_1a88d39d3_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84740_t)), &__jule_any_type10));
}



inline void _1a86c1b89_pushReferenceByKind(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _85743_k) {
	{
		
		if ((_1a86b341c_Struct((*(_85743_k)).ptr()) != nullptr)) {
			_case_begin_1ac2268b6:;
			{
				jule::Ptr<_1a88b9b51_StructIns> _86021_t = _1a86b341c_Struct((*(_85743_k)).ptr());;
				_1ac227b5e_pushReference(_self_, &(_86021_t));
			}
		}
		else if ((_1a86b3681_Trait((*(_85743_k)).ptr()) != nullptr)) {
			_case_begin_1ac22693d:;
			{
				jule::Ptr<_1a88de47d_Trait> _86321_t = _1a86b3681_Trait((*(_85743_k)).ptr());;
				_1ac22a788_pushReference(_self_, &(_86321_t));
			}
		}
		_match_end_1ac2267a6:;
	};
}



inline void _1a86c2052_pushCycleError(_1a86c0ade_typeChecker* _self_, jule::Any _86829_def1, jule::Any _86840_def2, jule::Str* _86856_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _87013_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _87028_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_87028_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1ac22edec:;
				{
					return (*(_87028_def)).cast_ptr<_1a86ada55_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1ac2304a2:;
				{
					return (*(_87028_def)).cast_ptr<_1a88b6d3a_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1ac230073:;
				{
					return jule::Str();;
				}
			}
			_match_end_1ac22ee96:;
		};
	});;
	jule::Str _88013_def1Ident = _87013_getIdent(&(_86829_def1));;
	jule::Str _88113_def2Ident = _87013_getIdent(&(_86840_def2));;
	jule::Str _88213_refersTo = _1a4deb84b_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_88013_def1Ident, &__jule_any_type5),jule::Any(_88113_def2Ident, &__jule_any_type5)}));;
	((*(_86856_message))).buffer.insert(0, (((_1a4d599b8_Repeat(jule::Str(" ", 1), 7LL) + _88213_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a86c2409_checkCrossCycle(_1a86c0ade_typeChecker* _self_, jule::Any _88630_decl, jule::Str* _88646_message) {
	{
		auto &_match_expr{ _88630_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ac2327b2:;
			{
				jule::Ptr<_1a86ada55_TypeAlias> _88917_ta = _88630_decl.cast_ptr<_1a86ada55_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_88917_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac233241:;
					if (it != expr_end) {
						jule::Any *_89020_d = it;
						{
							{
								
								if (((*(_89020_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_1ac233d8a:;
									{
										_1a86c2052_pushCycleError(_self_, jule::Any(_88917_ta, &__jule_any_type67), (*(_89020_d)), _88646_message);
										return false;;
									}
								}
								else if ((!(_1a86c2409_checkCrossCycle(_self_, (*(_89020_d)), _88646_message)))) {
									_case_begin_1ac233e12:;
									{
										_1a86c2052_pushCycleError(_self_, jule::Any(_88917_ta, &__jule_any_type67), (*(_89020_d)), _88646_message);
										return false;;
									}
								}
								_match_end_1ac233c7a:;
							};
						}
						_iter_next_1ac233241:;
						++it;
						goto _iter_begin_1ac233241;
					}
					_iter_end_1ac233241:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ac232828:;
			{
				jule::Ptr<_1a88b6d3a_Struct> _90117_s = _88630_decl.cast_ptr<_1a88b6d3a_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_90117_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac233ab0:;
					if (it != expr_end) {
						jule::Ptr<_1a88b6d3a_Struct> *_90220_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_90220_d))))) {
									_case_begin_1ac235dd1:;
									{
										_1a86c2052_pushCycleError(_self_, jule::Any(_90117_s, &__jule_any_type66), jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message);
										return false;;
									}
								}
								else if ((!(_1a86c2409_checkCrossCycle(_self_, jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message)))) {
									_case_begin_1ac235e58:;
									{
										_1a86c2052_pushCycleError(_self_, jule::Any(_90117_s, &__jule_any_type66), jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message);
										return false;;
									}
								}
								_match_end_1ac235cc1:;
							};
						}
						_iter_next_1ac233ab0:;
						++it;
						goto _iter_begin_1ac233ab0;
					}
					_iter_end_1ac233ab0:;
				};
			}
		}
		_match_end_1ac23275c:;
	};
	return true;;
}



inline jule::Bool _1a86c27b1_checkIllegalCycles(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88976ab_IdentTypeDecl>* _92038_ident, jule::Any _92065_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92065_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ac237ce5:;
			{
				if (_92065_decl.cast_ptr<_1a88b6d3a_Struct>(&__jule_any_type66).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ac237d6c:;
			{
				if (_92065_decl.cast_ptr<_1a86ada55_TypeAlias>(&__jule_any_type67).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ac2378a5:;
	};
	if ((_92065_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_1a86c12d7_pushErr(_self_, (*(_92038_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _94317_message = jule::Str();;
	if ((!(_1a86c2409_checkCrossCycle(_self_, _92065_decl, &(_94317_message))))) {
		jule::Str _94621_errMsg = _94317_message;;
		_94317_message=jule::Str();
		_1a86c2052_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _92065_decl, &(_94317_message));
		_94621_errMsg+=_94317_message;
		_1a86c12d7_pushErr(_self_, (*(_92038_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_94621_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ac23a127:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*(_self_))._field_referencer.get()._field_refs; __jule_push_dest->push(_92065_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ac23b777:;
			{
				{
					auto &_match_expr{ _92065_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1ac23bec5:;
						{
							jule::Ptr<_1a88b6d3a_Struct> _96225_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1a88b6d3a_Struct>(&__jule_any_type66);;
							{ jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> &__jule_push_dest = _96225_s.get()._field_Depends; __jule_push_dest.push(_92065_decl.cast_ptr<_1a88b6d3a_Struct>(&__jule_any_type66)); };
						}
					}
					_match_end_1ac23bdd7:;
				};
			}
		}
		_match_end_1ac23b634:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1a86ae33b_Kind> _1a86c2b68_fromTypeAlias(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88976ab_IdentTypeDecl>* _97033_decl, jule::Ptr<_1a86ada55_TypeAlias>* _97060_ta) {
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_97060_ta)).get()._field_Public, (*(_97060_ta)).get()._field_Token)))) {
		_1a86c12d7_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_97060_ta)).get()._field_Used=true;
	if (((*(_97033_decl)).get()._field_Generics.len() > 0LL)) {
		_1a86c12d7_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac241051:;
			if (it != expr_end) {
				jule::Ptr<_1a86ada55_TypeAlias> _98720_bg = *it;
				{
					if (((_98720_bg == (*(_97060_ta))) || (((*(_97060_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _1a86aee63_Equal((*(_97060_ta)).get()._field_Kind.get()._field_Kind, _98720_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1ac241051;
					};
				}
				_iter_next_1ac241051:;
				++it;
				goto _iter_begin_1ac241051;
			}
			_iter_end_1ac241051:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac242abe:;
			if (it != expr_end) {
				jule::Ptr<_1a86ada55_TypeAlias> _99820_bg = *it;
				{
					if ((_99820_bg == (*(_97060_ta)))) {
						_1a86c12d7_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_97060_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac2440ba:;
						if (it != expr_end) {
							jule::Ptr<_1a86ada55_TypeAlias> _100324_dg = *it;
							{
								if ((_99820_bg == _100324_dg)) {
									_1a86c12d7_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_1ac2440ba:;
							++it;
							goto _iter_begin_1ac2440ba;
						}
						_iter_end_1ac2440ba:;
					};
				}
				_iter_next_1ac242abe:;
				++it;
				goto _iter_begin_1ac242abe;
			}
			_iter_end_1ac242abe:;
		};
	};
	jule::Bool _101217_ok = _1a86c27b1_checkIllegalCycles(_self_, _97033_decl, jule::Any((*(_97060_ta)), &__jule_any_type67));;
	if ((!(_101217_ok))) {
		return nullptr;;
	};
	if (((*(_97060_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_101217_ok=_1a89544e3_checkTypeAliasDeclKind((*(_self_))._field_s, _97060_ta, (*(_self_))._field_lookup);
		if ((!(_101217_ok))) {
			return nullptr;;
		};
	};
	if (((*(_97060_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> &__jule_push_dest = (*(_self_))._field_ownerAlias.get()._field_Generics; __jule_push_dest.push((*(_97060_ta))); };
	};
	jule::Ptr<_1a86ae79d_TypeKind> _103117_tk = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Generic=(*(_97060_ta)).get()._field_Generic, ._field_Kind=(*(_97060_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1a86c1b89_pushReferenceByKind(_self_, &(_103117_tk));
	if ((*(_97060_ta)).get()._field_Binded) {
		_103117_tk.get()._field_BindIdent=(*(_97060_ta)).get()._field_Ident;
	} else {
		_103117_tk.get()._field_BindIdent=(*(_97060_ta)).get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
	};
	return jule::Trait<_1a86ae33b_Kind>(_103117_tk, 19);;
}



inline jule::Ptr<_1a88e1c11_Enum> _1a86c3020_fromEnum(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88976ab_IdentTypeDecl>* _104428_decl, jule::Ptr<_1a88e1c11_Enum>* _104455_e) {
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_104455_e)).get()._field_Public, (*(_104455_e)).get()._field_Token)))) {
		_1a86c12d7_pushErr(_self_, (*(_104428_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_104428_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_104428_decl)).get()._field_Generics.len() > 0LL)) {
		_1a86c12d7_pushErr(_self_, (*(_104428_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_104428_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_104455_e));;
}



inline jule::Ptr<_1a88e330b_TypeEnum> _1a86c33c7_fromTypeEnum(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88976ab_IdentTypeDecl>* _105632_decl, jule::Ptr<_1a88e330b_TypeEnum>* _105659_e) {
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_105659_e)).get()._field_Public, (*(_105659_e)).get()._field_Token)))) {
		_1a86c12d7_pushErr(_self_, (*(_105632_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_105632_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_105632_decl)).get()._field_Generics.len() > 0LL)) {
		_1a86c12d7_pushErr(_self_, (*(_105632_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_105632_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_105659_e));;
}



inline jule::Ptr<_1a88de47d_Trait> _1a86c377e_fromTrait(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88976ab_IdentTypeDecl>* _106829_decl, jule::Ptr<_1a88de47d_Trait>* _106856_t) {
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_106856_t)).get()._field_Public, (*(_106856_t)).get()._field_Token)))) {
		_1a86c12d7_pushErr(_self_, (*(_106829_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106829_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_106829_decl)).get()._field_Generics.len() > 0LL)) {
		_1a86c12d7_pushErr(_self_, (*(_106829_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_106829_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_1ac22a788_pushReference(_self_, _106856_t);
	return (*(_106856_t));;
}



inline jule::Bool _1a86c3b36_checkStructIns(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88b9b51_StructIns>* _108138_ins, jule::Ptr<_1a52684c0_Token>* _108160_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_108138_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_108138_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_108138_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a8960356_precheckStructIns((*(_self_))._field_s, _108138_ins, (*(_108160_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_108138_ins)).get()._field_Generics.len() > 0LL)) {
		_1a8960cc4_checkStructInsOperators((*(_self_))._field_s, (*(_108138_ins)));
		_1a89605cb_checkStructIns((*(_self_))._field_s, _108138_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a86c3dcd_appendUsedStructReference(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88b6d3a_Struct>* _110249_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ac253481:;
			{
				jule::Ptr<_1a88b6d3a_Struct> _110821_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1a88b6d3a_Struct>(&__jule_any_type66);;
				if ((!(_1a88b8974_IsUses(_110821_refS.ptr(), (*(_110249_s)))))) {
					{ jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> &__jule_push_dest = _110821_refS.get()._field_Uses; __jule_push_dest.push((*(_110249_s))); };
				};
			}
		}
		_match_end_1ac25342b:;
	};
}



inline jule::Ptr<_1a88b9b51_StructIns> _1a86c4296_buildStructInstance(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88976ab_IdentTypeDecl>* _111543_decl, jule::Ptr<_1a88b6d3a_Struct>* _111570_s) {
	jule::Ptr<_1a86bec0e_referencer> _111717_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> _111917_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1ac256055:;
				{
					jule::Ptr<_1a8925eba_scopeChecker> _112625_sc = (*(_self_))._field_lookup.cast_ptr<_1a8925eba_scopeChecker>(0);;
					jule::Ptr<_1a8925eba_scopeChecker> _112725_hard = _1a8929056_getHardRoot(_112625_sc);;
					if (((_112725_hard.get()._field_owner.get()._field_Owner == nullptr) || (_112725_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_111570_s))))) {
						goto _match_end_1ac256000;
					};
					jule::I64 _113121_n = (_112725_hard.get()._field_owner.get()._field_Generics.len() + _112725_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_112725_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _113121_n);
				}
			}
			_match_end_1ac256000:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1a86ccac9_Lookup> _114117_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1a88b9b51_StructIns> _114517_ins = _1a88b729c_instance((*(_111570_s)));;
	_114517_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1a86ad01b_InsGeneric>>::alloc(0LL, (*(_111543_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_111543_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac259652:;
		if (it != expr_end) {
			jule::Ptr<_1a88970e5_TypeDecl> _114721_g = *it;
			{
				jule::Ptr<_1a86ae79d_TypeKind> _114821_kind = _1a86c772d_build(_self_, &(_114721_g.get()._field_Kind));;
				if ((_114821_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1a86ad01b_InsGeneric>> &__jule_push_dest = _114517_ins.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_1a86ad01b_InsGeneric>(_1a86ad01b_InsGeneric{._field_Kind=_114821_kind, })); };
			}
			_iter_next_1ac259652:;
			++it;
			goto _iter_begin_1ac259652;
		}
		_iter_end_1ac259652:;
	};
	(*(_self_))._field_lookup=_114117_lookup;
	(*(_self_))._field_bannedGenerics=_111917_bannedGenerics;
	(*(_self_))._field_referencer=_111717_referencer;
	return _114517_ins;;
}



inline jule::Ptr<_1a88b9b51_StructIns> _1a86c464d_fromStruct(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88976ab_IdentTypeDecl>* _116334_decl, jule::Ptr<_1a88b6d3a_Struct>* _116361_s) {
	if ((!(_1a894964d_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_116361_s)).get()._field_Public, (*(_116361_s)).get()._field_Token)))) {
		_1a86c12d7_pushErr(_self_, (*(_116334_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_116334_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_116334_decl)).get()._field_Generics.len() > 0LL)) {
			_1a86c12d7_pushErr(_self_, (*(_116334_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1a88b9b51_StructIns>(_1a88b9b51_StructIns{._field_Decl=(*(_116361_s)), });;
	};
	jule::Bool _118117_ok = _1a86c27b1_checkIllegalCycles(_self_, _116334_decl, jule::Any((*(_116361_s)), &__jule_any_type66));;
	if ((!(_118117_ok))) {
		return nullptr;;
	};
	_1a86c3dcd_appendUsedStructReference(_self_, _116361_s);
	jule::Ptr<_1a88b9b51_StructIns> _118717_ins = _1a86c4296_buildStructInstance(_self_, _116334_decl, _116361_s);;
	if ((_118717_ins == nullptr)) {
		return nullptr;;
	};
	_118117_ok=_1a894a31e_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>(_118717_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_118717_ins.get()._field_Generics.len()), (*(_116334_decl)).get()._field_Token);
	if ((!(_118117_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a88b9b51_StructIns> _119717_existInstance = _1a88b7577_appendInstance((*(_116361_s)).ptr(), &(_118717_ins));;
	if ((_119717_existInstance != nullptr)) {
		if ((!(_1a8952b95_checkConstraintsStruct((*(_self_))._field_s, &(_118717_ins), &((*(_116334_decl)).get()._field_Token), _119717_existInstance)))) {
			return nullptr;;
		};
		_1ac227b5e_pushReference(_self_, &(_119717_existInstance));
		return _119717_existInstance;;
	};
	if ((!(_1a86c3b36_checkStructIns(_self_, &(_118717_ins), &((*(_116334_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_1ac227b5e_pushReference(_self_, &(_118717_ins));
	return _118717_ins;;
}



inline jule::Trait<_1a86ae33b_Kind> _1a86c495b_getDef(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88976ab_IdentTypeDecl>* _122130_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac26410c:;
		if (it != expr_end) {
			jule::Ptr<_1a88a408b_GenericDecl> _122216_g = *it;
			{
				if ((_122216_g.get()._field_Ident == (*(_122130_decl)).get()._field_Ident)) {
					return jule::Trait<_1a86ae33b_Kind>(_1a86ca247_buildPrimType(_122216_g.get()._field_Ident), 20);;
				};
			}
			_iter_next_1ac26410c:;
			++it;
			goto _iter_begin_1ac26410c;
		}
		_iter_end_1ac26410c:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac264904:;
		if (it != expr_end) {
			jule::Ptr<_1a86ada55_TypeAlias> _122821_g = *it;
			{
				if ((_122821_g.get()._field_Ident == (*(_122130_decl)).get()._field_Ident)) {
					if (((*(_122130_decl)).get()._field_Generics.len() > 0LL)) {
						_1a86c12d7_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_122130_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_1a88b9b51_StructIns> _123425_st = _1a86b341c_Struct(_122821_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_123425_st != nullptr)) {
						jule::Bool _123625_ok = _1a86c27b1_checkIllegalCycles(_self_, _122130_decl, jule::Any(_123425_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_123625_ok))) {
							return nullptr;;
						};
					};
					return _122821_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1ac264904:;
			++it;
			goto _iter_begin_1ac264904;
		}
		_iter_end_1ac264904:;
	};
	if ((!((*(_122130_decl)).get()._field_Binded))) {
		jule::Ptr<_1a88e1c11_Enum> _124621_e = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cc678_FindEnum((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_124621_e != nullptr)) {
			return jule::Trait<_1a86ae33b_Kind>(_1a86c3020_fromEnum(_self_, _122130_decl, &(_124621_e)), 3);;
		};
		jule::Ptr<_1a88e330b_TypeEnum> _125121_te = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cc986_FindTypeEnum((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_125121_te != nullptr)) {
			return jule::Trait<_1a86ae33b_Kind>(_1a86c33c7_fromTypeEnum(_self_, _122130_decl, &(_125121_te)), 4);;
		};
		jule::Ptr<_1a88de47d_Trait> _125621_t = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cc36a_FindTrait((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_125621_t != nullptr)) {
			return jule::Trait<_1a86ae33b_Kind>(_1a86c377e_fromTrait(_self_, _122130_decl, &(_125621_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1a86c12d7_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a88b6d3a_Struct> _126517_s = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cbba5_FindStruct((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident, (*(_122130_decl)).get()._field_Binded);;
	if ((_126517_s != nullptr)) {
		return jule::Trait<_1a86ae33b_Kind>(_1a86c464d_fromStruct(_self_, _122130_decl, &(_126517_s)), 0);;
	};
	jule::Ptr<_1a86ada55_TypeAlias> _127017_ta = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cb7ed_FindTypeAlias((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident, (*(_122130_decl)).get()._field_Binded);;
	if (((_127017_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_127017_ta=_1a8776b2e_findBuiltinTypeAlias((*(_122130_decl)).get()._field_Ident);
	};
	if ((_127017_ta != nullptr)) {
		return _1a86c2b68_fromTypeAlias(_self_, _122130_decl, &(_127017_ta));;
	};
	_1a86c12d7_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_122130_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_1a86ae33b_Kind> _1a86c4c69_buildIdent(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88976ab_IdentTypeDecl> _128233_decl) {
	return _1a86c495b_getDef(_self_, &(_128233_decl));;
}



inline jule::Trait<_1a86ae33b_Kind> _1a86c5077_buildSubIdent(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a8897997_SubIdentTypeDecl> _128636_decl) {
	jule::Trait<_1a86ae33b_Kind> _128717_ident = _1a86c4c69_buildIdent(_self_, _128636_decl.get()._field_Idents[0LL]);;
	if ((_128717_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _128717_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1ac2706bd:;
			{
				goto _match_end_1ac27049d;
			}
		}
		else {
			_case_begin_1ac2701e5:;
			{
				_1a86c12d7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac27049d:;
	};
	jule::Ptr<_1a88e330b_TypeEnum> _129817_t = _128717_ident.cast_ptr<_1a88e330b_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1a88976ab_IdentTypeDecl>> _129917_idents = _128636_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_129917_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac271a43:;
		if (it != expr_end) {
			jule::I64 _130013_i = it - expr->begin();
			jule::Ptr<_1a88976ab_IdentTypeDecl> _130016_id = *it;
			{
				jule::Ptr<_1a88e2c78_TypeEnumItem> _130121_item = _1a88e3d45_FindItem(_129817_t.ptr(), _130016_id.get()._field_Ident);;
				if ((_130121_item == nullptr)) {
					_1a86c12d7_pushErr(_self_, _130016_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_129817_t.get()._field_Ident, &__jule_any_type5),jule::Any(_130016_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_129917_idents.len() - _130013_i) == 1LL)) {
					_1a86c1b89_pushReferenceByKind(_self_, &(_130121_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_1a86ae33b_Kind>(_130121_item.get()._field_Kind.get()._field_Kind, 19);;
				};
				_129817_t=_1a86b296b_TypeEnum(_130121_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_129817_t == nullptr)) {
					_1a86c12d7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1ac271a43:;
			++it;
			_130013_i++;
			goto _iter_begin_1ac271a43;
		}
		_iter_end_1ac271a43:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a86ba754_Sptr> _1a86c5385_buildSptrFromType(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _132041_elem) {
	{
		
		if (((*(_132041_elem)) == nullptr)) {
			_case_begin_1ac2753e8:;
			{
				return nullptr;;
			}
		}
		else if ((_1a86b341c_Struct((*(_132041_elem)).ptr()) != nullptr)) {
			_case_begin_1ac275470:;
			{
				jule::Ptr<_1a88b9b51_StructIns> _132617_s = _1a86b341c_Struct((*(_132041_elem)).ptr());;
				if (((_132617_s.get()._field_Decl != nullptr) && _132617_s.get()._field_Decl.get()._field_Binded)) {
					_1a86c12d7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1a86b2bd0_Arr((*(_132041_elem)).ptr()) != nullptr) && _1a86b2bd0_Arr((*(_132041_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1ac2754e7:;
			{
				_1a86c12d7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac272318:;
	};
	return jule::new_ptr<_1a86ba754_Sptr>(_1a86ba754_Sptr{._field_Elem=(*(_132041_elem))});;
}



inline jule::Ptr<_1a86ba754_Sptr> _1a86c5693_buildSptr(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a8898107_SptrTypeDecl> _134032_decl) {
	jule::Bool _134113_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_134113_cycleRisk;
	});;
	jule::Ptr<_1a86ae79d_TypeKind> _134517_elem = _1a86c7a3b_checkDecl(_self_, &(_134032_decl.get()._field_Elem));;
	return _1a86c5385_buildSptrFromType(_self_, &(_134517_elem));;
}



inline jule::Ptr<_1a86bdcb8_Ptr> _1a86c59a1_buildPtrFromType(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _134940_elem) {
	{
		
		if (((*(_134940_elem)) == nullptr)) {
			_case_begin_1ac279c05:;
			{
				return nullptr;;
			}
		}
		else if (((_1a86b2bd0_Arr((*(_134940_elem)).ptr()) != nullptr) && _1a86b2bd0_Arr((*(_134940_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1ac279c7c:;
			{
				_1a86c12d7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1a86bdcb8_Ptr>();;
			}
		}
		_match_end_1ac279ae5:;
	};
	return jule::new_ptr<_1a86bdcb8_Ptr>(_1a86bdcb8_Ptr{._field_Elem=(*(_134940_elem))});;
}



inline jule::Ptr<_1a86bdcb8_Ptr> _1a86c5cae_buildPtr(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a8898aca_PtrTypeDecl> _136431_decl) {
	jule::Bool _136513_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_136513_cycleRisk;
	});;
	jule::Ptr<_1a86ae79d_TypeKind> _136917_elem = nullptr;;
	if ((!(_1a8898e2c_IsUnsafe(_136431_decl.ptr())))) {
		_136917_elem=_1a86c7a3b_checkDecl(_self_, &(_136431_decl.get()._field_Elem));
		return _1a86c59a1_buildPtrFromType(_self_, &(_136917_elem));;
	};
	return jule::new_ptr<_1a86bdcb8_Ptr>(_1a86bdcb8_Ptr{._field_Elem=_136917_elem});;
}



inline jule::Ptr<_1a86bb1b1_Slc> _1a86c60bc_buildSlc(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a8898503_SlcTypeDecl> _138131_decl) {
	jule::Bool _138213_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_138213_cycleRisk;
	});;
	jule::Ptr<_1a86ae79d_TypeKind> _138617_elem = _1a86c7a3b_checkDecl(_self_, &(_138131_decl.get()._field_Elem));;
	{
		
		if ((_138617_elem == nullptr)) {
			_case_begin_1ac27e897:;
			{
				return nullptr;;
			}
		}
		else if (((_1a86b2bd0_Arr(_138617_elem.ptr()) != nullptr) && _1a86b2bd0_Arr(_138617_elem.ptr()).get()._field_Auto)) {
			_case_begin_1ac27e91e:;
			{
				_1a86c12d7_pushErr(_self_, _138131_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac27e7dc:;
	};
	return jule::new_ptr<_1a86bb1b1_Slc>(_1a86bb1b1_Slc{._field_Elem=_138617_elem});;
}



inline jule::Ptr<_1a86bd35b_Arr> _1a86c63ca_buildArr(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88992a1_ArrTypeDecl> _140231_decl) {
	jule::I64 _140317_n = 0LL;;
	if ((!(_1a8899603_AutoSized(_140231_decl.ptr())))) {
		jule::Ptr<_1a865dbe2_Data> _140621_size = _1a86a032c_evalExpr(_1a8950c1a_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _140231_decl.get()._field_Size);;
		if ((_140621_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1a865e50b_IsConst(_140621_size.ptr())))) {
			_1a86c12d7_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a86b1eba_Prim(_140621_size.get()._field_Kind.ptr()) == nullptr) || (!(_1a553eae8_IsInt(_1a86b1eba_Prim(_140621_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1a86c12d7_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_140317_n=static_cast<jule::I64>(static_cast<jule::I64>(_1a5542bc8_AsI64(_140621_size.get()._field_Constant.ptr())));
		if ((_140317_n < 0LL)) {
			_1a86c12d7_pushErr(_self_, _140231_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _142421_max = _1a5538dde_MaxI(jule::Str("int", 3));;
			if (((_1a5531dd7_BitSize != 64LL) && (static_cast<jule::I64>(_140317_n) > _142421_max))) {
				_1a86c12d7_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1a86ab9cb_constoa(&(_140621_size.get()._field_Constant)), &__jule_any_type5),jule::Any(_1a5530985_FmtInt(_142421_max, 10LL), &__jule_any_type5)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1a86ae79d_TypeKind> _143317_elem = _1a86c7a3b_checkDecl(_self_, &(_140231_decl.get()._field_Elem));;
	{
		
		if ((_143317_elem == nullptr)) {
			_case_begin_1ac2874c6:;
			{
				return nullptr;;
			}
		}
		else if (((_1a86b2bd0_Arr(_143317_elem.ptr()) != nullptr) && _1a86b2bd0_Arr(_143317_elem.ptr()).get()._field_Auto)) {
			_case_begin_1ac28754d:;
			{
				_1a86c12d7_pushErr(_self_, _140231_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac28743d:;
	};
	return jule::new_ptr<_1a86bd35b_Arr>(_1a86bd35b_Arr{._field_Auto=_1a8899603_AutoSized(_140231_decl.ptr()), ._field_N=_140317_n, ._field_Elem=_143317_elem});;
}



inline jule::Ptr<_1a86bc767_Map> _1a86c66d8_buildMap(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88999aa_MapTypeDecl> _145131_decl) {
	jule::Bool _145213_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_145213_cycleRisk;
	});;
	jule::Ptr<_1a86ae79d_TypeKind> _145617_key = _1a86c7a3b_checkDecl(_self_, &(_145131_decl.get()._field_Key));;
	if ((_145617_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a86ae79d_TypeKind> _146117_val = _1a86c7a3b_checkDecl(_self_, &(_145131_decl.get()._field_Val));;
	if ((_146117_val == nullptr)) {
		return nullptr;;
	};
	if ((_1a86b2707_Enum(_146117_val.ptr()) != nullptr)) {
		_1a86c12d7_pushErr(_self_, _145131_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1a86bc767_Map>(_1a86bc767_Map{._field_Key=_145617_key, ._field_Val=_146117_val});;
}



inline jule::Ptr<_1a86bbcb6_Tuple> _1a86c69e6_buildTuple(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88987de_TupleTypeDecl> _147533_decl) {
	jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> _147617_types = jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>>::alloc(0LL, _147533_decl.get()._field_Types.len());;
	{
		auto expr = &(_147533_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac28cad6:;
		if (it != expr_end) {
			jule::Ptr<_1a88970e5_TypeDecl> _147721_t = *it;
			{
				jule::Ptr<_1a86ae79d_TypeKind> _147821_kind = _1a86c7a3b_checkDecl(_self_, &(_147721_t));;
				if ((_147821_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> &__jule_push_dest = _147617_types; __jule_push_dest.push(_147821_kind); };
			}
			_iter_next_1ac28cad6:;
			++it;
			goto _iter_begin_1ac28cad6;
		}
		_iter_end_1ac28cad6:;
	};
	return jule::new_ptr<_1a86bbcb6_Tuple>(_1a86bbcb6_Tuple{._field_Types=_147617_types});;
}



inline jule::Bool _1a86c6d04_checkFnTypes(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88cee0d_FnIns>* _148836_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_148836_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac28e720:;
		if (it != expr_end) {
			jule::Ptr<_1a88ce03e_ParamIns> _148921_p = *it;
			{
				_148921_p.get()._field_Kind=_1a86c772d_build(_self_, &(_148921_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_148921_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1a89532c2_checkFnParamKind((*(_self_))._field_s, &(_148921_p));
			}
			_iter_next_1ac28e720:;
			++it;
			goto _iter_begin_1ac28e720;
		}
		_iter_end_1ac28e720:;
	};
	if ((!(_1a88cc6be_IsVoid((*(_148836_f)).get()._field_Decl.ptr())))) {
		(*(_148836_f)).get()._field_Result=_1a86c772d_build(_self_, &((*(_148836_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_148836_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a88cee0d_FnIns> _1a86c7112_buildFn(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88a8722_FnDecl> _150630_decl) {
	jule::Bool _150713_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_150713_cycleRisk;
	});;
	if ((_150630_decl.get()._field_Generics.len() > 0LL)) {
		_1a86c12d7_pushErr(_self_, _150630_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a88cc25c_Fn> _151617_f = _1a88d6046_buildFn(_150630_decl);;
	jule::I64 _151813_n = (*(_self_))._field_s.get()._field_errors.len();;
	_1a895b83b_checkAnonFnDecl((*(_self_))._field_s, &(_151617_f));
	if ((_151813_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _152417_ins = _1a88cd648_instanceForce(_151617_f);;
	_152417_ins.get()._field_Anon=true;
	jule::Bool _152713_ok = _1a86c6d04_checkFnTypes(_self_, &(_152417_ins));;
	if ((!(_152713_ok))) {
		return nullptr;;
	};
	return _152417_ins;;
}



inline jule::Trait<_1a86ae33b_Kind> _1a86c7420_buildByNamespace(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a8897d1b_NamespaceTypeDecl> _153539_decl) {
	jule::Str _153613_path = _1a86c9d90_buildLinkPathByTokens(&(_153539_decl.get()._field_Idents));;
	jule::Ptr<_1a893d323_ImportInfo> _153717_imp = _1a86ccac9_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a86cb08e_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)>([=](jule::Ptr<_1a893d323_ImportInfo> _153752_imp) mutable -> jule::Bool {
		if (((_153539_decl.get()._field_Idents.len() == 1LL) && (_153752_imp.get()._field_Alias == _153613_path))) {
			return true;;
		};
		return ((_153752_imp.get()._field_LinkPath == _153613_path) && _1a8940b61_isAccessibleViaSelection(_153752_imp.ptr()));;
	}));;
	if (((_153717_imp == nullptr) || (!(_1a89405bc_isLookupable(_153717_imp.ptr(), jule::Str("self", 4)))))) {
		_1a86c12d7_pushErr(_self_, _153539_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_153613_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_1a86c168e_disallowBuiltin(_self_);
	jule::Trait<_1a86ccac9_Lookup> _155017_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1a86ccac9_Lookup>(_153717_imp, 1);
	jule::Ptr<_1a86ae79d_TypeKind> _155217_kind = _1a86c7a3b_checkDecl(_self_, &(_153539_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_155017_lookup;
	_1a86c14b3_allowBuiltin(_self_);
	return jule::Trait<_1a86ae33b_Kind>(_155217_kind, 19);;
}



inline jule::Ptr<_1a86ae79d_TypeKind> _1a86c772d_build(_1a86c0ade_typeChecker* _self_, jule::Any* _155829_declKind) {
	jule::Trait<_1a86ae33b_Kind> _155917_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155829_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ac29b0bc:;
			{
				jule::Trait<_1a86ae33b_Kind> _156221_t = _1a86c4c69_buildIdent(_self_, (*(_155829_declKind)).cast_ptr<_1a88976ab_IdentTypeDecl>(&__jule_any_type20));;
				if ((_156221_t != nullptr)) {
					_155917_kind=_156221_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ac29be47:;
			{
				jule::Trait<_1a86ae33b_Kind> _156721_t = _1a86c5077_buildSubIdent(_self_, (*(_155829_declKind)).cast_ptr<_1a8897997_SubIdentTypeDecl>(&__jule_any_type92));;
				if ((_156721_t != nullptr)) {
					_155917_kind=_156721_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1ac29bead:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a86ba754_Sptr> _157321_t = _1a86c5693_buildSptr(_self_, (*(_155829_declKind)).cast_ptr<_1a8898107_SptrTypeDecl>(&__jule_any_type78));;
				if ((_157321_t != nullptr)) {
					_155917_kind=jule::Trait<_1a86ae33b_Kind>(_157321_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1ac29b595:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a86bdcb8_Ptr> _157921_t = _1a86c5cae_buildPtr(_self_, (*(_155829_declKind)).cast_ptr<_1a8898aca_PtrTypeDecl>(&__jule_any_type77));;
				if ((_157921_t != nullptr)) {
					_155917_kind=jule::Trait<_1a86ae33b_Kind>(_157921_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ac29b60b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a86bb1b1_Slc> _158521_t = _1a86c60bc_buildSlc(_self_, (*(_155829_declKind)).cast_ptr<_1a8898503_SlcTypeDecl>(&__jule_any_type76));;
				if ((_158521_t != nullptr)) {
					_155917_kind=jule::Trait<_1a86ae33b_Kind>(_158521_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ac29b672:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a86bd35b_Arr> _159121_t = _1a86c63ca_buildArr(_self_, (*(_155829_declKind)).cast_ptr<_1a88992a1_ArrTypeDecl>(&__jule_any_type75));;
				if ((_159121_t != nullptr)) {
					_155917_kind=jule::Trait<_1a86ae33b_Kind>(_159121_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ac29b6d8:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a86bc767_Map> _159721_t = _1a86c66d8_buildMap(_self_, (*(_155829_declKind)).cast_ptr<_1a88999aa_MapTypeDecl>(&__jule_any_type79));;
				if ((_159721_t != nullptr)) {
					_155917_kind=jule::Trait<_1a86ae33b_Kind>(_159721_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ac29c024:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a86bbcb6_Tuple> _160321_t = _1a86c69e6_buildTuple(_self_, (*(_155829_declKind)).cast_ptr<_1a88987de_TupleTypeDecl>(&__jule_any_type80));;
				if ((_160321_t != nullptr)) {
					_155917_kind=jule::Trait<_1a86ae33b_Kind>(_160321_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac29c08a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a88cee0d_FnIns> _160921_t = _1a86c7112_buildFn(_self_, (*(_155829_declKind)).cast_ptr<_1a88a8722_FnDecl>(&__jule_any_type14));;
				if ((_160921_t != nullptr)) {
					_155917_kind=jule::Trait<_1a86ae33b_Kind>(_160921_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ac29c101:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1a86ae33b_Kind> _161521_t = _1a86c7420_buildByNamespace(_self_, (*(_155829_declKind)).cast_ptr<_1a8897d1b_NamespaceTypeDecl>(&__jule_any_type96));;
				if ((_161521_t != nullptr)) {
					_155917_kind=_161521_t;
				};
			}
		}
		else {
			_case_begin_1ac29b441:;
			{
				_1a86c12d7_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac29b353:;
	};
	if ((_155917_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _155917_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1ac2aa2a7:;
			{
				return _155917_kind.cast_ptr<_1a86ae79d_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1ac2a768e:;
			{
				jule::Ptr<_1a86ae79d_TypeKind> _163021_tk = jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=_155917_kind});;
				{
					auto &_match_expr{ _155917_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1ac2a85e6:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_163021_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1ac2a866d:;
						{
							jule::Ptr<_1a88b9b51_StructIns> _163721_s = _155917_kind.cast_ptr<_1a88b9b51_StructIns>(0);;
							if (((_163721_s.get()._field_Decl != nullptr) && _163721_s.get()._field_Decl.get()._field_Binded)) {
								_163021_tk.get()._field_BindIdent=_163721_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1ac2a84d6:;
				};
				return _163021_tk;;
			}
		}
		_match_end_1ac29c3ba:;
	};
}



inline jule::Ptr<_1a86ae79d_TypeKind> _1a86c7a3b_checkDecl(_1a86c0ade_typeChecker* _self_, jule::Ptr<_1a88970e5_TypeDecl>* _164633_decl) {
	jule::Ptr<_1a52684c0_Token> _164817_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_164633_decl)).get()._field_Token;
	jule::Ptr<_1a86ae79d_TypeKind> _165117_kind = _1a86c772d_build(_self_, &((*(_164633_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_164817_errorToken;
	return _165117_kind;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a86c0ade_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a86c8421_prim(jule::Str* _167321_ident, jule::Ptr<_1a86b7003_Prim> _167333_t) {
	return (_167333_t.get()._field_Kind == (*(_167321_ident)));;
}



inline jule::Bool static__1a86c8762_exist(jule::Str* _167722_ident, jule::Ptr<_1a86ae79d_TypeKind>* _167739_k) {
	{
		
		if ((_1a86b1eba_Prim((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1ac2ae2ab:;
			{
				return static__1a86c8421_prim(_167722_ident, _1a86b1eba_Prim((*(_167739_k)).ptr()));;
			}
		}
		else if ((_1a86b222e_Sptr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1ac2ae322:;
			{
				jule::Ptr<_1a86ba754_Sptr> _168221_sptr = _1a86b222e_Sptr((*(_167739_k)).ptr());;
				return static__1a86c8762_exist(_167722_ident, &(_168221_sptr.get()._field_Elem));;
			}
		}
		else if ((_1a86b2493_Ptr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1ac2ae388:;
			{
				jule::Ptr<_1a86bdcb8_Ptr> _168521_ptr = _1a86b2493_Ptr((*(_167739_k)).ptr());;
				return static__1a86c8762_exist(_167722_ident, &(_168521_ptr.get()._field_Elem));;
			}
		}
		else if ((_1a86b2e44_Slc((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1ac2ae5ca:;
			{
				jule::Ptr<_1a86bb1b1_Slc> _168821_slc = _1a86b2e44_Slc((*(_167739_k)).ptr());;
				return static__1a86c8762_exist(_167722_ident, &(_168821_slc.get()._field_Elem));;
			}
		}
		else if ((_1a86b2bd0_Arr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1ac2ae641:;
			{
				jule::Ptr<_1a86bd35b_Arr> _169121_arr = _1a86b2bd0_Arr((*(_167739_k)).ptr());;
				return static__1a86c8762_exist(_167722_ident, &(_169121_arr.get()._field_Elem));;
			}
		}
		else if ((_1a86b38e5_Map((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1ac2ae6b8:;
			{
				jule::Ptr<_1a86bc767_Map> _169421_m = _1a86b38e5_Map((*(_167739_k)).ptr());;
				return (static__1a86c8762_exist(_167722_ident, &(_169421_m.get()._field_Key)) || static__1a86c8762_exist(_167722_ident, &(_169421_m.get()._field_Val)));;
			}
		}
		else if ((_1a86b341c_Struct((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1ac2ae740:;
			{
				jule::Ptr<_1a88b9b51_StructIns> _169821_s = _1a86b341c_Struct((*(_167739_k)).ptr());;
				{
					auto expr = &(_169821_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2b523a:;
					if (it != expr_end) {
						jule::Ptr<_1a86ad01b_InsGeneric> _169925_g = *it;
						{
							if (static__1a86c8762_exist(_167722_ident, &(_169925_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ac2b523a:;
						++it;
						goto _iter_begin_1ac2b523a;
					}
					_iter_end_1ac2b523a:;
				};
				return false;;
			}
		}
		else if ((_1a86b31a8_Fn((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1ac2ae8c7:;
			{
				jule::Ptr<_1a88cee0d_FnIns> _170621_f = _1a86b31a8_Fn((*(_167739_k)).ptr());;
				{
					auto expr = &(_170621_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2b69bc:;
					if (it != expr_end) {
						jule::Ptr<_1a88ce03e_ParamIns> _170725_p = *it;
						{
							if (_1a88cb008_IsSelf(_170725_p.get()._field_Decl.ptr())) {
								goto _iter_next_1ac2b69bc;
							};
							if (static__1a86c8762_exist(_167722_ident, &(_170725_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ac2b69bc:;
						++it;
						goto _iter_begin_1ac2b69bc;
					}
					_iter_end_1ac2b69bc:;
				};
				if ((_170621_f.get()._field_Result != nullptr)) {
					return static__1a86c8762_exist(_167722_ident, &(_170621_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1a86b3b59_Tup((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1ac2ae93d:;
			{
				jule::Ptr<_1a86bbcb6_Tuple> _172021_tup = _1a86b3b59_Tup((*(_167739_k)).ptr());;
				{
					auto expr = &(_172021_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac2b8a57:;
					if (it != expr_end) {
						jule::Ptr<_1a86ae79d_TypeKind> _172125_t = *it;
						{
							if (static__1a86c8762_exist(_167722_ident, &(_172125_t))) {
								return true;;
							};
						}
						_iter_next_1ac2b8a57:;
						++it;
						goto _iter_begin_1ac2b8a57;
					}
					_iter_end_1ac2b8a57:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ac2ae18a:;
			{
				return false;;
			}
		}
		_match_end_1ac2ae0be:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a86c7ed1_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a56b3e9d_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a93a1626_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a93a25a0_stop(_1a93a1e51_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a93a2814_stopped(_1a93a1e51_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a93a2a78_finished(_1a93a1e51_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a93a2cdc_isLastSt(_1a93a1e51_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a93a310b_pushErr(_1a93a1e51_scopeParser* _self_, jule::Ptr<_1a52684c0_Token> _18926_token, jule::Str _18941_fmt) {
	_1a93be05b_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1a93a342a_pushSuggestion(_1a93a1e51_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1a93be37a_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1a93a36a0_insertAsNext(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a93a1626_stmt>(_1a93a1626_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1a93a1626_stmt> _1a93a3914_next(_1a93a1e51_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1a88a6c2b_ScopeTree> _1a93a3cbb_buildScope(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _20834_tokens, jule::Ptr<_1a52684c0_Token> _20856_end) {
	jule::Ptr<_1a88a6c2b_ScopeTree> _20917_s = _1a93a0526_newScope();;
	_20917_s.get()._field_Parent=(*(_self_))._field_s;
	_20917_s.get()._field_End=_20856_end;
	_1a93a1e51_scopeParser _21217_ssp = _1a93a1e51_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1a93acd5d_build(&_21217_ssp, _20834_tokens, &(_20917_s));
	return _20917_s;;
}



inline jule::Ptr<_1a88a9701_VarDecl> _1a93a40c9_buildVarSt(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _21934_tokens) {
	jule::Ptr<_1a88a9701_VarDecl> _22017_v = _1a93c1a97_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	_22017_v.get()._field_Scope=(*(_self_))._field_s;
	return _22017_v;;
}



inline jule::Ptr<_1a88a9aa8_RetSt> _1a93a43d7_buildRetSt(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _22533_tokens) {
	jule::Ptr<_1a88a9aa8_RetSt> _22617_st = jule::new_ptr<_1a88a9aa8_RetSt>(_1a88a9aa8_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		_22533_tokens=_22533_tokens.slice(1LL);
		_22617_st.get()._field_Expr=_1a93be688_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22617_st;;
}



inline jule::Ptr<_1a88aa218_Iter> _1a93a46e5_buildWhileNextIter(_1a93a1e51_scopeParser* _self_, jule::Ptr<_1a93a1626_stmt>* _23642_s) {
	jule::Ptr<_1a88aa218_Iter> _23717_it = jule::new_ptr<_1a88aa218_Iter>(_1a88aa218_Iter{._field_Token=(*(_23642_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _24017_tokens = (*(_23642_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_1a88aa9dd_WhileKind> _24117_kind = jule::new_ptr<_1a88aa9dd_WhileKind>();;
	if ((_24017_tokens.len() > 0LL)) {
		_24117_kind.get()._field_Expr=_1a93be688_buildExpr((*(_self_))._field_p, &(_24017_tokens));
	};
	if (_1a93a2cdc_isLastSt(_self_)) {
		_1a93a310b_pushErr(_self_, _23717_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24017_tokens=_1a93a3914_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _25317_stTokens = _1a93b8b05_getBlockExpr(&(_24017_tokens));;
	if ((_25317_stTokens.len() > 0LL)) {
		jule::Ptr<_1a93a1626_stmt> _25521_stmt = jule::new_ptr<_1a93a1626_stmt>(_1a93a1626_stmt{._field_tokens=_25317_stTokens, ._field_terminated=(*(_23642_s)).get()._field_terminated});;
		_24117_kind.get()._field_NextToken=_25317_stTokens[0LL];
		_24117_kind.get()._field_Next=_1a93aca3e_buildSt(_self_, &(_25521_stmt));
	};
	jule::I64 _26317_i = _25317_stTokens.len();;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _26417_blockTokens = _1a93bbbc4_range(&(_26317_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24017_tokens));;
	if ((_26417_blockTokens == nullptr)) {
		_1a93a25a0_stop(_self_);
		_1a93a310b_pushErr(_self_, _23717_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1a93a342a_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26317_i < _24017_tokens.len())) {
		_1a93a310b_pushErr(_self_, _24017_tokens[_26317_i], jule::Str("invalid syntax", 14));
	};
	_23717_it.get()._field_Scope=_1a93a3cbb_buildScope(_self_, &(_26417_blockTokens), _24017_tokens[(_26317_i - 1LL)]);
	_23717_it.get()._field_Kind=jule::Any(_24117_kind, &__jule_any_type38);
	return _23717_it;;
}



inline jule::Ptr<_1a88aa9dd_WhileKind> _1a93a4a03_buildWhileIterKind(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _28142_tokens) {
	return jule::new_ptr<_1a88aa9dd_WhileKind>(_1a88aa9dd_WhileKind{._field_Expr=_1a93be688_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _1a93a4d11_getRangeKindKeysTokens(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _28818_vars;;
	jule::Slice<_1a4deb40b_Log> _28824_errs;;
	({
		__jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93bc356_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28818_vars = __jule_assign_result.__jule_result_arg0;
		_28824_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_28824_errs);;
	return _28818_vars;;
}



inline jule::Ptr<_1a88a9701_VarDecl> _1a93a511e_buildRangeKindKey(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a88a9701_VarDecl> _29717_key = jule::new_ptr<_1a88a9701_VarDecl>(_1a88a9701_VarDecl{._field_Token=(*(_29341_tokens))[0LL], });;
	if ((_29717_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		_29717_key.get()._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1a93a310b_pushErr(_self_, _29717_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29717_key.get()._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1a93a310b_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29717_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93a310b_pushErr(_self_, _29717_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1a93a342a_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29717_key.get()._field_Ident=_29717_key.get()._field_Token.get()._field_Kind;
	return _29717_key;;
}



inline jule::Slice<jule::Ptr<_1a88a9701_VarDecl>> _1a93a542c_buildRangeKindKeys(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_1a88a9701_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4636b3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1a88a9701_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1a93a511e_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1ac4636b3:;
			++it;
			goto _iter_begin_1ac4636b3;
		}
		_iter_end_1ac4636b3:;
	};
	return _31917_keys;;
}



inline void _1a93a576d_setupRangeKindKeysPlain(_1a93a1e51_scopeParser* _self_, jule::Ptr<_1a88ab37e_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _32717_keyTokens = _1a93a4d11_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32717_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32717_keyTokens.len() > 2LL)) {
		_1a93a310b_pushErr(_self_, (*(_32647_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1a88a9701_VarDecl>> _33417_keys = _1a93a542c_buildRangeKindKeys(_self_, &(_32717_keyTokens));;
	(*(_32647_rng)).get()._field_KeyA=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		(*(_32647_rng)).get()._field_KeyB=_33417_keys[1LL];
	};
}



inline void _1a93a5ac0_setupRangeKindKeysExplicit(_1a93a1e51_scopeParser* _self_, jule::Ptr<_1a88ab37e_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _34172_tokens) {
	jule::I64 _34217_i = 0LL;;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _34317_rang = _1a93bbbc4_range(&(_34217_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34172_tokens);;
	if ((_34217_i < (*(_34172_tokens)).len())) {
		_1a93a310b_pushErr(_self_, (*(_34150_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1a93a576d_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34317_rang));
}



inline void _1a93a5e00_setupRangeKindKeys(_1a93a1e51_scopeParser* _self_, jule::Ptr<_1a88ab37e_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _35064_tokens) {
	if (((*(_35064_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(74LLU))) {
		_1a93a5ac0_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1a93a576d_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_1a88ab37e_RangeKind> _1a93a6351_buildRangeIterKind(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _35914_exprTokens, jule::Ptr<_1a52684c0_Token>* _35941_inToken) {
	jule::Ptr<_1a88ab37e_RangeKind> _36017_rng = jule::new_ptr<_1a88ab37e_RangeKind>(_1a88ab37e_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1a93a310b_pushErr(_self_, _36017_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36017_rng;;
	};
	_36017_rng.get()._field_Expr=_1a93be688_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1a93a5e00_setupRangeKindKeys(_self_, &(_36017_rng), _35842_var_tokens);
	};
	return _36017_rng;;
}



inline jule::Any _1a93a6708_buildCommonIterKind(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _37443_tokens, jule::Ptr<_1a52684c0_Token>* _37462_err_tok) {
	jule::I64 _37517_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac46c69a:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ _37621_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac46d39e:;
						{
							(_37517_braceN)++;
							goto _iter_next_1ac46c69a;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac46d426:;
						{
							(_37517_braceN)--;
						}
					}
					_match_end_1ac46d17e:;
				};
				if ((_37517_braceN != 0LL)) {
					goto _iter_next_1ac46c69a;
				};
				{
					auto &_match_expr{ _37621_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1ac46d0c4:;
						{
							jule::Slice<jule::Ptr<_1a52684c0_Token>> _39325_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_1a52684c0_Token>> _39425_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1a93a6351_buildRangeIterKind(_self_, &(_39325_declTokens), &(_39425_exprTokens), &(_37621_tok)), &__jule_any_type40);;
						}
					}
					_match_end_1ac46e34a:;
				};
			}
			_iter_next_1ac46c69a:;
			++it;
			_37614_i++;
			goto _iter_begin_1ac46c69a;
		}
		_iter_end_1ac46c69a:;
	};
	return jule::Any(_1a93a4a03_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_1a88aa218_Iter> _1a93a6a16_buildCommonIter(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _40138_tokens) {
	jule::Ptr<_1a88aa218_Iter> _40217_it = jule::new_ptr<_1a88aa218_Iter>(_1a88aa218_Iter{._field_Token=_40138_tokens[0LL], });;
	_40138_tokens=_40138_tokens.slice(1LL);
	if ((_40138_tokens.len() == 0LL)) {
		_1a93a25a0_stop(_self_);
		_1a93a310b_pushErr(_self_, _40217_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1a93a342a_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _41217_exprTokens = _1a93b8b05_getBlockExpr(&(_40138_tokens));;
	if ((_41217_exprTokens.len() > 0LL)) {
		_40217_it.get()._field_Kind=_1a93a6708_buildCommonIterKind(_self_, &(_41217_exprTokens), &(_40217_it.get()._field_Token));
	};
	jule::I64 _41617_i = _41217_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _41717_scopeTokens = _1a93bbbc4_range(&(_41617_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40138_tokens));;
	if ((_41717_scopeTokens == nullptr)) {
		_1a93a25a0_stop(_self_);
		_1a93a310b_pushErr(_self_, _40217_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1a93a342a_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41617_i < _40138_tokens.len())) {
		_1a93a310b_pushErr(_self_, _40138_tokens[_41617_i], jule::Str("invalid syntax", 14));
	};
	_40217_it.get()._field_Scope=_1a93a3cbb_buildScope(_self_, &(_41717_scopeTokens), _40138_tokens[(_41617_i - 1LL)]);
	return _40217_it;;
}



inline jule::Ptr<_1a88aa218_Iter> _1a93a6d24_buildIterSt(_1a93a1e51_scopeParser* _self_, jule::Ptr<_1a93a1626_stmt>* _43135_st) {
	if ((*(_43135_st)).get()._field_terminated) {
		return _1a93a46e5_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1a93a6a16_buildCommonIter(_self_, (*(_43135_st)).get()._field_tokens);;
}



inline jule::Ptr<_1a88ab736_BreakSt> _1a93a7132_buildBreakSt(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _43836_tokens) {
	jule::Ptr<_1a88ab736_BreakSt> _43917_brk = jule::new_ptr<_1a88ab736_BreakSt>(_1a88ab736_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*(_43836_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a93a310b_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1a93a342a_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_43917_brk.get()._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1a93a310b_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _43917_brk;;
}



inline jule::Ptr<_1a88abadd_ContSt> _1a93a7440_buildContSt(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _45635_tokens) {
	jule::Ptr<_1a88abadd_ContSt> _45717_cont = jule::new_ptr<_1a88abadd_ContSt>(_1a88abadd_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*(_45635_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a93a310b_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1a93a342a_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_45717_cont.get()._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1a93a310b_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _45717_cont;;
}



inline jule::Ptr<_1a88ac061_If> _1a93a774d_buildIf(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _47431_tokens) {
	jule::Ptr<_1a88ac061_If> _47517_model = jule::new_ptr<_1a88ac061_If>(_1a88ac061_If{._field_Token=(*(_47431_tokens))[0LL], });;
	(*(_47431_tokens))=(*(_47431_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _47917_exprTokens = _1a93b8b05_getBlockExpr(_47431_tokens);;
	jule::I64 _48017_i = 0LL;;
	if ((_47917_exprTokens.len() == 0LL)) {
		_1a93a310b_pushErr(_self_, _47517_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48017_i=static_cast<jule::I64>(_47917_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _48617_scopeTokens = _1a93bbbc4_range(&(_48017_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47431_tokens);;
	if ((_48617_scopeTokens == nullptr)) {
		_1a93a25a0_stop(_self_);
		_1a93a310b_pushErr(_self_, _47517_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1a93a342a_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a52684c0_Token> _49317_end = (*(_47431_tokens))[(_48017_i - 1LL)];;
	if ((_48017_i < (*(_47431_tokens)).len())) {
		if (((*(_47431_tokens))[_48017_i].get()._field_Id == static_cast<jule::U64>(14LLU))) {
			(*(_47431_tokens))=(*(_47431_tokens)).slice(_48017_i);
		} else {
			_1a93a310b_pushErr(_self_, (*(_47431_tokens))[_48017_i], jule::Str("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	_47517_model.get()._field_Expr=_1a93be688_buildExpr((*(_self_))._field_p, &(_47917_exprTokens));
	_47517_model.get()._field_Scope=_1a93a3cbb_buildScope(_self_, &(_48617_scopeTokens), _49317_end);
	return _47517_model;;
}



inline jule::Ptr<_1a88ac418_Else> _1a93a7a5b_buildElse(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _50733_tokens) {
	jule::Ptr<_1a88ac418_Else> _50817_els = jule::new_ptr<_1a88ac418_Else>(_1a88ac418_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	(*(_50733_tokens))=(*(_50733_tokens)).slice(1LL);
	jule::I64 _51217_i = 0LL;;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _51317_scopeTokens = _1a93bbbc4_range(&(_51217_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50733_tokens);;
	if ((_51317_scopeTokens == nullptr)) {
		if ((_51217_i < (*(_50733_tokens)).len())) {
			_1a93a310b_pushErr(_self_, _50817_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1a93a25a0_stop(_self_);
			_1a93a310b_pushErr(_self_, _50817_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1a93a342a_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51217_i < (*(_50733_tokens)).len())) {
		_1a93a310b_pushErr(_self_, (*(_50733_tokens))[_51217_i], jule::Str("invalid syntax", 14));
	};
	_50817_els.get()._field_Scope=_1a93a3cbb_buildScope(_self_, &(_51317_scopeTokens), (*(_50733_tokens))[(_51217_i - 1LL)]);
	return _50817_els;;
}



inline jule::Ptr<_1a88ac88b_Conditional> _1a93a7d69_buildIfElseChain(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _53139_tokens) {
	jule::Ptr<_1a88ac88b_Conditional> _53217_chain = jule::new_ptr<_1a88ac88b_Conditional>(_1a88ac88b_Conditional{._field_Head=_1a93a774d_buildIf(_self_, &(_53139_tokens)), });;
	if ((_53217_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if ((_53139_tokens[0LL].get()._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1ac487b49;
			};
			if (((_53139_tokens.len() > 1LL) && (_53139_tokens[1LL].get()._field_Id == static_cast<jule::U64>(13LLU)))) {
				_53139_tokens=_53139_tokens.slice(1LL);
				jule::Ptr<_1a88ac061_If> _54425_elif = _1a93a774d_buildIf(_self_, &(_53139_tokens));;
				{ jule::Slice<jule::Ptr<_1a88ac061_If>> &__jule_push_dest = _53217_chain.get()._field_Tail; __jule_push_dest.push(_54425_elif); };
				goto _iter_next_1ac487b49;
			};
			_53217_chain.get()._field_Default=_1a93a7a5b_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1ac487b49;
		}
	_iter_next_1ac487b49:;
	}
	_iter_end_1ac487b49:;;
	return _53217_chain;;
}



inline jule::Ptr<_1a889b270_Expr> _1a93a8177_buildCoCallSt(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _55436_tokens) {
	jule::Ptr<_1a52684c0_Token> _55513_token = _55436_tokens[0LL];;
	_55436_tokens=_55436_tokens.slice(1LL);
	jule::Ptr<_1a889b270_Expr> _55717_e = _1a93be688_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55717_e == nullptr)) {
		return _55717_e;;
	};
	{
		auto &_match_expr{ _55717_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac48bba3:;
			{
				_55717_e.get()._field_Kind.cast_ptr<_1a88a0186_FnCallExpr>(&__jule_any_type111).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1ac48b7da:;
			{
				_1a93a310b_pushErr(_self_, _55513_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1ac48b785:;
	};
	return _55717_e;;
}



inline jule::Ptr<_1a88a47ea_GotoSt> _1a93a8485_buildGotoSt(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _57035_tokens) {
	jule::Ptr<_1a88a47ea_GotoSt> _57117_gt = jule::new_ptr<_1a88a47ea_GotoSt>(_1a88a47ea_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1a93a310b_pushErr(_self_, _57117_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1a93a310b_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1a52684c0_Token> _58017_identToken = (*(_57035_tokens))[1LL];;
	if ((_58017_identToken.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93a310b_pushErr(_self_, _58017_identToken, jule::Str("invalid syntax", 14));
		_1a93a342a_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57117_gt;;
	};
	_57117_gt.get()._field_Label=_58017_identToken;
	return _57117_gt;;
}



inline jule::Ptr<_1a88a4ad6_FallSt> _1a93a8793_buildFallSt(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _59035_tokens) {
	jule::Ptr<_1a88a4ad6_FallSt> _59117_fll = jule::new_ptr<_1a88a4ad6_FallSt>(_1a88a4ad6_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1a93a310b_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59117_fll;;
}



inline jule::Ptr<_1a88ad062_TypeAliasDecl> _1a93a8aa1_buildTypeAliasSt(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _60040_tokens) {
	jule::Ptr<_1a88ad062_TypeAliasDecl> _60117_tad = _1a93c0c83_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	_60117_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60117_tad;;
}



inline void _1a93a9013_pushCaseExpr(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _60635_tokens, jule::Ptr<_1a52684c0_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1a889b270_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1a88970e5_TypeDecl> _61422_t;;
		jule::Bool _61425_ok = false;;
		({
			__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61321_i)), true);
			_61422_t = __jule_assign_result.__jule_result_arg0;
			_61425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61425_ok) {
			{ jule::Slice<jule::Ptr<_1a889b270_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_1a889b270_Expr>(_1a889b270_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61422_t, &__jule_any_type94)})); };
			if ((_61321_i < _60635_tokens.len())) {
				_1a93a310b_pushErr(_self_, _60635_tokens[_61321_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a889b270_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_1a93be688_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline jule::Slice<jule::Ptr<_1a889b270_Expr>> _1a93a9464_buildCaseExprs(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _63038_tokens, jule::Ptr<_1a52684c0_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_1a889b270_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1a889b270_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63317_braceN = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac496b9c:;
		if (it != expr_end) {
			jule::I64 _63514_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> _63521_tok = *it;
			{
				{
					auto &_match_expr{ _63521_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac498583:;
						{
							(_63317_braceN)++;
							goto _iter_next_1ac496b9c;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ac49860a:;
						{
							(_63317_braceN)--;
							goto _iter_next_1ac496b9c;
						}
					}
					_match_end_1ac498363:;
				};
				if ((_63317_braceN != 0LL)) {
					goto _iter_next_1ac496b9c;
				};
				{
					
					if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1ac499908:;
						{
							jule::Slice<jule::Ptr<_1a52684c0_Token>> _65421_exprTokens = (*(_63038_tokens)).slice(_63417_j, _63514_i);;
							if ((_65421_exprTokens.len() == 0LL)) {
								_1a93a310b_pushErr(_self_, _63521_tok, jule::Str("expression missing", 18));
							} else {
								_1a93a9013_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63417_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63117_exprs));
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1ac499980:;
						{
							(*(_63061_colon))=_63521_tok;
							_1a93a9013_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63417_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63117_exprs));
							(*(_63038_tokens))=(*(_63038_tokens)).slice((_63514_i + 1LL));
							return _63117_exprs;;
						}
					}
					_match_end_1ac4982a8:;
				};
			}
			_iter_next_1ac496b9c:;
			++it;
			_63514_i++;
			goto _iter_begin_1ac496b9c;
		}
		_iter_end_1ac496b9c:;
	};
	_1a93a310b_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1a88a6c2b_ScopeTree> _1a93a9772_buildCaseScope(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _67338_tokens) {
	jule::I64 _67417_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67621_i = 0LL;;
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _67722_next;;
			({
				__jule_tuple_sx_1a52684c0_Token__jule_tuple_bool __jule_assign_result = _1a93a1329_skipSt(&(_67621_i), (*(_67338_tokens)).slice(_67417_n));
				_67722_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67722_next.len() == 0LL)) {
				goto _iter_end_1ac49c8d9;
			};
			jule::Ptr<_1a52684c0_Token> _68117_tok = _67722_next[0LL];;
			if ((_68117_tok.get()._field_Id != static_cast<jule::U64>(66LLU))) {
				_67417_n+=_67621_i;
				goto _iter_next_1ac49c8d9;
			};
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _68621_scopeTokens = (*(_67338_tokens)).slice(0LL, _67417_n);;
			jule::Ptr<_1a88a6c2b_ScopeTree> _68721_scope = _1a93a3cbb_buildScope(_self_, &(_68621_scopeTokens), (*(_67338_tokens))[_67417_n]);;
			(*(_67338_tokens))=(*(_67338_tokens)).slice(_67417_n);
			return _68721_scope;;
		}
	_iter_next_1ac49c8d9:;
	}
	_iter_end_1ac49c8d9:;;
	jule::Ptr<_1a52684c0_Token> _69117_end;;
	if (((*(_67338_tokens)).len() > 0LL)) {
		_69117_end=(*(_67338_tokens))[((*(_67338_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1a88a6c2b_ScopeTree> _69517_scope = _1a93a3cbb_buildScope(_self_, _67338_tokens, _69117_end);;
	(*(_67338_tokens))=nullptr;
	return _69517_scope;;
}



inline __jule_tuple_x_1a88ad4d5_Case__jule_tuple_bool _1a93a9b29_buildCase(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _70033_tokens, jule::Bool _70051_typeMatch) {
	__jule_tuple_x_1a88ad4d5_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a88ad4d5_Case> _70117_c = jule::new_ptr<_1a88ad4d5_Case>(_1a88ad4d5_Case{._field_Token=(*(_70033_tokens))[0LL], });;
	(*(_70033_tokens))=(*(_70033_tokens)).slice(1LL);
	jule::Ptr<_1a52684c0_Token> _70517_colon = nullptr;;
	_70117_c.get()._field_Exprs=_1a93a9464_buildCaseExprs(_self_, _70033_tokens, &(_70517_colon), _70051_typeMatch);
	_70117_c.get()._field_Scope=_1a93a9772_buildCaseScope(_self_, _70033_tokens);
	if ((_70117_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70117_c.get()._field_Scope.get()._field_End=_70517_colon;
	};
	jule::Bool _71113_isDefault = (_70117_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70117_c;
	__jule_func_result.__jule_result_arg1 = _71113_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a88ad4d5_Case__jule_tuple_x_1a88ac418_Else _1a93a9ed1_buildCases(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _71533_tokens, jule::Bool _71551_typeMatch) {
	__jule_tuple_sx_1a88ad4d5_Case__jule_tuple_x_1a88ac418_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1a88ad4d5_Case>> _71617_cases = nullptr;;
	jule::Ptr<_1a88ac418_Else> _71717_def = nullptr;;
	jule::Bool _71817_defNotLast = false;;
	while ((_71533_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1a52684c0_Token> _72021_tok = _71533_tokens[0LL];;
			if ((_72021_tok.get()._field_Id != static_cast<jule::U64>(66LLU))) {
				_1a93a310b_pushErr(_self_, _72021_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1ac4a5617;
			};
			jule::Ptr<_1a88ad4d5_Case> _72522_c;;
			jule::Bool _72525_isDefault = false;;
			({
				__jule_tuple_x_1a88ad4d5_Case__jule_tuple_bool __jule_assign_result = _1a93a9b29_buildCase(_self_, &(_71533_tokens), _71551_typeMatch);
				_72522_c = __jule_assign_result.__jule_result_arg0;
				_72525_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72525_isDefault) {
				_72522_c.get()._field_Token=_72021_tok;
				if ((_71717_def == nullptr)) {
					_71717_def=jule::new_ptr<_1a88ac418_Else>(_1a88ac418_Else{._field_Token=_72522_c.get()._field_Token, ._field_Scope=_72522_c.get()._field_Scope});
				} else {
					_1a93a310b_pushErr(_self_, _72021_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_71817_defNotLast=(_71817_defNotLast || (_71717_def != nullptr));
				{ jule::Slice<jule::Ptr<_1a88ad4d5_Case>> &__jule_push_dest = _71617_cases; __jule_push_dest.push(_72522_c); };
			};
		}
	_iter_next_1ac4a5617:;
	}
	_iter_end_1ac4a5617:;;
	if (_71817_defNotLast) {
		_1a93a310b_pushErr(_self_, _71717_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71617_cases;
	__jule_func_result.__jule_result_arg1 = _71717_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1a88adbab_MatchCase> _1a93aa2de_buildMatchCase(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _74937_tokens) {
	jule::Ptr<_1a88adbab_MatchCase> _75017_m = jule::new_ptr<_1a88adbab_MatchCase>(_1a88adbab_MatchCase{._field_Token=_74937_tokens[0LL], });;
	_74937_tokens=_74937_tokens.slice(1LL);
	if (((_74937_tokens.len() > 0LL) && (_74937_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)))) {
		_75017_m.get()._field_TypeMatch=true;
		_74937_tokens=_74937_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _76017_exprTokens = _1a93b8b05_getBlockExpr(&(_74937_tokens));;
	if ((_76017_exprTokens.len() > 0LL)) {
		_75017_m.get()._field_Expr=_1a93be688_buildExpr((*(_self_))._field_p, &(_76017_exprTokens));
	} else if (_75017_m.get()._field_TypeMatch) {
		_1a93a310b_pushErr(_self_, _75017_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I64 _76717_i = _76017_exprTokens.len();;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _76817_blockToks = _1a93bbbc4_range(&(_76717_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74937_tokens));;
	if ((_76817_blockToks == nullptr)) {
		_1a93a25a0_stop(_self_);
		_1a93a310b_pushErr(_self_, _75017_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1a93a342a_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76717_i < _74937_tokens.len())) {
		_1a93a310b_pushErr(_self_, _74937_tokens[_76717_i], jule::Str("invalid syntax", 14));
	};
	_75017_m.get()._field_End=_74937_tokens[(_76717_i - 1LL)];
	({
		__jule_tuple_sx_1a88ad4d5_Case__jule_tuple_x_1a88ac418_Else __jule_assign_result = _1a93a9ed1_buildCases(_self_, _76817_blockToks, _75017_m.get()._field_TypeMatch);
		_75017_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75017_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75017_m;;
}



inline jule::Ptr<_1a88a6c2b_ScopeTree> _1a93aa5ec_buildScopeSt(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _78235_tokens) {
	jule::Bool _78317_isUnsafe = false;;
	jule::Bool _78417_isDeferred = false;;
	jule::Ptr<_1a52684c0_Token> _78517_token = _78235_tokens[0LL];;
	if ((_78517_token.get()._field_Id == static_cast<jule::U64>(31LLU))) {
		_78317_isUnsafe=true;
		_78235_tokens=_78235_tokens.slice(1LL);
		if ((_78235_tokens.len() == 0LL)) {
			_1a93a310b_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78517_token=_78235_tokens[0LL];
		if ((_78517_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
			_78417_isDeferred=true;
			_78235_tokens=_78235_tokens.slice(1LL);
			if ((_78235_tokens.len() == 0LL)) {
				_1a93a310b_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78517_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		_78417_isDeferred=true;
		_78235_tokens=_78235_tokens.slice(1LL);
		if ((_78235_tokens.len() == 0LL)) {
			_1a93a310b_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81117_i = 0LL;;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _81217_scopeTokens = _1a93bbbc4_range(&(_81117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78235_tokens));;
	if ((_81217_scopeTokens == nullptr)) {
		_1a93a310b_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81117_i < _78235_tokens.len())) {
		_1a93a310b_pushErr(_self_, _78235_tokens[_81117_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1a88a6c2b_ScopeTree> _81917_scope = _1a93a3cbb_buildScope(_self_, &(_81217_scopeTokens), _78235_tokens[(_81117_i - 1LL)]);;
	_81917_scope.get()._field_Unsafety=_78317_isUnsafe;
	_81917_scope.get()._field_Deferred=_78417_isDeferred;
	return _81917_scope;;
}



inline jule::Ptr<_1a88a4443_LabelSt> _1a93aa90a_buildLabelSt(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _82536_tokens) {
	jule::Ptr<_1a88a4443_LabelSt> _82617_lbl = jule::new_ptr<_1a88a4443_LabelSt>(_1a88a4443_LabelSt{._field_Token=(*(_82536_tokens))[0LL], ._field_Ident=(*(_82536_tokens))[0LL].get()._field_Kind});;
	if (((*(_82536_tokens)).len() > 2LL)) {
		(*(_82536_tokens))=(*(_82536_tokens)).slice(2LL);
		_1a93a36a0_insertAsNext(_self_, _82536_tokens);
	};
	return _82617_lbl;;
}



inline __jule_tuple__1a88a63e0_StmtData__jule_tuple_bool _1a93aac18_buildIdSt(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _84033_tokens) {
	__jule_tuple__1a88a63e0_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84033_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a52684c0_Token> _84517_token = (*(_84033_tokens))[1LL];;
	{
		auto &_match_expr{ _84517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1ac4b97e6:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a93aa90a_buildLabelSt(_self_, _84033_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac4b9791:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a93ba134_assignInfo> _1a93ab026_buildAssignInfo(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _85439_tokens) {
	jule::Ptr<_1a93ba134_assignInfo> _85517_info = jule::new_ptr<_1a93ba134_assignInfo>(_1a93ba134_assignInfo{._field_ok=true});;
	jule::I64 _85817_braceN = 0LL;;
	{
		auto expr = _85439_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4bae79:;
		if (it != expr_end) {
			jule::I64 _85914_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> _85921_token = *it;
			{
				{
					auto &_match_expr{ _85921_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac4bbba0:;
						{
							(_85817_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac4bbc27:;
						{
							(_85817_braceN)--;
						}
					}
					_match_end_1ac4bbb06:;
				};
				{
					
					if ((_85817_braceN > 0LL)) {
						_case_begin_1ac4bce04:;
						{
							goto _iter_next_1ac4bae79;
						}
					}
					else if (((!(_1a526d0a7_IsAssignOp(_85921_token.get()._field_Id))) && (_85921_token.get()._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1ac4bce7b:;
						{
							goto _iter_next_1ac4bae79;
						}
					}
					_match_end_1ac4bcd8d:;
				};
				_85517_info.get()._field_l=(*(_85439_tokens)).slice(0LL, _85914_i);
				if ((_85517_info.get()._field_l.len() == 0LL)) {
					_85517_info.get()._field_ok=false;
				};
				_85517_info.get()._field_setter=_85921_token;
				if (((_85914_i + 1LL) >= (*(_85439_tokens)).len())) {
					_85517_info.get()._field_r=nullptr;
					_85517_info.get()._field_ok=_1a526cd10_IsPostfixOp(_85517_info.get()._field_setter.get()._field_Id);
					goto _iter_end_1ac4bae79;
				};
				_85517_info.get()._field_r=(*(_85439_tokens)).slice((_85914_i + 1LL));
				if (_1a526cd10_IsPostfixOp(_85517_info.get()._field_setter.get()._field_Id)) {
					if ((_85517_info.get()._field_r.len() > 0LL)) {
						_1a93a310b_pushErr(_self_, _85517_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85517_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1ac4bae79;
			}
			_iter_next_1ac4bae79:;
			++it;
			_85914_i++;
			goto _iter_begin_1ac4bae79;
		}
		_iter_end_1ac4bae79:;
	};
	return _85517_info;;
}



inline jule::Ptr<_1a88a51e1_AssignLeft> _1a93ab334_buildAssignL(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _89936_tokens) {
	jule::Ptr<_1a88a51e1_AssignLeft> _90017_l = jule::new_ptr<_1a88a51e1_AssignLeft>(_1a88a51e1_AssignLeft{._field_Token=(*(_89936_tokens))[0LL], });;
	if (((*(_89936_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(1LLU))) {
		_90017_l.get()._field_Ident=_90017_l.get()._field_Token.get()._field_Kind;
	};
	_90017_l.get()._field_Expr=_1a93be688_buildExpr((*(_self_))._field_p, _89936_tokens);
	return _90017_l;;
}



inline jule::Slice<jule::Ptr<_1a88a51e1_AssignLeft>> _1a93ab642_buildAssignLs(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>>* _91037_parts) {
	jule::Slice<jule::Ptr<_1a88a51e1_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto expr = _91037_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4c3cb7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _91221_part = *it;
			{
				jule::Ptr<_1a88a51e1_AssignLeft> _91321_l = _1a93ab334_buildAssignL(_self_, &(_91221_part));;
				{ jule::Slice<jule::Ptr<_1a88a51e1_AssignLeft>> &__jule_push_dest = _91117_lefts; __jule_push_dest.push(_91321_l); };
			}
			_iter_next_1ac4c3cb7:;
			++it;
			goto _iter_begin_1ac4c3cb7;
		}
		_iter_end_1ac4c3cb7:;
	};
	return _91117_lefts;;
}



inline __jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool _1a93ab950_buildPlainAssign(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _92040_tokens) {
	__jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a93ba134_assignInfo> _92117_info = _1a93ab026_buildAssignInfo(_self_, _92040_tokens);;
	if ((!(_92117_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a88a5730_AssignSt> _92617_assign = jule::new_ptr<_1a88a5730_AssignSt>(_1a88a5730_AssignSt{._field_Setter=_92117_info.get()._field_setter, });;
	if ((_92117_info.get()._field_setter.get()._field_Id == static_cast<jule::U64>(38LLU))) {
		_92617_assign.get()._field_Declarative=true;
		_92617_assign.get()._field_Right=_1a93be688_buildExpr((*(_self_))._field_p, &(_92117_info.get()._field_r));
		jule::Bool _93417_ok = _1a93abd07_buildDeclAssign1(_self_, &(_92117_info.get()._field_l), &(_92617_assign));;
		__jule_func_result.__jule_result_arg0 = _92617_assign;
		__jule_func_result.__jule_result_arg1 = _93417_ok;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _93818_parts;;
	jule::Slice<_1a4deb40b_Log> _93825_errs;;
	({
		__jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93bc356_parts(&(_92117_info.get()._field_l), static_cast<jule::U64>(5LLU), true);
		_93818_parts = __jule_assign_result.__jule_result_arg0;
		_93825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93825_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_93825_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_92617_assign.get()._field_Left=_1a93ab642_buildAssignLs(_self_, &(_93818_parts));
	if ((_92117_info.get()._field_r != nullptr)) {
		_92617_assign.get()._field_Right=_1a93be688_buildExpr((*(_self_))._field_p, &(_92117_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _92617_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1a93abd07_buildDeclAssign1(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _95240_lefts, jule::Ptr<_1a88a5730_AssignSt>* _95262_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _95418_parts;;
	jule::Slice<_1a4deb40b_Log> _95425_errs;;
	({
		__jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93bc356_parts(_95240_lefts, static_cast<jule::U64>(5LLU), true);
		_95418_parts = __jule_assign_result.__jule_result_arg0;
		_95425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95425_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_95425_errs);;
		return false;;
	};
	{
		auto expr = &(_95418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4cbd9c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _96021_part = *it;
			{
				jule::Bool _96121_isMut = false;;
				jule::Bool _96221_isRef = false;;
				jule::Ptr<_1a52684c0_Token> _96417_token = _96021_part[0LL];;
				if ((_96417_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
					_96121_isMut=true;
					_96021_part=_96021_part.slice(1LL);
					if ((_96021_part.len() == 0LL)) {
						_1a93a310b_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1ac4cbd9c;
					};
				};
				if ((_96021_part[0LL].get()._field_Id == static_cast<jule::U64>(65LLU))) {
					_96221_isRef=true;
					_96021_part=_96021_part.slice(1LL);
					if ((_96021_part.len() == 0LL)) {
						_1a93a310b_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1ac4cbd9c;
					};
				};
				if (((_96021_part[0LL].get()._field_Id != static_cast<jule::U64>(1LLU)) && (_96021_part[0LL].get()._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1a93a310b_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1ac4cbd9c;
				};
				jule::Ptr<_1a88a51e1_AssignLeft> _98821_l = _1a93ab334_buildAssignL(_self_, &(_96021_part));;
				_98821_l.get()._field_Mutable=_96121_isMut;
				_98821_l.get()._field_Reference=_96221_isRef;
				{ jule::Slice<jule::Ptr<_1a88a51e1_AssignLeft>> &__jule_push_dest = (*(_95262_assign)).get()._field_Left; __jule_push_dest.push(_98821_l); };
			}
			_iter_next_1ac4cbd9c:;
			++it;
			goto _iter_begin_1ac4cbd9c;
		}
		_iter_end_1ac4cbd9c:;
	};
	return true;;
}



inline __jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool _1a93ac115_buildDeclAssign(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _99738_tokens) {
	__jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99738_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_99738_tokens=_99738_tokens.slice(1LL);
	jule::Ptr<_1a52684c0_Token> _100317_token = _99738_tokens[0LL];;
	if ((_100317_token.get()._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a88a5730_AssignSt> _100817_assign = jule::new_ptr<_1a88a5730_AssignSt>(_1a88a5730_AssignSt{._field_Declarative=true, });;
	jule::I64 _101217_i = 0LL;;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _101317_rang = _1a93bbbc4_range(&(_101217_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99738_tokens));;
	if ((_101317_rang == nullptr)) {
		_1a93a310b_pushErr(_self_, _100317_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_101217_i + 1LL) < _99738_tokens.len())) {
		_100817_assign.get()._field_Setter=_99738_tokens[_101217_i];
		if ((_100817_assign.get()._field_Setter.get()._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a93a310b_pushErr(_self_, _100817_assign.get()._field_Setter, jule::Str("invalid syntax", 14));
		};
		(_101217_i)++;
		jule::Slice<jule::Ptr<_1a52684c0_Token>> _102321_exprTokens = _99738_tokens.slice(_101217_i);;
		_100817_assign.get()._field_Right=_1a93be688_buildExpr((*(_self_))._field_p, &(_102321_exprTokens));
	};
	jule::Bool _102713_ok = _1a93abd07_buildDeclAssign1(_self_, &(_101317_rang), &(_100817_assign));;
	__jule_func_result.__jule_result_arg0 = _100817_assign;
	__jule_func_result.__jule_result_arg1 = _102713_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool _1a93ac423_buildAssignSt(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _103137_tokens) {
	__jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a93ba4ca_checkAssignTokens(_103137_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_103137_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ac4d87d2:;
			{
				({
					__jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool __jule_assign_result = _1a93ac115_buildDeclAssign(_self_, (*(_103137_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ac4d83e7:;
			{
				({
					__jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool __jule_assign_result = _1a93ab950_buildPlainAssign(_self_, _103137_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ac4d8392:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a889bb11_UseExpr> _1a93ac731_buildUseExpr(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _104636_tokens) {
	if (((*(_104636_tokens)).len() == 1LL)) {
		_1a93a310b_pushErr(_self_, (*(_104636_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1a889bb11_UseExpr> _105117_ue = jule::new_ptr<_1a889bb11_UseExpr>(_1a889bb11_UseExpr{._field_Token=(*(_104636_tokens))[0LL], });;
	(*(_104636_tokens))=(*(_104636_tokens)).slice(1LL);
	_105117_ue.get()._field_Expr=_1a93be688_buildExpr((*(_self_))._field_p, _104636_tokens);
	return _105117_ue;;
}



inline jule::Any _1a93aca3e_buildSt(_1a93a1e51_scopeParser* _self_, jule::Ptr<_1a93a1626_stmt>* _105931_st) {
	jule::Ptr<_1a52684c0_Token> _106017_token = (*(_105931_st)).get()._field_tokens[0LL];;
	if ((_106017_token.get()._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _106222_s = jule::Any(nullptr);;
		jule::Bool _106225_ok = false;;
		({
			__jule_tuple__1a88a63e0_StmtData__jule_tuple_bool __jule_assign_result = _1a93aac18_buildIdSt(_self_, &((*(_105931_st)).get()._field_tokens));
			_106222_s = __jule_assign_result.__jule_result_arg0;
			_106225_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_106225_ok) {
			return _106222_s;;
		};
	};
	jule::Ptr<_1a88a5730_AssignSt> _106818_s;;
	jule::Bool _106821_ok = false;;
	({
		__jule_tuple_x_1a88a5730_AssignSt__jule_tuple_bool __jule_assign_result = _1a93ac423_buildAssignSt(_self_, &((*(_105931_st)).get()._field_tokens));
		_106818_s = __jule_assign_result.__jule_result_arg0;
		_106821_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106821_ok) {
		return jule::Any(_106818_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _106017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ac4dd62d:;
			{
				return jule::Any(_1a93ac731_buildUseExpr(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ac4dd40d:;
			{
				return jule::Any(_1a93a40c9_buildVarSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1ac4dd474:;
			{
				return jule::Any(_1a93a43d7_buildRetSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1ac4dd4da:;
			{
				return jule::Any(_1a93a6d24_buildIterSt(_self_, _105931_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ac4dd73d:;
			{
				return jule::Any(_1a93a7132_buildBreakSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1ac4dd7a4:;
			{
				return jule::Any(_1a93a7440_buildContSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1ac4dd81a:;
			{
				return jule::Any(_1a93a7d69_buildIfElseChain(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1ac4dd892:;
			{
				return jule::Any(_1a93a8177_buildCoCallSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1ac4dd919:;
			{
				return jule::Any(_1a93a8485_buildGotoSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1ac4dd991:;
			{
				return jule::Any(_1a93a8793_buildFallSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac4dda18:;
			{
				return jule::Any(_1a93a8aa1_buildTypeAliasSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ac4dda90:;
			{
				return jule::Any(_1a93aa2de_buildMatchCase(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ac4ddb17:;
			{
				return jule::Any(_1a93aa5ec_buildScopeSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ac4ddb8e:;
			{
				return jule::Any(_1a93aa5ec_buildScopeSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		_match_end_1ac4dd111:;
	};
	jule::Ptr<_1a889b270_Expr> _110717_expr = _1a93be688_buildExpr((*(_self_))._field_p, &((*(_105931_st)).get()._field_tokens));;
	if ((_110717_expr != nullptr)) {
		return jule::Any(_110717_expr, &__jule_any_type53);;
	};
	_1a93a310b_pushErr(_self_, _106017_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1a93acd5d_build(_1a93a1e51_scopeParser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _111529_tokens, jule::Ptr<_1a88a6c2b_ScopeTree>* _111552_s) {
	if (((*(_111552_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a93a19bc_splitStmts(_111529_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_111552_s));
	while (((!(_1a93a2cdc_isLastSt(_self_))) && (!(_1a93a2a78_finished(_self_))))) {
		{
			jule::Ptr<_1a93a1626_stmt> _112321_st = _1a93a3914_next(_self_);;
			jule::Any _112421_data = _1a93aca3e_buildSt(_self_, &(_112321_st));;
			if ((_112421_data != nullptr)) {
				{ jule::Slice<_1a88a6621_Stmt> &__jule_push_dest = (*(_self_))._field_s.get()._field_Stmts; __jule_push_dest.push(_1a88a6621_Stmt{._field_Token=_112321_st.get()._field_tokens[0LL], ._field_Data=_112421_data}); };
			};
			if (_1a93a2814_stopped(_self_)) {
				goto _iter_end_1ac4e62b2;
			};
		}
	_iter_next_1ac4e62b2:;
	}
	_iter_end_1ac4e62b2:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a93a1e51_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1a93ae07e_pushErr(_1a93ad7ed_exprBuilder* _self_, jule::Ptr<_1a52684c0_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1a93be05b_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1a93ae39d_pushSuggestion(_1a93ad7ed_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1a93be37a_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1a889bdec_TupleExpr> _1a93ae6ab_buildTuple(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>>* _5434_parts) {
	jule::Ptr<_1a889bdec_TupleExpr> _5517_tuple = jule::new_ptr<_1a889bdec_TupleExpr>(_1a889bdec_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1a889b270_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac513e17:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a889b270_Expr>> &__jule_push_dest = _5517_tuple.get()._field_Expr; __jule_push_dest.push(_1a93b81cb_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1ac513e17:;
			++it;
			goto _iter_begin_1ac513e17;
		}
		_iter_end_1ac513e17:;
	};
	return _5517_tuple;;
}



inline jule::Ptr<_1a889c2a4_LitExpr> _1a93ae9b9_buildLit(_1a93ad7ed_exprBuilder* _self_, jule::Ptr<_1a52684c0_Token> _6427_token) {
	return jule::new_ptr<_1a889c2a4_LitExpr>(_1a889c2a4_LitExpr{._field_Token=_6427_token, ._field_Value=_6427_token.get()._field_Kind});;
}



inline jule::Any _1a93b00d5_buildSingle(_1a93ad7ed_exprBuilder* _self_, jule::Ptr<_1a52684c0_Token> _7534_token) {
	{
		auto &_match_expr{ _7534_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1ac5159eb:;
			{
				return jule::Any(_1a93ae9b9_buildLit(_self_, _7534_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1ac515a62:;
			{
				return jule::Any(jule::new_ptr<_1a889d926_VariadicExpr>(_1a889d926_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type81);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1ac515ac8:;
			{
				return jule::Any(_1a93b94c9_buildIdentExpr(&(_7534_token)), &__jule_any_type85);;
			}
		}
		_match_end_1ac515941:;
	};
	_1a93ae07e_pushErr(_self_, _7534_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a889cd65_IdentExpr> _1a93b03e3_buildBindIdent(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _9238_tokens) {
	if (((*(_9238_tokens))[0LL].get()._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*(_9238_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
		_1a93ae07e_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93ae39d_pushSuggestion(_self_, jule::Str("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a52684c0_Token> _10017_token = (*(_9238_tokens))[2LL];;
	if ((_10017_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93ae07e_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93ae39d_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a889cd65_IdentExpr> _10617_expr = _1a93b94c9_buildIdentExpr(&(_10017_token));;
	_10617_expr.get()._field_Binded=true;
	return _10617_expr;;
}



inline jule::Ptr<_1a889d56e_UnaryExpr> _1a93b0701_buildUnary(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _11133_tokens) {
	jule::Ptr<_1a52684c0_Token> _11217_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1a93ae07e_pushErr(_self_, _11217_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1a5268bc9_IsUnaryOp(_11217_op.get()._field_Id)))) {
		_1a93ae07e_pushErr(_self_, _11217_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11217_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11133_tokens=_11133_tokens.slice(1LL);
	return jule::new_ptr<_1a889d56e_UnaryExpr>(_1a889d56e_UnaryExpr{._field_Op=_11217_op, ._field_Expr=_1a93b81cb_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1a889e608_SubIdentExpr> _1a93b0a0e_buildObjSubIdent(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _13239_tokens) {
	jule::I64 _13317_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1a52684c0_Token> _13417_identToken = _13239_tokens[_13317_i];;
	(_13317_i)--;
	_13239_tokens=_13239_tokens.slice(0LL, _13317_i);
	if ((_13239_tokens.len() == 0LL)) {
		_1a93ae07e_pushErr(_self_, _13417_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a889e608_SubIdentExpr>(_1a889e608_SubIdentExpr{._field_Expr=_1a93b81cb_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13417_identToken});;
}



inline jule::Ptr<_1a889e185_NsSelectionExpr> _1a93b0d1c_buildNsSubIdent(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _14739_tokens) {
	jule::Ptr<_1a889e185_NsSelectionExpr> _14817_ns = jule::new_ptr<_1a889e185_NsSelectionExpr>();;
	{
		auto expr = _14739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5204d9:;
		if (it != expr_end) {
			jule::I64 _14914_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> _14921_token = *it;
			{
				if (((_14914_i & 1LL) == 0LL)) {
					if ((_14921_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
						_1a93ae07e_pushErr(_self_, _14921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a93ae39d_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					{ jule::Slice<jule::Ptr<_1a52684c0_Token>> &__jule_push_dest = _14817_ns.get()._field_Ns; __jule_push_dest.push(_14921_token); };
				} else if ((_14921_token.get()._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a93ae07e_pushErr(_self_, _14921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a93ae39d_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ac5204d9:;
			++it;
			_14914_i++;
			goto _iter_begin_1ac5204d9;
		}
		_iter_end_1ac5204d9:;
	};
	_14817_ns.get()._field_Ident=_14817_ns.get()._field_Ns[(_14817_ns.get()._field_Ns.len() - 1LL)];
	_14817_ns.get()._field_Ns=_14817_ns.get()._field_Ns.slice(0LL, (_14817_ns.get()._field_Ns.len() - 1LL));
	return _14817_ns;;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93b112a_buildType(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _16633_tokens) {
	jule::I64 _16717_i = 0LL;;
	jule::Ptr<_1a88970e5_TypeDecl> _16818_t;;
	jule::Bool _16821_ok = false;;
	({
		__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType((*(_self_))._field_p, _16633_tokens, (&(_16717_i)), false);
		_16818_t = __jule_assign_result.__jule_result_arg0;
		_16821_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_16821_ok))) {
		_1a93ae07e_pushErr(_self_, (*(_16633_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16717_i < (*(_16633_tokens)).len())) {
		_1a93ae07e_pushErr(_self_, (*(_16633_tokens))[_16717_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _16818_t;;
}



inline jule::Any _1a93b1438_buildSubIdent(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _18037_tokens) {
	jule::I64 _18113_i = ((*(_18037_tokens)).len() - 2LL);;
	jule::Ptr<_1a52684c0_Token> _18213_token = (*(_18037_tokens))[_18113_i];;
	{
		auto &_match_expr{ _18213_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1ac527326:;
			{
				return jule::Any(_1a93b0a0e_buildObjSubIdent(_self_, (*(_18037_tokens))), &__jule_any_type91);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ac526776:;
			{
				return jule::Any(_1a93b0d1c_buildNsSubIdent(_self_, _18037_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1ac527458:;
			{
				return jule::Any(_1a93b112a_buildType(_self_, _18037_tokens), &__jule_any_type94);;
			}
		}
		_match_end_1ac5272c1:;
	};
	_1a93ae07e_pushErr(_self_, _18213_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a889d926_VariadicExpr> _1a93b1746_buildVariadic(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _19636_tokens) {
	jule::Ptr<_1a52684c0_Token> _19717_token = _19636_tokens[(_19636_tokens.len() - 1LL)];;
	_19636_tokens=_19636_tokens.slice(0LL, (_19636_tokens.len() - 1LL));
	return jule::new_ptr<_1a889d926_VariadicExpr>(_1a889d926_VariadicExpr{._field_Token=_19717_token, ._field_Expr=_1a93b81cb_buildFromTokens(_self_, _19636_tokens)});;
}



inline jule::Ptr<_1a889b55b_RangeExpr> _1a93b1a76_buildBetweenParentheses(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _20546_tokens) {
	if ((_20546_tokens.len() == 2LL)) {
		_1a93ae07e_pushErr(_self_, _20546_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1a93ae39d_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20546_tokens=_20546_tokens.slice(1LL, (_20546_tokens.len() - 1LL));
	return jule::new_ptr<_1a889b55b_RangeExpr>(_1a889b55b_RangeExpr{._field_Expr=_1a93b81cb_buildFromTokens(_self_, _20546_tokens)});;
}



inline jule::Ptr<_1a889dccd_CastExpr> _1a93b1d95_tryBuildCast(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _21736_tokens) {
	jule::I64 _21817_rangeN = 0LL;;
	{
		auto expr = _21736_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac52c381:;
		if (it != expr_end) {
			jule::I64 _21913_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> _21916_token = *it;
			{
				{
					auto &_match_expr{ _21916_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac52d063:;
						{
							(_21817_rangeN)++;
							goto _iter_next_1ac52c381;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac52d0da:;
						{
							(_21817_rangeN)--;
						}
					}
					_match_end_1ac52cd43:;
				};
				if ((_21817_rangeN > 0LL)) {
					goto _iter_next_1ac52c381;
				} else if (((_21913_i + 1LL) == (*(_21736_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1a52684c0_Token>> _23821_typeTokens = (*(_21736_tokens)).slice(0LL, (_21913_i + 1LL));;
				jule::Slice<jule::Ptr<_1a52684c0_Token>> _23921_exprTokens = (*(_21736_tokens)).slice((_21913_i + 1LL));;
				if ((_23921_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1a52684c0_Token> _24617_tok = _23921_exprTokens[0LL];;
				if ((_24617_tok.get()._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1a889dccd_CastExpr> _25121_cast = jule::new_ptr<_1a889dccd_CastExpr>(_1a889dccd_CastExpr{});;
				if ((_23921_exprTokens.len() == 2LL)) {
					_1a93ae07e_pushErr(_self_, _23921_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1a93ae39d_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_23821_typeTokens.len() == 2LL)) {
					_1a93ae07e_pushErr(_self_, _23821_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1a93ae39d_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_23821_typeTokens=_23821_typeTokens.slice(1LL, (_23821_typeTokens.len() - 1LL));
					jule::I64 _26525_typeIndex = 0LL;;
					jule::Ptr<_1a88970e5_TypeDecl> _26626_t;;
					jule::Bool _26629_ok = false;;
					({
						__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType((*(_self_))._field_p, &(_23821_typeTokens), (&(_26525_typeIndex)), true);
						_26626_t = __jule_assign_result.__jule_result_arg0;
						_26629_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_26629_ok && (_26525_typeIndex < _23821_typeTokens.len()))) {
						_1a93ae07e_pushErr(_self_, _23821_typeTokens[_26525_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_26629_ok))) {
						return _25121_cast;;
					};
					_25121_cast.get()._field_Kind=_26626_t;
					if ((_23921_exprTokens.len() > 2LL)) {
						jule::I64 _27629_j = 0LL;;
						_1a93bbbc4_range(&(_27629_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_23921_exprTokens));
						if ((_27629_j < _23921_exprTokens.len())) {
							return nullptr;;
						};
						_23921_exprTokens=_23921_exprTokens.slice(0LL, _27629_j);
						_25121_cast.get()._field_Expr=_1a93b81cb_buildFromTokens(_self_, _23921_exprTokens);
					};
				};
				return _25121_cast;;
			}
			_iter_next_1ac52c381:;
			++it;
			_21913_i++;
			goto _iter_begin_1ac52c381;
		}
		_iter_end_1ac52c381:;
	};
	return nullptr;;
}



inline void _1a93b225d_pushArg(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a889b270_Expr>>* _29131_args, jule::Slice<jule::Ptr<_1a52684c0_Token>> _29150_tokens, jule::Ptr<_1a52684c0_Token> _29168_err_token) {
	if ((_29150_tokens.len() == 0LL)) {
		_1a93ae07e_pushErr(_self_, _29168_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93ae39d_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1a889b270_Expr>> &__jule_push_dest = (*(_29131_args)); __jule_push_dest.push(_1a93b81cb_buildFromTokens(_self_, _29150_tokens)); };
}



inline jule::Slice<jule::Ptr<_1a889b270_Expr>> _1a93b256b_buildArgs(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _30032_tokens) {
	if ((_30032_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a889b270_Expr>> _30617_args = nullptr;;
	jule::I64 _30717_last = 0LL;;
	jule::I64 _30817_rangeN = 0LL;;
	_30032_tokens=_30032_tokens.slice(1LL, (_30032_tokens.len() - 1LL));
	{
		auto expr = &(_30032_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac539965:;
		if (it != expr_end) {
			jule::I64 _31013_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> _31016_token = *it;
			{
				{
					auto &_match_expr{ _31016_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac53a966:;
						{
							(_30817_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac53a9dd:;
						{
							(_30817_rangeN)--;
						}
					}
					_match_end_1ac53a746:;
				};
				if (((_30817_rangeN > 0LL) || (_31016_token.get()._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1ac539965;
				};
				_1a93b225d_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last, _31013_i), _31016_token);
				_30717_last=static_cast<jule::I64>((_31013_i + 1LL));
			}
			_iter_next_1ac539965:;
			++it;
			_31013_i++;
			goto _iter_begin_1ac539965;
		}
		_iter_end_1ac539965:;
	};
	if ((_30717_last < _30032_tokens.len())) {
		if ((_30717_last == 0LL)) {
			if ((_30032_tokens.len() > 0LL)) {
				_1a93b225d_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last), _30032_tokens[_30717_last]);
			};
		} else {
			_1a93b225d_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last), _30032_tokens[(_30717_last - 1LL)]);
		};
	};
	return _30617_args;;
}



inline jule::Ptr<_1a88a0186_FnCallExpr> _1a93b2cca_buildFnCall(_1a93ad7ed_exprBuilder* _self_, jule::Ptr<_1a52684c0_Token>* _36635_token, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _36655_expr, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _36676_args) {
	return jule::new_ptr<_1a88a0186_FnCallExpr>(_1a88a0186_FnCallExpr{._field_Token=(*(_36635_token)), ._field_Expr=_1a93b81cb_buildFromTokens(_self_, (*(_36655_expr))), ._field_Args=_1a93b256b_buildArgs(_self_, (*(_36676_args))), });;
}



inline jule::Any _1a93b30d8_buildParenthesesRange(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _37445_tokens) {
	jule::Ptr<_1a52684c0_Token> _37517_token = (*(_37445_tokens))[0LL];;
	if ((_37517_token.get()._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1a889dccd_CastExpr> _37721_expr = _1a93b1d95_tryBuildCast(_self_, _37445_tokens);;
		if ((_37721_expr != nullptr)) {
			return jule::Any(_37721_expr, &__jule_any_type109);;
		};
	};
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _38218_exprTokens;;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _38234_args_tokens;;
	({
		__jule_tuple_sx_1a52684c0_Token__jule_tuple_sx_1a52684c0_Token __jule_assign_result = _1a93bbe6b_rangeLast(_37445_tokens);
		_38218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38218_exprTokens.len() == 0LL)) {
		return jule::Any(_1a93b1a76_buildBetweenParentheses(_self_, _38234_args_tokens), &__jule_any_type104);;
	};
	return jule::Any(_1a93b2cca_buildFnCall(_self_, &(_37517_token), &(_38218_exprTokens), &(_38234_args_tokens)), &__jule_any_type111);;
}



inline jule::Ptr<_1a889c8e2_UnsafeExpr> _1a93b33e6_buildUnsafeExpr(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _39138_tokens) {
	jule::Ptr<_1a52684c0_Token> _39217_token = _39138_tokens[0LL];;
	_39138_tokens=_39138_tokens.slice(1LL);
	jule::I64 _39417_i = 0LL;;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _39517_rangeTokens = _1a93bbbc4_range(&(_39417_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39138_tokens));;
	if ((_39517_rangeTokens.len() == 0LL)) {
		_1a93ae07e_pushErr(_self_, _39138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a889c8e2_UnsafeExpr>(_1a889c8e2_UnsafeExpr{._field_Token=_39217_token, ._field_Expr=_1a93b81cb_buildFromTokens(_self_, _39517_rangeTokens)});;
}



inline jule::Ptr<_1a88a8722_FnDecl> _1a93b3704_buildAnonFn(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _40635_tokens) {
	jule::Ptr<_1a88a8722_FnDecl> _40717_f = _1a93c4abc_buildFn((*(_self_))._field_p, _40635_tokens, false, false);;
	if ((!(_1a88a8a74_IsAnon(_40717_f.ptr())))) {
		_1a93ae07e_pushErr(_self_, _40717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93ae39d_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _40717_f;;
}



inline jule::Any _1a93b3a12_buildUnsafe(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _41535_tokens) {
	{
		auto &_match_expr{ (*(_41535_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac54aa53:;
			{
				return jule::Any(_1a93b3704_buildAnonFn(_self_, _41535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1ac54ae1b:;
			{
				return jule::Any(_1a93b33e6_buildUnsafeExpr(_self_, (*(_41535_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_1ac54ad94:;
	};
}



inline void _1a93b3dca_pushRangeLitPart(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _42539_part, jule::Ptr<_1a52684c0_Token> _4269_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>>* _42634_parts) {
	if ((_42539_part.len() == 0LL)) {
		_1a93ae07e_pushErr(_self_, _4269_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93ae39d_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> &__jule_push_dest = (*(_42634_parts)); __jule_push_dest.push(_42539_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _1a93b420a_getBraceRangeLitExprParts(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _43648_tokens) {
	if ((_43648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _44217_parts = nullptr;;
	jule::I64 _44417_last = 0LL;;
	jule::I64 _44517_rangeN = 0LL;;
	_43648_tokens=_43648_tokens.slice(1LL, (_43648_tokens.len() - 1LL));
	{
		auto expr = &(_43648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac54e98b:;
		if (it != expr_end) {
			jule::I64 _44713_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> _44716_token = *it;
			{
				{
					auto &_match_expr{ _44716_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac55098c:;
						{
							(_44517_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac550a14:;
						{
							(_44517_rangeN)--;
						}
					}
					_match_end_1ac55076c:;
				};
				if (((_44517_rangeN > 0LL) || (_44716_token.get()._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1ac54e98b;
				};
				_1a93b3dca_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last, _44713_i), _44716_token, &(_44217_parts));
				_44417_last=static_cast<jule::I64>((_44713_i + 1LL));
			}
			_iter_next_1ac54e98b:;
			++it;
			_44713_i++;
			goto _iter_begin_1ac54e98b;
		}
		_iter_end_1ac54e98b:;
	};
	if ((_44417_last < _43648_tokens.len())) {
		if ((_44417_last == 0LL)) {
			if ((_43648_tokens.len() > 0LL)) {
				_1a93b3dca_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last), _43648_tokens[_44417_last], &(_44217_parts));
			};
		} else {
			_1a93b3dca_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last), _43648_tokens[(_44417_last - 1LL)], &(_44217_parts));
		};
	};
	return _44217_parts;;
}



inline jule::Ptr<_1a88a0b15_FieldExprPair> _1a93b4529_buildFieldExprPair(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _47841_tokens) {
	if (((_47841_tokens.len() - 2LL) == 0LL)) {
		_1a93ae07e_pushErr(_self_, _47841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a88a0b15_FieldExprPair> _48317_pair = jule::new_ptr<_1a88a0b15_FieldExprPair>(_1a88a0b15_FieldExprPair{._field_Field=_47841_tokens[0LL], });;
	_47841_tokens=_47841_tokens.slice(2LL);
	_48317_pair.get()._field_Expr=_1a93b81cb_buildFromTokens(_self_, _47841_tokens);
	return _48317_pair;;
}



inline jule::Ptr<_1a889b270_Expr> _1a93b4837_buildStructLitExpr(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _49142_tokens) {
	jule::Ptr<_1a52684c0_Token> _49217_token = (*(_49142_tokens))[0LL];;
	if (((_49217_token.get()._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49142_tokens)).len() > 1LL))) {
		_49217_token=(*(_49142_tokens))[1LL];
		if ((_49217_token.get()._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1a889b270_Expr>(_1a889b270_Expr{._field_Token=_49217_token, ._field_End=(*(_49142_tokens))[((*(_49142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a93b4529_buildFieldExprPair(_self_, (*(_49142_tokens))), &__jule_any_type83)});;
		};
	};
	return _1a93b81cb_buildFromTokens(_self_, (*(_49142_tokens)));;
}



inline jule::Slice<jule::Ptr<_1a889b270_Expr>> _1a93b4b45_buildStructLitExprs(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _50643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _50717_parts = _1a93b420a_getBraceRangeLitExprParts(_self_, (*(_50643_tokens)));;
	if ((_50717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a889b270_Expr>> _51217_pairs = jule::Slice<jule::Ptr<_1a889b270_Expr>>::alloc(0LL, _50717_parts.len());;
	{
		auto expr = &(_50717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5588eb:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _51321_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a889b270_Expr>> &__jule_push_dest = _51217_pairs; __jule_push_dest.push(_1a93b4837_buildStructLitExpr(_self_, &(_51321_part))); };
			}
			_iter_next_1ac5588eb:;
			++it;
			goto _iter_begin_1ac5588eb;
		}
		_iter_end_1ac5588eb:;
	};
	return _51217_pairs;;
}



inline jule::Ptr<_1a88a13da_StructLit> _1a93b4e75_buildTypedStructLiteral(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _51946_tokens) {
	jule::I64 _52017_i = 0LL;;
	jule::Ptr<_1a88970e5_TypeDecl> _52118_t;;
	jule::Bool _52121_ok = false;;
	({
		__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType((*(_self_))._field_p, &(_51946_tokens), (&(_52017_i)), true);
		_52118_t = __jule_assign_result.__jule_result_arg0;
		_52121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52121_ok))) {
		return nullptr;;
	} else if ((_52017_i >= _51946_tokens.len())) {
		_1a93ae07e_pushErr(_self_, _51946_tokens[_52017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_51946_tokens=_51946_tokens.slice(_52017_i);
	jule::Ptr<_1a52684c0_Token> _53013_token = _51946_tokens[0LL];;
	if ((_53013_token.get()._field_Id != static_cast<jule::U64>(72LLU))) {
		_1a93ae07e_pushErr(_self_, _53013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a88a13da_StructLit>(_1a88a13da_StructLit{._field_End=_51946_tokens[(_51946_tokens.len() - 1LL)], ._field_Kind=_52118_t, ._field_Exprs=_1a93b4b45_buildStructLitExprs(_self_, &(_51946_tokens))});;
}



inline jule::Ptr<_1a889b270_Expr> _1a93b5294_buildBraceLitPart(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _54341_tokens) {
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _54418_l;;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _54425_r;;
	({
		__jule_tuple_sx_1a52684c0_Token__jule_tuple_sx_1a52684c0_Token __jule_assign_result = _1a93b8e8a_splitDelim(_54341_tokens, static_cast<jule::U64>(8LLU));
		_54418_l = __jule_assign_result.__jule_result_arg0;
		_54425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54418_l != nullptr)) {
		return jule::new_ptr<_1a889b270_Expr>(_1a889b270_Expr{._field_Token=(*(_54341_tokens))[0LL], ._field_End=(*(_54341_tokens))[((*(_54341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1a88a2243_KeyValPair>(_1a88a2243_KeyValPair{._field_Key=_1a93b81cb_buildFromTokens(_self_, _54418_l), ._field_Val=_1a93b81cb_buildFromTokens(_self_, _54425_r), ._field_Colon=(*(_54341_tokens))[_54418_l.len()]}), &__jule_any_type84)});;
	};
	return _1a93b81cb_buildFromTokens(_self_, (*(_54341_tokens)));;
}



inline jule::Ptr<_1a88a185d_BraceLit> _1a93b55a2_buildBraceLit(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _56037_tokens) {
	jule::Ptr<_1a88a185d_BraceLit> _56117_lit = jule::new_ptr<_1a88a185d_BraceLit>(_1a88a185d_BraceLit{._field_Token=(*(_56037_tokens))[0LL], ._field_End=(*(_56037_tokens))[((*(_56037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _56617_parts = _1a93b420a_getBraceRangeLitExprParts(_self_, (*(_56037_tokens)));;
	if ((_56617_parts == nullptr)) {
		return _56117_lit;;
	};
	_56117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1a889b270_Expr>>::alloc(0LL, _56617_parts.len());
	{
		auto expr = &(_56617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac56275c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _57221_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a889b270_Expr>> &__jule_push_dest = _56117_lit.get()._field_Exprs; __jule_push_dest.push(_1a93b5294_buildBraceLitPart(_self_, &(_57221_part))); };
			}
			_iter_next_1ac56275c:;
			++it;
			goto _iter_begin_1ac56275c;
		}
		_iter_end_1ac56275c:;
	};
	return _56117_lit;;
}



inline jule::Any _1a93b58b0_buildBraceRange(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _57939_tokens) {
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _58018_exprTokens;;
	jule::I64 _58030_rangeN = 0;;
	({
		__jule_tuple_sx_1a52684c0_Token__jule_tuple_int __jule_assign_result = _1a93b9771_getRangeExprTokens(_57939_tokens);
		_58018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58018_exprTokens.len() == 0LL)) {
			_case_begin_1ac5640ee:;
			{
				return jule::Any(_1a93b55a2_buildBraceLit(_self_, _57939_tokens), &__jule_any_type112);;
			}
		}
		else if ((_58030_rangeN > 0LL)) {
			_case_begin_1ac5643a7:;
			{
				_1a93ae07e_pushErr(_self_, (*(_57939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac5637d5:;
	};
	jule::Ptr<_1a52684c0_Token> _59113_elseToken = _58018_exprTokens[(_58018_exprTokens.len() - 1LL)];;
	if ((_58018_exprTokens[(_58018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(14LLU))) {
		_58018_exprTokens=_58018_exprTokens.slice(0LL, (_58018_exprTokens.len() - 1LL));
		jule::Any _59421_d = _1a93b7ab0_build(_self_, &(_58018_exprTokens));;
		if ((_59421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _59421_d };
			
			if (_match_expr.type == &__jule_any_type111) {
				_case_begin_1ac56718a:;
				{
					(*(_57939_tokens))=(*(_57939_tokens)).slice((_58018_exprTokens.len() + 1LL));
					jule::I64 _60125_i = 0LL;;
					jule::Slice<jule::Ptr<_1a52684c0_Token>> _60225_rangeTokens = _1a93bbbc4_range(&(_60125_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _57939_tokens);;
					jule::Ptr<_1a88a0186_FnCallExpr> _60325_model = _59421_d.cast_ptr<_1a88a0186_FnCallExpr>(&__jule_any_type111);;
					if (_1a88a075d_Ignored(_60325_model.ptr())) {
						_1a93ae07e_pushErr(_self_, _59113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a93ae39d_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_60325_model.get()._field_Exception=_1a93c00c3_buildScope((*(_self_))._field_p, &(_60225_rangeTokens), (*(_57939_tokens))[(_60125_i - 1LL)]);
					return _59421_d;;
				}
			}
			else {
				_case_begin_1ac566bc3:;
				{
					_1a93ae07e_pushErr(_self_, _58018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1ac566e6a:;
		};
	};
	{
		auto &_match_expr{ _58018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac56adb4:;
			{
				return _1a93b3a12_buildUnsafe(_self_, _57939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac56b5bd:;
			{
				return jule::Any(_1a93b3704_buildAnonFn(_self_, _57939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac56b634:;
			{
				return jule::Any(_1a93b4e75_buildTypedStructLiteral(_self_, (*(_57939_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_1ac5679c6:;
			{
				_1a93ae07e_pushErr(_self_, _58018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac565d48:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _1a93b5bbd_getEnumerableParts(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _63141_tokens) {
	_63141_tokens=_63141_tokens.slice(1LL, (_63141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _63318_parts;;
	jule::Slice<_1a4deb40b_Log> _63325_errors;;
	({
		__jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93bc356_parts(&(_63141_tokens), static_cast<jule::U64>(5LLU), true);
		_63318_parts = __jule_assign_result.__jule_result_arg0;
		_63325_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_63325_errors);;
	return _63318_parts;;
}



inline jule::Ptr<_1a88a28b4_SliceExpr> _1a93b5ecb_buildSlice(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _63833_tokens) {
	jule::Ptr<_1a88a28b4_SliceExpr> _63917_slc = jule::new_ptr<_1a88a28b4_SliceExpr>(_1a88a28b4_SliceExpr{._field_Token=_63833_tokens[0LL], ._field_End=_63833_tokens[(_63833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _64417_parts = _1a93b5bbd_getEnumerableParts(_self_, _63833_tokens);;
	if ((_64417_parts.len() == 0LL)) {
		return _63917_slc;;
	};
	_63917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1a889b270_Expr>>::alloc(0LL, _64417_parts.len());
	{
		auto expr = &(_64417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5707c0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _65021_p = *it;
			{
				if ((_65021_p.len() == 0LL)) {
					goto _iter_next_1ac5707c0;
				};
				{ jule::Slice<jule::Ptr<_1a889b270_Expr>> &__jule_push_dest = _63917_slc.get()._field_Exprs; __jule_push_dest.push(_1a93b81cb_buildFromTokens(_self_, _65021_p)); };
			}
			_iter_next_1ac5707c0:;
			++it;
			goto _iter_begin_1ac5707c0;
		}
		_iter_end_1ac5707c0:;
	};
	return _63917_slc;;
}



inline jule::Ptr<_1a88a3222_IndexingExpr> _1a93b642c_buildIndexing(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _66036_exprTokens, jule::Slice<jule::Ptr<_1a52684c0_Token>> _66113_tokens, jule::Ptr<_1a52684c0_Token> _66135_errorToken) {
	jule::Ptr<_1a52684c0_Token> _66217_end = _66113_tokens[(_66113_tokens.len() - 1LL)];;
	_66113_tokens=_66113_tokens.slice(1LL, (_66113_tokens.len() - 1LL));
	if ((_66113_tokens.len() == 0LL)) {
		_1a93ae07e_pushErr(_self_, _66135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a889b270_Expr> _66817_expr = _1a93b81cb_buildFromTokens(_self_, _66036_exprTokens);;
	if ((_66817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a889b270_Expr> _67217_index = _1a93b81cb_buildFromTokens(_self_, _66113_tokens);;
	if ((_67217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a88a3222_IndexingExpr>(_1a88a3222_IndexingExpr{._field_Token=_66135_errorToken, ._field_End=_66217_end, ._field_Expr=_66817_expr, ._field_Index=_67217_index});;
}



inline jule::Ptr<_1a88a382c_SlicingExpr> _1a93b69c1_buildSlicing(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _68436_exprTokens, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _68463_start, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _68514_to, jule::Ptr<_1a52684c0_Token>* _68533_errorToken, jule::Ptr<_1a52684c0_Token> _68557_end) {
	jule::Ptr<_1a88a382c_SlicingExpr> _68617_slc = jule::new_ptr<_1a88a382c_SlicingExpr>(_1a88a382c_SlicingExpr{._field_Token=(*(_68533_errorToken)), ._field_End=_68557_end, ._field_Expr=_1a93b81cb_buildFromTokens(_self_, (*(_68436_exprTokens))), });;
	if (((*(_68463_start)).len() > 0LL)) {
		_68617_slc.get()._field_Start=_1a93b81cb_buildFromTokens(_self_, (*(_68463_start)));
	};
	if (((*(_68514_to)).len() > 0LL)) {
		_68617_slc.get()._field_To=_1a93b81cb_buildFromTokens(_self_, (*(_68514_to)));
	};
	return _68617_slc;;
}



inline jule::Any _1a93b6cce_buildBracketRange(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _70040_tokens) {
	jule::Ptr<_1a52684c0_Token> _70117_errorToken = _70040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _70218_exprTokens;;
	jule::I64 _70230_rangeN = 0;;
	({
		__jule_tuple_sx_1a52684c0_Token__jule_tuple_int __jule_assign_result = _1a93b9771_getRangeExprTokens(&(_70040_tokens));
		_70218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70218_exprTokens.len() == 0LL)) {
		return jule::Any(_1a93b5ecb_buildSlice(_self_, _70040_tokens), &__jule_any_type99);;
	} else if ((_70230_rangeN > 0LL)) {
		_1a93ae07e_pushErr(_self_, _70117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_70040_tokens=_70040_tokens.slice(_70218_exprTokens.len());
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _71717_splitTokens = _70040_tokens.slice(1LL, (_70040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _71818_start;;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _71829_to;;
	({
		__jule_tuple_sx_1a52684c0_Token__jule_tuple_sx_1a52684c0_Token __jule_assign_result = _1a93b8e8a_splitDelim(&(_71717_splitTokens), static_cast<jule::U64>(8LLU));
		_71818_start = __jule_assign_result.__jule_result_arg0;
		_71829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_71818_start != nullptr) || (_71829_to != nullptr))) {
		return jule::Any(_1a93b69c1_buildSlicing(_self_, &(_70218_exprTokens), &(_71818_start), &(_71829_to), &(_70117_errorToken), _70040_tokens[(_70040_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_1a93b642c_buildIndexing(_self_, _70218_exprTokens, _70040_tokens, _70117_errorToken), &__jule_any_type107);;
}



inline jule::Any _1a93b70dc_buildExclRight(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _72538_tokens) {
	jule::Ptr<_1a52684c0_Token> _72613_token = (*(_72538_tokens))[((*(_72538_tokens)).len() - 1LL)];;
	(*(_72538_tokens))=(*(_72538_tokens)).slice(0LL, ((*(_72538_tokens)).len() - 1LL));
	jule::Any _72817_d = _1a93b7ab0_build(_self_, _72538_tokens);;
	if ((_72817_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _72817_d };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac57d27d:;
			{
				_72817_d.cast_ptr<_1a88a0186_FnCallExpr>(&__jule_any_type111).get()._field_Exception=jule::new_ptr<_1a88a6c2b_ScopeTree>(_1a88a6c2b_ScopeTree{._field_Deferred=true, });
				return _72817_d;;
			}
		}
		_match_end_1ac57d14b:;
	};
	_1a93ae07e_pushErr(_self_, _72613_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a93b73ea_buildData(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _74333_tokens) {
	{
		auto _match_expr{ (*(_74333_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ac57e8de:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ac57e966:;
			{
				return _1a93b00d5_buildSingle(_self_, (*(_74333_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ac57ea32:;
			{
				if (((*(_74333_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1a93b03e3_buildBindIdent(_self_, _74333_tokens), &__jule_any_type85);;
				};
			}
		}
		_match_end_1ac57cea3:;
	};
	jule::Ptr<_1a52684c0_Token> _75517_token = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
	if ((_75517_token.get()._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1a93b1746_buildVariadic(_self_, (*(_74333_tokens))), &__jule_any_type81);;
	};
	_75517_token=(*(_74333_tokens))[0LL];
	if (_1a5268bc9_IsUnaryOp(_75517_token.get()._field_Id)) {
		if (((*(_74333_tokens)).len() > 1LL)) {
			_75517_token=(*(_74333_tokens))[1LL];
			if ((_75517_token.get()._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1a93b112a_buildType(_self_, _74333_tokens), &__jule_any_type94);;
			};
		};
		return jule::Any(_1a93b0701_buildUnary(_self_, (*(_74333_tokens))), &__jule_any_type93);;
	};
	if (((*(_74333_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ _75517_token.get()._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1ac583ae1:;
				{
					if (((*(_74333_tokens)).len() > 3LL)) {
						jule::Ptr<_1a52684c0_Token> _78125_t = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
						if ((_78125_t.get()._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1ac583904;
						};
					};
					jule::Ptr<_1a52684c0_Token> _78721_next = (*(_74333_tokens))[1LL];;
					if ((_78721_next.get()._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1ac583904;
					};
					return jule::Any(_1a93b112a_buildType(_self_, _74333_tokens), &__jule_any_type94);;
				}
			}
			_match_end_1ac583904:;
		};
	};
	_75517_token=(*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _75517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ac58671a:;
			{
				return _1a93b1438_buildSubIdent(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1ac586781:;
			{
				return _1a93b70dc_buildExclRight(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1ac5867e7:;
			{
				return _1a93b30d8_buildParenthesesRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ac58685d:;
			{
				return _1a93b58b0_buildBraceRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1ac5868c4:;
			{
				return _1a93b6cce_buildBracketRange(_self_, (*(_74333_tokens)));;
			}
		}
		_match_end_1ac581638:;
	};
	if ((_75517_token.get()._field_Id == static_cast<jule::U64>(29LLU))) {
		return jule::Any(_1a93b112a_buildType(_self_, _74333_tokens), &__jule_any_type94);;
	};
	_1a93ae07e_pushErr(_self_, _75517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a93b77a2_buildBinop(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _81834_tokens, jule::I64 _81852_i) {
	jule::Ptr<_1a52684c0_Token> _81917_op = (*(_81834_tokens))[_81852_i];;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _82017_leftTokens = (*(_81834_tokens)).slice(0LL, _81852_i);;
	if ((_1a93b8572_isTypeOp(&(_81917_op.get()._field_Id)) && _1a93b885d_isTypeRange(&(_82017_leftTokens)))) {
		return jule::Any(_1a93b112a_buildType(_self_, _81834_tokens), &__jule_any_type94);;
	};
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _82517_rightTokens = (*(_81834_tokens)).slice((_81852_i + 1LL));;
	if ((_82017_leftTokens.len() == 0LL)) {
		_1a93ae07e_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93ae39d_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82517_rightTokens.len() == 0LL)) {
		_1a93ae07e_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93ae39d_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1a889ea7b_BinopExpr>(_1a889ea7b_BinopExpr{._field_Left=_1a93b81cb_buildFromTokens(_self_, _82017_leftTokens), ._field_Right=_1a93b81cb_buildFromTokens(_self_, _82517_rightTokens), ._field_Op=_81917_op}), &__jule_any_type113);;
}



inline jule::Any _1a93b7ab0_build(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _84329_tokens) {
	if (((*(_84329_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1a93b112a_buildType(_self_, _84329_tokens), &__jule_any_type94);;
	};
	jule::I64 _84713_i = _1a93b9232_findLowestPrecOp(_84329_tokens);;
	if ((_84713_i == -1LL)) {
		return _1a93b73ea_buildData(_self_, _84329_tokens);;
	};
	return _1a93b77a2_buildBinop(_self_, _84329_tokens, _84713_i);;
}



inline jule::Any _1a93b7dbd_buildKind(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _85433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _85518_parts;;
	jule::Slice<_1a4deb40b_Log> _85525_errors;;
	({
		__jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93bc356_parts(_85433_tokens, static_cast<jule::U64>(5LLU), true);
		_85518_parts = __jule_assign_result.__jule_result_arg0;
		_85525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85525_errors != nullptr)) {
		((*(_self_))._field_p.get()._field_errors).append(_85525_errors);;
		return nullptr;;
	} else if ((_85518_parts.len() > 1LL)) {
		return jule::Any(_1a93ae6ab_buildTuple(_self_, &(_85518_parts)), &__jule_any_type86);;
	};
	return _1a93b7ab0_build(_self_, _85433_tokens);;
}



inline jule::Ptr<_1a889b270_Expr> _1a93b81cb_buildFromTokens(_1a93ad7ed_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _86538_tokens) {
	if ((_86538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _86917_kind = _1a93b7dbd_buildKind(_self_, &(_86538_tokens));;
	if ((_86917_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a889b270_Expr>(_1a889b270_Expr{._field_Token=_86538_tokens[0LL], ._field_End=_86538_tokens[(_86538_tokens.len() - 1LL)], ._field_Kind=_86917_kind});;
}







std::ostream &operator<<(std::ostream &_Stream, _1a93ad7ed_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a93ba134_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1a93bd92e_stop(_1a93bd643_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a93bdb93_stopped(_1a93bd643_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a93be05b_pushErr(_1a93bd643_parser* _self_, jule::Ptr<_1a52684c0_Token> _23726_token, jule::Str _23741_fmt, jule::Slice<jule::Any> _23754_args) {
	{ jule::Slice<_1a4deb40b_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1a93bc9d8_compilerErr(&(_23726_token), &(_23741_fmt), _23754_args)); };
}



inline void _1a93be37a_pushSuggestion(_1a93bd643_parser* _self_, jule::Str _24233_fmt, jule::Slice<jule::Any> _24246_args) {
	{
		_1a93bcd3a_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _24233_fmt, _24246_args);
	};
}



inline jule::Ptr<_1a889b270_Expr> _1a93be688_buildExpr(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _24634_tokens) {
	return _1a93b81cb_buildFromTokens(_self_.get()._field_ep.ptr(), (*(_24634_tokens)));;
}



inline jule::Ptr<_1a88645ce_Directive> _1a93be996_buildDirective(_1a93bd643_parser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _25037_tokens) {
	if ((_25037_tokens.len() == 1LL)) {
		_1a93be05b_pushErr(_self_, _25037_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_25037_tokens[1LL].get()._field_Column != (_25037_tokens[0LL].get()._field_Column + 1LL))) {
		_1a93be05b_pushErr(_self_, _25037_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a88645ce_Directive>(_1a88645ce_Directive{._field_Tag=_25037_tokens[1LL], ._field_Args=_25037_tokens.slice(2LL)});;
}



inline void _1a93bec1b_pushDirective(_1a93bd643_parser* _self_, jule::Ptr<_1a88645ce_Directive> _26536_d) {
	if ((_26536_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5b8bae:;
		if (it != expr_end) {
			jule::Ptr<_1a88645ce_Directive> _27016_pd = *it;
			{
				if ((_26536_d.get()._field_Tag.get()._field_Kind == _27016_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1ac5b8bae:;
			++it;
			goto _iter_begin_1ac5b8bae;
		}
		_iter_end_1ac5b8bae:;
	};
	{ jule::Slice<jule::Ptr<_1a88645ce_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_26536_d); };
}



inline jule::Ptr<_1a88a6c2b_ScopeTree> _1a93c00c3_buildScope(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _27835_tokens, jule::Ptr<_1a52684c0_Token> _27857_end) {
	jule::Ptr<_1a88a6c2b_ScopeTree> _27917_s = _1a93a0526_newScope();;
	_27917_s.get()._field_End=_27857_end;
	_1a93a1e51_scopeParser _28117_sp = _1a93a1e51_scopeParser{._field_p=_self_, };;
	_1a93acd5d_build(&_28117_sp, _27835_tokens, &(_27917_s));
	return _27917_s;;
}



inline __jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool _1a93c0524__buildType(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _28842_tokens, jule::I64* _28913_i, jule::Bool _28922_err) {
	__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a93ce368_typeBuilder _29017_tb = _1a93ce368_typeBuilder{._field_p=_self_, ._field_tokens=(*(_28842_tokens)), ._field_i=_28913_i, ._field_err=_28922_err};;
	jule::Ptr<_1a88970e5_TypeDecl> _29618_decl;;
	jule::Bool _29624_ok = false;;
	({
		__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93d20c4_build(&_29017_tb);
		_29618_decl = __jule_assign_result.__jule_result_arg0;
		_29624_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _29618_decl;
	__jule_func_result.__jule_result_arg1 = _29624_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool _1a93c0975_buildType(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _30141_tokens, jule::I64* _30213_i, jule::Bool _30222_err) {
	__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a52684c0_Token> _30313_token = (*(_30141_tokens))[(*(_30213_i))];;
	jule::Ptr<_1a88970e5_TypeDecl> _30418_t;;
	jule::Bool _30421_ok = false;;
	({
		__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0524__buildType(_self_, _30141_tokens, _30213_i, _30222_err);
		_30418_t = __jule_assign_result.__jule_result_arg0;
		_30421_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_30222_err && (!(_30421_ok)))) {
		_1a93be05b_pushErr(_self_.ptr(), _30313_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _30418_t;
	__jule_func_result.__jule_result_arg1 = _30421_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1a88ad062_TypeAliasDecl> _1a93c0c83_buildTypeAliasDecl(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _31143_tokens) {
	jule::I64 _31217_i = 1LL;;
	if ((_31217_i >= (*(_31143_tokens)).len())) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_31143_tokens))[(_31217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a88ad062_TypeAliasDecl> _31717_tad = jule::new_ptr<_1a88ad062_TypeAliasDecl>(_1a88ad062_TypeAliasDecl{._field_Token=(*(_31143_tokens))[1LL], ._field_Ident=(*(_31143_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_1a52684c0_Token> _32117_token = (*(_31143_tokens))[_31217_i];;
	if ((_32117_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93be05b_pushErr(_self_.ptr(), _32117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_31217_i)++;
	if ((_31217_i >= (*(_31143_tokens)).len())) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_31143_tokens))[(_31217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _31717_tad;;
	};
	_32117_token=(*(_31143_tokens))[_31217_i];
	if ((_32117_token.get()._field_Id != static_cast<jule::U64>(8LLU))) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_31143_tokens))[(_31217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _31717_tad;;
	};
	(_31217_i)++;
	if ((_31217_i >= (*(_31143_tokens)).len())) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_31143_tokens))[(_31217_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _31717_tad;;
	};
	jule::Ptr<_1a88970e5_TypeDecl> _34218_t;;
	jule::Bool _34221_ok = false;;
	({
		__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, _31143_tokens, (&(_31217_i)), true);
		_34218_t = __jule_assign_result.__jule_result_arg0;
		_34221_ok = __jule_assign_result.__jule_result_arg1;
	});
	_31717_tad.get()._field_Kind=_34218_t;
	if ((_34221_ok && (_31217_i < (*(_31143_tokens)).len()))) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_31143_tokens))[_31217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_31717_tad.get()._field_Public=_1a93cd301_isPub(&(_31717_tad.get()._field_Ident));
	return _31717_tad;;
}



inline void _1a93c10a2_buildVarTypeAndExpr(jule::Ptr<_1a93bd643_parser> _self_, jule::Ptr<_1a88a9701_VarDecl>* _35144_v, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _35162_tokens) {
	jule::I64 _35217_i = 0LL;;
	jule::Ptr<_1a52684c0_Token> _35317_tok = (*(_35162_tokens))[_35217_i];;
	if ((_35317_tok.get()._field_Id == static_cast<jule::U64>(8LLU))) {
		(_35217_i)++;
		if (((_35217_i >= (*(_35162_tokens)).len()) || ((*(_35162_tokens))[_35217_i].get()._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1a93be05b_pushErr(_self_.ptr(), _35317_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a88970e5_TypeDecl> _36022_t;;
		jule::Bool _36025_ok = false;;
		({
			__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, _35162_tokens, (&(_35217_i)), true);
			_36022_t = __jule_assign_result.__jule_result_arg0;
			_36025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_36025_ok) {
			(*(_35144_v)).get()._field_Kind=_36022_t;
			if ((_35217_i >= (*(_35162_tokens)).len())) {
				return;;
			};
			_35317_tok=(*(_35162_tokens))[_35217_i];
		};
	};
	if ((_35317_tok.get()._field_Id != static_cast<jule::U64>(71LLU))) {
		_1a93be05b_pushErr(_self_.ptr(), _35317_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _37517_exprTokens = (*(_35162_tokens)).slice((_35217_i + 1LL));;
	if ((_37517_exprTokens.len() == 0LL)) {
		_1a93be05b_pushErr(_self_.ptr(), _35317_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_35144_v)).get()._field_Expr=_1a93be688_buildExpr(_self_, &(_37517_exprTokens));
}



inline void _1a93c13c1_buildVarCommon(jule::Ptr<_1a93bd643_parser> _self_, jule::Ptr<_1a88a9701_VarDecl>* _38339_v, jule::Slice<jule::Ptr<_1a52684c0_Token>> _38356_tokens) {
	(*(_38339_v)).get()._field_Token=_38356_tokens[0LL];
	if (((*(_38339_v)).get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_38339_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_38339_v)).get()._field_Ident=(*(_38339_v)).get()._field_Token.get()._field_Kind;
	(*(_38339_v)).get()._field_Public=_1a93cd301_isPub(&((*(_38339_v)).get()._field_Ident));
	(*(_38339_v)).get()._field_Kind=nullptr;
	if ((_38356_tokens.len() > 1LL)) {
		_38356_tokens=_38356_tokens.slice(1LL);
		_1a93c10a2_buildVarTypeAndExpr(_self_, _38339_v, &(_38356_tokens));
	};
}



inline void _1a93c1789_buildVarBegin(_1a93bd643_parser* _self_, jule::Ptr<_1a88a9701_VarDecl>* _39937_v, jule::I64* _39955_i, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _39964_tokens) {
	jule::Ptr<_1a52684c0_Token> _40013_tok = (*(_39964_tokens))[(*(_39955_i))];;
	{
		auto &_match_expr{ _40013_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ac5d0555:;
			{
				(*(_39937_v)).get()._field_Statically=true;
				goto _case_begin_1ac5d12e2;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ac5d12e2:;
			{
				((*(_39955_i)))++;
				if (((*(_39955_i)) >= (*(_39964_tokens)).len())) {
					_1a93be05b_pushErr(_self_, _40013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_39964_tokens))[(*(_39955_i))].get()._field_Id == static_cast<jule::U64>(32LLU))) {
					(*(_39937_v)).get()._field_Mutable=true;
					((*(_39955_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1ac5d0a72:;
			{
				((*(_39955_i)))++;
				(*(_39937_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1ac5d09b7:;
			{
				_1a93be05b_pushErr(_self_, _40013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ac5d0841:;
	};
	if (((*(_39955_i)) >= (*(_39964_tokens)).len())) {
		_1a93be05b_pushErr(_self_, _40013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a88a9701_VarDecl> _1a93c1a97_buildVar(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _42932_tokens) {
	jule::I64 _43017_i = 0LL;;
	jule::Ptr<_1a88a9701_VarDecl> _43117_v = jule::new_ptr<_1a88a9701_VarDecl>(_1a88a9701_VarDecl{._field_Token=_42932_tokens[0LL], });;
	_1a93c1789_buildVarBegin(_self_.ptr(), &(_43117_v), &(_43017_i), &(_42932_tokens));
	if ((_43017_i >= _42932_tokens.len())) {
		return nullptr;;
	};
	_42932_tokens=_42932_tokens.slice(_43017_i);
	if ((_42932_tokens[0LL].get()._field_Id == static_cast<jule::U64>(65LLU))) {
		_43117_v.get()._field_Reference=true;
		if ((_42932_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_42932_tokens=_42932_tokens.slice(1LL);
	};
	_1a93c13c1_buildVarCommon(_self_, &(_43117_v), _42932_tokens);
	return _43117_v;;
}



inline jule::Ptr<_1a88a408b_GenericDecl> _1a93c1da5_buildGeneric(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _45137_tokens) {
	jule::Ptr<_1a88a408b_GenericDecl> _45217_g = jule::new_ptr<_1a88a408b_GenericDecl>(_1a88a408b_GenericDecl{._field_Token=(*(_45137_tokens))[0LL], });;
	if ((_45217_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93be05b_pushErr(_self_.ptr(), _45217_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_45217_g.get()._field_Ident=_45217_g.get()._field_Token.get()._field_Kind;
	if (((*(_45137_tokens)).len() > 1LL)) {
		if (((*(_45137_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(8LLU))) {
			_1a93be05b_pushErr(_self_.ptr(), (*(_45137_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_45137_tokens)).len() == 2LL)) {
			_1a93be05b_pushErr(_self_.ptr(), (*(_45137_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1a52684c0_Token>> _46921_constraintTokens = (*(_45137_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _47022_parts;;
		jule::Slice<_1a4deb40b_Log> _47029_errors;;
		({
			__jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93bc356_parts(&(_46921_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_47022_parts = __jule_assign_result.__jule_result_arg0;
			_47029_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_47029_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_47029_errors);;
			return nullptr;;
		};
		_45217_g.get()._field_Constraint=jule::new_ptr<_1a88a3b18_Constraint>(_1a88a3b18_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>>::alloc(0LL, _47022_parts.len())});
		{
			auto expr = &(_47022_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac5db929:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1a52684c0_Token>> _47625_part = *it;
				{
					jule::I64 _47725_i = 0LL;;
					jule::Ptr<_1a88970e5_TypeDecl> _47826_kind;;
					({
						__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, &(_47625_part), (&(_47725_i)), true);
						_47826_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> &__jule_push_dest = _45217_g.get()._field_Constraint.get()._field_Mask; __jule_push_dest.push(_47826_kind); };
					if ((_47725_i < _47625_part.len())) {
						_1a93be05b_pushErr(_self_.ptr(), _47625_part[_47725_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1ac5db929:;
				++it;
				goto _iter_begin_1ac5db929;
			}
			_iter_end_1ac5db929:;
		};
	};
	return _45217_g;;
}



inline jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>> _1a93c225c_buildGenerics(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _48838_tokens, jule::Ptr<_1a52684c0_Token>* _48857_errorToken) {
	if (((*(_48838_tokens)).len() == 0LL)) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_48857_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _49418_parts;;
	jule::Slice<_1a4deb40b_Log> _49425_errors;;
	({
		__jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93bc356_parts(_48838_tokens, static_cast<jule::U64>(5LLU), true);
		_49418_parts = __jule_assign_result.__jule_result_arg0;
		_49425_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_49425_errors.len() > 0LL)) {
		(_self_.get()._field_errors).append(_49425_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>> _50017_generics = jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>>::alloc(0LL, _49418_parts.len());;
	{
		auto expr = &(_49418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5e07c9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _50121_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>> &__jule_push_dest = _50017_generics; __jule_push_dest.push(_1a93c1da5_buildGeneric(_self_, &(_50121_part))); };
			}
			_iter_next_1ac5e07c9:;
			++it;
			goto _iter_begin_1ac5e07c9;
		}
		_iter_end_1ac5e07c9:;
	};
	return _50017_generics;;
}



inline jule::Ptr<_1a88a7402_ParamDecl> _1a93c256a_buildSelfParam(_1a93bd643_parser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _50837_tokens) {
	if ((_50837_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a88a7402_ParamDecl> _51317_param = jule::new_ptr<_1a88a7402_ParamDecl>();;
	jule::I64 _51617_i = 0LL;;
	if ((_50837_tokens[_51617_i].get()._field_Id == static_cast<jule::U64>(32LLU))) {
		_51317_param.get()._field_Mutable=true;
		(_51617_i)++;
		if ((_51617_i >= _50837_tokens.len())) {
			_1a93be05b_pushErr(_self_, _50837_tokens[(_51617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_50837_tokens[_51617_i].get()._field_Id == static_cast<jule::U64>(65LLU))) {
		_51317_param.get()._field_Ident=jule::Str("&", 1);
		(_51617_i)++;
		if ((_51617_i >= _50837_tokens.len())) {
			_1a93be05b_pushErr(_self_, _50837_tokens[(_51617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_50837_tokens[_51617_i].get()._field_Id == static_cast<jule::U64>(24LLU))) {
		(_51317_param.get()._field_Ident).append("self", 4);
		_51317_param.get()._field_Token=_50837_tokens[_51617_i];
		(_51617_i)++;
		if ((_51617_i < _50837_tokens.len())) {
			_1a93be05b_pushErr(_self_, _50837_tokens[_51617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _51317_param;;
}



inline void _1a93c2933_paramTypeBegin(_1a93bd643_parser* _self_, jule::Ptr<_1a88a7402_ParamDecl>* _54738_param, jule::I64* _54762_i, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _54771_tokens) {
	for (; ((*(_54762_i)) < (*(_54771_tokens)).len()); ((*(_54762_i)))++) {
		{
			jule::Ptr<_1a52684c0_Token> _54917_token = (*(_54771_tokens))[(*(_54762_i))];;
			if ((_54917_token.get()._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*(_54738_param)).get()._field_Variadic) {
				_1a93be05b_pushErr(_self_, _54917_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1ac5e6e2e;
			};
			(*(_54738_param)).get()._field_Variadic=true;
		}
	_iter_next_1ac5e6e2e:;
	}
	_iter_end_1ac5e6e2e:;;
}



inline void _1a93c2c52_buildParamType(jule::Ptr<_1a93bd643_parser> _self_, jule::Ptr<_1a88a7402_ParamDecl>* _56239_param, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _56263_tokens) {
	jule::I64 _56317_i = 0LL;;
	_1a93c2933_paramTypeBegin(_self_.ptr(), _56239_param, &(_56317_i), _56263_tokens);
	if ((_56317_i >= (*(_56263_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, _56263_tokens, (&(_56317_i)), true);
		(*(_56239_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_56317_i < (*(_56263_tokens)).len())) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_56263_tokens))[_56317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a93c3071_buildParamBody(jule::Ptr<_1a93bd643_parser> _self_, jule::Ptr<_1a88a7402_ParamDecl>* _57539_param, jule::Slice<jule::Ptr<_1a52684c0_Token>> _57562_tokens) {
	jule::Ptr<_1a52684c0_Token> _57617_tok = _57562_tokens[0LL];;
	if ((_57562_tokens.len() == 1LL)) {
		(*(_57539_param)).get()._field_Ident=_57617_tok.get()._field_Kind;
		return;;
	} else if ((_57562_tokens.len() < 3LL)) {
		_1a93be05b_pushErr(_self_.ptr(), _57617_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_57562_tokens[1LL].get()._field_Id != static_cast<jule::U64>(8LLU))) {
		(*(_57539_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_1a93c2c52_buildParamType(_self_, _57539_param, &(_57562_tokens));
		return;;
	};
	(*(_57539_param)).get()._field_Ident=_57617_tok.get()._field_Kind;
	_57562_tokens=_57562_tokens.slice(2LL);
	_1a93c2c52_buildParamType(_self_, _57539_param, &(_57562_tokens));
}



inline jule::Ptr<_1a88a7402_ParamDecl> _1a93c337e_buildParam(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _59534_tokens) {
	jule::Ptr<_1a88a7402_ParamDecl> _59617_param = jule::new_ptr<_1a88a7402_ParamDecl>(_1a88a7402_ParamDecl{._field_Token=_59534_tokens[0LL], });;
	if ((_59617_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		_59617_param.get()._field_Mutable=true;
		if ((_59534_tokens.len() == 1LL)) {
			_1a93be05b_pushErr(_self_.ptr(), _59534_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_59534_tokens=_59534_tokens.slice(1LL);
		_59617_param.get()._field_Token=_59534_tokens[0LL];
	};
	if ((_59534_tokens.len() >= 3LL)) {
		if ((_59617_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_59534_tokens.len() == 1LL)) {
				_1a93be05b_pushErr(_self_.ptr(), _59534_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_59534_tokens[1LL].get()._field_Id == static_cast<jule::U64>(1LLU)) && (_59534_tokens[2LL].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_59617_param.get()._field_Reference=true;
				_59534_tokens=_59534_tokens.slice(1LL);
				_59617_param.get()._field_Token=_59534_tokens[0LL];
			};
		};
	};
	if ((_59617_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_59617_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1a93c2c52_buildParamType(_self_, &(_59617_param), &(_59534_tokens));
	} else {
		_1a93c3071_buildParamBody(_self_, &(_59617_param), _59534_tokens);
	};
	return _59617_param;;
}



inline void _1a93c3604_checkParams(_1a93bd643_parser* _self_, jule::Slice<jule::Ptr<_1a88a7402_ParamDecl>>* _63835_params) {
	{
		auto expr = _63835_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac60458a:;
		if (it != expr_end) {
			jule::Ptr<_1a88a7402_ParamDecl> _63921_param = *it;
			{
				if ((_1a88a7765_IsSelf(_63921_param.ptr()) || (_63921_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1ac60458a;
				};
				if ((_63921_param.get()._field_Token == nullptr)) {
					_1a93be05b_pushErr(_self_, _63921_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_63921_param.get()._field_Kind=jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=_63921_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a88976ab_IdentTypeDecl>(_1a88976ab_IdentTypeDecl{._field_Token=_63921_param.get()._field_Token, ._field_Ident=_63921_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type20)});
					_63921_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1ac60458a:;
			++it;
			goto _iter_begin_1ac60458a;
		}
		_iter_end_1ac60458a:;
	};
}



inline jule::Slice<jule::Ptr<_1a88a7402_ParamDecl>> _1a93c39ab_buildParams(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _65836_tokens, jule::Bool _65854_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _65918_parts;;
	jule::Slice<_1a4deb40b_Log> _65925_errs;;
	({
		__jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93bc356_parts(_65836_tokens, static_cast<jule::U64>(5LLU), true);
		_65918_parts = __jule_assign_result.__jule_result_arg0;
		_65925_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_65925_errs);;
	if ((_65918_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a88a7402_ParamDecl>> _66517_params = nullptr;;
	if ((_65854_method && (_65918_parts.len() > 0LL))) {
		jule::Ptr<_1a88a7402_ParamDecl> _66721_param = _1a93c256a_buildSelfParam(_self_.ptr(), _65918_parts[0LL]);;
		if (((_66721_param != nullptr) && _1a88a7765_IsSelf(_66721_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1a88a7402_ParamDecl>> &__jule_push_dest = _66517_params; __jule_push_dest.push(_66721_param); };
			_65918_parts=_65918_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_65918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac60867c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _67421_part = *it;
			{
				jule::Ptr<_1a88a7402_ParamDecl> _67521_param = _1a93c337e_buildParam(_self_, _67421_part);;
				if ((_67521_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1a88a7402_ParamDecl>> &__jule_push_dest = _66517_params; __jule_push_dest.push(_67521_param); };
				};
			}
			_iter_next_1ac60867c:;
			++it;
			goto _iter_begin_1ac60867c;
		}
		_iter_end_1ac60867c:;
	};
	_1a93c3604_checkParams(_self_.ptr(), &(_66517_params));
	return _66517_params;;
}



inline __jule_tuple_x_1a8899d62_RetTypeDecl__jule_tuple_bool _1a93c3d63_buildMultiRetType(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _68542_tokens, jule::I64* _68565_i) {
	__jule_tuple_x_1a8899d62_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a8899d62_RetTypeDecl>();
	((*(_68565_i)))++;
	if (((*(_68565_i)) >= (*(_68542_tokens)).len())) {
		((*(_68565_i)))--;
		({
			__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, _68542_tokens, (&((*(_68565_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_68565_i)))--;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _69517_rangeTokens = _1a93bbbc4_range(_68565_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _68542_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _69718_parts;;
	jule::Slice<_1a4deb40b_Log> _69725_errs;;
	({
		__jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93bc356_parts(&(_69517_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_69718_parts = __jule_assign_result.__jule_result_arg0;
		_69725_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_69725_errs);;
	if ((_69718_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> _70317_types = jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>>::alloc(0LL, _69718_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_1a52684c0_Token>>::alloc(0LL, _69718_parts.len());
	{
		auto expr = &(_69718_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac60e93b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _70521_part = *it;
			{
				jule::Ptr<_1a52684c0_Token> _70621_token = _70521_part[0LL];;
				jule::I64 _70721_offset = 0LL;;
				if ((_70521_part.len() > 1LL)) {
					_70621_token=_70521_part[1LL];
					if ((_70621_token.get()._field_Id == static_cast<jule::U64>(8LLU))) {
						_70721_offset=2LL;
						if ((_70521_part.len() < 3LL)) {
							_1a93be05b_pushErr(_self_.ptr(), _70621_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1ac60e93b;
						};
					};
				};
				_70621_token=_70521_part[0LL];
				if ((_70721_offset != 2LL)) {
					jule::Ptr<_1a52684c0_Token> _72325_newToken = jule::new_ptr<_1a52684c0_Token>((*(_70621_token)));;
					_72325_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_1a52684c0_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_72325_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_1a52684c0_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_70621_token); };
				};
				jule::Ptr<_1a88970e5_TypeDecl> _73022_tk;;
				({
					__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, &(_70521_part), (&(_70721_offset)), true);
					_73022_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_70721_offset < _70521_part.len())) {
					_1a93be05b_pushErr(_self_.ptr(), _70521_part[_70721_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> &__jule_push_dest = _70317_types; __jule_push_dest.push(_73022_tk); };
			}
			_iter_next_1ac60e93b:;
			++it;
			goto _iter_begin_1ac60e93b;
		}
		_iter_end_1ac60e93b:;
	};
	if ((_70317_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=(*(_68542_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1a88987de_TupleTypeDecl>(_1a88987de_TupleTypeDecl{._field_Types=_70317_types}), &__jule_any_type80)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_70317_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a8899d62_RetTypeDecl__jule_tuple_bool _1a93c421a_buildRetType(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _75337_tokens, jule::I64* _75360_i) {
	__jule_tuple_x_1a8899d62_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a8899d62_RetTypeDecl>();
	if (((*(_75360_i)) >= (*(_75337_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1a52684c0_Token> _75917_token = (*(_75337_tokens))[(*(_75360_i))];;
	{
		auto &_match_expr{ _75917_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ac6178de:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1ac617955:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1ac6179bb:;
			{
				if ((((*(_75360_i)) + 1LL) >= (*(_75337_tokens)).len())) {
					_1a93be05b_pushErr(_self_.ptr(), _75917_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_75360_i)))++;
				_75917_token=(*(_75337_tokens))[(*(_75360_i))];
				{
					auto &_match_expr{ _75917_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac619506:;
						{
							({
								__jule_tuple_x_1a8899d62_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a93c3d63_buildMultiRetType(_self_, _75337_tokens, _75360_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac61956c:;
						{
							_1a93be05b_pushErr(_self_.ptr(), _75917_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1ac6194a1:;
				};
				({
					__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, _75337_tokens, (&((*(_75360_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1ac617878:;
	};
	((*(_75360_i)))++;
	_1a93be05b_pushErr(_self_.ptr(), _75917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1a88a8722_FnDecl> _1a93c466b_buildFnPrototype(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _79241_tokens, jule::I64* _79264_i, jule::Bool _79272_method) {
	jule::Ptr<_1a88a8722_FnDecl> _79317_f = jule::new_ptr<_1a88a8722_FnDecl>(_1a88a8722_FnDecl{._field_Token=(*(_79241_tokens))[(*(_79264_i))], });;
	if ((_79317_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_79317_f.get()._field_Statically=true;
		((*(_79264_i)))++;
		if (((*(_79264_i)) >= (*(_79241_tokens)).len())) {
			_1a93be05b_pushErr(_self_.ptr(), _79317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_79317_f.get()._field_Token=(*(_79241_tokens))[(*(_79264_i))];
	};
	if ((_79317_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(31LLU))) {
		_79317_f.get()._field_Unsafety=true;
		((*(_79264_i)))++;
		if (((*(_79264_i)) >= (*(_79241_tokens)).len())) {
			_1a93be05b_pushErr(_self_.ptr(), _79317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_79317_f.get()._field_Token=(*(_79241_tokens))[(*(_79264_i))];
	};
	((*(_79264_i)))++;
	if (((*(_79264_i)) >= (*(_79241_tokens)).len())) {
		_1a93be05b_pushErr(_self_.ptr(), _79317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a52684c0_Token> _82613_tok = (*(_79241_tokens))[(*(_79264_i))];;
	if ((_82613_tok.get()._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_79264_i)))++;
		if (((*(_79264_i)) >= (*(_79241_tokens)).len())) {
			_1a93be05b_pushErr(_self_.ptr(), _79317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_79317_f.get()._field_Ident=_82613_tok.get()._field_Kind;
	} else {
		_79317_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1a52684c0_Token> _83813_errorToken = (*(_79241_tokens))[(*(_79264_i))];;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _83917_genericsTokens = _1a93bbbc4_range(_79264_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _79241_tokens);;
	if ((_83917_genericsTokens != nullptr)) {
		_79317_f.get()._field_Generics=_1a93c225c_buildGenerics(_self_, &(_83917_genericsTokens), &(_83813_errorToken));
	};
	if (((*(_79241_tokens))[(*(_79264_i))].get()._field_Id != static_cast<jule::U64>(74LLU))) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_79241_tokens))[(*(_79264_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _84917_paramsToks = _1a93bbbc4_range(_79264_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _79241_tokens);;
	if ((_84917_paramsToks.len() > 0LL)) {
		_79317_f.get()._field_Params=_1a93c39ab_buildParams(_self_, &(_84917_paramsToks), _79272_method);
	};
	if (((*(_79264_i)) < (*(_79241_tokens)).len())) {
		jule::Ptr<_1a52684c0_Token> _85517_token = (*(_79241_tokens))[(*(_79264_i))];;
		if ((_85517_token.get()._field_Id == static_cast<jule::U64>(68LLU))) {
			_79317_f.get()._field_Exceptional=true;
			((*(_79264_i)))++;
		};
	};
	_79317_f.get()._field_Public=_1a93cd301_isPub(&(_79317_f.get()._field_Ident));
	({
		__jule_tuple_x_1a8899d62_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a93c421a_buildRetType(_self_, _79241_tokens, _79264_i);
		_79317_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _79317_f;;
}



inline jule::Ptr<_1a88a8722_FnDecl> _1a93c4abc_buildFn(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _86932_tokens, jule::Bool _86950_method, jule::Bool _86964_prototype) {
	jule::I64 _87017_i = 0LL;;
	jule::Ptr<_1a88a8722_FnDecl> _87117_f = _1a93c466b_buildFnPrototype(_self_, _86932_tokens, &(_87017_i), _86950_method);;
	if (_86964_prototype) {
		if ((_87017_i < (*(_86932_tokens)).len())) {
			_1a93be05b_pushErr(_self_.ptr(), (*(_86932_tokens))[(_87017_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _87117_f;;
	} else if ((_87117_f == nullptr)) {
		return _87117_f;;
	};
	if ((_87017_i >= (*(_86932_tokens)).len())) {
		_1a93bd92e_stop(_self_.ptr());
		_1a93be05b_pushErr(_self_.ptr(), _87117_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _88717_blockTokens = _1a93bbbc4_range(&(_87017_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _86932_tokens);;
	if ((_88717_blockTokens != nullptr)) {
		_87117_f.get()._field_Scope=_1a93c00c3_buildScope(_self_, &(_88717_blockTokens), (*(_86932_tokens))[(_87017_i - 1LL)]);
		_87117_f.get()._field_Scope.get()._field_Unsafety=_87117_f.get()._field_Unsafety;
		if ((_87017_i < (*(_86932_tokens)).len())) {
			_1a93be05b_pushErr(_self_.ptr(), (*(_86932_tokens))[_87017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1a93bd92e_stop(_self_.ptr());
		_1a93be05b_pushErr(_self_.ptr(), _87117_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _87117_f;;
}



inline jule::Slice<jule::Ptr<_1a52684c0_Token>> _1a93c4dca_getUseDeclSelectors(_1a93bd643_parser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _90342_tokens) {
	jule::I64 _90417_i = 0LL;;
	_90342_tokens=_1a93bbbc4_range(&(_90417_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_90342_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _90618_parts;;
	jule::Slice<_1a4deb40b_Log> _90625_errs;;
	({
		__jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93bc356_parts(&(_90342_tokens), static_cast<jule::U64>(5LLU), true);
		_90618_parts = __jule_assign_result.__jule_result_arg0;
		_90625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_90625_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_90625_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _91217_selectors = jule::Slice<jule::Ptr<_1a52684c0_Token>>::alloc(0LL, _90618_parts.len());;
	{
		auto expr = &(_90618_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac62ddcd:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _91321_part = *it;
			{
				if ((_91321_part.len() > 1LL)) {
					_1a93be05b_pushErr(_self_, _91321_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a52684c0_Token> _91721_tok = _91321_part[0LL];;
				if (((_91721_tok.get()._field_Id != static_cast<jule::U64>(1LLU)) && (_91721_tok.get()._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1a93be05b_pushErr(_self_, _91721_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a93be37a_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1ac62ddcd;
				};
				{ jule::Slice<jule::Ptr<_1a52684c0_Token>> &__jule_push_dest = _91217_selectors; __jule_push_dest.push(_91721_tok); };
			}
			_iter_next_1ac62ddcd:;
			++it;
			goto _iter_begin_1ac62ddcd;
		}
		_iter_end_1ac62ddcd:;
	};
	return _91217_selectors;;
}



inline void _1a93c51e9_buildBindUseDecl(_1a93bd643_parser* _self_, jule::Ptr<_1a88ae44d_UseDecl>* _92840_decl, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _92857_tokens) {
	if (((*(_92857_tokens)).len() > 1LL)) {
		_1a93be05b_pushErr(_self_, (*(_92857_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a52684c0_Token> _93213_token = (*(_92857_tokens))[0LL];;
	if (((_93213_token.get()._field_Id != static_cast<jule::U64>(4LLU)) || ((_93213_token.get()._field_Kind[0LL] != '`') && (_93213_token.get()._field_Kind[0LL] != '\"')))) {
		_1a93be05b_pushErr(_self_, _93213_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_92840_decl)).get()._field_Binded=true;
	(*(_92840_decl)).get()._field_LinkPath=_93213_token.get()._field_Kind.slice(1LL, (_93213_token.get()._field_Kind.len() - 1LL));
}



inline void _1a93c5518_buildStdUseDecl(_1a93bd643_parser* _self_, jule::Ptr<_1a88ae44d_UseDecl>* _94139_decl, jule::Slice<jule::Ptr<_1a52684c0_Token>> _94159_tokens) {
	(*(_94139_decl)).get()._field_Std=true;
	jule::Ptr<_1a52684c0_Token> _94417_token = _94159_tokens[0LL];;
	if ((_94159_tokens.len() < 3LL)) {
		_1a93be05b_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_94159_tokens=_94159_tokens.slice(2LL);
	_94417_token=_94159_tokens[(_94159_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _94417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ac6365cd:;
			{
				_1a93be05b_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ac636655:;
			{
				jule::Slice<jule::Ptr<_1a52684c0_Token>> _95721_selectors = nullptr;;
				({
					__jule_tuple_sx_1a52684c0_Token__jule_tuple_sx_1a52684c0_Token __jule_assign_result = _1a93bbe6b_rangeLast(&(_94159_tokens));
					_94159_tokens = __jule_assign_result.__jule_result_arg0;
					_95721_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_94139_decl)).get()._field_Selected=_1a93c4dca_getUseDeclSelectors(_self_, _95721_selectors);
				if ((_94159_tokens.len() == 0LL)) {
					_1a93be05b_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94417_token=_94159_tokens[(_94159_tokens.len() - 1LL)];
				if ((_94417_token.get()._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a93be05b_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94159_tokens=_94159_tokens.slice(0LL, (_94159_tokens.len() - 1LL));
				if ((_94159_tokens.len() == 0LL)) {
					_1a93be05b_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac6366cc:;
			{
				_94159_tokens=_94159_tokens.slice(0LL, (_94159_tokens.len() - 1LL));
				if ((_94159_tokens.len() == 0LL)) {
					_1a93be05b_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94417_token=_94159_tokens[(_94159_tokens.len() - 1LL)];
				if ((_94417_token.get()._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a93be05b_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94159_tokens=_94159_tokens.slice(0LL, (_94159_tokens.len() - 1LL));
				if ((_94159_tokens.len() == 0LL)) {
					_1a93be05b_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_94139_decl)).get()._field_Full=true;
			}
		}
		_match_end_1ac636556:;
	};
	(*(_94139_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1a93bd1ae_tokstoa(&(_94159_tokens)));
}



inline void _1a93c5837_buildIdentUseDecl(_1a93bd643_parser* _self_, jule::Ptr<_1a88ae44d_UseDecl>* _99541_decl, jule::Slice<jule::Ptr<_1a52684c0_Token>> _99561_tokens) {
	(*(_99541_decl)).get()._field_Std=false;
	jule::Ptr<_1a52684c0_Token> _99817_token = _99561_tokens[(_99561_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _99817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ac63dd22:;
			{
				_1a93be05b_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ac63e350:;
			{
				jule::Slice<jule::Ptr<_1a52684c0_Token>> _100421_selectors = nullptr;;
				({
					__jule_tuple_sx_1a52684c0_Token__jule_tuple_sx_1a52684c0_Token __jule_assign_result = _1a93bbe6b_rangeLast(&(_99561_tokens));
					_99561_tokens = __jule_assign_result.__jule_result_arg0;
					_100421_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_99541_decl)).get()._field_Selected=_1a93c4dca_getUseDeclSelectors(_self_, _100421_selectors);
				if ((_99561_tokens.len() == 0LL)) {
					_1a93be05b_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99817_token=_99561_tokens[(_99561_tokens.len() - 1LL)];
				if ((_99817_token.get()._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a93be05b_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99561_tokens=_99561_tokens.slice(0LL, (_99561_tokens.len() - 1LL));
				if ((_99561_tokens.len() == 0LL)) {
					_1a93be05b_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac63e4e8:;
			{
				_99561_tokens=_99561_tokens.slice(0LL, (_99561_tokens.len() - 1LL));
				if ((_99561_tokens.len() == 0LL)) {
					_1a93be05b_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99817_token=_99561_tokens[(_99561_tokens.len() - 1LL)];
				if ((_99817_token.get()._field_Id != static_cast<jule::U64>(19LLU))) {
					_1a93be05b_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99561_tokens=_99561_tokens.slice(0LL, (_99561_tokens.len() - 1LL));
				if ((_99561_tokens.len() == 0LL)) {
					_1a93be05b_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_99541_decl)).get()._field_Full=true;
			}
		}
		_match_end_1ac63e2ea:;
	};
	(*(_99541_decl)).get()._field_LinkPath=_1a93bd1ae_tokstoa(&(_99561_tokens));
}



inline void _1a93c5b56_parseUseDecl(_1a93bd643_parser* _self_, jule::Ptr<_1a88ae44d_UseDecl>* _104336_decl, jule::Slice<jule::Ptr<_1a52684c0_Token>> _104356_tokens) {
	if ((*(_104336_decl)).get()._field_Binded) {
		_1a93c51e9_buildBindUseDecl(_self_, _104336_decl, &(_104356_tokens));
		return;;
	};
	jule::Ptr<_1a52684c0_Token> _104917_token = _104356_tokens[0LL];;
	if ((_104917_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93be05b_pushErr(_self_, _104917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_104356_tokens.len() > 2LL) && (_104356_tokens[1LL].get()._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*(_104336_decl)).get()._field_Alias=_104917_token.get()._field_Kind;
		if ((_104356_tokens[2LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1a93be05b_pushErr(_self_, _104917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a93be37a_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_104356_tokens=_104356_tokens.slice(2LL);
		_104917_token=_104356_tokens[0LL];
	};
	;
	{
		
		if (_104917_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_1ac648667:;
			{
				_1a93c5518_buildStdUseDecl(_self_, _104336_decl, _104356_tokens);
			}
		}
		else {
			_case_begin_1ac64a070:;
			{
				_1a93c5837_buildIdentUseDecl(_self_, _104336_decl, _104356_tokens);
			}
		}
		_match_end_1ac64a009:;
	};
}



inline jule::Ptr<_1a88ae44d_UseDecl> _1a93c600d_buildUseDecl(_1a93bd643_parser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _107735_tokens, jule::Bool _107753_binded) {
	jule::Ptr<_1a88ae44d_UseDecl> _107817_decl = jule::new_ptr<_1a88ae44d_UseDecl>(_1a88ae44d_UseDecl{._field_Token=_107735_tokens[0LL], ._field_Binded=_107753_binded, });;
	if ((_107735_tokens.len() < 2LL)) {
		_1a93be05b_pushErr(_self_, _107817_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_107735_tokens=_107735_tokens.slice(1LL);
	_1a93c5b56_parseUseDecl(_self_, &(_107817_decl), _107735_tokens);
	return _107817_decl;;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93c63b5_buildTypeEnumItemKind(jule::Ptr<_1a93bd643_parser> _self_, jule::I64* _109146_i, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _109159_tokens) {
	jule::I64 _109217_braceN = 0LL;;
	jule::I64 _109313_exprStart = (*(_109146_i));;
	for (; ((*(_109146_i)) < (*(_109159_tokens)).len()); ((*(_109146_i)))++) {
		{
			jule::Ptr<_1a52684c0_Token> _109517_t = (*(_109159_tokens))[(*(_109146_i))];;
			{
				auto &_match_expr{ _109517_t.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac64e3d7:;
					{
						(_109217_braceN)++;
						goto _iter_next_1ac64d75a;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac64e45e:;
					{
						(_109217_braceN)--;
					}
				}
				_match_end_1ac64e21c:;
			};
			if ((_109217_braceN > 0LL)) {
				goto _iter_next_1ac64d75a;
			};
			if (((_109517_t.get()._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_109146_i)) + 1LL) >= (*(_109159_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a52684c0_Token>> _111125_kindTokens = nullptr;;
				if ((_109517_t.get()._field_Id == static_cast<jule::U64>(5LLU))) {
					_111125_kindTokens=(*(_109159_tokens)).slice(_109313_exprStart, (*(_109146_i)));
				} else {
					_111125_kindTokens=(*(_109159_tokens)).slice(_109313_exprStart);
				};
				jule::I64 _111725_j = 0LL;;
				jule::Ptr<_1a88970e5_TypeDecl> _111826_kind;;
				({
					__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, &(_111125_kindTokens), (&(_111725_j)), true);
					_111826_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_111725_j < _111125_kindTokens.len())) {
					_1a93be05b_pushErr(_self_.ptr(), _111125_kindTokens[_111725_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _111826_kind;;
			};
		}
	_iter_next_1ac64d75a:;
	}
	_iter_end_1ac64d75a:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a88b0bbe_TypeEnumItemDecl>> _1a93c66c3_buildTypeEnumItems(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _112843_tokens) {
	jule::Slice<jule::Ptr<_1a88b0bbe_TypeEnumItemDecl>> _112917_items = jule::Slice<jule::Ptr<_1a88b0bbe_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _113017_i = 0LL;;
	for (; (_113017_i < (*(_112843_tokens)).len()); (_113017_i)++) {
		{
			jule::Ptr<_1a52684c0_Token> _113221_t = (*(_112843_tokens))[_113017_i];;
			jule::Ptr<_1a88b0bbe_TypeEnumItemDecl> _113321_item = jule::new_ptr<_1a88b0bbe_TypeEnumItemDecl>();;
			_113321_item.get()._field_Token=_113221_t;
			if (((_113321_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_112843_tokens)).len() - _113017_i) > 2LL))) {
				_113221_t=(*(_112843_tokens))[(_113017_i + 1LL)];
				if ((_113221_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_113321_item.get()._field_Ident=_113321_item.get()._field_Token.get()._field_Kind;
					_113017_i+=2LL;
					if (((_113017_i >= (*(_112843_tokens)).len()) || ((*(_112843_tokens))[_113017_i].get()._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1a93be05b_pushErr(_self_.ptr(), _113221_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1ac654178;
					};
				};
			};
			_113321_item.get()._field_Kind=_1a93c63b5_buildTypeEnumItemKind(_self_, &(_113017_i), _112843_tokens);
			{ jule::Slice<jule::Ptr<_1a88b0bbe_TypeEnumItemDecl>> &__jule_push_dest = _112917_items; __jule_push_dest.push(_113321_item); };
		}
	_iter_next_1ac654178:;
	}
	_iter_end_1ac654178:;;
	return _112917_items;;
}



inline jule::Ptr<_1a88b12c9_TypeEnumDecl> _1a93c69d1_buildTypeEnumDecl(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _115242_tokens) {
	jule::I64 _115317_i = 1LL;;
	jule::Ptr<_1a88b12c9_TypeEnumDecl> _115417_e = jule::new_ptr<_1a88b12c9_TypeEnumDecl>(_1a88b12c9_TypeEnumDecl{._field_Token=(*(_115242_tokens))[_115317_i], });;
	if ((_115417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93be05b_pushErr(_self_.ptr(), _115417_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_115417_e.get()._field_Ident=_115417_e.get()._field_Token.get()._field_Kind;
	_115317_i+=3LL;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _116417_itemTokens = _1a93bbbc4_range(&(_115317_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _115242_tokens);;
	if ((_116417_itemTokens == nullptr)) {
		_1a93bd92e_stop(_self_.ptr());
		_1a93be05b_pushErr(_self_.ptr(), _115417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _115417_e;;
	} else if ((_115317_i < (*(_115242_tokens)).len())) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_115242_tokens))[_115317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_115417_e.get()._field_Public=_1a93cd301_isPub(&(_115417_e.get()._field_Ident));
	_115417_e.get()._field_End=(*(_115242_tokens))[(_115317_i - 1LL)];
	_115417_e.get()._field_Items=_1a93c66c3_buildTypeEnumItems(_self_, &(_116417_itemTokens));
	return _115417_e;;
}



inline jule::Ptr<_1a889b270_Expr> _1a93c6d88_buildEnumItemExpr(jule::Ptr<_1a93bd643_parser> _self_, jule::I64* _117942_i, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _117955_tokens) {
	jule::I64 _118017_braceN = 0LL;;
	jule::I64 _118113_exprStart = (*(_117942_i));;
	for (; ((*(_117942_i)) < (*(_117955_tokens)).len()); ((*(_117942_i)))++) {
		{
			jule::Ptr<_1a52684c0_Token> _118317_t = (*(_117955_tokens))[(*(_117942_i))];;
			{
				auto &_match_expr{ _118317_t.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac65e53a:;
					{
						(_118017_braceN)++;
						goto _iter_next_1ac65d8ad;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac65e5b2:;
					{
						(_118017_braceN)--;
					}
				}
				_match_end_1ac65e370:;
			};
			if ((_118017_braceN > 0LL)) {
				goto _iter_next_1ac65d8ad;
			};
			if (((_118317_t.get()._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_117942_i)) + 1LL) >= (*(_117955_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1a52684c0_Token>> _119925_exprTokens = nullptr;;
				if ((_118317_t.get()._field_Id == static_cast<jule::U64>(5LLU))) {
					_119925_exprTokens=(*(_117955_tokens)).slice(_118113_exprStart, (*(_117942_i)));
				} else {
					_119925_exprTokens=(*(_117955_tokens)).slice(_118113_exprStart);
				};
				return _1a93be688_buildExpr(_self_, &(_119925_exprTokens));;
			};
		}
	_iter_next_1ac65d8ad:;
	}
	_iter_end_1ac65d8ad:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a88ae8c1_EnumItemDecl>> _1a93c7196_buildEnumItems(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _121139_tokens) {
	jule::Slice<jule::Ptr<_1a88ae8c1_EnumItemDecl>> _121217_items = jule::Slice<jule::Ptr<_1a88ae8c1_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121317_i = 0LL;;
	for (; (_121317_i < (*(_121139_tokens)).len()); (_121317_i)++) {
		{
			jule::Ptr<_1a52684c0_Token> _121521_t = (*(_121139_tokens))[_121317_i];;
			jule::Ptr<_1a88ae8c1_EnumItemDecl> _121621_item = jule::new_ptr<_1a88ae8c1_EnumItemDecl>();;
			_121621_item.get()._field_Token=_121521_t;
			if ((_121621_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
				_1a93be05b_pushErr(_self_.ptr(), _121621_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_121621_item.get()._field_Ident=_121621_item.get()._field_Token.get()._field_Kind;
			if ((((_121317_i + 1LL) >= (*(_121139_tokens)).len()) || ((*(_121139_tokens))[(_121317_i + 1LL)].get()._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_121317_i + 1LL) < (*(_121139_tokens)).len())) {
					(_121317_i)++;
				};
				{ jule::Slice<jule::Ptr<_1a88ae8c1_EnumItemDecl>> &__jule_push_dest = _121217_items; __jule_push_dest.push(_121621_item); };
				goto _iter_next_1ac663143;
			};
			(_121317_i)++;
			_121521_t=(*(_121139_tokens))[_121317_i];
			(_121317_i)++;
			if ((_121521_t.get()._field_Id != static_cast<jule::U64>(8LLU))) {
				_1a93be05b_pushErr(_self_.ptr(), _121521_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1ac663143;
			};
			if (((_121317_i >= (*(_121139_tokens)).len()) || ((*(_121139_tokens))[_121317_i].get()._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1a93be05b_pushErr(_self_.ptr(), _121521_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1ac663143;
			};
			_121621_item.get()._field_Expr=_1a93c6d88_buildEnumItemExpr(_self_, &(_121317_i), _121139_tokens);
			{ jule::Slice<jule::Ptr<_1a88ae8c1_EnumItemDecl>> &__jule_push_dest = _121217_items; __jule_push_dest.push(_121621_item); };
		}
	_iter_next_1ac663143:;
	}
	_iter_end_1ac663143:;;
	return _121217_items;;
}



inline jule::Ptr<_1a88b03e9_EnumDecl> _1a93c74a4_buildEnumDecl(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _124838_tokens) {
	if (((*(_124838_tokens)).len() < 3LL)) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_124838_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a88b03e9_EnumDecl> _125317_e = jule::new_ptr<_1a88b03e9_EnumDecl>(_1a88b03e9_EnumDecl{._field_Token=(*(_124838_tokens))[1LL], });;
	if ((_125317_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93be05b_pushErr(_self_.ptr(), _125317_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_125317_e.get()._field_Ident=_125317_e.get()._field_Token.get()._field_Kind;
	jule::I64 _126117_i = 2LL;;
	if (((*(_124838_tokens))[_126117_i].get()._field_Id == static_cast<jule::U64>(8LLU))) {
		(_126117_i)++;
		if ((_126117_i >= (*(_124838_tokens)).len())) {
			_1a93be05b_pushErr(_self_.ptr(), (*(_124838_tokens))[(_126117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _125317_e;;
		};
		({
			__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, _124838_tokens, (&(_126117_i)), true);
			_125317_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_126117_i >= (*(_124838_tokens)).len())) {
			_1a93bd92e_stop(_self_.ptr());
			_1a93be05b_pushErr(_self_.ptr(), _125317_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _125317_e;;
		};
	} else {
		_125317_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _127817_itemTokens = _1a93bbbc4_range(&(_126117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _124838_tokens);;
	if ((_127817_itemTokens == nullptr)) {
		_1a93bd92e_stop(_self_.ptr());
		_1a93be05b_pushErr(_self_.ptr(), _125317_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _125317_e;;
	} else if ((_126117_i < (*(_124838_tokens)).len())) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_124838_tokens))[_126117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_125317_e.get()._field_Public=_1a93cd301_isPub(&(_125317_e.get()._field_Ident));
	_125317_e.get()._field_End=(*(_124838_tokens))[(_126117_i - 1LL)];
	_125317_e.get()._field_Items=_1a93c7196_buildEnumItems(_self_, &(_127817_itemTokens));
	return _125317_e;;
}



inline jule::Any _1a93c77b2_buildNodeEnumDecl(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _129342_tokens) {
	if ((((*(_129342_tokens)).len() > 3LL) && ((*(_129342_tokens))[2LL].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*(_129342_tokens))[3LL].get()._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1a93c69d1_buildTypeEnumDecl(_self_, _129342_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1a93c74a4_buildEnumDecl(_self_, _129342_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1a88b153d_FieldDecl> _1a93c7ac0_buildField(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _130234_tokens) {
	jule::Ptr<_1a88b153d_FieldDecl> _130317_f = jule::new_ptr<_1a88b153d_FieldDecl>();;
	_130317_f.get()._field_Mutable=(_130234_tokens[0LL].get()._field_Id == static_cast<jule::U64>(32LLU));
	if (_130317_f.get()._field_Mutable) {
		if ((_130234_tokens.len() == 1LL)) {
			_1a93be05b_pushErr(_self_.ptr(), _130234_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_130234_tokens=_130234_tokens.slice(1LL);
	};
	_130317_f.get()._field_Token=_130234_tokens[0LL];
	if ((_130317_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93be05b_pushErr(_self_.ptr(), _130317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_130317_f.get()._field_Ident=_130317_f.get()._field_Token.get()._field_Kind;
	if ((_130234_tokens.len() == 1LL)) {
		_1a93be05b_pushErr(_self_.ptr(), _130234_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_130234_tokens.len() < 3LL) || (_130234_tokens[1LL].get()._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1a93be05b_pushErr(_self_.ptr(), _130234_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_130234_tokens=_130234_tokens.slice(2LL);
	jule::I64 _133117_i = 0LL;;
	({
		__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, &(_130234_tokens), (&(_133117_i)), true);
		_130317_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_133117_i < _130234_tokens.len())) {
		jule::Ptr<_1a52684c0_Token> _133417_token = _130234_tokens[_133117_i];;
		if ((_133417_token.get()._field_Id != static_cast<jule::U64>(71LLU))) {
			_1a93be05b_pushErr(_self_.ptr(), _130234_tokens[_133117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_133117_i)++;
		if ((_133117_i >= _130234_tokens.len())) {
			_1a93be05b_pushErr(_self_.ptr(), _133417_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_130234_tokens=_130234_tokens.slice(_133117_i);
		_130317_f.get()._field_Default=_1a93be688_buildExpr(_self_, &(_130234_tokens));
	};
	_130317_f.get()._field_Public=_1a93cd301_isPub(&(_130317_f.get()._field_Ident));
	return _130317_f;;
}



inline jule::Slice<jule::Ptr<_1a88b153d_FieldDecl>> _1a93c7dcd_buildStructDeclFields(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _135145_tokens) {
	jule::Slice<jule::Ptr<_1a88b153d_FieldDecl>> _135217_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a93a1626_stmt>> _135317_stmts = _1a93a19bc_splitStmts(&(_135145_tokens));;
	{
		auto expr = &(_135317_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac67c14b:;
		if (it != expr_end) {
			jule::Ptr<_1a93a1626_stmt> _135421_stmt = *it;
			{
				_135145_tokens=_135421_stmt.get()._field_tokens;
				jule::Ptr<_1a88b153d_FieldDecl> _135621_f = _1a93c7ac0_buildField(_self_, _135145_tokens);;
				{ jule::Slice<jule::Ptr<_1a88b153d_FieldDecl>> &__jule_push_dest = _135217_fields; __jule_push_dest.push(_135621_f); };
			}
			_iter_next_1ac67c14b:;
			++it;
			goto _iter_begin_1ac67c14b;
		}
		_iter_end_1ac67c14b:;
	};
	return _135217_fields;;
}



inline jule::Ptr<_1a88b1d8a_StructDecl> _1a93c81db_buildStructDecl(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _136240_tokens) {
	if (((*(_136240_tokens)).len() < 3LL)) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_136240_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _136817_i = 1LL;;
	jule::Ptr<_1a88b1d8a_StructDecl> _136917_s = jule::new_ptr<_1a88b1d8a_StructDecl>(_1a88b1d8a_StructDecl{._field_Token=(*(_136240_tokens))[_136817_i], });;
	if ((_136917_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93be05b_pushErr(_self_.ptr(), _136917_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_136817_i)++;
	if ((_136817_i >= (*(_136240_tokens)).len())) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_136240_tokens))[_136817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _136917_s;;
	};
	_136917_s.get()._field_Ident=_136917_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1a52684c0_Token> _138313_errorToken = (*(_136240_tokens))[_136817_i];;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _138417_genericsTokens = _1a93bbbc4_range(&(_136817_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _136240_tokens);;
	if ((_138417_genericsTokens != nullptr)) {
		_136917_s.get()._field_Generics=_1a93c225c_buildGenerics(_self_, &(_138417_genericsTokens), &(_138313_errorToken));
	};
	if ((_136817_i >= (*(_136240_tokens)).len())) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_136240_tokens))[(_136817_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136917_s;;
	};
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _139417_bodyTokens = _1a93bbbc4_range(&(_136817_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _136240_tokens);;
	if ((_139417_bodyTokens == nullptr)) {
		_1a93bd92e_stop(_self_.ptr());
		_1a93be05b_pushErr(_self_.ptr(), _136917_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136917_s;;
	};
	if ((_136817_i < (*(_136240_tokens)).len())) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_136240_tokens))[_136817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_136917_s.get()._field_Public=_1a93cd301_isPub(&(_136917_s.get()._field_Ident));
	_136917_s.get()._field_Fields=_1a93c7dcd_buildStructDeclFields(_self_, _139417_bodyTokens);
	_136917_s.get()._field_End=(*(_136240_tokens))[(_136817_i - 1LL)];
	return _136917_s;;
}



inline void _1a93c8461_checkMethodReceiver(_1a93bd643_parser* _self_, jule::Ptr<_1a88a8722_FnDecl>* _141039_f) {
	if ((*(_141039_f)).get()._field_Statically) {
		if ((((*(_141039_f)).get()._field_Params.len() > 0LL) && _1a88a7765_IsSelf((*(_141039_f)).get()._field_Params[0LL].ptr()))) {
			_1a93be05b_pushErr(_self_, (*(_141039_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_141039_f)).get()._field_Params.len() == 0LL)) {
		_1a93be05b_pushErr(_self_, (*(_141039_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a88a7402_ParamDecl> _142213_param = (*(_141039_f)).get()._field_Params[0LL];;
	if ((!(_1a88a7765_IsSelf(_142213_param.ptr())))) {
		_1a93be05b_pushErr(_self_, (*(_141039_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a93c8780_buildTraitBody(jule::Ptr<_1a93bd643_parser> _self_, jule::Ptr<_1a88b2561_TraitDecl>* _142939_t, jule::Slice<jule::Ptr<_1a52684c0_Token>> _142958_tokens) {
	jule::Slice<jule::Ptr<_1a93a1626_stmt>> _143017_stmts = _1a93a19bc_splitStmts(&(_142958_tokens));;
	{
		auto expr = &(_143017_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac689e39:;
		if (it != expr_end) {
			jule::Ptr<_1a93a1626_stmt> _143121_stmt = *it;
			{
				_142958_tokens=_143121_stmt.get()._field_tokens;
				if ((_142958_tokens.len() == 0LL)) {
					goto _iter_next_1ac689e39;
				};
				{
					auto &_match_expr{ _142958_tokens[0LL].get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1ac68c69a:;
						{
							jule::Ptr<_1a88a8722_FnDecl> _143825_f = _1a93c4abc_buildFn(_self_, &(_142958_tokens), true, true);;
							if ((_143825_f == nullptr)) {
								goto _match_end_1ac68b039;
							};
							_1a93c8461_checkMethodReceiver(_self_.ptr(), &(_143825_f));
							if ((_143825_f.get()._field_Generics.len() > 0LL)) {
								_1a93be05b_pushErr(_self_.ptr(), _143825_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a88a8722_FnDecl>> &__jule_push_dest = (*(_142939_t)).get()._field_Methods; __jule_push_dest.push(_143825_f); };
						}
					}
					else {
						_case_begin_1ac68a984:;
						{
							jule::I64 _144825_i = 0LL;;
							jule::Ptr<_1a88970e5_TypeDecl> _144926_ti;;
							jule::Bool _144930_ok = false;;
							({
								__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, &(_142958_tokens), (&(_144825_i)), true);
								_144926_ti = __jule_assign_result.__jule_result_arg0;
								_144930_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144930_ok))) {
								goto _match_end_1ac68b039;
							};
							if ((_144825_i < _142958_tokens.len())) {
								_1a93be05b_pushErr(_self_.ptr(), _142958_tokens[_144825_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> &__jule_push_dest = (*(_142939_t)).get()._field_Inherits; __jule_push_dest.push(_144926_ti); };
						}
					}
					_match_end_1ac68b039:;
				};
			}
			_iter_next_1ac689e39:;
			++it;
			goto _iter_begin_1ac689e39;
		}
		_iter_end_1ac689e39:;
	};
}



inline jule::Ptr<_1a88b2561_TraitDecl> _1a93c8a8d_buildTraitDecl(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _146139_tokens) {
	if (((*(_146139_tokens)).len() < 3LL)) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_146139_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a88b2561_TraitDecl> _146617_t = jule::new_ptr<_1a88b2561_TraitDecl>(_1a88b2561_TraitDecl{._field_Token=(*(_146139_tokens))[1LL], });;
	if ((_146617_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93be05b_pushErr(_self_.ptr(), _146617_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_146617_t.get()._field_Ident=_146617_t.get()._field_Token.get()._field_Kind;
	jule::I64 _147417_i = 2LL;;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _147517_bodyTokens = _1a93bbbc4_range(&(_147417_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _146139_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_1a93bd92e_stop(_self_.ptr());
		_1a93be05b_pushErr(_self_.ptr(), _146617_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_147417_i < (*(_146139_tokens)).len())) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_146139_tokens))[_147417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_146617_t.get()._field_Public=_1a93cd301_isPub(&(_146617_t.get()._field_Ident));
	_1a93c8780_buildTraitBody(_self_, &(_146617_t), _147517_bodyTokens);
	_146617_t.get()._field_End=(*(_146139_tokens))[(_147417_i - 1LL)];
	return _146617_t;;
}



inline jule::Ptr<_1a88a8722_FnDecl> _1a93c8d9b_buildBindFn(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _149135_tokens) {
	_149135_tokens=_149135_tokens.slice(1LL);
	jule::Ptr<_1a88a8722_FnDecl> _149317_f = _1a93c4abc_buildFn(_self_, &(_149135_tokens), false, true);;
	if ((_149317_f != nullptr)) {
		_149317_f.get()._field_Public=false;
		_149317_f.get()._field_Binded=true;
	};
	return _149317_f;;
}



inline jule::Ptr<_1a88a9701_VarDecl> _1a93c91a9_buildBindVar(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _150136_tokens) {
	_150136_tokens=_150136_tokens.slice(1LL);
	jule::Ptr<_1a88a9701_VarDecl> _150317_v = _1a93c1a97_buildVar(_self_, _150136_tokens);;
	if ((_150317_v != nullptr)) {
		_150317_v.get()._field_Public=false;
		_150317_v.get()._field_Binded=true;
		if ((_150317_v.get()._field_Expr != nullptr)) {
			_1a93be05b_pushErr(_self_.ptr(), _150317_v.get()._field_Token, jule::Str("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _150317_v;;
}



inline jule::Ptr<_1a88b1d8a_StructDecl> _1a93c94b7_buildBindStruct(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _151439_tokens) {
	_151439_tokens=_151439_tokens.slice(1LL);
	jule::Ptr<_1a88b1d8a_StructDecl> _151617_s = _1a93c81db_buildStructDecl(_self_, &(_151439_tokens));;
	if ((_151617_s != nullptr)) {
		_151617_s.get()._field_Public=false;
		{
			auto expr = &(_151617_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac699a1a:;
			if (it != expr_end) {
				jule::Ptr<_1a88b153d_FieldDecl> _151925_f = *it;
				{
					_151925_f.get()._field_Public=true;
				}
				_iter_next_1ac699a1a:;
				++it;
				goto _iter_begin_1ac699a1a;
			}
			_iter_end_1ac699a1a:;
		};
		_151617_s.get()._field_Binded=true;
	};
	return _151617_s;;
}



inline jule::Ptr<_1a88ad062_TypeAliasDecl> _1a93c97c5_buildBindTypeAlias(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _152842_tokens) {
	_152842_tokens=_152842_tokens.slice(1LL);
	jule::Ptr<_1a88ad062_TypeAliasDecl> _153017_t = _1a93c0c83_buildTypeAliasDecl(_self_, &(_152842_tokens));;
	if ((_153017_t != nullptr)) {
		_153017_t.get()._field_Public=false;
		_153017_t.get()._field_Binded=true;
	};
	return _153017_t;;
}



inline jule::Ptr<_1a88ae44d_UseDecl> _1a93c9ad3_buildBindUse(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _153836_tokens) {
	if ((_153836_tokens.len() == 1LL)) {
		_1a93be05b_pushErr(_self_.ptr(), _153836_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_153836_tokens=_153836_tokens.slice(1LL);
	;
	return _1a93c600d_buildUseDecl(_self_.ptr(), _153836_tokens, true);;
}



inline jule::Any _1a93c9de1_buildBind(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _154934_tokens) {
	jule::Ptr<_1a52684c0_Token> _155017_token = (*(_154934_tokens))[0LL];;
	if (((*(_154934_tokens)).len() == 1LL)) {
		_1a93be05b_pushErr(_self_.ptr(), _155017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155017_token=(*(_154934_tokens))[1LL];
	{
		auto &_match_expr{ _155017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac69e03b:;
			{
				return jule::Any(_1a93c8d9b_buildBindFn(_self_, (*(_154934_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ac69ea0e:;
			{
				return jule::Any(_1a93c91a9_buildBindVar(_self_, (*(_154934_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1ac69ea75:;
			{
				return jule::Any(_1a93c94b7_buildBindStruct(_self_, (*(_154934_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac69eadb:;
			{
				return jule::Any(_1a93c97c5_buildBindTypeAlias(_self_, (*(_154934_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1ac69e998:;
			{
				_1a93be05b_pushErr(_self_.ptr(), _155017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac69e943:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88a8722_FnDecl> _1a93ca1ee_getMethod(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _157334_tokens) {
	jule::I64 _157417_i = 0LL;;
	jule::Ptr<_1a52684c0_Token> _157517_token = (*(_157334_tokens))[_157417_i];;
	if ((_157517_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_157417_i + 1LL) >= (*(_157334_tokens)).len())) {
			_1a93be05b_pushErr(_self_.ptr(), _157517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157417_i)++;
		_157517_token=(*(_157334_tokens))[_157417_i];
	};
	if ((_157517_token.get()._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_157417_i + 1LL) >= (*(_157334_tokens)).len())) {
			_1a93be05b_pushErr(_self_.ptr(), _157517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157417_i)++;
		_157517_token=(*(_157334_tokens))[_157417_i];
	};
	if ((_157517_token.get()._field_Id != static_cast<jule::U64>(29LLU))) {
		_1a93be05b_pushErr(_self_.ptr(), _157517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a93c4abc_buildFn(_self_, _157334_tokens, true, false);;
}



inline void _1a93ca51d_parseImplBody(jule::Ptr<_1a93bd643_parser> _self_, jule::Ptr<_1a88b2b6b_Impl>* _160238_ipl, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _160255_tokens) {
	jule::Slice<jule::Ptr<_1a93a1626_stmt>> _160317_stmts = _1a93a19bc_splitStmts(_160255_tokens);;
	{
		auto expr = &(_160317_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6a640b:;
		if (it != expr_end) {
			jule::Ptr<_1a93a1626_stmt> _160421_stmt = *it;
			{
				(*(_160255_tokens))=_160421_stmt.get()._field_tokens;
				jule::Ptr<_1a52684c0_Token> _160621_token = (*(_160255_tokens))[0LL];;
				{
					auto &_match_expr{ _160621_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1ac6a7495:;
						{
							_1a93bec1b_pushDirective(_self_.ptr(), _1a93be996_buildDirective(_self_.ptr(), (*(_160255_tokens))));
							goto _iter_next_1ac6a640b;
						}
					}
					_match_end_1ac6a7440:;
				};
				{
					auto &_match_expr{ _160621_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1ac6a75e9:;
						{
							jule::Ptr<_1a88a9701_VarDecl> _161525_v = _1a93c1a97_buildVar(_self_, (*(_160255_tokens)));;
							if ((_161525_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1a88a9701_VarDecl>> &__jule_push_dest = (*(_160238_ipl)).get()._field_Statics; __jule_push_dest.push(_161525_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1ac6a8210:;
						{
							jule::Ptr<_1a88a8722_FnDecl> _162225_f = _1a93ca1ee_getMethod(_self_, _160255_tokens);;
							if ((_162225_f != nullptr)) {
								_1a93c8461_checkMethodReceiver(_self_.ptr(), &(_162225_f));
								_1a93cadae_applyFnMeta(_self_.ptr(), &(_162225_f));
								{ jule::Slice<jule::Ptr<_1a88a8722_FnDecl>> &__jule_push_dest = (*(_160238_ipl)).get()._field_Methods; __jule_push_dest.push(_162225_f); };
							};
						}
					}
					else {
						_case_begin_1ac6a79b2:;
						{
							_1a93be05b_pushErr(_self_.ptr(), _160621_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1ac6a640b;
						}
					}
					_match_end_1ac6a795c:;
				};
			}
			_iter_next_1ac6a640b:;
			++it;
			goto _iter_begin_1ac6a640b;
		}
		_iter_end_1ac6a640b:;
	};
}



inline jule::Ptr<_1a88b2b6b_Impl> _1a93ca82b_buildImpl(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _163533_tokens) {
	jule::Ptr<_1a52684c0_Token> _163617_token = _163533_tokens[0LL];;
	if ((_163533_tokens.len() < 2LL)) {
		_1a93be05b_pushErr(_self_.ptr(), _163617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _164217_i = 1LL;;
	jule::Ptr<_1a88970e5_TypeDecl> _164418_base;;
	jule::Bool _164428_ok = false;;
	({
		__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, &(_163533_tokens), (&(_164217_i)), true);
		_164418_base = __jule_assign_result.__jule_result_arg0;
		_164428_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164428_ok))) {
		return nullptr;;
	};
	if ((_164217_i >= _163533_tokens.len())) {
		_1a93be05b_pushErr(_self_.ptr(), _163617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a88b2b6b_Impl> _165317_ipl = jule::new_ptr<_1a88b2b6b_Impl>(_1a88b2b6b_Impl{._field_Base=_164418_base, });;
	_163617_token=_163533_tokens[_164217_i];
	if ((_163617_token.get()._field_Id != static_cast<jule::U64>(9LLU))) {
		if ((_163617_token.get()._field_Id == static_cast<jule::U64>(72LLU))) {
			({
				jule::Ptr<_1a88970e5_TypeDecl> ___jule_assign_arg = _165317_ipl.get()._field_Dest;
				jule::Ptr<_1a88970e5_TypeDecl> _1___jule_assign_arg = _165317_ipl.get()._field_Base;
				_165317_ipl.get()._field_Base = ___jule_assign_arg;
				_165317_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1a93bd92e_stop(_self_.ptr());
		_1a93be05b_pushErr(_self_.ptr(), _163617_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_164217_i)++;
	if ((_164217_i >= _163533_tokens.len())) {
		_1a93bd92e_stop(_self_.ptr());
		_1a93be05b_pushErr(_self_.ptr(), _163617_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType(_self_, &(_163533_tokens), (&(_164217_i)), true);
		_165317_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_164428_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164428_ok))) {
		return nullptr;;
	};
	if ((_164217_i >= _163533_tokens.len())) {
		_1a93bd92e_stop(_self_.ptr());
		_1a93be05b_pushErr(_self_.ptr(), _163617_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _169117_bodyTokens = _1a93bbbc4_range(&(_164217_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_163533_tokens));;
	if ((_169117_bodyTokens == nullptr)) {
		_1a93bd92e_stop(_self_.ptr());
		_1a93be05b_pushErr(_self_.ptr(), _163617_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_164217_i < _163533_tokens.len())) {
		_1a93be05b_pushErr(_self_.ptr(), _163533_tokens[_164217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_165317_ipl.get()._field_End=_163533_tokens[(_164217_i - 1LL)];
	_1a93ca51d_parseImplBody(_self_, &(_165317_ipl), &(_169117_bodyTokens));
	return _165317_ipl;;
}



inline jule::Any _1a93cab39_buildNodeData(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _170638_tokens) {
	jule::Ptr<_1a52684c0_Token> _170717_token = (*(_170638_tokens))[0LL];;
	{
		auto &_match_expr{ _170717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac6b6509:;
			{
				jule::Ptr<_1a88a8722_FnDecl> _171121_f = _1a93c4abc_buildFn(_self_, _170638_tokens, false, false);;
				if ((_171121_f != nullptr)) {
					_171121_f.get()._field_Global=true;
				};
				return jule::Any(_171121_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ac6b732e:;
			{
				return jule::Any(_1a93c1a97_buildVar(_self_, (*(_170638_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac6b7395:;
			{
				return jule::Any(_1a93c0c83_buildTypeAliasDecl(_self_, _170638_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1ac6b6ad1:;
			{
				return _1a93c77b2_buildNodeEnumDecl(_self_, _170638_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1ac6b6b47:;
			{
				return jule::Any(_1a93c81db_buildStructDecl(_self_, _170638_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1ac6b6bad:;
			{
				return jule::Any(_1a93c8a8d_buildTraitDecl(_self_, _170638_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1ac6b6c24:;
			{
				return jule::Any(_1a93ca82b_buildImpl(_self_, (*(_170638_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac6b7571:;
			{
				return _1a93c9de1_buildBind(_self_, _170638_tokens);;
			}
		}
		else {
			_case_begin_1ac6b6a48:;
			{
				_1a93be05b_pushErr(_self_.ptr(), _170717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac6b68a0:;
	};
}



inline void _1a93cadae_applyFnMeta(_1a93bd643_parser* _self_, jule::Ptr<_1a88a8722_FnDecl>* _173935_f) {
	(*(_173935_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a93cb134_applyMeta(_1a93bd643_parser* _self_, _1a88641d3_Node* _174433_node) {
	{
		auto &_match_expr{ (*(_174433_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ac6bc246:;
			{
				jule::Ptr<_1a88a9701_VarDecl> _174721_v = (*(_174433_node))._field_Data.cast_ptr<_1a88a9701_VarDecl>(&__jule_any_type16);;
				if ((_174721_v == nullptr)) {
					return;;
				};
				_174721_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac6bc2ac:;
			{
				jule::Ptr<_1a88a8722_FnDecl> _175421_f = (*(_174433_node))._field_Data.cast_ptr<_1a88a8722_FnDecl>(&__jule_any_type14);;
				if ((_175421_f == nullptr)) {
					return;;
				};
				_1a93cadae_applyFnMeta(_self_, &(_175421_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ac6bc323:;
			{
				jule::Ptr<_1a88b1d8a_StructDecl> _176021_sd = (*(_174433_node))._field_Data.cast_ptr<_1a88b1d8a_StructDecl>(&__jule_any_type13);;
				if ((_176021_sd == nullptr)) {
					return;;
				};
				_176021_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1ac6bc037:;
	};
}



inline void _1a93cb3a9_pushUseDecl(jule::Ptr<_1a93bd643_parser> _self_, jule::Ptr<_1a88ae44d_UseDecl>* _176936_decl) {
	{ jule::Slice<jule::Ptr<_1a88ae44d_UseDecl>> &__jule_push_dest = _self_.get()._field_ast.get()._field_UseDecls; __jule_push_dest.push((*(_176936_decl))); };
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1a93be05b_pushErr(_self_.ptr(), (*(_176936_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1a93be37a_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a93cb6b7_pushMetaNodes(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _177738_tokens) {
	{
		auto &_match_expr{ (*(_177738_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ac6c28ab:;
			{
				;
				jule::Ptr<_1a88ae44d_UseDecl> _178121_decl = _1a93c600d_buildUseDecl(_self_.ptr(), (*(_177738_tokens)), false);;
				_1a93cb3a9_pushUseDecl(_self_, &(_178121_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac6c2933:;
			{
				if ((((*(_177738_tokens)).len() > 1LL) && ((*(_177738_tokens))[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1a88ae44d_UseDecl> _178625_decl = _1a93c9ad3_buildBindUse(_self_, (*(_177738_tokens)));;
					_1a93cb3a9_pushUseDecl(_self_, &(_178625_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ac6c29aa:;
			{
				_1a93bec1b_pushDirective(_self_.ptr(), _1a93be996_buildDirective(_self_.ptr(), (*(_177738_tokens))));
				return true;;
			}
		}
		_match_end_1ac6c27ce:;
	};
	return false;;
}



inline _1a88641d3_Node _1a93cb9c5_parseNode(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _179734_st) {
	_1a88641d3_Node _179817_node = _1a88641d3_Node{._field_Token=(*(_179734_st))[0LL], };;
	if (_1a93cb6b7_pushMetaNodes(_self_, _179734_st)) {
		return _179817_node;;
	};
	jule::Any _180617_data = _1a93cab39_buildNodeData(_self_, _179734_st);;
	if ((_180617_data == nullptr)) {
		return _179817_node;;
	};
	_179817_node._field_Data=_180617_data;
	_1a93cb134_applyMeta(_self_.ptr(), &(_179817_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a93be05b_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _179817_node;;
}



inline void _1a93cbc4a_appendNode(jule::Ptr<_1a93bd643_parser> _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _182135_st) {
	if (((*(_182135_st)).len() == 0LL)) {
		return;;
	};
	_1a88641d3_Node _182517_node = _1a93cb9c5_parseNode(_self_, _182135_st);;
	if (((_182517_node._field_Data == nullptr) || _1a93bdb93_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1a88641d3_Node> &__jule_push_dest = _self_.get()._field_ast.get()._field_Nodes; __jule_push_dest.push(_182517_node); };
}



inline void _1a93cc1ac_removeRange(_1a93bd643_parser* _self_, jule::I64 _183230_i, jule::U64 _183238_id, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _183252_tokens, jule::Slice<jule::I64>* _183275_ranges) {
	jule::U64 _183313_close = _1a93bc5ed_getCloseOfBrace(_183238_id);;
	for (; (_183230_i >= 0LL); (_183230_i)--) {
		{
			jule::Ptr<_1a52684c0_Token> _183517_tok = (*(_183252_tokens))[(*(_183275_ranges))[_183230_i]];;
			if ((_183517_tok.get()._field_Id != _183313_close)) {
				goto _iter_next_1ac6cb486;
			};
			(*(_183275_ranges))=jule::append((*(_183275_ranges)).slice(0LL, _183230_i),(*(_183275_ranges)).slice((_183230_i + 1LL)));
			goto _iter_end_1ac6cb486;
		}
	_iter_next_1ac6cb486:;
	}
	_iter_end_1ac6cb486:;;
}



inline void _1a93cc575_pushWrongOrderCloseErr(_1a93bd643_parser* _self_, jule::Ptr<_1a52684c0_Token>* _184442_t, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _184454_tokens, jule::Slice<jule::I64>* _184473_ranges) {
	{
		auto &_match_expr{ (*(_184454_tokens))[(*(_184473_ranges))[((*(_184473_ranges)).len() - 1LL)]].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1ac6cd477:;
			{
				_1a93be05b_pushErr(_self_, (*(_184442_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ac6cd4ee:;
			{
				_1a93be05b_pushErr(_self_, (*(_184442_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ac6cd576:;
			{
				_1a93be05b_pushErr(_self_, (*(_184442_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac6cd356:;
	};
}



inline void _1a93cc9d7_pushRangeClose(_1a93bd643_parser* _self_, jule::Ptr<_1a52684c0_Token> _185533_t, jule::U64 _185544_left, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _185560_tokens, jule::Slice<jule::I64>* _185583_ranges) {
	jule::I64 _185613_n = (*(_185583_ranges)).len();;
	if ((_185613_n == 0LL)) {
		{
			auto &_match_expr{ _185533_t.get()._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1ac6d0e19:;
				{
					_1a93be05b_pushErr(_self_, _185533_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1ac6d0e91:;
				{
					_1a93be05b_pushErr(_self_, _185533_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1ac6d1018:;
				{
					_1a93be05b_pushErr(_self_, _185533_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1ac6d0bd8:;
		};
		return;;
	} else if (((*(_185560_tokens))[(*(_185583_ranges))[(_185613_n - 1LL)]].get()._field_Id != _185544_left)) {
		_1a93cc575_pushWrongOrderCloseErr(_self_, &(_185533_t), _185560_tokens, _185583_ranges);
	};
	_1a93cc1ac_removeRange(_self_, static_cast<jule::I64>((_185613_n - 1LL)), _185533_t.get()._field_Id, _185560_tokens, _185583_ranges);
}



inline void _1a93ccc5c_checkRanges(_1a93bd643_parser* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _187331_tokens) {
	jule::Slice<jule::I64> _187417_ranges = nullptr;;
	{
		auto expr = _187331_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6d3ceb:;
		if (it != expr_end) {
			jule::I64 _187613_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> *_187616_token = it;
			{
				{
					auto &_match_expr{ (*(_187616_token)).get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac6d4a00:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _187417_ranges; __jule_push_dest.push(_187613_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac6d4a77:;
						{
							_1a93cc9d7_pushRangeClose(_self_, (*(_187616_token)), static_cast<jule::U64>(74LLU), _187331_tokens, &(_187417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1ac6d4aee:;
						{
							_1a93cc9d7_pushRangeClose(_self_, (*(_187616_token)), static_cast<jule::U64>(72LLU), _187331_tokens, &(_187417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ac6d4b76:;
						{
							_1a93cc9d7_pushRangeClose(_self_, (*(_187616_token)), static_cast<jule::U64>(76LLU), _187331_tokens, &(_187417_ranges));
						}
					}
					_match_end_1ac6d47ad:;
				};
			}
			_iter_next_1ac6d3ceb:;
			++it;
			_187613_i++;
			goto _iter_begin_1ac6d3ceb;
		}
		_iter_end_1ac6d3ceb:;
	};
	{
		auto expr = &(_187417_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6d3a87:;
		if (it != expr_end) {
			jule::I64 _189116_i = *it;
			{
				jule::Ptr<_1a52684c0_Token> _189217_token = (*(_187331_tokens))[_189116_i];;
				{
					auto &_match_expr{ _189217_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac6d753b:;
						{
							_1a93be05b_pushErr(_self_, _189217_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac6d75a2:;
						{
							_1a93be05b_pushErr(_self_, _189217_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac6d7618:;
						{
							_1a93be05b_pushErr(_self_, _189217_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1ac6d730a:;
				};
			}
			_iter_next_1ac6d3a87:;
			++it;
			goto _iter_begin_1ac6d3a87;
		}
		_iter_end_1ac6d3a87:;
	};
}



inline void _1a93cced2_parse(jule::Ptr<_1a93bd643_parser> _self_, jule::Ptr<_1a526d85a_File>* _190430_f) {
	_self_.get()._field_ast=jule::new_ptr<_1a8863347_Ast>(_1a8863347_Ast{._field_File=(*(_190430_f)), });
	_self_.get()._field_ep=jule::new_ptr<_1a93ad7ed_exprBuilder>(_1a93ad7ed_exprBuilder{._field_p=_self_});
	_1a93ccc5c_checkRanges(_self_.ptr(), &((*(_190430_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a93a1626_stmt>> _191717_stmts = _1a93a19bc_splitStmts(&((*(_190430_f)).get()._field_Tokens));;
	jule::I64 _192017_i = 0LL;;
	for (; (_192017_i < _191717_stmts.len()); (_192017_i)++) {
		{
			jule::Ptr<_1a93a1626_stmt> _192221_stmt = _191717_stmts[_192017_i];;
			if ((_192221_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_192221_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1ac6da6e8;
			};
			if ((!(_1a4ded2dc_IsTopDirective(_192221_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1ac6da6e8;
			};
			{ jule::Slice<jule::Ptr<_1a88645ce_Directive>> &__jule_push_dest = _self_.get()._field_ast.get()._field_TopDirectives; __jule_push_dest.push(_1a93be996_buildDirective(_self_.ptr(), _192221_stmt.get()._field_tokens)); };
		}
	_iter_next_1ac6da6e8:;
	}
	_iter_end_1ac6da6e8:;;
	_self_.get()._field_errors=nullptr;
	for (; (_192017_i < _191717_stmts.len()); (_192017_i)++) {
		{
			jule::Ptr<_1a93a1626_stmt> _193921_stmt = _191717_stmts[_192017_i];;
			_1a93cbc4a_appendNode(_self_, &(_193921_stmt.get()._field_tokens));
			if (_1a93bdb93_stopped(_self_.ptr())) {
				goto _iter_end_1ac6daa4a;
			};
		}
	_iter_next_1ac6daa4a:;
	}
	_iter_end_1ac6daa4a:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a93be05b_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a93bd643_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1a93ce8c9_pushErr(_1a93ce368_typeBuilder* _self_, jule::Ptr<_1a52684c0_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1a93be05b_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a93cebe8_pushSuggestion(_1a93ce368_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1a93be37a_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93cee5c_buildNamespace(_1a93ce368_typeBuilder* _self_) {
	jule::Ptr<_1a88970e5_TypeDecl> _5517_t = jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1a8897d1b_NamespaceTypeDecl> _5917_nst = jule::new_ptr<_1a8897d1b_NamespaceTypeDecl>();;
	jule::I64 _6017_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a52684c0_Token> _6221_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6017_n & 1LL) == 0LL)) {
				if ((_6221_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
					_1a93ce8c9_pushErr(_self_, _6221_token, jule::Str("invalid syntax", 14));
					_1a93cebe8_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1a52684c0_Token>> &__jule_push_dest = _5917_nst.get()._field_Idents; __jule_push_dest.push(_6221_token); };
			} else if ((_6221_token.get()._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1ac6e2d3d;
			};
			(_6017_n)++;
		}
	_iter_next_1ac6e2d3d:;
	}
	_iter_end_1ac6e2d3d:;;
	_5917_nst.get()._field_Idents=_5917_nst.get()._field_Idents.slice(0LL, (_5917_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_5917_nst.get()._field_Kind=_1a93d0699_buildIdent(_self_);
	_5517_t.get()._field_Kind=jule::Any(_5917_nst, &__jule_any_type96);
	return _5517_t;;
}



inline jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> _1a93d01c1_buildGenerics(_1a93ce368_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a52684c0_Token> _8813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((_8813_token.get()._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _9317_parts = _1a93d0435_identGenerics(_self_);;
	if ((_9317_parts.len() == 0LL)) {
		_1a93ce8c9_pushErr(_self_, _8813_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> _9917_types = jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>>::alloc(0LL, _9317_parts.len());;
	{
		auto expr = &(_9317_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac6ee6a7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _10021_part = *it;
			{
				jule::I64 _10121_j = 0LL;;
				jule::Ptr<_1a88970e5_TypeDecl> _10222_t;;
				({
					__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType((*(_self_))._field_p, &(_10021_part), (&(_10121_j)), true);
					_10222_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10121_j < _10021_part.len())) {
					_1a93ce8c9_pushErr(_self_, _10021_part[_10121_j], jule::Str("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>> &__jule_push_dest = _9917_types; __jule_push_dest.push(_10222_t); };
			}
			_iter_next_1ac6ee6a7:;
			++it;
			goto _iter_begin_1ac6ee6a7;
		}
		_iter_end_1ac6ee6a7:;
	};
	return _9917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _1a93d0435_identGenerics(_1a93ce368_typeBuilder* _self_) {
	jule::I64 _11213_first = (*((*(_self_))._field_i));;
	jule::I64 _11317_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1a52684c0_Token> _11517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ _11517_token.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1ac702c1b:;
					{
						(_11317_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1ac702c82:;
					{
						(_11317_rangeN)--;
					}
				}
				_match_end_1ac702a0c:;
			};
			if ((_11317_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1ac701d08;
			};
		}
	_iter_next_1ac701d08:;
	}
	_iter_end_1ac701d08:;;
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _12717_tokens = (*(_self_))._field_tokens.slice((_11213_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _12818_parts;;
	jule::Slice<_1a4deb40b_Log> _12825_errors;;
	({
		__jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93bc356_parts(&(_12717_tokens), static_cast<jule::U64>(5LLU), true);
		_12818_parts = __jule_assign_result.__jule_result_arg0;
		_12825_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*(_self_))._field_p.get()._field_errors).append(_12825_errors);;
	};
	return _12818_parts;;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d0699_buildIdent(_1a93ce368_typeBuilder* _self_) {
	jule::Bool _13617_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13617_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1a93cee5c_buildNamespace(_self_);;
	};
	jule::Ptr<_1a52684c0_Token> _14017_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a88976ab_IdentTypeDecl> _14117_it = jule::new_ptr<_1a88976ab_IdentTypeDecl>(_1a88976ab_IdentTypeDecl{._field_Token=_14017_token, ._field_Ident=_14017_token.get()._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a88970e5_TypeDecl> _14717_itd = jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=_14017_token, ._field_Kind=jule::Any(_14117_it, &__jule_any_type20)});;
	if (((!(_13617_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(17LLU)))) {
		_14117_it.get()._field_Generics=_1a93d01c1_buildGenerics(_self_);
		return _14717_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a93ce8c9_pushErr(_self_, _14017_token, jule::Str("invalid syntax", 14));
		return _14717_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1a93ce8c9_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _14717_itd;;
	};
	jule::Ptr<_1a8897997_SubIdentTypeDecl> _16417_sit = jule::new_ptr<_1a8897997_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1a88976ab_IdentTypeDecl>> &__jule_push_dest = _16417_sit.get()._field_Idents; __jule_push_dest.push(_14117_it); };
	jule::Ptr<_1a88970e5_TypeDecl> _16617_ident = _1a93d0699_buildIdent(_self_);;
	{
		auto &_match_expr{ _16617_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ac70c72b:;
			{
				{ jule::Slice<jule::Ptr<_1a88976ab_IdentTypeDecl>> &__jule_push_dest = _16417_sit.get()._field_Idents; __jule_push_dest.push(_16617_ident.get()._field_Kind.cast_ptr<_1a88976ab_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ac70c7a3:;
			{
				(_16417_sit.get()._field_Idents).append(_16617_ident.get()._field_Kind.cast_ptr<_1a8897997_SubIdentTypeDecl>(&__jule_any_type92).get()._field_Idents);;
			}
		}
		_match_end_1ac70c660:;
	};
	return jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=_14017_token, ._field_Kind=jule::Any(_16417_sit, &__jule_any_type92)});;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d090d_buildCppLink(_1a93ce368_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1a93ce8c9_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1a88970e5_TypeDecl> _18517_t = _1a93d0699_buildIdent(_self_);;
	_18517_t.get()._field_Kind.cast_ptr<_1a88976ab_IdentTypeDecl>(&__jule_any_type20).get()._field_Binded=true;
	return _18517_t;;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d0b72_buildFn(_1a93ce368_typeBuilder* _self_) {
	jule::Ptr<_1a52684c0_Token> _19117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a88a8722_FnDecl> _19217_f = _1a93c466b_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19217_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a88a8a74_IsAnon(_19217_f.ptr())))) {
		_1a93ce8c9_pushErr(_self_, _19217_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=_19117_token, ._field_Kind=jule::Any(_19217_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d0dd6_buildPtr(_1a93ce368_typeBuilder* _self_) {
	jule::Ptr<_1a52684c0_Token> _20617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a93ce8c9_pushErr(_self_, _20617_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=_20617_token, ._field_Kind=jule::Any(jule::new_ptr<_1a8898aca_PtrTypeDecl>(_1a8898aca_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type77)});;
	};
	jule::Ptr<_1a88970e5_TypeDecl> _22317_elem = _1a93d1d60_step(_self_);;
	if ((_22317_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=_20617_token, ._field_Kind=jule::Any(jule::new_ptr<_1a8898aca_PtrTypeDecl>(_1a8898aca_PtrTypeDecl{._field_Elem=_22317_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d114a_buildSptr(_1a93ce368_typeBuilder* _self_) {
	jule::Ptr<_1a52684c0_Token> _23717_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a93ce8c9_pushErr(_self_, _23717_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a88970e5_TypeDecl> _24417_elem = _1a93d1d60_step(_self_);;
	if ((_24417_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=_23717_token, ._field_Kind=jule::Any(jule::new_ptr<_1a8898107_SptrTypeDecl>(_1a8898107_SptrTypeDecl{._field_Elem=_24417_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d13ae_buildSlc(_1a93ce368_typeBuilder* _self_) {
	jule::Ptr<_1a52684c0_Token> _25817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a88970e5_TypeDecl> _26017_elem = _1a93d1d60_step(_self_);;
	if ((_26017_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=_25817_token, ._field_Kind=jule::Any(jule::new_ptr<_1a8898503_SlcTypeDecl>(_1a8898503_SlcTypeDecl{._field_Elem=_26017_elem}), &__jule_any_type76)});;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d1623_buildArr(_1a93ce368_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _27317_exprTokens = _1a93bbbc4_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a93ce8c9_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a88970e5_TypeDecl> _27917_elem = _1a93d1d60_step(_self_);;
	if ((_27917_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a88992a1_ArrTypeDecl> _28417_arrt = jule::new_ptr<_1a88992a1_ArrTypeDecl>(_1a88992a1_ArrTypeDecl{._field_Elem=_27917_elem, });;
	jule::Ptr<_1a52684c0_Token> _28817_token = _27317_exprTokens[0LL];;
	if (((_27317_exprTokens.len() == 1LL) && (_28817_token.get()._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		_28417_arrt.get()._field_Size=_1a93be688_buildExpr((*(_self_))._field_p, &(_27317_exprTokens));
	};
	return jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=_28817_token, ._field_Kind=jule::Any(_28417_arrt, &__jule_any_type75)});;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d1887_buildMap(_1a93ce368_typeBuilder* _self_) {
	jule::Ptr<_1a52684c0_Token> _30217_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a93ce8c9_pushErr(_self_, _30217_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _31017_keyTokens = _1a93bbbc4_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a93ce8c9_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_31017_keyTokens.len() == 0LL)) {
		_1a93ce8c9_pushErr(_self_, _30217_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a88999aa_MapTypeDecl> _31917_mapt = jule::new_ptr<_1a88999aa_MapTypeDecl>();;
	jule::I64 _32017_j = 0LL;;
	jule::Ptr<_1a88970e5_TypeDecl> _32118_keyt;;
	jule::Bool _32128_ok = false;;
	({
		__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType((*(_self_))._field_p, &(_31017_keyTokens), (&(_32017_j)), (*(_self_))._field_err);
		_32118_keyt = __jule_assign_result.__jule_result_arg0;
		_32128_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32128_ok))) {
		return nullptr;;
	} else if ((_32017_j < _31017_keyTokens.len())) {
		_1a93ce8c9_pushErr(_self_, _31017_keyTokens[_32017_j], jule::Str("invalid syntax", 14));
	};
	_31917_mapt.get()._field_Key=_32118_keyt;
	jule::Ptr<_1a88970e5_TypeDecl> _32918_valt;;
	({
		__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_assign_result = _1a93c0975_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32918_valt = __jule_assign_result.__jule_result_arg0;
		_32128_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32128_ok))) {
		return nullptr;;
	};
	_31917_mapt.get()._field_Val=_32918_valt;
	return jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Token=_30217_mapToken, ._field_Kind=jule::Any(_31917_mapt, &__jule_any_type79)});;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d1aeb_buildEnumerable(_1a93ce368_typeBuilder* _self_) {
	jule::Ptr<_1a52684c0_Token> _34117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1a93ce8c9_pushErr(_self_, _34117_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34117_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((_34117_token.get()._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1a93d13ae_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a93d1623_buildArr(_self_);;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93d1d60_step(_1a93ce368_typeBuilder* _self_) {
	jule::Ptr<_1a52684c0_Token> _35613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _35613_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ac72a88c:;
			{
				return _1a93d0699_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac72a9d0:;
			{
				return _1a93d090d_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac72ac77:;
			{
				return _1a93d0b72_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac72a194:;
			{
				return _1a93d0dd6_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac72a20a:;
			{
				return _1a93d114a_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ac72a271:;
			{
				return jule::new_ptr<_1a88970e5_TypeDecl>(_1a88970e5_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a8898107_SptrTypeDecl>(_1a8898107_SptrTypeDecl{._field_Elem=_1a93d114a_buildSptr(_self_)}), &__jule_any_type78)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ac72a2d7:;
			{
				return _1a93d1aeb_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1ac72ad43:;
			{
				return _1a93d1887_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1ac72a12d:;
			{
				((*((*(_self_))._field_i)))++;
				_1a93ce8c9_pushErr(_self_, _35613_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1ac729ea7:;
	};
}



inline __jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool _1a93d20c4_build(_1a93ce368_typeBuilder* _self_) {
	__jule_tuple_x_1a88970e5_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a88970e5_TypeDecl> _38817_root = _1a93d1d60_step(_self_);;
	if ((_38817_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a93cdb92_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38817_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a93ce368_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8b2e415_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1a8b30c74_pushErr(_1a8b30768_directiveEval* _self_, jule::Ptr<_1a52684c0_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_1a4deb40b_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1a4deb40b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1a4deb84b_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _1a8b3112b_splitOperans(_1a8b30768_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3517_i = 0LL;;
	jule::I64 _3617_rangeN = 0LL;;
	jule::I64 _3717_last = 0LL;;
	for (; (_3517_i < ((*(_3349_tokens)).len() - 1LL)); (_3517_i)++) {
		{
			jule::Ptr<_1a52684c0_Token> _3917_b = (*(_3349_tokens))[_3517_i];;
			{
				auto &_match_expr{ _3917_b.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac74e6a2:;
					{
						(_3617_rangeN)++;
						goto _iter_next_1ac74d12e;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac74ea48:;
					{
						(_3617_rangeN)--;
					}
				}
				_match_end_1ac74e916:;
			};
			if (((_3617_rangeN > 0LL) || (_3917_b.get()._field_Id != _3331_op))) {
				goto _iter_next_1ac74d12e;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3717_last, _3517_i)); };
			_3717_last=static_cast<jule::I64>((_3517_i + 1LL));
		}
	_iter_next_1ac74d12e:;
	}
	_iter_end_1ac74d12e:;;
	if ((_3717_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3717_last)); };
	} else {
		_1a8b30c74_pushErr(_self_, (*(_3349_tokens))[(_3717_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1a8b31439_evalDirectiveIdent(_1a8b30768_directiveEval* _self_, jule::Str _6433_ident) {
	if (_6433_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac752551:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1ac752551:;
			++it;
			goto _iter_begin_1ac752551;
		}
		_iter_end_1ac752551:;
	};
	return false;;
}



inline jule::Bool _1a8b31747_evalDirectivePart(_1a8b30768_directiveEval* _self_, jule::Slice<jule::Ptr<_1a52684c0_Token>> _7840_part) {
	jule::Bool _7913_logicalNot = (_7840_part[0LL].get()._field_Id == static_cast<jule::U64>(68LLU));;
	if (_7913_logicalNot) {
		_7840_part=_7840_part.slice(1LL);
	};
	if ((_7840_part.len() > 1LL)) {
		_1a8b30c74_pushErr(_self_, _7840_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8917_result = _1a8b31439_evalDirectiveIdent(_self_, _7840_part[0LL].get()._field_Kind);;
	if (_7913_logicalNot) {
		_8917_result=(!(_8917_result));
	};
	return _8917_result;;
}



inline jule::Bool _1a8b319ab_eval(_1a8b30768_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_1a8b30c74_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10217_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _10417_logicalOrParts = _1a8b3112b_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(_self_))._field_d.get()._field_Args));;
	if ((_10417_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10417_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac757545:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _10921_part = *it;
			{
				jule::Bool _11021_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _11121_logicalAndParts = _1a8b3112b_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11121_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11121_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac759118:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1a52684c0_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1a52684c0_Token> _11721_first = _11625_andPart[0LL];;
							if ((_11721_first.get()._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1a52684c0_Token> _11925_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if ((_11925_end.get()._field_Id != static_cast<jule::U64>(75LLU))) {
									_1a8b30c74_pushErr(_self_, _11721_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_11625_andPart=_11625_andPart.slice(1LL, (_11625_andPart.len() - 1LL));
							};
							_11021_and=(_11021_and && _1a8b31747_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1ac759118:;
						++it;
						goto _iter_begin_1ac759118;
					}
					_iter_end_1ac759118:;
				};
				_10217_result=(_10217_result || _11021_and);
			}
			_iter_next_1ac757545:;
			++it;
			goto _iter_begin_1ac757545;
		}
		_iter_end_1ac757545:;
	};
	return _10217_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8b30768_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a93d30d6_JuleImporter> static__1a93d34c1_New(_1a8b2e415_CompileInfo _5819_info) {
	jule::Ptr<_1a93d30d6_JuleImporter> _5917_imp = jule::new_ptr<_1a93d30d6_JuleImporter>(_1a93d30d6_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1a4e90648_PathStdlib}), });;
	_1a8b2ec2e_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1a893d323_ImportInfo>> _1a93d3735_AllPackages(_1a93d30d6_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a93d3b42_SetModPath(_1a93d30d6_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1a93d3da6_GetModPath(_1a93d30d6_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a93d41b4_ModById(_1a93d30d6_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a93d44c2_GetImport(_1a93d30d6_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7600b9:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1ac7600b9:;
			++it;
			goto _iter_begin_1ac7600b9;
		}
		_iter_end_1ac7600b9:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log _1a93d4879_ImportPackage(_1a93d30d6_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>> _9717_dirents = ({
		auto except = static__1a4d66585_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1a4deb40b_Log>::make({_1a93d2b52_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1a8b40976_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_1a4deb40b_Log> _10525_errs = _1a8b40b74_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1a8863347_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1a8863347_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7615c6:;
		if (it != expr_end) {
			jule::Ptr<_1d0a261b4_DirEntry> _11316_dirent = *it;
			{
				if ((_1d0a358ee_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1a4d5a9a8_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1ac7615c6;
				};
				jule::Str _11917__path = _1a4d650de_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1a526d85a_File> _12021_file = _1a526eb14_NewFileSet(_11917__path);;
				_1a526dc23_Fill(_12021_file.ptr(), _1a93d2899_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1a4deb40b_Log> _12221_errors = _1a527a4b0_Lex(_12021_file, static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a56b3e9d_FileInfo> _12721_finfo = _1a939e5d0_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1a8b14b37_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1ac7615c6;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_1a4deb40b_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93d4eea_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1ac7615c6;
				};
				{ jule::Slice<jule::Ptr<_1a8863347_Ast>> &__jule_push_dest = _11217_asts; __jule_push_dest.push(_12721_finfo.get()._field_Ast); };
			}
			_iter_next_1ac7615c6:;
			++it;
			goto _iter_begin_1ac7615c6;
		}
		_iter_end_1ac7615c6:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a93d4aee_Imported(_1a93d30d6_JuleImporter* _self_, jule::Ptr<_1a893d323_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7642bb:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_Binded == _15331_imp.get()._field_Binded) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1ac7642bb:;
			++it;
			goto _iter_begin_1ac7642bb;
		}
		_iter_end_1ac7642bb:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac76a910:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1ac76a910:;
				++it;
				_16217_i++;
				goto _iter_begin_1ac76a910;
			}
			_iter_end_1ac76a910:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_setted:;
	};
	{ jule::Slice<jule::Ptr<_1a893d323_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1a4deb40b_Log _1a93d4eea_isPassBuildDirectives(_1a93d30d6_JuleImporter* _self_, jule::Ptr<_1a8863347_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1a4deb40b_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac76d869:;
		if (it != expr_end) {
			jule::Ptr<_1a88645ce_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_1ac76d869;
				};
				_1a8b30768_directiveEval _18421_de = _1a8b30768_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _1a8b319ab_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac76d869:;
			++it;
			goto _iter_begin_1ac76d869;
		}
		_iter_end_1ac76d869:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a93d30d6_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a93d7d88_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac78d5d1_isCommonOrdered(jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> _1834_s, jule::Ptr<_1a88b6d3a_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac78e5d2:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac78edeb:;
					if (it != expr_end) {
						jule::Ptr<_1a88b6d3a_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1ac78edeb:;
						++it;
						goto _iter_begin_1ac78edeb;
					}
					_iter_end_1ac78edeb:;
				};
			}
			_iter_next_1ac78e5d2:;
			++it;
			goto _iter_begin_1ac78e5d2;
		}
		_iter_end_1ac78e5d2:;
	};
	return true;;
}

inline jule::Bool _1ac792ecb_isCommonOrdered(jule::Slice<jule::Ptr<_1a8966901_Var>> _1834_s, jule::Ptr<_1a8966901_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac793e88:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac7947a2:;
					if (it != expr_end) {
						jule::Ptr<_1a8966901_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1ac7947a2:;
						++it;
						goto _iter_begin_1ac7947a2;
					}
					_iter_end_1ac7947a2:;
				};
			}
			_iter_next_1ac793e88:;
			++it;
			goto _iter_begin_1ac793e88;
		}
		_iter_end_1ac793e88:;
	};
	return true;;
}



inline void _1ac78a204_orderCommon(jule::Slice<jule::Ptr<_1a88b6d3a_Struct>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac78b667:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1ac78d5d1_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1ac78c35a:;
				}
				_iter_end_1ac78c35a:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1ac78b667;
				};
				(_3217_n)--;
			}
			_iter_next_1ac78b667:;
			++it;
			goto _iter_begin_1ac78b667;
		}
		_iter_end_1ac78b667:;
	};
}

inline void _1ac78aa40_orderCommon(jule::Slice<jule::Ptr<_1a8966901_Var>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac791062:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1ac792ecb_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1ac791c55:;
				}
				_iter_end_1ac791c55:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1ac791062;
				};
				(_3217_n)--;
			}
			_iter_next_1ac791062:;
			++it;
			goto _iter_begin_1ac791062;
		}
		_iter_end_1ac791062:;
	};
}



inline void static__1a93d897c_orderStructures(jule::Slice<jule::Ptr<_1a88b6d3a_Struct>>* _5136_structs) {
	_1ac78a204_orderCommon(_5136_structs);
}



inline void static__1a93d8b8b_orderVars(jule::Slice<jule::Ptr<_1a8966901_Var>>* _5730_vars) {
	_1ac78aa40_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1a93d80ec_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9449ceb_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1a9481409_optimizeChild(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Ptr<_1a891e38c_Scope>* _3938_s) {
	jule::Ptr<_1a9480e75_scopeDeadCode> _4017_sdc = jule::new_ptr<_1a9480e75_scopeDeadCode>(_1a9480e75_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1a9483a49_optimizeStmts(_4017_sdc);
	};
}



inline void _1a94816a1_optimizeBodyChildExceptional(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Ptr<_1a891e38c_Scope>* _5053_s) {
	jule::Ptr<_1a9480e75_scopeDeadCode> _5117_sdc = jule::new_ptr<_1a9480e75_scopeDeadCode>(_1a9480e75_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1a9483a49_optimizeStmts(_5117_sdc);
	};
}



inline void _1a9481937_optimizeBodyChild(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Ptr<_1a891e38c_Scope>* _6142_s) {
	jule::Ptr<_1a9480e75_scopeDeadCode> _6217_sdc = jule::new_ptr<_1a9480e75_scopeDeadCode>(_1a9480e75_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1a9483a49_optimizeStmts(_6217_sdc);
	};
}



inline void _1a9481bac_optimizeExprModel(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1a9484dd0_exprDeadCode _7213_edc = static__1a94854b8_new(&(_self_));;
	_1a948b1d3_optimize(&_7213_edc, _7142_model);
}



inline void _1a9481d88_eliminateFollowed(_1a9480e75_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1a9480e75_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1ac80ce47:;
	}
	_iter_end_1ac80ce47:;;
}



inline void _1a948210d_pushGoto(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Ptr<_1a8921db7_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1ac810d7e:;
	}
	_iter_end_1ac810d7e:;;
	{ jule::Slice<jule::Ptr<_1a8921db7_GotoSt>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1a9482383_pushLabel(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Ptr<_1a8921acb_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1ac81249b;
			};
			(_10317_i)++;
		}
	_iter_next_1ac81249b:;
	}
	_iter_end_1ac81249b:;;
	{ jule::Slice<jule::Ptr<_1a8921acb_Label>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1a9482608_optimizeRangeIter(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Ptr<_1a892103c_RangeIter> _11541_it) {
	_1a9481bac_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1a9481937_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1a948287d_optimizeWhileIter(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Ptr<_1a8920657_WhileIter> _12041_it) {
	_1a9481bac_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1a948386d_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1a9481937_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1a9482b03_optimizeInfIter(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Ptr<_1a89201d4_InfIter> _12839_it) {
	_1a9481937_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1a9482d78_optimizeConditional(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Ptr<_1a891ede8_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac817d86:;
		if (it != expr_end) {
			jule::Ptr<_1a891e788_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1a9481bac_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1a9481937_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_1ac817d86:;
			++it;
			goto _iter_begin_1ac817d86;
		}
		_iter_end_1ac817d86:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1a9481409_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1a9481937_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1a94830ed_optimizeMatch(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Ptr<_1a89231a4_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac81a5c5:;
		if (it != expr_end) {
			jule::Ptr<_1a8923bee_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac81ae00:;
					if (it != expr_end) {
						jule::Ptr<_1a865dbe2_Data> _15225_expr = *it;
						{
							_1a9481bac_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_1ac81ae00:;
						++it;
						goto _iter_begin_1ac81ae00;
					}
					_iter_end_1ac81ae00:;
				};
				_1a9481937_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_1ac81a5c5:;
			++it;
			goto _iter_begin_1ac81a5c5;
		}
		_iter_end_1ac81a5c5:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1a9481409_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1a9481937_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1a9483373_optimizeAssign(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Ptr<_1a89226e2_Assign> _16838_assign) {
	_1a9481bac_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1a9481bac_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1a94835e8_optimizeMultiAssign(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Ptr<_1a8922a99_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac81dd15:;
		if (it != expr_end) {
			jule::Ptr<_1a865dbe2_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1a9481bac_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_1ac81dd15:;
			++it;
			goto _iter_begin_1ac81dd15;
		}
		_iter_end_1ac81dd15:;
	};
	_1a9481bac_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1a948386d_optimizeStmt(jule::Ptr<_1a9480e75_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ac820355:;
			{
				jule::Ptr<_1a891e38c_Scope> _18521_scope = _18236_st.cast_ptr<_1a891e38c_Scope>(&__jule_any_type22);;
				if (_18521_scope.get()._field_Deferred) {
					_1a9483d79_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1a9481409_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ac8204cb:;
			{
				_1a9482608_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1a892103c_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ac820542:;
			{
				_1a948287d_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1a8920657_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ac8205a8:;
			{
				_1a9482b03_optimizeInfIter(_self_, _18236_st.cast_ptr<_1a89201d4_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ac820630:;
			{
				_1a9482d78_optimizeConditional(_self_, _18236_st.cast_ptr<_1a891ede8_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ac8206a7:;
			{
				_1a94830ed_optimizeMatch(_self_, _18236_st.cast_ptr<_1a89231a4_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ac82072e:;
			{
				_1a9483373_optimizeAssign(_self_, _18236_st.cast_ptr<_1a89226e2_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ac8207a6:;
			{
				_1a94835e8_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1a8922a99_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ac82082d:;
			{
				jule::Ptr<_1a865dbe2_Data> _20621_d = _18236_st.cast_ptr<_1a865dbe2_Data>(&__jule_any_type24);;
				if (_self_.get()._field_except) {
					goto _match_end_1ac820465;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_1ac825c51:;
						{
							_1a9481d88_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1ac825624:;
						{
							_1a9481bac_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_1ac8255be:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ac8208a5:;
			{
				_1a9481d88_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ac82092c:;
			{
				_1a948210d_pushGoto(_self_, _18236_st.cast_ptr<_1a8921db7_GotoSt>(&__jule_any_type43));
				_1a9481d88_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ac8209a4:;
			{
				_1a9482383_pushLabel(_self_, _18236_st.cast_ptr<_1a8921acb_Label>(&__jule_any_type21));
			}
		}
		_match_end_1ac820465:;
	};
}



inline void _1a9483a49_optimizeStmts(jule::Ptr<_1a9480e75_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1a948386d_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1ac8270d7:;
	}
	_iter_end_1ac8270d7:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9480e75_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1a9484dd0_exprDeadCode static__1a94854b8_new(jule::Ptr<_1a9480e75_scopeDeadCode>* _5024_s) {
	return _1a9484dd0_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1a948573d_binary(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88be01d_BinopExprModel> _5625_m) {
	_1a948b1d3_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1a948b1d3_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1a94859b3_unary(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88be3c5_UnaryExprModel> _6124_m) {
	_1a948b1d3_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1a9485c38_structureLit(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88bec44_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac82a492:;
		if (it != expr_end) {
			jule::Ptr<_1a88be8c0_StructArgExprModel> _6621_arg = *it;
			{
				_1a948b1d3_optimize(_self_, &(_6621_arg.get()._field_Expr.get()._field_Model));
			}
			_iter_next_1ac82a492:;
			++it;
			goto _iter_begin_1ac82a492;
		}
		_iter_end_1ac82a492:;
	};
}



inline void _1a9485ead_allocStructure(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c0052_AllocStructLitExprModel> _7133_m) {
	_1a9485c38_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1a9486233_casting(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c05a2_CastingExprModel> _7526_m) {
	_1a948b1d3_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1a94864a8_args(_1a9484dd0_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac82c571:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1a948b1d3_optimize(_self_, &(_8021_arg));
			}
			_iter_next_1ac82c571:;
			++it;
			goto _iter_begin_1ac82c571;
		}
		_iter_end_1ac82c571:;
	};
}



inline void _1a948672d_funcCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c0e54_FnCallExprModel> _8527_m) {
	_1a948b1d3_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1a94864a8_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1a94816a1_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1a94869a3_slice(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c130b_SliceExprModel> _9324_m) {
	_1a94864a8_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1a9486c28_array(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c4034_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1a948b1d3_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1a94864a8_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1a9486e9d_indexing(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c177e_IndexingExprModel> _10427_m) {
	_1a948b1d3_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1a948b1d3_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1a9487223_anonFunc(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c1b36_AnonFnExprModel> _10927_m) {
	_1a9483d79_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1a9487498_mapExpr(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c2461_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8328c8:;
		if (it != expr_end) {
			jule::Ptr<_1a88c1edd_KeyValPairExprModel> _11421_pair = *it;
			{
				_1a948b1d3_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1a948b1d3_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_1ac8328c8:;
			++it;
			goto _iter_begin_1ac8328c8;
		}
		_iter_end_1ac8328c8:;
	};
}



inline void _1a948771d_slicing(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c29a0_SlicingExprModel> _12026_m) {
	_1a948b1d3_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1a948b1d3_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1a948b1d3_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1a9487993_traitSub(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c2ede_TraitSubIdentExprModel> _12827_m) {
	_1a948b1d3_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1a9487c18_structureSub(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c37c5_StructSubIdentExprModel> _13231_m) {
	_1a948b1d3_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1a9487e8d_commonSub(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c4881_CommonSubIdentExprModel> _13628_m) {
	_1a948b1d3_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1a9488213_tuple(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c4b7d_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac836756:;
		if (it != expr_end) {
			jule::Ptr<_1a865dbe2_Data> _14121_d = *it;
			{
				_1a948b1d3_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_1ac836756:;
			++it;
			goto _iter_begin_1ac836756;
		}
		_iter_end_1ac836756:;
	};
}



inline void _1a9488488_newCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c5b4b_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1a948b1d3_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1a948870d_outCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c5057_BuiltinOutCallExprModel> _15226_m) {
	_1a948b1d3_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1a9488983_outlnCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c5442_BuiltinOutlnCallExprModel> _15628_m) {
	_1a948b1d3_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1a9488c08_panicCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c6036_BuiltinPanicCallExprModel> _16028_m) {
	_1a948b1d3_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1a9488e7d_assertCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c64dc_BuiltinAssertCallExprModel> _16429_m) {
	_1a948b1d3_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1a9489203_errorCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c83bd_BuiltinErrorCallExprModel> _16828_m) {
	_1a948b1d3_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1a9489478_makeCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c6993_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1a948b1d3_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1a948b1d3_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1a94896ed_appendCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c6d7d_BuiltinAppendCallExprModel> _18129_m) {
	_1a948b1d3_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1a948b1d3_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1a9489973_lenCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c719c_BuiltinLenCallExprModel> _18626_m) {
	_1a948b1d3_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1a9489be8_capCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c74bb_BuiltinCapCallExprModel> _19026_m) {
	_1a948b1d3_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1a9489e6d_cloneCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c5761_BuiltinCloneCallExprModel> _19428_m) {
	_1a948b1d3_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1a948a1e3_deleteCall(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c7b70_BuiltinDeleteCallExprModel> _19829_m) {
	_1a948b1d3_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1a948b1d3_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1a948a468_sizeof(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c86ba_SizeofExprModel> _20525_m) {
	_1a948b1d3_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1a948a6dd_alignof(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c89a6_AlignofExprModel> _20926_m) {
	_1a948b1d3_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1a948a963_integratedToStr(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c90a0_IntegratedToStrExprModel> _21334_m) {
	_1a948b1d3_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1a948abd8_free(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c9754_FreeExprModel> _21723_m) {
	_1a948b1d3_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1a948ae5d_backendEmit(_1a9484dd0_exprDeadCode* _self_, jule::Ptr<_1a88c9468_BackendEmitExprModel> _22130_m) {
	_1a94864a8_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1a948b1d3_optimize(_1a9484dd0_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac843136:;
			{
				_1a948573d_binary(_self_, (*(_22528_model)).cast_ptr<_1a88be01d_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ac8431ad:;
			{
				_1a94859b3_unary(_self_, (*(_22528_model)).cast_ptr<_1a88be3c5_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ac843235:;
			{
				_1a9485c38_structureLit(_self_, (*(_22528_model)).cast_ptr<_1a88bec44_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ac84360e:;
			{
				_1a9485ead_allocStructure(_self_, (*(_22528_model)).cast_ptr<_1a88c0052_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac843675:;
			{
				_1a9486233_casting(_self_, (*(_22528_model)).cast_ptr<_1a88c05a2_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ac8436ec:;
			{
				_1a948672d_funcCall(_self_, (*(_22528_model)).cast_ptr<_1a88c0e54_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1ac843774:;
			{
				_1a94869a3_slice(_self_, (*(_22528_model)).cast_ptr<_1a88c130b_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ac8437eb:;
			{
				_1a9486c28_array(_self_, (*(_22528_model)).cast_ptr<_1a88c4034_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ac843873:;
			{
				_1a9486e9d_indexing(_self_, (*(_22528_model)).cast_ptr<_1a88c177e_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ac8438ea:;
			{
				_1a9487223_anonFunc(_self_, (*(_22528_model)).cast_ptr<_1a88c1b36_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ac843972:;
			{
				_1a9487498_mapExpr(_self_, (*(_22528_model)).cast_ptr<_1a88c2461_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ac8439e9:;
			{
				_1a948771d_slicing(_self_, (*(_22528_model)).cast_ptr<_1a88c29a0_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ac843a71:;
			{
				_1a9487993_traitSub(_self_, (*(_22528_model)).cast_ptr<_1a88c2ede_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ac843ae8:;
			{
				_1a9487c18_structureSub(_self_, (*(_22528_model)).cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ac843b70:;
			{
				_1a9487e8d_commonSub(_self_, (*(_22528_model)).cast_ptr<_1a88c4881_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ac843be7:;
			{
				_1a9488213_tuple(_self_, (*(_22528_model)).cast_ptr<_1a88c4b7d_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ac843c6e:;
			{
				_1a948870d_outCall(_self_, (*(_22528_model)).cast_ptr<_1a88c5057_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ac843ce6:;
			{
				_1a9488983_outlnCall(_self_, (*(_22528_model)).cast_ptr<_1a88c5442_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ac843d6d:;
			{
				_1a9488488_newCall(_self_, (*(_22528_model)).cast_ptr<_1a88c5b4b_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ac843de5:;
			{
				_1a9488c08_panicCall(_self_, (*(_22528_model)).cast_ptr<_1a88c6036_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ac843e6c:;
			{
				_1a9488e7d_assertCall(_self_, (*(_22528_model)).cast_ptr<_1a88c64dc_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac843ee4:;
			{
				_1a9489203_errorCall(_self_, (*(_22528_model)).cast_ptr<_1a88c83bd_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ac84406b:;
			{
				_1a9489478_makeCall(_self_, (*(_22528_model)).cast_ptr<_1a88c6993_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ac8440e3:;
			{
				_1a94896ed_appendCall(_self_, (*(_22528_model)).cast_ptr<_1a88c6d7d_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ac84416a:;
			{
				_1a9489973_lenCall(_self_, (*(_22528_model)).cast_ptr<_1a88c719c_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ac8441e2:;
			{
				_1a9489be8_capCall(_self_, (*(_22528_model)).cast_ptr<_1a88c74bb_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ac844269:;
			{
				_1a9489e6d_cloneCall(_self_, (*(_22528_model)).cast_ptr<_1a88c5761_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac8442e1:;
			{
				_1a948a1e3_deleteCall(_self_, (*(_22528_model)).cast_ptr<_1a88c7b70_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ac844368:;
			{
				_1a948a468_sizeof(_self_, (*(_22528_model)).cast_ptr<_1a88c86ba_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ac8443e0:;
			{
				_1a948a6dd_alignof(_self_, (*(_22528_model)).cast_ptr<_1a88c89a6_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1ac844467:;
			{
				_1a948a963_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_1a88c90a0_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ac8444de:;
			{
				_1a948abd8_free(_self_, (*(_22528_model)).cast_ptr<_1a88c9754_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ac844566:;
			{
				_1a948ae5d_backendEmit(_self_, (*(_22528_model)).cast_ptr<_1a88c9468_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1ac843334:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a9484dd0_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a87839c6_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8783d8e_StrAppendExprModel _Src) {
	_Stream << "StrAppendExprModel{";
	_Stream << "Str:" << _Src._field_Str << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a878417a_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8784510_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8784895_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8784c4c_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a878528b_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8785775_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8785a1c_InlineStdInternalNosafeStobs _Src) {
	_Stream << "InlineStdInternalNosafeStobs{";
	_Stream << "Str:" << _Src._field_Str;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8786b3e_scopeOptimizer> static__1a8787117_new(jule::Ptr<_1a891e38c_Scope> _4623_scope) {
	return jule::new_ptr<_1a8786b3e_scopeOptimizer>(_1a8786b3e_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1a878738c_setCurrentStmt(_1a8786b3e_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1a8787612_optimizeData(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a865dbe2_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ac8893e1:;
			{
				jule::Ptr<_1a88c0e54_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_1a88c0e54_FnCallExprModel>(&__jule_any_type35);;
				if (_1ce99b3e3_Production) {
					if (((!(_1a88d1294_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _1a878a7be_isStdPackage(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_1a878738c_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1ac8891d2:;
	};
	static__1a8a58e11_optimize(&(_5635_d.get()._field_Model));
}



inline void _1a8787887_optimizeVar(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a8966901_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__1a8a58e11_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1a8787b0c_optimizeConditional(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a891ede8_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac88c0d6:;
		if (it != expr_end) {
			jule::Ptr<_1a891e788_If> _7821_elif = *it;
			{
				static__1a8a58e11_optimize(&(_7821_elif.get()._field_Expr));
				_1a878a1a3_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_1ac88c0d6:;
			++it;
			goto _iter_begin_1ac88c0d6;
		}
		_iter_end_1ac88c0d6:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_1a878a1a3_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1a93dcba1_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac88dc53:;
		if (it != expr_end) {
			jule::I64 _9314_i = it - expr->begin();
			jule::Ptr<_1a891e788_If> _9321_elif = *it;
			{
				if ((!(_1a878aacc_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_1ac88dc53;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_1a891ea74_Else>(_1a891ea74_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_1ac88dc53;
			}
			_iter_next_1ac88dc53:;
			++it;
			_9314_i++;
			goto _iter_begin_1ac88dc53;
		}
		_iter_end_1ac88dc53:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a891e788_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1a891e788_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_1a8a5787c_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_1ac891abe:;
	}
	_iter_end_1ac891abe:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I64 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac893098:;
		if (it != expr_end) {
			jule::I64 _13013_j = it - expr->begin();
			jule::Ptr<_1a891e788_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_1ac893098:;
			++it;
			_13013_j++;
			goto _iter_begin_1ac893098;
		}
		_iter_end_1ac893098:;
	};
	if ((_12917_only != -1LL)) {
		_1a878738c_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1a8787ee7_buildDefaultConstantTrueCase(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a8923bee_Case> _14651_case, jule::I64* _14669_i, jule::Ptr<_1a89231a4_Match>* _14682_m) {
	_14651_case.get()._field_Exprs=nullptr;
	jule::I64 _14813_start = (*(_14669_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14651_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1ac8958a3;
			};
			jule::Any *_15422_stmt = &(_14651_case.get()._field_Scope.get()._field_Stmts[(_14651_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_1ac896046:;
					{
						((*(_14669_i)))++;
						if (((*(_14669_i)) >= (*(_14682_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14682_m)).get()._field_Default.get()._field_Scope, &__jule_any_type22);
							goto _iter_end_1ac8958a3;
						};
						_14651_case=(*(_14682_m)).get()._field_Cases[(*(_14669_i))];
						(*(_15422_stmt))=jule::Any(_14651_case.get()._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1ac8972bc:;
					{
						goto _iter_end_1ac8958a3;
					}
				}
				_match_end_1ac8971ce:;
			};
		}
	_iter_next_1ac8958a3:;
	}
	_iter_end_1ac8958a3:;;
	(*(_14682_m)).get()._field_Default=(*(_14682_m)).get()._field_Cases[_14813_start];
	(*(_14682_m)).get()._field_Cases=(*(_14682_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _1a8788206_optimizeMatch(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a89231a4_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac899258:;
		if (it != expr_end) {
			jule::Ptr<_1a8923bee_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac899a94:;
					if (it != expr_end) {
						jule::Ptr<_1a865dbe2_Data> _17425_expr = *it;
						{
							static__1a8a58e11_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_1ac899a94:;
						++it;
						goto _iter_begin_1ac899a94;
					}
					_iter_end_1ac899a94:;
				};
				_1a878a1a3_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_1ac899258:;
			++it;
			goto _iter_begin_1ac899258;
		}
		_iter_end_1ac899258:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_1a878a1a3_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1a93dcba1_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac89b414:;
		if (it != expr_end) {
			jule::I64 _19018_i = it - expr->begin();
			jule::Ptr<_1a8923bee_Case> _19025_case = *it;
			{
				if ((!(_1a8a5763a_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_1ac89b414;
				};
				_18717_constCase=true;
				_1a8787ee7_buildDefaultConstantTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_1ac89b414;
			}
			_iter_next_1ac89b414:;
			++it;
			_19018_i++;
			goto _iter_begin_1ac89b414;
		}
		_iter_end_1ac89b414:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a8923bee_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1a8923bee_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_1a8a57b35_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_1ac89dba8:;
	}
	_iter_end_1ac89dba8:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I64 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac89eb87:;
		if (it != expr_end) {
			jule::I64 _22013_j = it - expr->begin();
			jule::Ptr<_1a8923bee_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_1ac89eb87:;
			++it;
			_22013_j++;
			goto _iter_begin_1ac89eb87;
		}
		_iter_end_1ac89eb87:;
	};
	if ((_21917_only != -1LL)) {
		_1a878738c_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1a878847b_optimizeRangeIter(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a892103c_RangeIter> _23640_it) {
	static__1a8a58e11_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_1a878a1a3_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _1a8788701_optimizeWhileIter(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a8920657_WhileIter> _24140_it) {
	static__1a8a58e11_optimize(&(_24140_it.get()._field_Expr));
	_1a8789e2d_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_1a878a1a3_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _1a8788a0e_substr(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a89226e2_Assign> _24729_a) {
	if ((_24729_a.get()._field_Op.get()._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ac8a3dab:;
			{
				jule::Ptr<_1a88c29a0_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_1a88c29a0_SlicingExprModel>(&__jule_any_type97);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_1a878738c_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a878528b_MutSlicingExprModel>(_1a878528b_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1ac8a3d56:;
	};
	return false;;
}



inline jule::Bool _1a8788d1c_strInsert(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a89226e2_Assign> _26732_a) {
	if ((_26732_a.get()._field_Op.get()._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ _26732_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac8a696e:;
			{
				jule::Ptr<_1a88be01d_BinopExprModel> _27321_m = _26732_a.get()._field_R.get()._field_Model.cast_ptr<_1a88be01d_BinopExprModel>(&__jule_any_type114);;
				if ((_27321_m.get()._field_Right.get()._field_Model == _26732_a.get()._field_L.get()._field_Model)) {
					_1a878738c_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a8785775_StrInsertBeginExprModel>(_1a8785775_StrInsertBeginExprModel{._field_Dest=_26732_a.get()._field_L.get()._field_Model, ._field_Expr=_27321_m.get()._field_Left.get()._field_Model}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1ac8a6919:;
	};
	return false;;
}



inline jule::Bool _1a878912a_strAppend(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a89226e2_Assign> _28532_a) {
	if ((_28532_a.get()._field_Op.get()._field_Id != static_cast<jule::U64>(40LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ _28532_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac8a9455:;
			{
				_1a878738c_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a8783d8e_StrAppendExprModel>(_1a8783d8e_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_28532_a.get()._field_R.get()._field_Model}), &__jule_any_type125));
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac8a94cc:;
			{
				jule::Ptr<_1a88c05a2_CastingExprModel> _30021_c = _28532_a.get()._field_R.get()._field_Model.cast_ptr<_1a88c05a2_CastingExprModel>(&__jule_any_type98);;
				jule::Ptr<_1a86b7003_Prim> _30121_prim = _1a86b1eba_Prim(_30021_c.get()._field_ExprKind.ptr());;
				if (((_30121_prim == nullptr) && (_1a86b2e44_Slc(_30021_c.get()._field_ExprKind.ptr()) != nullptr))) {
					_30121_prim=_1a86b1eba_Prim(_1a86b2e44_Slc(_30021_c.get()._field_ExprKind.ptr()).get()._field_Elem.ptr());
				};
				if (((_30121_prim == nullptr) || ((!(_1a86b87c9_IsU8(_30121_prim.ptr()))) && (!(_1a86b8301_IsI32(_30121_prim.ptr())))))) {
					goto _match_end_1ac8a9400;
				};
				_1a878738c_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a8783d8e_StrAppendExprModel>(_1a8783d8e_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_30021_c.get()._field_Expr}), &__jule_any_type125));
				return true;;
			}
		}
		_match_end_1ac8a9400:;
	};
	return false;;
}



inline jule::Bool _1a8789438_strAssign(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a89226e2_Assign> _31732_a) {
	if ((!(_1a93dce6a_Str))) {
		return false;;
	};
	jule::Ptr<_1a86b7003_Prim> _32113_lp = _1a86b1eba_Prim(_31732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_32113_lp == nullptr) || (!(_1a86ba204_IsStr(_32113_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_1a8788a0e_substr(_self_, _31732_a) || _1a8788d1c_strInsert(_self_, _31732_a) || _1a878912a_strAppend(_self_, _31732_a)) {
			_case_begin_1ac8aed84:;
			{
				return true;;
			}
		}
		_match_end_1ac8aed2e:;
	};
	return false;;
}



inline void _1a87896ad_optimizeAssign(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a89226e2_Assign> _33437_assign) {
	if (_1a8789438_strAssign(_self_, _33437_assign)) {
		return;;
	};
	static__1a8a58e11_optimize(&(_33437_assign.get()._field_L.get()._field_Model));
	static__1a8a58e11_optimize(&(_33437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _33437_assign.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ac8b1c65:;
			{
				if ((_1a93dbe7a_Math && (_1a86b341c_Struct(_33437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_33437_assign.get()._field_Op.get()._field_Kind=_33437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_33437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _34725_model = jule::Any(jule::new_ptr<_1a88be01d_BinopExprModel>(_1a88be01d_BinopExprModel{._field_Left=_33437_assign.get()._field_L, ._field_Right=_33437_assign.get()._field_R, ._field_Op=_33437_assign.get()._field_Op}), &__jule_any_type114);;
					static__1a8a58e11_optimize(&(_34725_model));
					{
						auto &_match_expr{ _34725_model };
						
						if (_match_expr.type == &__jule_any_type114) {
							_case_begin_1ac8b440a:;
							{
								_33437_assign.get()._field_R=jule::new_ptr<_1a88bda56_OperandExprModel>((*(_33437_assign.get()._field_R)));
								_33437_assign.get()._field_Op.get()._field_Id=static_cast<jule::U64>(71LLU);
								_33437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_33437_assign.get()._field_R.get()._field_Model=_34725_model;
								return;;
							}
						}
						_match_end_1ac8b42a6:;
					};
					(_33437_assign.get()._field_Op.get()._field_Kind).append("=", 1);
					return;;
				};
			}
		}
		_match_end_1ac8b1b66:;
	};
	if (_1a93dbb6c_Append) {
		{
			auto &_match_expr{ _33437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1ac8b5ecd:;
				{
					jule::Ptr<_1a88c6d7d_BuiltinAppendCallExprModel> _36925_m = _33437_assign.get()._field_R.get()._field_Model.cast_ptr<_1a88c6d7d_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1a8a60c1a_areSameLvalueExprModel(&(_33437_assign.get()._field_L.get()._field_Model), &(_36925_m.get()._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ _36925_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type82) {
							_case_begin_1ac8b7254:;
							{
								_1a878738c_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a8784895_PushToSliceExprModel>(_1a8784895_PushToSliceExprModel{._field_Dest=_36925_m.get()._field_Dest, ._field_Elems=_36925_m.get()._field_Elements.cast_ptr<_1a88c130b_SliceExprModel>(&__jule_any_type82)}), &__jule_any_type126));
							}
						}
						else {
							_case_begin_1ac8b7573:;
							{
								_1a878738c_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a8784c4c_AppendToSliceExprModel>(_1a8784c4c_AppendToSliceExprModel{._field_Dest=_33437_assign.get()._field_L.get()._field_Model, ._field_Slice=_36925_m.get()._field_Elements}), &__jule_any_type127));
							}
						}
						_match_end_1ac8b751d:;
					};
				}
			}
			_match_end_1ac8b3717:;
		};
	};
}



inline void _1a8789933_optimizeMultiAssign(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a8922a99_MultiAssign> _39142_assign) {
	{
		auto expr = &(_39142_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8b8750:;
		if (it != expr_end) {
			jule::Ptr<_1a865dbe2_Data> _39221_l = *it;
			{
				if ((_39221_l != nullptr)) {
					static__1a8a58e11_optimize(&(_39221_l.get()._field_Model));
				};
			}
			_iter_next_1ac8b8750:;
			++it;
			goto _iter_begin_1ac8b8750;
		}
		_iter_end_1ac8b8750:;
	};
	static__1a8a58e11_optimize(&(_39142_assign.get()._field_R));
}



inline void _1a8789ba8_optimizeRet(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a8924628_RetSt> _40034_r) {
	static__1a8a58e11_optimize(&(_40034_r.get()._field_Expr));
}



inline void _1a8789e2d_optimizeStmt(_1a8786b3e_scopeOptimizer* _self_, jule::Any _40435_stmt) {
	{
		auto &_match_expr{ _40435_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ac8ba5cb:;
			{
				_1a878a1a3_optimizeChild(_self_, _40435_stmt.cast_ptr<_1a891e38c_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ac8ba642:;
			{
				_1a8787612_optimizeData(_self_, _40435_stmt.cast_ptr<_1a865dbe2_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac8ba6a8:;
			{
				_1a8787887_optimizeVar(_self_, _40435_stmt.cast_ptr<_1a8966901_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ac8ba71e:;
			{
				_1a8787b0c_optimizeConditional(_self_, _40435_stmt.cast_ptr<_1a891ede8_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ac8ba785:;
			{
				_1a878847b_optimizeRangeIter(_self_, _40435_stmt.cast_ptr<_1a892103c_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ac8ba7eb:;
			{
				_1a8788701_optimizeWhileIter(_self_, _40435_stmt.cast_ptr<_1a8920657_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ac8ba862:;
			{
				_1a878a1a3_optimizeChild(_self_, _40435_stmt.cast_ptr<_1a89201d4_InfIter>(&__jule_any_type37).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ac8ba8c8:;
			{
				_1a87896ad_optimizeAssign(_self_, _40435_stmt.cast_ptr<_1a89226e2_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ac8ba93e:;
			{
				_1a8789933_optimizeMultiAssign(_self_, _40435_stmt.cast_ptr<_1a8922a99_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ac8ba9b6:;
			{
				_1a8788206_optimizeMatch(_self_, _40435_stmt.cast_ptr<_1a89231a4_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ac8baa3d:;
			{
				_1a8789ba8_optimizeRet(_self_, _40435_stmt.cast_ptr<_1a8924628_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_1ac8ba477:;
	};
}



inline void _1a878a1a3_optimizeChild(_1a8786b3e_scopeOptimizer* _self_, jule::Ptr<_1a891e38c_Scope> _43136_child) {
	jule::Ptr<_1a8786b3e_scopeOptimizer> _43217_so = static__1a8787117_new(_43136_child);;
	_1a878a37e_optimize(_43217_so.ptr());
}



inline void _1a878a37e_optimize(_1a8786b3e_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8c12e6:;
		if (it != expr_end) {
			jule::I64 _43814_i = it - expr->begin();
			jule::Any _43821_stmt = *it;
			{
				(*(_self_))._field_i=_43814_i;
				_1a8789e2d_optimizeStmt(_self_, _43821_stmt);
			}
			_iter_next_1ac8c12e6:;
			++it;
			_43814_i++;
			goto _iter_begin_1ac8c12e6;
		}
		_iter_end_1ac8c12e6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a8786b3e_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1a8a58e11_optimize(jule::Any* _5829_model) {
	if (_1a948b733_exprEnabled) {
		jule::Ptr<_1a8a58905_exprOptimizer> _6121_exop = jule::new_ptr<_1a8a58905_exprOptimizer>(_1a8a58905_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_1a8a60445_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1a8a5920d_strCond(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88be01d_BinopExprModel> _6826_m) {
	jule::Ptr<_1a86b7003_Prim> _6913_lp = _1a86b1eba_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1a86ba204_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((_6826_m.get()._field_Op.get()._field_Id != static_cast<jule::U64>(50LLU)) && (_6826_m.get()._field_Op.get()._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac8ce0c3:;
			{
				({
					jule::Ptr<_1a88bda56_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1a88bda56_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1ac8ce06d:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac8cd358:;
			{
				goto _match_end_1ac8ced60;
			}
		}
		else {
			_case_begin_1ac8d01a1:;
			{
				return true;;
			}
		}
		_match_end_1ac8ced60:;
	};
	_julec_label_opt:;
	jule::Ptr<_1a55406ba_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1a55406ba_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ac8d126d:;
			{
				if (_1a5542700_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1a88c4881_CommonSubIdentExprModel>(_1a88c4881_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_1ac8d1218;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_1a87839c6_StrCompExprModel>(_1a87839c6_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac8d12d4:;
			{
				if (_1a5542700_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_1a52684c0_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Id=static_cast<jule::U64>(68LLU);
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1a88be3c5_UnaryExprModel>(_1a88be3c5_UnaryExprModel{._field_Expr=jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Model=jule::Any(jule::new_ptr<_1a88c4881_CommonSubIdentExprModel>(_1a88c4881_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_1ac8d1218;
				};
				jule::Any _12221_model = jule::Any(jule::new_ptr<_1a87839c6_StrCompExprModel>(_1a87839c6_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12221_model))))));
			}
		}
		_match_end_1ac8d1218:;
	};
	return true;;
}



inline void _1a8a59483_binary(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88be01d_BinopExprModel> _13225_m) {
	static__1a8a58e11_optimize(&(_13225_m.get()._field_Left.get()._field_Model));
	static__1a8a58e11_optimize(&(_13225_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13225_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac8d8682:;
			{
				goto _match_end_1ac8d81a9;
			}
		}
		else {
			_case_begin_1ac8d8253:;
			{
				return;;
			}
		}
		_match_end_1ac8d81a9:;
	};
	if ((_1a93dcba1_Cond && _1a8a5920d_strCond(_self_, _13225_m))) {
		return;;
	};
	if ((!(_1a93dbe7a_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13225_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac8d9265:;
			{
				jule::Bool _15218_ok = false;;
				jule::U64 _15222_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a8a60885_checkForBitShiftOpt(&(_13225_m.get()._field_Left), &(_13225_m.get()._field_Right));
					_15218_ok = __jule_assign_result.__jule_result_arg0;
					_15222_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15218_ok) {
					_13225_m.get()._field_Op.get()._field_Id=static_cast<jule::U64>(56LLU);
					_13225_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1a55406ba_Const> _15625_c = _13225_m.get()._field_Right.get()._field_Model.cast_ptr<_1a55406ba_Const>(&__jule_any_type19);;
					_1a554369b_SetU64(_15625_c.ptr(), _15222_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ac8d92cb:;
			{
				jule::Bool _16118_ok = false;;
				jule::U64 _16122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a8a60885_checkForBitShiftOpt(&(_13225_m.get()._field_Left), &(_13225_m.get()._field_Right));
					_16118_ok = __jule_assign_result.__jule_result_arg0;
					_16122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_16118_ok) {
					_13225_m.get()._field_Op.get()._field_Id=static_cast<jule::U64>(57LLU);
					_13225_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1a55406ba_Const> _16525_c = _13225_m.get()._field_Right.get()._field_Model.cast_ptr<_1a55406ba_Const>(&__jule_any_type19);;
					_1a554369b_SetU64(_16525_c.ptr(), _16122_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ac8d9353:;
			{
				jule::Ptr<_1a55406ba_Const> _17021_c = _13225_m.get()._field_Right.get()._field_Model.cast_ptr<_1a55406ba_Const>(&__jule_any_type19);;
				jule::F64 _17117_d = _1a55431a1_AsF64(_17021_c.ptr());;
				if ((_17117_d == 2LL)) {
					_13225_m.get()._field_Op.get()._field_Id=static_cast<jule::U64>(65LLU);
					_13225_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1a5543426_SetI64(_17021_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1ac8d9210:;
	};
	jule::Any _17817_model = jule::Any(jule::new_ptr<_1a878417a_UnsafeBinopExprModel>(_1a878417a_UnsafeBinopExprModel{._field_Node=_13225_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17817_model))))));
}



inline void _1a8a59708_unary(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88be3c5_UnaryExprModel> _18224_m) {
	static__1a8a58e11_optimize(&(_18224_m.get()._field_Expr.get()._field_Model));
	if ((_1a93dc7c7_Ptr && (_18224_m.get()._field_Op.get()._field_Id == static_cast<jule::U64>(62LLU)))) {
		{
			auto &_match_expr{ _18224_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_1ac8e1b85:;
				{
					jule::Ptr<_1a88be3c5_UnaryExprModel> _18725_um = _18224_m.get()._field_Expr.get()._field_Model.cast_ptr<_1a88be3c5_UnaryExprModel>(&__jule_any_type74);;
					if ((_18725_um.get()._field_Op.get()._field_Id == static_cast<jule::U64>(65LLU))) {
						(*((*(_self_))._field_model))=_18725_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1ac8e1b30:;
		};
	};
}



inline void _1a8a5997d_structureLit(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88bec44_StructLitExprModel> _19531_m) {
	{
		auto expr = &(_19531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8e36d1:;
		if (it != expr_end) {
			jule::Ptr<_1a88be8c0_StructArgExprModel> _19621_arg = *it;
			{
				static__1a8a58e11_optimize(&(_19621_arg.get()._field_Expr.get()._field_Model));
			}
			_iter_next_1ac8e36d1:;
			++it;
			goto _iter_begin_1ac8e36d1;
		}
		_iter_end_1ac8e36d1:;
	};
}



inline void _1a8a59c03_allocStructure(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c0052_AllocStructLitExprModel> _20133_m) {
	_1a8a5997d_structureLit(_self_, _20133_m.get()._field_Lit);
}



inline void _1a8a59e78_casting(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c05a2_CastingExprModel> _20526_m) {
	static__1a8a58e11_optimize(&(_20526_m.get()._field_Expr));
}



inline void _1a8a5a1ed_args(_1a8a58905_exprOptimizer* _self_, jule::Slice<jule::Any>* _20924_args) {
	{
		auto expr = _20924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8e5084:;
		if (it != expr_end) {
			jule::I64 _21014_i = it - expr->begin();
			jule::Any _21021_arg = *it;
			{
				static__1a8a58e11_optimize(&(_21021_arg));
				(*(_20924_args))[_21014_i]=_21021_arg;
			}
			_iter_next_1ac8e5084:;
			++it;
			_21014_i++;
			goto _iter_begin_1ac8e5084;
		}
		_iter_end_1ac8e5084:;
	};
}



inline void _1a8a5a473_scope(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a891e38c_Scope>* _21625_s) {
	jule::Ptr<_1a8786b3e_scopeOptimizer> _21717_scopt = static__1a8787117_new((*(_21625_s)));;
	_1a878a37e_optimize(_21717_scopt.ptr());
}



inline jule::Bool _1a8a5a7a3_optimizeSpecialFuncCalls(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c0e54_FnCallExprModel>* _22144_m) {
	_1a93d98b2_stdCacheData _22214_data;;
	jule::Bool _22220_ok = false;;
	_1a93d9ce1_stdCache.lookup(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_22144_m)).get()._field_Func)), &(_22214_data), &(_22220_ok));
	if ((!(_22220_ok))) {
		return false;;
	};
	_22214_data._field_do(_self_, &(_22214_data), _22144_m);
	return true;;
}



inline void _1a8a5aa39_funcCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c0e54_FnCallExprModel> _23027_m) {
	if ((_1a948bcc7_stdEnabled && _1a8a5a7a3_optimizeSpecialFuncCalls(_self_, &(_23027_m)))) {
		return;;
	};
	static__1a8a58e11_optimize(&(_23027_m.get()._field_Expr));
	_1a8a5a1ed_args(_self_, &(_23027_m.get()._field_Args));
	if ((_23027_m.get()._field_Except != nullptr)) {
		_1a8a5a473_scope(_self_, &(_23027_m.get()._field_Except));
	};
}



inline void _1a8a5acae_slice(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c130b_SliceExprModel> _24124_m) {
	_1a8a5a1ed_args(_self_, &(_24124_m.get()._field_Elems));
}



inline void _1a8a5b034_array(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c4034_ArrayExprModel> _24524_m) {
	if (((_24524_m.get()._field_Elems.len() == 2LL) && (_24524_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _24721_elem = _24524_m.get()._field_Elems[0LL];;
		static__1a8a58e11_optimize(&(_24721_elem));
		_24524_m.get()._field_Elems[0LL]=_24721_elem;
	};
	_1a8a5a1ed_args(_self_, &(_24524_m.get()._field_Elems));
}



inline void _1a8a5b2a9_indexing(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c177e_IndexingExprModel> _25427_m) {
	static__1a8a58e11_optimize(&(_25427_m.get()._field_Expr.get()._field_Model));
	static__1a8a58e11_optimize(&(_25427_m.get()._field_Index.get()._field_Model));
	if ((!(_1a93dc244_Access))) {
		return;;
	};
	jule::Bool _26013_array = (_1a86b2bd0_Arr(_25427_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_26013_array && _1a865e50b_IsConst(_25427_m.get()._field_Index.ptr()))) {
		jule::Any _26321_model = jule::Any(jule::new_ptr<_1a8784510_UnsafeIndexingExprModel>(_1a8784510_UnsafeIndexingExprModel{._field_Node=_25427_m}), &__jule_any_type130);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26321_model))))));
		return;;
	};
	{
		auto &_match_expr{ _25427_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac8ee467:;
			{
				jule::Ptr<_1a8966901_Var> _26917_i = _25427_m.get()._field_Index.get()._field_Model.cast_ptr<_1a8966901_Var>(&__jule_any_type8);;
				if ((_26917_i.get()._field_Mutable || (_26917_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1ac8ee313;
				};
				{
					auto &_match_expr{ _25427_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ac900b2d:;
						{
							jule::Ptr<_1a8966901_Var> _27521_r = _25427_m.get()._field_Expr.get()._field_Model.cast_ptr<_1a8966901_Var>(&__jule_any_type8);;
							if ((_26917_i.get()._field_IterRelation.get()._field_Range == _27521_r)) {
								jule::Any _27829_model = jule::Any(jule::new_ptr<_1a8784510_UnsafeIndexingExprModel>(_1a8784510_UnsafeIndexingExprModel{._field_Node=_25427_m}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_27829_model))))));
							};
						}
					}
					_match_end_1ac90080e:;
				};
			}
		}
		_match_end_1ac8ee313:;
	};
}



inline void _1a8a5b52e_anonFunc(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c1b36_AnonFnExprModel> _28527_m) {
	_1a8a5a473_scope(_self_, &(_28527_m.get()._field_Func.get()._field_Scope));
}



inline void _1a8a5b7a4_mapExpr(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c2461_MapExprModel> _28926_m) {
	{
		auto expr = &(_28926_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac903180:;
		if (it != expr_end) {
			jule::Ptr<_1a88c1edd_KeyValPairExprModel> _29021_pair = *it;
			{
				static__1a8a58e11_optimize(&(_29021_pair.get()._field_Key));
				static__1a8a58e11_optimize(&(_29021_pair.get()._field_Val));
			}
			_iter_next_1ac903180:;
			++it;
			goto _iter_begin_1ac903180;
		}
		_iter_end_1ac903180:;
	};
}



inline void _1a8a5ba29_slicing(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c29a0_SlicingExprModel> _29626_m) {
	static__1a8a58e11_optimize(&(_29626_m.get()._field_Expr));
	static__1a8a58e11_optimize(&(_29626_m.get()._field_Left));
	if ((_29626_m.get()._field_Right != nullptr)) {
		static__1a8a58e11_optimize(&(_29626_m.get()._field_Right));
	};
}



inline void _1a8a5bc9e_traitSub(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c2ede_TraitSubIdentExprModel> _30427_m) {
	static__1a8a58e11_optimize(&(_30427_m.get()._field_Expr));
}



inline void _1a8a5c024_structureSub(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c37c5_StructSubIdentExprModel> _30831_m) {
	static__1a8a58e11_optimize(&(_30831_m.get()._field_Expr.get()._field_Model));
}



inline void _1a8a5c299_commonSub(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c4881_CommonSubIdentExprModel> _31228_m) {
	static__1a8a58e11_optimize(&(_31228_m.get()._field_Expr));
}



inline void _1a8a5c51e_tuple(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c4b7d_TupleExprModel> _31624_m) {
	{
		auto expr = &(_31624_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac905e63:;
		if (it != expr_end) {
			jule::Ptr<_1a865dbe2_Data> _31721_d = *it;
			{
				static__1a8a58e11_optimize(&(_31721_d.get()._field_Model));
			}
			_iter_next_1ac905e63:;
			++it;
			goto _iter_begin_1ac905e63;
		}
		_iter_end_1ac905e63:;
	};
}



inline void _1a8a5c794_newCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c5b4b_BuiltinNewCallExprModel> _32226_m) {
	if ((_32226_m.get()._field_Init != nullptr)) {
		static__1a8a58e11_optimize(&(_32226_m.get()._field_Init));
	};
}



inline void _1a8a5ca19_outCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c5057_BuiltinOutCallExprModel> _32826_m) {
	static__1a8a58e11_optimize(&(_32826_m.get()._field_Expr));
}



inline void _1a8a5cc8e_outlnCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c5442_BuiltinOutlnCallExprModel> _33228_m) {
	static__1a8a58e11_optimize(&(_33228_m.get()._field_Expr));
}



inline void _1a8a5d014_panicCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c6036_BuiltinPanicCallExprModel> _33628_m) {
	static__1a8a58e11_optimize(&(_33628_m.get()._field_Expr));
}



inline void _1a8a5d289_assertCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c64dc_BuiltinAssertCallExprModel> _34029_m) {
	static__1a8a58e11_optimize(&(_34029_m.get()._field_Expr));
}



inline void _1a8a5d50e_errorCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c83bd_BuiltinErrorCallExprModel> _34428_m) {
	static__1a8a58e11_optimize(&(_34428_m.get()._field_Err.get()._field_Model));
}



inline void _1a8a5d784_makeCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c6993_BuiltinMakeCallExprModel> _34827_m) {
	if ((_34827_m.get()._field_Len != nullptr)) {
		static__1a8a58e11_optimize(&(_34827_m.get()._field_Len));
	};
	if ((_34827_m.get()._field_Cap != nullptr)) {
		static__1a8a58e11_optimize(&(_34827_m.get()._field_Cap));
	};
}



inline void _1a8a5da09_appendCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c6d7d_BuiltinAppendCallExprModel> _35729_m) {
	static__1a8a58e11_optimize(&(_35729_m.get()._field_Dest));
	static__1a8a58e11_optimize(&(_35729_m.get()._field_Elements));
}



inline void _1a8a5dc7e_lenCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c719c_BuiltinLenCallExprModel> _36226_m) {
	static__1a8a58e11_optimize(&(_36226_m.get()._field_Expr.get()._field_Model));
}



inline void _1a8a5e004_capCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c74bb_BuiltinCapCallExprModel> _36626_m) {
	static__1a8a58e11_optimize(&(_36626_m.get()._field_Expr.get()._field_Model));
}



inline void _1a8a5e279_cloneCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c5761_BuiltinCloneCallExprModel> _37028_m) {
	static__1a8a58e11_optimize(&(_37028_m.get()._field_Expr));
}



inline void _1a8a5e4ee_deleteCall(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c7b70_BuiltinDeleteCallExprModel> _37429_m) {
	static__1a8a58e11_optimize(&(_37429_m.get()._field_Dest.get()._field_Model));
	if ((_37429_m.get()._field_Key != nullptr)) {
		static__1a8a58e11_optimize(&(_37429_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1a8a5e774_sizeof(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c86ba_SizeofExprModel> _38125_m) {
	static__1a8a58e11_optimize(&(_38125_m.get()._field_Expr));
}



inline void _1a8a5e9e9_alignof(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c89a6_AlignofExprModel> _38526_m) {
	static__1a8a58e11_optimize(&(_38526_m.get()._field_Expr));
}



inline void _1a8a5ec6e_integratedToStr(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c90a0_IntegratedToStrExprModel> _38934_m) {
	static__1a8a58e11_optimize(&(_38934_m.get()._field_Expr));
}



inline void _1a8a5eee4_free(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c9754_FreeExprModel> _39323_m) {
	static__1a8a58e11_optimize(&(_39323_m.get()._field_Expr));
}



inline void _1a8a60269_backendEmit(_1a8a58905_exprOptimizer* _self_, jule::Ptr<_1a88c9468_BackendEmitExprModel> _39730_m) {
	_1a8a5a1ed_args(_self_, &(_39730_m.get()._field_Exprs));
}



inline void _1a8a60445_do(_1a8a58905_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac90e422:;
			{
				_1a8a59483_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88be01d_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ac90e71e:;
			{
				_1a8a59708_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88be3c5_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ac90e785:;
			{
				_1a8a5997d_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88bec44_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ac90e7eb:;
			{
				_1a8a59c03_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c0052_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac90e862:;
			{
				_1a8a59e78_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c05a2_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ac90e8d9:;
			{
				_1a8a5aa39_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c0e54_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1ac90e961:;
			{
				_1a8a5acae_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c130b_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ac90e9d8:;
			{
				_1a8a5b034_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c4034_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ac90ea60:;
			{
				_1a8a5b2a9_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c177e_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ac90ead7:;
			{
				_1a8a5b52e_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c1b36_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ac90eb5e:;
			{
				_1a8a5b7a4_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c2461_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ac90ebd6:;
			{
				_1a8a5ba29_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c29a0_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ac90ec5d:;
			{
				_1a8a5bc9e_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c2ede_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ac90ecd5:;
			{
				_1a8a5c024_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ac90ed5c:;
			{
				_1a8a5c299_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c4881_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ac90edd4:;
			{
				_1a8a5c51e_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c4b7d_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ac90ee5b:;
			{
				_1a8a5ca19_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c5057_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ac90eed3:;
			{
				_1a8a5cc8e_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c5442_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ac91005a:;
			{
				_1a8a5c794_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c5b4b_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ac9100d2:;
			{
				_1a8a5d014_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c6036_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ac910159:;
			{
				_1a8a5d289_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c64dc_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac9101d1:;
			{
				_1a8a5d50e_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c83bd_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ac910258:;
			{
				_1a8a5d784_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c6993_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ac9102d0:;
			{
				_1a8a5da09_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c6d7d_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ac910357:;
			{
				_1a8a5dc7e_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c719c_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ac9103ce:;
			{
				_1a8a5e004_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c74bb_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ac910456:;
			{
				_1a8a5e279_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c5761_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac9104cd:;
			{
				_1a8a5e4ee_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c7b70_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ac910555:;
			{
				_1a8a5e774_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c86ba_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ac9105cc:;
			{
				_1a8a5e9e9_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c89a6_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1ac910654:;
			{
				_1a8a5ec6e_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c90a0_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ac9106cb:;
			{
				_1a8a5eee4_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c9754_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ac910753:;
			{
				_1a8a60269_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a88c9468_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1ac90e3bc:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a8a58905_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a93d98b2_stdCacheData _Src) {
	_Stream << "stdCacheData{";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "do:" << _Src._field_do;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a948c04c_Optimizer> static__1a948c47b_New(jule::Ptr<_1a93d5847_IR>* _2724_ir) {
	return jule::new_ptr<_1a948c04c_Optimizer>(_1a948c04c_Optimizer{._field_ir=(*(_2724_ir))});;
}



inline void _1a948c701_optimizeGlobal(_1a948c04c_Optimizer* _self_, jule::Ptr<_1a8966901_Var>* _3338_v) {
	if ((!((*(_3338_v)).get()._field_Binded))) {
		static__1a8a58e11_optimize(&((*(_3338_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1a948c976_optimizeFunction(_1a948c04c_Optimizer* _self_, jule::Ptr<_1a88cc25c_Fn>* _3940_func) {
	if ((*(_3940_func)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_3940_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac92bad2:;
		if (it != expr_end) {
			jule::Ptr<_1a88cee0d_FnIns> _4321_ins = *it;
			{
				jule::Ptr<_1a8786b3e_scopeOptimizer> _4421_so = static__1a8787117_new(_4321_ins.get()._field_Scope);;
				_1a878a37e_optimize(_4421_so.ptr());
			}
			_iter_next_1ac92bad2:;
			++it;
			goto _iter_begin_1ac92bad2;
		}
		_iter_end_1ac92bad2:;
	};
}



inline void _1a948cbeb_optimizeStruct(_1a948c04c_Optimizer* _self_, jule::Ptr<_1a88b6d3a_Struct>* _4938_s) {
	if ((*(_4938_s)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_4938_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac92d001:;
		if (it != expr_end) {
			jule::Ptr<_1a88b9b51_StructIns> _5321_ins = *it;
			{
				{
					auto expr = &(_5321_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac92d70a:;
					if (it != expr_end) {
						jule::Ptr<_1a88b915b_FieldIns> _5425_f = *it;
						{
							if ((_5425_f.get()._field_Default != nullptr)) {
								static__1a8a58e11_optimize(&(_5425_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_1ac92d70a:;
						++it;
						goto _iter_begin_1ac92d70a;
					}
					_iter_end_1ac92d70a:;
				};
				{
					auto expr = &(_5321_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac92e574:;
					if (it != expr_end) {
						jule::Ptr<_1a88cc25c_Fn> _5925_m = *it;
						{
							_1a948c976_optimizeFunction(_self_, &(_5925_m));
						}
						_iter_next_1ac92e574:;
						++it;
						goto _iter_begin_1ac92e574;
					}
					_iter_end_1ac92e574:;
				};
			}
			_iter_next_1ac92d001:;
			++it;
			goto _iter_begin_1ac92d001;
		}
		_iter_end_1ac92d001:;
	};
}



inline void _1a948ce71_optimizeGlobals(_1a948c04c_Optimizer* _self_, jule::Ptr<_1a8940e5d_Package>* _6539_p) {
	{
		auto expr = &((*(_6539_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac92e981:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _6621_f = *it;
			{
				{
					auto expr = &(_6621_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9306b8:;
					if (it != expr_end) {
						jule::Ptr<_1a8966901_Var> _6725_v = *it;
						{
							_1a948c701_optimizeGlobal(_self_, &(_6725_v));
						}
						_iter_next_1ac9306b8:;
						++it;
						goto _iter_begin_1ac9306b8;
					}
					_iter_end_1ac9306b8:;
				};
			}
			_iter_next_1ac92e981:;
			++it;
			goto _iter_begin_1ac92e981;
		}
		_iter_end_1ac92e981:;
	};
}



inline void _1a948d1e6_optimizeFunctions(_1a948c04c_Optimizer* _self_, jule::Ptr<_1a8940e5d_Package>* _7341_p) {
	{
		auto expr = &((*(_7341_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac930bc4:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _7421_f = *it;
			{
				{
					auto expr = &(_7421_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac9318d9:;
					if (it != expr_end) {
						jule::Ptr<_1a88cc25c_Fn> _7525_func = *it;
						{
							_1a948c976_optimizeFunction(_self_, &(_7525_func));
						}
						_iter_next_1ac9318d9:;
						++it;
						goto _iter_begin_1ac9318d9;
					}
					_iter_end_1ac9318d9:;
				};
			}
			_iter_next_1ac930bc4:;
			++it;
			goto _iter_begin_1ac930bc4;
		}
		_iter_end_1ac930bc4:;
	};
}



inline void _1a948d46b_optimizeStructs(_1a948c04c_Optimizer* _self_, jule::Ptr<_1a8940e5d_Package>* _8139_p) {
	{
		auto expr = &((*(_8139_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac931de5:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _8221_f = *it;
			{
				{
					auto expr = &(_8221_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac932b0a:;
					if (it != expr_end) {
						jule::Ptr<_1a88b6d3a_Struct> _8325_s = *it;
						{
							_1a948cbeb_optimizeStruct(_self_, &(_8325_s));
						}
						_iter_next_1ac932b0a:;
						++it;
						goto _iter_begin_1ac932b0a;
					}
					_iter_end_1ac932b0a:;
				};
			}
			_iter_next_1ac931de5:;
			++it;
			goto _iter_begin_1ac931de5;
		}
		_iter_end_1ac931de5:;
	};
}



inline void _1a948d6e1_optimizePackage(_1a948c04c_Optimizer* _self_, jule::Ptr<_1a8940e5d_Package>* _8939_p) {
	_1a948ce71_optimizeGlobals(_self_, _8939_p);
	_1a948d1e6_optimizeFunctions(_self_, _8939_p);
	_1a948d46b_optimizeStructs(_self_, _8939_p);
}



inline void _1a948d8bc_Optimize(_1a948c04c_Optimizer* _self_) {
	_1a948db31_detectEnabled();
	if (_1a948bcc7_stdEnabled) {
		_1a93da044_buildCache(&((*(_self_))._field_ir));
	};
	if (_1a93db8a3_Deadcode) {
		_1a947e715_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a948ba0d_scopeEnabled || _1a948b733_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac934d82:;
			if (it != expr_end) {
				jule::Ptr<_1a893d323_ImportInfo> _10825_u = *it;
				{
					if ((!(_10825_u.get()._field_Binded))) {
						_1a948d6e1_optimizePackage(_self_, &(_10825_u.get()._field_Package));
					};
				}
				_iter_next_1ac934d82:;
				++it;
				goto _iter_begin_1ac934d82;
			}
			_iter_end_1ac934d82:;
		};
		_1a948d6e1_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_1a93db8a3_Deadcode) {
		_1a9484808_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a948c04c_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1a80237c7_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1a8024ae7_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1a80237c7_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1a8024861_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a8026478_LogFlat(_1a4deb40b_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1a8026687_LogError(_1a4deb40b_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1a80237c7_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1a5530c2c_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1a5530c2c_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1a4d622d9_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_1a4d622d9_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1a5530c2c_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1a4d599b8_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1a4d599b8_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1a4d599b8_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1a8024ae7_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1a8026896_Log(_1a4deb40b_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1ac9426ca:;
			{
				static__1a8026478_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1ac942741:;
			{
				static__1a8026687_LogError(_6520_l);
			}
		}
		_match_end_1ac9425dc:;
	};
}



inline void static__1a8026aa5_PrintLogs(jule::Slice<_1a4deb40b_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9435cc:;
		if (it != expr_end) {
			_1a4deb40b_Log *_7616_l = it;
			{
				static__1a8026896_Log(_7616_l);
			}
			_iter_next_1ac9435cc:;
			++it;
			goto _iter_begin_1ac9435cc;
		}
		_iter_end_1ac9435cc:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1a5530c2c_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1a8026236_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d9e211_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1a9d9e8a4_Time static__1a9d9ec4a_Unix(jule::U64 _9120_sec) {
	return _1a9d9e8a4_Time{._field_sec=_9120_sec};;
}



inline _1a9d9e8a4_Time static__1a9d9ee48_Now(void) {
	return static__1a9d9ec4a_Unix(static_cast<jule::U64>(_1a9da1840_unix()));;
}



inline _1a9d9e211_AbsTime _1a9da1510_Abs(_1a9d9e8a4_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1a9d9d793_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1a9d9d793_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1ac973222:;
	}
	_iter_end_1ac973222:;;
	_1a9d9e211_AbsTime _17417_t = _1a9d9e211_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d9e8a4_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a96056c1_scopeCoder> static__1a9605cba_new(jule::Ptr<_1a9da8935_ObjectCoder>* _6624_oc) {
	return jule::new_ptr<_1a96056c1_scopeCoder>(_1a96056c1_scopeCoder{._field_oc=(*(_6624_oc))});;
}



inline void _1aca1c8e8_iterHead(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a892103c_RangeIter>* _7332_it, jule::Bool* _7344_ref, jule::Str* _7356_begin) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_1a93db595_Copy && _1a960b386_isCopyOptimizable(&((*(_7332_it)).get()._field_Expr)))) {
		(*(_7344_ref))=true;
		{
			auto &_match_expr{ (*(_7332_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1aca1e08c:;
				{
					jule::Ptr<_1a8966901_Var> _8221_v = (*(_7332_it)).get()._field_Expr.get()._field_Model.cast_ptr<_1a8966901_Var>(&__jule_any_type8);;
					if (_8221_v.get()._field_Reference) {
						_1a961ae23_model(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1aca207b9;
					};
					goto _case_begin_1aca2081e;
				}
			}
			else {
				_case_begin_1aca2081e:;
				{
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1a961ae23_model(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1aca207b9:;
		};
	} else {
		_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7344_ref))) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7344_ref))) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9309_writeR(_self_.get()._field_oc, _7356_begin);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
}



inline void _1a9606408_rangeIndexIter(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a892103c_RangeIter>* _12239_it) {
	jule::Str _12313_begin = static__1a9624bc9_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));;
	jule::Str _12413_next = static__1a9625218_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));;
	jule::Bool _12617_ref = false;;
	_1aca1c8e8_iterHead(_self_, _12239_it, &(_12617_ref), &(_12313_begin));
	if (((*(_12239_it)).get()._field_KeyA != nullptr)) {
		_1a9db15a8_varInitExpr(_self_.get()._field_oc, &((*(_12239_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12617_ref) {
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a9da988c_indent(_self_.get()._field_oc);
	};
	if (((*(_12239_it)).get()._field_KeyB != nullptr)) {
		(*(_12239_it)).get()._field_KeyB.get()._field_Reference=(_1a93db595_Copy && _1a960b71b_isIterCopyOptimizable(&((*(_12239_it)).get()._field_Expr), &((*(_12239_it)).get()._field_KeyB)));
		_1a9db15a8_varInitExpr(_self_.get()._field_oc, &((*(_12239_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_12239_it)).get()._field_KeyB.get()._field_Reference) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a9da988c_indent(_self_.get()._field_oc);
	};
	_1a960ac6a_scope(_self_, (*(_12239_it)).get()._field_Scope);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9309_writeR(_self_.get()._field_oc, &(_12413_next));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a9da988c_indent(_self_.get()._field_oc);
	if (((*(_12239_it)).get()._field_KeyA != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, static__1a9624932_var((*(_12239_it)).get()._field_KeyA));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1a9da988c_indent(_self_.get()._field_oc);
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a9da9309_writeR(_self_.get()._field_oc, &(_12313_begin));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, static__1a9624e71_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it))))));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a960667d_rangeHashmapIter(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a892103c_RangeIter>* _18541_it) {
	jule::Str _18613_begin = static__1a9624bc9_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it)))));;
	jule::Str _18713_next = static__1a9625218_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it)))));;
	jule::Bool _18917_ref = false;;
	_1aca1c8e8_iterHead(_self_, _18541_it, &(_18917_ref), &(_18613_begin));
	if (((*(_18541_it)).get()._field_KeyA != nullptr)) {
		_1a9db15a8_varInitExpr(_self_.get()._field_oc, &((*(_18541_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a9da988c_indent(_self_.get()._field_oc);
	};
	if (((*(_18541_it)).get()._field_KeyB != nullptr)) {
		_1a9db15a8_varInitExpr(_self_.get()._field_oc, &((*(_18541_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a9da988c_indent(_self_.get()._field_oc);
	};
	_1a960ac6a_scope(_self_, (*(_18541_it)).get()._field_Scope);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9309_writeR(_self_.get()._field_oc, &(_18713_next));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a9da9309_writeR(_self_.get()._field_oc, &(_18613_begin));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, static__1a9624e71_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it))))));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a9606903_ifCase(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a891e788_If> _22830_i) {
	if ((_22830_i.get()._field_Expr != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22830_i.get()._field_Expr);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1a960ac6a_scope(_self_, _22830_i.get()._field_Scope);
}



inline void _1a9606b78_conditional(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a891ede8_Conditional> _23735_c) {
	jule::Bool _23817_writed = false;;
	{
		auto expr = &(_23735_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca3e95e:;
		if (it != expr_end) {
			jule::Ptr<_1a891e788_If> _23921_elif = *it;
			{
				if ((_23921_elif == nullptr)) {
					goto _iter_next_1aca3e95e;
				};
				if (_23817_writed) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23817_writed=true;
				_1a9606903_ifCase(_self_, _23921_elif);
			}
			_iter_next_1aca3e95e:;
			++it;
			goto _iter_begin_1aca3e95e;
		}
		_iter_end_1aca3e95e:;
	};
	if ((_23735_c.get()._field_Default != nullptr)) {
		if (_23817_writed) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1a960ac6a_scope(_self_, _23735_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1a9606ded_infIter(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a89201d4_InfIter> _25731_it) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a960ac6a_scope(_self_, _25731_it.get()._field_Scope);
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, static__1a9625218_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25731_it))));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, static__1a9624e71_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25731_it))));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a9607173_whileIter(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a8920657_WhileIter> _27433_it) {
	if (((_27433_it.get()._field_Expr != nullptr) && (_27433_it.get()._field_Next == nullptr))) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27433_it.get()._field_Expr);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27433_it.get()._field_Expr != nullptr)) {
			_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27433_it.get()._field_Expr);
		};
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27433_it.get()._field_Next != nullptr)) {
			_1a960a770_st(_self_, _27433_it.get()._field_Next);
		};
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a960ac6a_scope(_self_, _27433_it.get()._field_Scope);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, static__1a9625218_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27433_it))));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, static__1a9624e71_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27433_it))));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a96073e8_rangeIter(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a892103c_RangeIter> _30733_it) {
	{
		
		if ((_1a86b2e44_Slc(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aca4ca8d:;
			{
				_1a9606408_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		else if ((_1a86b2bd0_Arr(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aca4ce67:;
			{
				_1a9606408_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		else if ((_1a86b38e5_Map(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aca4c75d:;
			{
				_1a960667d_rangeHashmapIter(_self_, &(_30733_it));
			}
		}
		else {
			_case_begin_1aca4c6e7:;
			{
				_1a9606408_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		_match_end_1aca4c62b:;
	};
}



inline void _1a960766d_cont(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a8921438_ContSt> _32024_c) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a9da9084_write(_self_.get()._field_oc, static__1a9625218_iterNext(_32024_c.get()._field_It));
}



inline void _1a96078e3_label(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a8921acb_Label> _32525_l) {
	_1a9da9084_write(_self_.get()._field_oc, static__1a96254b0_label(&(_32525_l.get()._field_Ident)));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1a9607b68_gotoSt(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a8921db7_GotoSt> _33026_gt) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a9da9084_write(_self_.get()._field_oc, static__1a96254b0_label(&(_33026_gt.get()._field_Ident)));
}



inline void _1a9607ddd_postfix(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a892226e_Postfix> _33531_p) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33531_p.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1a9da9309_writeR(_self_.get()._field_oc, &(_33531_p.get()._field_Op));
}



inline void _1a9608163_assign(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a89226e2_Assign> _34230_a) {
	_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34230_a.get()._field_L.get()._field_Model);
	_1a9da9309_writeR(_self_.get()._field_oc, &(_34230_a.get()._field_Op.get()._field_Kind));
	_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34230_a.get()._field_R.get()._field_Model);
}



inline void _1a96083d8_mapLookupAssign(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a8922a99_MultiAssign>* _34840_a) {
	jule::Ptr<_1a88c177e_IndexingExprModel> _34917_iem = (*(_34840_a)).get()._field_R.cast_ptr<_1a88c177e_IndexingExprModel>(&__jule_any_type46);;
	_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34917_iem.get()._field_Expr.get()._field_Model);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34917_iem.get()._field_Index.get()._field_Model);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34840_a)).get()._field_L[0LL] != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34840_a)).get()._field_L[0LL].get()._field_Model);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34840_a)).get()._field_L[1LL] != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34840_a)).get()._field_L[1LL].get()._field_Model);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a960865d_multiAssignTup(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a8922a99_MultiAssign>* _37139_a) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1a88c4b7d_TupleExprModel> _37517_tup = (*(_37139_a)).get()._field_R.cast_ptr<_1a88c4b7d_TupleExprModel>(&__jule_any_type87);;
	{
		auto expr = &(_37517_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca5b5b3:;
		if (it != expr_end) {
			jule::I64 _37714_i = it - expr->begin();
			jule::Ptr<_1a865dbe2_Data> _37721_r = *it;
			{
				_1a9da988c_indent(_self_.get()._field_oc);
				jule::Ptr<_1a865dbe2_Data> _37921_l = (*(_37139_a)).get()._field_L[_37714_i];;
				if ((_37921_l != nullptr)) {
					{
						auto &_match_expr{ _37921_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1aca5dbae:;
							{
								jule::Ptr<_1a8966901_Var> _38329_v = _37921_l.get()._field_Model.cast_ptr<_1a8966901_Var>(&__jule_any_type8);;
								if ((_38329_v.get()._field_Reference && (!(_1a8966c75_IsInitialized(_38329_v.ptr()))))) {
									_1a9da9084_write(_self_.get()._field_oc, static__1a9624932_var(_38329_v));
									_1a9da9084_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37721_r.get()._field_Model);
									_1a9da9084_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_37139_a)).get()._field_L[_37714_i]=nullptr;
									goto _iter_next_1aca5b5b3;
								};
							}
						}
						_match_end_1aca5da05:;
					};
					_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37921_l.get()._field_Kind));
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1a9da9084_write(_self_.get()._field_oc, static__1a9622e3b_toOut(&(_1a960500b_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37714_i))));
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37721_r.get()._field_Model);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1aca5b5b3:;
			++it;
			_37714_i++;
			goto _iter_begin_1aca5b5b3;
		}
		_iter_end_1aca5b5b3:;
	};
	{
		auto expr = &((*(_37139_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca62e49:;
		if (it != expr_end) {
			jule::I64 _40414_i = it - expr->begin();
			jule::Ptr<_1a865dbe2_Data> _40421_l = *it;
			{
				if ((_40421_l == nullptr)) {
					goto _iter_next_1aca62e49;
				};
				_1a9da988c_indent(_self_.get()._field_oc);
				_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40421_l.get()._field_Model);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a9da9084_write(_self_.get()._field_oc, static__1a9622e3b_toOut(&(_1a960500b_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40414_i))));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1aca62e49:;
			++it;
			_40414_i++;
			goto _iter_begin_1aca62e49;
		}
		_iter_end_1aca62e49:;
	};
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a96088d3_multiAssignFn(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a8922a99_MultiAssign>* _42038_a) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	jule::Ptr<_1a88c0e54_FnCallExprModel> _42517_f = (*(_42038_a)).get()._field_R.cast_ptr<_1a88c0e54_FnCallExprModel>(&__jule_any_type35);;
	_1a9dc2ab4_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42517_f.get()._field_Func.get()._field_Result));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_42038_a)).get()._field_R);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_42038_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca68834:;
		if (it != expr_end) {
			jule::I64 _43114_i = it - expr->begin();
			jule::Ptr<_1a865dbe2_Data> _43121_l = *it;
			{
				if ((_43121_l != nullptr)) {
					_1a9da988c_indent(_self_.get()._field_oc);
					_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _43121_l.get()._field_Model);
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(_43114_i));
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1aca68834:;
			++it;
			_43114_i++;
			goto _iter_begin_1aca68834;
		}
		_iter_end_1aca68834:;
	};
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a9608b58_multiAssign(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a8922a99_MultiAssign> _44635_a) {
	{
		auto &_match_expr{ _44635_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aca6b99c:;
			{
				_1a96083d8_mapLookupAssign(_self_, &(_44635_a));
				return;;
			}
		}
		_match_end_1aca6b78d:;
	};
	{
		auto &_match_expr{ _44635_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1aca6b6c2:;
			{
				_1a960865d_multiAssignTup(_self_, &(_44635_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aca6bd87:;
			{
				_1a96088d3_multiAssignFn(_self_, &(_44635_a));
			}
		}
		else {
			_case_begin_1aca6c3e8:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:460:13"));;
			}
		}
		_match_end_1aca6c393:;
	};
}



inline jule::Fn<void(void)> _1a9608e66_matchExpr(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a89231a4_Match> _46433_m) {
	if ((!(_1a865e50b_IsConst(_46433_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1a5544834_IsBool(_46433_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1a554248b_ReadBool(_46433_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46433_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1a9609285_case(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a89231a4_Match> _47428_m, jule::Ptr<_1a8923bee_Case> _47443_c) {
	if (((_47443_c.get()._field_Exprs.len() != 0LL) && (!(_47428_m.get()._field_Comptime)))) {
		if (((_47428_m.get()._field_Cases.len() > 0LL) && (_47428_m.get()._field_Cases[0LL] == _47443_c))) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47443_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aca725a7:;
			if (it != expr_end) {
				jule::I64 _48118_i = it - expr->begin();
				jule::Ptr<_1a865dbe2_Data> _48125_expr = *it;
				{
					{
						
						if ((!(_47428_m.get()._field_TypeMatch))) {
							_case_begin_1aca78228:;
							{
								jule::Fn<void(void)> _48425_caseExpr = _1a9608e66_matchExpr(_self_, _47428_m);;
								if (_1a865e819_GoodOperand(_47428_m.get()._field_Expr.ptr(), &(_48125_expr))) {
									if ((_48425_caseExpr != nullptr)) {
										_48425_caseExpr();
										_1a9da9084_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _48125_expr.get()._field_Model);
								} else {
									_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _48125_expr.get()._field_Model);
									if ((_48425_caseExpr != nullptr)) {
										_1a9da9084_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48425_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1aca73586:;
							{
								_1a9da9084_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1a86ae79d_TypeKind> _50029_tk = _48125_expr.get()._field_Model.cast_ptr<_1a86ae79d_TypeKind>(&__jule_any_type89);;
								if ((_1a86b3681_Trait(_47428_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1a9da9084_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1a960e565_boolean(_self_.get()._field_oc.get()._field_ec, (_1a86b222e_Sptr(_48125_expr.get()._field_Kind.ptr()) != nullptr));
									_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(static_cast<jule::I64>(_1a9daac12_findTypeOffset(_self_.get()._field_oc.ptr(), _1a86b3681_Trait(_47428_m.get()._field_Expr.get()._field_Kind.ptr()), _48125_expr.get()._field_Kind))));
									_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I64 _50829_j = _1a9da9ea8_pushAnyType(_self_.get()._field_oc, _50029_tk);;
									_1a9da9084_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(_50829_j));
								};
							}
						}
						_match_end_1aca734ba:;
					};
					if (((_47443_c.get()._field_Exprs.len() - _48118_i) > 1LL)) {
						_1a9da9084_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1aca725a7:;
				++it;
				_48118_i++;
				goto _iter_begin_1aca725a7;
			}
			_iter_end_1aca725a7:;
		};
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47428_m.get()._field_Default == _47443_c) && (_47428_m.get()._field_Cases.len() != 0LL))) {
		_1a9da988c_indent(_self_.get()._field_oc);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, static__1a96259ee_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47443_c))));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47443_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1a9da988c_indent(_self_.get()._field_oc);
		_1a960ac6a_scope(_self_, _47443_c.get()._field_Scope);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a960950a_matchSt(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a89231a4_Match> _54231_m) {
	if (((_54231_m.get()._field_Cases.len() == 0LL) && (_54231_m.get()._field_Default == nullptr))) {
		return;;
	};
	if ((_54231_m.get()._field_Comptime && ((_54231_m.get()._field_Default == nullptr) || (_54231_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	if (((!(_54231_m.get()._field_Comptime)) && (!(_1a865e50b_IsConst(_54231_m.get()._field_Expr.ptr()))))) {
		if ((_1a93db595_Copy && _1a960b386_isCopyOptimizable(&(_54231_m.get()._field_Expr)))) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _54231_m.get()._field_Expr.get()._field_Model);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1a9da988c_indent(_self_.get()._field_oc);
	};
	if ((_54231_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_54231_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aca84c3a:;
			if (it != expr_end) {
				jule::Ptr<_1a8923bee_Case> _57025_c = *it;
				{
					if ((_57025_c == nullptr)) {
						goto _iter_next_1aca84c3a;
					};
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a9da988c_indent(_self_.get()._field_oc);
					_1a9609285_case(_self_, _54231_m, _57025_c);
				}
				_iter_next_1aca84c3a:;
				++it;
				goto _iter_begin_1aca84c3a;
			}
			_iter_end_1aca84c3a:;
		};
	};
	if ((_54231_m.get()._field_Default != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a9609285_case(_self_, _54231_m, _54231_m.get()._field_Default);
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, static__1a9625757_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54231_m))));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a9609780_fallSt(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a89242c6_FallSt> _59726_f) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a9da9084_write(_self_.get()._field_oc, static__1a96259ee_caseBegin(_59726_f.get()._field_DestCase));
}



inline void _1a9609a05_breakSt(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a89217e0_BreakSt> _60227_b) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_60227_b.get()._field_It != 0LLU)) {
		_1a9da9084_write(_self_.get()._field_oc, static__1a9624e71_iterEnd(_60227_b.get()._field_It));
	} else {
		_1a9da9084_write(_self_.get()._field_oc, static__1a9625757_matchEnd(_60227_b.get()._field_Mtch));
	};
}



inline void _1a9609c7a_setResult(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a8924628_RetSt> _61133_r) {
	if ((_61133_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61133_r.get()._field_Expr);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1a9da988c_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1a865dbe2_Data>> _61917_datas = _61133_r.get()._field_Expr.cast_ptr<_1a88c4b7d_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
	{
		auto expr = &(_61917_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca8db12:;
		if (it != expr_end) {
			jule::I64 _62013_i = it - expr->begin();
			jule::Ptr<_1a865dbe2_Data> _62016_data = *it;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(_62013_i));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62016_data.get()._field_Model);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1a9da988c_indent(_self_.get()._field_oc);
			}
			_iter_next_1aca8db12:;
			++it;
			_62013_i++;
			goto _iter_begin_1aca8db12;
		}
		_iter_end_1aca8db12:;
	};
}



inline void _1a960a000_retSt(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a8924628_RetSt> _63029_r) {
	if (_1a88cc6be_IsVoid(_63029_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_63029_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _63029_r.get()._field_Func.get()._field_Result));
			_1a9da9084_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _63029_r.get()._field_Expr);
			_1a9da9084_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _63029_r.get()._field_Expr);
			_1a9da9084_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_63029_r.get()._field_Expr != nullptr)) {
		_1a9609c7a_setResult(_self_, _63029_r);
	};
	if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1a9dc2ab4_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_63029_r.get()._field_Func.get()._field_Result));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1a960a275_var(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a8966901_Var> _66627_v) {
	if ((!(_66627_v.get()._field_Constant))) {
		_1a9db182d_var(_self_.get()._field_oc, _66627_v);
	};
}



inline void _1a960a4ea_strAppend(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a8783d8e_StrAppendExprModel> _67233_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67233_m.get()._field_Str);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	{
		auto &_match_expr{ _67233_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aca98a2e:;
			{
				jule::Ptr<_1a55406ba_Const> _67817_c = _67233_m.get()._field_Expr.cast_ptr<_1a55406ba_Const>(&__jule_any_type19);;
				jule::Slice<jule::U8> _67917_bytes = static_cast<jule::Slice<jule::U8>>(_1a5542700_ReadStr(_67817_c.ptr()));;
				_1a9da9084_write(_self_.get()._field_oc, _1a961bde1_cstrLit(_67917_bytes));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a9da9084_write(_self_.get()._field_oc, _1a5530985_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_67917_bytes.len())), 10LL));
			}
		}
		else {
			_case_begin_1aca99a30:;
			{
				_1a9611b72_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67233_m.get()._field_Expr);
			}
		}
		_match_end_1aca999ca:;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a960a770_st(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Any _69026_st) {
	if ((_69026_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _69026_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1aca9d00b:;
			{
				_1a960ac6a_scope(_self_, _69026_st.cast_ptr<_1a891e38c_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aca9cda7:;
			{
				_1a960a275_var(_self_, _69026_st.cast_ptr<_1a8966901_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aca9d76a:;
			{
				_1a961ae23_model(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1a865dbe2_Data>(&__jule_any_type24).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1aca9d7d1:;
			{
				_1a9606b78_conditional(_self_, _69026_st.cast_ptr<_1a891ede8_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aca9d847:;
			{
				_1a9606ded_infIter(_self_, _69026_st.cast_ptr<_1a89201d4_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1aca9d8ad:;
			{
				_1a9607173_whileIter(_self_, _69026_st.cast_ptr<_1a8920657_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1aca9d924:;
			{
				_1a96073e8_rangeIter(_self_, _69026_st.cast_ptr<_1a892103c_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aca9d98a:;
			{
				_1a960766d_cont(_self_, _69026_st.cast_ptr<_1a8921438_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aca9da01:;
			{
				_1a96078e3_label(_self_, _69026_st.cast_ptr<_1a8921acb_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1aca9da67:;
			{
				_1a9607b68_gotoSt(_self_, _69026_st.cast_ptr<_1a8921db7_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1aca9dade:;
			{
				_1a9607ddd_postfix(_self_, _69026_st.cast_ptr<_1a892226e_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aca9db66:;
			{
				_1a9608163_assign(_self_, _69026_st.cast_ptr<_1a89226e2_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1aca9dbdd:;
			{
				_1a9608b58_multiAssign(_self_, _69026_st.cast_ptr<_1a8922a99_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1aca9dc65:;
			{
				_1a960950a_matchSt(_self_, _69026_st.cast_ptr<_1a89231a4_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1aca9dcdc:;
			{
				_1a9609780_fallSt(_self_, _69026_st.cast_ptr<_1a89242c6_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1aca9dd64:;
			{
				_1a9609a05_breakSt(_self_, _69026_st.cast_ptr<_1a89217e0_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1aca9dddb:;
			{
				_1a960a000_retSt(_self_, _69026_st.cast_ptr<_1a8924628_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1aca9de63:;
			{
				_1a9618607_pushToSlice(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1a8784895_PushToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1aca9deda:;
			{
				_1a961887c_appendToSlice(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1a8784c4c_AppendToSliceExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1aca9e062:;
			{
				_1a961a3ea_mutSlicing(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1a878528b_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1aca9e0d9:;
			{
				_1a961a670_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_1a8785775_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1aca9e161:;
			{
				_1a960a4ea_strAppend(_self_, _69026_st.cast_ptr<_1a8783d8e_StrAppendExprModel>(&__jule_any_type125));
			}
		}
		else {
			_case_begin_1aca9ce95:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1aca9cb43:;
	};
}



inline void _1a960a9e5_scopeStmts(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a891e38c_Scope>* _74435_s) {
	{
		auto expr = &((*(_74435_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acaa8d19:;
		if (it != expr_end) {
			jule::Any _74521_st = *it;
			{
				_1a9da988c_indent(_self_.get()._field_oc);
				_1a960a770_st(_self_, _74521_st);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1acaa8d19:;
			++it;
			goto _iter_begin_1acaa8d19;
		}
		_iter_end_1acaa8d19:;
	};
}



inline void _1a960ac6a_scope(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a891e38c_Scope> _75329_s) {
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	if (_75329_s.get()._field_Deferred) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a960a9e5_scopeStmts(_self_, &(_75329_s));
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_75329_s.get()._field_Deferred) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1a960aee0_funcScope(jule::Ptr<_1a96056c1_scopeCoder> _self_, jule::Ptr<_1a88cee0d_FnIns> _76933_f) {
	if ((_76933_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	if ((!(_1a88cc6be_IsVoid(_76933_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1a86bbcb6_Tuple> _77621_tup = _1a86b3b59_Tup(_76933_f.get()._field_Result.ptr());;
		if ((_77621_tup != nullptr)) {
			_1a9da988c_indent(_self_.get()._field_oc);
			_1a9dc2476_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _77621_tup);
			_1a9da9084_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_77621_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1acaae57d:;
				if (it != expr_end) {
					jule::I64 _78122_i = it - expr->begin();
					jule::Ptr<_1a86ae79d_TypeKind> _78129_t = *it;
					{
						if (_1a9dc4de6_shouldInitialized(&(_78129_t))) {
							_1a9da988c_indent(_self_.get()._field_oc);
							_1a9da9084_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(_78122_i));
							_1a9da9084_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1a961b198_initExpr(_self_.get()._field_oc.get()._field_ec, _78129_t);
							_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1acaae57d:;
					++it;
					_78122_i++;
					goto _iter_begin_1acaae57d;
				}
				_iter_end_1acaae57d:;
			};
		} else if ((_76933_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1a9da988c_indent(_self_.get()._field_oc);
			_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76933_f.get()._field_Result));
			_1a9da9084_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1a9dc4de6_shouldInitialized(&(_76933_f.get()._field_Result))) {
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a961b198_initExpr(_self_.get()._field_oc.get()._field_ec, _76933_f.get()._field_Result);
			};
			_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1a960a9e5_scopeStmts(_self_, &(_76933_f.get()._field_Scope));
	if ((_76933_f.get()._field_Decl.get()._field_Exceptional && _1a88cc6be_IsVoid(_76933_f.get()._field_Decl.ptr()))) {
		_1a9da988c_indent(_self_.get()._field_oc);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1a96056c1_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a960dbb3_exprCoder> static__1a960e06a_new(jule::Ptr<_1a9da8935_ObjectCoder>* _11224_oc) {
	return jule::new_ptr<_1a960dbb3_exprCoder>(_1a960dbb3_exprCoder{._field_oc=(*(_11224_oc))});;
}



inline void _1a960e2e0_string(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a55406ba_Const>* _11827_c) {
	jule::Str _11913_content = _1a5542700_ReadStr((*(_11827_c)).ptr());;
	if ((_11913_content.len() == 0LL)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _12413_bytes = static_cast<jule::Slice<jule::U8>>(_11913_content);;
	jule::Str _12513_len = _1a5530985_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_12413_bytes.len())), 10LL);;
	jule::Str _12613_lit = _1a961bde1_cstrLit(_12413_bytes);;
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9da9309_writeR(_self_.get()._field_oc, &(_12613_lit));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a9da9309_writeR(_self_.get()._field_oc, &(_12513_len));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a960e565_boolean(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Bool _13527_b) {
	if (_13527_b) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1a960e741_nilLit(jule::Ptr<_1a960dbb3_exprCoder> _self_) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1a960ea4e_ftoaSpecialCases(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::F64* _14737_x) {
	{
		
		if (_1a54d6474_IsNaN((*(_14737_x)))) {
			_case_begin_1acace78a:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1a54d6a29_IsInf((*(_14737_x)), 1LL)) {
			_case_begin_1acace812:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1a54d6a29_IsInf((*(_14737_x)), -1LL)) {
			_case_begin_1acace889:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1acace724:;
			{
				return false;;
			}
		}
		_match_end_1acace658:;
	};
	return true;;
}



inline void _1a960ecc4_float32(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a55406ba_Const>* _16128_c) {
	jule::F64 _16213_x = _1a55431a1_AsF64((*(_16128_c)).ptr());;
	if (_1a960ea4e_ftoaSpecialCases(_self_, &(_16213_x))) {
		return;;
	};
	{
		
		if ((_16213_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1acad24c4:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_16213_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1acad220a:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1acad2194:;
			{
				_1a9da9084_write(_self_.get()._field_oc, _1a961c1ee_ftoa(_16213_x, 32LL));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1acad2062:;
	};
}



inline void _1a9610049_float64(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a55406ba_Const>* _18028_c) {
	jule::F64 _18113_x = _1a55431a1_AsF64((*(_18028_c)).ptr());;
	if (_1a960ea4e_ftoaSpecialCases(_self_, &(_18113_x))) {
		return;;
	};
	{
		
		if ((_18113_x == jule::MAX_F64)) {
			_case_begin_1acad5285:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_18113_x == jule::MIN_F64)) {
			_case_begin_1acad55d7:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1acad4b25:;
			{
				_1a9da9084_write(_self_.get()._field_oc, _1a961c1ee_ftoa(_18113_x, 64LL));
			}
		}
		_match_end_1acad49e3:;
	};
}



inline void _1a96102be_constant(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a55406ba_Const> _19832_c) {
	{
		
		if (_1a5544a98_IsStr(_19832_c.ptr())) {
			_case_begin_1acad67b4:;
			{
				_1a960e2e0_string(_self_, &(_19832_c));
			}
		}
		else if (_1a5544834_IsBool(_19832_c.ptr())) {
			_case_begin_1acad682a:;
			{
				_1a960e565_boolean(_self_, _1a554248b_ReadBool(_19832_c.ptr()));
			}
		}
		else if (_1a5544d0c_IsF64(_19832_c.ptr())) {
			_case_begin_1acad6891:;
			{
				{
					
					if (_19832_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_1acad88d7:;
						{
							_1a960ecc4_float32(_self_, &(_19832_c));
						}
					}
					else {
						_case_begin_1acad8541:;
						{
							_1a9610049_float64(_self_, &(_19832_c));
						}
					}
					_match_end_1acad8475:;
				};
			}
		}
		else if (_1a554435b_IsI64(_19832_c.ptr())) {
			_case_begin_1acad6907:;
			{
				_1a9da9084_write(_self_.get()._field_oc, _1a961c496_itoa(static_cast<jule::I64>(_1a5541eb3_ReadI64(_19832_c.ptr()))));
			}
		}
		else if (_1a55445c0_IsU64(_19832_c.ptr())) {
			_case_begin_1acad7188:;
			{
				_1a9da9084_write(_self_.get()._field_oc, _1a961c73d_utoa(static_cast<jule::U64>(_1a5542227_ReadU64(_19832_c.ptr()))));
			}
		}
		else if (_1a5545071_IsNil(_19832_c.ptr())) {
			_case_begin_1acad71ee:;
			{
				_1a960e741_nilLit(_self_);
			}
		}
		else {
			_case_begin_1acad674d:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1acad6682:;
	};
}



inline void _1a9610687_divByZeroBinary(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a52684c0_Token>* _22236_op, jule::Ptr<_1a88bda56_OperandExprModel>* _22253_l, jule::Ptr<_1a88bda56_OperandExprModel>* _22280_r) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_22236_op)).get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1acadb654:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1acadb6cb:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1acadb5dd:;
	};
	if ((!(_1ce99b3e3_Production))) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a9dab2a6_locInfo(_self_.get()._field_oc, _22236_op);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a9611b72_possibleRefExpr(_self_, (*(_22253_l)).get()._field_Model);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a9611b72_possibleRefExpr(_self_, (*(_22280_r)).get()._field_Model);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a961090c_unsafeBinary(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88be01d_BinopExprModel> _24436_m) {
	if (((_24436_m.get()._field_Op.get()._field_Id == static_cast<jule::U64>(50LLU)) || (_24436_m.get()._field_Op.get()._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1a961d387_isAny(&(_24436_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_1a86b0804_IsNil(_24436_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1a961d387_isAny(&(_24436_m.get()._field_Right.get()._field_Kind)))))) {
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
				if ((_24436_m.get()._field_Op.get()._field_Id == static_cast<jule::U64>(51LLU))) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _25425_i = _1a9da9ea8_pushAnyType(_self_.get()._field_oc, _24436_m.get()._field_Right.get()._field_Kind);;
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(_25425_i));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1a9611b72_possibleRefExpr(_self_, _24436_m.get()._field_Left.get()._field_Model);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a9611b72_possibleRefExpr(_self_, _24436_m.get()._field_Right.get()._field_Model);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9611b72_possibleRefExpr(_self_, _24436_m.get()._field_Left.get()._field_Model);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a9da9309_writeR(_self_.get()._field_oc, &(_24436_m.get()._field_Op.get()._field_Kind));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a9611b72_possibleRefExpr(_self_, _24436_m.get()._field_Right.get()._field_Model);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9610b82_binary(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88be01d_BinopExprModel> _27530_m) {
	{
		auto &_match_expr{ _27530_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1acae6e12:;
			{
				if ((_1a86b341c_Struct(_27530_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1a9610687_divByZeroBinary(_self_, &(_27530_m.get()._field_Op), &(_27530_m.get()._field_Left), &(_27530_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_1acae6d8a:;
	};
	_1a961090c_unsafeBinary(_self_, _27530_m);
}



inline void _1a9610e07_var(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a8966901_Var> _28727_m) {
	if (_28727_m.get()._field_Binded) {
		jule::Ptr<_1a88645ce_Directive> _28917_d = _1a9dc47b9_findDirective(&(_28727_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28917_d != nullptr)) {
			_1a9da9084_write(_self_.get()._field_oc, _1a9db55ac_concatAllParts(_28917_d.get()._field_Args));
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a9da9084_write(_self_.get()._field_oc, static__1a9624932_var(_28727_m));
}



inline void _1a961117c_structureIns(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88b9b51_StructIns> _29836_m) {
	_1a9da9084_write(_self_.get()._field_oc, _1a9dbb63a_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29836_m));
}



inline void _1a9611402_unary(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88be3c5_UnaryExprModel> _30229_m) {
	{
		auto &_match_expr{ _30229_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1acaeb71e:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1a9611b72_possibleRefExpr(_self_, _30229_m.get()._field_Expr.get()._field_Model);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1acaeb796:;
			{
				if ((_1ce99b3e3_Production || (_1a86b222e_Sptr(_30229_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1acaeb686;
				};
				_1a9611b72_possibleRefExpr(_self_, _30229_m.get()._field_Expr.get()._field_Model);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1a9dab2a6_locInfo(_self_.get()._field_oc, &(_30229_m.get()._field_Op));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1acaeb686:;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9da9309_writeR(_self_.get()._field_oc, &(_30229_m.get()._field_Op.get()._field_Kind));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9611b72_possibleRefExpr(_self_, _30229_m.get()._field_Expr.get()._field_Model);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a9611677_structureLit(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88bec44_StructLitExprModel> _32636_m) {
	if (_32636_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1a9da9084_write(_self_.get()._field_oc, static__1a96243e3_structureIns(&(_32636_m.get()._field_Strct)));
	if (_32636_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_32636_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_32636_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acb02db8:;
			if (it != expr_end) {
				jule::I64 _33917_i = it - expr->begin();
				jule::Ptr<_1a88b915b_FieldIns> _33920_f = *it;
				{
					{
						auto expr = &(_32636_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1acb03a01:;
						if (it != expr_end) {
							jule::Ptr<_1a88be8c0_StructArgExprModel> _34029_arg = *it;
							{
								if ((_34029_arg.get()._field_Field == _33920_f)) {
									_1a9da9084_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1a9da9084_write(_self_.get()._field_oc, static__1a962468a_field(&(_34029_arg.get()._field_Field.get()._field_Decl)));
									_1a9da9084_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1a9611b72_possibleRefExpr(_self_, _34029_arg.get()._field_Expr.get()._field_Model);
									if (((_32636_m.get()._field_Strct.get()._field_Fields.len() - _33917_i) > 1LL)) {
										_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1acb02db8;
								};
							}
							_iter_next_1acb03a01:;
							++it;
							goto _iter_begin_1acb03a01;
						}
						_iter_end_1acb03a01:;
					};
				}
				_iter_next_1acb02db8:;
				++it;
				_33917_i++;
				goto _iter_begin_1acb02db8;
			}
			_iter_end_1acb02db8:;
		};
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a96118ec_allocStructure(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c0052_AllocStructLitExprModel> _35738_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a9da9084_write(_self_.get()._field_oc, static__1a96243e3_structureIns(&(_35738_m.get()._field_Lit.get()._field_Strct)));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a9611677_structureLit(_self_, _35738_m.get()._field_Lit);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9611b72_possibleRefExpr(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Any _36535_expr) {
	{
		auto &_match_expr{ _36535_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acb08ad3:;
			{
				jule::Ptr<_1a8966901_Var> _36817_v = _36535_expr.cast_ptr<_1a8966901_Var>(&__jule_any_type8);;
				if (_36817_v.get()._field_Reference) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_1a961ae23_model(_self_, _36535_expr);
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1acb089d4:;
	};
	_1a961ae23_model(_self_, _36535_expr);
}



inline void _1a961203a_castTraitFromTrait(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c05a2_CastingExprModel>* _37943_m, jule::Ptr<_1a88de47d_Trait> _37969_t1, jule::Ptr<_1a88de47d_Trait> _37985_t2) {
	_1a9611b72_possibleRefExpr(_self_, (*(_37943_m)).get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(".mask<", 6));
	_1a9da9084_write(_self_.get()._field_oc, static__1a9623b0c_traitDecl(_37969_t1));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a9dab031_pushAndWriteMaskMapper(_self_.get()._field_oc, _37969_t1, _37985_t2);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a96122b0_casting(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c05a2_CastingExprModel> _39431_m) {
	{
		
		if (_1a961d387_isAny(&(_39431_m.get()._field_Kind))) {
			_case_begin_1acb0cb4d:;
			{
				if (_1a86b0804_IsNil(_39431_m.get()._field_ExprKind.ptr())) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1a86b296b_TypeEnum(_39431_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1a9611b72_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
					return;;
				};
				jule::I64 _40517_i = _1a9da9ea8_pushAnyType(_self_.get()._field_oc, _39431_m.get()._field_ExprKind);;
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _39431_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1acb0e6cc:;
						{
							jule::Ptr<_1a86b7003_Prim> _40921_prim = _1a86b1eba_Prim(_39431_m.get()._field_ExprKind.ptr());;
							if (((_40921_prim != nullptr) && _1a553eae8_IsInt(_40921_prim.get()._field_Kind))) {
								_1a9da9084_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1a9da9084_write(_self_.get()._field_oc, _1a9db8868_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _40921_prim));
								_1a9da9084_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1a9611b72_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
								_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1acb1037b;
							};
							goto _case_begin_1acb105bd;
						}
					}
					else {
						_case_begin_1acb105bd:;
						{
							_1a9611b72_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
						}
					}
					_match_end_1acb1037b:;
				};
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(_40517_i));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if (_1a961d387_isAny(&(_39431_m.get()._field_ExprKind))) {
			_case_begin_1acb0cbc5:;
			{
				_1a9611b72_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1a86b222e_Sptr(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1a86b222e_Sptr(_39431_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
				};
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_1ce99b3e3_Production))) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a9dab2a6_locInfo(_self_.get()._field_oc, &(_39431_m.get()._field_Token));
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(static_cast<jule::I64>(_1a9da9ea8_pushAnyType(_self_.get()._field_oc, _39431_m.get()._field_Kind))));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1a86b2493_Ptr(_39431_m.get()._field_ExprKind.ptr()) != nullptr) || (_1a86b2493_Ptr(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb0cc4c:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1a9611b72_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if ((_1a86b3681_Trait(_39431_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1acb0ccc4:;
			{
				if ((_1a86b3681_Trait(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
					_1a961203a_castTraitFromTrait(_self_, &(_39431_m), _1a86b3681_Trait(_39431_m.get()._field_Kind.ptr()), _1a86b3681_Trait(_39431_m.get()._field_ExprKind.ptr()));
					return;;
				};
				_1a9611b72_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1a86b222e_Sptr(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1a86b222e_Sptr(_39431_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
				};
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_1ce99b3e3_Production))) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a9dab2a6_locInfo(_self_.get()._field_oc, &(_39431_m.get()._field_Token));
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(static_cast<jule::I64>(_1a9daac12_findTypeOffset(_self_.get()._field_oc.ptr(), _1a86b3681_Trait(_39431_m.get()._field_ExprKind.ptr()), _39431_m.get()._field_Kind))));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1a86b3681_Trait(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb0cd4b:;
			{
				_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a9611b72_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(static_cast<jule::I64>(_1a9daac12_findTypeOffset(_self_.get()._field_oc.ptr(), _1a86b3681_Trait(_39431_m.get()._field_Kind.ptr()), _39431_m.get()._field_ExprKind))));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		_match_end_1acb0ca0a:;
	};
	jule::Ptr<_1a86b7003_Prim> _48613_prim = _1a86b1eba_Prim(_39431_m.get()._field_Kind.ptr());;
	jule::Ptr<_1a86b7003_Prim> _48713_eprim = _1a86b1eba_Prim(_39431_m.get()._field_ExprKind.ptr());;
	if ((((_48713_eprim != nullptr) && (_48613_prim != nullptr)) && _1a86ba204_IsStr(_48613_prim.ptr()))) {
		if (_1a86b87c9_IsU8(_48713_eprim.ptr())) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::Str::from_byte(", 21));
		} else {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::Str::from_rune(", 21));
		};
		_1a9611b72_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
	_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a9611b72_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9612535_models(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Slice<jule::Any> _50530_args) {
	if ((_50530_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_50530_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb2d9c6:;
		if (it != expr_end) {
			jule::I64 _50914_i = it - expr->begin();
			jule::Any _50921_a = *it;
			{
				_1a9611b72_possibleRefExpr(_self_, _50921_a);
				if (((_50530_args.len() - _50914_i) > 1LL)) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1acb2d9c6:;
			++it;
			_50914_i++;
			goto _iter_begin_1acb2d9c6;
		}
		_iter_end_1acb2d9c6:;
	};
}



inline void _1a96127aa_args(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c0e54_FnCallExprModel>* _51729_m) {
	jule::I64 _51817_j = 0LL;;
	if (((((*(_51729_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_51729_m)).get()._field_Func.get()._field_Decl.get()._field_Statically))) || (((*(_51729_m)).get()._field_Func.get()._field_Params.len() > 0LL) && _1a88cb008_IsSelf((*(_51729_m)).get()._field_Func.get()._field_Params[0LL].get()._field_Decl.ptr())))) {
		(_51817_j)++;
	};
	{
		auto expr = &((*(_51729_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb3217d:;
		if (it != expr_end) {
			jule::I64 _52313_i = it - expr->begin();
			jule::Any _52316_arg = *it;
			{
				jule::Ptr<_1a88ce03e_ParamIns> _52417_p = (*(_51729_m)).get()._field_Func.get()._field_Params[_51817_j];;
				if (((_52417_p.get()._field_Decl != nullptr) && _52417_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _52316_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1acb33855:;
							{
								jule::Ptr<_1a8966901_Var> _52825_v = _52316_arg.cast_ptr<_1a8966901_Var>(&__jule_any_type8);;
								if (_52825_v.get()._field_Reference) {
									_1a961ae23_model(_self_, _52316_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_1acb33767:;
					};
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1a961ae23_model(_self_, _52316_arg);
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_1a9611b72_possibleRefExpr(_self_, _52316_arg);
				_julec_label_end:;
				if ((((*(_51729_m)).get()._field_Args.len() - _52313_i) > 1LL)) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_51817_j)++;
			}
			_iter_next_1acb3217d:;
			++it;
			_52313_i++;
			goto _iter_begin_1acb3217d;
		}
		_iter_end_1acb3217d:;
	};
}



inline void _1a9612a30_modelForCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Any _54836_expr) {
	{
		auto &_match_expr{ _54836_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1acb37617:;
			{
				_1a9615da7_funcIns(_self_, _54836_expr.cast_ptr<_1a88cee0d_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1acb3768e:;
			{
				jule::Ptr<_1a88c37c5_StructSubIdentExprModel> _55421_ssie = _54836_expr.cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_55421_ssie.get()._field_Method != nullptr)) {
					_1a9615da7_funcIns(_self_, _55421_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1acb37507:;
	};
	_1a9611b72_possibleRefExpr(_self_, _54836_expr);
}



inline void _1a9612ca5_pushCallInf(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c0e54_FnCallExprModel>* _56332_m) {
	if ((_1ce99b3e3_Production || ((!((*(_56332_m)).get()._field_Func.get()._field_Anon)) && (!(_1a961cdae_isBuiltinCallHasDebuginf(_56332_m)))))) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_56332_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_56332_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1acb3a5a4:;
				{
					if ((*(_56332_m)).get()._field_Expr.cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_Binded) {
						_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1acb3a780;
				}
			}
			else {
				_case_begin_1acb3a780:;
				{
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1acb3a64d:;
		};
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1a9dab2a6_locInfo(_self_.get()._field_oc, &((*(_56332_m)).get()._field_Token));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_56332_m)).get()._field_Args.len() != 0LL)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1a96130b3_isWrapped(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c0e54_FnCallExprModel>* _58834_m) {
	if ((((!(_1a88d1294_IsBuiltin((*(_58834_m)).get()._field_Func.ptr()))) && ((*(_58834_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1a88cb008_IsSelf((*(_58834_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_58834_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1acb3dc5b:;
				{
					jule::Ptr<_1a88c37c5_StructSubIdentExprModel> _59225_ssie = (*(_58834_m)).get()._field_Expr.cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1a88cb26c_IsRef((*(_58834_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1a86b222e_Sptr(_59225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1acb40257:;
							{
								goto _match_end_1acb3ea2b;
							}
						}
						else {
							_case_begin_1acb3ea92:;
							{
								if ((_1a86b341c_Struct(_59225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_59225_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1a9da9084_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1a961ae23_model(_self_, _59225_ssie.get()._field_Expr.get()._field_Model);
										_1a9da9084_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1acb3ea2b:;
					};
				}
			}
			_match_end_1acb3da4c:;
		};
	};
	return false;;
}



inline void _1a9613338_pureFuncCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c0e54_FnCallExprModel>* _61237_m) {
	jule::Bool _61313_wrapped = _1a96130b3_isWrapped(_self_, _61237_m);;
	_1a9612a30_modelForCall(_self_, (*(_61237_m)).get()._field_Expr);
	if ((!(_1a88d1294_IsBuiltin((*(_61237_m)).get()._field_Func.ptr())))) {
		if (((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Binded && ((*(_61237_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1a9dc4b4e_hasDirective(&((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_61237_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb44d3e:;
					if (it != expr_end) {
						jule::I64 _61926_i = it - expr->begin();
						jule::Ptr<_1a86ad01b_InsGeneric> _61933_g = *it;
						{
							_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _61933_g.get()._field_Kind));
							if ((((*(_61237_m)).get()._field_Func.get()._field_Generics.len() - _61926_i) > 1LL)) {
								_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1acb44d3e:;
						++it;
						_61926_i++;
						goto _iter_begin_1acb44d3e;
					}
					_iter_end_1acb44d3e:;
				};
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1a9612ca5_pushCallInf(_self_, _61237_m);
	jule::Bool _63017_locinfo = false;;
	if ((((!(_1a88d1294_IsBuiltin((*(_61237_m)).get()._field_Func.ptr()))) && ((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1a88cb008_IsSelf((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_61237_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1acb4822c:;
				{
					jule::Ptr<_1a88c37c5_StructSubIdentExprModel> _63425_ssie = (*(_61237_m)).get()._field_Expr.cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1a88cb26c_IsRef((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1acb4bb04:;
							{
								_1a9611b72_possibleRefExpr(_self_, _63425_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1a86b222e_Sptr(_63425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1acb49162:;
							{
								_1a9611b72_possibleRefExpr(_self_, _63425_ssie.get()._field_Expr.get()._field_Model);
								_1a9da9084_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_1ce99b3e3_Production))) {
									_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1a9dab2a6_locInfo(_self_.get()._field_oc, &((*(_61237_m)).get()._field_Token));
									_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1acb490eb:;
							{
								if ((_1a86b341c_Struct(_63425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _63425_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1acb48a8a:;
											{
												jule::Ptr<_1a8966901_Var> _65133_v = _63425_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_1a8966901_Var>(&__jule_any_type8);;
												if (_65133_v.get()._field_Reference) {
													goto _match_end_1acb49b68;
												};
												goto _case_begin_1acb49bbd;
											}
										}
										else {
											_case_begin_1acb49bbd:;
											{
												_1a9da9084_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1acb49b68:;
									};
								};
								if (_61313_wrapped) {
									_1a9da9084_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1a961ae23_model(_self_, _63425_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1acb49085:;
					};
					if (((*(_61237_m)).get()._field_Args.len() > 0LL)) {
						_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_1acb48293:;
				{
					_1a9611b72_possibleRefExpr(_self_, (*(_61237_m)).get()._field_Expr.cast_ptr<_1a88c2ede_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_1ce99b3e3_Production))) {
						_63017_locinfo=true;
					};
					if (((*(_61237_m)).get()._field_Args.len() > 0LL)) {
						_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1acb4801d:;
		};
	};
	_1a96127aa_args(_self_, _61237_m);
	if (_63017_locinfo) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1a9dab2a6_locInfo(_self_.get()._field_oc, &((*(_61237_m)).get()._field_Token));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_61313_wrapped) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1a96135ad_coFuncCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c0e54_FnCallExprModel>* _69335_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	jule::Str _69617_head = jule::Str("std::thread([", 13);;
	if (((*(_69335_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		(_69617_head).append("_self_", 6);
		if (((*(_69335_m)).get()._field_Args.len() > 0LL)) {
			(_69617_head).append(", ", 2);
		};
	};
	{
		auto expr = &((*(_69335_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb55b85:;
		if (it != expr_end) {
			jule::I64 _70313_i = it - expr->begin();
			jule::Any _70316_arg = *it;
			{
				if ((_70313_i > 0LL)) {
					(_69617_head).append(", ", 2);
				};
				{
					auto &_match_expr{ _70316_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1acb566e1:;
						{
							jule::Ptr<_1a8966901_Var> _70925_v = _70316_arg.cast_ptr<_1a8966901_Var>(&__jule_any_type8);;
							_69617_head+=static__1a9624932_var(_70925_v);
							goto _iter_next_1acb55b85;
						}
					}
					_match_end_1acb568cd:;
				};
				jule::Str _71317_name = (jule::Str("_co_arg_", 8) + _1a5530c2c_Itoa(_70313_i));;
				_69617_head+=_71317_name;
				_1a9da988c_indent(_self_.get()._field_oc);
				_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_69335_m)).get()._field_Func.get()._field_Params[_70313_i].get()._field_Kind));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_69335_m)).get()._field_Func.get()._field_Params[_70313_i].get()._field_Decl.get()._field_Reference) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1a9da9309_writeR(_self_.get()._field_oc, &(_71317_name));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a9611b72_possibleRefExpr(_self_, _70316_arg);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _72517_argS = jule::Any(_71317_name, &__jule_any_type5);;
				(*(_69335_m)).get()._field_Args[_70313_i]=(*(((jule::Any*)((&(_72517_argS))))));
			}
			_iter_next_1acb55b85:;
			++it;
			_70313_i++;
			goto _iter_begin_1acb55b85;
		}
		_iter_end_1acb55b85:;
	};
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9309_writeR(_self_.get()._field_oc, &(_69617_head));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9613338_pureFuncCall(_self_, _69335_m);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a96138cc_writeUseExpr(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88cee0d_FnIns>* _74337_f, jule::Ptr<_1a865dbe2_Data> _74352_d) {
	if ((_1a86b3b59_Tup(_74352_d.get()._field_Kind.ptr()) == nullptr)) {
		_1a9611b72_possibleRefExpr(_self_, _74352_d.get()._field_Model);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1a88c4b7d_TupleExprModel> _74917_tup = _74352_d.get()._field_Model.cast_ptr<_1a88c4b7d_TupleExprModel>(&__jule_any_type87);;
	_1a9dc2476_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _1a86b3b59_Tup((*(_74337_f)).get()._field_Result.ptr()));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_74917_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb61971:;
		if (it != expr_end) {
			jule::I64 _75213_i = it - expr->begin();
			jule::Ptr<_1a865dbe2_Data> _75216_data = *it;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(_75213_i));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1a9611b72_possibleRefExpr(_self_, _75216_data.get()._field_Model);
				if (((_74917_tup.get()._field_Datas.len() - _75213_i) > 1LL)) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1acb61971:;
			++it;
			_75213_i++;
			goto _iter_begin_1acb61971;
		}
		_iter_end_1acb61971:;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1a9613b52_funcCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c0e54_FnCallExprModel> _76432_m) {
	if (_76432_m.get()._field_IsCo) {
		_1a96135ad_coFuncCall(_self_, &(_76432_m));
		return;;
	};
	if (((_1a88d1294_IsBuiltin(_76432_m.get()._field_Func.ptr()) || (!(_76432_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_76432_m.get()._field_Except != nullptr) && (_76432_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1a9613338_pureFuncCall(_self_, &(_76432_m));
		return;;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1a9613338_pureFuncCall(_self_, &(_76432_m));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a9da988c_indent(_self_.get()._field_oc);
	if ((_76432_m.get()._field_Except != nullptr)) {
		if (((_76432_m.get()._field_Func.get()._field_Result == nullptr) || (!(_76432_m.get()._field_Assigned)))) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1a960ac6a_scope(_self_.get()._field_oc.get()._field_sc, _76432_m.get()._field_Except);
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _79021_forwarded = _1a961cae5_isForwarded(&(_76432_m.get()._field_Except));;
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_79021_forwarded) {
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _79525_stmt = _76432_m.get()._field_Except.get()._field_Stmts[(_76432_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79525_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1acb6a095:;
					{
						_76432_m.get()._field_Except.get()._field_Stmts=_76432_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_76432_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1a9da9084_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1a9da94d5_addIndent(_self_.get()._field_oc);
						_1a960a9e5_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_76432_m.get()._field_Except));
						_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1a9da988c_indent(_self_.get()._field_oc);
						_1a96138cc_writeUseExpr(_self_, &(_76432_m.get()._field_Func), _79525_stmt.cast_ptr<_1a865dbe2_Data>(&__jule_any_type24));
						_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1a9da96b1_doneIndent(_self_.get()._field_oc);
						_1a9da988c_indent(_self_.get()._field_oc);
						_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1acb6ad32:;
					{
						_1a960ac6a_scope(_self_.get()._field_oc.get()._field_sc, _76432_m.get()._field_Except);
					}
				}
				_match_end_1acb6accc:;
			};
			if (_79021_forwarded) {
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1a961b198_initExpr(_self_, _76432_m.get()._field_Func.get()._field_Result);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1a9da9084_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1a9da96b1_doneIndent(_self_.get()._field_oc);
	} else {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a9dab2a6_locInfo(_self_.get()._field_oc, &(_76432_m.get()._field_Token));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1a88cc6be_IsVoid(_76432_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1a9da988c_indent(_self_.get()._field_oc);
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1a9da96b1_doneIndent(_self_.get()._field_oc);
	};
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a9613dc7_slice(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c130b_SliceExprModel> _83529_m) {
	if ((_83529_m.get()._field_Elems.len() == 0LL)) {
		_1a9da9084_write(_self_.get()._field_oc, _1a9dba2d7_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83529_m.get()._field_ElemKind));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1a9da9084_write(_self_.get()._field_oc, _1a9dba2d7_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83529_m.get()._field_ElemKind));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1a9612535_models(_self_, _83529_m.get()._field_Elems);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a961414c_indexing(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c177e_IndexingExprModel> _84732_m) {
	_1a9611b72_possibleRefExpr(_self_, _84732_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_1ce99b3e3_Production || (_1a86b2493_Ptr(_84732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1a86b38e5_Map(_84732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1a961d0e0_isExprComesFromBind(&(_84732_m.get()._field_Expr))) {
			_case_begin_1acb76007:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a9611b72_possibleRefExpr(_self_, _84732_m.get()._field_Index.get()._field_Model);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1acb76634:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1a9dab2a6_locInfo(_self_.get()._field_oc, &(_84732_m.get()._field_Token));
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_1a9611b72_possibleRefExpr(_self_, _84732_m.get()._field_Index.get()._field_Model);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1acb765ce:;
	};
}



inline void _1a96143c2_unsafeIndexing(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a8784510_UnsafeIndexingExprModel> _86738_m) {
	_1a9611b72_possibleRefExpr(_self_, _86738_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_1ce99b3e3_Production || (_1a86b2493_Ptr(_86738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1a86b38e5_Map(_86738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acb78e83:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a9611b72_possibleRefExpr(_self_, _86738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1acb7a490:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1a9611b72_possibleRefExpr(_self_, _86738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1acb7a429:;
	};
}



inline void _1a9614647_anonFunc(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c1b36_AnonFnExprModel> _88432_m) {
	_1a9da9084_write(_self_.get()._field_oc, _1a9dbccac_func(_self_.get()._field_oc.get()._field_tc.ptr(), _88432_m.get()._field_Func));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1a9db1289_paramsIns(_self_.get()._field_oc, &(_88432_m.get()._field_Func.get()._field_Params));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1a9dbc691_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_88432_m.get()._field_Func));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a960aee0_funcScope(_self_.get()._field_oc.get()._field_sc, _88432_m.get()._field_Func);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a96148bc_mapExpr(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c2461_MapExprModel> _89531_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89531_m.get()._field_KeyKind));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89531_m.get()._field_ValKind));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_89531_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_89531_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acb83564:;
			if (it != expr_end) {
				jule::I64 _90218_i = it - expr->begin();
				jule::Ptr<_1a88c1edd_KeyValPairExprModel> _90225_pair = *it;
				{
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1a9611b72_possibleRefExpr(_self_, _90225_pair.get()._field_Key);
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1a9611b72_possibleRefExpr(_self_, _90225_pair.get()._field_Val);
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_89531_m.get()._field_Entries.len() - _90218_i) > 1LL)) {
						_1a9da9084_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1acb83564:;
				++it;
				_90218_i++;
				goto _iter_begin_1acb83564;
			}
			_iter_end_1acb83564:;
		};
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a9614b42_slicing(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c29a0_SlicingExprModel> _91631_m) {
	_1a9611b72_possibleRefExpr(_self_, _91631_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_1ce99b3e3_Production))) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a9dab2a6_locInfo(_self_.get()._field_oc, &(_91631_m.get()._field_Token));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1a9611b72_possibleRefExpr(_self_, _91631_m.get()._field_Left);
	if ((_91631_m.get()._field_Right != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a9611b72_possibleRefExpr(_self_, _91631_m.get()._field_Right);
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9614db7_traitSub(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c2ede_TraitSubIdentExprModel> _93232_m) {
	_1a9da9084_write(_self_.get()._field_oc, static__1a9623b0c_traitDecl(_93232_m.get()._field_Trt));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1a9611b72_possibleRefExpr(_self_, _93232_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1a9da9084_write(_self_.get()._field_oc, static__1a96235bd_func(&(_93232_m.get()._field_Method)));
}



inline void _1a961513c_structureSub(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c37c5_StructSubIdentExprModel> _94136_m) {
	_1a9611b72_possibleRefExpr(_self_, _94136_m.get()._field_Expr.get()._field_Model);
	if ((_94136_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_1a86b2493_Ptr(_94136_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_1a86b222e_Sptr(_94136_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_1ce99b3e3_Production))) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_1a9dab2a6_locInfo(_self_.get()._field_oc, &(_94136_m.get()._field_Token));
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1a9da9084_write(_self_.get()._field_oc, static__1a962468a_field(&(_94136_m.get()._field_Field.get()._field_Decl)));
}



inline void _1a96153b2_commonIdent(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c4320_CommonIdentExprModel> _96231_m) {
	_1a9da9309_writeR(_self_.get()._field_oc, &(_96231_m.get()._field_Ident));
}



inline void _1a9615637_commonSub(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c4881_CommonSubIdentExprModel> _96633_m) {
	_1a9611b72_possibleRefExpr(_self_, _96633_m.get()._field_Expr);
	{
		
		if ((_1a86b2493_Ptr(_96633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1acb90e56:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1a86b222e_Sptr(_96633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1acb9151c:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_1ce99b3e3_Production))) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a9dab2a6_locInfo(_self_.get()._field_oc, &(_96633_m.get()._field_Token));
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1acb914a6:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1acb91440:;
	};
	_1a9da9309_writeR(_self_.get()._field_oc, &(_96633_m.get()._field_Ident));
}



inline void _1a96158ac_array(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c4034_ArrayExprModel> _98529_m) {
	_1a9da9084_write(_self_.get()._field_oc, _1a9dbb948_array(_self_.get()._field_oc.get()._field_tc.ptr(), _98529_m.get()._field_Kind));
	if ((_98529_m.get()._field_Elems.len() == 0LL)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_98529_m.get()._field_Elems.len() == 2LL) && (_98529_m.get()._field_Elems[1LL] == nullptr))) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a9611b72_possibleRefExpr(_self_, _98529_m.get()._field_Elems[0LL]);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1a9612535_models(_self_, _98529_m.get()._field_Elems);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1a9615b32_funcInsCommon(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88cee0d_FnIns> _100837_m) {
	_1a9da9084_write(_self_.get()._field_oc, _1a9dbccac_func(_self_.get()._field_oc.get()._field_tc.ptr(), _100837_m));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9615da7_funcIns(_self_, _100837_m);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9615da7_funcIns(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88cee0d_FnIns> _101531_m) {
	if (((_101531_m.get()._field_Decl != nullptr) && _101531_m.get()._field_Decl.get()._field_Binded)) {
		jule::Ptr<_1a88645ce_Directive> _101717_d = _1a9dc47b9_findDirective(&(_101531_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_101717_d != nullptr)) {
			_1a9da9084_write(_self_.get()._field_oc, _1a9db55ac_concatAllParts(_101717_d.get()._field_Args));
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a9da9084_write(_self_.get()._field_oc, static__1a9623865_funcIns(&(_101531_m)));
}



inline void _1a961612c_tuple(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c4b7d_TupleExprModel> _102629_m) {
	{
		auto expr = &(_102629_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb9c292:;
		if (it != expr_end) {
			jule::I64 _102714_i = it - expr->begin();
			jule::Ptr<_1a865dbe2_Data> _102721_d = *it;
			{
				_1a9611b72_possibleRefExpr(_self_, _102721_d.get()._field_Model);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_102629_m.get()._field_Datas.len() - _102714_i) > 1LL)) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a9da988c_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1acb9c292:;
			++it;
			_102714_i++;
			goto _iter_begin_1acb9c292;
		}
		_iter_end_1acb9c292:;
	};
}



inline void _1a96163a2_newCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c5b4b_BuiltinNewCallExprModel> _103731_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _103731_m.get()._field_Kind));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_103731_m.get()._field_Init != nullptr)) {
		_1a9611b72_possibleRefExpr(_self_, _103731_m.get()._field_Init);
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9616627_outCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c5057_BuiltinOutCallExprModel> _104731_m) {
	if ((_104731_m.get()._field_Debug && _1ce99b3e3_Production)) {
		return;;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1a9611b72_possibleRefExpr(_self_, _104731_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a961689c_outlnCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c5442_BuiltinOutlnCallExprModel> _105633_m) {
	if ((_105633_m.get()._field_Debug && _1ce99b3e3_Production)) {
		return;;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a9611b72_possibleRefExpr(_self_, _105633_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9616b22_panicCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c6036_BuiltinPanicCallExprModel> _106533_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1a9611b72_possibleRefExpr(_self_, _106533_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1a9dab2a6_locInfo(_self_.get()._field_oc, &(_106533_m.get()._field_Token));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a9616d97_assertCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c64dc_BuiltinAssertCallExprModel> _107334_m) {
	if (_1ce99b3e3_Production) {
		return;;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1a9611b72_possibleRefExpr(_self_, _107334_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1a9da9084_write(_self_.get()._field_oc, _1a961bde1_cstrLit(static_cast<jule::Slice<jule::U8>>(_107334_m.get()._field_Log)));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1a9dab2a6_locInfo(_self_.get()._field_oc, &(_107334_m.get()._field_Token));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a961711c_errorCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c83bd_BuiltinErrorCallExprModel> _108633_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1a88cc6be_IsVoid(_108633_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _108633_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1acba8aea:;
				{
					jule::Ptr<_1a8966901_Var> _109121_v = _108633_m.get()._field_Err.get()._field_Model.cast_ptr<_1a8966901_Var>(&__jule_any_type8);;
					if (_109121_v.get()._field_Ident.equal("error", 5)) {
						_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1acba8a95:;
		};
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1a9dc2ab4_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_108633_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _108633_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1acbab647:;
				{
					jule::Ptr<_1a8966901_Var> _110321_v = _108633_m.get()._field_Err.get()._field_Model.cast_ptr<_1a8966901_Var>(&__jule_any_type8);;
					if (_110321_v.get()._field_Ident.equal("error", 5)) {
						_1a9da9084_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1acbab56a:;
		};
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1a9611b72_possibleRefExpr(_self_, _108633_m.get()._field_Err.get()._field_Model);
	jule::I64 _111213_i = _1a9da9ea8_pushAnyType(_self_.get()._field_oc, _108633_m.get()._field_Err.get()._field_Kind);;
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(_111213_i));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a9617392_copyCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c7ed3_BuiltinCopyCallExprModel> _111832_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1a9611b72_possibleRefExpr(_self_, _111832_m.get()._field_Dest.get()._field_Model);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1a86b1eba_Prim(_111832_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1a9611b72_possibleRefExpr(_self_, _111832_m.get()._field_Src.get()._field_Model);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1a86b1eba_Prim(_111832_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9617617_lenCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c719c_BuiltinLenCallExprModel> _113431_m) {
	_1a9611b72_possibleRefExpr(_self_, _113431_m.get()._field_Expr.get()._field_Model);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1a961788c_capCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c74bb_BuiltinCapCallExprModel> _113931_m) {
	_1a9611b72_possibleRefExpr(_self_, _113931_m.get()._field_Expr.get()._field_Model);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1a9617b12_deleteCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c7b70_BuiltinDeleteCallExprModel> _114434_m) {
	_1a9611b72_possibleRefExpr(_self_, _114434_m.get()._field_Dest.get()._field_Model);
	if ((_114434_m.get()._field_Key != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1a9611b72_possibleRefExpr(_self_, _114434_m.get()._field_Key.get()._field_Model);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1a9617d87_makeCallSlice(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c6993_BuiltinMakeCallExprModel>* _115538_m) {
	jule::Ptr<_1a86bb1b1_Slc> _115617_slice = _1a86b2e44_Slc((*(_115538_m)).get()._field_Kind.ptr());;
	_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_115538_m)).get()._field_Kind));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a9611b72_possibleRefExpr(_self_, (*(_115538_m)).get()._field_Len);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_115538_m)).get()._field_Cap != nullptr)) {
		_1a9611b72_possibleRefExpr(_self_, (*(_115538_m)).get()._field_Cap);
	} else {
		_1a9611b72_possibleRefExpr(_self_, (*(_115538_m)).get()._field_Len);
	};
	if (_1a9dc4de6_shouldInitialized(&(_115617_slice.get()._field_Elem))) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a961b198_initExpr(_self_, _115617_slice.get()._field_Elem);
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a961810c_makeCallStr(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c6993_BuiltinMakeCallExprModel>* _117336_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a9611b72_possibleRefExpr(_self_, (*(_117336_m)).get()._field_Len);
	if (((*(_117336_m)).get()._field_Cap != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a9611b72_possibleRefExpr(_self_, (*(_117336_m)).get()._field_Cap);
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9618382_makeCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c6993_BuiltinMakeCallExprModel> _118432_m) {
	if ((_1a86b2e44_Slc(_118432_m.get()._field_Kind.ptr()) != nullptr)) {
		_1a9617d87_makeCallSlice(_self_, &(_118432_m));
		return;;
	};
	_1a961810c_makeCallStr(_self_, &(_118432_m));
}



inline void _1a9618607_pushToSlice(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a8784895_PushToSliceExprModel> _119235_m) {
	;
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("{ ", 2));
	_1a9da9084_write(_self_.get()._field_oc, _1a9dba2d7_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _119235_m.get()._field_Elems.get()._field_ElemKind));
	jule::Bool _120017_ptr = false;;
	{
		auto &_match_expr{ _119235_m.get()._field_Dest };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1acbbd978:;
			{
				jule::Ptr<_1a88be3c5_UnaryExprModel> _120421_u = _119235_m.get()._field_Dest.cast_ptr<_1a88be3c5_UnaryExprModel>(&__jule_any_type74);;
				if ((_1a86b2493_Ptr(_120421_u.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(" *__jule_push_dest = ", 21));
					_1a9611b72_possibleRefExpr(_self_, _120421_u.get()._field_Expr.get()._field_Model);
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("; ", 2));
					_120017_ptr=true;
					goto _match_end_1acbbee30;
				};
				goto _case_begin_1acbbee85;
			}
		}
		else {
			_case_begin_1acbbee85:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str(" &__jule_push_dest = ", 21));
				_1a9611b72_possibleRefExpr(_self_, _119235_m.get()._field_Dest);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("; ", 2));
			}
		}
		_match_end_1acbbee30:;
	};
	if ((_119235_m.get()._field_Elems.get()._field_Elems.len() == 1LL)) {
		if (_120017_ptr) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->push(", 23));
		} else {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.push(", 22));
		};
		_1a9611b72_possibleRefExpr(_self_, _119235_m.get()._field_Elems.get()._field_Elems[0LL]);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("); }", 4));
		return;;
	};
	if (_120017_ptr) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(static_cast<jule::I64>(_119235_m.get()._field_Elems.get()._field_Elems.len())));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("); ", 3));
	{
		auto expr = &(_119235_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbc5e58:;
		if (it != expr_end) {
			jule::Any _123821_e = *it;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("__jule_push_dest", 16));
				if (_120017_ptr) {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("->__push(", 9));
				} else {
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				};
				_1a9611b72_possibleRefExpr(_self_, _123821_e);
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("); ", 3));
			}
			_iter_next_1acbc5e58:;
			++it;
			goto _iter_begin_1acbc5e58;
		}
		_iter_end_1acbc5e58:;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a961887c_appendToSlice(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a8784c4c_AppendToSliceExprModel> _125237_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9611b72_possibleRefExpr(_self_, _125237_m.get()._field_Dest);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	_1a9611b72_possibleRefExpr(_self_, _125237_m.get()._field_Slice);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1a9618b02_appendCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c6d7d_BuiltinAppendCallExprModel> _126034_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1a9611b72_possibleRefExpr(_self_, _126034_m.get()._field_Dest);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a9611b72_possibleRefExpr(_self_, _126034_m.get()._field_Elements);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9618d77_cloneCall(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c5761_BuiltinCloneCallExprModel> _126833_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1a9611b72_possibleRefExpr(_self_, _126833_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a96190ec_sizeof(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c86ba_SizeofExprModel> _127430_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1a9611b72_possibleRefExpr(_self_, _127430_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9619372_alignof(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c89a6_AlignofExprModel> _128031_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1a9611b72_possibleRefExpr(_self_, _128031_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1a9619680_runeLit(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c8c92_RuneExprModel> _128627_m) {
	if ((_128627_m.get()._field_Code <= 127LL)) {
		jule::Str _128821_b = _1a961b82a_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_128627_m.get()._field_Code)));;
		if (_128821_b.equal("'", 1)) {
			_128821_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _128821_b) + jule::Str("'", 1));;
	};
	return _1a961c496_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_128627_m.get()._field_Code)));;
}



inline void _1a9619905_structureStatic(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c3b6b_StructStaticIdentExprModel> _129739_m) {
	_1a9da9084_write(_self_.get()._field_oc, static__1a9623865_funcIns(&(_129739_m.get()._field_Method)));
}



inline void _1a9619b7a_integratedToStr(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c90a0_IntegratedToStrExprModel> _130139_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1a9611b72_possibleRefExpr(_self_, _130139_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9619e00_backendEmit(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c9468_BackendEmitExprModel> _130735_m) {
	if ((_130735_m.get()._field_Exprs.len() == 0LL)) {
		_1a9da9309_writeR(_self_.get()._field_oc, &(_130735_m.get()._field_Code));
		return;;
	};
	jule::I64 _131213_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _131317_args = jule::Slice<jule::Any>::alloc(_130735_m.get()._field_Exprs.len(), _130735_m.get()._field_Exprs.len());;
	{
		auto expr = &(_130735_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acbd299d:;
		if (it != expr_end) {
			jule::I64 _131414_i = it - expr->begin();
			jule::Any _131421_expr = *it;
			{
				_1a9611b72_possibleRefExpr(_self_, _131421_expr);
				_131317_args[_131414_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_131213_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _131213_n);
			}
			_iter_next_1acbd299d:;
			++it;
			_131414_i++;
			goto _iter_begin_1acbd299d;
		}
		_iter_end_1acbd299d:;
	};
	_1a9da9084_write(_self_.get()._field_oc, _1a877281c_Format(_130735_m.get()._field_Code, _131317_args));
}



inline void _1a961a175_free(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a88c9754_FreeExprModel> _132228_m) {
	_1a9611b72_possibleRefExpr(_self_, _132228_m.get()._field_Expr);
	if (_1ce99ac50_RC) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1a961a3ea_mutSlicing(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a878528b_MutSlicingExprModel> _133134_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9611b72_possibleRefExpr(_self_, _133134_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_1ce99b3e3_Production))) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a9dab2a6_locInfo(_self_.get()._field_oc, &(_133134_m.get()._field_Token));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1a9611b72_possibleRefExpr(_self_, _133134_m.get()._field_Left);
	if ((_133134_m.get()._field_Right != nullptr)) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a9611b72_possibleRefExpr(_self_, _133134_m.get()._field_Right);
	};
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1a961a670_strInsertBegin(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a8785775_StrInsertBeginExprModel> _134838_m) {
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9611b72_possibleRefExpr(_self_, _134838_m.get()._field_Dest);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1a9611b72_possibleRefExpr(_self_, _134838_m.get()._field_Expr);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1a961a8e5_strComp(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a87839c6_StrCompExprModel> _135631_m) {
	if (_135631_m.get()._field_NotEq) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Slice<jule::U8> _136013_bytes = static_cast<jule::Slice<jule::U8>>(_1a5542700_ReadStr(_135631_m.get()._field_Right.ptr()));;
	_1a9611b72_possibleRefExpr(_self_, _135631_m.get()._field_Left);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_1a9da9084_write(_self_.get()._field_oc, _1a961bde1_cstrLit(_136013_bytes));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(static_cast<jule::I64>(_136013_bytes.len())));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_135631_m.get()._field_NotEq) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a961ab8c_inlineStdInternalNosafeStobs(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a8785a1c_InlineStdInternalNosafeStobs> _137252_m) {
	_1a9611b72_possibleRefExpr(_self_, _137252_m.get()._field_Str);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
}



inline void _1a961ae23_model(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Any _137729_m) {
	{
		auto &_match_expr{ _137729_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1acbe10b6:;
			{
				_1a9da9084_write(_self_.get()._field_oc, _137729_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1acbe1391:;
			{
				_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _137729_m.cast_ptr<_1a86ae79d_TypeKind>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1acbe1407:;
			{
				_1a96102be_constant(_self_, _137729_m.cast_ptr<_1a55406ba_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acbe146d:;
			{
				_1a9610e07_var(_self_, _137729_m.cast_ptr<_1a8966901_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1acbe14d4:;
			{
				_1a961117c_structureIns(_self_, _137729_m.cast_ptr<_1a88b9b51_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1acbe1e63:;
			{
				_1a9615b32_funcInsCommon(_self_, _137729_m.cast_ptr<_1a88cee0d_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1acbe1ec9:;
			{
				_1a961090c_unsafeBinary(_self_, _137729_m.cast_ptr<_1a878417a_UnsafeBinopExprModel>(&__jule_any_type129).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1acbe2040:;
			{
				_1a9610b82_binary(_self_, _137729_m.cast_ptr<_1a88be01d_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1acbe20a6:;
			{
				_1a9611402_unary(_self_, _137729_m.cast_ptr<_1a88be3c5_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1acbe211c:;
			{
				_1a9611677_structureLit(_self_, _137729_m.cast_ptr<_1a88bec44_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1acbe2183:;
			{
				_1a96118ec_allocStructure(_self_, _137729_m.cast_ptr<_1a88c0052_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1acbe21e9:;
			{
				_1a96122b0_casting(_self_, _137729_m.cast_ptr<_1a88c05a2_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1acbe2260:;
			{
				_1a9613b52_funcCall(_self_, _137729_m.cast_ptr<_1a88c0e54_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1acbe22c6:;
			{
				_1a9613dc7_slice(_self_, _137729_m.cast_ptr<_1a88c130b_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1acbe233c:;
			{
				_1a96158ac_array(_self_, _137729_m.cast_ptr<_1a88c4034_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1acbe23a3:;
			{
				_1a96143c2_unsafeIndexing(_self_, _137729_m.cast_ptr<_1a8784510_UnsafeIndexingExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1acbe2419:;
			{
				_1a961414c_indexing(_self_, _137729_m.cast_ptr<_1a88c177e_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1acbe2491:;
			{
				_1a9614647_anonFunc(_self_, _137729_m.cast_ptr<_1a88c1b36_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1acbe2518:;
			{
				_1a96148bc_mapExpr(_self_, _137729_m.cast_ptr<_1a88c2461_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1acbe2590:;
			{
				_1a9614b42_slicing(_self_, _137729_m.cast_ptr<_1a88c29a0_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1acbe2617:;
			{
				_1a9614db7_traitSub(_self_, _137729_m.cast_ptr<_1a88c2ede_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1acbe268e:;
			{
				_1a961513c_structureSub(_self_, _137729_m.cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1acbe2716:;
			{
				_1a96153b2_commonIdent(_self_, _137729_m.cast_ptr<_1a88c4320_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1acbe278d:;
			{
				_1a9615637_commonSub(_self_, _137729_m.cast_ptr<_1a88c4881_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1acbe2815:;
			{
				_1a961612c_tuple(_self_, _137729_m.cast_ptr<_1a88c4b7d_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1acbe288c:;
			{
				_1a9616627_outCall(_self_, _137729_m.cast_ptr<_1a88c5057_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1acbe2914:;
			{
				_1a961689c_outlnCall(_self_, _137729_m.cast_ptr<_1a88c5442_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1acbe298b:;
			{
				_1a96163a2_newCall(_self_, _137729_m.cast_ptr<_1a88c5b4b_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1acbe2a13:;
			{
				_1a9616b22_panicCall(_self_, _137729_m.cast_ptr<_1a88c6036_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1acbe2a8a:;
			{
				_1a9616d97_assertCall(_self_, _137729_m.cast_ptr<_1a88c64dc_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1acbe2b12:;
			{
				_1a961711c_errorCall(_self_, _137729_m.cast_ptr<_1a88c83bd_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1acbe2b89:;
			{
				_1a9618382_makeCall(_self_, _137729_m.cast_ptr<_1a88c6993_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1acbe2c11:;
			{
				_1a9618b02_appendCall(_self_, _137729_m.cast_ptr<_1a88c6d7d_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1acbe2c88:;
			{
				_1a9618d77_cloneCall(_self_, _137729_m.cast_ptr<_1a88c5761_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1acbe2d10:;
			{
				_1a9617392_copyCall(_self_, _137729_m.cast_ptr<_1a88c7ed3_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1acbe2d87:;
			{
				_1a9617617_lenCall(_self_, _137729_m.cast_ptr<_1a88c719c_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1acbe2e0e:;
			{
				_1a961788c_capCall(_self_, _137729_m.cast_ptr<_1a88c74bb_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1acbe2e86:;
			{
				_1a9617b12_deleteCall(_self_, _137729_m.cast_ptr<_1a88c7b70_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1acbe300d:;
			{
				_1a96190ec_sizeof(_self_, _137729_m.cast_ptr<_1a88c86ba_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1acbe3085:;
			{
				_1a9619372_alignof(_self_, _137729_m.cast_ptr<_1a88c89a6_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1acbe310c:;
			{
				_1a9da9084_write(_self_.get()._field_oc, _1a9619680_runeLit(_self_, _137729_m.cast_ptr<_1a88c8c92_RuneExprModel>(&__jule_any_type88)));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1acbe3184:;
			{
				_1a9619905_structureStatic(_self_, _137729_m.cast_ptr<_1a88c3b6b_StructStaticIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1acbe320b:;
			{
				_1a9619b7a_integratedToStr(_self_, _137729_m.cast_ptr<_1a88c90a0_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1acbe3283:;
			{
				_1a9619e00_backendEmit(_self_, _137729_m.cast_ptr<_1a88c9468_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1acbe330a:;
			{
				_1a961a175_free(_self_, _137729_m.cast_ptr<_1a88c9754_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1acbe3382:;
			{
				_1a961a3ea_mutSlicing(_self_, _137729_m.cast_ptr<_1a878528b_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1acbe3409:;
			{
				_1a961a670_strInsertBegin(_self_, _137729_m.cast_ptr<_1a8785775_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1acbe3481:;
			{
				_1a961a8e5_strComp(_self_, _137729_m.cast_ptr<_1a87839c6_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1acbe3508:;
			{
				_1a961ab8c_inlineStdInternalNosafeStobs(_self_, _137729_m.cast_ptr<_1a8785a1c_InlineStdInternalNosafeStobs>(&__jule_any_type131));
			}
		}
		else {
			_case_begin_1acbe123c:;
			{
				_1a9da9084_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1acbe1160:;
	};
}



inline void _1a961b198_initExpr(jule::Ptr<_1a960dbb3_exprCoder> _self_, jule::Ptr<_1a86ae79d_TypeKind> _148232_t) {
	if (_1a86b1519_NilCompatible(_148232_t.ptr())) {
		if ((_1a86b2493_Ptr(_148232_t.ptr()) != nullptr)) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _148232_t));
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1a86bbcb6_Tuple> _149217_tup = _1a86b3b59_Tup(_148232_t.ptr());;
	if ((_149217_tup != nullptr)) {
		_1a9dc2476_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _149217_tup);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_149217_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acc0bc80:;
			if (it != expr_end) {
				jule::I64 _149618_i = it - expr->begin();
				jule::Ptr<_1a86ae79d_TypeKind> _149625_tt = *it;
				{
					if ((!(_1a9dc4de6_shouldInitialized(&(_149625_tt))))) {
						goto _iter_next_1acc0bc80;
					};
					_1a9da9084_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1a9da9084_write(_self_.get()._field_oc, _1a5530c2c_Itoa(_149618_i));
					_1a9da9084_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1a961b198_initExpr(_self_, _149625_tt);
					if (((_149217_tup.get()._field_Types.len() - _149618_i) > 1LL)) {
						_1a9da9084_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1acc0bc80:;
				++it;
				_149618_i++;
				goto _iter_begin_1acc0bc80;
			}
			_iter_end_1acc0bc80:;
		};
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1a88e1c11_Enum> _151117_enm = _1a86b2707_Enum(_148232_t.ptr());;
	if ((_151117_enm != nullptr)) {
		_1a961ae23_model(_self_, _151117_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_1a86b7003_Prim> _151613_prim = _1a86b1eba_Prim(_148232_t.ptr());;
	if ((_151613_prim != nullptr)) {
		if (_1a55401ae_IsNum(_151613_prim.get()._field_Kind)) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1a86b9e90_IsBool(_151613_prim.ptr())) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1a86ba204_IsStr(_151613_prim.ptr())) {
			_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1a86b2bd0_Arr(_148232_t.ptr()) != nullptr)) {
		jule::Ptr<_1a86bd35b_Arr> _152821_arr = _1a86b2bd0_Arr(_148232_t.ptr());;
		_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _148232_t));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a961b198_initExpr(_self_, _152821_arr.get()._field_Elem);
		_1a9da9084_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1a88b9b51_StructIns> _153517_s = _1a86b341c_Struct(_148232_t.ptr());;
	if ((((_153517_s != nullptr) && _153517_s.get()._field_Decl.get()._field_Binded) && (_1a9dc47b9_findDirective(&(_153517_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _148232_t));
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1a9da9084_write(_self_.get()._field_oc, _1a9dbd0ba_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _148232_t));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a960dbb3_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a961d981_deriveCoder> static__1a961dd27_new(jule::Ptr<_1a9da8935_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_1a961d981_deriveCoder>(_1a961d981_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _1a961e135_cloneFuncDecl(_1a961d981_deriveCoder* _self_, jule::Ptr<_1a88b6d3a_Struct>* _1633_s) {
	jule::Str _1717_obj = _1a9dbb32c_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	(_1717_obj).append(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _1a961e443_cloneFuncDef(_1a961d981_deriveCoder* _self_, jule::Ptr<_1a88b6d3a_Struct>* _2232_s) {
	jule::Str _2317_obj = _1a9dbb32c_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	(_2317_obj).append("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a961d981_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9620367_TestCoder> static__1a9620796_New(jule::Ptr<_1a9da8935_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1a9620367_TestCoder>(_1a9620367_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a9620a0a_findTestingPackage(jule::Ptr<_1a9620367_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc1984d:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1acc1984d:;
			++it;
			goto _iter_begin_1acc1984d;
		}
		_iter_end_1acc1984d:;
	};
	return nullptr;;
}



inline void _1a9620c80_appendTest(jule::Ptr<_1a9620367_TestCoder> _self_, jule::Ptr<_1a88cee0d_FnIns> _4334_f) {
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9621445_callTmReset(_self_);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1a9da9084_write(_self_.get()._field_oc, _1a961bde1_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(" << std::endl;\n", 15));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, static__1a9623865_funcIns(&(_4334_f)));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1a9621005_appendPackageTests(jule::Ptr<_1a9620367_TestCoder> _self_, jule::Ptr<_1a8940e5d_Package>* _5843_p) {
	{
		auto expr = &((*(_5843_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc1de29:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &(_5921_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acc1e765:;
					if (it != expr_end) {
						jule::Ptr<_1a88cc25c_Fn> _6025_f = *it;
						{
							if (_1a9dc4b4e_hasDirective(&(_6025_f.get()._field_Directives), jule::Str("test", 4))) {
								_1a9620c80_appendTest(_self_, _6025_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1acc1e765:;
						++it;
						goto _iter_begin_1acc1e765;
					}
					_iter_end_1acc1e765:;
				};
			}
			_iter_next_1acc1de29:;
			++it;
			goto _iter_begin_1acc1de29;
		}
		_iter_end_1acc1de29:;
	};
}



inline jule::Bool _1a9621269_readyTestingPackage(jule::Ptr<_1a9620367_TestCoder> _self_) {
	jule::Ptr<_1a893d323_ImportInfo> _6917_p = _1a9620a0a_findTestingPackage(_self_);;
	if ((_6917_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1a893e401_FindStruct(_6917_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1a88baaec_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_1a88baaec_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_1a88baaec_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1a9621445_callTmReset(jule::Ptr<_1a9620367_TestCoder> _self_) {
	_1a9da9084_write(_self_.get()._field_oc, static__1a96235bd_func(&(_self_.get()._field_tmReset)));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a9621621_callTmFailed(jule::Ptr<_1a9620367_TestCoder> _self_) {
	_1a9da9084_write(_self_.get()._field_oc, static__1a96235bd_func(&(_self_.get()._field_tmFailed)));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a96217ec_callTmSkipped(jule::Ptr<_1a9620367_TestCoder> _self_) {
	_1a9da9084_write(_self_.get()._field_oc, static__1a96235bd_func(&(_self_.get()._field_tmSkipped)));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a96219c8_Serialize(jule::Ptr<_1a9620367_TestCoder> _self_) {
	_1a9db4c3d_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1a9db4a62_end(_self_.get()._field_oc);
	});;
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	if ((!(_1a9621269_readyTestingPackage(_self_)))) {
		_1a9da9084_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1a9da96b1_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1a9da9084_write(_self_.get()._field_oc, _1a9db8e84_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1a9dbb63a_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1a9da9084_write(_self_.get()._field_oc, _1a9dbb63a_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1a9da94d5_addIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1a9621621_callTmFailed(_self_);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1a96217ec_callTmSkipped(_self_);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1a9621005_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1a9da96b1_doneIndent(_self_.get()._field_oc);
	_1a9da988c_indent(_self_.get()._field_oc);
	_1a9da9084_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9620367_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a9622e3b_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		(_3521_obj).append("_", 1);
		_3521_obj+=_1a5530600_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		(_3521_obj).append("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	(_4217_obj).append("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__1a9623326_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	(_5517_obj).append("_", 1);
	_5517_obj+=_1a5530c2c_Itoa(_5423_row);
	_5517_obj+=_1a5530c2c_Itoa(_5433_col);
	(_5517_obj).append("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__1a96235bd_func(jule::Ptr<_1a88cc25c_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_Binded) {
			_case_begin_1acc346ae:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if ((*(_6521_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_1acc34725:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1a88cc933_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_1acc33b97:;
			{
				jule::Str _7221_obj = static__1a9622e3b_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1acc33a87:;
			{
				return static__1a9622e3b_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_1acc3337d:;
	};
}



inline jule::Str static__1a9623865_funcIns(jule::Ptr<_1a88cee0d_FnIns>* _8424_f) {
	if (_1a88d1294_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_Binded || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__1a96235bd_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__1a9622e3b_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__1a9623b0c_traitDecl(jule::Ptr<_1a88de47d_Trait> _9525_t) {
	if (_1a88e001c_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1a9622e3b_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1a9623da4_param(jule::Ptr<_1a88ca920_Param>* _10322_p) {
	if ((_1a526b00b_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _1a526ac64_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1a88cb008_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__1a9623326_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__1a9623326_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__1a962414b_structure(jule::Ptr<_1a88b6d3a_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_Binded) {
		if (_1a9dc4b4e_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__1a9622e3b_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__1a96243e3_structureIns(jule::Ptr<_1a88b9b51_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_Binded || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__1a962414b_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__1a9622e3b_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__1a962468a_field(jule::Ptr<_1a88b4266_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_Binded) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__1a9624932_var(jule::Ptr<_1a8966901_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_Binded) {
			_case_begin_1acc3d960:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_1acc3cd6b:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_1acc3cdd2:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1acc3ce48:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1acc3ceae:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1a5530c2c_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1acc3d201:;
			{
				return static__1a9623326_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_1acc3c596:;
			{
				return static__1a9622e3b_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1acc3c81b:;
	};
}



inline jule::Str static__1a9624bc9_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	(_16517_obj).append("_iter_begin_", 12);
	_16517_obj+=_1a5530600_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__1a9624e71_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	(_17317_obj).append("_iter_end_", 10);
	_17317_obj+=_1a5530600_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__1a9625218_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	(_18117_obj).append("_iter_next_", 11);
	_18117_obj+=_1a5530600_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__1a96254b0_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	(_18917_obj).append("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__1a9625757_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	(_19717_obj).append("_match_end_", 11);
	_19717_obj+=_1a5530600_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__1a96259ee_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	(_20517_obj).append("_case_begin_", 12);
	_20517_obj+=_1a5530600_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a96228a8_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9da7093_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9da755a_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9da7912_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9db7504_Str(_1a9db725c_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a9db7812_Equal(jule::Ptr<_1a9db725c_customType> _self_, jule::Ptr<_1a86ae79d_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9db725c_customType _Src) {
	_Stream << _1a9db7504_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a9db7c0d_typeCoder> static__1a9db824c_new(jule::Ptr<_1a9da8935_ObjectCoder>* _6324_oc) {
	jule::Ptr<_1a9db7c0d_typeCoder> _6417_tc = jule::new_ptr<_1a9db7c0d_typeCoder>(_1a9db7c0d_typeCoder{._field_oc=(*(_6324_oc)), });;
	_6417_tc.get()._field_rc=static__1a9dc0c8d_new(&(_6417_tc));
	return _6417_tc;;
}



inline jule::Str _1a9db855a_toType(_1a9db7c0d_typeCoder* _self_, jule::Str _7029_id) {
	if ((!_7029_id.equal("uintptr", 7))) {
		_7029_id=_1a5532aec_RealKindOf(_7029_id);
	};
	if (((97LL <= _7029_id[0LL]) && (_7029_id[0LL] <= 122LLU))) {
		_7029_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _7029_id);;
}



inline jule::Str _1a9db8868_prim(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a86b7003_Prim> _8123_p) {
	return _1a9db855a_toType(_self_, _1a86b7333_Str(_8123_p.ptr()));;
}



inline jule::Str _1a9db8b76_tuple(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a86bbcb6_Tuple> _8628_t) {
	jule::Str _8717_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8628_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd53d1c:;
		if (it != expr_end) {
			jule::Ptr<_1a86ae79d_TypeKind> _8821_tk = *it;
			{
				_8717_obj+=_1a9dbd0ba_kind(_self_, _8821_tk);
				(_8717_obj).append(",", 1);
			}
			_iter_next_1acd53d1c:;
			++it;
			goto _iter_begin_1acd53d1c;
		}
		_iter_end_1acd53d1c:;
	};
	(_8717_obj).mut_slice(0LL, (_8717_obj.len() - 1LL));;
	(_8717_obj).append(">", 1);
	return _8717_obj;;
}



inline jule::Str _1a9db8e84_asSptr(_1a9db7c0d_typeCoder* _self_, jule::Str _9825_elem) {
	jule::Str _9917_obj = jule::Str("jule::Ptr<", 10);;
	_9917_obj+=_9825_elem;
	(_9917_obj).append(">", 1);
	return _9917_obj;;
}



inline jule::Str _1a9db9292_asPtr(_1a9db7c0d_typeCoder* _self_, jule::Str _10624_elem) {
	return (_10624_elem + jule::Str("*", 1));;
}



inline jule::Str _1a9db95a0_sptr(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a86ba754_Sptr> _11127_sptr) {
	return _1a9db8e84_asSptr(_self_, _1a9dbd0ba_kind(_self_, _11127_sptr.get()._field_Elem));;
}



inline jule::Str _1a9db98ad_ptr(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a86bdcb8_Ptr> _11626_p) {
	;
	if (_1a86be78b_IsUnsafe(_11626_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12117_elem = _1a9dbd0ba_kind(_self_, _11626_p.get()._field_Elem);;
	(_12117_elem).append("*", 1);
	return _12117_elem;;
}



inline jule::Str _1a9db9bbb_enumDecl(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a88e1c11_Enum> _12731_e) {
	return _1a9dbd0ba_kind(_self_, _12731_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1a9db9ec9_typeEnumDecl(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a88e330b_TypeEnum> _13235_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1a9dba2d7_asSlice(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a86ae79d_TypeKind> _13630_elem) {
	jule::Str _13717_obj = jule::Str("jule::Slice<", 12);;
	_13717_obj+=_1a9dbd0ba_kind(_self_, _13630_elem);
	(_13717_obj).append(">", 1);
	return _13717_obj;;
}



inline jule::Str _1a9dba5e5_slice(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a86bb1b1_Slc> _14428_s) {
	return _1a9dba2d7_asSlice(_self_, _14428_s.get()._field_Elem);;
}



inline jule::Str _1a9dba903_mapType(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a86bc767_Map> _14930_m) {
	jule::Str _15017_obj = jule::Str("jule::Map<", 10);;
	_15017_obj+=_1a9dbd0ba_kind(_self_, _14930_m.get()._field_Key);
	(_15017_obj).append(",", 1);
	_15017_obj+=_1a9dbd0ba_kind(_self_, _14930_m.get()._field_Val);
	(_15017_obj).append(">", 1);
	return _15017_obj;;
}



inline jule::Str _1a9dbac11_traitIdent(_1a9db7c0d_typeCoder* _self_, jule::Str _15829_ident) {
	jule::Str _15917_obj = jule::Str("jule::Trait<", 12);;
	_15917_obj+=_15829_ident;
	(_15917_obj).append(">", 1);
	return _15917_obj;;
}



inline jule::Str _1a9dbb01e_traitDecl(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a88de47d_Trait> _16628_t) {
	return _1a9dbac11_traitIdent(_self_, static__1a9623b0c_traitDecl(_16628_t));;
}



inline jule::Str _1a9dbb32c_structure(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a88b6d3a_Struct> _17128_s) {
	jule::Str _17217_rep = jule::Str();;
	if ((_17128_s.get()._field_Binded && (!(_1a9dc4b4e_hasDirective(&(_17128_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		(_17217_rep).append("struct ", 7);
	};
	_17217_rep+=static__1a962414b_structure(&(_17128_s));
	return _17217_rep;;
}



inline jule::Str _1a9dbb63a_structureIns(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a88b9b51_StructIns> _18135_s) {
	if (_18135_s.get()._field_Decl.get()._field_Binded) {
		jule::Str _18321_ident = static__1a96243e3_structureIns(&(_18135_s));;
		if ((_18135_s.get()._field_Generics.len() > 0LL)) {
			(_18321_ident).append("<", 1);
			{
				auto expr = &(_18135_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1acd5e93d:;
				if (it != expr_end) {
					jule::Ptr<_1a86ad01b_InsGeneric> _18629_g = *it;
					{
						_18321_ident+=_1a9dbd0ba_kind(_self_, _18629_g.get()._field_Kind);
						(_18321_ident).append(",", 1);
					}
					_iter_next_1acd5e93d:;
					++it;
					goto _iter_begin_1acd5e93d;
				}
				_iter_end_1acd5e93d:;
			};
			(_18321_ident).mut_slice(0LL, (_18321_ident.len() - 1LL));;
			(_18321_ident).append(">", 1);
		};
		jule::Ptr<_1a88645ce_Directive> _19317_d = _1a9dc47b9_findDirective(&(_18135_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19317_d != nullptr)) {
			(_18321_ident).buffer.insert(0, ((_1a9db55ac_concatAllParts(_19317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18321_ident;;
	};
	return static__1a96243e3_structureIns(&(_18135_s));;
}



inline jule::Str _1a9dbb948_array(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a86bd35b_Arr> _20328_a) {
	jule::Str _20417_obj = jule::Str("jule::Array<", 12);;
	_20417_obj+=_1a9dbd0ba_kind(_self_, _20328_a.get()._field_Elem);
	(_20417_obj).append(",", 1);
	_20417_obj+=_1a5530c2c_Itoa(_20328_a.get()._field_N);
	(_20417_obj).append(">", 1);
	return _20417_obj;;
}



inline jule::Str _1a9dbc064_paramIns(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a88ce03e_ParamIns>* _22932_p) {
	jule::Str _23017_obj = jule::Str();;
	if ((*(_22932_p)).get()._field_Decl.get()._field_Variadic) {
		(_23017_obj).append("jule::Slice<", 12);
		_23017_obj+=_1a9dbd0ba_kind(_self_, (*(_22932_p)).get()._field_Kind);
		(_23017_obj).append(">", 1);
	} else {
		_23017_obj+=_1a9dbd0ba_kind(_self_, (*(_22932_p)).get()._field_Kind);
	};
	if ((*(_22932_p)).get()._field_Decl.get()._field_Reference) {
		(_23017_obj).append("*", 1);
	};
	return _23017_obj;;
}



inline void _1a9dbc691_funcInsResult(_1a9db7c0d_typeCoder* _self_, jule::Str* _25937_s, jule::Ptr<_1a88cee0d_FnIns>* _25950_f) {
	if (_1a88cc6be_IsVoid((*(_25950_f)).get()._field_Decl.ptr())) {
		if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
			((*(_25937_s))).append("jule::VoidExceptional", 21);
		} else {
			((*(_25937_s))).append("void", 4);
		};
		return;;
	};
	if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
		((*(_25937_s))).append("jule::Exceptional<", 18);
		_1a9dc2ab4_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
		((*(_25937_s))).append(">", 1);
		return;;
	};
	_1a9dc2ab4_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
}



inline jule::Str _1a9dbc99e_anonFunc(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a88cee0d_FnIns> _27731_f) {
	if (((_27731_f.get()._field_Result != nullptr) && (_1a86b3b59_Tup(_27731_f.get()._field_Result.ptr()) != nullptr))) {
		_1a9daa22d_pushResultIns((*(_self_))._field_oc, &(_27731_f));
	};
	jule::Str _28117_decl = jule::Str();;
	_1a9dbc691_funcInsResult(_self_, &(_28117_decl), &(_27731_f));
	(_28117_decl).append("(", 1);
	if ((_27731_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27731_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acd6c819:;
			if (it != expr_end) {
				jule::Ptr<_1a88ce03e_ParamIns> _28525_param = *it;
				{
					if (_1a88cb008_IsSelf(_28525_param.get()._field_Decl.ptr())) {
						goto _iter_next_1acd6c819;
					};
					_28117_decl+=_1a9dbc064_paramIns(_self_, &(_28525_param));
					(_28117_decl).append(",", 1);
				}
				_iter_next_1acd6c819:;
				++it;
				goto _iter_begin_1acd6c819;
			}
			_iter_end_1acd6c819:;
		};
		(_28117_decl).mut_slice(0LL, (_28117_decl.len() - 1LL));;
	} else {
		(_28117_decl).append("void", 4);
	};
	(_28117_decl).append(")", 1);
	return _28117_decl;;
}



inline jule::Str _1a9dbccac_func(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a88cee0d_FnIns> _30127_f) {
	jule::Str _30217_obj = jule::Str("jule::Fn<", 9);;
	_30217_obj+=_1a9dbc99e_anonFunc(_self_, _30127_f);
	(_30217_obj).append(">", 1);
	return _30217_obj;;
}



inline jule::Str _1a9dbd0ba_kind(_1a9db7c0d_typeCoder* _self_, jule::Ptr<_1a86ae79d_TypeKind> _30927_k) {
	{
		
		if ((_1a86b341c_Struct(_30927_k.ptr()) != nullptr)) {
			_case_begin_1acd70542:;
			{
				return _1a9dbb63a_structureIns(_self_, _1a86b341c_Struct(_30927_k.ptr()));;
			}
		}
		else if (_1a86b0590_Binded(_30927_k.ptr())) {
			_case_begin_1acd705b9:;
			{
				return _30927_k.get()._field_BindIdent;;
			}
		}
		else if ((_1a86b1eba_Prim(_30927_k.ptr()) != nullptr)) {
			_case_begin_1acd70641:;
			{
				return _1a9db8868_prim(_self_, _1a86b1eba_Prim(_30927_k.ptr()));;
			}
		}
		else if ((_1a86b3b59_Tup(_30927_k.ptr()) != nullptr)) {
			_case_begin_1acd706b8:;
			{
				return _1a9db8b76_tuple(_self_, _1a86b3b59_Tup(_30927_k.ptr()));;
			}
		}
		else if ((_1a86b222e_Sptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1acd70740:;
			{
				return _1a9db95a0_sptr(_self_, _1a86b222e_Sptr(_30927_k.ptr()));;
			}
		}
		else if ((_1a86b2493_Ptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1acd707b7:;
			{
				return _1a9db98ad_ptr(_self_, _1a86b2493_Ptr(_30927_k.ptr()));;
			}
		}
		else if ((_1a86b2707_Enum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1acd7083e:;
			{
				return _1a9db9bbb_enumDecl(_self_, _1a86b2707_Enum(_30927_k.ptr()));;
			}
		}
		else if ((_1a86b296b_TypeEnum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1acd708b6:;
			{
				return _1a9db9ec9_typeEnumDecl(_self_, _1a86b296b_TypeEnum(_30927_k.ptr()));;
			}
		}
		else if ((_1a86b2e44_Slc(_30927_k.ptr()) != nullptr)) {
			_case_begin_1acd7093d:;
			{
				return _1a9dba5e5_slice(_self_, _1a86b2e44_Slc(_30927_k.ptr()));;
			}
		}
		else if ((_1a86b38e5_Map(_30927_k.ptr()) != nullptr)) {
			_case_begin_1acd709b5:;
			{
				return _1a9dba903_mapType(_self_, _1a86b38e5_Map(_30927_k.ptr()));;
			}
		}
		else if ((_1a86b3681_Trait(_30927_k.ptr()) != nullptr)) {
			_case_begin_1acd70a3c:;
			{
				return _1a9dbb01e_traitDecl(_self_, _1a86b3681_Trait(_30927_k.ptr()));;
			}
		}
		else if ((_1a86b2bd0_Arr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1acd70ab4:;
			{
				return _1a9dbb948_array(_self_, _1a86b2bd0_Arr(_30927_k.ptr()));;
			}
		}
		else if ((_1a86b31a8_Fn(_30927_k.ptr()) != nullptr)) {
			_case_begin_1acd70b3b:;
			{
				return _1a9dbccac_func(_self_, _1a86b31a8_Fn(_30927_k.ptr()));;
			}
		}
		_match_end_1acd70399:;
	};
	{
		auto &_match_expr{ _30927_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1acd70be6:;
			{
				return _30927_k.get()._field_Kind.cast_ptr<_1a9db725c_customType>(27).get()._field_kind;;
			}
		}
		else {
			_case_begin_1acd774c2:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1acd76779:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a9db7c0d_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9dc07c6_resultCoder> static__1a9dc0c8d_new(jule::Ptr<_1a9db7c0d_typeCoder>* _36324_tc) {
	return jule::new_ptr<_1a9dc07c6_resultCoder>(_1a9dc07c6_resultCoder{._field_tc=(*(_36324_tc))});;
}



inline void _1a9dc10ac_ptr(_1a9dc07c6_resultCoder* _self_, jule::Str* _36727_s, jule::Ptr<_1a86bdcb8_Ptr> _36739_p) {
	((*(_36727_s))).append("p", 1);
	_1a9dc2795_codeMut(_self_, _36727_s, &(_36739_p.get()._field_Elem));
}



inline void _1a9dc13cb_sptr(_1a9dc07c6_resultCoder* _self_, jule::Str* _37228_s, jule::Ptr<_1a86ba754_Sptr> _37240_p) {
	((*(_37228_s))).append("x", 1);
	_1a9dc2795_codeMut(_self_, _37228_s, &(_37240_p.get()._field_Elem));
}



inline void _1a9dc16ea_mapType(_1a9dc07c6_resultCoder* _self_, jule::Str* _37731_s, jule::Ptr<_1a86bc767_Map> _37743_p) {
	((*(_37731_s))).append("m", 1);
	_1a9dc2795_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Key));
	_1a9dc2795_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Val));
}



inline void _1a9dc1a19_slice(_1a9dc07c6_resultCoder* _self_, jule::Str* _38329_s, jule::Ptr<_1a86bb1b1_Slc> _38341_slc) {
	((*(_38329_s))).append("s", 1);
	_1a9dc2795_codeMut(_self_, _38329_s, &(_38341_slc.get()._field_Elem));
}



inline void _1a9dc1d38_arr(_1a9dc07c6_resultCoder* _self_, jule::Str* _38827_s, jule::Ptr<_1a86bd35b_Arr> _38839_arr) {
	((*(_38827_s))).append("a", 1);
	(*(_38827_s))+=_1a5530985_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38839_arr.get()._field_N)), 16LL);
	_1a9dc2795_codeMut(_self_, _38827_s, &(_38839_arr.get()._field_Elem));
}



inline void _1a9dc2157_func(_1a9dc07c6_resultCoder* _self_, jule::Str* _39428_s, jule::Ptr<_1a88cee0d_FnIns> _39440_f) {
	((*(_39428_s))).append("f", 1);
	{
		auto expr = &(_39440_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd7d2ec:;
		if (it != expr_end) {
			jule::Ptr<_1a88ce03e_ParamIns> _39621_p = *it;
			{
				if (_39621_p.get()._field_Decl.get()._field_Reference) {
					((*(_39428_s))).append("r", 1);
				};
				_1a9dc2795_codeMut(_self_, _39428_s, &(_39621_p.get()._field_Kind));
			}
			_iter_next_1acd7d2ec:;
			++it;
			goto _iter_begin_1acd7d2ec;
		}
		_iter_end_1acd7d2ec:;
	};
	if ((_39440_f.get()._field_Result != nullptr)) {
		_1a9dc2795_codeMut(_self_, _39428_s, &(_39440_f.get()._field_Result));
	};
}



inline void _1a9dc2476_tup(_1a9dc07c6_resultCoder* _self_, jule::Str* _40727_s, jule::Ptr<_1a86bbcb6_Tuple> _40739_tup) {
	{
		auto expr = &(_40739_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd7ed04:;
		if (it != expr_end) {
			jule::Ptr<_1a86ae79d_TypeKind> _40821_t = *it;
			{
				((*(_40727_s))).append("__jule_tuple_", 13);
				_1a9dc2795_codeMut(_self_, _40727_s, &(_40821_t));
			}
			_iter_next_1acd7ed04:;
			++it;
			goto _iter_begin_1acd7ed04;
		}
		_iter_end_1acd7ed04:;
	};
}



inline void _1a9dc2795_codeMut(_1a9dc07c6_resultCoder* _self_, jule::Str* _41431_s, jule::Ptr<_1a86ae79d_TypeKind>* _41444_t) {
	{
		auto &_match_expr{ (*(_41444_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1acd80d16:;
			{
				_1a9dc10ac_ptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1a86bdcb8_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1acd8118a:;
			{
				_1a9dc13cb_sptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1a86ba754_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1acd81201:;
			{
				_1a9dc16ea_mapType(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1a86bc767_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1acd81652:;
			{
				_1a9dc1a19_slice(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1a86bb1b1_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1acd816b8:;
			{
				_1a9dc1d38_arr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1a86bd35b_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1acd8172e:;
			{
				_1a9dc2157_func(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1a88cee0d_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1acd81795:;
			{
				jule::Ptr<_1a88e1c11_Enum> _42917_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_1a88e1c11_Enum>(3);;
				(*(_41431_s))+=static__1a9622e3b_toOut(&(_42917_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42917_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1acd8180b:;
			{
				jule::Ptr<_1a88e330b_TypeEnum> _43217_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_1a88e330b_TypeEnum>(4);;
				(*(_41431_s))+=static__1a9622e3b_toOut(&(_43217_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43217_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1acd81872:;
			{
				jule::Ptr<_1a88b9b51_StructIns> _43521_si = (*(_41444_t)).get()._field_Kind.cast_ptr<_1a88b9b51_StructIns>(0);;
				(*(_41431_s))+=static__1a96243e3_structureIns(&(_43521_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1acd818d8:;
			{
				jule::Ptr<_1a88de47d_Trait> _43821_trt = (*(_41444_t)).get()._field_Kind.cast_ptr<_1a88de47d_Trait>(2);;
				(*(_41431_s))+=static__1a9623b0c_traitDecl(_43821_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1acd8194e:;
			{
				(*(_41431_s))+=(*(_41444_t)).get()._field_Kind.cast_ptr<_1a86b7003_Prim>(20).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1acd819b5:;
			{
				_1a9dc2476_tup(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1a86bbcb6_Tuple>(23));
			}
		}
		else {
			_case_begin_1acd81003:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:445:13"));;
			}
		}
		_match_end_1acd80e9d:;
	};
}



inline void _1a9dc2ab4_codeMut1(_1a9dc07c6_resultCoder* _self_, jule::Str* _44932_s, jule::Ptr<_1a86ae79d_TypeKind>* _44945_t) {
	jule::Ptr<_1a86bbcb6_Tuple> _45017_tup = _1a86b3b59_Tup((*(_44945_t)).ptr());;
	if ((_45017_tup != nullptr)) {
		_1a9dc2476_tup(_self_, _44932_s, _45017_tup);
	} else {
		(*(_44932_s))+=_1a9dbd0ba_kind((*(_self_))._field_tc.ptr(), (*(_44945_t)));
	};
}



inline jule::Str _1a9dc2d8e_code(_1a9dc07c6_resultCoder* _self_, jule::Ptr<_1a86ae79d_TypeKind>* _45828_t) {
	jule::Str _45917_s = jule::Str::alloc(0LL, 20LL);;
	_1a9dc2795_codeMut(_self_, &(_45917_s), _45828_t);
	return _45917_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9dc07c6_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1acd8b01e_Name(_1acd8ac33_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1acd8b151_What(_1acd8ac33_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1acd8b283_Reset(_1acd8ac33_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1acd8b3b5_Short(_1acd8ac33_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd8ac33_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acd8e242_Name(_1acd8e6b5_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1acd8e9a1_What(_1acd8e6b5_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1acd8ead3_Reset(_1acd8e6b5_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1acd8ec15_Short(_1acd8e6b5_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd8e6b5_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acd928e9_Name(_1acd92d6c_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1acd93158_What(_1acd92d6c_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1acd9328a_Reset(_1acd92d6c_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1acd933bc_Short(_1acd92d6c_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd92d6c_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acd960e5_Name(_1acd96568_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1acd96854_What(_1acd96568_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1acd96986_Reset(_1acd96568_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1acd96ab8_Short(_1acd96568_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd96568_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acd9979c_Name(_1acd99c20_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1acd9a00b_What(_1acd99c20_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1acd9a13d_Reset(_1acd99c20_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1acd9a270_Short(_1acd99c20_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1acd99c20_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9e2bcc7_FlagSet> static__1a9e2c0b3_New(void) {
	return jule::new_ptr<_1a9e2bcc7_FlagSet>(_1a9e2bcc7_FlagSet{._field_flags=jule::Slice<jule::Trait<_1a9e2a369_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1a9e2a369_CommonFlag> _1a9e2c503_FindFlag(_1a9e2bcc7_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acda4c5d:;
		if (it != expr_end) {
			jule::Trait<_1a9e2a369_CommonFlag> _7221_flag = *it;
			{
				if ((_1a9e2a369_CommonFlag_mptr_data[(_7221_flag).type_offset]._1a9dea779_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1acda4c5d:;
			++it;
			goto _iter_begin_1acda4c5d;
		}
		_iter_end_1acda4c5d:;
	};
	return nullptr;;
}



inline jule::Trait<_1a9e2a369_CommonFlag> _1a9e2c811_FindFlagShort(_1a9e2bcc7_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acda5b60:;
		if (it != expr_end) {
			jule::Trait<_1a9e2a369_CommonFlag> _8221_flag = *it;
			{
				if ((_1a9e2a369_CommonFlag_mptr_data[(_8221_flag).type_offset]._1a9dea8ab_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1acda5b60:;
			++it;
			goto _iter_begin_1acda5b60;
		}
		_iter_end_1acda5b60:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a9e2cd83_Parse(_1a9e2bcc7_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1a9e2e4d3_argParser _11617_ap = _1a9e2e4d3_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1a9e3088b_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline jule::Ptr<_1acd99c20_Flag> _1ace155e8_addFlagCommon(_1a9e2bcc7_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1ace16bc1:;
			{
				goto _match_end_1ace16b6b;
			}
		}
		_match_end_1ace16b6b:;
	};
	if ((_1a9e2c503_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a9e2c811_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1acd99c20_Flag> _14817_flag = jule::new_ptr<_1acd99c20_Flag>(_1acd99c20_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1a9e2a369_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1a9e2a369_CommonFlag>(_14817_flag, 4)); };
	return _14817_flag;;
}

inline jule::Ptr<_1acd96568_Flag> _1ace1d579_addFlagCommon(_1a9e2bcc7_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1ace1eaec:;
			{
				goto _match_end_1ace1ea53;
			}
		}
		_match_end_1ace1ea53:;
	};
	if ((_1a9e2c503_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a9e2c811_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1acd96568_Flag> _14817_flag = jule::new_ptr<_1acd96568_Flag>(_1acd96568_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1a9e2a369_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1a9e2a369_CommonFlag>(_14817_flag, 3)); };
	return _14817_flag;;
}



inline void _1ace1352a_AddVar(_1a9e2bcc7_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1acd99c20_Flag> _17617_flag = _1ace155e8_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1ace1b522_AddVar(_1a9e2bcc7_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1acd96568_Flag> _17617_flag = _1ace1d579_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9e2bcc7_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1acdac67d_parseInteger(_1a9e2e4d3_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1acdb01db:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1a4d5a238_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1acdb053d:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a4d5a238_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1acdb065e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a4d5a238_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1acdb0807:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1acdb086d:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1acdaed45:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1acdaec79:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1acdb4bd5_parseInteger(_1a9e2e4d3_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1acdb76ee:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1a4d5a238_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1acdb7a51:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a4d5a238_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1acdb7b72:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a4d5a238_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1acdb7d1a:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1acdb7d81:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1acdb7358:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1acdb728c:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a9e2ec97_getData(_1a9e2e4d3_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a9e2eed9_processFlag(_1a9e2e4d3_argParser* _self_, jule::Trait<_1a9e2a369_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1acda9b97:;
			{
				jule::Ptr<_1acd96568_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1acd96568_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1acda9b31:;
	};
	jule::Str _22513_data = _1a9e2ec97_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a9e2a369_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a9dea779_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1acdab14e:;
			{
				jule::Ptr<_1acd8ac33_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1acd8ac33_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1acdac67d_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1a552007e_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a9e2a369_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a9dea779_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1acdab902:;
			{
				jule::Ptr<_1acd8e6b5_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1acd8e6b5_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1acdb4bd5_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1a551eb1c_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a9e2a369_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a9dea779_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1acdab968:;
			{
				jule::Ptr<_1acd92d6c_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1acd92d6c_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1a5526607_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a9e2a369_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a9dea779_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1acdab9ce:;
			{
				(*((*(_21735_flag)).cast_ptr<_1acd99c20_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1acdab89c:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a9e3025e_singleDash(_1a9e2e4d3_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdbdeca:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1a9e2a369_CommonFlag> _26321_flag = _1a9e2c811_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1a9e2eed9_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1acdbdeca:;
			++it;
			goto _iter_begin_1acdbdeca;
		}
		_iter_end_1acdbdeca:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a9e304d4_doubleDash(_1a9e2e4d3_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1a9e2a369_CommonFlag> _27617_flag = _1a9e2c503_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1a9e2eed9_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a9e306b0_tryArg(_1a9e2e4d3_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1a9e304d4_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1a9e3025e_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_28413_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a9e3088b_parse(_1a9e2e4d3_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a9e306b0_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1acdc4002:;
	}
	_iter_end_1acdc4002:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1a9e2e4d3_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9da8935_ObjectCoder> static__1a9da8d0e_New(jule::Ptr<_1a93d5847_IR>* _9424_ir, _1a9da7093_SerializationInfo _9433_info) {
	jule::Ptr<_1a9da8935_ObjectCoder> _9517_oc = jule::new_ptr<_1a9da8935_ObjectCoder>(_1a9da8935_ObjectCoder{._field_ir=(*(_9424_ir)), ._field_info=_9433_info, });;
	_9517_oc.get()._field_ec=static__1a960e06a_new(&(_9517_oc));
	_9517_oc.get()._field_sc=static__1a9605cba_new(&(_9517_oc));
	_9517_oc.get()._field_tc=static__1a9db824c_new(&(_9517_oc));
	_9517_oc.get()._field_dc=static__1a961dd27_new(_9517_oc);
	return _9517_oc;;
}



inline void _1a9da9084_write(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Str _10625_s) {
	_self_.get()._field_Obj+=_10625_s;
}



inline void _1a9da9309_writeR(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Str* _11027_s) {
	_self_.get()._field_Obj+=(*(_11027_s));
}



inline void _1a9da94d5_addIndent(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	(_self_.get()._field_indentBuffer).append("\t", 1);
}



inline void _1a9da96b1_doneIndent(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1a9da988c_indent(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1a9da9b9a_findAnyType(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a86ae79d_TypeKind>* _12936_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc5dc5a:;
		if (it != expr_end) {
			jule::I64 _13014_i = it - expr->begin();
			jule::Ptr<_1a86ae79d_TypeKind> _13021_at = *it;
			{
				if (_1a86aee63_Equal(_13021_at, (*(_12936_t)))) {
					return _13014_i;;
				};
			}
			_iter_next_1acc5dc5a:;
			++it;
			_13014_i++;
			goto _iter_begin_1acc5dc5a;
		}
		_iter_end_1acc5dc5a:;
	};
	return -1LL;;
}



inline jule::I64 _1a9da9ea8_pushAnyType(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a86ae79d_TypeKind> _13835_t) {
	if ((_1a86b2707_Enum(_13835_t.ptr()) != nullptr)) {
		_13835_t=_1a86b2707_Enum(_13835_t.ptr()).get()._field_Kind.get()._field_Kind;
	};
	jule::I64 _14217_i = _1a9da9b9a_findAnyType(_self_, &(_13835_t));;
	if ((_14217_i != -1LL)) {
		return _14217_i;;
	};
	_14217_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> &__jule_push_dest = _self_.get()._field_anyTypeMap; __jule_push_dest.push(_13835_t); };
	jule::Str _14813_si = _1a5530c2c_Itoa(_14217_i);;
	if ((_1a86b222e_Sptr(_13835_t.ptr()) != nullptr)) {
		jule::Str _15017_elem_kind = _1a9dbd0ba_kind(_self_.get()._field_tc.ptr(), _1a86b222e_Sptr(_13835_t.ptr()).get()._field_Elem);;
		jule::Str _15117_kind = _1a9db8e84_asSptr(_self_.get()._field_tc.ptr(), _15017_elem_kind);;
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_15017_elem_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_15117_kind;
		(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _17717_comparable = _1a86b0ccc_Comparable(_13835_t.ptr());;
		jule::Str _17817_kind = _1a9dbd0ba_kind(_self_.get()._field_tc.ptr(), _13835_t);;
		if (_17817_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1a86aeb55_Str(_13835_t.ptr()));
		};
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_17817_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		if (_17717_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66);
			_self_.get()._field_anyObj+=_17817_kind;
			(_self_.get()._field_anyObj).append("*>(alloc) == *reinterpret_cast<", 31);
			_self_.get()._field_anyObj+=_17817_kind;
			(_self_.get()._field_anyObj).append("*>(other); }\n", 13);
		};
		(_self_.get()._field_anyObj).append("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76);
		if ((_1a86b2493_Ptr(_13835_t.ptr()) == nullptr)) {
			(_self_.get()._field_anyObj).append("const ", 6);
			_self_.get()._field_anyObj+=_17817_kind;
		} else {
			_self_.get()._field_anyObj+=_17817_kind;
			(_self_.get()._field_anyObj).append("* const", 7);
		};
		(_self_.get()._field_anyObj).append("*>(alloc)); }\n", 14);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_dealloc, ", 10);
		if (_17717_comparable) {
			(_self_.get()._field_anyObj).append(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append("_eq, ", 5);
		};
		(_self_.get()._field_anyObj).append(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_to_str};\n", 10);
		if (_17717_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_17817_kind;
			(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _14217_i;;
}



inline void _1a9daa22d_pushResultIns(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88cee0d_FnIns>* _24638_f) {
	jule::Str _24713_s = _1a9dc2d8e_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_24638_f)).get()._field_Result));;
	jule::Bool _24817_ok = false;;
	_self_.get()._field_resultMap.lookup(_24713_s, nullptr, &(_24817_ok));
	if (_24817_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_24713_s]=false;
	jule::Str _25317_obj = jule::Str::alloc(0LL, 128LL);;
	(_25317_obj).append("struct ", 7);
	_25317_obj+=_24713_s;
	(_25317_obj).append(" {\n", 3);
	{
		auto expr = &(_1a86b3b59_Tup((*(_24638_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc712de:;
		if (it != expr_end) {
			jule::I64 _25714_i = it - expr->begin();
			jule::Ptr<_1a86ae79d_TypeKind> _25721_t = *it;
			{
				(_25317_obj).append("\t", 1);
				_25317_obj+=_1a9dbd0ba_kind(_self_.get()._field_tc.ptr(), _25721_t);
				(_25317_obj).append(" ", 1);
				(_25317_obj).append("__jule_result_arg", 17);
				_25317_obj+=_1a5530c2c_Itoa(_25714_i);
				(_25317_obj).append(";\n", 2);
			}
			_iter_next_1acc712de:;
			++it;
			_25714_i++;
			goto _iter_begin_1acc712de;
		}
		_iter_end_1acc712de:;
	};
	(_25317_obj).append("};\n", 3);
	{ jule::Slice<jule::Str> &__jule_push_dest = _self_.get()._field_resultDecls; __jule_push_dest.push(_25317_obj); };
}



inline void _1a9daa4a3_pushResult(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88cc25c_Fn>* _26935_f) {
	if ((_1a88cc6be_IsVoid((*(_26935_f)).ptr()) || ((*(_26935_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _27317_n = (*(_26935_f)).get()._field_Instances.len();;
	if (((*(_26935_f)).get()._field_Generics.len() == 0LL)) {
		_27317_n=1LL;
	};
	{
		auto expr = (*(_26935_f)).get()._field_Instances.slice(0LL, _27317_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1acc79858:;
		if (it != expr_end) {
			jule::Ptr<_1a88cee0d_FnIns> _27721_ins = *it;
			{
				_1a9daa22d_pushResultIns(_self_, &(_27721_ins));
			}
			_iter_next_1acc79858:;
			++it;
			goto _iter_begin_1acc79858;
		}
		_iter_end_1acc79858:;
	};
}



inline jule::I64 _1a9daa85a_findTypeOffsetS(_1a9da8935_ObjectCoder* _self_, jule::Ptr<_1a88de47d_Trait> _28230_t, jule::Ptr<_1a88b9b51_StructIns> _28245_s) {
	if ((_28230_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc7ae75:;
		if (it != expr_end) {
			jule::Ptr<_1a9da755a_traitHash> *_28616_hash = it;
			{
				if ((((*(_28616_hash)).get()._field_t == _28230_t) && ((*(_28616_hash)).get()._field_s == _28245_s))) {
					return (*(_28616_hash)).get()._field_i;;
				};
			}
			_iter_next_1acc7ae75:;
			++it;
			goto _iter_begin_1acc7ae75;
		}
		_iter_end_1acc7ae75:;
	};
	return -1LL;;
}



inline jule::I64 _1a9daac12_findTypeOffset(_1a9da8935_ObjectCoder* _self_, jule::Ptr<_1a88de47d_Trait> _29429_t, jule::Ptr<_1a86ae79d_TypeKind> _29444_k) {
	if ((_29429_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1a88b9b51_StructIns> _29817_s = nullptr;;
	if ((_1a86b222e_Sptr(_29444_k.ptr()) != nullptr)) {
		_29444_k=_1a86b222e_Sptr(_29444_k.ptr()).get()._field_Elem;
	};
	_29817_s=_1a86b341c_Struct(_29444_k.ptr());
	if ((_29817_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1a9daa85a_findTypeOffsetS(_self_, _29429_t, _29817_s));;
}



inline void _1a9dab031_pushAndWriteMaskMapper(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88de47d_Trait> _30946_t1, jule::Ptr<_1a88de47d_Trait> _30962_t2) {
	jule::Str _31017_ident = jule::Str("__jule_trait_offset_mapper_", 27);;
	_31017_ident+=_1a5530600_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30962_t2))), 15LL);
	(_31017_ident).append("_to_", 4);
	_31017_ident+=_1a5530600_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30946_t1))), 15LL);
	_1a9da9309_writeR(_self_, &(_31017_ident));
	{
		auto expr = &(_self_.get()._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc808a3:;
		if (it != expr_end) {
			_1a9da7912_traitCast _31716_m = *it;
			{
				if (((_31716_m._field_t1 == _30946_t1) && (_31716_m._field_t2 == _30962_t2))) {
					return;;
				};
			}
			_iter_next_1acc808a3:;
			++it;
			goto _iter_begin_1acc808a3;
		}
		_iter_end_1acc808a3:;
	};
	{ jule::Slice<_1a9da7912_traitCast> &__jule_push_dest = _self_.get()._field_traitCastMap; __jule_push_dest.push(_1a9da7912_traitCast{._field_t1=_30946_t1, ._field_t2=_30962_t2}); };
	;
	(_self_.get()._field_anyObj).append("jule::Int", 9);
	(_self_.get()._field_anyObj).append(" ", 1);
	_self_.get()._field_anyObj+=_31017_ident;
	(_self_.get()._field_anyObj).append("(const jule::Int offset) noexcept { ", 36);
	{
		auto expr = &(_30946_t1.get()._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc825db:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> _33621_s1 = *it;
			{
				{
					auto expr = &(_30962_t2.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acc83125:;
					if (it != expr_end) {
						jule::Ptr<_1a88b6d3a_Struct> _33720_s2 = *it;
						{
							if ((_33621_s1 == _33720_s2)) {
								{
									auto expr = &(_33621_s1.get()._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1acc83d7e:;
									if (it != expr_end) {
										jule::Ptr<_1a88b9b51_StructIns> _33933_s1i = *it;
										{
											jule::I64 _34029_i1 = _1a9daa85a_findTypeOffsetS(_self_.ptr(), _30946_t1, _33933_s1i);;
											jule::I64 _34129_i2 = _1a9daa85a_findTypeOffsetS(_self_.ptr(), _30962_t2, _33933_s1i);;
											(_self_.get()._field_anyObj).append("if (offset == ", 14);
											_self_.get()._field_anyObj+=_1a5530c2c_Itoa(_34129_i2);
											(_self_.get()._field_anyObj).append(") return ", 9);
											_self_.get()._field_anyObj+=_1a5530c2c_Itoa(_34029_i1);
											(_self_.get()._field_anyObj).append("; ", 2);
										}
										_iter_next_1acc83d7e:;
										++it;
										goto _iter_begin_1acc83d7e;
									}
									_iter_end_1acc83d7e:;
								};
							};
						}
						_iter_next_1acc83125:;
						++it;
						goto _iter_begin_1acc83125;
					}
					_iter_end_1acc83125:;
				};
			}
			_iter_next_1acc825db:;
			++it;
			goto _iter_begin_1acc825db;
		}
		_iter_end_1acc825db:;
	};
	(_self_.get()._field_anyObj).append(" return ", 8);
	_self_.get()._field_anyObj+=_1a5530c2c_Itoa(0LL);
	(_self_.get()._field_anyObj).append("; }\n", 4);
}



inline void _1a9dab2a6_locInfo(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a52684c0_Token>* _35728_t) {
	jule::Str *_35814_loc = &((*(_35728_t)).get()._field_File.get()._field_Path);;
	if (_1ce99b3e3_Production) {
		{
			
			if (_1a4d5a238_HasPrefix((*(_35814_loc)), _1a4e90648_PathStdlib)) {
				_case_begin_1acc8726c:;
				{
					_1a9da9084_write(_self_, _1a961bac2_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35814_loc)).slice((_1a4d65c49_Dir(_1a4e90648_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_1a4d5a238_HasPrefix((*(_35814_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1acc87833:;
				{
					_1a9da9084_write(_self_, _1a961bac2_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35814_loc)).slice((_1a4d65c49_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1acc86dc6:;
				{
					_1a9da9084_write(_self_, _1a961bac2_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35814_loc)))));
				}
			}
			_match_end_1acc86d0a:;
		};
	} else {
		_1a9da9084_write(_self_, _1a961bac2_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35814_loc)))));
	};
	_1a9da9084_write(_self_, jule::Str(":", 1));
	_1a9da9084_write(_self_, _1a5530c2c_Itoa((*(_35728_t)).get()._field_Row));
	_1a9da9084_write(_self_, jule::Str(":", 1));
	_1a9da9084_write(_self_, _1a5530c2c_Itoa((*(_35728_t)).get()._field_Column));
}



inline void _1a9dab482_head(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_1a9d9e8a4_Time _38413_time = static__1a9d9ee48_Now();;
	_1a9d9e211_AbsTime _38513_abs = _1a9da1510_Abs(&_38413_time);;
	_1a9da9084_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1a9da9084_write(_self_, jule::Str("// JuleC version: ", 18));
	_1a9da9084_write(_self_, jule::Str("jule0.0.15 @master", 18));
	_1a9da9084_write(_self_, jule::Str("\n", 1));
	_1a9da9084_write(_self_, jule::Str("// Date: ", 9));
	_1a9da9084_write(_self_, _1a5530600_FmtUint(_38513_abs._field_Day, 10LL));
	_1a9da9084_write(_self_, jule::Str("/", 1));
	_1a9da9084_write(_self_, _1a5530600_FmtUint(_38513_abs._field_Month, 10LL));
	_1a9da9084_write(_self_, jule::Str("/", 1));
	_1a9da9084_write(_self_, _1a5530600_FmtUint(_38513_abs._field_Year, 10LL));
	_1a9da9084_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a9da9309_writeR(_self_, &(_self_.get()._field_info._field_Compiler));
	_1a9da9084_write(_self_, jule::Str(" ", 1));
	_1a9da9309_writeR(_self_, &(_self_.get()._field_info._field_CompilerCommand));
	_1a9da9084_write(_self_, jule::Str("\n\n", 2));
	if (_1ce99b3e3_Production) {
		_1a9da9084_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1ce99ac50_RC))) {
		_1a9da9084_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1ce99b129_Safety))) {
		_1a9da9084_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a9dab65d_links(_self_);
	_1a9da9084_write(_self_, jule::Str("\n\n#include \"", 12));
	_1a9da9309_writeR(_self_, &(_1a4e90e2e_PathApi));
	_1a9da9084_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1a9dab65d_links(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc91892:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _42216_used = *it;
			{
				{
					
					if ((!(_42216_used.get()._field_Binded))) {
						_case_begin_1acc92321:;
						{
							goto _iter_next_1acc91892;
						}
					}
					else if (_1a4ddd8d7_IsStdHeaderPath(_42216_used.get()._field_Path)) {
						_case_begin_1acc92398:;
						{
							_1a9da9084_write(_self_, jule::Str("#include ", 9));
							_1a9da9309_writeR(_self_, &(_42216_used.get()._field_Path));
							_1a9da9084_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_1a4dddb90_IsValidHeaderExt(_1a4d65386_Ext(_42216_used.get()._field_Path))) {
						_case_begin_1acc92420:;
						{
							_1a9da9084_write(_self_, jule::Str("#include \"", 10));
							_1a9da9309_writeR(_self_, &(_42216_used.get()._field_Path));
							_1a9da9084_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1acc92200:;
				};
			}
			_iter_next_1acc91892:;
			++it;
			goto _iter_begin_1acc91892;
		}
		_iter_end_1acc91892:;
	};
}



inline void _1a9dab8d3_prepareStructure(_1a9da8935_ObjectCoder* _self_, jule::Ptr<_1a88b6d3a_Struct>* _43840_s) {
	{
		auto expr = &((*(_43840_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc93b08:;
		if (it != expr_end) {
			jule::Ptr<_1a88b9b51_StructIns> _43921_ins = *it;
			{
				{
					auto expr = &(_43921_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acc94d90:;
					if (it != expr_end) {
						jule::Ptr<_1a88cc25c_Fn> _44025_m = *it;
						{
							if (_44025_m.get()._field_Statically) {
								goto _iter_next_1acc94d90;
							};
							{
								auto expr = &(_44025_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1acc95ae9:;
								if (it != expr_end) {
									jule::Ptr<_1a88cee0d_FnIns> _44429_mins = *it;
									{
										jule::Ptr<_1a88ce03e_ParamIns> _44529_p = _44429_mins.get()._field_Params[0LL];;
										if ((!(_1a88cb26c_IsRef(_44529_p.get()._field_Decl.ptr())))) {
											_44529_p.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a9db725c_customType>(_1a9db725c_customType{._field_kind=_1a9db9292_asPtr((*(_self_))._field_tc.ptr(), _1a9dbd0ba_kind((*(_self_))._field_tc.ptr(), _44529_p.get()._field_Kind))}), 27)});
										} else {
											_44529_p.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a9db725c_customType>(_1a9db725c_customType{._field_kind=_1a9dbd0ba_kind((*(_self_))._field_tc.ptr(), _44529_p.get()._field_Kind)}), 27)});
										};
									}
									_iter_next_1acc95ae9:;
									++it;
									goto _iter_begin_1acc95ae9;
								}
								_iter_end_1acc95ae9:;
							};
						}
						_iter_next_1acc94d90:;
						++it;
						goto _iter_begin_1acc94d90;
					}
					_iter_end_1acc94d90:;
				};
			}
			_iter_next_1acc93b08:;
			++it;
			goto _iter_begin_1acc93b08;
		}
		_iter_end_1acc93b08:;
	};
}



inline void _1a9dabaae_prepareStructures(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc92079:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> _46521_s = *it;
			{
				if ((_46521_s.get()._field_Token != nullptr)) {
					_1a9dab8d3_prepareStructure(_self_.ptr(), &(_46521_s));
				};
			}
			_iter_next_1acc92079:;
			++it;
			goto _iter_begin_1acc92079;
		}
		_iter_end_1acc92079:;
	};
}



inline void _1a9dabd34_iterPackages(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1a8940e5d_Package>*)> _47232_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc995c0:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _47321_used = *it;
			{
				if ((!(_47321_used.get()._field_Binded))) {
					_47232_f(&(_47321_used.get()._field_Package));
				};
			}
			_iter_next_1acc995c0:;
			++it;
			goto _iter_begin_1acc995c0;
		}
		_iter_end_1acc995c0:;
	};
	_47232_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _1a9dac010_buildTraitMap(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_1a9dabd34_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a8940e5d_Package>*)>([=](jule::Ptr<_1a8940e5d_Package>* _48235_pkg) mutable -> void {
		_1a9db52c1_iterFiles(_48235_pkg, jule::Fn<void(jule::Ptr<_1a89ab380_SymbolTable>*)>([=](jule::Ptr<_1a89ab380_SymbolTable>* _48336_file) mutable -> void {
			{
				auto expr = &((*(_48336_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1acc9c66c:;
				if (it != expr_end) {
					jule::Ptr<_1a88de47d_Trait> _48429_t = *it;
					{
						if ((_48429_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_48429_t.get()._field_Implemented.len() == 0LL)) {
							{ jule::Slice<jule::Ptr<_1a9da755a_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(jule::new_ptr<_1a9da755a_traitHash>(_1a9da755a_traitHash{._field_t=_48429_t, ._field_s=nullptr, ._field_i=0LL})); };
							goto _iter_next_1acc9c66c;
						};
						jule::I64 _49629_i = 0LL;;
						{
							auto expr = &(_48429_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1acc9ce0e:;
							if (it != expr_end) {
								jule::Ptr<_1a88b6d3a_Struct> _49733_s = *it;
								{
									{
										auto expr = &(_49733_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1acc9dd55:;
										if (it != expr_end) {
											jule::Ptr<_1a88b9b51_StructIns> _49837_ins = *it;
											{
												{ jule::Slice<jule::Ptr<_1a9da755a_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(jule::new_ptr<_1a9da755a_traitHash>(_1a9da755a_traitHash{._field_t=_48429_t, ._field_s=_49837_ins, ._field_i=_49629_i})); };
												(_49629_i)++;
											}
											_iter_next_1acc9dd55:;
											++it;
											goto _iter_begin_1acc9dd55;
										}
										_iter_end_1acc9dd55:;
									};
								}
								_iter_next_1acc9ce0e:;
								++it;
								goto _iter_begin_1acc9ce0e;
							}
							_iter_end_1acc9ce0e:;
						};
						_1a9db5ec5_pushMethodsFromInherits(&(_48429_t), &(_48429_t));
					}
					_iter_next_1acc9c66c:;
					++it;
					goto _iter_begin_1acc9c66c;
				}
				_iter_end_1acc9c66c:;
			};
		}));
	}));
}



inline void _1a9dac1db_traitDecls(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_1a9dabd34_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a8940e5d_Package>*)>([=](jule::Ptr<_1a8940e5d_Package>* _51635_pkg) mutable -> void {
		_1a9db52c1_iterFiles(_51635_pkg, jule::Fn<void(jule::Ptr<_1a89ab380_SymbolTable>*)>([=](jule::Ptr<_1a89ab380_SymbolTable>* _51736_file) mutable -> void {
			{
				auto expr = &((*(_51736_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1acca21aa:;
				if (it != expr_end) {
					jule::Ptr<_1a88de47d_Trait> _51829_t = *it;
					{
						if ((_51829_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1a9da988c_indent(_self_);
						_1a9da9084_write(_self_, jule::Str("struct ", 7));
						_1a9da9084_write(_self_, static__1a9623b0c_traitDecl(_51829_t));
						_1a9da9084_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1acca21aa:;
					++it;
					goto _iter_begin_1acca21aa;
				}
				_iter_end_1acca21aa:;
			};
		}));
	}));
}



inline void _1a9dac461_structurePlainDecl(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88b6d3a_Struct>* _53143_s) {
	{
		auto expr = &((*(_53143_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acca1ad3:;
		if (it != expr_end) {
			jule::Ptr<_1a88b9b51_StructIns> _53221_ins = *it;
			{
				_1a9da9084_write(_self_, jule::Str("struct ", 7));
				_1a9da9084_write(_self_, static__1a96243e3_structureIns(&(_53221_ins)));
				_1a9da9084_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1acca1ad3:;
			++it;
			goto _iter_begin_1acca1ad3;
		}
		_iter_end_1acca1ad3:;
	};
}



inline void _1a9dac63c_structurePlainDecls(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acca4a1a:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> _54021_s = *it;
			{
				if ((_54021_s.get()._field_Token != nullptr)) {
					_1a9dac461_structurePlainDecl(_self_, &(_54021_s));
				};
			}
			_iter_next_1acca4a1a:;
			++it;
			goto _iter_begin_1acca4a1a;
		}
		_iter_end_1acca4a1a:;
	};
}



inline void _1a9dac8b2_fieldDecl(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88b915b_FieldIns>* _54734_f) {
	_1a9da9084_write(_self_, _1a9dbd0ba_kind(_self_.get()._field_tc.ptr(), (*(_54734_f)).get()._field_Kind));
	_1a9da9084_write(_self_, jule::Str(" ", 1));
	_1a9da9084_write(_self_, static__1a962468a_field(&((*(_54734_f)).get()._field_Decl)));
	if (((*(_54734_f)).get()._field_Default == nullptr)) {
		if (_1a9dc4de6_shouldInitialized(&((*(_54734_f)).get()._field_Kind))) {
			_1a9da9084_write(_self_, jule::Str(" = ", 3));
			_1a961b198_initExpr(_self_.get()._field_ec, (*(_54734_f)).get()._field_Kind);
		};
	} else {
		_1a9da9084_write(_self_, jule::Str(" = ", 3));
		_1a9611b72_possibleRefExpr(_self_.get()._field_ec, (*(_54734_f)).get()._field_Default.get()._field_Model);
	};
	_1a9da9084_write(_self_, jule::Str(";", 1));
}



inline void _1a9dacb37_structureDestructor(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88b9b51_StructIns>* _56544_s) {
	;
	jule::Ptr<_1a88cc25c_Fn> _56813_disposeMethod = _1a88baaec_FindMethod((*(_56544_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _56917_disposed = static__1a8967ccb_Dispose(_56813_disposeMethod);;
	if ((!(_56917_disposed))) {
		return;;
	};
	_1a9da9084_write(_self_, jule::Str("~", 1));
	_1a9da9084_write(_self_, static__1a96243e3_structureIns(_56544_s));
	_1a9da9084_write(_self_, jule::Str("(void) { ", 9));
	_1a9da9084_write(_self_, static__1a96235bd_func(&(_56813_disposeMethod)));
	_1a9da9084_write(_self_, jule::Str("(this); }", 9));
}



inline void _1a9dacdce_structureDeriveDefsDecls(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88b9b51_StructIns>* _58145_s) {
	if (_1a88b8666_IsDerives((*(_58145_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1a9da988c_indent(_self_);
		_1a9da9084_write(_self_, _1a961e135_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_58145_s)).get()._field_Decl)));
		_1a9da9084_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1a9dad20e_structureOperatorEq(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Str* _58940_ident, jule::Ptr<_1a88b9b51_StructIns>* _58957_s) {
	if ((!((*(_58957_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_58957_s)).get()._field_Operators._field_Eq != nullptr)) {
		_1a9dad8e6_structureOperator(_self_, _58940_ident, &((*(_58957_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1a9da988c_indent(_self_);
	if (_1a93dc50d_Inline) {
		_1a9da9084_write(_self_, jule::Str("inline ", 7));
	};
	_1a9da9084_write(_self_, jule::Str("bool operator==(", 16));
	_1a9da9309_writeR(_self_, _58940_ident);
	_1a9da9084_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_58957_s)).get()._field_Fields.len() > 0LL)) {
		_1a9da94d5_addIndent(_self_);
		_1a9da9084_write(_self_, jule::Str("\n", 1));
		_1a9da988c_indent(_self_);
		_1a9da9084_write(_self_, jule::Str("return ", 7));
		_1a9da94d5_addIndent(_self_);
		jule::Bool _61221_writed = false;;
		{
			auto expr = &((*(_58957_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1accb1285:;
			if (it != expr_end) {
				jule::Ptr<_1a88b915b_FieldIns> _61325_f = *it;
				{
					jule::Ptr<_1a88b9b51_StructIns> _61521_strct = _1a86b341c_Struct(_61325_f.get()._field_Kind.ptr());;
					if ((((_61521_strct != nullptr) && (_61521_strct.get()._field_Decl != nullptr)) && _61521_strct.get()._field_Decl.get()._field_Binded)) {
						goto _iter_next_1accb1285;
					};
					if (_61221_writed) {
						_1a9da9084_write(_self_, jule::Str(" &&", 3));
					};
					_61221_writed=true;
					_1a9da9084_write(_self_, jule::Str("\n", 1));
					_1a9da988c_indent(_self_);
					_1a9da9084_write(_self_, jule::Str("this->", 6));
					jule::Str _62621_fIdent = static__1a962468a_field(&(_61325_f.get()._field_Decl));;
					_1a9da9309_writeR(_self_, &(_62621_fIdent));
					_1a9da9084_write(_self_, jule::Str(" == _other.", 11));
					_1a9da9309_writeR(_self_, &(_62621_fIdent));
				}
				_iter_next_1accb1285:;
				++it;
				goto _iter_begin_1accb1285;
			}
			_iter_end_1accb1285:;
		};
		_1a9da96b1_doneIndent(_self_);
		if ((!(_61221_writed))) {
			_1a9da9084_write(_self_, jule::Str("true", 4));
		};
		_1a9da9084_write(_self_, jule::Str(";\n", 2));
		_1a9da96b1_doneIndent(_self_);
		_1a9da988c_indent(_self_);
		_1a9da9084_write(_self_, jule::Str("}", 1));
	} else {
		_1a9da9084_write(_self_, jule::Str(" return true; }", 15));
	};
	_1a9da9084_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a9dad52d_structureOperatorNotEq(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Str* _64543_ident, jule::Ptr<_1a88b9b51_StructIns>* _64560_s) {
	if ((!((*(_64560_s)).get()._field_Comparable))) {
		return;;
	};
	_1a9da988c_indent(_self_);
	if (_1a93dc50d_Inline) {
		_1a9da9084_write(_self_, jule::Str("inline ", 7));
	};
	_1a9da9084_write(_self_, jule::Str("bool operator!=(", 16));
	_1a9da9309_writeR(_self_, _64543_ident);
	_1a9da9084_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a9dad8e6_structureOperator(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Str* _65938_ident, jule::Ptr<_1a88cee0d_FnIns>* _65955_f, jule::Str _65966_op) {
	if (((*(_65955_f)) == nullptr)) {
		return;;
	};
	jule::Bool _66413_unary = ((*(_65955_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _66513_assignment = _1a88cc6be_IsVoid((*(_65955_f)).get()._field_Decl.ptr());;
	_1a9da988c_indent(_self_);
	if (_1a93dc50d_Inline) {
		_1a9da9084_write(_self_, jule::Str("inline ", 7));
	};
	if (_66513_assignment) {
		_1a9da9309_writeR(_self_, _65938_ident);
		_1a9da9084_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1a86b1eba_Prim((*(_65955_f)).get()._field_Result.ptr()) == nullptr)) {
			_1a9da9309_writeR(_self_, _65938_ident);
		} else {
			_1a9da9084_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1a9da9084_write(_self_, jule::Str(" operator", 9));
	_1a9da9309_writeR(_self_, &(_65966_op));
	_1a9da9084_write(_self_, jule::Str("(", 1));
	if ((!(_66413_unary))) {
		jule::Ptr<_1a88ce03e_ParamIns> _68721_p = (*(_65955_f)).get()._field_Params[1LL];;
		_1a9da9084_write(_self_, _1a9dbc064_paramIns(_self_.get()._field_tc.ptr(), &(_68721_p)));
		_1a9da9084_write(_self_, jule::Str(" _other", 7));
	};
	_1a9da9084_write(_self_, jule::Str(") { ", 4));
	if ((!(_66513_assignment))) {
		_1a9da9084_write(_self_, jule::Str("return ", 7));
	};
	_1a9da9084_write(_self_, static__1a9623865_funcIns(_65955_f));
	if ((!(_66413_unary))) {
		_1a9da9084_write(_self_, jule::Str("(this, _other); ", 16));
		if (_66513_assignment) {
			_1a9da9084_write(_self_, jule::Str("return *this; ", 14));
		};
		_1a9da9084_write(_self_, jule::Str("}", 1));
	} else {
		_1a9da9084_write(_self_, jule::Str("(this); }", 9));
	};
	_1a9da9084_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a9dadb6b_structureOperators(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88b9b51_StructIns>* _70843_s) {
	jule::Str _70913_ident = static__1a96243e3_structureIns(_70843_s);;
	_1a9dad20e_structureOperatorEq(_self_, &(_70913_ident), _70843_s);
	_1a9dad52d_structureOperatorNotEq(_self_, &(_70913_ident), _70843_s);
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1a9dad8e6_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1a9dadde1_structureInsDecl(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88b9b51_StructIns>* _74741_s) {
	{
		auto expr = &((*(_74741_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accca05c:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _74821_m = *it;
			{
				if (_1a9db6525_isHeadDecl(&(_74821_m))) {
					_1a9db0200_funcDecl(_self_, &(_74821_m), false);
				};
			}
			_iter_next_1accca05c:;
			++it;
			goto _iter_begin_1accca05c;
		}
		_iter_end_1accca05c:;
	};
	_1a9da9084_write(_self_, jule::Str("struct ", 7));
	jule::Str _75513_outIdent = static__1a96243e3_structureIns(_74741_s);;
	_1a9da9309_writeR(_self_, &(_75513_outIdent));
	_1a9da9084_write(_self_, jule::Str(" {\n", 3));
	_1a9da94d5_addIndent(_self_);
	{
		auto expr = &((*(_74741_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acccbaca:;
		if (it != expr_end) {
			jule::Ptr<_1a88b915b_FieldIns> _76121_f = *it;
			{
				_1a9da988c_indent(_self_);
				_1a9dac8b2_fieldDecl(_self_, &(_76121_f));
				_1a9da9084_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1acccbaca:;
			++it;
			goto _iter_begin_1acccbaca;
		}
		_iter_end_1acccbaca:;
	};
	_1a9da988c_indent(_self_);
	_1a9dacb37_structureDestructor(_self_, _74741_s);
	_1a9da9084_write(_self_, jule::Str("\n\n", 2));
	_1a9dacdce_structureDeriveDefsDecls(_self_, _74741_s);
	_1a9dadb6b_structureOperators(_self_, _74741_s);
	_1a9da9084_write(_self_, jule::Str("\n", 1));
	_1a9da96b1_doneIndent(_self_);
	_1a9da988c_indent(_self_);
	_1a9da9084_write(_self_, jule::Str("};", 2));
}



inline void _1a9dae166_structureDecl(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88b6d3a_Struct>* _78138_s) {
	{
		auto expr = &((*(_78138_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accce825:;
		if (it != expr_end) {
			jule::Ptr<_1a88b9b51_StructIns> _78221_ins = *it;
			{
				_1a9dadde1_structureInsDecl(_self_, &(_78221_ins));
			}
			_iter_next_1accce825:;
			++it;
			goto _iter_begin_1accce825;
		}
		_iter_end_1accce825:;
	};
}



inline void _1a9dae342_structureDecls(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accd0062:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> _78821_s = *it;
			{
				if ((_78821_s.get()._field_Token != nullptr)) {
					_1a9dae166_structureDecl(_self_, &(_78821_s));
					_1a9da9084_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1accd0062:;
			++it;
			goto _iter_begin_1accd0062;
		}
		_iter_end_1accd0062:;
	};
}



inline void _1a9dae51d_structureMethodDecls(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accd1904:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> _79721_s = *it;
			{
				if ((_79721_s.get()._field_Token != nullptr)) {
					{
						auto expr = &(_79721_s.get()._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1accd2707:;
						if (it != expr_end) {
							jule::Ptr<_1a88b9b51_StructIns> _79929_ins = *it;
							{
								{
									auto expr = &(_79929_ins.get()._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1accd3043:;
									if (it != expr_end) {
										jule::Ptr<_1a88cc25c_Fn> _80033_m = *it;
										{
											if ((!(_1a9db6525_isHeadDecl(&(_80033_m))))) {
												_1a9daa4a3_pushResult(_self_, &(_80033_m));
												_1a9db0200_funcDecl(_self_, &(_80033_m), false);
											};
										}
										_iter_next_1accd3043:;
										++it;
										goto _iter_begin_1accd3043;
									}
									_iter_end_1accd3043:;
								};
							}
							_iter_next_1accd2707:;
							++it;
							goto _iter_begin_1accd2707;
						}
						_iter_end_1accd2707:;
					};
				};
			}
			_iter_next_1accd1904:;
			++it;
			goto _iter_begin_1accd1904;
		}
		_iter_end_1accd1904:;
	};
}



inline void _1a9dae793_paramsDecls(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>>* _81236_params) {
	if (((*(_81236_params)).len() == 0LL)) {
		_1a9da9084_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a9da9084_write(_self_, jule::Str("(", 1));
	{
		auto expr = _81236_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accd45e9:;
		if (it != expr_end) {
			jule::I64 _81914_i = it - expr->begin();
			jule::Ptr<_1a88ce03e_ParamIns> _81921_p = *it;
			{
				_1a9da9084_write(_self_, _1a9dbc064_paramIns(_self_.get()._field_tc.ptr(), &(_81921_p)));
				if ((((*(_81236_params)).len() - _81914_i) > 1LL)) {
					_1a9da9084_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1accd45e9:;
			++it;
			_81914_i++;
			goto _iter_begin_1accd45e9;
		}
		_iter_end_1accd45e9:;
	};
	_1a9da9084_write(_self_, jule::Str(")", 1));
}



inline void _1a9daeab2_funcHead(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88cee0d_FnIns>* _82933_f, jule::Bool _82944_ptr) {
	if ((((!(_82944_ptr)) && _1a93dc50d_Inline) && (!(_1a88ccb97_IsEntryPoint((*(_82933_f)).get()._field_Decl.ptr()))))) {
		_1a9da9084_write(_self_, jule::Str("inline ", 7));
	};
	_1a9dbc691_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _82933_f);
	if (_82944_ptr) {
		_1a9da9084_write(_self_, jule::Str("(*", 2));
		_1a9da9084_write(_self_, static__1a9623865_funcIns(_82933_f));
		_1a9da9084_write(_self_, jule::Str(")", 1));
	} else {
		_1a9da9084_write(_self_, jule::Str(" ", 1));
		_1a9da9084_write(_self_, static__1a9623865_funcIns(_82933_f));
	};
}



inline void _1a9daedd1_funcDeclIns(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88cee0d_FnIns>* _84436_f, jule::Bool _84447_ptr) {
	_1a9da988c_indent(_self_);
	_1a9daeab2_funcHead(_self_, _84436_f, _84447_ptr);
	_1a9dae793_paramsDecls(_self_, &((*(_84436_f)).get()._field_Params));
	_1a9da9084_write(_self_, jule::Str(";\n", 2));
}



inline void _1a9db0200_funcDecl(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88cc25c_Fn>* _85133_f, jule::Bool _85141_ptr) {
	{
		auto expr = &((*(_85133_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accda468:;
		if (it != expr_end) {
			jule::Ptr<_1a88cee0d_FnIns> _85221_c = *it;
			{
				_1a9daedd1_funcDeclIns(_self_, &(_85221_c), _85141_ptr);
			}
			_iter_next_1accda468:;
			++it;
			goto _iter_begin_1accda468;
		}
		_iter_end_1accda468:;
	};
}



inline void _1a9db05b8_funcDeclTrait(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88de47d_Trait>* _85738_t, jule::Ptr<_1a88cc25c_Fn>* _85754_f, jule::Bool _85762_ptr) {
	{
		auto expr = &((*(_85754_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accdb5ce:;
		if (it != expr_end) {
			jule::Ptr<_1a88cee0d_FnIns> _85821_c = *it;
			{
				jule::Ptr<_1a86ae79d_TypeKind> _85921_k = _85821_c.get()._field_Params[0LL].get()._field_Kind;;
				_85821_c.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>((*(_85738_t)), 2)});
				_1a9daedd1_funcDeclIns(_self_, &(_85821_c), _85762_ptr);
				_85821_c.get()._field_Params[0LL].get()._field_Kind=_85921_k;
			}
			_iter_next_1accdb5ce:;
			++it;
			goto _iter_begin_1accdb5ce;
		}
		_iter_end_1accdb5ce:;
	};
}



inline void _1a9db0794_funcDecls(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_1a9dabd34_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a8940e5d_Package>*)>([=](jule::Ptr<_1a8940e5d_Package>* _86735_pkg) mutable -> void {
		_1a9db52c1_iterFiles(_86735_pkg, jule::Fn<void(jule::Ptr<_1a89ab380_SymbolTable>*)>([=](jule::Ptr<_1a89ab380_SymbolTable>* _86836_file) mutable -> void {
			{
				auto expr = &((*(_86836_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1acce0292:;
				if (it != expr_end) {
					jule::Ptr<_1a88cc25c_Fn> _86929_f = *it;
					{
						if (((!(_86929_f.get()._field_Binded)) && (_86929_f.get()._field_Token != nullptr))) {
							_1a9daa4a3_pushResult(_self_, &(_86929_f));
							_1a9db0200_funcDecl(_self_, &(_86929_f), false);
						};
					}
					_iter_next_1acce0292:;
					++it;
					goto _iter_begin_1acce0292;
				}
				_iter_end_1acce0292:;
			};
		}));
	}));
}



inline void _1a9db0ab3_traitDataTypeMethods(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88de47d_Trait>* _87945_owner, jule::Ptr<_1a88de47d_Trait>* _87965_t) {
	{
		auto expr = &((*(_87965_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accdee0c:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _88021_m = *it;
			{
				jule::Ptr<_1a88cee0d_FnIns> _88121_ins = _88021_m.get()._field_Instances[0LL];;
				jule::Ptr<_1a88ce03e_ParamIns> _88221_p = _88121_ins.get()._field_Params[0LL];;
				_88221_p.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>((*(_87965_t)), 2)});
				{
					auto expr = _88121_ins.get()._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1acce2195:;
					if (it != expr_end) {
						jule::I64 _88618_i = it - expr.begin();
						jule::Ptr<_1a88ce03e_ParamIns> _88625_ip = *it;
						{
							if (_1a526b00b_IsAnonIdent(_88625_ip.get()._field_Decl.get()._field_Ident)) {
								_88625_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1a5530c2c_Itoa(_88618_i));
							};
						}
						_iter_next_1acce2195:;
						++it;
						_88618_i++;
						goto _iter_begin_1acce2195;
					}
					_iter_end_1acce2195:;
				};
				if ((!(_1ce99b3e3_Production))) {
					jule::Ptr<_1a88ce03e_ParamIns> _89225_lp = _88121_ins.get()._field_Params[(_88121_ins.get()._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ _89225_lp.get()._field_Kind.get()._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1acce6b7d:;
							{
								goto _match_end_1acce51cb;
							}
						}
						else {
							_case_begin_1acce531e:;
							{
								{ jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>> &__jule_push_dest = _88121_ins.get()._field_Params; __jule_push_dest.push(jule::new_ptr<_1a88ce03e_ParamIns>(_1a88ce03e_ParamIns{._field_Decl=jule::new_ptr<_1a88ca920_Param>(_1a88ca920_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a9db725c_customType>(_1a9db725c_customType{._field_kind=jule::Str("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1acce51cb:;
					};
				};
				_1a9daa4a3_pushResult(_self_, &(_88021_m));
				_1a9db05b8_funcDeclTrait(_self_, _87945_owner, &(_88021_m), true);
			}
			_iter_next_1accdee0c:;
			++it;
			goto _iter_begin_1accdee0c;
		}
		_iter_end_1accdee0c:;
	};
}



inline void _1a9db0c8e_traitDataTypes(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_1a9dabd34_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a8940e5d_Package>*)>([=](jule::Ptr<_1a8940e5d_Package>* _91535_pkg) mutable -> void {
		_1a9db52c1_iterFiles(_91535_pkg, jule::Fn<void(jule::Ptr<_1a89ab380_SymbolTable>*)>([=](jule::Ptr<_1a89ab380_SymbolTable>* _91636_file) mutable -> void {
			{
				auto expr = &((*(_91636_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1acce891b:;
				if (it != expr_end) {
					jule::Ptr<_1a88de47d_Trait> _91729_t = *it;
					{
						if ((_91729_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_91729_t.get()._field_Methods.len() == 0LL)) {
							goto _iter_next_1acce891b;
						};
						_1a9da9084_write(_self_, jule::Str("struct ", 7));
						_1a9da9084_write(_self_, static__1a9623b0c_traitDecl(_91729_t));
						_1a9da9084_write(_self_, jule::Str("MptrData", 8));
						_1a9da9084_write(_self_, jule::Str(" {\n", 3));
						_1a9da94d5_addIndent(_self_);
						_1a9db0ab3_traitDataTypeMethods(_self_, &(_91729_t), &(_91729_t));
						_1a9da96b1_doneIndent(_self_);
						_1a9da988c_indent(_self_);
						_1a9da9084_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1acce891b:;
					++it;
					goto _iter_begin_1acce891b;
				}
				_iter_end_1acce891b:;
			};
		}));
	}));
}



inline void _1a9db1014_paramIns(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88ce03e_ParamIns>* _93833_p) {
	_1a9da9084_write(_self_, _1a9dbc064_paramIns(_self_.get()._field_tc.ptr(), _93833_p));
	_1a9da9084_write(_self_, jule::Str(" ", 1));
	_1a9da9084_write(_self_, static__1a9623da4_param(&((*(_93833_p)).get()._field_Decl)));
}



inline void _1a9db1289_paramsIns(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>>* _94434_params) {
	if (((*(_94434_params)).len() == 0LL)) {
		_1a9da9084_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a9da9084_write(_self_, jule::Str("(", 1));
	{
		auto expr = _94434_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accecc0b:;
		if (it != expr_end) {
			jule::I64 _95014_i = it - expr->begin();
			jule::Ptr<_1a88ce03e_ParamIns> _95021_p = *it;
			{
				_1a9db1014_paramIns(_self_, &(_95021_p));
				if ((((*(_94434_params)).len() - _95014_i) > 1LL)) {
					_1a9da9084_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1accecc0b:;
			++it;
			_95014_i++;
			goto _iter_begin_1accecc0b;
		}
		_iter_end_1accecc0b:;
	};
	_1a9da9084_write(_self_, jule::Str(")", 1));
}



inline void _1a9db15a8_varInitExpr(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a8966901_Var>* _95936_v, jule::Fn<void(void)> _95945_init) {
	if ((*(_95936_v)).get()._field_Statically) {
		_1a9da9084_write(_self_, jule::Str("static ", 7));
	};
	_1a9da9084_write(_self_, _1a9dbd0ba_kind(_self_.get()._field_tc.ptr(), (*(_95936_v)).get()._field_Kind.get()._field_Kind));
	_1a9da9084_write(_self_, jule::Str(" ", 1));
	if ((*(_95936_v)).get()._field_Reference) {
		_1a9da9084_write(_self_, jule::Str("*", 1));
	};
	_1a9da9084_write(_self_, static__1a9624932_var((*(_95936_v))));
	if ((_95945_init != nullptr)) {
		_1a9da9084_write(_self_, jule::Str(" = ", 3));
		_95945_init();
	};
	_1a9da9084_write(_self_, jule::Str(";", 1));
}



inline void _1a9db182d_var(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a8966901_Var> _97727_v) {
	if (_1a526ac64_IsIgnoreIdent(_97727_v.get()._field_Ident)) {
		return;;
	};
	if (((_97727_v.get()._field_Value != nullptr) && (_97727_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_97727_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_97727_v.get()._field_Reference) {
				_1a9db15a8_varInitExpr(_self_, &(_97727_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1a9da9084_write(_self_, jule::Str("&(", 2));
					_1a961ae23_model(_self_.get()._field_ec, _97727_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_1a9da9084_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1a9db15a8_varInitExpr(_self_, &(_97727_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1a9611b72_possibleRefExpr(_self_.get()._field_ec, _97727_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_1a9db15a8_varInitExpr(_self_, &(_97727_v), nullptr);
		return;;
	};
	if (_97727_v.get()._field_Reference) {
		_1a9db15a8_varInitExpr(_self_, &(_97727_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a9da9084_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1a9dc4de6_shouldInitialized(&(_97727_v.get()._field_Kind.get()._field_Kind))) {
		_1a9db15a8_varInitExpr(_self_, &(_97727_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a961b198_initExpr(_self_.get()._field_ec, _97727_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1a9db15a8_varInitExpr(_self_, &(_97727_v), nullptr);
}



inline void _1a9db1aa3_funcIns(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88cee0d_FnIns>* _100832_f) {
	_1a9daeab2_funcHead(_self_, _100832_f, false);
	_1a9db1289_paramsIns(_self_, &((*(_100832_f)).get()._field_Params));
	_1a9da9084_write(_self_, jule::Str(" ", 1));
	_1a960aee0_funcScope(_self_.get()._field_sc, (*(_100832_f)));
	if (((*(_100832_f)).get()._field_Scope != nullptr)) {
		_1a9da9084_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _1a9db1d28_func(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88cc25c_Fn>* _101829_f) {
	{
		auto expr = &((*(_101829_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd0a367:;
		if (it != expr_end) {
			jule::Ptr<_1a88cee0d_FnIns> _101921_ins = *it;
			{
				_1a9db1aa3_funcIns(_self_, &(_101921_ins));
			}
			_iter_next_1acd0a367:;
			++it;
			goto _iter_begin_1acd0a367;
		}
		_iter_end_1acd0a367:;
	};
}



inline void _1a9db2147_funcTrait(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a9da755a_traitHash>* _102434_hash, jule::Ptr<_1a88cc25c_Fn>* _102457_f) {
	jule::Str _102513_ident = (*(_102457_f)).get()._field_Ident;;
	{
		auto expr = &((*(_102457_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd0b6ba:;
		if (it != expr_end) {
			jule::Ptr<_1a88cee0d_FnIns> _102621_ins = *it;
			{
				_102621_ins.get()._field_Scope=nullptr;
				(*(_102457_f)).get()._field_Ident=_102513_ident;
				((*(_102457_f)).get()._field_Ident).append("_", 1);
				(*(_102457_f)).get()._field_Ident+=(*(_102434_hash)).get()._field_t.get()._field_Ident;
				((*(_102457_f)).get()._field_Ident).append("_", 1);
				(*(_102457_f)).get()._field_Ident+=_1a5530c2c_Itoa((*(_102434_hash)).get()._field_i);
				jule::Ptr<_1a86ae79d_TypeKind> _103521_k = _102621_ins.get()._field_Params[0LL].get()._field_Kind;;
				_102621_ins.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>((*(_102434_hash)).get()._field_t, 2)});
				_1a9db1aa3_funcIns(_self_, &(_102621_ins));
				_102621_ins.get()._field_Params[0LL].get()._field_Kind=_103521_k;
			}
			_iter_next_1acd0b6ba:;
			++it;
			goto _iter_begin_1acd0b6ba;
		}
		_iter_end_1acd0b6ba:;
	};
	(*(_102457_f)).get()._field_Ident=_102513_ident;
}



inline void _1a9db2466_traitWrapper(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88cc25c_Fn>* _104337_m, jule::Ptr<_1a9da755a_traitHash>* _104350_hash) {
	_1a9db2147_funcTrait(_self_, _104350_hash, _104337_m);
	if (((*(_104350_hash)).get()._field_s == nullptr)) {
		if (_1ce99b3e3_Production) {
			_1a9da9084_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1a9da9084_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _105513_ptr = (!(_1a88cb26c_IsRef((*(_104337_m)).get()._field_Params[0LL].ptr())));;
	jule::Ptr<_1a88cc25c_Fn> _105717_sm = _1a88baaec_FindMethod((*(_104350_hash)).get()._field_s.ptr(), (*(_104337_m)).get()._field_Ident, false);;
	if (((_105717_sm == nullptr) || (_105717_sm.get()._field_Instances.len() == 0LL))) {
		return;;
	};
	_1a9da94d5_addIndent(_self_);
	_1a9da9084_write(_self_, jule::Str("{\n", 2));
	_1a9da988c_indent(_self_);
	if ((_105717_sm.get()._field_Exceptional || (!(_1a88cc6be_IsVoid(_105717_sm.ptr()))))) {
		_1a9da9084_write(_self_, jule::Str("return ", 7));
	};
	_1a9da9084_write(_self_, static__1a96235bd_func(&(_105717_sm)));
	_1a9da9084_write(_self_, jule::Str("(", 1));
	if (_105513_ptr) {
		_1a9da9084_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_1a9da9084_write(_self_, _1a9dbb63a_structureIns(_self_.get()._field_tc.ptr(), (*(_104350_hash)).get()._field_s));
		_1a9da9084_write(_self_, jule::Str(">(", 2));
		if ((!(_1ce99b3e3_Production))) {
			_1a9da9084_write(_self_, jule::Str("_00___file", 10));
		};
		_1a9da9084_write(_self_, jule::Str(")", 1));
	} else {
		_1a9da9084_write(_self_, jule::Str("_self_.data.as<", 15));
		_1a9da9084_write(_self_, _1a9dbb32c_structure(_self_.get()._field_tc.ptr(), _105717_sm.get()._field_Owner));
		_1a9da9084_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*(_104337_m)).get()._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1acd142a5:;
		if (it != expr_end) {
			jule::Ptr<_1a88ca920_Param> _108316_mp = *it;
			{
				_1a9da9084_write(_self_, jule::Str(", ", 2));
				_1a9da9084_write(_self_, static__1a9623da4_param(&(_108316_mp)));
			}
			_iter_next_1acd142a5:;
			++it;
			goto _iter_begin_1acd142a5;
		}
		_iter_end_1acd142a5:;
	};
	_1a9da9084_write(_self_, jule::Str(");\n}\n", 5));
	_1a9da96b1_doneIndent(_self_);
}



inline void _1a9db2642_traitWrappers(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd17c15:;
		if (it != expr_end) {
			jule::Ptr<_1a9da755a_traitHash> _109221_hash = *it;
			{
				{
					auto expr = &(_109221_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acd185b7:;
					if (it != expr_end) {
						jule::Ptr<_1a88cc25c_Fn> _109325_m = *it;
						{
							_1a9db2466_traitWrapper(_self_, &(_109325_m), &(_109221_hash));
						}
						_iter_next_1acd185b7:;
						++it;
						goto _iter_begin_1acd185b7;
					}
					_iter_end_1acd185b7:;
				};
			}
			_iter_next_1acd17c15:;
			++it;
			goto _iter_begin_1acd17c15;
		}
		_iter_end_1acd17c15:;
	};
}



inline void _1a9db2961_traitDataMethods(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88de47d_Trait>* _109941_t, jule::Ptr<_1a9da755a_traitHash>* _109953_hash) {
	{
		auto expr = &((*(_109941_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd18d6a:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _110021_m = *it;
			{
				jule::Str _110117_mIdent = static__1a96235bd_func(&(_110021_m));;
				_1a9da988c_indent(_self_);
				_1a9da9084_write(_self_, jule::Str(".", 1));
				_1a9da9309_writeR(_self_, &(_110117_mIdent));
				_1a9da9084_write(_self_, jule::Str("=", 1));
				_1a9da9309_writeR(_self_, &(_110117_mIdent));
				_1a9da9084_write(_self_, jule::Str("_", 1));
				_1a9da9309_writeR(_self_, &((*(_109953_hash)).get()._field_t.get()._field_Ident));
				_1a9da9084_write(_self_, jule::Str("_", 1));
				_1a9da9084_write(_self_, _1a5530c2c_Itoa((*(_109953_hash)).get()._field_i));
				_1a9da9084_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_1acd18d6a:;
			++it;
			goto _iter_begin_1acd18d6a;
		}
		_iter_end_1acd18d6a:;
	};
}



inline void _1a9db2c80_traitData(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a9da755a_traitHash>* _111534_hash, jule::Ptr<_1a88de47d_Trait>* _111557_old) {
	if (((*(_111534_hash)).get()._field_t.get()._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _111913_ident = static__1a9623b0c_traitDecl((*(_111534_hash)).get()._field_t);;
	if (((*(_111534_hash)).get()._field_t != (*(_111557_old)))) {
		if (((*(_111557_old)) != nullptr)) {
			_1a9da96b1_doneIndent(_self_);
			_1a9da988c_indent(_self_);
			_1a9da9084_write(_self_, jule::Str("};\n", 3));
		};
		_1a9da9084_write(_self_, jule::Str("static ", 7));
		_1a9da9309_writeR(_self_, &(_111913_ident));
		_1a9da9084_write(_self_, jule::Str("MptrData ", 9));
		_1a9da9309_writeR(_self_, &(_111913_ident));
		_1a9da9084_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_111557_old))=(*(_111534_hash)).get()._field_t;
		_1a9da94d5_addIndent(_self_);
	};
	_1a9da988c_indent(_self_);
	_1a9da9084_write(_self_, jule::Str("{\n", 2));
	_1a9da94d5_addIndent(_self_);
	_1a9db2961_traitDataMethods(_self_, &((*(_111534_hash)).get()._field_t), _111534_hash);
	_1a9da96b1_doneIndent(_self_);
	_1a9da988c_indent(_self_);
	_1a9da9084_write(_self_, jule::Str("},\n", 3));
}



inline void _1a9db2e5b_traitDatas(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	jule::Ptr<_1a88de47d_Trait> _114417_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd219cc:;
		if (it != expr_end) {
			jule::Ptr<_1a9da755a_traitHash> _114521_hash = *it;
			{
				_1a9db2c80_traitData(_self_, &(_114521_hash), &(_114417_old));
			}
			_iter_next_1acd219cc:;
			++it;
			goto _iter_begin_1acd219cc;
		}
		_iter_end_1acd219cc:;
	};
	if ((_114417_old != nullptr)) {
		_1a9da96b1_doneIndent(_self_);
		_1a9da988c_indent(_self_);
		_1a9da9084_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1a9db3137_globals(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd234a1:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> _115621_v = *it;
			{
				_1a9da9084_write(_self_, _1a9dbd0ba_kind(_self_.get()._field_tc.ptr(), _115621_v.get()._field_Kind.get()._field_Kind));
				_1a9da9084_write(_self_, jule::Str(" ", 1));
				_1a9da9084_write(_self_, static__1a9624932_var(_115621_v));
				_1a9da9084_write(_self_, jule::Str(" = ", 3));
				_1a961ae23_model(_self_.get()._field_ec, _115621_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_1a9da9084_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1acd234a1:;
			++it;
			goto _iter_begin_1acd234a1;
		}
		_iter_end_1acd234a1:;
	};
}



inline void _1a9db3313_decls(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_1a9dac1db_traitDecls(_self_);
	_1a9dac63c_structurePlainDecls(_self_);
	_1a9dae342_structureDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1a9dae51d_structureMethodDecls(_self_);
	_1a9db0794_funcDecls(_self_);
	_1a9da9084_write(_self_, jule::Str("\n\n", 2));
	_1a9db0c8e_traitDataTypes(_self_);
	_1a9da9084_write(_self_, jule::Str("\n\n", 2));
	_1a9db2642_traitWrappers(_self_);
	_1a9da9084_write(_self_, jule::Str("\n\n", 2));
	_1a9db2e5b_traitDatas(_self_);
	_1a9da9084_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1a9db3137_globals(_self_);
}



inline void _1a9db3588_structureMethods(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88b9b51_StructIns>* _118441_s) {
	{
		auto expr = &((*(_118441_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd287a3:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _118521_f = *it;
			{
				_1a9db1d28_func(_self_, &(_118521_f));
				_1a9da9084_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1acd287a3:;
			++it;
			goto _iter_begin_1acd287a3;
		}
		_iter_end_1acd287a3:;
	};
}



inline void _1a9db380d_structureDeriveDefs(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88b9b51_StructIns>* _119144_s) {
	if (_1a88b8666_IsDerives((*(_119144_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1a9da9084_write(_self_, _1a961e443_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_119144_s)).get()._field_Decl)));
		_1a9da9084_write(_self_, jule::Str("{\n", 2));
		_1a9da94d5_addIndent(_self_);
		_1a9da988c_indent(_self_);
		_1a9da9084_write(_self_, _1a9dbb63a_structureIns(_self_.get()._field_tc.ptr(), (*(_119144_s))));
		_1a9da9084_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_119144_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acd2b333:;
			if (it != expr_end) {
				jule::Ptr<_1a88b915b_FieldIns> _119920_f = *it;
				{
					jule::Str _120021_ident = static__1a962468a_field(&(_119920_f.get()._field_Decl));;
					_1a9da988c_indent(_self_);
					_1a9da9084_write(_self_, jule::Str("clone.", 6));
					_1a9da9309_writeR(_self_, &(_120021_ident));
					_1a9da9084_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1a9da9309_writeR(_self_, &(_120021_ident));
					_1a9da9084_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1acd2b333:;
				++it;
				goto _iter_begin_1acd2b333;
			}
			_iter_end_1acd2b333:;
		};
		_1a9da988c_indent(_self_);
		_1a9da9084_write(_self_, jule::Str("return clone;\n", 14));
		_1a9da96b1_doneIndent(_self_);
		_1a9da9084_write(_self_, jule::Str("}", 1));
	};
}



inline void _1a9db3a83_structureOstream(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88b9b51_StructIns>* _121541_s) {
	_1a9da988c_indent(_self_);
	_1a9da9084_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1a9da9084_write(_self_, static__1a96243e3_structureIns(_121541_s));
	_1a9da9084_write(_self_, jule::Str(" _Src) {\n", 9));
	_1a9da94d5_addIndent(_self_);
	_1a9da988c_indent(_self_);
	jule::Ptr<_1a88cc25c_Fn> _122317_fts = _1a88baaec_FindMethod((*(_121541_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__1a8968073_Str(_122317_fts)) {
		_1a9da9084_write(_self_, jule::Str("_Stream << ", 11));
		_1a9da9084_write(_self_, static__1a96235bd_func(&(_122317_fts)));
		_1a9da9084_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1a9da9084_write(_self_, jule::Str("_Stream << \"", 12));
		_1a9da9309_writeR(_self_, &((*(_121541_s)).get()._field_Decl.get()._field_Ident));
		_1a9da9084_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_121541_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acd325ae:;
			if (it != expr_end) {
				jule::I64 _123318_i = it - expr->begin();
				jule::Ptr<_1a88b915b_FieldIns> _123325_f = *it;
				{
					_1a9da988c_indent(_self_);
					_1a9da9084_write(_self_, jule::Str("_Stream << \"", 12));
					_1a9da9309_writeR(_self_, &(_123325_f.get()._field_Decl.get()._field_Ident));
					_1a9da9084_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1a88b9b51_StructIns> _124021_strct = _1a86b341c_Struct(_123325_f.get()._field_Kind.ptr());;
					if ((((_124021_strct != nullptr) && (_124021_strct.get()._field_Decl != nullptr)) && _124021_strct.get()._field_Decl.get()._field_Binded)) {
						_1a9da9084_write(_self_, jule::Str(" cpp.", 5));
						_1a9da9084_write(_self_, static__1a962468a_field(&(_123325_f.get()._field_Decl)));
						_1a9da9084_write(_self_, jule::Str("\"", 1));
					} else {
						_1a9da9084_write(_self_, jule::Str("\" << _Src.", 10));
						_1a9da9084_write(_self_, static__1a962468a_field(&(_123325_f.get()._field_Decl)));
					};
					if (((_123318_i + 1LL) < (*(_121541_s)).get()._field_Fields.len())) {
						_1a9da9084_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1a9da9084_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1acd325ae:;
				++it;
				_123318_i++;
				goto _iter_begin_1acd325ae;
			}
			_iter_end_1acd325ae:;
		};
		_1a9da988c_indent(_self_);
		_1a9da9084_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1a9da988c_indent(_self_);
	_1a9da9084_write(_self_, jule::Str("return _Stream;\n", 16));
	_1a9da96b1_doneIndent(_self_);
	_1a9da9084_write(_self_, jule::Str("}", 1));
}



inline void _1a9db3d08_structureIns(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88b9b51_StructIns>* _126637_s) {
	_1a9db3588_structureMethods(_self_, _126637_s);
	_1a9da9084_write(_self_, jule::Str("\n\n", 2));
	_1a9db380d_structureDeriveDefs(_self_, _126637_s);
	_1a9da9084_write(_self_, jule::Str("\n\n", 2));
	_1a9db3a83_structureOstream(_self_, _126637_s);
}



inline void _1a9db407d_structure(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a88b6d3a_Struct>* _127434_s) {
	{
		auto expr = &((*(_127434_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd38ebc:;
		if (it != expr_end) {
			jule::Ptr<_1a88b9b51_StructIns> _127521_ins = *it;
			{
				_1a9db3d08_structureIns(_self_, &(_127521_ins));
				_1a9da9084_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1acd38ebc:;
			++it;
			goto _iter_begin_1acd38ebc;
		}
		_iter_end_1acd38ebc:;
	};
}



inline void _1a9db4259_structures(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd3a089:;
		if (it != expr_end) {
			jule::Ptr<_1a88b6d3a_Struct> _128221_s = *it;
			{
				if ((_128221_s.get()._field_Token != nullptr)) {
					_1a9db407d_structure(_self_, &(_128221_s));
					_1a9da9084_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1acd3a089:;
			++it;
			goto _iter_begin_1acd3a089;
		}
		_iter_end_1acd3a089:;
	};
}



inline void _1a9db4435_funcs(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_1a9dabd34_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a8940e5d_Package>*)>([=](jule::Ptr<_1a8940e5d_Package>* _129135_pkg) mutable -> void {
		_1a9db52c1_iterFiles(_129135_pkg, jule::Fn<void(jule::Ptr<_1a89ab380_SymbolTable>*)>([=](jule::Ptr<_1a89ab380_SymbolTable>* _129236_file) mutable -> void {
			{
				auto expr = &((*(_129236_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1acd3d08c:;
				if (it != expr_end) {
					jule::Ptr<_1a88cc25c_Fn> _129329_f = *it;
					{
						if (((!(_1ce99a986_Test)) && _1a9dc4b4e_hasDirective(&(_129329_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1acd3d08c;
						};
						if (((!(_129329_f.get()._field_Binded)) && (_129329_f.get()._field_Token != nullptr))) {
							_1a9db1d28_func(_self_, &(_129329_f));
							_1a9da9084_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1acd3d08c:;
					++it;
					goto _iter_begin_1acd3d08c;
				}
				_iter_end_1acd3d08c:;
			};
		}));
	}));
}



inline void _1a9db46aa_pushInit(jule::Ptr<_1a9da8935_ObjectCoder> _self_, jule::Ptr<_1a8940e5d_Package>* _130633_pkg) {
	_1a9db52c1_iterFiles(_130633_pkg, jule::Fn<void(jule::Ptr<_1a89ab380_SymbolTable>*)>([=](jule::Ptr<_1a89ab380_SymbolTable>* _130732_file) mutable -> void {
		{
			auto expr = &((*(_130732_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acd404ac:;
			if (it != expr_end) {
				jule::Ptr<_1a88cc25c_Fn> _130820_f = *it;
				{
					if (_130820_f.get()._field_Ident.equal("init", 4)) {
						_1a9da988c_indent(_self_);
						_1a9da9084_write(_self_, static__1a96235bd_func(&(_130820_f)));
						_1a9da9084_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1acd404ac:;
				++it;
				goto _iter_begin_1acd404ac;
			}
			_iter_end_1acd404ac:;
		};
	}));
}



inline void _1a9db4886_initCaller(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_1a9da9084_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1a9da94d5_addIndent(_self_);
	_1a9dabd34_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a8940e5d_Package>*)>([=](jule::Ptr<_1a8940e5d_Package>* _132135_pkg) mutable -> void {
		_1a9db46aa_pushInit(_self_, _132135_pkg);
	}));
	_1a9da96b1_doneIndent(_self_);
	_1a9da9084_write(_self_, jule::Str("\n}", 2));
}



inline void _1a9db4a62_end(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_1a9da9084_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1ce99a986_Test) {
		_1a9da9084_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1a9da9084_write(_self_, jule::Str("entry_point();", 14));
	};
	_1a9da9084_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a9db4c3d_serializeHead(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_1a9dabaae_prepareStructures(_self_);
	_1a9dac010_buildTraitMap(_self_);
	_1a9dab482_head(_self_);
	_1a9da9084_write(_self_, jule::Str("\n", 1));
	_1a9db3313_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _135621_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acd460ea:;
			if (it != expr_end) {
				jule::Str _135720_decl = *it;
				{
					_135621_head+=_135720_decl;
					_self_.get()._field_declPos+=_135720_decl.len();
				}
				_iter_next_1acd460ea:;
				++it;
				goto _iter_begin_1acd460ea;
			}
			_iter_end_1acd460ea:;
		};
		_135621_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_135621_head;
	};
	_1a9da9084_write(_self_, jule::Str("\n", 1));
	_1a9db4259_structures(_self_);
	_1a9db4435_funcs(_self_);
	_1a9db4886_initCaller(_self_);
	_1a9da9084_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _137221_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_137221_head+=_self_.get()._field_anyObj;
		_137221_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_137221_head;
	};
}



inline void _1a9db4e19_Serialize(jule::Ptr<_1a9da8935_ObjectCoder> _self_) {
	_1a9db4c3d_serializeHead(_self_);
	_1a9db4a62_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9da8935_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a944a1b4_ObjectDeadCode> static__1a947c081_new(jule::Ptr<_1a93d5847_IR>* _3424_ir) {
	return jule::new_ptr<_1a944a1b4_ObjectDeadCode>(_1a944a1b4_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1ac7bad28_isLive(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a88de47d_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1a88de47d_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ac7bca72:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1ac7bc786:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7bd259:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ac7bd259:;
			++it;
			_5213_i++;
			goto _iter_begin_1ac7bd259;
		}
		_iter_end_1ac7bd259:;
	};
	return false;;
}

inline jule::Bool _1ac7c0987_isLive(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a88cee0d_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1a88cee0d_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ac7c2b21:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1ac7c2a66:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7c33e6:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ac7c33e6:;
			++it;
			_5213_i++;
			goto _iter_begin_1ac7c33e6;
		}
		_iter_end_1ac7c33e6:;
	};
	return false;;
}

inline jule::Bool _1ac7c9d7b_isLive(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a88b9b51_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1a88b9b51_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ac7cb102:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1ac7cad7c:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7cb1ce:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ac7cb1ce:;
			++it;
			_5213_i++;
			goto _iter_begin_1ac7cb1ce;
		}
		_iter_end_1ac7cb1ce:;
	};
	return false;;
}

inline jule::Bool _1ac7cd775_isLive(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a8966901_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1a8966901_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ac7d02b0:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1ac7d018e:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7d0a1e:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1ac7d0a1e:;
			++it;
			_5213_i++;
			goto _iter_begin_1ac7d0a1e;
		}
		_iter_end_1ac7d0a1e:;
	};
	return false;;
}



inline void _1ac7bb17a_pushLive(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a88de47d_Trait> _6035_t) {
	{
		
{
			_case_begin_1ac7bea74:;
			{
				{ jule::Slice<jule::Ptr<_1a88de47d_Trait>> &__jule_push_dest = _self_.get()._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1ac7be722:;
	};
}

inline void _1ac7c149e_pushLive(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a88cee0d_FnIns> _6035_t) {
	{
		
{
			_case_begin_1ac7c5393:;
			{
				{ jule::Slice<jule::Ptr<_1a88cee0d_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1ac7c511d:;
	};
}

inline void _1ac7c74b6_pushLive(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a88b9b51_StructIns> _6035_t) {
	{
		
{
			_case_begin_1ac7c8bb0:;
			{
				{ jule::Slice<jule::Ptr<_1a88b9b51_StructIns>> &__jule_push_dest = _self_.get()._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1ac7c88c4:;
	};
}

inline void _1ac7cdac7_pushLive(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a8966901_Var> _6035_t) {
	{
		
{
			_case_begin_1ac7d2603:;
			{
				{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = _self_.get()._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1ac7d2526:;
	};
}



inline void _1a947c889_setReferencesAsLive(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a88d2d67_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1a88d3450_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1a88d375d_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1ac7b992b:;
					{
						jule::Ptr<_1a88de47d_Trait> _8225_t = _7921_ref.cast_ptr<_1a88de47d_Trait>(&__jule_any_type10);;
						if (_1ac7bad28_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1ac7b8e47;
						};
						_1ac7bb17a_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ac7bba0a:;
							if (it != expr_end) {
								jule::Ptr<_1a88cc25c_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ac7c0107:;
										if (it != expr_end) {
											jule::Ptr<_1a88cee0d_FnIns> _8833_mins = *it;
											{
												if (_1ac7c0987_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1ac7c0107;
												};
												_1ac7c149e_pushLive(_self_, _8833_mins);
												_1a947c889_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_1ac7c0107:;
											++it;
											goto _iter_begin_1ac7c0107;
										}
										_iter_end_1ac7c0107:;
									};
								}
								_iter_next_1ac7bba0a:;
								++it;
								goto _iter_begin_1ac7bba0a;
							}
							_iter_end_1ac7bba0a:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1ac7b9992:;
					{
						jule::Ptr<_1a88cee0d_FnIns> _9725_f = _7921_ref.cast_ptr<_1a88cee0d_FnIns>(&__jule_any_type7);;
						if (_1ac7c0987_isLive(_self_, &(_9725_f))) {
							goto _match_end_1ac7b9ab3;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1ac7c9d7b_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_1ac7c74b6_pushLive(_self_, _9725_f.get()._field_Owner);
								_1a947c889_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_1ac7c149e_pushLive(_self_, _9725_f);
						_1a947c889_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1ac7b9bc3:;
					{
						jule::Ptr<_1a8966901_Var> _11025_v = _7921_ref.cast_ptr<_1a8966901_Var>(&__jule_any_type8);;
						if (_1ac7cd775_isLive(_self_, &(_11025_v))) {
							goto _match_end_1ac7b9ab3;
						};
						_1ac7cdac7_pushLive(_self_, _11025_v);
						_1a947c889_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1ac7b9c39:;
					{
						jule::Ptr<_1a88b9b51_StructIns> _11725_s = _7921_ref.cast_ptr<_1a88b9b51_StructIns>(&__jule_any_type9);;
						if (_1ac7c9d7b_isLive(_self_, &(_11725_s))) {
							goto _match_end_1ac7b9ab3;
						};
						_1ac7c74b6_pushLive(_self_, _11725_s);
						_1a947c889_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ac7d4b88:;
							if (it != expr_end) {
								jule::Ptr<_1a88cc25c_Fn> _12329_m = *it;
								{
									{
										auto expr = &(_12329_m.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ac7d5b67:;
										if (it != expr_end) {
											jule::Ptr<_1a88cee0d_FnIns> _12433_ins = *it;
											{
												if (_1ac7c0987_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1ac7d5b67;
												};
												if (_1a9480271_isTraitMethod(&(_11725_s), &(_12433_ins))) {
													_1ac7c149e_pushLive(_self_, _12433_ins);
													_1a947c889_setReferencesAsLive(_self_, &(_12433_ins.get()._field_Refers));
												};
											}
											_iter_next_1ac7d5b67:;
											++it;
											goto _iter_begin_1ac7d5b67;
										}
										_iter_end_1ac7d5b67:;
									};
								}
								_iter_next_1ac7d4b88:;
								++it;
								goto _iter_begin_1ac7d4b88;
							}
							_iter_end_1ac7d4b88:;
						};
					}
				}
				_match_end_1ac7b9ab3:;
			};
		}
	_iter_next_1ac7b8e47:;
	}
	_iter_end_1ac7b8e47:;;
}



inline void _1a947cb0e_inits(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a8940e5d_Package>* _14130_pkg) {
	{
		auto expr = &((*(_14130_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7d764c:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &(_14221_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac7d61b7:;
					if (it != expr_end) {
						jule::Ptr<_1a88cc25c_Fn> _14325_f = *it;
						{
							if (_14325_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_1a88cee0d_FnIns> _14529_ins = _14325_f.get()._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1a88cee0d_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_14529_ins); };
								_1a947c889_setReferencesAsLive(_self_, &(_14529_ins.get()._field_Refers));
							};
						}
						_iter_next_1ac7d61b7:;
						++it;
						goto _iter_begin_1ac7d61b7;
					}
					_iter_end_1ac7d61b7:;
				};
			}
			_iter_next_1ac7d764c:;
			++it;
			goto _iter_begin_1ac7d764c;
		}
		_iter_end_1ac7d764c:;
	};
}



inline void _1a947cd84_collectLivePackage(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a8940e5d_Package>* _15343_pkg) {
	_1a947cb0e_inits(_self_, _15343_pkg);
	if (_1ce99a986_Test) {
		{
			auto expr = &((*(_15343_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac7da1ee:;
			if (it != expr_end) {
				jule::Ptr<_1a89ab380_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &(_15925_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac7daa18:;
						if (it != expr_end) {
							jule::Ptr<_1a88cc25c_Fn> _16029_f = *it;
							{
								if (_1a947eddb_hasDirective(&(_16029_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_1a88cee0d_FnIns> _16233_ins = _16029_f.get()._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1a88cee0d_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_16233_ins); };
									_1a947c889_setReferencesAsLive(_self_, &(_16233_ins.get()._field_Refers));
								};
							}
							_iter_next_1ac7daa18:;
							++it;
							goto _iter_begin_1ac7daa18;
						}
						_iter_end_1ac7daa18:;
					};
				}
				_iter_next_1ac7da1ee:;
				++it;
				goto _iter_begin_1ac7da1ee;
			}
			_iter_end_1ac7da1ee:;
		};
	};
}



inline void _1a947d060_collectLive(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7d8609:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _17221_used = *it;
			{
				if ((!(_17221_used.get()._field_Binded))) {
					_1a947cd84_collectLivePackage(_self_, &(_17221_used.get()._field_Package));
				};
			}
			_iter_next_1ac7d8609:;
			++it;
			goto _iter_begin_1ac7d8609;
		}
		_iter_end_1ac7d8609:;
	};
	_1a947cd84_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_1a88cc25c_Fn> _18017_main = _1a894239e_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_1a88cee0d_FnIns> _18117_ins = _18017_main.get()._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1a88cee0d_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_18117_ins); };
	_1a947c889_setReferencesAsLive(_self_, &(_18117_ins.get()._field_Refers));
}



inline void _1a947d2d5_removeDeadGlobals(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a8966901_Var>>* _18642_vars) {
	jule::I64 _18717_i = 0LL;;
	while ((_18717_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1a8966901_Var> _18917_v = (*(_18642_vars))[_18717_i];;
			if (_1ac7cd775_isLive(_self_, &(_18917_v))) {
				(_18717_i)++;
				goto _iter_next_1ac7e018d;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18717_i),(*(_18642_vars)).slice((_18717_i + 1LL)));
		}
	_iter_next_1ac7e018d:;
	}
	_iter_end_1ac7e018d:;;
}



inline void _1a947d55a_removeDeadFns(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a88cc25c_Fn>>* _19838_funcs) {
	jule::I64 _19917_i = 0LL;;
	while ((_19917_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1a88cc25c_Fn> _20121_f = (*(_19838_funcs))[_19917_i];;
			jule::I64 _20221_j = 0LL;;
			while ((_20221_j < _20121_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1a88cee0d_FnIns> _20421_ins = _20121_f.get()._field_Instances[_20221_j];;
					if (_1ac7c0987_isLive(_self_, &(_20421_ins))) {
						(_20221_j)++;
						goto _iter_next_1ac7e3317;
					};
					_20121_f.get()._field_Instances=jule::append(_20121_f.get()._field_Instances.slice(0LL, _20221_j),_20121_f.get()._field_Instances.slice((_20221_j + 1LL)));
				}
			_iter_next_1ac7e3317:;
			}
			_iter_end_1ac7e3317:;;
			if ((_20121_f.get()._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19917_i),(*(_19838_funcs)).slice((_19917_i + 1LL)));
				goto _iter_next_1ac7e1ab8;
			};
			(_19917_i)++;
		}
	_iter_next_1ac7e1ab8:;
	}
	_iter_end_1ac7e1ab8:;;
}



inline void _1a947d7d0_removeDeadStructs(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a88b6d3a_Struct>>* _21942_structs) {
	jule::I64 _22017_i = 0LL;;
	while ((_22017_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1a88b6d3a_Struct> _22221_s = (*(_21942_structs))[_22017_i];;
			jule::I64 _22321_j = 0LL;;
			while ((_22321_j < _22221_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1a88b9b51_StructIns> _22525_ins = _22221_s.get()._field_Instances[_22321_j];;
					_1a947d55a_removeDeadFns(_self_, &(_22525_ins.get()._field_Methods));
					if (((_22525_ins.get()._field_Methods.len() != 0LL) || _1ac7c9d7b_isLive(_self_, &(_22525_ins)))) {
						(_22321_j)++;
						goto _iter_next_1ac7e6ea8;
					};
					_22221_s.get()._field_Instances=jule::append(_22221_s.get()._field_Instances.slice(0LL, _22321_j),_22221_s.get()._field_Instances.slice((_22321_j + 1LL)));
				}
			_iter_next_1ac7e6ea8:;
			}
			_iter_end_1ac7e6ea8:;;
			if ((_22221_s.get()._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22017_i),(*(_21942_structs)).slice((_22017_i + 1LL)));
				goto _iter_next_1ac7e601d;
			};
			(_22017_i)++;
		}
	_iter_next_1ac7e601d:;
	}
	_iter_end_1ac7e601d:;;
}



inline void _1a947da55_removeDeadTraits(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a88de47d_Trait>>* _24141_traits) {
	jule::I64 _24217_i = 0LL;;
	while ((_24217_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1a88de47d_Trait> _24421_t = (*(_24141_traits))[_24217_i];;
			if ((!(_1ac7bad28_isLive(_self_, &(_24421_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24217_i),(*(_24141_traits)).slice((_24217_i + 1LL)));
				goto _iter_next_1ac7ea3eb;
			};
			jule::I64 _24921_j = 0LL;;
			while ((_24921_j < _24421_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1a88b6d3a_Struct> _25121_s = _24421_t.get()._field_Implemented[_24921_j];;
					if ((_25121_s.get()._field_Instances.len() > 0LL)) {
						(_24921_j)++;
						goto _iter_next_1ac7eae35;
					};
					_24421_t.get()._field_Implemented=jule::append(_24421_t.get()._field_Implemented.slice(0LL, _24921_j),_24421_t.get()._field_Implemented.slice((_24921_j + 1LL)));
				}
			_iter_next_1ac7eae35:;
			}
			_iter_end_1ac7eae35:;;
			(_24217_i)++;
		}
	_iter_next_1ac7ea3eb:;
	}
	_iter_end_1ac7ea3eb:;;
}



inline void _1a947dcca_removeDeadsFile(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a89ab380_SymbolTable>* _26240_file) {
	_1a947d55a_removeDeadFns(_self_, &((*(_26240_file)).get()._field_Funcs));
	_1a947d7d0_removeDeadStructs(_self_, &((*(_26240_file)).get()._field_Structs));
	_1a947da55_removeDeadTraits(_self_, &((*(_26240_file)).get()._field_Traits));
	_1a947d2d5_removeDeadGlobals(_self_, &((*(_26240_file)).get()._field_Vars));
}



inline void _1a947e050_removeDeadsPackage(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_, jule::Ptr<_1a8940e5d_Package>* _26943_pkg) {
	{
		auto expr = &((*(_26943_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac800225:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _27021_file = *it;
			{
				_1a947dcca_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1ac800225:;
			++it;
			goto _iter_begin_1ac800225;
		}
		_iter_end_1ac800225:;
	};
}



inline void _1a947e22b_removeDeads(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac800885:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _27621_used = *it;
			{
				if ((!(_27621_used.get()._field_Binded))) {
					_1a947e050_removeDeadsPackage(_self_, &(_27621_used.get()._field_Package));
				};
			}
			_iter_next_1ac800885:;
			++it;
			goto _iter_begin_1ac800885;
		}
		_iter_end_1ac800885:;
	};
	_1a947e050_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1a947e407_elimanate(jule::Ptr<_1a944a1b4_ObjectDeadCode> _self_) {
	_1a947d060_collectLive(_self_);
	_1a947e22b_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a944a1b4_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1a93d5847_IR__jule_tuple_s_1a4deb40b_Log static__1a93d5c87_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1a93d5847_IR__jule_tuple_s_1a4deb40b_Log __jule_func_result;
	jule::Ptr<_1a93d30d6_JuleImporter> _2817_importer = static__1a93d34c1_New(_1a93d75e6_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1a8863347_Ast>> _2918_files;;
	jule::Slice<_1a4deb40b_Log> _2929_logs;;
	({
		__jule_tuple_sx_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a93d4879_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8940e5d_Package> _3918_pkg;;
	({
		__jule_tuple_x_1a8940e5d_Package__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a86ce108_AnalyzePackage(_2918_files, jule::Trait<_1a893a672_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a93d5847_IR> _4417_ir = jule::new_ptr<_1a93d5847_IR>(_1a93d5847_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1a93d3735_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1a93d73e8_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a93d622c_appendStructs(_1a93d5847_IR* _self_, jule::Ptr<_1a8940e5d_Package>* _5633_p, jule::Slice<jule::Ptr<_1a88b6d3a_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac782d56:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac783692:;
					if (it != expr_end) {
						jule::Ptr<_1a88b6d3a_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1ac783692:;
						++it;
						goto _iter_begin_1ac783692;
					}
					_iter_end_1ac783692:;
				};
			}
			_iter_next_1ac782d56:;
			++it;
			goto _iter_begin_1ac782d56;
		}
		_iter_end_1ac782d56:;
	};
}



inline jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> _1a93d6491_GetAllStructures(_1a93d5847_IR* _self_) {
	jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> _6917_buffer = nullptr;;
	_1a93d622c_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac78353d:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_Binded))) {
					_1a93d622c_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1ac78353d:;
			++it;
			goto _iter_begin_1ac78353d;
		}
		_iter_end_1ac78353d:;
	};
	return _6917_buffer;;
}



inline void _1a93d67b0_appendGlobals(_1a93d5847_IR* _self_, jule::Ptr<_1a8940e5d_Package>* _7933_p, jule::Slice<jule::Ptr<_1a8966901_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac785b6c:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac786475:;
					if (it != expr_end) {
						jule::Ptr<_1a8966901_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_Binded))) && (!(_8125_v.get()._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1ac786475:;
						++it;
						goto _iter_begin_1ac786475;
					}
					_iter_end_1ac786475:;
				};
			}
			_iter_next_1ac785b6c:;
			++it;
			goto _iter_begin_1ac785b6c;
		}
		_iter_end_1ac785b6c:;
	};
}



inline jule::Slice<jule::Ptr<_1a8966901_Var>> _1a93d6a24_GetAllGlobals(_1a93d5847_IR* _self_) {
	jule::Slice<jule::Ptr<_1a8966901_Var>> _9217_buffer = nullptr;;
	_1a93d67b0_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac786b5c:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_Binded))) {
					_1a93d67b0_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1ac786b5c:;
			++it;
			goto _iter_begin_1ac786b5c;
		}
		_iter_end_1ac786b5c:;
	};
	return _9217_buffer;;
}



inline void _1a93d6c00_Order(_1a93d5847_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1a93d6491_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1a93d6a24_GetAllGlobals(_self_);
	static__1a93d897c_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1a93d8b8b_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _1a93d5847_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a88b9eb4_Str(_1a88b9b51_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		(_25017_kind).append("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab68ad5e:;
			if (it != expr_end) {
				jule::Ptr<_1a86ad01b_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_1a86aeb55_Str((*(_25420_g)).get()._field_Kind.ptr());
					(_25017_kind).append(",", 1);
				}
				_iter_next_1ab68ad5e:;
				++it;
				goto _iter_begin_1ab68ad5e;
			}
			_iter_end_1ab68ad5e:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		(_25017_kind).append("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _1a88ba2c2_Equal(jule::Ptr<_1a88b9b51_StructIns> _self_, jule::Ptr<_1a86ae79d_TypeKind> _26521_other) {
	jule::Ptr<_1a88b9b51_StructIns> _26613_s = _1a86b341c_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_1a86aee63_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1ab68dea5:;
	}
	_iter_end_1ab68dea5:;;
	return true;;
}



inline jule::Bool _1a88ba745_Same(_1a88b9b51_StructIns* _self_, jule::Ptr<_1a88b9b51_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab69100c:;
		if (it != expr_end) {
			jule::I64 _29713_i = it - expr->begin();
			jule::Ptr<_1a86ad01b_InsGeneric> *_29716_g = it;
			{
				jule::Ptr<_1a86ad01b_InsGeneric> _29817_g2 = _29319_s.get()._field_Generics[_29713_i];;
				if ((((*(_29716_g)).get()._field_Kind.get()._field_BindIdent != _29817_g2.get()._field_Kind.get()._field_BindIdent) || (!(_1a86aee63_Equal((*(_29716_g)).get()._field_Kind, _29817_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1ab69100c:;
			++it;
			_29713_i++;
			goto _iter_begin_1ab69100c;
		}
		_iter_end_1ab69100c:;
	};
	return true;;
}



inline jule::Ptr<_1a88cc25c_Fn> _1a88baaec_FindMethod(_1a88b9b51_StructIns* _self_, jule::Str _30829_ident, jule::Bool _30841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab693185:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _30921_f = *it;
			{
				if (((_30921_f.get()._field_Statically == _30841_statically) && (_30921_f.get()._field_Ident == _30829_ident))) {
					return _30921_f;;
				};
			}
			_iter_next_1ab693185:;
			++it;
			goto _iter_begin_1ab693185;
		}
		_iter_end_1ab693185:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88b915b_FieldIns> _1a88bae0a_FindField(_1a88b9b51_StructIns* _self_, jule::Str _31928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6938a0:;
		if (it != expr_end) {
			jule::Ptr<_1a88b915b_FieldIns> _32021_f = *it;
			{
				if ((_32021_f.get()._field_Decl.get()._field_Ident == _31928_ident)) {
					return _32021_f;;
				};
			}
			_iter_next_1ab6938a0:;
			++it;
			goto _iter_begin_1ab6938a0;
		}
		_iter_end_1ab6938a0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a8966901_Var> _1a88bb218_FindStatic(_1a88b9b51_StructIns* _self_, jule::Str _33029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab695440:;
		if (it != expr_end) {
			jule::Ptr<_1a8966901_Var> _33121_v = *it;
			{
				if ((_33121_v.get()._field_Ident == _33029_ident)) {
					return _33121_v;;
				};
			}
			_iter_next_1ab695440:;
			++it;
			goto _iter_begin_1ab695440;
		}
		_iter_end_1ab695440:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a88b9b51_StructIns _Src) {
	_Stream << _1a88b9eb4_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a4e88663_Cmd> static__1a4e88a70_New(jule::Str _2619_path) {
	return jule::new_ptr<_1a4e88663_Cmd>(_1a4e88663_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1a4e88c4b_Spawn(_1a4e88663_Cmd* _self_) {
	({
		auto except = _1a4e8c7aa_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1a4e8918b_Wait(_1a4e88663_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _1a4e8cbea_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _1a4e8c7aa_spawn(_1a4e88663_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:42:13"));;
	};
	STARTUPINFOW _4417_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4517_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4417_startupInfo)), static_cast<jule::U64>(sizeof(_4417_startupInfo)));
		ZeroMemory((&(_4517_processInfo)), static_cast<jule::U64>(sizeof(_4517_processInfo)));
	};
	_4417_startupInfo.cb=static_cast<jule::U64>(sizeof(_4417_startupInfo));
	jule::Slice<jule::Str> _5117_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5117_args[0LL]=(*(_self_))._field_path;
	(_5117_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _5413_argv = _1d09d60ec_Utf16FromStr(_1a4e8d316_makeCmdLine(_5117_args));;
	jule::Slice<jule::U16> _5513_env = ({
		auto except = _1a4e8d6bd_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5617_envp = (&(_5513_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5617_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_5413_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5617_envp, nullptr, (&(_4417_startupInfo)), (&(_4517_processInfo))) == 0LL)) {
			return jule::VoidExceptional(jule::Any(_1a4e8e8ab_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4517_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4517_processInfo.hThread;
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1a4e8cbea_wait(_1a4e88663_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:85:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8817_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8817_exitCode)));
		_1d0a0e19c_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess))));
		_1d0a0e19c_CloseHandle(static_cast<jule::Uintptr>(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread))));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(static_cast<jule::I64>(_8817_exitCode)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4e88663_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _1d09d5250_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL));;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _1d09d54e7_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((55296LL + ((_7819_r >> 10LL) & 1023LL)));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((56320LL + (_7819_r & 1023LL)));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _1d09d5816_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _8813_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e3d15c:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_8813_n)++;
				};
			}
			_iter_next_1a9e3d15c:;
			++it;
			goto _iter_begin_1a9e3d15c;
		}
		_iter_end_1a9e3d15c:;
	};
	jule::Slice<jule::U16> _9513_a = jule::Slice<jule::U16>::alloc(_8813_n, _8813_n, 0);;
	_8813_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9e3dd50:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_1a9e3eda6:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>((*(_9712_v))));
							(_8813_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_1a9e40428:;
						{
							jule::I32 _10518_r1 = 0;;
							jule::I32 _10522_r2 = 0;;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _1d09d54e7_EncodeRune((*(_9712_v)));
								_10518_r1 = __jule_assign_result.__jule_result_arg0;
								_10522_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_9513_a[_8813_n]=static_cast<jule::U16>(static_cast<jule::U16>(_10518_r1));
							_9513_a[(_8813_n + 1LL)]=static_cast<jule::U16>(static_cast<jule::U16>(_10522_r2));
							_8813_n+=2LL;
						}
					}
					else {
						_case_begin_1a9e3ea10:;
						{
							_9513_a[_8813_n]=static_cast<jule::U16>(65533LLU);
							(_8813_n)++;
						}
					}
					_match_end_1a9e3e944:;
				};
			}
			_iter_next_1a9e3dd50:;
			++it;
			goto _iter_begin_1a9e3dd50;
		}
		_iter_end_1a9e3dd50:;
	};
	return _9513_a.slice(0LL, _8813_n);;
}



inline jule::Slice<jule::I32> _1d09d5aad_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I64 _12113_n = 0LL;;
	jule::I64 _12213_i = 0LL;;
	for (; (_12213_i < _11911_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11911_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1a9e4432d:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_12213_i + 1LL)])) && (_11911_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1a9e4399d:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_1d09d5250_DecodeRune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)), static_cast<jule::I32>(static_cast<jule::I32>(_11911_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1a9e43e10:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1a9e43daa:;
			};
			(_12113_n)++;
		}
	_iter_next_1a9e42b67:;
	}
	_iter_end_1a9e42b67:;;
	return _12013_a.slice(0LL, _12113_n);;
}



inline jule::Slice<jule::U16> _1d09d5dbb_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1a9e46297:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14929_r))}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1a9e46e79:;
			{
				jule::I32 _15614_r1 = 0;;
				jule::I32 _15618_r2 = 0;;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _1d09d54e7_EncodeRune(_14929_r);
					_15614_r1 = __jule_assign_result.__jule_result_arg0;
					_15618_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));;
			}
		}
		_match_end_1a9e461ba:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _1d09d60ec_Utf16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL, _209_runes.len(), 0);;
	{
		auto expr = &(_209_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b18b5c:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_1a9b18b5c;
				};
				_2113_buff=_1d09d5dbb_AppendRune(_2113_buff, (*(_2212_r)));
			}
			_iter_next_1a9b18b5c:;
			++it;
			goto _iter_begin_1a9b18b5c;
		}
		_iter_end_1a9b18b5c:;
	};
	return _1d09d5dbb_AppendRune(_2113_buff, 0LL);;
}



inline jule::Str _1d09d63a5_Utf16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _3813_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9b1a741:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					_3813_codePage=_3813_codePage.slice(0LL, _399_i);
					goto _iter_end_1a9b1a741;
				};
			}
			_iter_next_1a9b1a741:;
			++it;
			_399_i++;
			goto _iter_begin_1a9b1a741;
		}
		_iter_end_1a9b1a741:;
	};
	return static_cast<jule::Str>(_1d09d5aad_Decode(_3813_codePage));;
}



inline jule::Str _1d09d664c_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage = nullptr;;
	jule::I64 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5023_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_1d09d5aad_Decode(_5513_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5513_codePage; __jule_push_dest.push(_5813_r); };
		}
	_iter_next_1a9b1b0c1:;
	}
	_iter_end_1a9b1b0c1:;;
	return jule::Str();;
}



inline jule::I64 _1d095b4b2_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _1d0a0de05_GetStdHandle(jule::Uintptr _6417_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_6417_stdh))));;
}



inline jule::Bool _1d0a0e19c_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I64 _1d0a0e4dd_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return static_cast<jule::I64>(_wstat(((wchar_t*)(_6817_path)), _6833_stat));;
}



inline jule::I64 _1d0a0e8c8_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode) {
	return static_cast<jule::I64>(_wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode));;
}



inline jule::U32 _1d0a0eac6_GetLastError(void) {
	return static_cast<jule::U32>(GetLastError());;
}



inline jule::U32 _1d0a0ee17_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff))));;
}



inline jule::Bool _1d0a10456_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _1d0a106ed_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _1d0a10995_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _1d0a10e29_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1095_buff, jule::U16** _10917_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1095_buff)), ((wchar_t**)(_10917_fname))));;
}



inline jule::Bool _1d0a1126a_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)((&((*(_11440_mode)))))));;
}



inline jule::Bool _1d0a11831_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _1d0a11d2b_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _12510_written, void* _12524_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_12510_written)))), _12524_reserved);;
}



inline jule::Bool _1d0a122b0_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _13310_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)((&((*(_13310_readed)))))), nullptr);;
}



inline jule::Uintptr _1d0a127ee_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data))));;
}



inline jule::I64 _1d0a12b40_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return static_cast<jule::I64>(FindNextFileW(((HANDLE)(_14924_h)), _14939_data));;
}



inline jule::I64 _1d0a12dd7_FindClose(jule::Uintptr _15414_h) {
	return static_cast<jule::I64>(FindClose(((HANDLE)(_15414_h))));;
}



inline jule::I64 _1d0a14ceb_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _1d0a15170_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _1d0a1555a_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _1d0a15769_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _1d0a3180c_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _1d0a31eb1_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline __jule_tuple_i32__jule_tuple_int _1d0b1852b_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _1d0b17409_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_1d0b1798c_acceptRange _1969_accept = _1d0b17c9a_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1d0b1884a_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _1d0b17409_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_1d0b1798c_acceptRange _2439_accept = _1d0b17c9a_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1d0b18ae2_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1d0b1a4b7_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1a9d00b57;
			};
		}
	_iter_next_1a9d00b57:;
	}
	_iter_end_1a9d00b57:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1852b_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _1d0b19131_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1a9d070c0:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1a9d07147:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1a9d071be:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1a9d07246:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1a9d07499:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1a9d07521:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1a9d07048:;
			{
				return -1LL;;
			}
		}
		_match_end_1a9d066b8:;
	};
}



inline jule::I64 _1d0b1954e_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1a9d0c339:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37434_r));
				return 1LL;;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1a9d09e2a:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37434_r >> 6LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 2LL;;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1a9d0c191:;
			{
				_37434_r=65533LL;
				goto _case_begin_1a9d0c207;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1a9d0c207:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37434_r >> 12LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 3LL;;
			}
		}
		else {
			_case_begin_1a9d09b0b:;
			{
				_37419_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37434_r >> 18LL))));
				_37419_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU)));
				_37419_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU)));
				_37419_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU)));
				return 4LL;;
			}
		}
		_match_end_1a9d09a62:;
	};
}



inline jule::Slice<jule::U8> _1d0b19890_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _1d0b19bd1_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1d0b19bd1_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1a9d12e44:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1a9d14b49:;
			{
				_41242_r=128LL;
				goto _case_begin_1a9d13285;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1a9d13285:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1a9d1286c:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1a9d127b2:;
	};
}



inline jule::I64 _1d0b1a220_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1a9d162dd;
			};
			jule::U8 _48213_x = _1d0b17409_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1a9d162dd;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1a9d162dd;
			};
			_1d0b1798c_acceptRange _49213_accept = _1d0b17c9a_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1a9d162dd:;
	}
	_iter_end_1a9d162dd:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d0b1a4b7_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _1b622e5eb_getLastOsErrorWindows(void) {
	jule::U32 _169_err = _1d0a0eac6_GetLastError();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1a9d3c996:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a9d3e866:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a9d3e8cc:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1a9d3e943:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1a9d3cd1a:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1a9d3ccb5:;
	};
}



inline jule::Slice<jule::Str> _1b623061e_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _1b6230a92_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _1b6231455_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _1b6231455_getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _1d0a0ee17_GetCurrentDirectory(261LLU, (&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(jule::Any(_1b622e5eb_getLastOsErrorWindows(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _1d09d664c_U16PtrToStr((&(_1513_buff[0LL]))));;
}



inline jule::Bool _1a4cabb3a_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1a4d1bda9__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1a4d251e2_isExcludingLatin(_1a4cb5d20_Letter, _7613_r);;
}



inline jule::Bool _1a4d2460e_is16(jule::Slice<_1a4d22a4c_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aaaddd2e:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_1a4d22a4c_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1aaaddd2e:;
				++it;
				_19313_i++;
				goto _iter_begin_1aaaddd2e;
			}
			_iter_end_1aaaddd2e:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1a4d22a4c_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1aaadd900:;
	}
	_iter_end_1aaadd900:;;
	return false;;
}



inline jule::Bool _1a4d24950_is32(jule::Slice<_1a4d22ec0_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aaae48d4:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_1a4d22ec0_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1aaae48d4:;
				++it;
				_23013_i++;
				goto _iter_begin_1aaae48d4;
			}
			_iter_end_1aaae48d4:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1a4d22ec0_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1aaae441c:;
	}
	_iter_end_1aaae441c:;;
	return false;;
}



inline jule::Bool _1a4d251e2_isExcludingLatin(jule::Ptr<_1a4d23443_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1a4d22a4c_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _1a4d2460e_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_1a4d22ec0_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _1a4d24950_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _1a4d25489_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1a4d1bda9__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1a4d251e2_isExcludingLatin(_1a4cbc376_Upper, _29512_r);;
}



inline jule::I64 _1a4d46bc5_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab06a17:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1aab06a17:;
			++it;
			_399_i++;
			goto _iter_begin_1aab06a17;
		}
		_iter_end_1aab06a17:;
	};
	return -1LL;;
}



inline jule::I64 _1a4d58ee5_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _549_first = (&(_5017_s[0LL]));;
	jule::U8* _5513_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5513_it >= _549_first); (_5513_it)--) {
		{
			{
				if (((*(_5513_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5513_it - _549_first))));;
				};
			};
		}
	_iter_next_1aab07b06:;
	}
	_iter_end_1aab07b06:;;
	return -1LL;;
}



inline jule::I64 _1a4d592ae_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I64>(_1a4d46bc5_FindByte(_1d0a3180c_Stobs(_6717_s), _6725_b));;
}



inline jule::I64 _1a4d59600_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I64>(_1a4d58ee5_FindLastByte(_1d0a3180c_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _1a4d599b8_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1aab1c478:;
	}
	_iter_end_1aab1c478:;;
	return _2013_ss;;
}



inline jule::Bool _1a4d59de7_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1aab2002a:;
	}
	_iter_end_1aab2002a:;;
	return true;;
}



inline jule::Bool _1a4d5a238_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _1a4d59de7_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _1a4d5a69a_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1aab21d62:;
	}
	_iter_end_1aab21d62:;;
	return true;;
}



inline jule::Bool _1a4d5a9a8_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _1a4d5a69a_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _1a4d5ad93_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_1a4d59de7_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1aab24b34:;
	}
	_iter_end_1aab24b34:;;
	return -1LL;;
}



inline jule::I64 _1a4d5b6ce_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1aab2742d;
					};
				}
			_iter_next_1aab28c48:;
			}
			_iter_end_1aab28c48:;;
			return _9413_j;;
		}
	_iter_next_1aab2742d:;
	}
	_iter_end_1aab2742d:;;
	return -1LL;;
}



inline jule::I64 _1a4d5ba20_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_1a4d5b6ce_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _1a4d5ccb8_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1852b_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1aab31080:;
	}
	_iter_end_1aab31080:;;
	return -1LL;;
}



inline jule::I64 _1a4d5d604_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_1a4d59600_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I64 _1a4d5e418_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _1d0a3180c_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _1d0a3180c_Stobs(&(_22820_runes));;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1852b_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a4d5ccb8_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1aab36629:;
	}
	_iter_end_1aab36629:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1a4d5eb44_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _1a4d5ad93_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1aab3c6b8;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i, _27613_j)); };
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1aab3c6b8:;
	}
	_iter_end_1aab3c6b8:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i)); };
	};
	return _26713_parts;;
}



inline jule::Bool _1a4d5ee85_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_1a4d5ad93_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _1a4d60958_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_1a4d5e418_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I64 _1a4d60c99_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _1a4d5ad93_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1aab42800;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1aab42800:;
	}
	_iter_end_1aab42800:;;
	return _31613_n;;
}



inline jule::Str _1a4d6122d_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _1a4d60c99_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _1a4d5ad93_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1aab46172;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1aab46172:;
	}
	_iter_end_1aab46172:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _1a4d5d291_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1852b_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a4d5ccb8_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1aab4a4c8:;
	}
	_iter_end_1aab4a4c8:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _1a4d622d9_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _1d0a3180c_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _1d0a3180c_Stobs(&(_40321_cutset));;
	_1a4d5d291_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _1a4d62592_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I64 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b18ae2_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a4d5ccb8_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1aab4c6d9:;
	}
	_iter_end_1aab4c6d9:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _1a4d62c24_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _1d0a3180c_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _1d0a3180c_Stobs(&(_43417_cutset));;
	_1a4d5d291_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_1a4d62592_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Bool _1b620a242_IsPathSep(jule::U8 _4814_c) {
	return ((_4814_c == 92LLU) || (_4814_c == '/'));;
}



inline jule::Bool _1b620a52d_isSlash(jule::U8 _5212_c) {
	return ((_5212_c == '\\') || (_5212_c == '/'));;
}



inline jule::U8 _1b620a7c5_toUpper(jule::U8 _5412_c) {
	if ((('a' <= _5412_c) && (_5412_c <= 'z'))) {
		return static_cast<jule::U8>((_5412_c - 32LL));;
	};
	return _5412_c;;
}



inline jule::I64 _1b620ad8b_volumeNameLen(jule::Str _8218_path) {
	if ((_8218_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _879_c = _8218_path[0LL];;
	if (((_8218_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_1b620a52d_isSlash(_8218_path[0LL]))) || (!(_1b620a52d_isSlash(_8218_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1b620b133_cutPath(_8218_path.slice(2LL));
		_9510_p1 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1b620b133_cutPath(_9518_rest);
		_9613_p2 = __jule_assign_result.__jule_result_arg0;
		_9518_rest = __jule_assign_result.__jule_result_arg1;
		_9713_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_9713_ok))) {
		return static_cast<jule::I64>(_8218_path.len());;
	};
	if (((!_9510_p1.equal(".", 1)) && (!_9510_p1.equal("?", 1)))) {
		return static_cast<jule::I64>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
	};
	if (((((_9613_p2.len() == 3LL) && (_1b620a7c5_toUpper(_9613_p2[0LL]) == 'U')) && (_1b620a7c5_toUpper(_9613_p2[1LL]) == 'N')) && (_1b620a7c5_toUpper(_9613_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1b620b133_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1b620b133_cutPath(_9518_rest);
			_9518_rest = __jule_assign_result.__jule_result_arg1;
			_9713_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_9713_ok))) {
			return static_cast<jule::I64>(_8218_path.len());;
		};
	};
	return static_cast<jule::I64>(((_8218_path.len() - _9518_rest.len()) - 1LL));;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1b620b133_cutPath(jule::Str _11912_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_11912_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab67b00:;
		if (it != expr_end) {
			jule::I64 _1209_i = it - expr->begin();
			{
				if (_1b620a52d_isSlash(_11912_path[_1209_i])) {
					__jule_func_result.__jule_result_arg0 = _11912_path.slice(0LL, _1209_i);
					__jule_func_result.__jule_result_arg1 = _11912_path.slice((_1209_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1aab67b00:;
			++it;
			_1209_i++;
			goto _iter_begin_1aab67b00;
		}
		_iter_end_1aab67b00:;
	};
	__jule_func_result.__jule_result_arg0 = _11912_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1b620b3ca_fullPath(jule::Str _12813_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1299_utf16Name = _1d09d60ec_Utf16FromStr(_12813_name);;
	jule::U16* _1309_p = (&(_1299_utf16Name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_13113_n), static_cast<jule::I64>(_13113_n), 0);;
			_13113_n=static_cast<jule::U32>(_1d0a10e29_GetFullPathName(_1309_p, static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())), (&(_13317_buff[0LL])), nullptr));
			if ((_13113_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				__jule_func_result.__jule_result_arg0 = _1d09d63a5_Utf16ToStr(_13317_buff.slice(0LL, static_cast<jule::I64>(_13113_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1aab69d22:;
	}
	_iter_end_1aab69d22:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1b620b74e_abs(jule::Str _14512_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_14512_path.empty()) {
		_14512_path=jule::Str(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1b620b3ca_fullPath(_14512_path);
		_14512_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1a4d6473c_Clean(_14512_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1b620b9e6_join(jule::Slice<jule::Str> _15913_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_lastChar = 0LLU;;
	{
		auto expr = &(_15913_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab6dc7c:;
		if (it != expr_end) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1aab6ec39:;
					}
					else if (_1b620a52d_isSlash(_16113_lastChar)) {
						_case_begin_1aab6ea2a:;
						{
							while (((_16217_e.len() > 0LL) && _1b620a52d_isSlash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1aab70245:;
							}
							_iter_end_1aab70245:;;
						}
					}
					else if ((_16113_lastChar == ':')) {
						_case_begin_1aab6e91a:;
					}
					else {
						_case_begin_1aab6e563:;
						{
							(_16013_s).append("\\", 1);
							_16113_lastChar='\\';
						}
					}
					_match_end_1aab6e497:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_lastChar=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1aab6dc7c:;
			++it;
			goto _iter_begin_1aab6dc7c;
		}
		_iter_end_1aab6dc7c:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();;
	};
	return _1a4d6473c_Clean(_16013_s);;
}



inline jule::Str _1a4d6473c_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _1b620ad8b_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _1b620a242_IsPathSep(_1099_originalPath[0LL])) && _1b620a242_IsPathSep(_1099_originalPath[1LL]))) {
			return _1a4d64cc0_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _1b620a242_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_1a4d6397d_lazyBuff _12713_out = _1a4d6397d_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_1a4d64132_append(&_12713_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_1b620a242_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1aab777e1:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1b620a242_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1aab79c55:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1b620a242_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1aab79cbb:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1aab7c0ed:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_1b620a242_IsPathSep(static_cast<jule::U8>(_1a4d63dac_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1aab7cbd1:;
									}
									_iter_end_1aab7cbd1:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1aab7c494:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1a4d64132_append(&_12713_out, 92LLU);
									};
									_1a4d64132_append(&_12713_out, '.');
									_1a4d64132_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1aab7c41c:;
						};
					}
				}
				else {
					_case_begin_1aab75d2d:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1a4d64132_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_volLen == 0LL)) && (_13214_r != 0LL))) {
							jule::I64 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_1b620a242_IsPathSep(_10814_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10814_path[_17525_i] == ':')) {
										_1a4d64132_append(&_12713_out, '.');
										_1a4d64132_append(&_12713_out, 92LLU);
										goto _iter_end_1aab77945;
									};
								}
							_iter_next_1aab77945:;
							}
							_iter_end_1aab77945:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_1b620a242_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_1a4d64132_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1aab78b00:;
						}
						_iter_end_1aab78b00:;;
					}
				}
				_match_end_1aab75ca6:;
			};
		}
	_iter_next_1aab75e93:;
	}
	_iter_end_1aab75e93:;;
	if ((_12713_out._field_w == 0LL)) {
		_1a4d64132_append(&_12713_out, '.');
	};
	return _1a4d64cc0_FromSlash(_1a4d64396_string(&_12713_out));;
}



inline jule::Str _1a4d64cc0_FromSlash(jule::Str _21114_path) {
	;
	return _1a4d6122d_Replace(_21114_path, jule::Str("/", 1), jule::Str("\\", 1), -1LL);;
}



inline jule::Str _1a4d650de_Join(jule::Slice<jule::Str> _2259_elem) {
	return _1b620b9e6_join(_2259_elem);;
}



inline jule::Str _1a4d65386_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_1b620a242_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1aab81311:;
	}
	_iter_end_1aab81311:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1a4d6562d_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1b620b74e_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _1a4d658c5_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _1b620a242_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_1aab83423:;
	}
	_iter_end_1aab83423:;;
	(_25413_path).mut_slice(_1a4d65ee1_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_1b620a242_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1aab84aa6:;
	}
	_iter_end_1aab84aa6:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return jule::Str("\\", 1);;
	};
	return _25413_path;;
}



inline jule::Str _1a4d65c49_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _1a4d65ee1_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_1b620a242_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1aab86adb:;
	}
	_iter_end_1aab86adb:;;
	jule::Str _2919_dir = _1a4d6473c_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if ((_2919_dir.equal(".", 1) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _1a4d65ee1_VolumeName(jule::Str _30315_path) {
	return _1a4d64cc0_FromSlash(_30315_path.slice(0LL, _1b620ad8b_volumeNameLen(_30315_path)));;
}



inline jule::I64 _1d0a25a98_getLastFsError(void) {
	jule::I64 _729_err = _1d095b4b2_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1aab9a825:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1aab99ca8:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1aab9a21a:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1aab9a281:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aab9a2e7:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1aab9a35d:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1aab9a946:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1aab9a9ac:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1aab9aa23:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1aab9aa89:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1aab9ab11:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1aab9ab88:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1aab9ac10:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1aab9ac87:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aab9ad0e:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1aab9ad86:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1aab9ae0d:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1aab9ae85:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1aab9b00c:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1aab9b084:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1aab9b10b:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1aab9b183:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1aab9b20a:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1aab9b282:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1aab9b309:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1aab9b381:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1aab9b408:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1aab9b480:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1aab9a072:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1aab9a01c:;
	};
}



inline jule::Bool _1d0b1c200_isConsoleHandle(jule::Uintptr _11320_handle) {
	return (((_11320_handle == _1d0a0d641_STDIN) || (_11320_handle == _1d0a0d90a_STDOUT)) || (_11320_handle == _1d0a0db91_STDERR));;
}



inline void _1a4e8d06e_appendEscapeArg(jule::Str* _10125_s, jule::Str _10133_arg) {
	if ((_10133_arg.len() == 0LL)) {
		((*(_10125_s))).append("\"\"", 2);
		return;;
	};
	jule::Bool _10713_needsBackslash = false;;
	jule::Bool _10813_hasSpace = false;;
	jule::I64 _10913_i = 0LL;;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			{
				auto &_match_expr{ _10133_arg[_10913_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1aabdd03d:;
					{
						_10713_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1aabdd0b5:;
					{
						_10813_hasSpace=true;
					}
				}
				_match_end_1aabdcceb:;
			};
		}
	_iter_next_1aabdb47b:;
	}
	_iter_end_1aabdb47b:;;
	if (((!(_10713_needsBackslash)) && (!(_10813_hasSpace)))) {
		(*(_10125_s))+=_10133_arg;
		return;;
	};
	if ((!(_10713_needsBackslash))) {
		((*(_10125_s))).append("\"", 1);
		(*(_10125_s))+=_10133_arg;
		((*(_10125_s))).append("\"", 1);
		return;;
	};
	if (_10813_hasSpace) {
		((*(_10125_s))).append("\"", 1);
	};
	jule::I64 _13513_slashes = 0LL;;
	_10913_i=0LL;
	for (; (_10913_i < _10133_arg.len()); (_10913_i)++) {
		{
			jule::U8 _13813_c = _10133_arg[_10913_i];;
			{
				auto &_match_expr{ _13813_c };
				
				if (_match_expr == '\\') {
					_case_begin_1aabe055c:;
					{
						(_13513_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1aabe0a02:;
					{
						for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
							{
								((*(_10125_s))).append("\\", 1);
							}
						_iter_next_1aabe1519:;
						}
						_iter_end_1aabe1519:;;
						((*(_10125_s))).append("\\", 1);
					}
				}
				else {
					_case_begin_1aabe086a:;
					{
						_13513_slashes=0LL;
					}
				}
				_match_end_1aabe0815:;
			};
			((*(_10125_s))).append(_13813_c);
		}
	_iter_next_1aabdecdc:;
	}
	_iter_end_1aabdecdc:;;
	if (_10813_hasSpace) {
		for (; (_13513_slashes > 0LL); (_13513_slashes)--) {
			{
				((*(_10125_s))).append("\\", 1);
			}
		_iter_next_1aabe1195:;
		}
		_iter_end_1aabe1195:;;
		((*(_10125_s))).append("\"", 1);
	};
}



inline jule::Str _1a4e8d316_makeCmdLine(jule::Slice<jule::Str> _16216_args) {
	jule::Str _16313_s = jule::Str();;
	{
		auto expr = &(_16216_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabe26d5:;
		if (it != expr_end) {
			jule::Str *_16412_arg = it;
			{
				if ((_16313_s.len() > 0LL)) {
					(_16313_s).append(" ", 1);
				};
				_1a4e8d06e_appendEscapeArg(&(_16313_s), (*(_16412_arg)));
			}
			_iter_next_1aabe26d5:;
			++it;
			goto _iter_begin_1aabe26d5;
		}
		_iter_end_1aabe26d5:;
	};
	return _16313_s;;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _1a4e8d6bd_createEnvBlock(jule::Slice<jule::Str> _17819_env) {
	if ((_17819_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _1d09d5816_Encode(jule::Slice<jule::I32>::make({0LL,0LL})));;
	};
	jule::I64 _18213_n = 0LL;;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabe4374:;
		if (it != expr_end) {
			jule::Str *_18312_s = it;
			{
				if ((_1a4d592ae_FindByteStr(_18312_s, 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				_18213_n+=((*(_18312_s)).len() + 1LL);
			}
			_iter_next_1aabe4374:;
			++it;
			goto _iter_begin_1aabe4374;
		}
		_iter_end_1aabe4374:;
	};
	(_18213_n)++;
	jule::Slice<jule::U16> _19013_b = jule::Slice<jule::U16>::alloc(0LL, _18213_n, 0);;
	{
		auto expr = &(_17819_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabe2691:;
		if (it != expr_end) {
			jule::Str *_19112_s = it;
			{
				{
					auto expr = static_cast<jule::Slice<jule::I32>>((*(_19112_s)));
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1aabe6277:;
					if (it != expr_end) {
						jule::I32 _19216_c = *it;
						{
							_19013_b=_1d09d5dbb_AppendRune(_19013_b, _19216_c);
						}
						_iter_next_1aabe6277:;
						++it;
						goto _iter_begin_1aabe6277;
					}
					_iter_end_1aabe6277:;
				};
				_19013_b=_1d09d5dbb_AppendRune(_19013_b, 0LL);
			}
			_iter_next_1aabe2691:;
			++it;
			goto _iter_begin_1aabe2691;
		}
		_iter_end_1aabe2691:;
	};
	_19013_b=_1d09d5dbb_AppendRune(_19013_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>(jule::Any(), _19013_b);;
}



inline jule::I64 _1a4e8e69c_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1aabe4583:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1aabe6d8d:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1aabe6c7d:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1aabe6c06:;
	};
}



inline jule::I64 _1a4e8e8ab_getLastProcessError(void) {
	return _1a4e8e69c_processErrorFromCode(static_cast<jule::I64>(static_cast<jule::I64>(_1d0a0eac6_GetLastError())));;
}



inline void _1a4e9015e_Exit(jule::I64 _129_code) {
	_1d0a15769_Exit(_129_code);
}



inline jule::Str _1a4e9035c_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1a4ddd8d7_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1a4dddb90_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1a4d68c5d_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac21208:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1aac21208:;
			++it;
			goto _iter_begin_1aac21208;
		}
		_iter_end_1aac21208:;
	};
	return false;;
}



inline jule::Bool _1a4ddde37_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1a4d68d5c_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac2233b:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1aac2233b:;
			++it;
			goto _iter_begin_1aac2233b;
		}
		_iter_end_1aac2233b:;
	};
	{
		auto expr = &(_1a4ddbcc0_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac228ad:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1aac228ad:;
			++it;
			goto _iter_begin_1aac228ad;
		}
		_iter_end_1aac228ad:;
	};
	return false;;
}



inline jule::Str _1a4deb84b_Logf(jule::Str _3159_fmt, jule::Slice<jule::Any> _31522_args) {
	return _1a4dec264_applyFmt(_3159_fmt, _31522_args);;
}



inline jule::Str _1a4debb37_argToStr(jule::Any _31913_arg) {
	{
		auto &_match_expr{ _31913_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aac2387b:;
			{
				return _31913_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1aac2401e:;
			{
				return jule::Str::from_byte(_31913_arg.cast<jule::U8>(&__jule_any_type132));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aac24085:;
			{
				return jule::Str::from_rune(_31913_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1aac23b01:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1aac23914:;
	};
}



inline jule::I64 _1a4debdce_findNextFmt(jule::Str _33216_fmt) {
	{
		auto expr = &(_33216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac24cde:;
		if (it != expr_end) {
			jule::I64 _3339_i = it - expr->begin();
			jule::U8 *_33312_b = it;
			{
				if (((*(_33312_b)) == '@')) {
					return _3339_i;;
				};
			}
			_iter_next_1aac24cde:;
			++it;
			_3339_i++;
			goto _iter_begin_1aac24cde;
		}
		_iter_end_1aac24cde:;
	};
	return -1LL;;
}



inline jule::Str _1a4dec264_applyFmt(jule::Str _34117_fmt, jule::Slice<jule::Any> _34127_args) {
	jule::Str _34213_s = jule::Str();;
	{
		auto expr = &(_34127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac26285:;
		if (it != expr_end) {
			jule::Any *_34312_arg = it;
			{
				jule::I64 _34413_i = _1a4debdce_findNextFmt(_34117_fmt);;
				if ((_34413_i == -1LL)) {
					goto _iter_end_1aac26285;
				};
				_34213_s+=_34117_fmt.slice(0LL, _34413_i);
				_34213_s+=_1a4debb37_argToStr((*(_34312_arg)));
				(_34117_fmt).mut_slice((_34413_i + 1LL));;
			}
			_iter_next_1aac26285:;
			++it;
			goto _iter_begin_1aac26285;
		}
		_iter_end_1aac26285:;
	};
	_34213_s+=_34117_fmt;
	return _34213_s;;
}



inline jule::Bool _1a4ded2dc_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _1a4dee71c_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1a4dee9c5_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1a4deec6c_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1a4e0008b_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1a4e00333_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1a4e005ca_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1a4e00872_IsUnix(jule::Str _5511_os) {
	return (_1a4dee9c5_IsDarwin(_5511_os) || _1a4deec6c_IsLinux(_5511_os));;
}



inline jule::Bool _1a4e00be6_Is32Bit(jule::Str _5812_arch) {
	return _1a4e0008b_IsI386(_5812_arch);;
}



inline jule::Bool _1a4e00e8d_Is64Bit(jule::Str _6112_arch) {
	return (_1a4e00333_IsAmd64(_6112_arch) || _1a4e005ca_IsArm64(_6112_arch));;
}



inline void _1a4e915e4_init(void) {
	jule::Str _2513_path = _1a4e9035c_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1a4e90b21_PathWd=({
			auto except = _1b6230a92_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1a4e90868_PathExec=_1a4d65c49_Dir(_2513_path);
		_1a4e90648_PathStdlib=_1a4d650de_Join(jule::Slice<jule::Str>::make({_1a4e90868_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_1a4e90e2e_PathApi=_1a4d650de_Join(jule::Slice<jule::Str>::make({_1a4e90868_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1a5268bc9_IsUnaryOp(jule::U64 _33714_id) {
	{
		auto expr = &(_1a51c2e63_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac72c71:;
		if (it != expr_end) {
			jule::U64 *_33812_op = it;
			{
				if ((_33714_id == (*(_33812_op)))) {
					return true;;
				};
			}
			_iter_next_1aac72c71:;
			++it;
			goto _iter_begin_1aac72c71;
		}
		_iter_end_1aac72c71:;
	};
	return false;;
}



inline jule::Bool _1a5268eb5_IsBinOp(jule::U64 _34712_id) {
	{
		auto expr = &(_1a51c3260_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac73975:;
		if (it != expr_end) {
			jule::U64 *_34812_op = it;
			{
				if ((_34712_id == (*(_34812_op)))) {
					return true;;
				};
			}
			_iter_next_1aac73975:;
			++it;
			goto _iter_begin_1aac73975;
		}
		_iter_end_1aac73975:;
	};
	return false;;
}



inline jule::Bool _1a526957b_IsStr(jule::Str _36710_k) {
	return ((!(_36710_k.empty())) && ((_36710_k[0LL] == '\"') || _1a5269823_IsRawStr(_36710_k)));;
}



inline jule::Bool _1a5269823_IsRawStr(jule::Str _37013_k) {
	return ((!(_37013_k.empty())) && (_37013_k[0LL] == '`'));;
}



inline jule::Bool _1a5269aba_IsRune(jule::Str _37411_k) {
	return ((!(_37411_k.empty())) && (_37411_k[0LL] == '\''));;
}



inline jule::Bool _1a526a1d6_IsBool(jule::Str _38011_k) {
	return (_38011_k.equal("true", 4) || _38011_k.equal("false", 5));;
}



inline jule::Bool _1a526a47d_IsFloat(jule::Str _38312_k) {
	if (_1a4d5a238_HasPrefix(_38312_k, jule::Str("0x", 2))) {
		return _1a4d60958_ContainsAny(_38312_k, jule::Str(".pP", 3));;
	};
	return _1a4d60958_ContainsAny(_38312_k, jule::Str(".eE", 3));;
}



inline jule::Bool _1a526a725_IsNum(jule::Str _39110_k) {
	if (_39110_k.empty()) {
		return false;;
	};
	jule::U8 _3969_b = _39110_k[0LL];;
	return ((_3969_b == '.') || (('0' <= _3969_b) && (_3969_b <= '9')));;
}



inline jule::Bool _1a526ac64_IsIgnoreIdent(jule::Str _40618_ident) {
	return _40618_ident.equal("_", 1);;
}



inline jule::Bool _1a526b00b_IsAnonIdent(jule::Str _40916_ident) {
	return _40916_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1a526b54a_IsSpace(jule::I32 _42212_r) {
	{
		auto expr = &(_1a51c2c43_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac7ae77:;
		if (it != expr_end) {
			jule::I32 *_42312_cr = it;
			{
				if ((_42212_r == (*(_42312_cr)))) {
					return true;;
				};
			}
			_iter_next_1aac7ae77:;
			++it;
			goto _iter_begin_1aac7ae77;
		}
		_iter_end_1aac7ae77:;
	};
	return false;;
}



inline jule::Bool _1a526b99b_IsLetter(jule::I32 _43213_r) {
	return _1a4cabb3a_IsLetter(_43213_r);;
}



inline jule::Bool _1a526beda_IsDecimal(jule::U8 _45214_b) {
	return (('0' <= _45214_b) && (_45214_b <= '9'));;
}



inline jule::Bool _1a526c282_IsBinary(jule::U8 _45513_b) {
	return ((_45513_b == '0') || (_45513_b == '1'));;
}



inline jule::Bool _1a526c529_IsOctal(jule::U8 _45812_b) {
	return (('0' <= _45812_b) && (_45812_b <= '7'));;
}



inline jule::Bool _1a526c7c1_IsHex(jule::U8 _46110_b) {
	{
		
		if ((('0' <= _46110_b) && (_46110_b <= '9'))) {
			_case_begin_1aac7e2ee:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46110_b) && (_46110_b <= 'f'))) {
			_case_begin_1aac7e365:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46110_b) && (_46110_b <= 'F'))) {
			_case_begin_1aac7e3dc:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aac7e288:;
			{
				return false;;
			}
		}
		_match_end_1aac7e002:;
	};
}



inline jule::Bool _1a526ca68_IsAssign(jule::U64 _47613_id) {
	return (((((((_47613_id == static_cast<jule::U64>(1LLU)) || (_47613_id == static_cast<jule::U64>(27LLU))) || (_47613_id == static_cast<jule::U64>(30LLU))) || (_47613_id == static_cast<jule::U64>(32LLU))) || (_47613_id == static_cast<jule::U64>(24LLU))) || (_47613_id == static_cast<jule::U64>(74LLU))) || (_47613_id == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1a526cd10_IsPostfixOp(jule::U64 _48716_id) {
	{
		auto expr = &(_1a526282c_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac80894:;
		if (it != expr_end) {
			jule::U64 *_48812_op = it;
			{
				if ((_48716_id == (*(_48812_op)))) {
					return true;;
				};
			}
			_iter_next_1aac80894:;
			++it;
			goto _iter_begin_1aac80894;
		}
		_iter_end_1aac80894:;
	};
	return false;;
}



inline jule::Bool _1a526d0a7_IsAssignOp(jule::U64 _49715_id) {
	if (_1a526cd10_IsPostfixOp(_49715_id)) {
		return true;;
	};
	{
		auto expr = &(_1a5262b29_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac82577:;
		if (it != expr_end) {
			jule::U64 *_50112_op = it;
			{
				if ((_49715_id == (*(_50112_op)))) {
					return true;;
				};
			}
			_iter_next_1aac82577:;
			++it;
			goto _iter_begin_1aac82577;
		}
		_iter_end_1aac82577:;
	};
	return false;;
}



inline jule::Ptr<_1a526d85a_File> _1a526eb14_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1a526d85a_File>(_1a526d85a_File{._field_Path=_5715_path, });;
}



inline _1a4deb40b_Log _1a52713a7_makeErr(jule::I64 _10212_row, jule::I64 _10222_col, jule::Ptr<_1a526d85a_File>* _10233_f, jule::Str _10243_fmt, jule::Slice<jule::Any> _10256_args) {
	return _1a4deb40b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10212_row, ._field_Column=_10222_col, ._field_Path=(*(_10233_f)).get()._field_Path, ._field_Text=_1a4deb84b_Logf(_10243_fmt, _10256_args), };;
}



inline jule::Bool _1a527173c_bytesHasPrefix(jule::Slice<jule::U8>* _11220_bytes, jule::Str _11235_prefix) {
	if (((*(_11220_bytes)).len() < _11235_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11235_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aac8c9d3:;
		if (it != expr_end) {
			jule::I64 _1169_i = it - expr->begin();
			{
				if (((*(_11220_bytes))[_1169_i] != _11235_prefix[_1169_i])) {
					return false;;
				};
			}
			_iter_next_1aac8c9d3:;
			++it;
			_1169_i++;
			goto _iter_begin_1aac8c9d3;
		}
		_iter_end_1aac8c9d3:;
	};
	return true;;
}



inline jule::Str _1a5271a7d_floatFmtE(jule::Slice<jule::U8>* _12415_txt, jule::I64 _12432_i) {
	jule::Str __jule_func_result;
	(_12432_i)++;
	if ((_12432_i >= (*(_12415_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _13013_b = (*(_12415_txt))[_12432_i];;
	if ((_13013_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13013_b == '+') || (_13013_b == '-'))) {
		(_12432_i)++;
		if ((_12432_i >= (*(_12415_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12415_txt))[_12432_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1449_first = _12432_i;;
	for (; (_12432_i < (*(_12415_txt)).len()); (_12432_i)++) {
		{
			_13013_b=(*(_12415_txt))[_12432_i];
			if (((_13013_b != '_') && (!(_1a526beda_IsDecimal(_13013_b))))) {
				goto _iter_end_1aac90783;
			};
		}
	_iter_next_1aac90783:;
	}
	_iter_end_1aac90783:;;
	if ((_12432_i == _1449_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12415_txt)).slice(0LL, _12432_i));
	return __jule_func_result;;
}



inline jule::Str _1a5271e13_floatFmtP(jule::Slice<jule::U8>* _15815_txt, jule::I64 _15828_i) {
	return _1a5271a7d_floatFmtE(_15815_txt, _15828_i);;
}



inline jule::Str _1a5272254_floatFmtDotnp(jule::Slice<jule::U8>* _16219_txt, jule::I64 _16236_i) {
	if (((*(_16219_txt))[_16236_i] != '.')) {
		return jule::Str();;
	};
	(_16236_i)++;
	_julec_label_loop:;
	for (; (_16236_i < (*(_16219_txt)).len()); (_16236_i)++) {
		{
			jule::U8 _17013_b = (*(_16219_txt))[_16236_i];;
			{
				
				if ((_17013_b == '_') || _1a526beda_IsDecimal(_17013_b)) {
					_case_begin_1aac93225:;
					{
						goto _iter_next_1aac92169;
					}
				}
				else if (_1a5273a08_isFloatFmtP(_17013_b, _16236_i)) {
					_case_begin_1aac9328b:;
					{
						return _1a5271e13_floatFmtP(_16219_txt, _16236_i);;
					}
				}
				else {
					_case_begin_1aac931ae:;
					{
						goto _iter_end_1aac92169;
					}
				}
				_match_end_1aac93148:;
			};
		}
	_iter_next_1aac92169:;
	}
	_iter_end_1aac92169:;;
	return jule::Str();;
}



inline jule::Str _1a5272595_floatFmtDotfp(jule::Slice<jule::U8>* _18319_txt, jule::I64 _18336_i) {
	_18336_i+=2LL;
	return _1a5271a7d_floatFmtE(_18319_txt, _18336_i);;
}



inline jule::Str _1a52728d6_floatFmtDotp(jule::Slice<jule::U8>* _18818_txt, jule::I64 _18835_i) {
	(_18835_i)++;
	return _1a5271a7d_floatFmtE(_18818_txt, _18835_i);;
}



inline jule::Str _1a5272d37_floatNum(jule::Slice<jule::U8>* _19314_txt, jule::I64 _19331_i) {
	jule::Str __jule_func_result;
	(_19331_i)++;
	if ((_19331_i >= (*(_19314_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19314_txt)));
		return __jule_func_result;;
	};
	if (((*(_19314_txt))[_19331_i] == '_')) {
		(_19331_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19314_txt)).slice(0LL, _19331_i));
		return __jule_func_result;;
	};
	for (; (_19331_i < (*(_19314_txt)).len()); (_19331_i)++) {
		{
			jule::U8 _20313_b = (*(_19314_txt))[_19331_i];;
			if (((_19331_i > 1LL) && ((_20313_b == 'e') || (_20313_b == 'E')))) {
				__jule_func_result = _1a5271a7d_floatFmtE(_19314_txt, _19331_i);
				return __jule_func_result;;
			};
			if (((_20313_b != '_') && (!(_1a526beda_IsDecimal(_20313_b))))) {
				goto _iter_end_1aac95b2e;
			};
		}
	_iter_next_1aac95b2e:;
	}
	_iter_end_1aac95b2e:;;
	if ((_19331_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19314_txt)).slice(0LL, _19331_i));
	return __jule_func_result;;
}



inline jule::Str _1a52730ce_commonNum(jule::Slice<jule::U8>* _21815_txt) {
	jule::Str __jule_func_result;
	jule::I64 _21913_i = 0LL;;
	_julec_label_loop:;
	for (; (_21913_i < (*(_21815_txt)).len()); (_21913_i)++) {
		{
			jule::U8 _22213_b = (*(_21815_txt))[_21913_i];;
			{
				
				if ((_22213_b == '.')) {
					_case_begin_1aac98ed9:;
					{
						__jule_func_result = _1a5272d37_floatNum(_21815_txt, _21913_i);
						return __jule_func_result;;
					}
				}
				else if ((_22213_b == '_')) {
					_case_begin_1aac99061:;
					{
						goto _iter_next_1aac9836d;
					}
				}
				else if (_1a52736b7_isFloatFmtE(_22213_b, _21913_i)) {
					_case_begin_1aac990d8:;
					{
						__jule_func_result = _1a5271a7d_floatFmtE(_21815_txt, _21913_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1a526beda_IsDecimal(_22213_b)))) {
					_case_begin_1aac99160:;
					{
						goto _iter_end_1aac9836d;
					}
				}
				_match_end_1aac98e0c:;
			};
		}
	_iter_next_1aac9836d:;
	}
	_iter_end_1aac9836d:;;
	if ((_21913_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21815_txt)).slice(0LL, _21913_i));
	return __jule_func_result;;
}



inline jule::Str _1a5273376_binaryNum(jule::Slice<jule::U8>* _24115_txt) {
	jule::Str __jule_func_result;
	if ((!(_1a527173c_bytesHasPrefix(_24115_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_24115_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _25013_i = 2LL;;
	for (; (_25013_i < (*(_24115_txt)).len()); (_25013_i)++) {
		{
			if ((((*(_24115_txt))[_25013_i] != '_') && (!(_1a526c282_IsBinary((*(_24115_txt))[_25013_i]))))) {
				goto _iter_end_1aac98626;
			};
		}
	_iter_next_1aac98626:;
	}
	_iter_end_1aac98626:;;
	if ((_25013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_24115_txt)).slice(0LL, _25013_i));
	return __jule_func_result;;
}



inline jule::Bool _1a52736b7_isFloatFmtE(jule::U8 _26316_b, jule::I64 _26325_i) {
	return ((_26325_i > 0LL) && ((_26316_b == 'e') || (_26316_b == 'E')));;
}



inline jule::Bool _1a5273a08_isFloatFmtP(jule::U8 _26716_b, jule::I64 _26725_i) {
	return ((_26725_i > 0LL) && ((_26716_b == 'p') || (_26716_b == 'P')));;
}



inline jule::Bool _1a5273d49_isFloatFmtDotnp(jule::Slice<jule::U8>* _27121_txt, jule::I64 _27138_i) {
	if (((*(_27121_txt))[_27138_i] != '.')) {
		return false;;
	};
	(_27138_i)++;
	_julec_label_loop:;
	for (; (_27138_i < (*(_27121_txt)).len()); (_27138_i)++) {
		{
			jule::U8 _27813_b = (*(_27121_txt))[_27138_i];;
			{
				
				if ((_27813_b == '_') || _1a526beda_IsDecimal(_27813_b)) {
					_case_begin_1aaca0892:;
					{
						goto _iter_next_1aac9e71a;
					}
				}
				else if (_1a5273a08_isFloatFmtP(_27813_b, _27138_i)) {
					_case_begin_1aaca0908:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1aaca082b:;
					{
						goto _iter_end_1aac9e71a;
					}
				}
				_match_end_1aaca07b5:;
			};
		}
	_iter_next_1aac9e71a:;
	}
	_iter_end_1aac9e71a:;;
	return false;;
}



inline jule::Bool _1a527418a_isFloatFmtDotp(jule::Slice<jule::U8>* _29220_txt, jule::I64 _29233_i) {
	{
		
		if (((*(_29220_txt)).len() < 3LL)) {
			_case_begin_1aaca1b29:;
			{
				goto _case_begin_1aaca1ba1;
			}
		}
		else if (((*(_29220_txt))[_29233_i] != '.')) {
			_case_begin_1aaca1ba1:;
			{
				goto _case_begin_1aaca1c28;
			}
		}
		else if ((((*(_29220_txt))[(_29233_i + 1LL)] != 'p') && ((*(_29220_txt))[(_29233_i + 1LL)] != 'P'))) {
			_case_begin_1aaca1c28:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aaca1ab3:;
			{
				return true;;
			}
		}
		_match_end_1aaca19e7:;
	};
}



inline jule::Bool _1a52744cb_isFloatFmtDotfp(jule::Slice<jule::U8>* _30521_txt, jule::I64 _30534_i) {
	{
		
		if (((*(_30521_txt)).len() < 4LL)) {
			_case_begin_1aaca3873:;
			{
				goto _case_begin_1aaca38ea;
			}
		}
		else if (((*(_30521_txt))[_30534_i] != '.')) {
			_case_begin_1aaca38ea:;
			{
				goto _case_begin_1aaca3972;
			}
		}
		else if ((((*(_30521_txt))[(_30534_i + 1LL)] != 'f') && ((*(_30521_txt))[(_30534_i + 1LL)] != 'F'))) {
			_case_begin_1aaca3972:;
			{
				goto _case_begin_1aaca39e9;
			}
		}
		else if ((((*(_30521_txt))[(_30534_i + 2LL)] != 'p') && ((*(_30521_txt))[(_30534_i + 1LL)] != 'P'))) {
			_case_begin_1aaca39e9:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aaca34aa:;
			{
				return true;;
			}
		}
		_match_end_1aaca33de:;
	};
}



inline jule::Str _1a527492c_octalNum(jule::Slice<jule::U8>* _32014_txt) {
	jule::Str __jule_func_result;
	if (((*(_32014_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_32014_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _32813_octalStart = 1LL;;
	jule::Bool _33013_o = false;;
	if (((*(_32014_txt))[1LL] == 'o')) {
		if (((*(_32014_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_32813_octalStart)++;
		_33013_o=true;
	};
	jule::I64 _33913_i = _32813_octalStart;;
	for (; (_33913_i < (*(_32014_txt)).len()); (_33913_i)++) {
		{
			jule::U8 _34113_b = (*(_32014_txt))[_33913_i];;
			if ((_34113_b == '.')) {
				if (_33013_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1a5272d37_floatNum(_32014_txt, _33913_i);
				return __jule_func_result;;
			};
			if (_1a52736b7_isFloatFmtE(_34113_b, _33913_i)) {
				__jule_func_result = _1a5271a7d_floatFmtE(_32014_txt, _33913_i);
				return __jule_func_result;;
			};
			if (((_34113_b != '_') && (!(_1a526c529_IsOctal(_34113_b))))) {
				goto _iter_end_1aaca816e;
			};
		}
	_iter_next_1aaca816e:;
	}
	_iter_end_1aaca816e:;;
	if ((_33913_i == _32813_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_32014_txt)).slice(0LL, _33913_i));
	return __jule_func_result;;
}



inline jule::Str _1a5274bc4_hexNum(jule::Slice<jule::U8>* _36212_txt) {
	jule::Str __jule_func_result;
	if (((*(_36212_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36212_txt))[0LL] != '0') || (((*(_36212_txt))[1LL] != 'x') && ((*(_36212_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _37113_i = 2LL;;
	_julec_label_loop:;
	for (; (_37113_i < (*(_36212_txt)).len()); (_37113_i)++) {
		{
			jule::U8 _37413_b = (*(_36212_txt))[_37113_i];;
			{
				
				if (_1a527418a_isFloatFmtDotp(_36212_txt, _37113_i)) {
					_case_begin_1aacac6b2:;
					{
						__jule_func_result = _1a52728d6_floatFmtDotp(_36212_txt, _37113_i);
						return __jule_func_result;;
					}
				}
				else if (_1a52744cb_isFloatFmtDotfp(_36212_txt, _37113_i)) {
					_case_begin_1aacac739:;
					{
						__jule_func_result = _1a5272595_floatFmtDotfp(_36212_txt, _37113_i);
						return __jule_func_result;;
					}
				}
				else if (_1a5273a08_isFloatFmtP(_37413_b, _37113_i)) {
					_case_begin_1aacac7b1:;
					{
						__jule_func_result = _1a5271e13_floatFmtP(_36212_txt, _37113_i);
						return __jule_func_result;;
					}
				}
				else if (_1a5273d49_isFloatFmtDotnp(_36212_txt, _37113_i)) {
					_case_begin_1aacac838:;
					{
						__jule_func_result = _1a5272254_floatFmtDotnp(_36212_txt, _37113_i);
						return __jule_func_result;;
					}
				}
				else if (((_37413_b != '_') && (!(_1a526c7c1_IsHex(_37413_b))))) {
					_case_begin_1aacac8b0:;
					{
						goto _iter_end_1aacabb34;
					}
				}
				_match_end_1aacac5c4:;
			};
		}
	_iter_next_1aacabb34:;
	}
	_iter_end_1aacabb34:;;
	if ((_37113_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36212_txt)).slice(0LL, _37113_i));
	return __jule_func_result;;
}



inline jule::Str _1a5275015_hexEscape(jule::Slice<jule::U8>* _39515_txt, jule::I64 _39528_n) {
	jule::Str __jule_func_result;
	if (((*(_39515_txt)).len() < _39528_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _40113_i = 2LL;;
	for (; (_40113_i < _39528_n); (_40113_i)++) {
		{
			if ((!(_1a526c7c1_IsHex((*(_39515_txt))[_40113_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1aacaed68:;
	}
	_iter_end_1aacaed68:;;
	__jule_func_result=static_cast<jule::Str>((*(_39515_txt)).slice(0LL, _39528_n));
	return __jule_func_result;;
}



inline jule::Str _1a52752ac_bigUnicodePointEscape(jule::Slice<jule::U8>* _41327_txt) {
	return _1a5275015_hexEscape(_41327_txt, 10LL);;
}



inline jule::Str _1a5275576_littleUnicodePointEscape(jule::Slice<jule::U8>* _41830_txt) {
	return _1a5275015_hexEscape(_41830_txt, 6LL);;
}



inline jule::Str _1a5275730_hexByteEscape(jule::Slice<jule::U8>* _42319_txt) {
	return _1a5275015_hexEscape(_42319_txt, 4LL);;
}



inline jule::Str _1a52759b6_byteEscape(jule::Slice<jule::U8>* _42816_txt) {
	jule::Str __jule_func_result;
	if (((*(_42816_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1a526c529_IsOctal((*(_42816_txt))[1LL]))) || (!(_1a526c529_IsOctal((*(_42816_txt))[2LL])))) || (!(_1a526c529_IsOctal((*(_42816_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42816_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1a4deb40b_Log> _1a527a4b0_Lex(jule::Ptr<_1a526d85a_File> _81012_f, jule::I64 _81022_mode) {
	if ((_81012_f == nullptr)) {
		return nullptr;;
	};
	_1a527619d_lex _81513_lex = _1a527619d_lex{._field_mode=_81022_mode, ._field_file=_81012_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1a5278bea_newLine(&_81513_lex);
	_1a5276be8_lex(&_81513_lex);
	if ((_81513_lex._field_errors.len() > 0LL)) {
		return _81513_lex._field_errors;;
	};
	_81012_f.get()._field_Tokens=_81513_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _1a5c6a60e_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1a54cbb62_Len64(_6119_x)));;
}



inline jule::I64 _1a5c6b544_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1a5c6c1d2_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1a5c6be3a_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a5c6ac19__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1a5c6c1d2_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a5c6b2d0__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1a54cb8ba_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _1a54cbb62_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a54cc822_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a54cdea5_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1a5b9a94b_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1a5b9ac37_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1a5b9aece_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1a5b9b2ed_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1a5b9d7d9_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1aadd01a8:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1a54d6a29_IsInf(_4714_f, 0LL) || _1a54d6474_IsNaN(_4714_f)) {
			_case_begin_1aadd0230:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1aadd0098:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a54d6cc1_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _1a5b9aece_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1a5b9b2ed_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1a54d6188_NaN(void) {
	return static_cast<jule::F64>(_1a5b9b2ed_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1a54d6474_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1a54d671b_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1a5b9b2ed_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1a5b9b2ed_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1a54d6a29_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1a54d6cc1_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1a54d9169_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1a54d86b8_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1a54d6474_IsNaN(_1118_x) || _1a54d6a29_IsInf(_1118_x, 1LL)) {
			_case_begin_1aae1cab9:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1aae1cb41:;
			{
				return static_cast<jule::F64>(_1a54d6188_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1aae1cbb8:;
			{
				return static_cast<jule::F64>(_1a54d671b_Inf(-1LL));;
			}
		}
		_match_end_1aae1ca0e:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a5b9d7d9_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1a54d9169_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1a5b9b2ed_F64FromBits(static_cast<jule::U64>((_1a5b9aece_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1a54e0aaa_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1a54d9169_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1aaedb803:;
		}
		_iter_end_1aaedb803:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1a54e136e_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a5b9d7d9_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1a54d86b8_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _1a551a0ce_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1a551a651_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1a551d6dc_max(static_cast<jule::I64>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1a551a651_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1a5518e68_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1ab16500e:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1a5b9a94b_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1a5518e68_floatInfo>)((&(_1a5519331_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab165075:;
			{
				_8313_bits=static_cast<jule::U64>(_1a5b9aece_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1a5518e68_floatInfo>)((&(_1a551963e_f64info))));
			}
		}
		else {
			_case_begin_1ab164926:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1ab162e41:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1ab168320:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1ab16a2ab:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1ab16a542:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1ab169585:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1ab1694b9:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ab1688a3:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1ab164c56:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1ab1682ba:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1a551c8d9_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1a551d05a_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_1a5519a90_decimalSlice _13213_digs = _1a5519a90_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1a5528021_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab16d952:;
				{
					_8258_prec=static_cast<jule::I64>(_1a551d6dc_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab16d9b8:;
				{
					_8258_prec=static_cast<jule::I64>(_1a551d6dc_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab16da40:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1ab16cb71:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab16de91:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab170877:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1ab170767:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1ab170712:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1a5526d77_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1a55272b7_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1a551acc2_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _1a551b421_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1a551acc2_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1a5518e68_floatInfo* _18327_flt) {
	_1a552ba19_decimal _18413_d = _1a552ba19_decimal{};;
	_1a552bd9e_assign(&_18413_d, _1835_mant);
	_1a552c124_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>((*(_18327_flt))._field_mantbits))));
	_1a5519a90_decimalSlice _18713_digs = _1a5519a90_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1a551b81c_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_1a5519a90_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab175041:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab177582:;
				{
					_18233_prec=static_cast<jule::I64>(_1a551d6dc_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab17763c:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1ab17742d:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab1765b4:;
				{
					_1a552c894_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab17663b:;
				{
					_1a552c894_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab1766b3:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1a552c894_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1ab178e13:;
		};
		_18713_digs=_1a5519a90_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1a551b421_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1a551b421_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1a5519a90_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1ab17bec1:;
			{
				return _1a551bd4a_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ab17c037:;
			{
				return _1a551c2ce_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1ab17c09d:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1a551bd4a_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1a551c2ce_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>(_1a551d6dc_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1ab17bd7d:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1a551b81c_roundShortest(_1a552ba19_decimal* _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1a5518e68_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1a552ba19_decimal _28713_upper = _1a552ba19_decimal{};;
	_1a552bd9e_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1a552c124_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1a552ba19_decimal _30613_lower = _1a552ba19_decimal{};;
	_1a552bd9e_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1a552c124_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1ab188a49;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1ab18d5cb:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1ab18d653:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1ab18d6ca:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1ab18d521:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1ab19107e:;
					{
						_1a552c894_round(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1ab1910e5:;
					{
						_1a552c399_roundDown(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1ab19115b:;
					{
						_1a552c61e_roundUp(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1ab18c8b6:;
			};
		}
	_iter_next_1ab188a49:;
	}
	_iter_end_1ab188a49:;;
}



inline jule::Slice<jule::U8> _1a551bd4a_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1a5519a90_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	if ((_39654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('.'); };
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1a551d39b_min(_39637_d._field_nd, static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			(_39613_dst).append(_39637_d._field_d.slice(_41217_i, _41313_m));;
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1ab195dca:;
		}
		_iter_end_1ab195dca:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_39665_fmt); };
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1ab197b8a:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0'))); };
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1ab197a03:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1ab1977c2:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1ab196e53:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1a551c2ce_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1a5519a90_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('-'); };
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1a551d39b_min(_45137_d._field_nd, _45137_d._field_dp);;
		(_45113_dst).append(_45137_d._field_d.slice(0LL, _45917_m));;
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1ab19b7b5:;
		}
		_iter_end_1ab19b7b5:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
	};
	if ((_45154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('.'); };
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push(_47221_ch); };
			}
		_iter_next_1ab19c80a:;
		}
		_iter_end_1ab19c80a:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1a551c8d9_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1a5518e68_floatInfo* _48463_flt) {
	if (_48426_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a5531821_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('p'); };
	_48452_exp-=static_cast<jule::I64>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a5531821_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1a551d05a_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1a5518e68_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1ab1a3228:;
	}
	_iter_end_1ab1a3228:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_50637_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))); };
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		while ((_5079_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1ab1a8690:;
		}
		_iter_end_1ab1a8690:;;
	} else if ((_50626_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1ab1a9839:;
		}
		_iter_end_1ab1a9839:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1a551e303_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1ab1ac0bc:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1ab1a6e63:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1ab1abc26:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1ab1ab4c8:;
	};
	return _50613_dst;;
}



inline jule::I64 _1a551d39b_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _1a551d6dc_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1a551e303_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1b619b28d_ConvError _1a551e732_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1b619b28d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if ((*(_5119_s)).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1ab1b3315:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1ab1b3205:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1a551e303_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1ab1b4d0b:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a551e303_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1ab1b4b1e:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a551e303_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1ab1b4b96:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1ab1b4767:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1ab1b469b:;
					};
				};
			}
		}
		else {
			_case_begin_1ab1b26cc:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1ab1b2a40:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1ab1b899c:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ab1b832b:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1ab1b856d:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1ab1b8518:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1ab1b867d:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab1b997b:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1ab1b9926:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab1ba828:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1ab1b9c9a:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1a551e303_lower(_10912_c)) && (_1a551e303_lower(_10912_c) <= 'z'))) {
						_case_begin_1ab1bba38:;
						{
							_11017_d=static_cast<jule::U8>(((_1a551e303_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1ab1bb65e:;
						{
							goto _iter_next_1ab1ba828;
						}
					}
					else {
						_case_begin_1ab1bb5e8:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1ab1bb582:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1ab1ba828:;
			++it;
			goto _iter_begin_1ab1ba828;
		}
		_iter_end_1ab1ba828:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1a551eb1c_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1b619b28d_ConvError __jule_assign_result = _1a551e732_parseUint(&(_14618_s), _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1a552007e_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1b619b28d_ConvError __jule_assign_result = _1a551e732_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1a5520b95_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1a5b9b2ed_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _1a5c6a60e_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a54cdea5_Mul64(_4122_man, _1a5521a0e_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a54cdea5_Mul64(_4122_man, _1a5521a0e_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a5b9b2ed_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a5521091_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1a5b9ac37_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _1a5c6a60e_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a54cdea5_Mul64(_11022_man, _1a5521a0e_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a54cdea5_Mul64(_11022_man, _1a5521a0e_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1a5b9ac37_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1a5522dd9_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>* _4631_s, jule::Str _4642_prefix) {
	jule::I64 _4713_n = _4642_prefix.len();;
	if ((_4713_n > (*(_4631_s)).len())) {
		_4713_n=static_cast<jule::I64>((*(_4631_s)).len());
	};
	jule::I64 _5113_i = 0LL;;
	for (; (_5113_i < _4713_n); (_5113_i)++) {
		{
			jule::U8 _5317_c = (*(_4631_s))[_5113_i];;
			if ((('A' <= _5317_c) && (_5317_c <= 'Z'))) {
				_5317_c+=32LL;
			};
			if ((_5317_c != _4642_prefix[_5113_i])) {
				return _5113_i;;
			};
		}
	_iter_next_1ab1dee79:;
	}
	_iter_end_1ab1dee79:;;
	return _4713_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a55231d6_special(jule::Slice<jule::U8> _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7313_sign = 1LL;;
	jule::I64 _7413_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1ab1e3741:;
			{
				if ((_6912_s[0LL] == '-')) {
					_7313_sign=-1LL;
				};
				_7413_nsign=1LL;
				{
					jule::Slice<jule::U8>* _8321_sp = (&(_6912_s));;
					(*(_8321_sp))=(*(_8321_sp)).slice(1LL);
				};
				goto _case_begin_1ab1e37b8;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1ab1e37b8:;
			{
				jule::I64 _8817_caseN = _1a5522dd9_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("infinity", 8));;
				if (((3LL < _8817_caseN) && (_8817_caseN < 8LL))) {
					_8817_caseN=3LL;
				};
				if (((_8817_caseN == 3LL) || (_8817_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a54d671b_Inf(_7313_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7413_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1ab1e3840:;
			{
				if ((_1a5522dd9_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a54d6188_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ab1e3675:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a552347d_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1ab1e8b64:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1ab1e8dea:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1ab1e8d2e:;
	};
	jule::U64 _12213_base = 10LLU;;
	jule::I64 _12313_maxMantDigits = 19LL;;
	jule::U8 _12413_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1a551e303_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_12213_base=16LLU;
		_12313_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_12413_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _13213_sawdot = false;;
	jule::Bool _13313_sawdigits = false;;
	jule::I64 _13413_nd = 0LL;;
	jule::I64 _13513_ndMant = 0LL;;
	jule::I64 _13613_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13813_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13813_c == '_')) {
					_case_begin_1ab1eddde:;
					{
						goto _iter_next_1ab1ed482;
					}
				}
				else if ((_13813_c == '.')) {
					_case_begin_1ab1ede66:;
					{
						if (_13213_sawdot) {
							goto _julec_label_loop_end;
						};
						_13213_sawdot=true;
						_13613_dp=_13413_nd;
						goto _iter_next_1ab1ed482;
					}
				}
				else if ((('0' <= _13813_c) && (_13813_c <= '9'))) {
					_case_begin_1ab1ededd:;
					{
						_13313_sawdigits=true;
						if (((_13813_c == '0') && (_13413_nd == 0LL))) {
							(_13613_dp)--;
							goto _iter_next_1ab1ed482;
						};
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_12213_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13813_c - '0'));
							(_13513_ndMant)++;
						} else if ((_13813_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ab1ed482;
					}
				}
				else if ((((_12213_base == 16LLU) && ('a' <= _1a551e303_lower(_13813_c))) && (_1a551e303_lower(_13813_c) <= 'f'))) {
					_case_begin_1ab1ee065:;
					{
						_13313_sawdigits=true;
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1a551e303_lower(_13813_c) - 'a') + 10LLU));
							(_13513_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1ab1ed482;
					}
				}
				_match_end_1ab1edd12:;
			};
			goto _iter_end_1ab1ed482;
		}
	_iter_next_1ab1ed482:;
	}
	_iter_end_1ab1ed482:;;
	_julec_label_loop_end:;
	if ((!(_13313_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_13213_sawdot))) {
		_13613_dp=_13413_nd;
	};
	if ((_12213_base == 16LLU)) {
		_13613_dp*=4LL;
		_13513_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1a551e303_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _12413_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20117_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20117_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1ab206842;
				};
				if ((_21117_e < 10000LL)) {
					_21117_e=static_cast<jule::I64>((((_21117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1ab206842:;
		}
		_iter_end_1ab206842:;;
		_13613_dp+=(_21117_e * _20117_esign);
	} else if ((_12213_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13613_dp - _13513_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1a5524e0d_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1a551963e_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1ab210164:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1ab2101db:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1a552432a_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1a552432a_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1ab210263:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1a552432a_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab20ea26:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a55252e8_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1a5519331_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1ab2144a9:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1ab214531:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1a552466b_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1a552466b_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1ab2145a8:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1a552466b_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab213d6b:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1b619b28d_ConvError _1a5525826_atofHex(_1a5518e68_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1b619b28d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5579_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5589_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1ab217149:;
	}
	_iter_end_1ab217149:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1ab21a46b:;
	}
	_iter_end_1ab21a46b:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5589_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1ab21ab53:;
	}
	_iter_end_1ab21ab53:;;
	jule::U64 _58813_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_58813_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_58813_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _60313_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5579_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5579_maxExp + 1LL));
		_60313_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _61013_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_61013_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_61013_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1a5519331_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1a5b9ac37_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_61013_bits)))));
		__jule_func_result.__jule_result_arg1 = _60313_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a5b9b2ed_F64FromBits(_61013_bits));
	__jule_func_result.__jule_result_arg1 = _60313_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b619b28d_ConvError _1a5525bcd_atof32(jule::Str* _62112_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1b619b28d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _62314_val = 0;;
		jule::I64 _62319__n = 0;;
		jule::Bool _62323_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a55231d6_special(_1d0a3180c_Stobs(_62112_s));
			_62314_val = __jule_assign_result.__jule_result_arg0;
			_62319__n = __jule_assign_result.__jule_result_arg1;
			_62323_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62323_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_62314_val));
			__jule_func_result.__jule_result_arg1 = _62319__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62910_mantissa = 0;;
	jule::I64 _62920_exp = 0;;
	jule::Bool _62925_neg = false;;
	jule::Bool _62930_trunc = false;;
	jule::Bool _62937_hex = false;;
	jule::I64 _62942__n = 0;;
	jule::Bool _62950_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a552347d_readFloat(_62112_s);
		_62910_mantissa = __jule_assign_result.__jule_result_arg0;
		_62920_exp = __jule_assign_result.__jule_result_arg1;
		_62925_neg = __jule_assign_result.__jule_result_arg2;
		_62930_trunc = __jule_assign_result.__jule_result_arg3;
		_62937_hex = __jule_assign_result.__jule_result_arg4;
		_62942__n = __jule_assign_result.__jule_result_arg5;
		_62950_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62942__n;
	if ((!(_62950_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62937_hex) {
		jule::F64 _63617_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1b619b28d_ConvError __jule_assign_result = _1a5525826_atofHex(&(_1a5519331_f32info), _62910_mantissa, _62920_exp, _62925_neg, _62930_trunc);
			_63617_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63617_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62930_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a55252e8_atof32exact(_62910_mantissa, _62920_exp, _62925_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62950_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a5521091_eiselLemire32(_62910_mantissa, _62920_exp, _62925_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62950_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62950_ok) {
			if ((!(_62930_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65821_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a5521091_eiselLemire32(static_cast<jule::U64>((_62910_mantissa + 1LLU)), _62920_exp, _62925_neg);
				_65821_fUp = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62950_ok && (__jule_func_result.__jule_result_arg0 == _65821_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a552ba19_decimal _66713_d = _1a552ba19_decimal{};;
	if ((!(_1a5523add_set(&_66713_d, _1d0a3180c_Stobs(_62112_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _67110_b = 0;;
	jule::Bool _67113_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a5523deb_floatBits(&_66713_d, &(_1a5519331_f32info));
		_67110_b = __jule_assign_result.__jule_result_arg0;
		_67113_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1a5b9ac37_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_67110_b))));
	if (_67113_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b619b28d_ConvError _1a5525e75_atof64(jule::Str* _67912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b619b28d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _68114_val = 0;;
		jule::I64 _68119__n = 0;;
		jule::Bool _68123_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a55231d6_special(_1d0a3180c_Stobs(_67912_s));
			_68114_val = __jule_assign_result.__jule_result_arg0;
			_68119__n = __jule_assign_result.__jule_result_arg1;
			_68123_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68123_ok) {
			__jule_func_result.__jule_result_arg0 = _68114_val;
			__jule_func_result.__jule_result_arg1 = _68119__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68710_mantissa = 0;;
	jule::I64 _68720_exp = 0;;
	jule::Bool _68725_neg = false;;
	jule::Bool _68730_trunc = false;;
	jule::Bool _68737_hex = false;;
	jule::I64 _68742__n = 0;;
	jule::Bool _68750_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a552347d_readFloat(_67912_s);
		_68710_mantissa = __jule_assign_result.__jule_result_arg0;
		_68720_exp = __jule_assign_result.__jule_result_arg1;
		_68725_neg = __jule_assign_result.__jule_result_arg2;
		_68730_trunc = __jule_assign_result.__jule_result_arg3;
		_68737_hex = __jule_assign_result.__jule_result_arg4;
		_68742__n = __jule_assign_result.__jule_result_arg5;
		_68750_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68742__n;
	if ((!(_68750_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68737_hex) {
		({
			__jule_tuple_f64__jule_tuple__1b619b28d_ConvError __jule_assign_result = _1a5525826_atofHex(&(_1a551963e_f64info), _68710_mantissa, _68720_exp, _68725_neg, _68730_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68730_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a5524e0d_atof64exact(_68710_mantissa, _68720_exp, _68725_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68750_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a5520b95_eiselLemire64(_68710_mantissa, _68720_exp, _68725_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68750_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68750_ok) {
			if ((!(_68730_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71521_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a5520b95_eiselLemire64(static_cast<jule::U64>((_68710_mantissa + 1LLU)), _68720_exp, _68725_neg);
				_71521_fUp = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68750_ok && (__jule_func_result.__jule_result_arg0 == _71521_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a552ba19_decimal _72413_d = _1a552ba19_decimal{};;
	if ((!(_1a5523add_set(&_72413_d, _1d0a3180c_Stobs(_67912_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72810_b = 0;;
	jule::Bool _72813_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a5523deb_floatBits(&_72413_d, &(_1a551963e_f64info));
		_72810_b = __jule_assign_result.__jule_result_arg0;
		_72813_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1a5b9b2ed_F64FromBits(_72810_b));
	if (_72813_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b619b28d_ConvError _1a55262b6_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b619b28d_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _73814_f = 0;;
		jule::I64 _73817_n = 0;;
		jule::I64 _73820_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1b619b28d_ConvError __jule_assign_result = _1a5525bcd_atof32(_73622_s);
			_73814_f = __jule_assign_result.__jule_result_arg0;
			_73817_n = __jule_assign_result.__jule_result_arg1;
			_73820_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73814_f));
		__jule_func_result.__jule_result_arg1 = _73817_n;
		__jule_func_result.__jule_result_arg2 = _73820_err;
		return __jule_func_result;;
	};
	jule::F64 _74110_f = 0;;
	jule::I64 _74113_n = 0;;
	jule::I64 _74116_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1b619b28d_ConvError __jule_assign_result = _1a5525e75_atof64(_73622_s);
		_74110_f = __jule_assign_result.__jule_result_arg0;
		_74113_n = __jule_assign_result.__jule_result_arg1;
		_74116_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _74110_f;
	__jule_func_result.__jule_result_arg1 = _74113_n;
	__jule_func_result.__jule_result_arg2 = _74116_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1a5526607_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _77010_f = 0;;
	jule::I64 _77013_n = 0;;
	jule::I64 _77016_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1b619b28d_ConvError __jule_assign_result = _1a55262b6_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_77010_f = __jule_assign_result.__jule_result_arg0;
		_77013_n = __jule_assign_result.__jule_result_arg1;
		_77016_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_77013_n != _76915_s.len()) && ((_77016_err == static_cast<jule::I64>(0LL)) || (_77016_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_77016_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77016_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _77010_f);;
}



inline void _1a5526d77_ryuFtoaFixed32(_1a5519a90_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1a54cb8ba_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1a55282b8_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a55299b2_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1a552a1dd_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1a5527a9d_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _1a55272b7_ryuFtoaFixed64(_1a5519a90_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1a54cbb62_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1a55282b8_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a5529d9c_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1a552a1dd_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1a5527a9d_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _1a5527a9d_formatDecimal(_1a5519a90_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1a55275e7_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1ab24e879:;
	}
	_iter_end_1ab24e879:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1ab252b46:;
	}
	_iter_end_1ab252b46:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1ab258410:;
	}
	_iter_end_1ab258410:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _1a5528021_ryuFtoaShortest(_1a5519a90_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1a5518e68_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1a5c6c1d2_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1a5528ede_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1a552894a_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1a5528ede_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I64 _2799_q = (_1a55282b8_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _1a5519331_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a55299b2_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a55299b2_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a55299b2_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a5529d9c_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a5529d9c_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a5529d9c_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1a552a1dd_divisibleByPow5(_27310_ml, static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1a552a1dd_divisibleByPow5(_27314_mc, static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1a552a1dd_divisibleByPow5(_27318_mu, static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1a5528ede_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I64 _1a55282b8_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1a5528560_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a552894a_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1a5518e68_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1a5528ede_ryuDigits(_1a5519a90_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a552a485_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a552a485_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a552a485_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1a55295c7_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1a55295c7_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1ab276252:;
		}
		_iter_end_1ab276252:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1a55295c7_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1ab2766e7:;
	}
	_iter_end_1ab2766e7:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1ab2741d9:;
	}
	_iter_end_1ab2741d9:;;
}



inline void _1a55295c7_ryuDigits32(_1a5519a90_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1ab27b4cc;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1ab27b4cc:;
	}
	_iter_end_1ab27b4cc:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1ab282769:;
	}
	_iter_end_1ab282769:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a55299b2_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1a5521a0e_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a54cdea5_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1a5528560_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a5529d9c_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1a5521a0e_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1a5528560_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a54cdea5_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a54cdea5_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a54cc822_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a552a1dd_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1ab290931:;
	}
	_iter_end_1ab290931:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1a552a485_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1a552d202_trim(_1a552ba19_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1ab293e51:;
	}
	_iter_end_1ab293e51:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1a552d4aa_rightShift(_1a552ba19_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _28513_r = 0LL;;
	jule::I64 _28613_w = 0LL;;
	jule::U64 _28913_n = 0LLU;;
	for (; ((_28913_n >> _28432_k) == 0LLU); (_28513_r)++) {
		{
			if ((_28513_r >= (*(_28420_a))._field_nd)) {
				if ((_28913_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_28913_n >> _28432_k) == 0LLU)) {
					{
						_28913_n=static_cast<jule::U64>((_28913_n * 10LLU));
						(_28513_r)++;
					}
				_iter_next_1ab29c520:;
				}
				_iter_end_1ab29c520:;;
				goto _iter_end_1ab295b89;
			};
			jule::U64 _30313_c = static_cast<jule::U64>((*(_28420_a))._field_d[_28513_r]);;
			_28913_n=static_cast<jule::U64>((((_28913_n * 10LLU) + _30313_c) - '0'));
		}
	_iter_next_1ab295b89:;
	}
	_iter_end_1ab295b89:;;
	(*(_28420_a))._field_dp-=(_28513_r - 1LL);
	jule::U64 _3089_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _28432_k)) - 1LLU));;
	for (; (_28513_r < (*(_28420_a))._field_nd); (_28513_r)++) {
		{
			jule::U64 _31213_c = static_cast<jule::U64>((*(_28420_a))._field_d[_28513_r]);;
			jule::U64 _31313_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_31313_dig + '0')));
			(_28613_w)++;
			_28913_n=static_cast<jule::U64>((((_28913_n * 10LLU) + _31213_c) - '0'));
		}
	_iter_next_1ab29e357:;
	}
	_iter_end_1ab29e357:;;
	while ((_28913_n > 0LLU)) {
		{
			jule::U64 _32213_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			if ((_28613_w < 800LL)) {
				(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_32213_dig + '0')));
				(_28613_w)++;
			} else if ((_32213_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_28913_n=static_cast<jule::U64>((_28913_n * 10LLU));
		}
	_iter_next_1ab2a0b83:;
	}
	_iter_end_1ab2a0b83:;;
	(*(_28420_a))._field_nd=_28613_w;
	_1a552d202_trim(_28420_a);
}



inline jule::Bool _1a552d91c_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _33913_i = 0LL;;
	for (; (_33913_i < (*(_33846_s)).len()); (_33913_i)++) {
		{
			if ((_33913_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_33913_i] != (*(_33846_s))[_33913_i])) {
				return (_33821_b[_33913_i] < (*(_33846_s))[_33913_i]);;
			};
		}
	_iter_next_1ab2a36d0:;
	}
	_iter_end_1ab2a36d0:;;
	return false;;
}



inline void _1a552db92_leftShift(_1a552ba19_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _35313_delta = _1a552b475_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1a552d91c_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1a552b475_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_35313_delta)--;
	};
	jule::I64 _35813_r = (*(_35219_a))._field_nd;;
	jule::I64 _35913_w = ((*(_35219_a))._field_nd + _35313_delta);;
	jule::U64 _36213_n = 0LLU;;
	(_35813_r)--;
	for (; (_35813_r >= 0LL); (_35813_r)--) {
		{
			_36213_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_35813_r]) - '0') << _35231_k);
			jule::U64 _36613_quo = (_36213_n / 10LLU);;
			jule::U64 _36713_rem = (_36213_n - (10LLU * _36613_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_36713_rem + '0')));
			} else if ((_36713_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_36613_quo;
		}
	_iter_next_1ab2a610b:;
	}
	_iter_end_1ab2a610b:;;
	while ((_36213_n > 0LLU)) {
		{
			jule::U64 _37913_quo = (_36213_n / 10LLU);;
			jule::U64 _38013_rem = (_36213_n - (10LLU * _37913_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38013_rem + '0')));
			} else if ((_38013_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_37913_quo;
		}
	_iter_next_1ab2a6b56:;
	}
	_iter_end_1ab2a6b56:;;
	(*(_35219_a))._field_nd+=_35313_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_35313_delta;
	_1a552d202_trim(_35219_a);
}



inline jule::Bool _1a552ded3_shouldRoundUp(_1a552ba19_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1a5530600_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1a553104b_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a5531821_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1a5530985_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1a553104b_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a5531821_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1a5530c2c_Itoa(jule::I64 _809_i) {
	return _1a5530985_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1a553104b_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1a55312e3_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1a5531821_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1ab2e0be5:;
		}
		_iter_end_1ab2e0be5:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1a55312e3_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1a5c6b544_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1ab2e846c:;
		}
		_iter_end_1ab2e846c:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1ab2eac00:;
		}
		_iter_end_1ab2eac00:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1a5532aec_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ab311111:;
			{
				return _1a553214b_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ab311177:;
			{
				return _1a5532415_SysUint;;
			}
		}
		else {
			_case_begin_1ab3129a3:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1ab310297:;
	};
}



inline jule::I64 _1a5532d94_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1ab31393d:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab313a70:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab313ad6:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab313b4c:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ab313bb3:;
			{
				return _1a5531dd7_BitSize;;
			}
		}
		else {
			_case_begin_1ab313597:;
			{
				return -1LL;;
			}
		}
		_match_end_1ab3139c6:;
	};
}



inline jule::Str _1a55331b3_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ab3154cd:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ab315db3:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ab315e29:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ab315e90:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1ab315951:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab313d06:;
	};
}



inline jule::Str _1a553345a_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1ab3168a8:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1ab3170a1:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1ab317117:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ab31717d:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1ab3164ac:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab316457:;
	};
}



inline jule::Str _1a5533702_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1ab317a96:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1ab31828e:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1ab31769a:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab317645:;
	};
}



inline jule::Bool _1a55342a2_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1a5526607_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1a5534549_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1ab31d1c8:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ab31b528:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ab31c5a1:;
	};
}



inline jule::I64 _1a55347e1_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1ab31dddd:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1ab31dc89:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1ab31dd11:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ab31d371:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ab31d7b1:;
	};
}



inline jule::I64 _1a5534a88_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1ab32086d:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1ab32072a:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1ab320791:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1ab31ea37:;
			{
				return 64LLU;;
			}
		}
		_match_end_1ab320351:;
	};
}



inline void _1a5534bed_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1a4e914b2_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1ab3215e9:;
				{
					_1a5531dd7_BitSize=64LLU;
					_1a553214b_SysInt=jule::Str("i64", 3);
					_1a5532415_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1ab321660:;
				{
					_1a5531dd7_BitSize=32LLU;
					_1a553214b_SysInt=jule::Str("i32", 3);
					_1a5532415_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1ab321176:;
		};
	};
}



inline void _1a5534d63_init(void) {
	_1a5534bed_UpdateTarget();
}



inline jule::I64 _1a5538b03_MinI(jule::Str _6113_k) {
	_6113_k=_1a5532aec_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ab320a49:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab323860:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab3238c6:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab32393c:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1ab321a5b:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab32182a:;
	};
}



inline jule::I64 _1a5538dde_MaxI(jule::Str _7913_k) {
	_7913_k=_1a5532aec_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ab323ac4:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab324dd3:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab324e49:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab324eb0:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1ab324b19:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab32482d:;
	};
}



inline jule::U64 _1a5539186_MaxU(jule::Str _9713_k) {
	_9713_k=_1a5532aec_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ab325136:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab326445:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ab3264ab:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ab326522:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1ab32617b:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ab325d90:;
	};
}



inline jule::F64 _1a5539395_Min(jule::Str _11512_k) {
	_11512_k=_1a5532aec_RealKindOf(_11512_k);
	jule::I64 _1179_i = _1a5538b03_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab32890e:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab32848b:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1ab327e19:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab328557:;
	};
}



inline jule::F64 _1a553963c_Max(jule::Str _13312_k) {
	_13312_k=_1a5532aec_RealKindOf(_13312_k);
	jule::I64 _1359_i = _1a5538dde_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _1a5539186_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab32abec:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab32a779:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1ab32a207:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab32a845:;
	};
}



inline jule::Bool _1a5539a8d_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1a5539d79_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1a553a121_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1a553a440_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1a553a6d7_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1a553a97e_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1a553ac26_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1a553b09a_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1a553b342_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1a553b5d9_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1a553b92a_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ab3317b3:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ab330b25:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ab3312eb:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ab331362:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ab3313c8:;
			{
				return _1a5539a8d_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab33143e:;
			{
				return _1a5539d79_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab331829:;
			{
				return _1a553a121_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab331890:;
			{
				return _1a553a440_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ab331906:;
			{
				return _1a553a6d7_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab33196c:;
			{
				return _1a553a97e_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ab3319e4:;
			{
				return _1a553ac26_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ab331a6b:;
			{
				return _1a553b09a_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab331ae3:;
			{
				return _1a553b342_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab331b6a:;
			{
				return _1a553b5d9_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1ab331be2:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1ab331c69:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1ab331186:;
			{
				return false;;
			}
		}
		_match_end_1ab32b0c6:;
	};
}



inline jule::Bool _1a553bbc2_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1a553be69_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1a553c211_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1a553c4a8_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1a553c909_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1a553cba1_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1a553ce48_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1a553d1e0_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1a553d531_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ab339425:;
			{
				return _1a553e565_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ab333441:;
			{
				return _1a553e851_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ab339315:;
			{
				return _1a553e851_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab338e19:;
			{
				return _1a553bbc2_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab338e80:;
			{
				return _1a553be69_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab338ee6:;
			{
				return _1a553c211_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab33906d:;
			{
				return _1a553c4a8_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ab33948b:;
			{
				return _1a553c909_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ab339513:;
			{
				return _1a553cba1_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab33958a:;
			{
				return _1a553ce48_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab339612:;
			{
				return _1a553d1e0_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ab339689:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab338ce8:;
			{
				return false;;
			}
		}
		_match_end_1ab338ab7:;
	};
}



inline jule::Bool _1a553e565_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1a553e851_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1a553eae8_IsInt(jule::Str _4610_k) {
	return (_1a553e565_IsSigInt(_4610_k) || _1a553e851_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1a553ee17_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1a55401ae_IsNum(jule::Str _5610_k) {
	return (_1a553eae8_IsInt(_5610_k) || _1a553ee17_IsFloat(_5610_k));;
}



inline jule::Bool _1a5540456_IsSigNum(jule::Str _6113_k) {
	return (_1a553e565_IsSigInt(_6113_k) || _1a553ee17_IsFloat(_6113_k));;
}



inline void _1a5548ddd_lshiftUnsig(_1a55406ba_Const* _59021_c, _1a55406ba_Const* _59032_x) {
	jule::U64 _5919_l = _1a5542e3c_AsU64(_59021_c);;
	jule::U64 _5929_r = _1a5542e3c_AsU64(_59032_x);;
	_1a554369b_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1a55491da_rshiftUnsig(_1a55406ba_Const* _59621_c, _1a55406ba_Const* _59632_x) {
	jule::U64 _5979_l = _1a5542e3c_AsU64(_59621_c);;
	jule::U64 _5989_r = _1a5542e3c_AsU64(_59632_x);;
	_1a554369b_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1a8980178_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1a89802aa_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1a8997811_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1852b_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1a8996e3c_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1a899725b_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				(_4713_s).append(_1a8997b52_strEsqSeq(_4210_bytes, &(_4813_i)));;
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1852b_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_1d0b19890_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1aaeabecc:;
	}
	_iter_end_1aaeabecc:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1a8997503_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1aaeb1234:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aaeb129a:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aaeb1311:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1aaeb1377:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1aaeb13ee:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aaeb1476:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1aaeb14ed:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1aaeb1575:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1aaeb15ec:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1aaeb1674:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1aaeb107a:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1a8997811_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1a8997503_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1aaeb5aeb:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1a551eb1c_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aaeb637c:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1a551eb1c_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aaeb5c72:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a551eb1c_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1aaeb4b2d:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a551eb1c_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1aaeb4e08:;
	};
}



inline jule::Slice<jule::U8> _1a8997b52_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64* _12434_i) {
	jule::I32 _1259_r = _1a8997811_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1259_r));;
}



inline jule::I64 _1a87691e8_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I64* _1038_start) {
	jule::I64 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1852b_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1ab41daae:;
	}
	_iter_end_1ab41daae:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1a876ec9d_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _289_start = (*(_2724_i));;
	jule::I64 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1852b_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1ab421474:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1ab4214da:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1ab421166:;
			};
		}
	_iter_next_1ab42073c:;
	}
	_iter_end_1ab42073c:;;
	return nullptr;;
}



inline void _1a8770056_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		((*(_4722_buf))).append("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1ab4230be:;
			{
				(*(_4722_buf))+=_1a551a0ce_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type133))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ab421809:;
			{
				(*(_4722_buf))+=_1a551a0ce_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1ab422981:;
			{
				(*(_4722_buf))+=_1a5530985_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type134)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1ab4229e7:;
			{
				(*(_4722_buf))+=_1a5530985_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type135)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab422a5d:;
			{
				(*(_4722_buf))+=_1a5530985_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab422ac4:;
			{
				(*(_4722_buf))+=_1a5530985_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1ab423135:;
			{
				(*(_4722_buf))+=_1a5530600_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type132)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1ab42319b:;
			{
				(*(_4722_buf))+=_1a5530600_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type136)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1ab423212:;
			{
				(*(_4722_buf))+=_1a5530600_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type137)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ab423278:;
			{
				(*(_4722_buf))+=_1a5530600_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab4232de:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ab423355:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					((*(_4722_buf))).append("true", 4);
				} else {
					((*(_4722_buf))).append("false", 5);
				};
			}
		}
		else {
			_case_begin_1ab422464:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_1ab4222cc:;
	};
}



inline void _1a8770430_applyFmtByDefault(jule::Str* _8627_buf, jule::I64* _8642_j, jule::Slice<jule::Any> _8650_args) {
	jule::Any _879_arg = _8650_args[(*(_8642_j))];;
	((*(_8642_j)))++;
	_1a8770056_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _1a877082b_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I64* _9451_j, jule::Slice<jule::Any> _9459_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1a8770430_applyFmtByDefault(_9436_buf, _9451_j, _9459_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		((*(_9436_buf))).append("{}", 2);
		return;;
	};
	_1d0a31eb1_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _1a8770b39_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _1d0a3180c_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _1a87691e8_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_1a87691e8_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_1d0a31eb1_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _1a876ec9d_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1ab42d382;
			};
			_1a877082b_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), _11322_args);
			if ((_11913_j >= _11322_args.len())) {
				_1d0a31eb1_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_1ab42d382;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1ab42d382:;
	}
	_iter_end_1ab42d382:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_1d0a31eb1_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _1a877281c_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1a8770b39_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1a88d2020_parameterUsesGenerics(jule::Ptr<_1a88ce03e_ParamIns>* _38131_p, jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>>* _38146_generics) {
	if (_1a88cb008_IsSelf((*(_38131_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _1a86c8b5d_kindUsesGenerics(&((*(_38131_p)).get()._field_Kind), _38146_generics);;
}



inline jule::Ptr<_1a86b6651_TypeSymbol> _1a88d44ea_buildType(jule::Ptr<_1a88970e5_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1a865ec15_Value> _1a88d47d6_buildExpr(jule::Ptr<_1a889b270_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1a86ada55_TypeAlias> _1a88d4a7d_buildTypeAlias(jule::Ptr<_1a88ad062_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1a86ada55_TypeAlias>(_1a86ada55_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_Binded=_11223_decl.get()._field_Binded, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1a88d44ea_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1a88b4266_Field> _1a88d4d9c_buildField(jule::Ptr<_1a88b153d_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1a88b4266_Field>(_1a88b4266_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1a88d44ea_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1a88b4266_Field>> _1a88d5144_buildFields(jule::Slice<jule::Ptr<_1a88b153d_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1a88b4266_Field>> _13513_fields = jule::Slice<jule::Ptr<_1a88b4266_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6c467d:;
		if (it != expr_end) {
			jule::Ptr<_1a88b153d_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a88b4266_Field>> &__jule_push_dest = _13513_fields; __jule_push_dest.push(_1a88d4d9c_buildField(_13617_decl)); };
			}
			_iter_next_1ab6c467d:;
			++it;
			goto _iter_begin_1ab6c467d;
		}
		_iter_end_1ab6c467d:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1a88b6d3a_Struct> _1a88d53db_buildStruct(jule::Ptr<_1a88b1d8a_StructDecl> _14220_decl) {
	return jule::new_ptr<_1a88b6d3a_Struct>(_1a88b6d3a_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1a88d5144_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_Binded=_14220_decl.get()._field_Binded, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1a88ca920_Param> _1a88d5683_buildParam(jule::Ptr<_1a88a7402_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1a88ca920_Param>(_1a88ca920_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1a88d44ea_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1a88ca920_Param>> _1a88d5a07_buildParams(jule::Slice<jule::Ptr<_1a88a7402_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1a88ca920_Param>> _16613_params = jule::Slice<jule::Ptr<_1a88ca920_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6c7818:;
		if (it != expr_end) {
			jule::Ptr<_1a88a7402_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a88ca920_Param>> &__jule_push_dest = _16613_params; __jule_push_dest.push(_1a88d5683_buildParam(_16717_decl)); };
			}
			_iter_next_1ab6c7818:;
			++it;
			goto _iter_begin_1ab6c7818;
		}
		_iter_end_1ab6c7818:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1a88ca216_RetType> _1a88d5c9e_buildRetType(jule::Ptr<_1a8899d62_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a88ca216_RetType>(_1a88ca216_RetType{._field_Kind=_1a88d44ea_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1a88cc25c_Fn> _1a88d6046_buildFn(jule::Ptr<_1a88a8722_FnDecl> _18316_decl) {
	return jule::new_ptr<_1a88cc25c_Fn>(_1a88cc25c_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_Binded=_18316_decl.get()._field_Binded, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1a88d5c9e_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1a88d5a07_buildParams(&(_18316_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1a88cc25c_Fn>> _1a88d62dd_buildMethods(jule::Slice<jule::Ptr<_1a88a8722_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1a88cc25c_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1a88cc25c_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6cb355:;
		if (it != expr_end) {
			jule::Ptr<_1a88a8722_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a88cc25c_Fn>> &__jule_push_dest = _20213_methods; __jule_push_dest.push(_1a88d6046_buildFn(_20317_decl)); };
			}
			_iter_next_1ab6cb355:;
			++it;
			goto _iter_begin_1ab6cb355;
		}
		_iter_end_1ab6cb355:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_1a86b6651_TypeSymbol>> _1a88d6585_buildTraitInherits(jule::Slice<jule::Ptr<_1a88970e5_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1a86b6651_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_1a86b6651_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6cc7b8:;
		if (it != expr_end) {
			jule::Ptr<_1a88970e5_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1a86b6651_TypeSymbol>> &__jule_push_dest = _21013_symbols; __jule_push_dest.push(_1a88d44ea_buildType(_21117_it)); };
			}
			_iter_next_1ab6cc7b8:;
			++it;
			goto _iter_begin_1ab6cc7b8;
		}
		_iter_end_1ab6cc7b8:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_1a88de47d_Trait> _1a88d682c_buildTrait(jule::Ptr<_1a88b2561_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1a88de47d_Trait>(_1a88de47d_Trait{._field_Token=_21719_decl.get()._field_Token, ._field_Ident=_21719_decl.get()._field_Ident, ._field_Public=_21719_decl.get()._field_Public, ._field_Inherits=_1a88d6585_buildTraitInherits(&(_21719_decl.get()._field_Inherits)), ._field_Methods=_1a88d62dd_buildMethods(&(_21719_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_1a88e121b_EnumItem> _1a88d6ac4_buildEnumItem(jule::Ptr<_1a88ae8c1_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1a88e121b_EnumItem>(_1a88e121b_EnumItem{._field_Token=_22722_decl.get()._field_Token, ._field_Ident=_22722_decl.get()._field_Ident, ._field_Value=_1a88d47d6_buildExpr(_22722_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1a88e121b_EnumItem>> _1a88d6d6b_buildEnumItems(jule::Slice<jule::Ptr<_1a88ae8c1_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1a88e121b_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_1a88e121b_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6cedc5:;
		if (it != expr_end) {
			jule::Ptr<_1a88ae8c1_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a88e121b_EnumItem>> &__jule_push_dest = _23613_items; __jule_push_dest.push(_1a88d6ac4_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1ab6cedc5:;
			++it;
			goto _iter_begin_1ab6cedc5;
		}
		_iter_end_1ab6cedc5:;
	};
	return _23613_items;;
}



inline jule::Ptr<_1a88e1c11_Enum> _1a88d72bc_buildEnum(jule::Ptr<_1a88b03e9_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1a88e1c11_Enum>(_1a88e1c11_Enum{._field_Token=_24318_decl.get()._field_Token, ._field_Public=_24318_decl.get()._field_Public, ._field_Ident=_24318_decl.get()._field_Ident, ._field_Kind=_1a88d44ea_buildType(_24318_decl.get()._field_Kind), ._field_Items=_1a88d6d6b_buildEnumItems(&(_24318_decl.get()._field_Items))});;
}



inline jule::Ptr<_1a88e2c78_TypeEnumItem> _1a88d7564_buildTypeEnumItem(jule::Ptr<_1a88b0bbe_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1a88e2c78_TypeEnumItem>(_1a88e2c78_TypeEnumItem{._field_Token=_25326_decl.get()._field_Token, ._field_Ident=_25326_decl.get()._field_Ident, ._field_Kind=_1a88d44ea_buildType(_25326_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1a88e2c78_TypeEnumItem>> _1a88d780b_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a88b0bbe_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1a88e2c78_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_1a88e2c78_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6d2801:;
		if (it != expr_end) {
			jule::Ptr<_1a88b0bbe_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a88e2c78_TypeEnumItem>> &__jule_push_dest = _26213_items; __jule_push_dest.push(_1a88d7564_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1ab6d2801:;
			++it;
			goto _iter_begin_1ab6d2801;
		}
		_iter_end_1ab6d2801:;
	};
	return _26213_items;;
}



inline jule::Ptr<_1a88e330b_TypeEnum> _1a88d7aa3_buildTypeEnum(jule::Ptr<_1a88b12c9_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1a88e330b_TypeEnum>(_1a88e330b_TypeEnum{._field_Token=_26922_decl.get()._field_Token, ._field_Public=_26922_decl.get()._field_Public, ._field_Ident=_26922_decl.get()._field_Ident, ._field_Items=_1a88d780b_buildTypeEnumItems(&(_26922_decl.get()._field_Items))});;
}



inline jule::Ptr<_1a8966901_Var> _1a88d7d4a_buildVar(jule::Ptr<_1a88a9701_VarDecl> _27817_decl) {
	return jule::new_ptr<_1a8966901_Var>(_1a8966901_Var{._field_Token=_27817_decl.get()._field_Token, ._field_Ident=_27817_decl.get()._field_Ident, ._field_Binded=_27817_decl.get()._field_Binded, ._field_Constant=_27817_decl.get()._field_Constant, ._field_Mutable=_27817_decl.get()._field_Mutable, ._field_Public=_27817_decl.get()._field_Public, ._field_Statically=_27817_decl.get()._field_Statically, ._field_Reference=_27817_decl.get()._field_Reference, ._field_Kind=_1a88d44ea_buildType(_27817_decl.get()._field_Kind), ._field_Value=_1a88d47d6_buildExpr(_27817_decl.get()._field_Expr), ._field_Refers=static__1a88d3076_new(), ._field_Directives=_27817_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1a8966901_Var>> _1a88d80e2_buildVars(jule::Slice<jule::Ptr<_1a88a9701_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1a8966901_Var>> _29613_vars = jule::Slice<jule::Ptr<_1a8966901_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6d6382:;
		if (it != expr_end) {
			jule::Ptr<_1a88a9701_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = _29613_vars; __jule_push_dest.push(_1a88d7d4a_buildVar(_29717_decl)); };
			}
			_iter_next_1ab6d6382:;
			++it;
			goto _iter_begin_1ab6d6382;
		}
		_iter_end_1ab6d6382:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_1a8919332_Impl> _1a88d8389_buildImpl(jule::Ptr<_1a88b2b6b_Impl> _30318_decl) {
	return jule::new_ptr<_1a8919332_Impl>(_1a8919332_Impl{._field_Base=_30318_decl.get()._field_Base, ._field_Dest=_30318_decl.get()._field_Dest, ._field_Methods=_1a88d62dd_buildMethods(&(_30318_decl.get()._field_Methods)), ._field_Statics=_1a88d80e2_buildVars(_30318_decl.get()._field_Statics)});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8915163_buildAsComptimeMethodData(jule::Ptr<_1a88cee0d_FnIns>* _139635_f) {
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>((*(_139635_f)), 1)}), });;
}



inline jule::Ptr<_1a893d323_ImportInfo> _1a8915350_findComptimePackage(jule::Ptr<_1a89465e5_Sema>* _140429_s) {
	return _1a8946a68_SelectPackage((*(_140429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1a893d323_ImportInfo>)>([=](jule::Ptr<_1a893d323_ImportInfo> _140528_pkg) mutable -> jule::Bool {
		return _140528_pkg.get()._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a89156b3_buildComptimeTypeInfoData(jule::Ptr<_1a89465e5_Sema>* _141035_s, jule::Ptr<_1a86ae79d_TypeKind>* _141050_t) {
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_1a894601d_pushComptimeTypeInfo((*(_141035_s)).get()._field_meta.ptr(), _141050_t), 15)}), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a89159e3_buildComptimeValue(jule::Ptr<_1a865dbe2_Data>* _141828_d) {
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a890ea64_comptimeValue>(_1a890ea64_comptimeValue{._field_data=(*(_141828_d))}), 16)}), });;
}



inline jule::Bool _1a8918760_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1a86ae79d_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1ab84c130:;
			{
				jule::Ptr<_1a86b7003_Prim> _14513_prim = _1a86b1eba_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1a5540456_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1ab84e165:;
			{
				jule::Ptr<_1a86b7003_Prim> _15113_prim = _1a86b1eba_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1a553e851_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1ab84e1cb:;
			{
				jule::Ptr<_1a86b7003_Prim> _15713_prim = _1a86b1eba_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1a553ee17_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1ab847b31:;
			{
				jule::Ptr<_1a86b7003_Prim> _16313_prim = _1a86b1eba_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1a55401ae_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1ab847b97:;
			{
				return _1a86b1041_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1ab847c0d:;
			{
				return (!(_1a86b1041_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1ab847c74:;
			{
				return _1a86b0ccc_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1ab84e330:;
			{
				return _1a86b12a5_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_1ab8481b4:;
			{
				return false;;
			}
		}
		_match_end_1ab84815e:;
	};
}



inline jule::Bool _1a8918a4b_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_1a8916bc0_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab854137:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_1ab854137:;
			++it;
			goto _iter_begin_1ab854137;
		}
		_iter_end_1ab854137:;
	};
	return false;;
}



inline jule::Ptr<_1a8925eba_scopeChecker> _1a891b3bc_newScopeCheckerBase(jule::Ptr<_1a89465e5_Sema>* _5829_s, jule::Ptr<_1a88cee0d_FnIns> _5843_owner) {
	return jule::new_ptr<_1a8925eba_scopeChecker>(_1a8925eba_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1a89ab380_SymbolTable>(), });;
}



inline jule::Ptr<_1a8925eba_scopeChecker> _1a891b752_newScopeChecker(jule::Ptr<_1a89465e5_Sema>* _6625_s, jule::Ptr<_1a88cee0d_FnIns> _6639_owner) {
	jule::Ptr<_1a8925eba_scopeChecker> _6713_base = _1a891b3bc_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a8924c33_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a89251a6_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1a8924c33_scopeLabel> _1a891ba93_findLabelParent(jule::Str _7620_ident, jule::Ptr<_1a8925eba_scopeChecker> _7636_scope) {
	jule::Ptr<_1a8924c33_scopeLabel> _7713_label = _1a8929672_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_1a8929672_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1ab86839e:;
	}
	_iter_end_1ab86839e:;;
	return _7713_label;;
}



inline jule::Bool _1a891be28_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1a891e38c_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ab869cb8:;
			{
				jule::Ptr<_1a88c0e54_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1a88c0e54_FnCallExprModel>(&__jule_any_type35);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab869d2e:;
			{
				jule::Ptr<_1a865dbe2_Data> _9813_d = _9021_Model.cast_ptr<_1a865dbe2_Data>(&__jule_any_type24);;
				return _1a891be28_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1ab8689ed:;
	};
	return false;;
}



inline jule::Bool _1a891c269_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1a891e38c_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ab86bea7:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1a891e38c_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ab86c01d:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1a89201d4_InfIter>(&__jule_any_type37).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ab86c084:;
			{
				jule::Ptr<_1a892103c_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_1a892103c_RangeIter>(&__jule_any_type41);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _1a891be28_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ab86a23b:;
			{
				jule::Ptr<_1a8920657_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_1a8920657_WhileIter>(&__jule_any_type39);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _1a891be28_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _1a891be28_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ab86a2a2:;
			{
				jule::Ptr<_1a89231a4_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_1a89231a4_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab87054e:;
					if (it != expr_end) {
						jule::Ptr<_1a8923bee_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab871275:;
								if (it != expr_end) {
									jule::Ptr<_1a865dbe2_Data> *_12420_expr = it;
									{
										if (_1a891be28_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1ab871275:;
									++it;
									goto _iter_begin_1ab871275;
								}
								_iter_end_1ab871275:;
							};
						}
						_iter_next_1ab87054e:;
						++it;
						goto _iter_begin_1ab87054e;
					}
					_iter_end_1ab87054e:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ab86a318:;
			{
				jule::Ptr<_1a891ede8_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_1a891ede8_Conditional>(&__jule_any_type36);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab8727e8:;
					if (it != expr_end) {
						jule::Ptr<_1a891e788_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _1a891be28_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1ab8727e8:;
						++it;
						goto _iter_begin_1ab8727e8;
					}
					_iter_end_1ab8727e8:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab86a37e:;
			{
				jule::Ptr<_1a865dbe2_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_1a865dbe2_Data>(&__jule_any_type24);;
				return _1a891be28_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1ab86a1c5:;
			{
				return false;;
			}
		}
		_match_end_1ab86a170:;
	};
}



inline jule::I64 _1a891c5aa_countMatchType(jule::Ptr<_1a89231a4_Match>* _14720_m, jule::Ptr<_1a86ae79d_TypeKind>* _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _1a86aeb55_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8754dd:;
		if (it != expr_end) {
			jule::Ptr<_1a8923bee_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1ab8754dd;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab87627a:;
					if (it != expr_end) {
						jule::Ptr<_1a865dbe2_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1ab8754dd;
							};
							if ((_1499_kind == _1a86aeb55_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_1a86ae79d_TypeKind>(&__jule_any_type89).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1ab87627a:;
						++it;
						goto _iter_begin_1ab87627a;
					}
					_iter_end_1ab87627a:;
				};
			}
			_iter_next_1ab8754dd:;
			++it;
			goto _iter_begin_1ab8754dd;
		}
		_iter_end_1ab8754dd:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1a865dbe2_Data>> _1a891c852_getDatasFromTupleData(jule::Ptr<_1a865dbe2_Data>* _17131_d) {
	if ((_1a86b3b59_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type87) {
				_case_begin_1ab879d2d:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_1a88c4b7d_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1ab877996:;
				{
					jule::Ptr<_1a86bbcb6_Tuple> _17721_t = _1a86b3b59_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1a865dbe2_Data>> _17821_r = jule::Slice<jule::Ptr<_1a865dbe2_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab878ca5:;
						if (it != expr_end) {
							jule::Ptr<_1a86ae79d_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1a865dbe2_Data>> &__jule_push_dest = _17821_r; __jule_push_dest.push(jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1ab878ca5:;
							++it;
							goto _iter_begin_1ab878ca5;
						}
						_iter_end_1ab878ca5:;
					};
					return _17821_r;;
				}
			}
			_match_end_1ab877820:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1a865dbe2_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1a891d18d_checkMut(jule::Ptr<_1a89465e5_Sema>* _20618_s, jule::Ptr<_1a865dbe2_Data>* _20629_left, jule::Ptr<_1a865dbe2_Data> _20646_right, jule::Ptr<_1a52684c0_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1ab87c902:;
			{
				_1a8948e77_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1a86b1041_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1ab87c968:;
			{
				if (((_20660_op.get()._field_Id != static_cast<jule::U64>(71LLU)) && (_1a86b341c_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1a8948e77_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab87c88b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab87c083:;
	};
}



inline jule::Bool _1a891d622_checkAssign(jule::Ptr<_1a89465e5_Sema>* _22521_s, jule::Ptr<_1a865dbe2_Data>* _22536_left, jule::Ptr<_1a865dbe2_Data> _22553_right, jule::Ptr<_1a52684c0_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a88cee0d_FnIns> _2269_f = _1a86b31a8_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1a8948e77_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1a865e50b_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1ab881e01:;
			{
				_1a8948e77_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1a8949296_pushSuggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1ab881e67:;
			{
				_1a8948e77_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1a891d18d_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1ab881ecd:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab881d8a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab880a15:;
	};
}



inline jule::Bool _1a891d8b9_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ab883cc1:;
			{
				return (!((*(_24731_n)).cast_ptr<_1a88a5730_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ab87ca23:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab882264:;
			{
				return false;;
			}
		}
		_match_end_1ab883a5c:;
	};
}



inline jule::Bool _1a891db61_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_1ab883b28:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab884de3:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_1a865dbe2_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1ab885993:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ab885d28:;
						{
							return false;;
						}
					}
					_match_end_1ab885a81:;
				};
			}
		}
		else {
			_case_begin_1ab88495e:;
			{
				return false;;
			}
		}
		_match_end_1ab884909:;
	};
}



inline jule::Bool _1a891de08_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab8869b6:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab8856c9:;
			{
				return false;;
			}
		}
		_match_end_1ab885de4:;
	};
}



inline jule::U64 _1a893674a_removeEqFromOp(jule::U64 _209819_op) {
	{
		auto &_match_expr{ _209819_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ab8854cb:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ab88707c:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1ab8870e3:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ab887214:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ab88727a:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1ab8872e1:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1ab887368:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1ab8873e0:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1ab887467:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1ab8874de:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1ab886c2a:;
			{
				return _209819_op;;
			}
		}
		_match_end_1ab886bc5:;
	};
}



inline jule::Ptr<_1a8966901_Var> _1a893aa3a_findVarInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9e0081:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1a8966901_Var> _4817_v = _1a89abbee_FindVar(_4717_f.ptr(), _4649_ident, _4661_binded);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1ab9e0081:;
			++it;
			goto _iter_begin_1ab9e0081;
		}
		_iter_end_1ab9e0081:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a86ada55_TypeAlias> _1a893ae69_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9e14d3:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1a86ada55_TypeAlias> _6017_ta = _1a89ac0a6_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_binded);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1ab9e14d3:;
			++it;
			goto _iter_begin_1ab9e14d3;
		}
		_iter_end_1ab9e14d3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88b6d3a_Struct> _1a893b354_findStructInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9e2979:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1a88b6d3a_Struct> _7217_s = _1a89ac45d_FindStruct(_7117_f.ptr(), _7052_ident, _7064_binded);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1ab9e2979:;
			++it;
			goto _iter_begin_1ab9e2979;
		}
		_iter_end_1ab9e2979:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88cc25c_Fn> _1a893b7b6_findFnInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9e3e20:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1a88cc25c_Fn> _8417_f = _1a89ac815_FindFn(_8317_file.ptr(), _8248_ident, _8260_binded);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1ab9e3e20:;
			++it;
			goto _iter_begin_1ab9e3e20;
		}
		_iter_end_1ab9e3e20:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88de47d_Trait> _1a893bac4_findTraitInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9e51a7:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1a88de47d_Trait> _9617_t = _1a89acb23_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1ab9e51a7:;
			++it;
			goto _iter_begin_1ab9e51a7;
		}
		_iter_end_1ab9e51a7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88e1c11_Enum> _1a893be15_findEnumInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9e641c:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1a88e1c11_Enum> _10817_e = _1a89ace31_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1ab9e641c:;
			++it;
			goto _iter_begin_1ab9e641c;
		}
		_iter_end_1ab9e641c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a88e330b_TypeEnum> _1a893c256_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9e76c6:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1a88e330b_TypeEnum> _12017_e = _1a89ad23e_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1ab9e76c6:;
			++it;
			goto _iter_begin_1ab9e76c6;
		}
		_iter_end_1ab9e76c6:;
	};
	return nullptr;;
}



inline jule::Any _1a893c751_defByIdentPackage(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9e8bd3:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1a89ae10d_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_binded);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1ab9e8bd3:;
			++it;
			goto _iter_begin_1ab9e8bd3;
		}
		_iter_end_1ab9e8bd3:;
	};
	return nullptr;;
}



inline jule::Bool _1a8943218_isStdPackage(jule::Str _35517_f, jule::Str _35525_p) {
	return _1a4d5a238_HasPrefix(_35517_f, _1a4d650de_Join(jule::Slice<jule::Str>::make({_1a4e90648_PathStdlib,_35525_p})));;
}



inline jule::Bool _1a8943e72_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aba08a5b:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1aba09221:;
			{
				jule::Ptr<_1a88c37c5_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1a8943e72_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1aba09287:;
			{
				jule::Ptr<_1a88c2ede_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_1a88c2ede_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _1a8943e72_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1aba092ed:;
			{
				jule::Ptr<_1a88be3c5_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_1a88be3c5_UnaryExprModel>(&__jule_any_type74);;
				if ((_2317_unary.get()._field_Op.get()._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1a86b2493_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1a86b222e_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1a8943e72_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1aba087e7:;
			{
				return false;;
			}
		}
		_match_end_1aba08792:;
	};
}



inline _1a4deb40b_Log _1a8944417_compilerErr(jule::Ptr<_1a52684c0_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_1a4deb40b_Log _4213_log = _1a4deb40b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_1a4deb84b_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_1a526e76d_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _1a8944758_impIsLookupable(jule::Ptr<_1a893d323_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_Binded) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _1a89408ca_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _1a8944a55_appendRetVars(jule::Slice<jule::Ptr<_1a8966901_Var>>* _6723_dest, jule::Ptr<_1a88cee0d_FnIns>* _6742_f) {
	if ((_1a88cc6be_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a86ae79d_TypeKind>> _7213_types = _1a88d1030_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba1247c:;
		if (it != expr_end) {
			jule::I64 _7310_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> _7317_ident = *it;
			{
				if ((_1a526ac64_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _1a526b00b_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1aba1247c;
				};
				{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = (*(_6723_dest)); __jule_push_dest.push(jule::new_ptr<_1a8966901_Var>(_1a8966901_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()}), ._field_RetOrder=_7310_i, })); };
			}
			_iter_next_1aba1247c:;
			++it;
			_7310_i++;
			goto _iter_begin_1aba1247c;
		}
		_iter_end_1aba1247c:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1a8944d0d_appendParamVars(jule::Slice<jule::Ptr<_1a8966901_Var>>* _9725_dest, jule::Ptr<_1a88cee0d_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba162d8:;
		if (it != expr_end) {
			jule::Ptr<_1a88ce03e_ParamIns> _10217_p = *it;
			{
				if ((_1a526ac64_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _1a526b00b_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1aba162d8;
				};
				jule::Ptr<_1a8966901_Var> _10717_v = jule::new_ptr<_1a8966901_Var>(_1a8966901_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(), ._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()}), });;
				{
					
					if (_1a88cb008_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1aba192ca:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1a86ae33b_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_1a88cb26c_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_1a88cb26c_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a86ba754_Sptr>(_1a86ba754_Sptr{._field_Elem=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_BindIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 21);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1aba19022:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a86bb1b1_Slc>(_1a86bb1b1_Slc{._field_Elem=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_BindIdent=_10217_p.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1aba16a25:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1aba18e12:;
				};
				{ jule::Slice<jule::Ptr<_1a8966901_Var>> &__jule_push_dest = (*(_9725_dest)); __jule_push_dest.push(_10717_v); };
			}
			_iter_next_1aba162d8:;
			++it;
			goto _iter_begin_1aba162d8;
		}
		_iter_end_1aba162d8:;
	};
}



inline void _1a89450d8_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>>* _15734_dest, jule::Ptr<_1a88cee0d_FnIns>* _15759_f) {
	jule::I64 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba1e9a6:;
		if (it != expr_end) {
			jule::I64 _16710_i = it - expr->begin();
			jule::Ptr<_1a86ad01b_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_1a88a408b_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				{ jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> &__jule_push_dest = (*(_15734_dest)); __jule_push_dest.push(jule::new_ptr<_1a86ada55_TypeAlias>(_1a86ada55_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), })); };
			}
			_iter_next_1aba1e9a6:;
			++it;
			_16710_i++;
			goto _iter_begin_1aba1e9a6;
		}
		_iter_end_1aba1e9a6:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1a88b9b51_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aba22327:;
			if (it != expr_end) {
				jule::I64 _18114_i = it - expr->begin();
				jule::Ptr<_1a86ad01b_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_1a88a408b_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					{ jule::Slice<jule::Ptr<_1a86ada55_TypeAlias>> &__jule_push_dest = (*(_15734_dest)); __jule_push_dest.push(jule::new_ptr<_1a86ada55_TypeAlias>(_1a86ada55_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), })); };
				}
				_iter_next_1aba22327:;
				++it;
				_18114_i++;
				goto _iter_begin_1aba22327;
			}
			_iter_end_1aba22327:;
		};
	};
}



inline jule::Ptr<_1a89ab380_SymbolTable> _1a894543a_findFile(jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>* _19518_files, jule::Ptr<_1a526d85a_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba22976:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_1aba22976:;
			++it;
			goto _iter_begin_1aba22976;
		}
		_iter_end_1aba22976:;
	};
	return nullptr;;
}



inline void _1a894589c_pushSuggestion(_1a4deb40b_Log* _20430_log, jule::Str _20441_fmt, jule::Slice<jule::Any> _20454_args) {
	_20430_log->_field_Suggestion=_1a4deb84b_Logf(_20441_fmt, _20454_args);
}



inline void _1a8964dd8_pushImplemented(jule::Ptr<_1a88de47d_Trait> _283424_t, jule::Ptr<_1a88b6d3a_Struct>* _283440_d) {
	_julec_label_push:;
	{
		
		if ((_283424_t.get()._field_Implemented.len() > 0LL)) {
			_case_begin_1aba261d8:;
			{
				{
					auto expr = &(_283424_t.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba26caa:;
					if (it != expr_end) {
						jule::Ptr<_1a88b6d3a_Struct> _283816_s = *it;
						{
							if ((_283816_s == (*(_283440_d)))) {
								goto _match_end_1aba25ccb;
							};
						}
						_iter_next_1aba26caa:;
						++it;
						goto _iter_begin_1aba26caa;
					}
					_iter_end_1aba26caa:;
				};
				goto _case_begin_1aba25d42;
			}
		}
		else {
			_case_begin_1aba25d42:;
			{
				{ jule::Slice<jule::Ptr<_1a88b6d3a_Struct>> &__jule_push_dest = _283424_t.get()._field_Implemented; __jule_push_dest.push((*(_283440_d))); };
			}
		}
		_match_end_1aba25ccb:;
	};
	{
		auto expr = &(_283424_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba27580:;
		if (it != expr_end) {
			jule::Ptr<_1a86b6651_TypeSymbol> _284717_i = *it;
			{
				_1a8964dd8_pushImplemented(_1a86b3681_Trait(_284717_i.get()._field_Kind.ptr()), _283440_d);
			}
			_iter_next_1aba27580:;
			++it;
			goto _iter_begin_1aba27580;
		}
		_iter_end_1aba27580:;
	};
}



inline void _1a8965191_pushImplements(jule::Ptr<_1a88b6d3a_Struct>* _285224_s, jule::Ptr<_1a88de47d_Trait> _285240_t) {
	_julec_label_push:;
	{
		
		if (((*(_285224_s)).get()._field_Implements.len() > 0LL)) {
			_case_begin_1aba28905:;
			{
				{
					auto expr = &((*(_285224_s)).get()._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba294c7:;
					if (it != expr_end) {
						jule::Ptr<_1a88de47d_Trait> _285616_b = *it;
						{
							if ((_285616_b == _285240_t)) {
								goto _match_end_1aba284e8;
							};
						}
						_iter_next_1aba294c7:;
						++it;
						goto _iter_begin_1aba294c7;
					}
					_iter_end_1aba294c7:;
				};
				goto _case_begin_1aba2855e;
			}
		}
		else {
			_case_begin_1aba2855e:;
			{
				{ jule::Slice<jule::Ptr<_1a88de47d_Trait>> &__jule_push_dest = (*(_285224_s)).get()._field_Implements; __jule_push_dest.push(_285240_t); };
			}
		}
		_match_end_1aba284e8:;
	};
	{
		auto expr = &(_285240_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba29c9c:;
		if (it != expr_end) {
			jule::Ptr<_1a86b6651_TypeSymbol> _286517_i = *it;
			{
				_1a8965191_pushImplements(_285224_s, _1a86b3681_Trait(_286517_i.get()._field_Kind.ptr()));
			}
			_iter_next_1aba29c9c:;
			++it;
			goto _iter_begin_1aba29c9c;
		}
		_iter_end_1aba29c9c:;
	};
}



inline jule::Bool _1a89982a1_traitHasReferenceReceiver(jule::Ptr<_1a88de47d_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc415ce:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_1abc415ce;
				};
				jule::Ptr<_1a88ca920_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_1a88cb26c_IsRef(_3313_p.ptr()) && _1a88cb008_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1abc415ce:;
			++it;
			goto _iter_begin_1abc415ce;
		}
		_iter_end_1abc415ce:;
	};
	return false;;
}



inline jule::Bool _1a8998548_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1a865dbe2_Data>* _4132_d) {
	jule::Str _429_value = _1a551a0ce_FmtFloat(static_cast<jule::F64>(_1a55431a1_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1a55342a2_CheckBitFloat(_429_value, static_cast<jule::I64>(_1a5532d94_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _1a8998889_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1a865dbe2_Data>* _4630_d) {
	jule::F64 _479_min = _1a5539395_Min(_4618_kind);;
	jule::F64 _489_max = _1a553963c_Max(_4618_kind);;
	{
		
		if (_1a5544d0c_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1abc4c0ac:;
			{
				jule::F64 _5113_x = _1a5542964_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a54e0aaa_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_1a55445c0_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1abc4c981:;
			{
				jule::F64 _5813_x = _1a55431a1_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_1a554435b_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1abc4ca08:;
			{
				jule::F64 _6313_x = _1a55431a1_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1abc4c860:;
	};
	return false;;
}



inline jule::Bool _1a8998c1e_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1a865dbe2_Data>* _6932_d) {
	jule::F64 _709_max = _1a553963c_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && _6920_kind.equal("u8", 2))) {
		return _1a8980178_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1a5541eb3_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1a5544d0c_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1abc51c82:;
			{
				jule::F64 _7713_x = _1a5542964_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a54e0aaa_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_1a55445c0_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1abc523e2:;
			{
				jule::F64 _8713_x = _1a55431a1_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_1a554435b_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1abc52458:;
			{
				jule::F64 _9213_x = _1a55431a1_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1abc51d2b:;
	};
	return false;;
}



inline jule::Bool _1a8999060_intAssignable(jule::Str _9818_kind, jule::Ptr<_1a865dbe2_Data>* _9830_d) {
	{
		
		if (_1a553e565_IsSigInt(_9818_kind)) {
			_case_begin_1abc5625e:;
			{
				return _1a8998889_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_1a553e851_IsUnsigInt(_9818_kind)) {
			_case_begin_1abc562c5:;
			{
				return _1a8998c1e_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_1abc52a63:;
			{
				return false;;
			}
		}
		_match_end_1abc55e95:;
	};
}



inline void _1a89a4c3b_checkMutRiskOfStructLit(jule::Ptr<_1a89465e5_Sema>* _94233_s, jule::Ptr<_1a88bec44_StructLitExprModel>* _94244_m) {
	{
		auto expr = &((*(_94244_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc5731a:;
		if (it != expr_end) {
			jule::Ptr<_1a88be8c0_StructArgExprModel> *_94312_arg = it;
			{
				if ((*(_94312_arg)).get()._field_Field.get()._field_Decl.get()._field_Mutable) {
					goto _iter_next_1abc5731a;
				};
				if (((!((*(_94312_arg)).get()._field_Expr.get()._field_Mutable)) && _1a86b1041_Mutable((*(_94312_arg)).get()._field_Expr.get()._field_Kind.ptr()))) {
					_1a8948e77_pushErr((*(_94233_s)).ptr(), (*(_94312_arg)).get()._field_Token, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_94312_arg)).get()._field_Expr.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
			}
			_iter_next_1abc5731a:;
			++it;
			goto _iter_begin_1abc5731a;
		}
		_iter_end_1abc5731a:;
	};
}



inline jule::Ptr<_1a86ae79d_TypeKind> _1a89aa26e_lenKind(void) {
	return _1a8774841_primInt;;
}



inline jule::Bool _1a89aa59e_isGoodValueToInfer(jule::Ptr<_1a865dbe2_Data>* _140324_d) {
	return (!(_1a865e033_IsNil((*(_140324_d)).ptr())));;
}



inline jule::Ptr<_1a88645ce_Directive> _1a86a84bc_findDirective(jule::Slice<jule::Ptr<_1a88645ce_Directive>>* _426823_directives, jule::Str _426854_d) {
	{
		auto expr = _426823_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd5d19b:;
		if (it != expr_end) {
			jule::Ptr<_1a88645ce_Directive> _426917_dr = *it;
			{
				if ((_426917_dr.get()._field_Tag.get()._field_Kind == _426854_d)) {
					return _426917_dr;;
				};
			}
			_iter_next_1abd5d19b:;
			++it;
			goto _iter_begin_1abd5d19b;
		}
		_iter_end_1abd5d19b:;
	};
	return nullptr;;
}



inline jule::Any _1a86a8852_findBuiltinsImport(jule::Str _427723_ident, jule::Ptr<_1a893d323_ImportInfo> _427735_imp) {
	return _1a8777cc8_findPackageBuiltinDef(_427735_imp.get()._field_LinkPath, _427723_ident);;
}



inline void _1a86a8a61_fitBitsize(jule::Ptr<_1a865dbe2_Data>* _428420_d) {
	jule::Ptr<_1a86b7003_Prim> _428513_prim = _1a86b1eba_Prim((*(_428420_d)).get()._field_Kind.ptr());;
	jule::I64 _42869_z = _1a5532d94_BitsizeOf(_1a86b7333_Str(_428513_prim.ptr()));;
	if ((_42869_z == 64LLU)) {
		return;;
	};
	jule::I64 _429113_k = 0LL;;
	{
		
		if (_1a554435b_IsI64((*(_428420_d)).get()._field_Constant.ptr())) {
			_case_begin_1abd60b0a:;
			{
				_429113_k=static_cast<jule::I64>(_1a55347e1_BitsizeOfInt(static_cast<jule::I64>(_1a5541eb3_ReadI64((*(_428420_d)).get()._field_Constant.ptr()))));
				if ((_429113_k > _42869_z)) {
					(*(_428420_d)).get()._field_Constant.get()._field_Kind=_1a55331b3_IntFromBits(_429113_k);
					(*(_428420_d)).get()._field_Kind=_1a8776b2e_findBuiltinTypeAlias((*(_428420_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_1a55445c0_IsU64((*(_428420_d)).get()._field_Constant.ptr())) {
			_case_begin_1abd60b82:;
			{
				_429113_k=static_cast<jule::I64>(_1a5534a88_BitsizeOfUint(static_cast<jule::U64>(_1a5542227_ReadU64((*(_428420_d)).get()._field_Constant.ptr()))));
				if ((_429113_k > _42869_z)) {
					(*(_428420_d)).get()._field_Constant.get()._field_Kind=_1a553345a_UintFromBits(_429113_k);
					(*(_428420_d)).get()._field_Kind=_1a8776b2e_findBuiltinTypeAlias((*(_428420_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_1a5544d0c_IsF64((*(_428420_d)).get()._field_Constant.ptr())) {
			_case_begin_1abd60c09:;
			{
				_429113_k=static_cast<jule::I64>(_1a5534549_BitsizeOfFloat(static_cast<jule::F64>(_1a5542964_ReadF64((*(_428420_d)).get()._field_Constant.ptr()))));
				if ((_429113_k > _42869_z)) {
					(*(_428420_d)).get()._field_Constant.get()._field_Kind=_1a5533702_FloatFromBits(_429113_k);
					(*(_428420_d)).get()._field_Kind=_1a8776b2e_findBuiltinTypeAlias((*(_428420_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		_match_end_1abd60a3e:;
	};
}



inline void _1a86a8d5d_makeStructLitAlloc(jule::Ptr<_1a865dbe2_Data>* _431428_d, jule::Ptr<_1a88bec44_StructLitExprModel>* _431443_lit) {
	(*(_431428_d)).get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a86ba754_Sptr>(_1a86ba754_Sptr{._field_Elem=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>((*(_431443_lit)).get()._field_Strct, 0)})}), 21)});
	(*(_431428_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c0052_AllocStructLitExprModel>(_1a88c0052_AllocStructLitExprModel{._field_Lit=(*(_431443_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_1a8966901_Var> _1a86a919e_buildErrorVar(jule::Ptr<_1a891e38c_Scope>* _432523_s, jule::Ptr<_1a88a0186_FnCallExpr>* _432539_fc) {
	return jule::new_ptr<_1a8966901_Var>(_1a8966901_Var{._field_Scope=(*(_432523_s)), ._field_Token=(*(_432539_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=_1a8776b2e_findBuiltinTypeAlias(jule::Str("any", 3)).get()._field_Kind, ._field_Value=jule::new_ptr<_1a865ec15_Value>(_1a865ec15_Value{._field_Data=jule::new_ptr<_1a865dbe2_Data>()}), });;
}



inline jule::Any _1a86a94e0_findBuiltinsSema(jule::Str _434021_ident, jule::Ptr<_1a89465e5_Sema> _434037_s) {
	{
		auto expr = &(_434037_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd68173:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _434117_imp = *it;
			{
				if ((_434117_imp.get()._field_ImportAll || _1a89408ca_existIdent(_434117_imp.ptr(), _434021_ident))) {
					jule::Any _434321_def = _1a86a8852_findBuiltinsImport(_434021_ident, _434117_imp);;
					if ((_434321_def != nullptr)) {
						return _434321_def;;
					};
				};
			}
			_iter_next_1abd68173:;
			++it;
			goto _iter_begin_1abd68173;
		}
		_iter_end_1abd68173:;
	};
	jule::Str _435113_ppath = _1a526de87_Dir(_434037_s.get()._field_file.get()._field_File.ptr());;
	if (_1a4d5a238_HasPrefix(_435113_ppath, _1a4e90648_PathStdlib)) {
		(_435113_ppath).mut_slice(_1a4e90648_PathStdlib.len());;
		_435113_ppath=(jule::Str("std", 3) + _1a4d6122d_Replace(_435113_ppath, jule::Str("\\", 1), jule::Str("::", 2), -1LL));
		return _1a8777cc8_findPackageBuiltinDef(_435113_ppath, _434021_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1a86a9787_isOkForShifting(jule::Ptr<_1a865dbe2_Data>* _436525_d) {
	if (_1a865e50b_IsConst((*(_436525_d)).ptr())) {
		{
			
			if (_1a554435b_IsI64((*(_436525_d)).get()._field_Constant.ptr())) {
				_case_begin_1abd6b1dc:;
				{
					return (_1a5541eb3_ReadI64((*(_436525_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1a55445c0_IsU64((*(_436525_d)).get()._field_Constant.ptr())) {
				_case_begin_1abd6b264:;
				{
					return true;;
				}
			}
			else if (_1a5544d0c_IsF64((*(_436525_d)).get()._field_Constant.ptr())) {
				_case_begin_1abd6b2db:;
				{
					return (_1a5542964_ReadF64((*(_436525_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1abd6b176:;
				{
					return false;;
				}
			}
			_match_end_1abd6b0aa:;
		};
	};
	jule::Ptr<_1a86b7003_Prim> _43789_prim = _1a86b1eba_Prim((*(_436525_d)).get()._field_Kind.ptr());;
	return ((_43789_prim != nullptr) && _1a553eae8_IsInt(_1a86b7333_Str(_43789_prim.ptr())));;
}



inline jule::Bool _1a86a9b3e_isInstancedStruct(jule::Ptr<_1a88b9b51_StructIns> _438222_s) {
	return (_438222_s.get()._field_Decl.get()._field_Generics.len() == _438222_s.get()._field_Generics.len());;
}



inline jule::Bool _1a86a9ea2_isPtrArithmeticCompatible(jule::Ptr<_1a865dbe2_Data>* _438635_l, jule::Ptr<_1a865dbe2_Data>* _438650_r) {
	jule::Ptr<_1a86bdcb8_Ptr> _43879_ptr = _1a86b2493_Ptr((*(_438650_r)).get()._field_Kind.ptr());;
	if ((_43879_ptr != nullptr)) {
		return _1a86aee63_Equal(_1a86b2493_Ptr((*(_438635_l)).get()._field_Kind.ptr()).get()._field_Elem, _43879_ptr.get()._field_Elem);;
	};
	if (_1a865e50b_IsConst((*(_438650_r)).ptr())) {
		return _1a8999060_intAssignable(jule::Str("int", 3), _438650_r);;
	};
	_1a8999516_typeCompatibilityChecker _439413_tcc = _1a8999516_typeCompatibilityChecker{._field_dest=_1a8774841_primInt, ._field_src=(*(_438650_r)).get()._field_Kind, };;
	return _1a899aaab_check(&_439413_tcc);;
}



inline void _1a86aa1e4_applyCastKindModel(jule::Ptr<_1a865dbe2_Data>* _440128_d, jule::Ptr<_1a86ae79d_TypeKind>* _440143_t) {
	(*(_440128_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c05a2_CastingExprModel>(_1a88c05a2_CastingExprModel{._field_Expr=(*(_440128_d)).get()._field_Model, ._field_Kind=(*(_440143_t)), ._field_ExprKind=(*(_440128_d)).get()._field_Kind}), &__jule_any_type98);
}



inline void _1a86aa49c_applyCastKind(jule::Ptr<_1a865dbe2_Data>* _440923_d, jule::Ptr<_1a86ae79d_TypeKind>* _440938_t) {
	_1a86aa1e4_applyCastKindModel(_440923_d, _440938_t);
	(*(_440923_d)).get()._field_Kind=(*(_440938_t));
}



inline jule::Ptr<_1a865dbe2_Data> _1a86aa69a_buildVoidData(void) {
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a877360e_primVoid, });;
}



inline jule::Str _1a86aa964_checkDataForIntegerIndexing(jule::Ptr<_1a865dbe2_Data>* _442037_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_442037_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1a86b1eba_Prim((*(_442037_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1abd73249:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1a553eae8_IsInt(_1a86b7333_Str(_1a86b1eba_Prim((*(_442037_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1abd732b0:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1a865e50b_IsConst((*(_442037_d)).ptr())) {
			_case_begin_1abd73326:;
			{
				if ((_1a55431a1_AsF64((*(_442037_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1a86b1eba_Prim((*(_442037_d)).get()._field_Kind.ptr()) == nullptr) || _1a865e50b_IsConst((*(_442037_d)).ptr()) || (_1a5532aec_RealKindOf(_1a86b7333_Str(_1a86b1eba_Prim((*(_442037_d)).get()._field_Kind.ptr()).ptr())) != _1a5532aec_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1abd7339d:;
			{
				_1a86aa49c_applyCastKind(_442037_d, &(_1a8774841_primInt));
			}
		}
		_match_end_1abd72d5e:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1a86aac2d_applyCastModelByEnum(jule::Ptr<_1a865dbe2_Data>* _444530_d, jule::Ptr<_1a88e1c11_Enum> _444544_e) {
	if ((_444544_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1a86b7003_Prim> _44499_p = _1a86b1eba_Prim(_444544_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1a86ba204_IsStr(_44499_p.ptr())) {
		return;;
	};
	_1a86aa1e4_applyCastKindModel(_444530_d, &(_444544_e.get()._field_Kind.get()._field_Kind));
}



inline void _1a86aaed6_castConstByType(jule::Str* _445621_t, jule::Ptr<_1a865dbe2_Data>* _445634_d) {
	{
		
		if (_1a553e565_IsSigInt((*(_445621_t)))) {
			_case_begin_1abd778d0:;
			{
				{
					auto _match_expr{ _1a5532d94_BitsizeOf(_1a5532aec_RealKindOf((*(_445621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1abd78529:;
						{
							_1a5543426_SetI64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1a5542bc8_AsI64((*(_445634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1abd785a1:;
						{
							_1a5543426_SetI64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1a5542bc8_AsI64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1abd78617:;
						{
							_1a5543426_SetI64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1a5542bc8_AsI64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1abd7867d:;
						{
							_1a5543426_SetI64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1a5542bc8_AsI64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1abd77b66:;
				};
			}
		}
		else if (_1a553e851_IsUnsigInt((*(_445621_t)))) {
			_case_begin_1abd77957:;
			{
				{
					auto _match_expr{ _1a5532d94_BitsizeOf(_1a5532aec_RealKindOf((*(_445621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1abd7b384:;
						{
							_1a554369b_SetU64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1a5542e3c_AsU64((*(_445634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1abd7b41c:;
						{
							_1a554369b_SetU64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1a5542e3c_AsU64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1abd7b483:;
						{
							_1a554369b_SetU64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1a5542e3c_AsU64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1abd7b4e9:;
						{
							_1a554369b_SetU64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1a5542e3c_AsU64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1abd77d53:;
				};
			}
		}
		else if (_1a553ee17_IsFloat((*(_445621_t)))) {
			_case_begin_1abd779ce:;
			{
				{
					auto _match_expr{ _1a5532d94_BitsizeOf(_1a5532aec_RealKindOf((*(_445621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1abd7e1bc:;
						{
							_1a5543e1b_SetF64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1a55431a1_AsF64((*(_445634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1abd7e277:;
						{
							_1a5543e1b_SetF64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1a55431a1_AsF64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1abd77e74:;
				};
			}
		}
		_match_end_1abd777ae:;
	};
}



inline void _1a86ab4e2_updateModelToGenericIns(jule::Any* _449033_m, jule::Ptr<_1a88cee0d_FnIns>* _449052_f) {
	{
		auto &_match_expr{ (*(_449033_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1abd7e464:;
			{
				(*(_449033_m))=jule::Any((*(_449052_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1abd7e4ca:;
			{
				(*(_449033_m)).cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_449052_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1abd7e541:;
			{
				(*(_449033_m)).cast_ptr<_1a88c3b6b_StructStaticIdentExprModel>(&__jule_any_type101).get()._field_Method=(*(_449052_f));
			}
		}
		_match_end_1abd7d6c7:;
	};
}



inline jule::Bool _1a86ab734_pushSubIdentFromExpr(jule::Any _450129_expr, jule::Ptr<_1a8897997_SubIdentTypeDecl>* _450150_t) {
	{
		auto &_match_expr{ _450129_expr };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1abd81499:;
			{
				jule::Ptr<_1a889cd65_IdentExpr> _450417_e = _450129_expr.cast_ptr<_1a889cd65_IdentExpr>(&__jule_any_type85);;
				{ jule::Slice<jule::Ptr<_1a88976ab_IdentTypeDecl>> &__jule_push_dest = (*(_450150_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a88976ab_IdentTypeDecl>(_1a88976ab_IdentTypeDecl{._field_Token=_450417_e.get()._field_Token, ._field_Ident=_450417_e.get()._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1abd82467:;
			{
				jule::Ptr<_1a889e608_SubIdentExpr> _451017_e = _450129_expr.cast_ptr<_1a889e608_SubIdentExpr>(&__jule_any_type91);;
				if ((!(_1a86ab734_pushSubIdentFromExpr(_451017_e.get()._field_Expr.get()._field_Kind, _450150_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1a88976ab_IdentTypeDecl>> &__jule_push_dest = (*(_450150_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_1a88976ab_IdentTypeDecl>(_1a88976ab_IdentTypeDecl{._field_Token=_451017_e.get()._field_Ident, ._field_Ident=_451017_e.get()._field_Ident.get()._field_Kind, })); };
			}
		}
		else {
			_case_begin_1abd81e39:;
			{
				return false;;
			}
		}
		_match_end_1abd81dd4:;
	};
	return true;;
}



inline jule::Str _1a86ab9cb_constoa(jule::Ptr<_1a55406ba_Const>* _452413_c) {
	{
		
		if (_1a554435b_IsI64((*(_452413_c)).ptr())) {
			_case_begin_1abd85503:;
			{
				return _1a5530985_FmtInt(static_cast<jule::I64>(_1a5541eb3_ReadI64((*(_452413_c)).ptr())), 10LL);;
			}
		}
		else if (_1a55445c0_IsU64((*(_452413_c)).ptr())) {
			_case_begin_1abd84898:;
			{
				return _1a5530600_FmtUint(static_cast<jule::U64>(_1a5542227_ReadU64((*(_452413_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1abd841b1:;
			{
				return jule::Str();;
			}
		}
		_match_end_1abd83c0a:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a86abd1c_evalEnumStatic(jule::Ptr<_1a88e1c11_Enum>* _453524_enm, jule::Ptr<_1a88e121b_EnumItem>* _453541_item) {
	jule::Ptr<_1a865dbe2_Data> _453613_d = jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>((*(_453524_enm)), 3)}), });;
	if (((*(_453541_item)) != nullptr)) {
		_453613_d.get()._field_Constant=jule::new_ptr<_1a55406ba_Const>((*((*(_453541_item)).get()._field_Value.get()._field_Data.get()._field_Constant)));
		_453613_d.get()._field_Model=jule::Any(_453613_d.get()._field_Constant, &__jule_any_type19);
		_1a86aac2d_applyCastModelByEnum(&(_453613_d), (*(_453524_enm)));
	};
	return _453613_d;;
}



inline jule::Ptr<_1a88bec44_StructLitExprModel> _1a86ac0b4_isLitBased(jule::Any* _455220_m) {
	{
		auto &_match_expr{ (*(_455220_m)) };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1abd88748:;
			{
				return (*(_455220_m)).cast_ptr<_1a88bec44_StructLitExprModel>(&__jule_any_type100);;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1abd887ae:;
			{
				return (*(_455220_m)).cast_ptr<_1a88c0052_AllocStructLitExprModel>(&__jule_any_type115).get()._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1abd8857d:;
			{
				jule::Ptr<_1a88c37c5_StructSubIdentExprModel> _455917_ssi = (*(_455220_m)).cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1a86ac0b4_isLitBased(&(_455917_ssi.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1abd885e4:;
			{
				jule::Ptr<_1a88c05a2_CastingExprModel> _456217_c = (*(_455220_m)).cast_ptr<_1a88c05a2_CastingExprModel>(&__jule_any_type98);;
				return _1a86ac0b4_isLitBased(&(_456217_c.get()._field_Expr));;
			}
		}
		else {
			_case_begin_1abd8813d:;
			{
				return nullptr;;
			}
		}
		_match_end_1abd880d8:;
	};
}



inline jule::Bool _1a86c8b5d_kindUsesGenerics(jule::Ptr<_1a86ae79d_TypeKind>* _173326_k, jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>>* _173341_generics) {
	{
		auto expr = _173341_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1b1ca2:;
		if (it != expr_end) {
			jule::Ptr<_1a88a408b_GenericDecl> *_173412_g = it;
			{
				if (static__1a86c8762_exist(&((*(_173412_g)).get()._field_Ident), _173326_k)) {
					return true;;
				};
			}
			_iter_next_1ac1b1ca2:;
			++it;
			goto _iter_begin_1ac1b1ca2;
		}
		_iter_end_1ac1b1ca2:;
	};
	return false;;
}



inline jule::Bool _1a86c8ee3_hasDirective(jule::Slice<jule::Ptr<_1a88645ce_Directive>>* _174322_directives, jule::Str _174353_tag) {
	{
		auto expr = _174322_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1b22be:;
		if (it != expr_end) {
			jule::Ptr<_1a88645ce_Directive> _174417_dr = *it;
			{
				if ((_174417_dr.get()._field_Tag.get()._field_Kind == _174353_tag)) {
					return true;;
				};
			}
			_iter_next_1ac1b22be:;
			++it;
			goto _iter_begin_1ac1b22be;
		}
		_iter_end_1ac1b22be:;
	};
	return false;;
}



inline jule::Bool _1a86c928a_canGetPtr(jule::Ptr<_1a865dbe2_Data>* _175219_d) {
	if (((!((*(_175219_d)).get()._field_Lvalue)) || _1a865e50b_IsConst((*(_175219_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_1a86b31a8_Fn((*(_175219_d)).get()._field_Kind.ptr()) != nullptr) || (_1a86b2707_Enum((*(_175219_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1ac1b4106:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ac1b4090:;
			{
				return true;;
			}
		}
		_match_end_1ac1b305b:;
	};
}



inline jule::Bool _1a86c95a9_isValidForSptrType(jule::Ptr<_1a86ae79d_TypeKind>* _176528_t) {
	jule::Ptr<_1a88b9b51_StructIns> _176613_s = _1a86b341c_Struct((*(_176528_t)).ptr());;
	if ((((_176613_s != nullptr) && (_176613_s.get()._field_Decl != nullptr)) && _176613_s.get()._field_Decl.get()._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1a86c9851_isValidForRef(jule::Ptr<_1a86ae79d_TypeKind>* _177423_t) {
	return (_1a86b31a8_Fn((*(_177423_t)).ptr()) == nullptr);;
}



inline jule::Bool _1a86c9b1a_isBuiltinStrConvertable(jule::Ptr<_1a86ae79d_TypeKind>* _177733_t) {
	return ((((!(_1a86b0a68_Void((*(_177733_t)).ptr()))) && (_1a86b31a8_Fn((*(_177733_t)).ptr()) == nullptr)) && (_1a86b3b59_Tup((*(_177733_t)).ptr()) == nullptr)) && (!(_1a86b3dbd_comptime((*(_177733_t)).ptr()))));;
}



inline jule::Str _1a86c9d90_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _178127_tokens) {
	jule::Str _178213_s = (*(_178127_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_178127_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ac1b81a4:;
		if (it != expr_end) {
			jule::Ptr<_1a52684c0_Token> *_178312_token = it;
			{
				(_178213_s).append("::", 2);
				_178213_s+=(*(_178312_token)).get()._field_Kind;
			}
			_iter_next_1ac1b81a4:;
			++it;
			goto _iter_begin_1ac1b81a4;
		}
		_iter_end_1ac1b81a4:;
	};
	return _178213_s;;
}



inline jule::Ptr<_1a86b7003_Prim> _1a86ca247_buildPrimType(jule::Str _179018_kind) {
	return jule::new_ptr<_1a86b7003_Prim>(_1a86b7003_Prim{._field_Kind=_179018_kind});;
}



inline jule::Ptr<_1a88b6d3a_Struct> _1a86ca4de_getStructFromKind(jule::Ptr<_1a86ae79d_TypeKind> _179626_k) {
	{
		
		if ((_179626_k == nullptr)) {
			_case_begin_1ac1b92d7:;
			{
				return nullptr;;
			}
		}
		else if ((_1a86b341c_Struct(_179626_k.ptr()) != nullptr)) {
			_case_begin_1ac1b934d:;
			{
				return _1a86b341c_Struct(_179626_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1a86b222e_Sptr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1ac1b93b4:;
			{
				return _1a86ca4de_getStructFromKind(_1a86b222e_Sptr(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1a86b2e44_Slc(_179626_k.ptr()) != nullptr)) {
			_case_begin_1ac1b942a:;
			{
				return _1a86ca4de_getStructFromKind(_1a86b2e44_Slc(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1a86b2bd0_Arr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1ac1b96a0:;
			{
				return _1a86ca4de_getStructFromKind(_1a86b2bd0_Arr(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1a86b2493_Ptr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1ac1b9716:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1ac1b88be:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac1b8803:;
	};
}



inline void _1a86ca797_applyImplicitCast(jule::Ptr<_1a86ae79d_TypeKind>* _181827_dest, jule::Ptr<_1a865dbe2_Data>* _181849_d) {
	if (_1a86b0804_IsNil((*(_181849_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a86b7003_Prim> _18229_destPrim = _1a86b1eba_Prim((*(_181827_dest)).ptr());;
	jule::Ptr<_1a86b7003_Prim> _18239_prim = _1a86b1eba_Prim((*(_181849_d)).get()._field_Kind.ptr());;
	if ((_18229_destPrim != nullptr)) {
		if (_1a86ba468_IsAny(_18229_destPrim.ptr())) {
			if (((_18239_prim == nullptr) || (!(_1a86ba468_IsAny(_18239_prim.ptr()))))) {
				_1a86aa49c_applyCastKind(_181849_d, _181827_dest);
			};
			return;;
		};
		if (((((((!(_1a86b0590_Binded((*(_181849_d)).get()._field_Kind.ptr()))) && (!((*(_181849_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_181849_d)).get()._field_Lvalue))) && (!(_1a865e50b_IsConst((*(_181849_d)).ptr())))) && (_18239_prim != nullptr)) && _1a55401ae_IsNum(_18239_prim.get()._field_Kind))) {
			_1a86aa49c_applyCastKind(_181849_d, _181827_dest);
		};
		return;;
	};
	jule::Ptr<_1a88de47d_Trait> _18429_dt = _1a86b3681_Trait((*(_181827_dest)).ptr());;
	if ((_18429_dt != nullptr)) {
		jule::Ptr<_1a88de47d_Trait> _184413_bt = _1a86b3681_Trait((*(_181849_d)).get()._field_Kind.ptr());;
		if (((_184413_bt == nullptr) || (_184413_bt != _18429_dt))) {
			_1a86aa1e4_applyCastKindModel(_181849_d, _181827_dest);
			return;;
		};
	};
	if (((_1a86b296b_TypeEnum((*(_181827_dest)).ptr()) != nullptr) && (_1a86b296b_TypeEnum((*(_181849_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1a86aa1e4_applyCastKindModel(_181849_d, _181827_dest);
		return;;
	};
}



inline jule::Bool _1a86caa3e_validTypeForXof(jule::Ptr<_1a86ae79d_TypeKind>* _185725_t) {
	return ((!(_1a86b0a68_Void((*(_185725_t)).ptr()))) && (_1a86b31a8_Fn((*(_185725_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1a89ab380_SymbolTable__jule_tuple_s_1a4deb40b_Log _1a86cd7de_buildSymbols(jule::Ptr<_1a8863347_Ast>* _1622_ast, jule::Trait<_1a893a672_Importer>* _1638_importer, jule::Ptr<_1a88d88d9_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1a89ab380_SymbolTable__jule_tuple_s_1a4deb40b_Log __jule_func_result;
	jule::Ptr<_1a88d88d9_symbolBuilder> _1713_sb = jule::new_ptr<_1a88d88d9_symbolBuilder>(_1a88d88d9_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1a88dd845_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a8940e5d_Package__jule_tuple_s_1a4deb40b_Log _1a86cdc1d_analyzePackage(jule::Slice<jule::Ptr<_1a8863347_Ast>>* _3024_files, jule::Trait<_1a893a672_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1a8940e5d_Package__jule_tuple_s_1a4deb40b_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2bbcd0:;
		if (it != expr_end) {
			jule::Ptr<_1a8863347_Ast> _3317_f = *it;
			{
				jule::Ptr<_1a89ab380_SymbolTable> _3418_table;;
				jule::Slice<_1a4deb40b_Log> _3429_errors;;
				({
					__jule_tuple_x_1a89ab380_SymbolTable__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a86cd7de_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1a89ab380_SymbolTable>> &__jule_push_dest = _3213_tables; __jule_push_dest.push(_3418_table); };
			}
			_iter_next_1ac2bbcd0:;
			++it;
			goto _iter_begin_1ac2bbcd0;
		}
		_iter_end_1ac2bbcd0:;
	};
	jule::Ptr<_1a89465e5_Sema> _4113_sema = jule::new_ptr<_1a89465e5_Sema>(_1a89465e5_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1a8945acd_commonSemaMeta>()});;
	_1a896329e_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8940e5d_Package> _5013_pkg = jule::new_ptr<_1a8940e5d_Package>(_1a8940e5d_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _5013_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a8940e5d_Package__jule_tuple_s_1a4deb40b_Log _1a86ce108_AnalyzePackage(jule::Slice<jule::Ptr<_1a8863347_Ast>> _7423_files, jule::Trait<_1a893a672_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1a8940e5d_Package__jule_tuple_s_1a4deb40b_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a8940e5d_Package> _7814_package;;
	jule::Slice<_1a4deb40b_Log> _7827_logs;;
	({
		__jule_tuple_x_1a8940e5d_Package__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a86cdc1d_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_7814_package = __jule_assign_result.__jule_result_arg0;
		_7827_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7814_package;
	__jule_func_result.__jule_result_arg1 = _7827_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1a88cee0d_FnIns> _1a87730d1_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ac2cabac:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _2620_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a87791e7_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ac2c2764:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _2920_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a87795d2_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1ac2cac78:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _3220_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a8779bed_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1ac2cacde:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _3520_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a877a0d8_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1ac2ca7b1:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _3820_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a877a4c3_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1ac2ca838:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _4120_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a877a8ad_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1ac2ca8b0:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _4420_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a877b6b1_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ac2ca937:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _4720_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a877cc01_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ac2cad66:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _5020_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a877d76d_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1ac2caddd:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _5320_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a877e21e_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1ac2cae65:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _5620_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a877e609_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1ac2caedc:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _5920_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a877e9e4_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1ac2ca6b2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2ca580:;
	};
}



inline jule::Ptr<_1a86ada55_TypeAlias> _1a8773312_primTypeAlias(jule::Ptr<_1a86ae79d_TypeKind>* _6623_k) {
	return jule::new_ptr<_1a86ada55_TypeAlias>(_1a86ada55_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1a86b6651_TypeSymbol>(_1a86b6651_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1a86ada55_TypeAlias> _1a8776b2e_findBuiltinTypeAlias(jule::Str _9325_ident) {
	{
		auto &_match_expr{ _9325_ident };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ac2d2972:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _9620_t = _1a8773312_primTypeAlias(&(_1a877391c_primAny));;
				return _9620_t;;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1ac2d4116:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _9920_t = _1a8773312_primTypeAlias(&(_1a8773bd6_primStr));;
				return _9920_t;;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1ac2d417c:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _10220_t = _1a8773312_primTypeAlias(&(_1a8773ee4_primBool));;
				return _10220_t;;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ac2d3b3d:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _10520_t = _1a8773312_primTypeAlias(&(_1a87742ad_primUintptr));;
				return _10520_t;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ac2d3ba4:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _10820_t = _1a8773312_primTypeAlias(&(_1a8774577_primUint));;
				return _10820_t;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ac2d3c2b:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _11120_t = _1a8773312_primTypeAlias(&(_1a8774841_primInt));;
				return _11120_t;;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ac2d3ca3:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _11420_t = _1a8773312_primTypeAlias(&(_1a8774c1a_primI8));;
				return _11420_t;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ac2d41e3:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _11720_t = _1a8773312_primTypeAlias(&(_1a8774ed4_primI16));;
				return _11720_t;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ac2d4259:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _12020_t = _1a8773312_primTypeAlias(&(_1a8775567_primI64));;
				return _12020_t;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ac2d42c0:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _12320_t = _1a8773312_primTypeAlias(&(_1a8775aea_primU16));;
				return _12320_t;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ac2d4347:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _12620_t = _1a8773312_primTypeAlias(&(_1a8775db4_primU32));;
				return _12620_t;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ac2d43be:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _12920_t = _1a8773312_primTypeAlias(&(_1a877617d_primU64));;
				return _12920_t;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac2d4446:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _13220_t = _1a8773312_primTypeAlias(&(_1a8776601_primF32));;
				return _13220_t;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac2d44bd:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _13520_t = _1a8773312_primTypeAlias(&(_1a87768ba_primF64));;
				return _13520_t;;
			}
		}
		else if (_match_expr == jule::Str("byte", 4) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1ac2d4545:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _13820_t = _1a8773312_primTypeAlias(&(_1a8775831_primU8));;
				return _13820_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4) || _match_expr == jule::Str("i32", 3)) {
			_case_begin_1ac2d45bc:;
			{
				static jule::Ptr<_1a86ada55_TypeAlias> _14120_t = _1a8773312_primTypeAlias(&(_1a877529d_primI32));;
				return _14120_t;;
			}
		}
		else {
			_case_begin_1ac2d3a50:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2cb2d9:;
	};
}



inline jule::Any _1a8776d3d_findBuiltinDef(jule::Str _14819_ident) {
	jule::Ptr<_1a88cee0d_FnIns> _14913_f = _1a87730d1_findBuiltinFn(_14819_ident);;
	if ((_14913_f != nullptr)) {
		return jule::Any(_14913_f, &__jule_any_type7);;
	};
	jule::Ptr<_1a86ada55_TypeAlias> _15313_ta = _1a8776b2e_findBuiltinTypeAlias(_14819_ident);;
	if ((_15313_ta != nullptr)) {
		return jule::Any(_15313_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _1a87770d5_findBuiltinDefStdDebug(jule::Str _16027_ident) {
	{
		auto &_match_expr{ _16027_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1ac2dd928:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _16320_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a8783234_builtinCallerStdDebugOut), });;
				return jule::Any(_16320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1ac2dd98e:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _16620_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a878361e_builtinCallerStdDebugOutln), });;
				return jule::Any(_16620_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ac2dd098:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2dceaa:;
	};
}



inline jule::Any _1a877737c_findBuiltinDefStdMem(jule::Str _17325_ident) {
	{
		auto &_match_expr{ _17325_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1ac2e0320:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _17620_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a8781b5b_builtinCallerStdMemSizeOf), });;
				return jule::Any(_17620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1ac2e0386:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _17920_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a8782079_builtinCallerStdMemAlignOf), });;
				return jule::Any(_17920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1ac2e0144:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _18220_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a8782497_builtinCallerStdMemFree), });;
				return jule::Any(_18220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ac2dee24:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2dda5a:;
	};
}



inline jule::Any _1a8777646_findBuiltinDefStdComptime(jule::Str _18930_ident) {
	{
		auto &_match_expr{ _18930_ident };
		
		if (_match_expr == jule::Str("TypeOf", 6)) {
			_case_begin_1ac2e2685:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _19220_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a877ee01_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_19220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("ValueOf", 7)) {
			_case_begin_1ac2e24a9:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _19520_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a878031e_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_19520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Range", 5)) {
			_case_begin_1ac2e2520:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _19820_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a87809d4_builtinCallerStdComptimeRange), });;
				return jule::Any(_19820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Line", 4)) {
			_case_begin_1ac2e2586:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _20120_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a8780e02_builtinCallerStdComptimeLine), });;
				return jule::Any(_20120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("File", 4)) {
			_case_begin_1ac2dd43e:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _20420_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a8781320_builtinCallerStdComptimeFile), });;
				return jule::Any(_20420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Files", 5)) {
			_case_begin_1ac2dd4a5:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _20720_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a878173d_builtinCallerStdComptimeFiles), });;
				return jule::Any(_20720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ac2e2289:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2e0452:;
	};
}



inline jule::Any _1a87779ed_findBuiltinDefStdJuleIntegrated(jule::Str _21436_ident) {
	{
		auto &_match_expr{ _21436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1ac2e6854:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _21720_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a87828c6_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_21720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1ac2e68ba:;
			{
				static jule::Ptr<_1a88cee0d_FnIns> _22020_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_Decl=jule::new_ptr<_1a88cc25c_Fn>(_1a88cc25c_Fn{._field_Generics=jule::Slice<jule::Ptr<_1a88a408b_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a8782ce4_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_22020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1ac2e62b0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2e6469:;
	};
}



inline jule::Any _1a8777cc8_findPackageBuiltinDef(jule::Str _23226_link_path, jule::Str _23242_ident) {
	{
		auto &_match_expr{ _23226_link_path };
		
		if (_match_expr == jule::Str("std::comptime", 13)) {
			_case_begin_1ac2e89bb:;
			{
				return _1a8777646_findBuiltinDefStdComptime(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1ac2e8a32:;
			{
				return _1a87770d5_findBuiltinDefStdDebug(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1ac2e87e0:;
			{
				return _1a877737c_findBuiltinDefStdMem(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1ac2e8856:;
			{
				return _1a87779ed_findBuiltinDefStdJuleIntegrated(_23242_ident);;
			}
		}
		else {
			_case_begin_1ac2e2762:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac2e6931:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a87781d5_builtinCallerCommonPlain(jule::Ptr<_1a8683860_Eval>* _24734_e, jule::Ptr<_1a88a0186_FnCallExpr>* _24749_fc, jule::Ptr<_1a865dbe2_Data>* _24771_d) {
	jule::Ptr<_1a88cee0d_FnIns> _24813_f = _1a86b31a8_Fn((*(_24771_d)).get()._field_Kind.ptr());;
	_1a89a251e_fnCallArgChecker _25013_fcac = _1a89a251e_fnCallArgChecker{._field_e=(*(_24734_e)), ._field_args=(*(_24749_fc)).get()._field_Args, ._field_errorToken=(*(_24749_fc)).get()._field_Token, ._field_f=_24813_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1a89a48a6_check(&_25013_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1a88c0e54_FnCallExprModel> _26113_model = jule::new_ptr<_1a88c0e54_FnCallExprModel>(_1a88c0e54_FnCallExprModel{._field_Token=(*(_24749_fc)).get()._field_Token, ._field_Func=_24813_f, ._field_Expr=(*(_24771_d)).get()._field_Model, ._field_Args=_25013_fcac._field_argModels, });;
	if ((_24813_f.get()._field_Result == nullptr)) {
		(*(_24771_d))=_1a86aa69a_buildVoidData();
	} else {
		(*(_24771_d))=jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_24813_f.get()._field_Result, });
	};
	(*(_24771_d)).get()._field_Model=jule::Any(_26113_model, &__jule_any_type35);
	return (*(_24771_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a87785d1_builtinCallerCommon(jule::Ptr<_1a8683860_Eval>* _28029_e, jule::Ptr<_1a88a0186_FnCallExpr>* _28044_fc, jule::Ptr<_1a865dbe2_Data>* _28066_d) {
	return _1a87781d5_builtinCallerCommonPlain(_28029_e, _28044_fc, _28066_d);;
}



inline jule::Ptr<_1a865dbe2_Data> _1a87789bb_builtinCallerCommonMut(jule::Ptr<_1a8683860_Eval>* _28432_e, jule::Ptr<_1a88a0186_FnCallExpr>* _28447_fc, jule::Ptr<_1a865dbe2_Data>* _28469_d) {
	if ((!((*(_28469_d)).get()._field_Mutable))) {
		_1a8683d6b_pushErr((*(_28432_e)).ptr(), (*(_28447_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _1a87785d1_builtinCallerCommon(_28432_e, _28447_fc, _28469_d);;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8778d0c_builtinCallerError(jule::Ptr<_1a8683860_Eval>* _29128_e, jule::Ptr<_1a88a0186_FnCallExpr>* _29143_fc) {
	if (((*(_29143_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_29143_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _29913_expr = _1a86a032c_evalExpr((*(_29128_e)), (*(_29143_fc)).get()._field_Args[0LL]);;
	if ((_29913_expr == nullptr)) {
		return nullptr;;
	};
	if (_1a865e033_IsNil(_29913_expr.ptr())) {
		_1a8683d6b_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a865dbe2_Data> _30813_d = _1a86aa69a_buildVoidData();;
	_30813_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88c83bd_BuiltinErrorCallExprModel>(_1a88c83bd_BuiltinErrorCallExprModel{._field_Err=_29913_expr}), &__jule_any_type23);
	return _30813_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a87791e7_builtinCallerOut(jule::Ptr<_1a8683860_Eval>* _31326_e, jule::Ptr<_1a88a0186_FnCallExpr>* _31341_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	if (((*(_31341_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_31341_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _32213_expr = _1a86a032c_evalExpr((*(_31326_e)), (*(_31341_fc)).get()._field_Args[0LL]);;
	if ((_32213_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a86c9b1a_isBuiltinStrConvertable(&(_32213_expr.get()._field_Kind))))) {
		_1a8683d6b_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a865dbe2_Data> _33213_d = _1a86aa69a_buildVoidData();;
	_33213_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88c5057_BuiltinOutCallExprModel>(_1a88c5057_BuiltinOutCallExprModel{._field_Expr=_32213_expr.get()._field_Model, }), &__jule_any_type28);
	return _33213_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a87795d2_builtinCallerOutln(jule::Ptr<_1a8683860_Eval>* _33728_e, jule::Ptr<_1a88a0186_FnCallExpr>* _33743_fc, jule::Ptr<_1a865dbe2_Data>* _33765_d) {
	(*(_33765_d))=_1a87791e7_builtinCallerOut(_33728_e, _33743_fc, _33765_d);
	if (((*(_33765_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_33765_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c5442_BuiltinOutlnCallExprModel>(_1a88c5442_BuiltinOutlnCallExprModel{._field_Expr=(*(_33765_d)).get()._field_Model.cast_ptr<_1a88c5057_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Expr, }), &__jule_any_type29);
	return (*(_33765_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8779bed_builtinCallerNew(jule::Ptr<_1a8683860_Eval>* _34926_e, jule::Ptr<_1a88a0186_FnCallExpr>* _34941_fc, jule::Ptr<_1a865dbe2_Data>* _34963_d) {
	if (((*(_34941_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_34941_fc)).get()._field_Args.len() > 2LL)) {
		_1a8683d6b_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _35813_t = _1a869e5e5_evalExprKind((*(_34926_e)), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_35813_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_35813_t.get()._field_Decl))) {
		_1a8683d6b_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1a86c95a9_isValidForSptrType(&(_35813_t.get()._field_Kind))))) {
		jule::Ptr<_1a88b9b51_StructIns> _36917_s = _1a86b341c_Struct(_35813_t.get()._field_Kind.ptr());;
		if ((((_36917_s != nullptr) && (_36917_s.get()._field_Decl != nullptr)) && _36917_s.get()._field_Decl.get()._field_Binded)) {
			_1a8683d6b_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_34963_d)).get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a86ba754_Sptr>(_1a86ba754_Sptr{._field_Elem=_35813_t.get()._field_Kind}), 21)});
	if (((*(_34941_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1a86ae79d_TypeKind> _38317_old = (*(_34926_e)).get()._field_prefix;;
		(*(_34926_e)).get()._field_prefix=_35813_t.get()._field_Kind;
		jule::Ptr<_1a865dbe2_Data> _38617_init = _1a86a032c_evalExpr((*(_34926_e)), (*(_34941_fc)).get()._field_Args[1LL]);;
		(*(_34926_e)).get()._field_prefix=_38317_old;
		if ((_38617_init != nullptr)) {
			jule::Ptr<_1a52684c0_Token> _39121_token = (*(_34941_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_1a895412a_checkValidityForInitExpr((*(_34926_e)).get()._field_s, (!((*(_34926_e)).get()._field_immutable)), false, &(_35813_t.get()._field_Kind), &(_38617_init), &(_39121_token));
			_1a8951215_checkAssignType((*(_34926_e)).get()._field_s, false, &(_35813_t.get()._field_Kind), &(_38617_init), _39121_token);
			(*(_34963_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c5b4b_BuiltinNewCallExprModel>(_1a88c5b4b_BuiltinNewCallExprModel{._field_Kind=_35813_t.get()._field_Kind, ._field_Init=_38617_init.get()._field_Model}), &__jule_any_type116);
		};
	} else {
		(*(_34963_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c5b4b_BuiltinNewCallExprModel>(_1a88c5b4b_BuiltinNewCallExprModel{._field_Kind=_35813_t.get()._field_Kind, }), &__jule_any_type116);
	};
	return (*(_34963_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877a0d8_builtinCallerPanic(jule::Ptr<_1a8683860_Eval>* _41128_e, jule::Ptr<_1a88a0186_FnCallExpr>* _41143_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	if (((*(_41143_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_41143_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _42013_expr = _1a86a032c_evalExpr((*(_41128_e)), (*(_41143_fc)).get()._field_Args[0LL]);;
	if ((_42013_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a86b1eba_Prim(_42013_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1a86ba204_IsStr(_1a86b1eba_Prim(_42013_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1a8683d6b_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a865dbe2_Data> _42913_d = _1a86aa69a_buildVoidData();;
	_42913_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88c6036_BuiltinPanicCallExprModel>(_1a88c6036_BuiltinPanicCallExprModel{._field_Token=(*(_41143_fc)).get()._field_Token, ._field_Expr=_42013_expr.get()._field_Model}), &__jule_any_type30);
	return _42913_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877a4c3_builtinCallerMake(jule::Ptr<_1a8683860_Eval>* _43727_e, jule::Ptr<_1a88a0186_FnCallExpr>* _43742_fc, jule::Ptr<_1a865dbe2_Data>* _43764_d) {
	if (((*(_43742_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_43742_fc)).get()._field_Args.len() == 1LL)) {
			_1a8683d6b_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_1a8683d6b_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a865dbe2_Data> _44713_t = _1a869e5e5_evalExprKind((*(_43727_e)), (*(_43742_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_44713_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_44713_t.get()._field_Decl))) {
		_1a8683d6b_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_43742_fc)).get()._field_Args.len() > 3LL)) {
		_1a8683d6b_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_43764_d)).get()._field_Kind=_44713_t.get()._field_Kind;
	jule::Ptr<_1a865dbe2_Data> _46313_lenExpr = _1a86a032c_evalExpr(_1a895090c_evalp((*(_43727_e)).get()._field_s, (*(_43727_e)).get()._field_lookup, _44713_t.get()._field_Kind), (*(_43742_fc)).get()._field_Args[1LL]);;
	if ((_46313_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1a868c45c_checkIntegerIndexingByData((*(_43727_e)).ptr(), &(_46313_lenExpr), (*(_43742_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1a88c6993_BuiltinMakeCallExprModel> _47013_model = jule::new_ptr<_1a88c6993_BuiltinMakeCallExprModel>(_1a88c6993_BuiltinMakeCallExprModel{._field_Kind=_44713_t.get()._field_Kind, ._field_Len=_46313_lenExpr.get()._field_Model, });;
	(*(_43764_d)).get()._field_Model=jule::Any(_47013_model, &__jule_any_type117);
	if (((*(_43742_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1a865dbe2_Data> _47617_capExpr = _1a86a032c_evalExpr(_1a895090c_evalp((*(_43727_e)).get()._field_s, (*(_43727_e)).get()._field_lookup, _44713_t.get()._field_Kind), (*(_43742_fc)).get()._field_Args[2LL]);;
		if ((_47617_capExpr == nullptr)) {
			return (*(_43764_d));;
		};
		_1a868c45c_checkIntegerIndexingByData((*(_43727_e)).ptr(), &(_47617_capExpr), (*(_43742_fc)).get()._field_Args[2LL].get()._field_Token);
		_47013_model.get()._field_Cap=_47617_capExpr.get()._field_Model;
	};
	return (*(_43764_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877a8ad_builtinCallerAppend(jule::Ptr<_1a8683860_Eval>* _48629_e, jule::Ptr<_1a88a0186_FnCallExpr>* _48644_fc, jule::Ptr<_1a865dbe2_Data>* _48666_d) {
	if (((*(_48644_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_48644_fc)).get()._field_Args.len() == 1LL)) {
			_1a8683d6b_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1a8683d6b_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a865dbe2_Data> _49613_t = _1a86a032c_evalExpr((*(_48629_e)), (*(_48644_fc)).get()._field_Args[0LL]);;
	if ((_49613_t == nullptr)) {
		return nullptr;;
	};
	if ((_1a86b2e44_Slc(_49613_t.get()._field_Kind.ptr()) == nullptr)) {
		_1a8683d6b_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _50613_f = jule::new_ptr<_1a88cee0d_FnIns>(_1a88cee0d_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a88ce03e_ParamIns>>::make({jule::new_ptr<_1a88ce03e_ParamIns>(_1a88ce03e_ParamIns{._field_Decl=jule::new_ptr<_1a88ca920_Param>(_1a88ca920_Param{._field_Mutable=true, }), ._field_Kind=_49613_t.get()._field_Kind}),jule::new_ptr<_1a88ce03e_ParamIns>(_1a88ce03e_ParamIns{._field_Decl=jule::new_ptr<_1a88ca920_Param>(_1a88ca920_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1a86b2e44_Slc(_49613_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_49613_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1a865dbe2_Data>(jule::Ptr<_1a8683860_Eval>*,jule::Ptr<_1a88a0186_FnCallExpr>*,jule::Ptr<_1a865dbe2_Data>*)>(_1a87781d5_builtinCallerCommonPlain), });;
	(*(_48666_d)).get()._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(_50613_f, 1)});
	(*(_48666_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c4320_CommonIdentExprModel>(_1a88c4320_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_48666_d))=_1a87781d5_builtinCallerCommonPlain(_48629_e, _48644_fc, _48666_d);
	if (((*(_48666_d)) != nullptr)) {
		jule::Ptr<_1a88c0e54_FnCallExprModel> _53417_model = (*(_48666_d)).get()._field_Model.cast_ptr<_1a88c0e54_FnCallExprModel>(&__jule_any_type35);;
		(*(_48666_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c6d7d_BuiltinAppendCallExprModel>(_1a88c6d7d_BuiltinAppendCallExprModel{._field_Dest=_53417_model.get()._field_Args[0LL], ._field_Elements=_53417_model.get()._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_48666_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877ad42_callerCopySlice(jule::Ptr<_1a865dbe2_Data>* _54325_dest, jule::Ptr<_1a8683860_Eval>* _54343_e, jule::Ptr<_1a88a0186_FnCallExpr>* _54358_fc, jule::Ptr<_1a865dbe2_Data>* _54380_d) {
	if ((!((*(_54325_dest)).get()._field_Mutable))) {
		_1a8683d6b_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a865dbe2_Data> _54813_src = _1a86a032c_evalExpr((*(_54343_e)), (*(_54358_fc)).get()._field_Args[1LL]);;
	if ((_54813_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a86bb1b1_Slc> _55213_slc = _1a86b2e44_Slc(_54813_src.get()._field_Kind.ptr());;
	if ((_55213_slc != nullptr)) {
		if (((!(_54813_src.get()._field_Mutable)) && _1a86b1041_Mutable(_55213_slc.get()._field_Elem.ptr()))) {
			_1a8683d6b_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1a86aee63_Equal((*(_54325_dest)).get()._field_Kind, _54813_src.get()._field_Kind)))) {
			_1a8683d6b_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_54325_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_54813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_1a86b7003_Prim> _56213_destPrim = _1a86b1eba_Prim(_1a86b2e44_Slc((*(_54325_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1a86b7003_Prim> _56313_prim = _1a86b1eba_Prim(_54813_src.get()._field_Kind.ptr());;
		if (((((_56213_destPrim == nullptr) || (_56313_prim == nullptr)) || (!(_1a86ba204_IsStr(_56313_prim.ptr())))) || (!(_1a86b87c9_IsU8(_56213_destPrim.ptr()))))) {
			_1a8683d6b_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_54325_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_54813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_54380_d)).get()._field_Kind=_1a89aa26e_lenKind();
	(*(_54380_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c7ed3_BuiltinCopyCallExprModel>(_1a88c7ed3_BuiltinCopyCallExprModel{._field_Dest=(*(_54325_dest)), ._field_Src=_54813_src}), &__jule_any_type32);
	return (*(_54380_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877b2c6_callerCopyStr(jule::Ptr<_1a865dbe2_Data>* _57723_dest, jule::Ptr<_1a8683860_Eval>* _57741_e, jule::Ptr<_1a88a0186_FnCallExpr>* _57756_fc, jule::Ptr<_1a865dbe2_Data>* _57778_d) {
	if ((!((*(_57723_dest)).get()._field_Mutable))) {
		_1a8683d6b_pushErr((*(_57741_e)).ptr(), (*(_57756_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a865dbe2_Data> _58213_src = _1a86a032c_evalExpr((*(_57741_e)), (*(_57756_fc)).get()._field_Args[1LL]);;
	if ((_58213_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1a86b1eba_Prim(_58213_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac334375:;
			{
				if (_1a86ba204_IsStr(_1a86b1eba_Prim(_58213_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1a86b2e44_Slc(_58213_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac3343db:;
			{
				jule::Ptr<_1a86bb1b1_Slc> _59217_slc = _1a86b2e44_Slc(_58213_src.get()._field_Kind.ptr());;
				if (((_1a86b1eba_Prim(_59217_slc.get()._field_Elem.ptr()) != nullptr) && _1a86b87c9_IsU8(_1a86b1eba_Prim(_59217_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1ac33460b:;
	};
	_1a8683d6b_pushErr((*(_57741_e)).ptr(), (*(_57756_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str((*(_57723_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_58213_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_57778_d)).get()._field_Kind=_1a89aa26e_lenKind();
	(*(_57778_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c7ed3_BuiltinCopyCallExprModel>(_1a88c7ed3_BuiltinCopyCallExprModel{._field_Dest=(*(_57723_dest)), ._field_Src=_58213_src}), &__jule_any_type32);
	return (*(_57778_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877b6b1_builtinCallerCopy(jule::Ptr<_1a8683860_Eval>* _60727_e, jule::Ptr<_1a88a0186_FnCallExpr>* _60742_fc, jule::Ptr<_1a865dbe2_Data>* _60764_d) {
	if (((*(_60742_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_60742_fc)).get()._field_Args.len() == 1LL)) {
			_1a8683d6b_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1a8683d6b_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_60742_fc)).get()._field_Args.len() > 2LL)) {
		_1a8683d6b_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _62013_dest = _1a86a032c_evalExpr((*(_60727_e)), (*(_60742_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_62013_dest == nullptr)) {
			_case_begin_1ac33cc74:;
			{
				return nullptr;;
			}
		}
		else if ((_1a86b2e44_Slc(_62013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac33d714:;
			{
				return _1a877ad42_callerCopySlice(&(_62013_dest), _60727_e, _60742_fc, _60764_d);;
			}
		}
		else if (((_1a86b1eba_Prim(_62013_dest.get()._field_Kind.ptr()) != nullptr) && _1a86ba204_IsStr(_1a86b1eba_Prim(_62013_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ac33d77a:;
			{
				return _1a877b2c6_callerCopyStr(&(_62013_dest), _60727_e, _60742_fc, _60764_d);;
			}
		}
		else {
			_case_begin_1ac33c933:;
			{
				_1a8683d6b_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac33b46a:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a877ba02_callerLenSlice(jule::Ptr<_1a865dbe2_Data>* _63424_expr, jule::Ptr<_1a865dbe2_Data>* _63442_d) {
	(*(_63442_d)).get()._field_Kind=_1a89aa26e_lenKind();
	(*(_63442_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c719c_BuiltinLenCallExprModel>(_1a88c719c_BuiltinLenCallExprModel{._field_Expr=(*(_63424_expr))}), &__jule_any_type118);
	return (*(_63442_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877bd43_callerLenMap(jule::Ptr<_1a865dbe2_Data>* _64222_expr, jule::Ptr<_1a865dbe2_Data>* _64240_d) {
	(*(_64240_d)).get()._field_Kind=_1a89aa26e_lenKind();
	(*(_64240_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c719c_BuiltinLenCallExprModel>(_1a88c719c_BuiltinLenCallExprModel{._field_Expr=(*(_64222_expr))}), &__jule_any_type118);
	return (*(_64240_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877c184_callerLenArr(jule::Ptr<_1a865dbe2_Data>* _65022_expr, jule::Ptr<_1a865dbe2_Data>* _65040_d) {
	(*(_65040_d)).get()._field_Kind=_1a89aa26e_lenKind();
	(*(_65040_d)).get()._field_Constant=static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a86b2bd0_Arr((*(_65022_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_65040_d)).get()._field_Model=jule::Any((*(_65040_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_65040_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877c4c5_callerLenStr(jule::Ptr<_1a865dbe2_Data>* _65722_expr, jule::Ptr<_1a865dbe2_Data>* _65740_d) {
	(*(_65740_d)).get()._field_Kind=_1a89aa26e_lenKind();
	if (_1a865e50b_IsConst((*(_65722_expr)).ptr())) {
		(*(_65740_d)).get()._field_Constant=static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a5542700_ReadStr((*(_65722_expr)).get()._field_Constant.ptr()).len())));
		(*(_65740_d)).get()._field_Model=jule::Any((*(_65740_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_65740_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c719c_BuiltinLenCallExprModel>(_1a88c719c_BuiltinLenCallExprModel{._field_Expr=(*(_65722_expr))}), &__jule_any_type118);
	};
	return (*(_65740_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877c816_callerLenComptime(jule::Ptr<_1a865dbe2_Data>* _67027_d, jule::I64 _67037_n) {
	(*(_67027_d)).get()._field_Kind=_1a89aa26e_lenKind();
	(*(_67027_d)).get()._field_Constant=static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67037_n)));
	(*(_67027_d)).get()._field_Model=jule::Any((*(_67027_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_67027_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877cc01_builtinCallerLen(jule::Ptr<_1a8683860_Eval>* _67726_e, jule::Ptr<_1a88a0186_FnCallExpr>* _67741_fc, jule::Ptr<_1a865dbe2_Data>* _67763_d) {
	if (((*(_67741_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_67741_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _68513_dest = _1a86a001e_evalExpr1((*(_67726_e)), (*(_67741_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_68513_dest == nullptr)) {
			_case_begin_1ac3480e2:;
			{
				return nullptr;;
			}
		}
		else if ((_1a86b2e44_Slc(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac348a82:;
			{
				return _1a877ba02_callerLenSlice(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_1a86b2bd0_Arr(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac348ae8:;
			{
				return _1a877c184_callerLenArr(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_1a86b38e5_Map(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac34891c:;
			{
				return _1a877bd43_callerLenMap(&(_68513_dest), _67763_d);;
			}
		}
		else if (((_1a86b1eba_Prim(_68513_dest.get()._field_Kind.ptr()) != nullptr) && _1a86ba204_IsStr(_1a86b1eba_Prim(_68513_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ac348983:;
			{
				return _1a877c4c5_callerLenStr(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_1a86b4132_comptimeStructFields(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac347d17:;
			{
				return _1a877c816_callerLenComptime(_67763_d, static_cast<jule::I64>(_1a86b4132_comptimeStructFields(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1a86b460a_comptimeEnumFields(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac347d7d:;
			{
				return _1a877c816_callerLenComptime(_67763_d, static_cast<jule::I64>(_1a86b460a_comptimeEnumFields(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1a86b5320_comptimeTypeInfos(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac347de4:;
			{
				return _1a877c816_callerLenComptime(_67763_d, static_cast<jule::I64>(_1a86b5320_comptimeTypeInfos(_68513_dest.get()._field_Kind.ptr()).get()._field_types.len()));;
			}
		}
		else if ((_1a86b4ad3_comptimeParams(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac347e5a:;
			{
				return _1a877c816_callerLenComptime(_67763_d, static_cast<jule::I64>(_1a86b4ad3_comptimeParams(_68513_dest.get()._field_Kind.ptr()).get()._field_params.len()));;
			}
		}
		else if ((_1a86b57e8_comptimeStatics(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac348b5e:;
			{
				return _1a877c816_callerLenComptime(_67763_d, static_cast<jule::I64>(_1a86b57e8_comptimeStatics(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1a86b6299_comptimeFiles(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac348bc5:;
			{
				return _1a877c816_callerLenComptime(_67763_d, static_cast<jule::I64>(_1a86b6299_comptimeFiles(_68513_dest.get()._field_Kind.ptr()).get()._field_files.len()));;
			}
		}
		else {
			_case_begin_1ac347ca1:;
			{
				_1a8683d6b_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac345c49:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a877d042_callerCapSlice(jule::Ptr<_1a865dbe2_Data>* _71524_expr, jule::Ptr<_1a865dbe2_Data>* _71542_d) {
	(*(_71542_d)).get()._field_Kind=_1a89aa26e_lenKind();
	(*(_71542_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c74bb_BuiltinCapCallExprModel>(_1a88c74bb_BuiltinCapCallExprModel{._field_Expr=(*(_71524_expr))}), &__jule_any_type119);
	return (*(_71542_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877d383_callerCapStr(jule::Ptr<_1a865dbe2_Data>* _72322_expr, jule::Ptr<_1a865dbe2_Data>* _72340_d) {
	(*(_72340_d)).get()._field_Kind=_1a89aa26e_lenKind();
	if (_1a865e50b_IsConst((*(_72322_expr)).ptr())) {
		(*(_72340_d)).get()._field_Constant=static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a5542700_ReadStr((*(_72322_expr)).get()._field_Constant.ptr()).cap())));
		(*(_72340_d)).get()._field_Model=jule::Any((*(_72340_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_72340_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a88c74bb_BuiltinCapCallExprModel>(_1a88c74bb_BuiltinCapCallExprModel{._field_Expr=(*(_72322_expr))}), &__jule_any_type119);
	};
	return (*(_72340_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877d76d_builtinCallerCap(jule::Ptr<_1a8683860_Eval>* _73626_e, jule::Ptr<_1a88a0186_FnCallExpr>* _73641_fc, jule::Ptr<_1a865dbe2_Data>* _73663_d) {
	if (((*(_73641_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_73641_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _74413_dest = _1a86a032c_evalExpr((*(_73626_e)), (*(_73641_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_74413_dest == nullptr)) {
			_case_begin_1ac355ee0:;
			{
				return nullptr;;
			}
		}
		else if (_74413_dest.get()._field_Decl) {
			_case_begin_1ac356980:;
			{
				_1a8683d6b_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a86b2e44_Slc(_74413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac3569e6:;
			{
				return _1a877d042_callerCapSlice(&(_74413_dest), _73663_d);;
			}
		}
		else if (((_1a86b1eba_Prim(_74413_dest.get()._field_Kind.ptr()) != nullptr) && _1a86ba204_IsStr(_1a86b1eba_Prim(_74413_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ac35681a:;
			{
				return _1a877d383_callerCapStr(&(_74413_dest), _73663_d);;
			}
		}
		else {
			_case_begin_1ac355b9e:;
			{
				_1a8683d6b_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac353b47:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a877dd34_callerDeleteMap(jule::Ptr<_1a8683860_Eval>* _76125_e, jule::Ptr<_1a88a0186_FnCallExpr>* _76140_fc, jule::Ptr<_1a865dbe2_Data>* _76162_expr, jule::Ptr<_1a865dbe2_Data>* _76180_d) {
	if ((!((*(_76162_expr)).get()._field_Mutable))) {
		_1a8683d6b_pushErr((*(_76125_e)).ptr(), (*(_76140_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_76180_d))=_1a86aa69a_buildVoidData();
	jule::Ptr<_1a88c7b70_BuiltinDeleteCallExprModel> _76613_model = jule::new_ptr<_1a88c7b70_BuiltinDeleteCallExprModel>(_1a88c7b70_BuiltinDeleteCallExprModel{._field_Dest=(*(_76162_expr)), });;
	if (((*(_76140_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1a865dbe2_Data> _77017_key = _1a86a032c_evalExpr((*(_76125_e)), (*(_76140_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_77017_key == nullptr)) {
				_case_begin_1ac35c887:;
				{
					return nullptr;;
				}
			}
			else if (_77017_key.get()._field_Decl) {
				_case_begin_1ac35b28c:;
				{
					_1a8683d6b_pushErr((*(_76125_e)).ptr(), (*(_76140_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1ac35b226:;
				{
					;
					jule::Ptr<_1a86ae79d_TypeKind> _77921_keyType = _1a86b38e5_Map((*(_76162_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1a8951215_checkAssignType((*(_76125_e)).get()._field_s, false, &(_77921_keyType), &(_77017_key), (*(_76140_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1ac35b1b0:;
		};
		_76613_model.get()._field_Key=_77017_key;
	};
	(*(_76180_d)).get()._field_Model=jule::Any(_76613_model, &__jule_any_type33);
	return (*(_76180_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877e21e_builtinCallerDelete(jule::Ptr<_1a8683860_Eval>* _79029_e, jule::Ptr<_1a88a0186_FnCallExpr>* _79044_fc, jule::Ptr<_1a865dbe2_Data>* _79066_d) {
	if (((*(_79044_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_79044_fc)).get()._field_Args.len() > 2LL)) {
		_1a8683d6b_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _79813_dest = _1a86a032c_evalExpr((*(_79029_e)), (*(_79044_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_79813_dest == nullptr)) {
			_case_begin_1ac36199b:;
			{
				return nullptr;;
			}
		}
		else if (_79813_dest.get()._field_Decl) {
			_case_begin_1ac36243b:;
			{
				_1a8683d6b_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a86b38e5_Map(_79813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac3624a2:;
			{
				return _1a877dd34_callerDeleteMap(_79029_e, _79044_fc, &(_79813_dest), _79066_d);;
			}
		}
		else {
			_case_begin_1ac36165a:;
			{
				_1a8683d6b_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac35e603:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a877e609_builtinCallerClone(jule::Ptr<_1a8683860_Eval>* _81328_e, jule::Ptr<_1a88a0186_FnCallExpr>* _81343_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	if (((*(_81343_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_81343_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _82213_d = _1a86a032c_evalExpr((*(_81328_e)), (*(_81343_fc)).get()._field_Args[0LL]);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a86b19e2_SupportsCloning(_82213_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1a86b2e44_Slc(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_1a86b38e5_Map(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_1a86b2bd0_Arr(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_1a86b222e_Sptr(_82213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1ac366cc0:;
				{
					{
						_1a8683d6b_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_1a86b341c_Struct(_82213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1ac36662c:;
				{
					{
						_1a8683d6b_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			else {
				_case_begin_1ac3665b6:;
				{
					{
						_1a8683d6b_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			_match_end_1ac36651c:;
		};
	};
	_82213_d.get()._field_Mutable=true;
	_82213_d.get()._field_Model=jule::Any(jule::new_ptr<_1a88c5761_BuiltinCloneCallExprModel>(_1a88c5761_BuiltinCloneCallExprModel{._field_Expr=_82213_d.get()._field_Model}), &__jule_any_type27);
	return _82213_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877e9e4_builtinCallerAssert(jule::Ptr<_1a8683860_Eval>* _85529_e, jule::Ptr<_1a88a0186_FnCallExpr>* _85544_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	if (((*(_85544_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_85544_fc)).get()._field_Args.len() > 2LL)) {
		_1a8683d6b_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _86413_expr = _1a86a032c_evalExpr((*(_85529_e)), (*(_85544_fc)).get()._field_Args[0LL]);;
	if ((_86413_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a86b1eba_Prim(_86413_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1a86b9e90_IsBool(_1a86b1eba_Prim(_86413_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1a8683d6b_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a88c64dc_BuiltinAssertCallExprModel> _87313_model = jule::new_ptr<_1a88c64dc_BuiltinAssertCallExprModel>(_1a88c64dc_BuiltinAssertCallExprModel{._field_Token=(*(_85544_fc)).get()._field_Token, ._field_Expr=_86413_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_85544_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1a865dbe2_Data> _88117_log = _1a86a032c_evalExpr((*(_85529_e)), (*(_85544_fc)).get()._field_Args[1LL]);;
		if ((_88117_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1a865e50b_IsConst(_88117_log.ptr()))) || (_1a86b1eba_Prim(_88117_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1a86ba204_IsStr(_1a86b1eba_Prim(_88117_log.get()._field_Kind.ptr()).ptr()))))) {
			_1a8683d6b_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_88117_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_87313_model.get()._field_Log=_1a5542700_ReadStr(_88117_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1a865dbe2_Data> _89413_d = _1a86aa69a_buildVoidData();;
	_89413_d.get()._field_Model=jule::Any(_87313_model, &__jule_any_type31);
	return _89413_d;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a877ee01_builtinCallerStdComptimeTypeOf(jule::Ptr<_1a8683860_Eval>* _89940_e, jule::Ptr<_1a88a0186_FnCallExpr>* _89955_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	if (((*(_89955_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_89955_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _90813_d = _1a869e5e5_evalExprKind((*(_89940_e)), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_90813_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _9129_f = _1a86b31a8_Fn(_90813_d.get()._field_Kind.ptr());;
	if ((_9129_f != nullptr)) {
		if (_1a88d1294_IsBuiltin(_9129_f.ptr())) {
			_1a8683d6b_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<built-in fn>", 13), &__jule_any_type5)}));
			return nullptr;;
		};
		if ((_9129_f.get()._field_Generics.len() != _9129_f.get()._field_Decl.get()._field_Generics.len())) {
			_1a8683d6b_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1a88b9b51_StructIns> _9239_s = _1a86b341c_Struct(_90813_d.get()._field_Kind.ptr());;
	if (((_9239_s != nullptr) && (_9239_s.get()._field_Generics.len() != _9239_s.get()._field_Decl.get()._field_Generics.len()))) {
		_1a8683d6b_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1a86b3dbd_comptime(_90813_d.get()._field_Kind.ptr())) {
		_1a8683d6b_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_90813_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1a89156b3_buildComptimeTypeInfoData(&((*(_89940_e)).get()._field_s), &(_90813_d.get()._field_Kind));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a878031e_builtinCallerStdComptimeValueOf(jule::Ptr<_1a8683860_Eval>* _93541_e, jule::Ptr<_1a88a0186_FnCallExpr>* _93556_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	if (((*(_93556_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_93556_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _94313_d = _1a86a032c_evalExpr((*(_93541_e)), (*(_93556_fc)).get()._field_Args[0LL]);;
	if ((_94313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a89aa59e_isGoodValueToInfer(&(_94313_d))))) {
		_1a8683d6b_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_94313_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1a89159e3_buildComptimeValue(&(_94313_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a87805c7_rangeData(jule::Trait<_1a88e5286_comptimeRangeKind> _95518_kind) {
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a88e5462_comptimeRange>(_1a88e5462_comptimeRange{._field_kind=_95518_kind}), 5)}), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a87809d4_builtinCallerStdComptimeRange(jule::Ptr<_1a8683860_Eval>* _96539_e, jule::Ptr<_1a88a0186_FnCallExpr>* _96554_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	if (((*(_96554_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_96554_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _97413_d = _1a869e5e5_evalExprKind((*(_96539_e)), (*(_96554_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_97413_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1a86b4132_comptimeStructFields(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac384d98:;
			{
				return _1a87805c7_rangeData(jule::Trait<_1a88e5286_comptimeRangeKind>(_1a86b4132_comptimeStructFields(_97413_d.get()._field_Kind.ptr()), 0));;
			}
		}
		else if ((_1a86b460a_comptimeEnumFields(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac384e0e:;
			{
				return _1a87805c7_rangeData(jule::Trait<_1a88e5286_comptimeRangeKind>(_1a86b460a_comptimeEnumFields(_97413_d.get()._field_Kind.ptr()), 2));;
			}
		}
		else if ((_1a86b5320_comptimeTypeInfos(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac384c22:;
			{
				return _1a87805c7_rangeData(jule::Trait<_1a88e5286_comptimeRangeKind>(_1a86b5320_comptimeTypeInfos(_97413_d.get()._field_Kind.ptr()), 4));;
			}
		}
		else if ((_1a86b4ad3_comptimeParams(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac384c88:;
			{
				return _1a87805c7_rangeData(jule::Trait<_1a88e5286_comptimeRangeKind>(_1a86b4ad3_comptimeParams(_97413_d.get()._field_Kind.ptr()), 3));;
			}
		}
		else if ((_1a86b57e8_comptimeStatics(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac383d20:;
			{
				return _1a87805c7_rangeData(jule::Trait<_1a88e5286_comptimeRangeKind>(_1a86b57e8_comptimeStatics(_97413_d.get()._field_Kind.ptr()), 1));;
			}
		}
		else if ((_1a86b6299_comptimeFiles(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac383d86:;
			{
				return _1a87805c7_rangeData(jule::Trait<_1a88e5286_comptimeRangeKind>(_1a86b6299_comptimeFiles(_97413_d.get()._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_1ac384073:;
			{
				_1a8683d6b_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_97413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1ac383b77:;
	};
}



inline jule::Ptr<_1a865dbe2_Data> _1a8780e02_builtinCallerStdComptimeLine(jule::Ptr<_1a8683860_Eval>* _99738_e, jule::Ptr<_1a88a0186_FnCallExpr>* _99753_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	if (((*(_99753_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_99738_e)).ptr(), (*(_99753_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Line", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1a55406ba_Const> _100113_constant = static__1a5540ae9_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_99753_fc)).get()._field_Token.get()._field_Row)));;
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8774841_primInt, ._field_Model=jule::Any(_100113_constant, &__jule_any_type19), ._field_Constant=_100113_constant});;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8781320_builtinCallerStdComptimeFile(jule::Ptr<_1a8683860_Eval>* _100938_e, jule::Ptr<_1a88a0186_FnCallExpr>* _100953_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	if (((*(_100953_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_100938_e)).ptr(), (*(_100953_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("File", 4), &__jule_any_type5)}));
	};
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a8913628_comptimeFile>(_1a8913628_comptimeFile{._field_file=(*(_100938_e)).get()._field_s.get()._field_file}), 18)}), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a878173d_builtinCallerStdComptimeFiles(jule::Ptr<_1a8683860_Eval>* _102239_e, jule::Ptr<_1a88a0186_FnCallExpr>* _102254_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	if (((*(_102254_fc)).get()._field_Args.len() > 0LL)) {
		_1a8683d6b_pushErr((*(_102239_e)).ptr(), (*(_102254_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Files", 5), &__jule_any_type5)}));
	};
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=jule::new_ptr<_1a86ae79d_TypeKind>(_1a86ae79d_TypeKind{._field_Kind=jule::Trait<_1a86ae33b_Kind>(jule::new_ptr<_1a8912160_comptimeFiles>(_1a8912160_comptimeFiles{._field_files=(*(_102239_e)).get()._field_s.get()._field_files}), 17)}), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8781b5b_builtinCallerStdMemSizeOf(jule::Ptr<_1a8683860_Eval>* _103535_e, jule::Ptr<_1a88a0186_FnCallExpr>* _103550_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	jule::Ptr<_1a865dbe2_Data> _103613_result = jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8774577_primUint, });;
	if (((*(_103550_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _103613_result;;
	};
	if (((*(_103550_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _104813_d = _1a869e5e5_evalExprKind((*(_103535_e)), (*(_103550_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_104813_d == nullptr)) {
		return _103613_result;;
	};
	if ((!(_1a86caa3e_validTypeForXof(&(_104813_d.get()._field_Kind))))) {
		_1a8683d6b_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_104813_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	_103613_result.get()._field_Model=jule::Any(jule::new_ptr<_1a88c86ba_SizeofExprModel>(_1a88c86ba_SizeofExprModel{._field_Expr=_104813_d.get()._field_Model}), &__jule_any_type120);
	return _103613_result;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8782079_builtinCallerStdMemAlignOf(jule::Ptr<_1a8683860_Eval>* _106036_e, jule::Ptr<_1a88a0186_FnCallExpr>* _106051_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	jule::Ptr<_1a865dbe2_Data> _106113_result = jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8774577_primUint, });;
	if (((*(_106051_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _106113_result;;
	};
	if (((*(_106051_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _107313_d = _1a869e5e5_evalExprKind((*(_106036_e)), (*(_106051_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_107313_d == nullptr)) {
		return _106113_result;;
	};
	if ((!(_1a86caa3e_validTypeForXof(&(_107313_d.get()._field_Kind))))) {
		_1a8683d6b_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1a86aeb55_Str(_107313_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	_106113_result.get()._field_Model=jule::Any(jule::new_ptr<_1a88c89a6_AlignofExprModel>(_1a88c89a6_AlignofExprModel{._field_Expr=_107313_d.get()._field_Model}), &__jule_any_type121);
	return _106113_result;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8782497_builtinCallerStdMemFree(jule::Ptr<_1a8683860_Eval>* _108533_e, jule::Ptr<_1a88a0186_FnCallExpr>* _108548_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	if (((*(_108548_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_108548_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _109413_d = _1a86a032c_evalExpr((*(_108533_e)), (*(_108548_fc)).get()._field_Args[0LL]);;
	if ((_109413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a86b177d_PerformsRC(_109413_d.get()._field_Kind.ptr())))) {
		_1a8683d6b_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a865dbe2_Data> _110313_result = _1a86aa69a_buildVoidData();;
	_110313_result.get()._field_Model=jule::Any(jule::new_ptr<_1a88c9754_FreeExprModel>(_1a88c9754_FreeExprModel{._field_Expr=_109413_d.get()._field_Model}), &__jule_any_type34);
	return _110313_result;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a87828c6_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1a8683860_Eval>* _110845_e, jule::Ptr<_1a88a0186_FnCallExpr>* _110860_fc, jule::Ptr<_1a865dbe2_Data>* ) {
	if (((*(_110860_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_110860_fc)).get()._field_Args.len() > 1LL)) {
		_1a8683d6b_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1a865dbe2_Data> _111713_d = _1a86a032c_evalExpr((*(_110845_e)), (*(_110860_fc)).get()._field_Args[0LL]);;
	if ((_111713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a86c9b1a_isBuiltinStrConvertable(&(_111713_d.get()._field_Kind))))) {
		_1a8683d6b_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a865dbe2_Data>(_1a865dbe2_Data{._field_Kind=_1a8773bd6_primStr, ._field_Model=jule::Any(jule::new_ptr<_1a88c90a0_IntegratedToStrExprModel>(_1a88c90a0_IntegratedToStrExprModel{._field_Expr=_111713_d.get()._field_Model}), &__jule_any_type122), });;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8782ce4_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1a8683860_Eval>* _113544_e, jule::Ptr<_1a88a0186_FnCallExpr>* _113559_fc, jule::Ptr<_1a865dbe2_Data>* _113581_d) {
	if ((!(_1a86847a6_isUnsafe((*(_113544_e)).ptr())))) {
		_1a8683d6b_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_113559_fc)).get()._field_Args.len() < 1LL)) {
		_1a8683d6b_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a865dbe2_Data> _114513_argd = _1a86a032c_evalExpr((*(_113544_e)), (*(_113559_fc)).get()._field_Args[0LL]);;
	if ((_114513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1a86b1eba_Prim(_114513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1a86ba204_IsStr(_1a86b1eba_Prim(_114513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1a8683d6b_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1a86aeb55_Str(_114513_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_1a865e50b_IsConst(_114513_argd.ptr()))) || (!(_1a5544a98_IsStr(_114513_argd.get()._field_Constant.ptr()))))) {
		_1a8683d6b_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a865dbe2_Data> _116013_r = _1a86aa69a_buildVoidData();;
	jule::Ptr<_1a88cee0d_FnIns> _116213_f = _1a86b31a8_Fn((*(_113581_d)).get()._field_Kind.ptr());;
	if ((_116213_f.get()._field_Generics.len() > 0LL)) {
		_116013_r.get()._field_Kind=_116213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1a88c9468_BackendEmitExprModel> _116713_model = jule::new_ptr<_1a88c9468_BackendEmitExprModel>(_1a88c9468_BackendEmitExprModel{._field_Code=_1a5542700_ReadStr(_114513_argd.get()._field_Constant.ptr()), });;
	if (((*(_113559_fc)).get()._field_Args.len() > 1LL)) {
		_116713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_113559_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_113559_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ac3a8b69:;
			if (it != expr_end) {
				jule::Ptr<_1a889b270_Expr> _117321_arg = *it;
				{
					_114513_argd=_1a869e903_eval1((*(_113544_e)), _117321_arg);
					if ((_114513_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _116713_model.get()._field_Exprs; __jule_push_dest.push(_114513_argd.get()._field_Model); };
				}
				_iter_next_1ac3a8b69:;
				++it;
				goto _iter_begin_1ac3a8b69;
			}
			_iter_end_1ac3a8b69:;
		};
	};
	_116013_r.get()._field_Model=jule::Any(_116713_model, &__jule_any_type25);
	return _116013_r;;
}



inline jule::Ptr<_1a865dbe2_Data> _1a8783234_builtinCallerStdDebugOut(jule::Ptr<_1a8683860_Eval>* _118634_e, jule::Ptr<_1a88a0186_FnCallExpr>* _118649_fc, jule::Ptr<_1a865dbe2_Data>* _118671_d) {
	(*(_118671_d))=_1a87791e7_builtinCallerOut(_118634_e, _118649_fc, _118671_d);
	if (((*(_118671_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_118671_d)).get()._field_Model.cast_ptr<_1a88c5057_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_118671_d));;
}



inline jule::Ptr<_1a865dbe2_Data> _1a878361e_builtinCallerStdDebugOutln(jule::Ptr<_1a8683860_Eval>* _119536_e, jule::Ptr<_1a88a0186_FnCallExpr>* _119551_fc, jule::Ptr<_1a865dbe2_Data>* _119573_d) {
	(*(_119573_d))=_1a87795d2_builtinCallerOutln(_119536_e, _119551_fc, _119573_d);
	if (((*(_119573_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_119573_d)).get()._field_Model.cast_ptr<_1a88c5442_BuiltinOutlnCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return (*(_119573_d));;
}



inline jule::Bool _1a8b40844_FindModuleFile(jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3ad971:;
		if (it != expr_end) {
			jule::Ptr<_1d0a261b4_DirEntry> *_1312_d = it;
			{
				if (((!(_1d0a358ee_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1ac3ad971:;
			++it;
			goto _iter_begin_1ac3ad971;
		}
		_iter_end_1ac3ad971:;
	};
	return false;;
}



inline jule::Str _1a8b40976_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>> _2617_dirents = ({
				auto except = static__1a4d66585_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ac3adb80;
				} jule::Slice<jule::Ptr<_1d0a261b4_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1a8b40844_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_1a4d65c49_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1ac3adb80;
			};
		}
	_iter_next_1ac3adb80:;
	}
	_iter_end_1ac3adb80:;;
	return jule::Str();;
}



inline jule::Slice<_1a4deb40b_Log> _1a8b40b74_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1d0a33853_Read(_1a4d650de_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1a4deb40b_Log>::make({_1a4deb40b_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _1a4d62c24_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1a4deb40b_Log>::make({_1a4deb40b_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1a56b3e9d_FileInfo> _1a939e5d0_ParseFile(jule::Ptr<_1a526d85a_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a56b3e9d_FileInfo> _2713_finf = jule::new_ptr<_1a56b3e9d_FileInfo>();;
	({
		__jule_tuple_x_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log __jule_assign_result = _1a939eaec_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log _1a939eaec_parseFileset(jule::Ptr<_1a526d85a_File> _5521_f) {
	__jule_tuple_x_1a8863347_Ast__jule_tuple_s_1a4deb40b_Log __jule_func_result;
	jule::Ptr<_1a93bd643_parser> _5613_p = jule::new_ptr<_1a93bd643_parser>();;
	_1a93cced2_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1a88a6c2b_ScopeTree> _1a93a0526_newScope(void) {
	return jule::new_ptr<_1a88a6c2b_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a93a0812_isSt(jule::Ptr<_1a52684c0_Token> _499_current, jule::Ptr<_1a52684c0_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(3LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a93a0b53_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1a52684c0_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(17LLU)) || (_1a5268eb5_IsBinOp(_6113_prev.get()._field_Id) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a93a0ed8_nextStPos(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _6913_braceN = 0LL;;
	jule::I64 _7013_i = _6833_start;;
	for (; (_7013_i < (*(_6815_tokens)).len()); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;;
			jule::Bool _7317_terminated = false;;
			jule::Ptr<_1a52684c0_Token> _7413_tok = (*(_6815_tokens))[_7013_i];;
			{
				auto &_match_expr{ _7413_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac4407c2:;
					{
						if (((_6913_braceN == 0LL) && (_7013_i > _6833_start))) {
							if ((!(_1a93a0b53_prevIsIncompleteExpr(_6815_tokens, &(_7013_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a93a0812_isSt(_7413_tok, (*(_6815_tokens))[(_7013_i - 1LL)]);
									_7217_ok = __jule_assign_result.__jule_result_arg0;
									_7317_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7217_ok) {
									goto _julec_label_return;
								};
							};
						};
						(_6913_braceN)++;
						goto _iter_next_1ac43e183;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac440838:;
					{
						(_6913_braceN)--;
						if (((_6913_braceN == 0LL) && ((_7013_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a93a0812_isSt((*(_6815_tokens))[(_7013_i + 1LL)], _7413_tok);
								_7217_ok = __jule_assign_result.__jule_result_arg0;
								_7317_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7217_ok) {
								(_7013_i)++;
								goto _julec_label_return;
							};
						};
						goto _iter_next_1ac43e183;
					}
				}
				_match_end_1ac44075b:;
			};
			if ((_6913_braceN != 0LL)) {
				goto _iter_next_1ac43e183;
			};
			if ((_7013_i > _6833_start)) {
				if (_1a93a0b53_prevIsIncompleteExpr(_6815_tokens, &(_7013_i))) {
					goto _iter_next_1ac43e183;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a93a0812_isSt(_7413_tok, (*(_6815_tokens))[(_7013_i - 1LL)]);
					_7217_ok = __jule_assign_result.__jule_result_arg0;
					_7317_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a93a0812_isSt(_7413_tok, _7413_tok);
					_7217_ok = __jule_assign_result.__jule_result_arg0;
					_7317_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7217_ok))) {
				goto _iter_next_1ac43e183;
			};
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7013_i;
			__jule_func_result.__jule_result_arg1 = _7317_terminated;
			return __jule_func_result;;
		}
	_iter_next_1ac43e183:;
	}
	_iter_end_1ac43e183:;;
	__jule_func_result.__jule_result_arg0 = _7013_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a52684c0_Token__jule_tuple_bool _1a93a1329_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1a52684c0_Token>> _13028_tokens) {
	__jule_tuple_sx_1a52684c0_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1319_start = (*(_13016_i));;
	jule::Bool _13213_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a93a0ed8_nextStPos(&(_13028_tokens), _1319_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_13213_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1a52684c0_Token>> _13413_stTokens = _13028_tokens.slice(_1319_start, (*(_13016_i)));;
	if (_13213_terminated) {
		if ((_13413_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1a52684c0_Token__jule_tuple_bool __jule_assign_result = _1a93a1329_skipSt(_13016_i, _13028_tokens);
				_13413_stTokens = __jule_assign_result.__jule_result_arg0;
				_13213_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13413_stTokens;
			__jule_func_result.__jule_result_arg1 = _13213_terminated;
			return __jule_func_result;;
		};
		_13413_stTokens=_13413_stTokens.slice(0LL, (_13413_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13413_stTokens;
	__jule_func_result.__jule_result_arg1 = _13213_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a93a1626_stmt>> _1a93a19bc_splitStmts(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1a93a1626_stmt>> _15313_stmts = jule::Slice<jule::Ptr<_1a93a1626_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15413_pos = 0LL;;
	while ((_15413_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1a52684c0_Token>> _15618_stmt;;
			jule::Bool _15624_terminated = false;;
			({
				__jule_tuple_sx_1a52684c0_Token__jule_tuple_bool __jule_assign_result = _1a93a1329_skipSt(&(_15413_pos), (*(_15220_tokens)));
				_15618_stmt = __jule_assign_result.__jule_result_arg0;
				_15624_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1a93a1626_stmt>> &__jule_push_dest = _15313_stmts; __jule_push_dest.push(jule::new_ptr<_1a93a1626_stmt>(_1a93a1626_stmt{._field_tokens=_15618_stmt, ._field_terminated=_15624_terminated})); };
		}
	_iter_next_1ac44a07e:;
	}
	_iter_end_1ac44a07e:;;
	return _15313_stmts;;
}



inline jule::Bool _1a93b8572_isTypeOp(jule::U64* _88214_id) {
	return ((((*(_88214_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88214_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88214_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1a93b885d_isTypeRange(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _88921_tokens) {
	jule::Bool _89013_op = false;;
	{
		auto expr = _88921_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4ea1ea:;
		if (it != expr_end) {
			jule::I64 _8919_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> _89112_token = *it;
			{
				if ((_89112_token.get()._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_89013_op) {
						return true;;
					};
					jule::I64 _89621_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1a52684c0_Token>> _89721_lTokens = (*(_88921_tokens)).slice(_8919_i);;
					{
						auto expr = &(_89721_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac4eb075:;
						if (it != expr_end) {
							jule::Ptr<_1a52684c0_Token> _89820_lToken = *it;
							{
								{
									auto &_match_expr{ _89820_lToken.get()._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1ac4ec65e:;
										{
											(_89621_rangeN)++;
											goto _iter_next_1ac4eb075;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1ac4ec6c5:;
										{
											(_89621_rangeN)--;
											goto _iter_next_1ac4eb075;
										}
									}
									_match_end_1ac4ec41c:;
								};
								if ((_89621_rangeN == 0LL)) {
									return _1a93b8572_isTypeOp(&(_89820_lToken.get()._field_Id));;
								};
							}
							_iter_next_1ac4eb075:;
							++it;
							goto _iter_begin_1ac4eb075;
						}
						_iter_end_1ac4eb075:;
					};
					return true;;
				};
				if ((!(_1a93b8572_isTypeOp(&(_89112_token.get()._field_Id))))) {
					return false;;
				};
				_89013_op=true;
			}
			_iter_next_1ac4ea1ea:;
			++it;
			_8919_i++;
			goto _iter_begin_1ac4ea1ea;
		}
		_iter_end_1ac4ea1ea:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a52684c0_Token>> _1a93b8b05_getBlockExpr(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _92222_tokens) {
	jule::I64 _92313_braceN = 0LL;;
	jule::I64 _92413_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4ee155:;
		if (it != expr_end) {
			jule::I64 _9259_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> _92512_tok = *it;
			{
				{
					auto &_match_expr{ _92512_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(13LLU) || _match_expr == static_cast<jule::U64>(14LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1ac4eed9d:;
						{
							(_92413_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac4eee14:;
						{
							if (((_92313_braceN > 0LL) || (_92413_skipToNextBraceClose > 0LL))) {
								if ((_92413_skipToNextBraceClose > 0LL)) {
									(_92413_skipToNextBraceClose)--;
								};
								(_92313_braceN)++;
								goto _match_end_1ac4eec9e;
							};
							return (*(_92222_tokens)).slice(0LL, _9259_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac4eee7a:;
						{
							(_92313_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac4eeee1:;
						{
							(_92313_braceN)--;
						}
					}
					_match_end_1ac4eec9e:;
				};
			}
			_iter_next_1ac4ee155:;
			++it;
			_9259_i++;
			goto _iter_begin_1ac4ee155;
		}
		_iter_end_1ac4ee155:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a52684c0_Token__jule_tuple_sx_1a52684c0_Token _1a93b8e8a_splitDelim(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _95220_tokens, jule::U64 _95238_delim) {
	__jule_tuple_sx_1a52684c0_Token__jule_tuple_sx_1a52684c0_Token __jule_func_result;
	jule::I64 _95313_rangeN = 0LL;;
	{
		auto expr = _95220_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac502686:;
		if (it != expr_end) {
			jule::I64 _9549_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> _95412_token = *it;
			{
				{
					auto &_match_expr{ _95412_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac503379:;
						{
							(_95313_rangeN)++;
							goto _iter_next_1ac502686;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac503401:;
						{
							(_95313_rangeN)--;
						}
					}
					else if (_match_expr == _95238_delim) {
						_case_begin_1ac503478:;
						{
							if ((_95313_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1a52684c0_Token>> _96725_l = (*(_95220_tokens)).slice(0LL, _9549_i);;
								jule::Slice<jule::Ptr<_1a52684c0_Token>> _96825_r = (*(_95220_tokens)).slice((_9549_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _96725_l;
								__jule_func_result.__jule_result_arg1 = _96825_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1ac503148:;
				};
			}
			_iter_next_1ac502686:;
			++it;
			_9549_i++;
			goto _iter_begin_1ac502686;
		}
		_iter_end_1ac502686:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1a93b9232_findLowestPrecOp(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _97822_tokens) {
	jule::U8 _98313_prec = 255LLU;;
	jule::I64 _98413_precPos = -1LL;;
	jule::I64 _98613_braceN = 0LL;;
	jule::Bool _98713_skipToNextBraceOpen = false;;
	{
		auto expr = _97822_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5068dd:;
		if (it != expr_end) {
			jule::I64 _9889_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> *_98812_token = it;
			{
				{
					auto &_match_expr{ (*(_98812_token)).get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac50757b:;
						{
							_98713_skipToNextBraceOpen=false;
							goto _case_begin_1ac507603;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac507603:;
						{
							(_98613_braceN)++;
							goto _iter_next_1ac5068dd;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ac50767a:;
						{
							(_98613_braceN)--;
							goto _iter_next_1ac5068dd;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1ac507702:;
						{
							_98713_skipToNextBraceOpen=true;
							goto _iter_next_1ac5068dd;
						}
					}
					_match_end_1ac507339:;
				};
				{
					
					if (_98713_skipToNextBraceOpen) {
						_case_begin_1ac508747:;
						{
							goto _iter_next_1ac5068dd;
						}
					}
					else if ((_9889_i == 0LL)) {
						_case_begin_1ac5087ad:;
						{
							goto _iter_next_1ac5068dd;
						}
					}
					else if ((_98613_braceN > 0LL)) {
						_case_begin_1ac508824:;
						{
							goto _iter_next_1ac5068dd;
						}
					}
					else if ((!(_1a5268eb5_IsBinOp((*(_98812_token)).get()._field_Id)))) {
						_case_begin_1ac50888a:;
						{
							goto _iter_next_1ac5068dd;
						}
					}
					_match_end_1ac508cca:;
				};
				jule::Ptr<_1a52684c0_Token> _101713_left = (*(_97822_tokens))[(_9889_i - 1LL)];;
				if ((_1a5268bc9_IsUnaryOp(_101713_left.get()._field_Id) || (_101713_left.get()._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1ac5068dd;
				};
				if (((_9889_i > 1LL) && (_101713_left.get()._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1a52684c0_Token> _102517_lleft = (*(_97822_tokens))[(_9889_i - 2LL)];;
					if ((_102517_lleft.get()._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*(_98812_token)).get()._field_Id == static_cast<jule::U64>(65LLU)) || ((*(_98812_token)).get()._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1ac5068dd;
						};
					};
				};
				jule::U8 _103413_p = _1a5268833_Prec((*(_98812_token)).ptr());;
				if (((_103413_p != 0LLU) && (_103413_p <= _98313_prec))) {
					_98313_prec=_103413_p;
					_98413_precPos=_9889_i;
				};
			}
			_iter_next_1ac5068dd:;
			++it;
			_9889_i++;
			goto _iter_begin_1ac5068dd;
		}
		_iter_end_1ac5068dd:;
	};
	return _98413_precPos;;
}



inline jule::Ptr<_1a889cd65_IdentExpr> _1a93b94c9_buildIdentExpr(jule::Ptr<_1a52684c0_Token>* _104324_token) {
	return jule::new_ptr<_1a889cd65_IdentExpr>(_1a889cd65_IdentExpr{._field_Token=(*(_104324_token)), ._field_Ident=(*(_104324_token)).get()._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1a52684c0_Token__jule_tuple_int _1a93b9771_getRangeExprTokens(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _105128_tokens) {
	__jule_tuple_sx_1a52684c0_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _105213_rangeN = 0LL;;
	jule::I64 _105313_i = ((*(_105128_tokens)).len() - 1LL);;
	for (; (_105313_i >= 0LL); (_105313_i)--) {
		{
			jule::Ptr<_1a52684c0_Token> _105513_tok = (*(_105128_tokens))[_105313_i];;
			{
				auto &_match_expr{ _105513_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac5100bc:;
					{
						(_105213_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac510188:;
					{
						(_105213_rangeN)--;
					}
				}
				_match_end_1ac510023:;
			};
			if ((_105213_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105128_tokens)).slice(0LL, _105313_i);
				__jule_func_result.__jule_result_arg1 = _105213_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1ac50e242:;
	}
	_iter_end_1ac50e242:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _105213_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a93ba4ca_checkAssignTokens(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1a526ca68_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac599783:;
		if (it != expr_end) {
			jule::Ptr<_1a52684c0_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*(_2112_t)).get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac59a201:;
						{
							(_2013_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac59a278:;
						{
							(_2013_braceN)--;
						}
					}
					_match_end_1ac59a157:;
				};
				{
					
					if ((_2013_braceN < 0LL)) {
						_case_begin_1ac59b466:;
						{
							return false;;
						}
					}
					else if ((_2013_braceN > 0LL)) {
						_case_begin_1ac59aee3:;
						{
							goto _iter_next_1ac599783;
						}
					}
					else if (_1a526d0a7_IsAssignOp((*(_2112_t)).get()._field_Id) || ((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1ac59b059:;
						{
							return true;;
						}
					}
					_match_end_1ac59b3de:;
				};
			}
			_iter_next_1ac599783:;
			++it;
			goto _iter_begin_1ac599783;
		}
		_iter_end_1ac599783:;
	};
	return false;;
}



inline _1a4deb40b_Log _1a93bb6eb_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_1a526d85a_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _1a4deb40b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_1a4deb84b_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_1a52684c0_Token>> _1a93bbbc4_range(jule::I64* _7015_i, jule::U64 _7023_open, jule::U64 _7038_close, jule::Slice<jule::Ptr<_1a52684c0_Token>>* _7059_tokens) {
	if (((*(_7015_i)) >= (*(_7059_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1a52684c0_Token> _749_tok = (*(_7059_tokens))[(*(_7015_i))];;
	if ((_749_tok.get()._field_Id != _7023_open)) {
		return nullptr;;
	};
	((*(_7015_i)))++;
	jule::I64 _7913_rangeN = 1LL;;
	jule::I64 _809_start = (*(_7015_i));;
	for (; ((_7913_rangeN != 0LL) && ((*(_7015_i)) < (*(_7059_tokens)).len())); ((*(_7015_i)))++) {
		{
			jule::Ptr<_1a52684c0_Token> _8213_token = (*(_7059_tokens))[(*(_7015_i))];;
			{
				auto &_match_expr{ _8213_token.get()._field_Id };
				
				if (_match_expr == _7023_open) {
					_case_begin_1ac5a0dc7:;
					{
						(_7913_rangeN)++;
					}
				}
				else if (_match_expr == _7038_close) {
					_case_begin_1ac5a0e93:;
					{
						(_7913_rangeN)--;
					}
				}
				_match_end_1ac5a0d2d:;
			};
		}
	_iter_next_1ac5a0349:;
	}
	_iter_end_1ac5a0349:;;
	return (*(_7059_tokens)).slice(_809_start, ((*(_7015_i)) - 1LL));;
}



inline __jule_tuple_sx_1a52684c0_Token__jule_tuple_sx_1a52684c0_Token _1a93bbe6b_rangeLast(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _10019_tokens) {
	__jule_tuple_sx_1a52684c0_Token__jule_tuple_sx_1a52684c0_Token __jule_func_result;
	if (((*(_10019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1049_first = (*(_10019_tokens))[((*(_10019_tokens)).len() - 1LL)].get()._field_Id;;
	if ((((_1049_first != static_cast<jule::U64>(73LLU)) && (_1049_first != static_cast<jule::U64>(76LLU))) && (_1049_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_10019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _11013_braceN = 0LL;;
	jule::I64 _11113_i = ((*(_10019_tokens)).len() - 1LL);;
	for (; (_11113_i >= 0LL); (_11113_i)--) {
		{
			jule::Ptr<_1a52684c0_Token> _11313_token = (*(_10019_tokens))[_11113_i];;
			{
				auto &_match_expr{ _11313_token.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac5a4dcb:;
					{
						(_11013_braceN)++;
						goto _iter_next_1ac5a40b7;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac5a4e53:;
					{
						(_11013_braceN)--;
					}
				}
				_match_end_1ac5a4c11:;
			};
			if ((_11013_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10019_tokens)).slice(0LL, _11113_i);
				__jule_func_result.__jule_result_arg1 = (*(_10019_tokens)).slice(_11113_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1ac5a40b7:;
	}
	_iter_end_1ac5a40b7:;;
	__jule_func_result.__jule_result_arg0 = (*(_10019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log _1a93bc356_parts(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _13815_tokens, jule::U64 _13833_id, jule::Bool _13846_exprMust) {
	__jule_tuple_ssx_1a52684c0_Token__jule_tuple_s_1a4deb40b_Log __jule_func_result;
	if (((*(_13815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> _14313_parts = nullptr;;
	jule::Slice<_1a4deb40b_Log> _14413_errors = nullptr;;
	jule::I64 _14613_rangeN = 0LL;;
	jule::I64 _14713_last = 0LL;;
	{
		auto expr = _13815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5a84c8:;
		if (it != expr_end) {
			jule::I64 _1489_i = it - expr->begin();
			jule::Ptr<_1a52684c0_Token> _14812_token = *it;
			{
				{
					auto &_match_expr{ _14812_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac5a9265:;
						{
							(_14613_rangeN)++;
							goto _iter_next_1ac5a84c8;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac5a92dc:;
						{
							(_14613_rangeN)--;
						}
					}
					_match_end_1ac5a9045:;
				};
				if ((_14613_rangeN > 0LL)) {
					goto _iter_next_1ac5a84c8;
				};
				if ((_14812_token.get()._field_Id == _13833_id)) {
					if ((_13846_exprMust && ((_1489_i - _14713_last) <= 0LL))) {
						_1a4deb40b_Log _16721_err = _1a93bb6eb_makeErr(_14812_token.get()._field_Row, _14812_token.get()._field_Column, &(_14812_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_1a4deb40b_Log> &__jule_push_dest = _14413_errors; __jule_push_dest.push(_16721_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> &__jule_push_dest = _14313_parts; __jule_push_dest.push((*(_13815_tokens)).slice(_14713_last, _1489_i)); };
					_14713_last=static_cast<jule::I64>((_1489_i + 1LL));
				};
			}
			_iter_next_1ac5a84c8:;
			++it;
			_1489_i++;
			goto _iter_begin_1ac5a84c8;
		}
		_iter_end_1ac5a84c8:;
	};
	if ((_14713_last < (*(_13815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> &__jule_push_dest = _14313_parts; __jule_push_dest.push((*(_13815_tokens)).slice(_14713_last)); };
	} else if ((!(_13846_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1a52684c0_Token>>> &__jule_push_dest = _14313_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1a52684c0_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14313_parts;
	__jule_func_result.__jule_result_arg1 = _14413_errors;
	return __jule_func_result;;
}



inline jule::U64 _1a93bc5ed_getCloseOfBrace(jule::U64 _18420_left) {
	{
		auto &_match_expr{ _18420_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1ac5ac7a7:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ac5ac81d:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1ac5ac884:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1ac5aa73e:;
			{
				return _18420_left;;
			}
		}
		_match_end_1ac5aa6d9:;
	};
}



inline _1a4deb40b_Log _1a93bc9d8_compilerErr(jule::Ptr<_1a52684c0_Token>* _19717_token, jule::Str* _19733_fmt, jule::Slice<jule::Any> _19746_args) {
	return _1a4deb40b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_19717_token)).get()._field_Row, ._field_Column=(*(_19717_token)).get()._field_Column, ._field_Path=(*(_19717_token)).get()._field_File.get()._field_Path, ._field_Text=_1a4deb84b_Logf((*(_19733_fmt)), _19746_args), ._field_Line=_1a526e76d_GetRow((*(_19717_token)).get()._field_File.ptr(), (*(_19717_token)).get()._field_Row), };;
}



inline void _1a93bcd3a_pushSuggestion(_1a4deb40b_Log* _20830_log, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	_20830_log->_field_Suggestion=_1a4deb84b_Logf(_20841_fmt, _20854_args);
}



inline jule::Str _1a93bd1ae_tokstoa(jule::Slice<jule::Ptr<_1a52684c0_Token>>* _21213_tokens) {
	jule::I64 _21313_n = 0LL;;
	{
		auto expr = _21213_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5b1239:;
		if (it != expr_end) {
			jule::Ptr<_1a52684c0_Token> *_21412_token = it;
			{
				_21313_n+=(*(_21412_token)).get()._field_Kind.len();
			}
			_iter_next_1ac5b1239:;
			++it;
			goto _iter_begin_1ac5b1239;
		}
		_iter_end_1ac5b1239:;
	};
	jule::Str _21713_s = jule::Str::alloc(0LL, _21313_n);;
	{
		auto expr = _21213_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5b1811:;
		if (it != expr_end) {
			jule::Ptr<_1a52684c0_Token> *_21812_token = it;
			{
				_21713_s+=(*(_21812_token)).get()._field_Kind;
			}
			_iter_next_1ac5b1811:;
			++it;
			goto _iter_begin_1ac5b1811;
		}
		_iter_end_1ac5b1811:;
	};
	return _21713_s;;
}



inline jule::Bool _1a93cd301_isPub(jule::Str* _195311_ident) {
	jule::I32 _195410_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1d0b1884a_DecodeRuneStr((*(_195311_ident)));
		_195410_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1a4d25489_IsUpper(_195410_r);;
}



inline jule::Ptr<_1a88970e5_TypeDecl> _1a93cdb92_buildVoidType(void) {
	return jule::new_ptr<_1a88970e5_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a8b19862_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1ac73b5e5:;
			{
				__jule_func_result.__jule_result_arg0=_1a4dee71c_IsWindows(_1a4e911e8_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1ac73aeda:;
			{
				__jule_func_result.__jule_result_arg0=_1a4dee9c5_IsDarwin(_1a4e911e8_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1ac73b051:;
			{
				__jule_func_result.__jule_result_arg0=_1a4deec6c_IsLinux(_1a4e911e8_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1ac73b0b7:;
			{
				__jule_func_result.__jule_result_arg0=_1a4e00872_IsUnix(_1a4e911e8_Os);
			}
		}
		else {
			_case_begin_1ac73a8e1:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ac73abee:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1a8b14928_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1ac73d20c:;
			{
				__jule_func_result.__jule_result_arg0=_1a4e0008b_IsI386(_1a4e914b2_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1ac73d273:;
			{
				__jule_func_result.__jule_result_arg0=_1a4e00333_IsAmd64(_1a4e914b2_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1ac73d2d9:;
			{
				__jule_func_result.__jule_result_arg0=_1a4e005ca_IsArm64(_1a4e914b2_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1ac73d350:;
			{
				__jule_func_result.__jule_result_arg0=_1a4e00e8d_Is64Bit(_1a4e914b2_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1ac73d3b6:;
			{
				__jule_func_result.__jule_result_arg0=_1a4e00be6_Is32Bit(_1a4e914b2_Arch);
			}
		}
		else {
			_case_begin_1ac73cb24:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ac73ce32:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a8b14b37_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1a4d658c5_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _1a4d65386_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _1a4d5d604_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8b19862_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8b14928_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I64>(_1a4d5d604_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8b19862_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8b14928_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8b14928_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8b19862_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a8b19862_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1a8b2e723_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1a4e911e8_Os); };
	if (_1a4e00872_IsUnix(_1a4e911e8_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str("unix", 4)); };
	};
}



inline void _1a8b2e976_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1a4e914b2_Arch); };
	if (_1a4e00e8d_Is64Bit(_1a4e914b2_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x64", 3)); };
	};
	if (_1a4e00be6_Is32Bit(_1a4e914b2_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x32", 3)); };
	};
}



inline void _1a8b2ec2e_initVars(jule::Slice<jule::Str>* _5518_vars, _1a8b2e415_CompileInfo* _5532_info) {
	_1a8b2e723_setOsVars(_5518_vars);
	_1a8b2e976_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ac748e0a:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ac748e71:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("gcc", 3)); };
			}
		}
		_match_end_1ac748d94:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ac74979b:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ac749812:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ac749878:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp20", 5)); };
			}
		}
		_match_end_1ac748514:;
	};
}



inline jule::Slice<jule::U8> _1a93d2899_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1d0a33853_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1a4e9015e_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1a4deb40b_Log _1a93d2b52_flatCompilerErr(jule::Str _4120_text) {
	return _1a4deb40b_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1a93d7063_pushPasses(jule::Ptr<_1a8940e5d_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7777eb:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac778269:;
					if (it != expr_end) {
						_1a88d4198_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1ac778269;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac778b82:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1ac778269;
										};
									}
									_iter_next_1ac778b82:;
									++it;
									goto _iter_begin_1ac778b82;
								}
								_iter_end_1ac778b82:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1ac778269:;
						++it;
						goto _iter_begin_1ac778269;
					}
					_iter_end_1ac778269:;
				};
			}
			_iter_next_1ac7777eb:;
			++it;
			goto _iter_begin_1ac7777eb;
		}
		_iter_end_1ac7777eb:;
	};
}



inline jule::Slice<jule::Str> _1a93d73e8_getAllUniquePasses(jule::Ptr<_1a8940e5d_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1a893d323_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1a93d7063_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac77a678:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_Binded))) {
					_1a93d7063_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1ac77a678:;
			++it;
			goto _iter_begin_1ac77a678;
		}
		_iter_end_1ac77a678:;
	};
	return _12913_passes;;
}



inline _1a8b2e415_CompileInfo _1a93d75e6_buildCompileInfo(void) {
	_1a8b2e415_CompileInfo _14213_info = _1a8b2e415_CompileInfo{._field_Prod=_1ce99b3e3_Production, ._field_Test=_1ce99a986_Test, };;
	{
		auto &_match_expr{ _1ce998c09_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ac77b943:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ac77b9a9:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1ac77b8bb:;
	};
	{
		auto &_match_expr{ _1ce99a1a0_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ac77a502:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ac77bd50:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ac77bdb6:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1ac77c25c:;
	};
	return _14213_info;;
}



inline void _1a947e715_EliminateDefines(jule::Ptr<_1a93d5847_IR>* _29026_ir) {
	jule::Ptr<_1a944a1b4_ObjectDeadCode> _29113_ocd = static__1a947c081_new(_29026_ir);;
	_1a947e407_elimanate(_29113_ocd);
}



inline jule::Ptr<_1a88645ce_Directive> _1a947ea9a_findDirective(jule::Slice<jule::Ptr<_1a88645ce_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7b5817:;
		if (it != expr_end) {
			jule::Ptr<_1a88645ce_Directive> _29717_dr = *it;
			{
				if ((_29717_dr.get()._field_Tag.get()._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1ac7b5817:;
			++it;
			goto _iter_begin_1ac7b5817;
		}
		_iter_end_1ac7b5817:;
	};
	return nullptr;;
}



inline jule::Bool _1a947eddb_hasDirective(jule::Slice<jule::Ptr<_1a88645ce_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1a947ea9a_findDirective(_30618_directives, _30649_tag) != nullptr);;
}



inline jule::Bool _1a9480271_isTraitMethod(jule::Ptr<_1a88b9b51_StructIns>* _31123_owner, jule::Ptr<_1a88cee0d_FnIns>* _31143_f) {
	{
		auto expr = &((*(_31123_owner)).get()._field_Decl.get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7b6e9a:;
		if (it != expr_end) {
			jule::Ptr<_1a88de47d_Trait> _31217_t = *it;
			{
				if ((_1a88e032a_FindMethod(_31217_t.ptr(), (*(_31143_f)).get()._field_Decl.get()._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1ac7b6e9a:;
			++it;
			goto _iter_begin_1ac7b6e9a;
		}
		_iter_end_1ac7b6e9a:;
	};
	return false;;
}



inline void _1a9483d79_eliminateDeadCodeOfScope(jule::Ptr<_1a891e38c_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1a8921acb_Label>> _2429_labels = jule::Slice<jule::Ptr<_1a8921acb_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1a8921db7_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1a8921db7_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1a9480e75_scopeDeadCode> _24413_sdc = jule::new_ptr<_1a9480e75_scopeDeadCode>(_1a9480e75_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a8921acb_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a8921db7_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1a9483a49_optimizeStmts(_24413_sdc);
	};
}



inline void _1a9484110_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a88cc25c_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8050a4:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac805659:;
					if (it != expr_end) {
						jule::Ptr<_1a88cee0d_FnIns> _25621_ins = *it;
						{
							_1a9483d79_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1ac805659:;
						++it;
						goto _iter_begin_1ac805659;
					}
					_iter_end_1ac805659:;
				};
			}
			_iter_next_1ac8050a4:;
			++it;
			goto _iter_begin_1ac8050a4;
		}
		_iter_end_1ac8050a4:;
	};
}



inline void _1a9484352_eliminateFunctionsScopePackage(jule::Ptr<_1a8940e5d_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac805add:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _26317_f = *it;
			{
				_1a9484110_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_1ac805add:;
			++it;
			goto _iter_begin_1ac805add;
		}
		_iter_end_1ac805add:;
	};
}



inline void _1a94845e9_eliminateScopePackage(jule::Ptr<_1a8940e5d_Package>* _26831_pkg) {
	_1a9484352_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1a9484808_EliminateScopes(jule::Ptr<_1a93d5847_IR>* _27325_ir) {
	jule::I64 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1a893d323_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_Binded))) {
				_1a94845e9_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_1ac807051:;
	}
	_iter_end_1ac807051:;;
	_1a94845e9_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _1a878a7be_isStdPackage(jule::Str _44517_f, jule::Str _44525_p) {
	return _1a4d5a238_HasPrefix(_44517_f, _1a4d650de_Join(jule::Slice<jule::Str>::make({_1a4e90648_PathStdlib,_44525_p})));;
}



inline jule::Bool _1a878aacc_isConstantValidConditionalCase(jule::Ptr<_1a891e788_If>* _44936_i) {
	{
		auto &_match_expr{ (*(_44936_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac881a04:;
			{
				jule::Ptr<_1a55406ba_Const> _45213_c = (*(_44936_i)).get()._field_Expr.cast_ptr<_1a55406ba_Const>(&__jule_any_type19);;
				return (_1a5544834_IsBool(_45213_c.ptr()) && _1a554248b_ReadBool(_45213_c.ptr()));;
			}
		}
		_match_end_1ac88188e:;
	};
	return false;;
}



inline jule::Bool _1a878ad85_isUnreachableExpr(jule::Any* _45823_expr) {
	{
		auto &_match_expr{ (*(_45823_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac88241c:;
			{
				jule::Ptr<_1a55406ba_Const> _46113_c = (*(_45823_expr)).cast_ptr<_1a55406ba_Const>(&__jule_any_type19);;
				return (_1a5544834_IsBool(_46113_c.ptr()) && (!(_1a554248b_ReadBool(_46113_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac882494:;
			{
				jule::Ptr<_1a88be01d_BinopExprModel> _46413_m = (*(_45823_expr)).cast_ptr<_1a88be01d_BinopExprModel>(&__jule_any_type114);;
				if ((_46413_m.get()._field_Op.get()._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1a878ad85_isUnreachableExpr(&(_46413_m.get()._field_Left.get()._field_Model)) || _1a878ad85_isUnreachableExpr(&(_46413_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_1ac881ac0:;
	};
	return false;;
}



inline jule::Bool _1a8a5763a_isConstantValidMatchCase(jule::Ptr<_1a8923bee_Case>* _47330_case) {
	{
		auto expr = &((*(_47330_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac883792:;
		if (it != expr_end) {
			jule::Ptr<_1a865dbe2_Data> *_47412_expr = it;
			{
				if (((_1a865e50b_IsConst((*(_47412_expr)).ptr()) && _1a5544834_IsBool((*(_47412_expr)).get()._field_Constant.ptr())) && _1a554248b_ReadBool((*(_47412_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1ac883792:;
			++it;
			goto _iter_begin_1ac883792;
		}
		_iter_end_1ac883792:;
	};
	return false;;
}



inline jule::Bool _1a8a5787c_isUnreachableConditionalCase(jule::Ptr<_1a891e788_If>* _48234_i) {
	return _1a878ad85_isUnreachableExpr(&((*(_48234_i)).get()._field_Expr));;
}



inline jule::Bool _1a8a57b35_isUnreachableMatchCase(jule::Ptr<_1a8923bee_Case>* _48628_case) {
	{
		auto expr = &((*(_48628_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac887169:;
		if (it != expr_end) {
			jule::Ptr<_1a865dbe2_Data> *_48712_expr = it;
			{
				if ((!(_1a878ad85_isUnreachableExpr(&((*(_48712_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1ac887169:;
			++it;
			goto _iter_begin_1ac887169;
		}
		_iter_end_1ac887169:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1a8a60885_checkForBitShiftOpt(jule::Ptr<_1a88bda56_OperandExprModel>* _48225_l, jule::Ptr<_1a88bda56_OperandExprModel>* _48248_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1a553eae8_IsInt(_1a86aeb55_Str((*(_48225_l)).get()._field_Kind.ptr())))) || (!(_1a553eae8_IsInt(_1a86aeb55_Str((*(_48248_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_48248_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac8c2c10:;
			{
				goto _match_end_1ac8c3639;
			}
		}
		else {
			_case_begin_1ac8c377c:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1ac8c3639:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1a5542e3c_AsU64((*(_48248_r)).get()._field_Model.cast_ptr<_1a55406ba_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4969_j = _1a54e136e_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4979_z = static_cast<jule::U64>(_4969_j);;
	if ((static_cast<jule::F64>(_4979_z) != _4969_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4979_z;
	return __jule_func_result;;
}



inline jule::Bool _1a8a60c1a_areSameLvalueExprModel(jule::Any* _50528_l, jule::Any* _50543_r) {
	{
		auto &_match_expr{ (*(_50528_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac8c67b3:;
			{
				return ((*(_50543_r)) == (*(_50528_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ac8c683a:;
			{
				{
					auto &_match_expr{ (*(_50543_r)) };
					
					if (_match_expr.type == &__jule_any_type71) {
						_case_begin_1ac8c71ba:;
						{
							goto _match_end_1ac8c7253;
						}
					}
					else {
						_case_begin_1ac8c72a8:;
						{
							return false;;
						}
					}
					_match_end_1ac8c7253:;
				};
				jule::Ptr<_1a88c37c5_StructSubIdentExprModel> _51813_lsi = (*(_50528_l)).cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71);;
				jule::Ptr<_1a88c37c5_StructSubIdentExprModel> _51913_rsi = (*(_50543_r)).cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_51813_lsi.get()._field_Field != _51913_rsi.get()._field_Field)) {
					return false;;
				};
				return _1a8a60c1a_areSameLvalueExprModel(&(_51813_lsi.get()._field_Expr.get()._field_Model), &(_51913_rsi.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ac8c68d4:;
			{
				{
					auto &_match_expr{ (*(_50543_r)) };
					
					if (_match_expr.type == &__jule_any_type74) {
						_case_begin_1ac8c9288:;
						{
							jule::Ptr<_1a88be3c5_UnaryExprModel> _53117_ul = (*(_50528_l)).cast_ptr<_1a88be3c5_UnaryExprModel>(&__jule_any_type74);;
							jule::Ptr<_1a88be3c5_UnaryExprModel> _53217_ur = (*(_50543_r)).cast_ptr<_1a88be3c5_UnaryExprModel>(&__jule_any_type74);;
							if (((_53117_ul.get()._field_Op.get()._field_Id != _53217_ur.get()._field_Op.get()._field_Id) || (_53117_ul.get()._field_Op.get()._field_Kind != _53217_ur.get()._field_Op.get()._field_Kind))) {
								return false;;
							};
							return _1a8a60c1a_areSameLvalueExprModel(&(_53117_ul.get()._field_Expr.get()._field_Model), &(_53217_ur.get()._field_Expr.get()._field_Model));;
						}
					}
					_match_end_1ac8c8a29:;
				};
			}
		}
		_match_end_1ac8c6692:;
	};
	return false;;
}



inline void _1a8a61424_doInternalNosafeStobs(_1a8a58905_exprOptimizer* _727_op, _1a93d98b2_stdCacheData* _747_data, jule::Ptr<_1a88c0e54_FnCallExprModel>* _772_m) {
	jule::Any _813_model = jule::Any(jule::new_ptr<_1a8785a1c_InlineStdInternalNosafeStobs>(_1a8785a1c_InlineStdInternalNosafeStobs{._field_Str=(*(_772_m)).get()._field_Args[0LL]}), &__jule_any_type131);;
	{
		(*((*(_727_op))._field_model))=(*(((jule::Any*)((&(_813_model))))));
	};
}



inline void _1a93da044_buildCache(jule::Ptr<_1a93d5847_IR>* _2720_ir) {
	_1a93da286_buildStdInternalNosafeCache(_2720_ir);
}



inline void _1a93da286_buildStdInternalNosafeCache(jule::Ptr<_1a93d5847_IR>* _3137_ir) {
	jule::Ptr<_1a8940e5d_Package> _3213_p = _1a93dacc0_getPackage(_3137_ir, &(_1a93d94b6_stdPackageInternalNosafe));;
	if ((_3213_p == nullptr)) {
		return;;
	};
	_1a93da5e9_pushCache(&(_3213_p), jule::Str("Stobs", 5), jule::Fn<void(_1a8a58905_exprOptimizer*,_1a93d98b2_stdCacheData*,jule::Ptr<_1a88c0e54_FnCallExprModel>*)>(_1a8a61424_doInternalNosafeStobs));
}



inline void _1a93da5e9_pushCache(jule::Ptr<_1a8940e5d_Package>* _4119_p, jule::Str _4132_ident, jule::Fn<void(_1a8a58905_exprOptimizer*,_1a93d98b2_stdCacheData*,jule::Ptr<_1a88c0e54_FnCallExprModel>*)> _4144_do) {
	jule::Ptr<_1a88cee0d_FnIns> _4213_f = _1a93da97e_getFunc(_4119_p, &(_4132_ident));;
	_1a93d9ce1_stdCache[static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_4213_f))]=_1a93d98b2_stdCacheData{._field_f=_4213_f, ._field_do=_4144_do};
}



inline jule::Ptr<_1a88cee0d_FnIns> _1a93da97e_getFunc(jule::Ptr<_1a8940e5d_Package>* _5017_p, jule::Str* _5031_ident) {
	;
	jule::Ptr<_1a88cc25c_Fn> _5213_f = _1a894239e_FindFn((*(_5017_p)).ptr(), (*(_5031_ident)), false);;
	if ((_5213_f == nullptr)) {
		return nullptr;;
	};
	return _5213_f.get()._field_Instances[0LL];;
}



inline jule::Ptr<_1a8940e5d_Package> _1a93dacc0_getPackage(jule::Ptr<_1a93d5847_IR>* _5920_ir, jule::Str* _5930_path) {
	{
		auto expr = &((*(_5920_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9274e5:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> _6017_u = *it;
			{
				if ((_6017_u.get()._field_Std && (_6017_u.get()._field_LinkPath == (*(_5930_path))))) {
					return _6017_u.get()._field_Package;;
				};
			}
			_iter_next_1ac9274e5:;
			++it;
			goto _iter_begin_1ac9274e5;
		}
		_iter_end_1ac9274e5:;
	};
	return nullptr;;
}



inline void _1a93dd410_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _339_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	jule::Bool _349_l2 = (_3217_level >= static_cast<jule::I64>(2LL));;
	_1a93db595_Copy=_339_l1;
	_1a93db8a3_Deadcode=_339_l1;
	_1a93dbb6c_Append=_339_l1;
	_1a93dbe7a_Math=_339_l1;
	_1a93dc244_Access=_339_l1;
	_1a93dc50d_Inline=_339_l1;
	_1a93dc7c7_Ptr=_339_l1;
	_1a93dcba1_Cond=_339_l1;
	_1a93dce6a_Str=_339_l1;
	_1a93dd234_StdInternalNosafe=_349_l2;
}



inline void _1a948db31_detectEnabled(void) {
	_1a948b733_exprEnabled=((((_1a93dc7c7_Ptr || _1a93dbe7a_Math) || _1a93dc244_Access) || _1a93dcba1_Cond) || _1a93dd234_StdInternalNosafe);
	_1a948ba0d_scopeEnabled=(((_1a93dcba1_Cond || _1a93dbb6c_Append) || _1a93db595_Copy) || _1a93dce6a_Str);
	_1a948bcc7_stdEnabled=_1a93dd234_StdInternalNosafe;
}



inline void _1a8027523_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1a4e9015e_Exit(1LL);
}



inline jule::U64 _1a9da1840_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1a960b386_isCopyOptimizable(jule::Ptr<_1a865dbe2_Data>* _81623_expr) {
	if ((!((*(_81623_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81623_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aca193a6:;
			{
				return false;;
			}
		}
		_match_end_1aca19351:;
	};
	return true;;
}



inline jule::Bool _1a960b71b_isIterCopyOptimizable(jule::Ptr<_1a865dbe2_Data>* _82727_expr, jule::Ptr<_1a8966901_Var>* _82741_v) {
	if (((!((*(_82727_expr)).get()._field_Lvalue)) && (!(_1a86b1041_Mutable((*(_82727_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82741_v)).get()._field_Mutable)) && (!((*(_82727_expr)).get()._field_Mutable)));;
}



inline jule::Str _1a961b53e_decomposeCommonEsq(jule::U8 _154723_b) {
	{
		auto &_match_expr{ _154723_b };
		
		if (_match_expr == '\\') {
			_case_begin_1acab7223:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1acab11a6:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1acab70e1:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1acab6bd4:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1acab6c4a:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1acab6cb1:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1acab6d27:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1acab7289:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1acab7300:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1acab7366:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1acab6ad5:;
			{
				return jule::Str();;
			}
		}
		_match_end_1acab69a3:;
	};
}



inline jule::Str _1a961b82a_sbtoa(jule::U8 _157410_b) {
	if ((_157410_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_157410_b < 128LLU)) {
		jule::Str _157913_seq = _1a961b53e_decomposeCommonEsq(_157410_b);;
		if ((!(_157913_seq.empty()))) {
			return _157913_seq;;
		};
		if (((32LL <= _157410_b) && (_157410_b <= 126LLU))) {
			return jule::Str::from_byte(_157410_b);;
		};
	};
	jule::Str _15879_seq = _1a5530600_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_157410_b)), 8LL);;
	if ((_15879_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15879_seq);;
	};
	return (jule::Str("\\", 1) + _15879_seq);;
}



inline jule::Str _1a961bac2_cstrBytes(jule::Slice<jule::U8> _159414_bytes) {
	jule::Str _159513_lit = jule::Str::alloc(0LL, _159414_bytes.len());;
	{
		auto expr = &(_159414_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acabbec5:;
		if (it != expr_end) {
			jule::U8 *_159612_b = it;
			{
				_159513_lit+=_1a961b82a_sbtoa((*(_159612_b)));
			}
			_iter_next_1acabbec5:;
			++it;
			goto _iter_begin_1acabbec5;
		}
		_iter_end_1acabbec5:;
	};
	return _159513_lit;;
}



inline jule::Str _1a961bde1_cstrLit(jule::Slice<jule::U8> _160212_bytes) {
	return ((jule::Str("\"", 1) + _1a961bac2_cstrBytes(_160212_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1a961c1ee_ftoa(jule::F64 _16069_f, jule::I64 _160617_bitsize) {
	if ((_160617_bitsize != 32LL)) {
		if ((_16069_f == static_cast<jule::F64>(static_cast<jule::I64>(_16069_f)))) {
			return _1a961c496_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_16069_f)));;
		};
		if ((_16069_f == static_cast<jule::F64>(static_cast<jule::U64>(_16069_f)))) {
			return _1a961c73d_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_16069_f)));;
		};
	};
	jule::Str _161513_m = _1a551a0ce_FmtFloat(_16069_f, 'f', -1LL, _160617_bitsize);;
	if ((!(_1a4d5ee85_Contains(_161513_m, jule::Str(".", 1))))) {
		(_161513_m).append(".0", 2);
	};
	return _161513_m;;
}



inline jule::Str _1a961c496_itoa(jule::I64 _16229_x) {
	{
		
		if ((_16229_x == jule::MAX_I64)) {
			_case_begin_1acac044b:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_16229_x == jule::MIN_I64)) {
			_case_begin_1acac0528:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1acac033b:;
	};
	jule::Str _16309_fmt = _1a5530985_FmtInt(_16229_x, 10LL);;
	if (_1a4e00e8d_Is64Bit(jule::Str("arm64", 5))) {
		return (_16309_fmt + jule::Str("LL", 2));;
	};
	return (_16309_fmt + jule::Str("L", 1));;
}



inline jule::Str _1a961c73d_utoa(jule::U64 _16379_x) {
	{
		
		if ((_16379_x == jule::MAX_U64)) {
			_case_begin_1acac1d21:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1acac16e4:;
	};
	jule::Str _16439_fmt = _1a5530600_FmtUint(_16379_x, 10LL);;
	if (_1a4e00e8d_Is64Bit(jule::Str("arm64", 5))) {
		return (_16439_fmt + jule::Str("LLU", 3));;
	};
	return (_16439_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1a961cae5_isForwarded(jule::Ptr<_1a891e38c_Scope>* _165017_s) {
	jule::Any _16519_last = (*(_165017_s)).get()._field_Stmts[((*(_165017_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16519_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1acac2b35:;
			{
				{
					auto &_match_expr{ _16519_last.cast_ptr<_1a865dbe2_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1acac3d78:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1acac47a2:;
						{
							return false;;
						}
					}
					_match_end_1acac44e9:;
				};
			}
		}
		else {
			_case_begin_1acac3b25:;
			{
				return true;;
			}
		}
		_match_end_1acac3a48:;
	};
}



inline jule::Bool _1a961cdae_isBuiltinCallHasDebuginf(jule::Ptr<_1a88c0e54_FnCallExprModel>* _166530_m) {
	if ((!(_1a88d1294_IsBuiltin((*(_166530_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_166530_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1acac49b1:;
			{
				jule::Ptr<_1a88c4881_CommonSubIdentExprModel> _167113_csie = (*(_166530_m)).get()._field_Expr.cast_ptr<_1a88c4881_CommonSubIdentExprModel>(&__jule_any_type73);;
				return _167113_csie.get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_1acac5176:;
			{
				return false;;
			}
		}
		_match_end_1acac5462:;
	};
}



inline jule::Bool _1a961d0e0_isExprComesFromBind(jule::Ptr<_1a865dbe2_Data>* _167825_d) {
	{
		auto &_match_expr{ (*(_167825_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acac5ebd:;
			{
				return (*(_167825_d)).get()._field_Model.cast_ptr<_1a8966901_Var>(&__jule_any_type8).get()._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1acac6a29:;
			{
				return (*(_167825_d)).get()._field_Model.cast_ptr<_1a88c37c5_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_Binded;;
			}
		}
		else {
			_case_begin_1acac5709:;
			{
				return false;;
			}
		}
		_match_end_1acac56a4:;
	};
}



inline jule::Bool _1a961d387_isAny(jule::Ptr<_1a86ae79d_TypeKind>* _169015_t) {
	if ((_1a86b296b_TypeEnum((*(_169015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a86b7003_Prim> _16949_prim = _1a86b1eba_Prim((*(_169015_t)).ptr());;
	return ((_16949_prim != nullptr) && _1a86ba468_IsAny(_16949_prim.ptr()));;
}



inline void _1a9db52c1_iterFiles(jule::Ptr<_1a8940e5d_Package>* _138519_pkg, jule::Fn<void(jule::Ptr<_1a89ab380_SymbolTable>*)> _138534_f) {
	{
		auto expr = &((*(_138519_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc46072:;
		if (it != expr_end) {
			jule::Ptr<_1a89ab380_SymbolTable> _138617_file = *it;
			{
				_138534_f(&(_138617_file));
			}
			_iter_next_1acc46072:;
			++it;
			goto _iter_begin_1acc46072;
		}
		_iter_end_1acc46072:;
	};
}



inline jule::Str _1a9db55ac_concatAllParts(jule::Slice<jule::Ptr<_1a52684c0_Token>> _139219_parts) {
	jule::I64 _139313_n = 0LL;;
	{
		auto expr = &(_139219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc47161:;
		if (it != expr_end) {
			jule::Ptr<_1a52684c0_Token> *_139412_part = it;
			{
				_139313_n+=(*(_139412_part)).get()._field_Kind.len();
			}
			_iter_next_1acc47161:;
			++it;
			goto _iter_begin_1acc47161;
		}
		_iter_end_1acc47161:;
	};
	if ((_139313_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _140013_s = jule::Str::alloc(0LL, _139313_n);;
	{
		auto expr = &(_139219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc46a12:;
		if (it != expr_end) {
			jule::Ptr<_1a52684c0_Token> *_140112_p = it;
			{
				_140013_s+=(*(_140112_p)).get()._field_Kind;
			}
			_iter_next_1acc46a12:;
			++it;
			goto _iter_begin_1acc46a12;
		}
		_iter_end_1acc46a12:;
	};
	return _140013_s;;
}



inline jule::Bool _1a9db58ed_containsTraitMethod(jule::Ptr<_1a88de47d_Trait>* _140829_t, jule::Str* _140841_ident) {
	{
		auto expr = &((*(_140829_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc48aad:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _140912_m = *it;
			{
				if ((_140912_m.get()._field_Ident == (*(_140841_ident)))) {
					return true;;
				};
			}
			_iter_next_1acc48aad:;
			++it;
			goto _iter_begin_1acc48aad;
		}
		_iter_end_1acc48aad:;
	};
	return false;;
}



inline void _1a9db5bea_pushMethodsFromInherit(jule::Ptr<_1a88de47d_Trait>* _142032_dest, jule::Ptr<_1a88de47d_Trait>* _142051_src) {
	_1a9db5ec5_pushMethodsFromInherits(_142032_dest, _142051_src);
	{
		auto expr = &((*(_142051_src)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc49c68:;
		if (it != expr_end) {
			jule::Ptr<_1a88cc25c_Fn> _142217_m = *it;
			{
				if ((!(_1a9db58ed_containsTraitMethod(_142032_dest, &(_142217_m.get()._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1a88cc25c_Fn>> &__jule_push_dest = (*(_142032_dest)).get()._field_Methods; __jule_push_dest.push(_142217_m); };
				};
			}
			_iter_next_1acc49c68:;
			++it;
			goto _iter_begin_1acc49c68;
		}
		_iter_end_1acc49c68:;
	};
}



inline void _1a9db5ec5_pushMethodsFromInherits(jule::Ptr<_1a88de47d_Trait>* _143133_dest, jule::Ptr<_1a88de47d_Trait>* _143152_src) {
	{
		auto expr = &((*(_143152_src)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc4a087:;
		if (it != expr_end) {
			jule::Ptr<_1a86b6651_TypeSymbol> _143217_inh = *it;
			{
				jule::Ptr<_1a88de47d_Trait> _143317_t2 = _1a86b3681_Trait(_143217_inh.get()._field_Kind.ptr());;
				_1a9db5bea_pushMethodsFromInherit(_143133_dest, &(_143317_t2));
			}
			_iter_next_1acc4a087:;
			++it;
			goto _iter_begin_1acc4a087;
		}
		_iter_end_1acc4a087:;
	};
}



inline jule::Bool _1a9db627d_isOpMethod(jule::Ptr<_1a88cc25c_Fn>* _143916_m) {
	if ((((*(_143916_m)).get()._field_Generics.len() > 0LL) || ((*(_143916_m)).get()._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _14439_mi = (*(_143916_m)).get()._field_Instances[0LL];;
	;
	;
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a9db6525_isHeadDecl(jule::Ptr<_1a88cc25c_Fn>* _145520_m) {
	if ((((*(_145520_m)).get()._field_Generics.len() > 0LL) || ((*(_145520_m)).get()._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1a9db627d_isOpMethod(_145520_m)) {
		return true;;
	};
	jule::Ptr<_1a88cee0d_FnIns> _146213_mi = (*(_145520_m)).get()._field_Instances[0LL];;
	;
	return static__1a8967ccb_Dispose(_1a88baaec_FindMethod(_146213_mi.get()._field_Owner.ptr(), jule::Str("Dispose", 7), false));;
}



inline jule::Ptr<_1a88645ce_Directive> _1a9dc47b9_findDirective(jule::Slice<jule::Ptr<_1a88645ce_Directive>>* _46623_directives, jule::Str _46654_tag) {
	{
		auto expr = _46623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd49780:;
		if (it != expr_end) {
			jule::Ptr<_1a88645ce_Directive> _46717_dr = *it;
			{
				if ((_46717_dr.get()._field_Tag.get()._field_Kind == _46654_tag)) {
					return _46717_dr;;
				};
			}
			_iter_next_1acd49780:;
			++it;
			goto _iter_begin_1acd49780;
		}
		_iter_end_1acd49780:;
	};
	return nullptr;;
}



inline jule::Bool _1a9dc4b4e_hasDirective(jule::Slice<jule::Ptr<_1a88645ce_Directive>>* _47618_directives, jule::Str _47649_tag) {
	return (_1a9dc47b9_findDirective(_47618_directives, _47649_tag) != nullptr);;
}



inline jule::Bool _1a9dc4de6_shouldInitialized(jule::Ptr<_1a86ae79d_TypeKind>* _48327_t) {
	jule::Ptr<_1a86b7003_Prim> _4849_prim = _1a86b1eba_Prim((*(_48327_t)).ptr());;
	if ((_4849_prim != nullptr)) {
		return ((!(_1a86ba468_IsAny(_4849_prim.ptr()))) && (!(_1a86ba204_IsStr(_4849_prim.ptr()))));;
	};
	{
		
		if ((_1a86b222e_Sptr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1acd4c497:;
			{
				return false;;
			}
		}
		else if ((_1a86b38e5_Map((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1acd4c08a:;
			{
				return false;;
			}
		}
		else if ((_1a86b2e44_Slc((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1acd4c112:;
			{
				return false;;
			}
		}
		else if ((_1a86b3681_Trait((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1acd4c222:;
			{
				return false;;
			}
		}
		else if ((_1a86b31a8_Fn((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1acd4c288:;
			{
				return false;;
			}
		}
		else if ((_1a86b2bd0_Arr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1acd4c2ee:;
			{
				jule::Ptr<_1a86bd35b_Arr> _50017_arr = _1a86b2bd0_Arr((*(_48327_t)).ptr());;
				return _1a9dc4de6_shouldInitialized(&(_50017_arr.get()._field_Elem));;
			}
		}
		else if ((_1a86b341c_Struct((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1acd4c365:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1acd49cd0:;
			{
				return true;;
			}
		}
		_match_end_1acd4b83c:;
	};
}



inline void _1a4e944d7_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1a4e9473a_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1a4e944d7_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _4113_max = _1a4e9430b_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1a4e9430b_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdd8687:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1acdd8687:;
			++it;
			goto _iter_begin_1acdd8687;
		}
		_iter_end_1acdd8687:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_1a4e9430b_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdd9cb5:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_1a4d599b8_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					(_4913_s).append("\n", 1);
				};
			}
			_iter_next_1acdd9cb5:;
			++it;
			_519_i++;
			goto _iter_begin_1acdd9cb5;
		}
		_iter_end_1acdd9cb5:;
	};
	jule::outln(_4913_s);
}



inline void _1a4e94949_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1a4e944d7_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.15 @master", 18));
}



inline void _1a4e94b36_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1a4e94c9b_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1a4e94eaa_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1a4e944d7_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1acde076b:;
			{
				_1a4e94b36_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1acde04e6:;
			{
				_1a4e94c9b_toolDistarch();
			}
		}
		else {
			_case_begin_1acddeb44:;
			{
				_1a4e944d7_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1acde0073:;
	};
}



inline void _1a4e951b9_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1a4e944d7_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _1ce998c09_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _1ce99a1a0_CppStd));
}



inline void _1a4e954a5_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1a4e944d7_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1acde395b:;
			{
				({
					auto except = static__1d0a33ba5_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1a4e944d7_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1acde33c8:;
			{
				_1a4e944d7_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1acde3571:;
	};
}



inline jule::Bool _1a4e9574c_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1acde3a05:;
			{
				_1a4e9473a_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1acde4e9b:;
			{
				_1a4e94949_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1acde5012:;
			{
				_1a4e94eaa_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1acde4770:;
			{
				_1a4e951b9_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1acde47d6:;
			{
				_1a4e954a5_mod(_15320_args);
			}
		}
		else {
			_case_begin_1acde4709:;
			{
				return false;;
			}
		}
		_match_end_1acde41cb:;
	};
	return true;;
}



inline void _1a4e958b2_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _1b623061e_Args();;
	if ((_18913_args.len() < 2LL)) {
		_1a4e958b2_showInfo();
		return;;
	};
	if (_1a4e9574c_processCommand(&(_18913_args))) {
		return;;
	};
	_1a9e34e12_compileCommand(&(_18913_args));
}



inline void _1a4e96385_enableVtp(void) {
	jule::Uintptr _199_hOut = _1d0a0de05_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_199_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _2413_dwMode = 0LL;;
	if ((!(_1d0a1126a_GetConsoleMode(_199_hOut, &(_2413_dwMode))))) {
		return;;
	};
	_2413_dwMode|=4LL;
	_1d0a11831_SetConsoleMode(_199_hOut, _2413_dwMode);
}



inline void _1a4e9652d_init(void) {
	_1a4e96385_enableVtp();
}



inline void _1a9e31e64_init(void) {
	_1ce998c09_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_1d0a32de6_File> _1a9e3221c_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _1a4d65c49_Dir((*(_4316_path)));;
	({
		auto except = static__1a4d673aa_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1a4d66794_Create(_449_dir);
				if (!except.ok()) {
					_1a8027523_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1d0a335ab_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1a8027523_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a9e32382_clearObjects(void) {
	({
		auto except = static__1d0b1b63e_Remove(_1a9e33493_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1a4d669a3_Remove(_1a9e3175a_OutDir);
}



inline void _1a9e3267e_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1a4e88663_Cmd> _7313_cmd = static__1a4e88a70_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_1a4d5eb44_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _1a4e88c4b_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1acdebe81:;
					{
						static__1a8024ae7_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1acdec1e5:;
					{
						static__1a8024ae7_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1acdec0b3:;
					{
						static__1a8024ae7_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1acdec019:;
			};
			_1a8027523_Throw(jule::Str());
		}
	});
	jule::I64 _869_status = ({
		auto except = _1a4e8918b_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _1ce998c09_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a8024ae7_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1a8027523_Throw(jule::Str());
	};
	_1a9e32382_clearObjects();
}



inline jule::Bool _1a9e32926_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1009_offset = _1a4d5d604_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _1a4ddde37_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1a9e32b35_pushCompCmdClang(jule::Str* _10726_cmd) {
	((*(_10726_cmd))).append("-Wno-everything ", 16);
	((*(_10726_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _1ce99a1a0_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ace00803:;
			{
				((*(_10726_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ace00bdd:;
			{
				((*(_10726_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ace00c54:;
			{
				((*(_10726_cmd))).append("c++20", 5);
			}
		}
		_match_end_1ace009e0:;
	};
	((*(_10726_cmd))).append(" ", 1);
	if (_1ce99b3e3_Production) {
		((*(_10726_cmd))).append("-O3 ", 4);
		((*(_10726_cmd))).append("-flto ", 6);
		((*(_10726_cmd))).append("-DNDEBUG ", 9);
		((*(_10726_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_10726_cmd))).append("-O0 ", 4);
	};
}



inline void _1a9e32d44_pushCompCmdGcc(jule::Str* _13324_cmd) {
	((*(_13324_cmd))).append("-w ", 3);
	((*(_13324_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _1ce99a1a0_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ace0276c:;
			{
				((*(_13324_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ace02a8b:;
			{
				((*(_13324_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ace02b02:;
			{
				((*(_13324_cmd))).append("c++20", 5);
			}
		}
		_match_end_1ace0288d:;
	};
	((*(_13324_cmd))).append(" ", 1);
	if (_1ce99b3e3_Production) {
		((*(_13324_cmd))).append("-O3 ", 4);
		((*(_13324_cmd))).append("-DNDEBUG ", 9);
		((*(_13324_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_13324_cmd))).append("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1a9e33295_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a93d5847_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_1ce999e80_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _1ce998c09_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ace04c47:;
			{
				_1a9e32d44_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ace04cad:;
			{
				_1a9e32b35_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1ace050cc:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace05a4a:;
		if (it != expr_end) {
			jule::Ptr<_1a893d323_ImportInfo> *_17112_u = it;
			{
				if (((*(_17112_u)).get()._field_Binded && _1a9e32926_isCppSourceFile((*(_17112_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17112_u)).get()._field_Path;
					(_16113_cmd).append(" ", 1);
				};
			}
			_iter_next_1ace05a4a:;
			++it;
			goto _iter_begin_1ace05a4a;
		}
		_iter_end_1ace05a4a:;
	};
	if ((!(_1a9e31caa_Out.empty()))) {
		(_16113_cmd).append("-o ", 3);
		_16113_cmd+=_1a9e31caa_Out;
		(_16113_cmd).append(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace05ece:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				(_16113_cmd).append(" ", 1);
				_16113_cmd+=(*(_18612_pass));
			}
			_iter_next_1ace05ece:;
			++it;
			goto _iter_begin_1ace05ece;
		}
		_iter_end_1ace05ece:;
	};
	if (_1a4e911e8_Os.equal("windows", 7)) {
		(_16113_cmd).append(" -lshell32", 10);
	};
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _1a9e33493_getCompilePath(void) {
	return _1a4d650de_Join(jule::Slice<jule::Str>::make({_1a9e3175a_OutDir,_1a9e319e1_OutName}));;
}



inline void _1a9e336d5_applyTargetIndependentOptimizations(jule::Ptr<_1a93d5847_IR>* _20545_ir) {
	jule::Ptr<_1a948c04c_Optimizer> _20613_opt = static__1a948c47b_New(_20545_ir);;
	_1a948d8bc_Optimize(_20613_opt.ptr());
}



inline void _1a9e3384a_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1ce998c09_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ace08e5a:;
			{
				_1a8027523_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ace08b3b:;
			{
				if (_1ce999e80_CompilerPath.empty()) {
					_1ce999e80_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ace08ba2:;
			{
				if (_1ce999e80_CompilerPath.empty()) {
					_1ce999e80_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1ace08ac5:;
			{
				_1a8027523_Throw((jule::Str("invalid option value for --compiler: ", 37) + _1ce998c09_Compiler));
			}
		}
		_match_end_1ace0891b:;
	};
}



inline void _1a9e33a15_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1a8027523_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1a9e33c24_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1a8027523_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1a9e33e33_checkTargetFlag(jule::Str* _24321_target) {
	if ((*(_24321_target)).empty()) {
		_1a8027523_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2489_parts = _1a4d5eb44_Split((*(_24321_target)), jule::Str("-", 1), -1LL);;
	if ((_2489_parts.len() != 2LL)) {
		_1a8027523_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _25310_os;;
	jule::Str _25314_arch;;
	({
		jule::Str ___jule_assign_arg = _2489_parts[0LL];
		jule::Str _1___jule_assign_arg = _2489_parts[1LL];
		_25310_os = ___jule_assign_arg;
		_25314_arch = _1___jule_assign_arg;
	});
	if ((!_25310_os.equal("native", 6))) {
		_1a9e33c24_checkTargetOs(_25310_os);
		_1a4e911e8_Os=_25310_os;
	};
	if ((!_25314_arch.equal("native", 6))) {
		_1a9e33a15_checkTargetArch(_25314_arch);
		_1a4e914b2_Arch=_25314_arch;
	};
	_1a5534bed_UpdateTarget();
}



inline void _1a9e34142_checkOptFlag(jule::Str* _26618_opt) {
	if ((*(_26618_opt)).empty()) {
		_1a8027523_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1ace100a4:;
			{
				goto _match_end_1ace10192;
			}
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1ace10549:;
			{
				_1a93dd410_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else if (_match_expr == jule::Str("L2", 2)) {
			_case_begin_1ace105b0:;
			{
				_1a93dd410_PushOptLevel(static_cast<jule::I64>(2LL));
			}
		}
		else {
			_case_begin_1ace0ee0b:;
			{
				_1a8027523_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1ace10192:;
	};
}



inline void _1a9e344b6_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1ce99a1a0_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ace10626:;
			{
				goto _match_end_1ace117e2;
			}
		}
		else {
			_case_begin_1ace11638:;
			{
				_1a8027523_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _1ce99a1a0_CppStd));
			}
		}
		_match_end_1ace117e2:;
	};
}



inline jule::Slice<jule::Str> _1a9e3474c_checkFlags(jule::Slice<jule::Str>* _29416_args) {
	jule::Str _29513_opt = jule::Str("L0", 2);;
	jule::Str _29613_target = jule::Str("native-native", 13);;
	jule::Ptr<_1a9e2bcc7_FlagSet> _29813_fs = static__1a9e2c0b3_New();;
	_1ace1352a_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29513_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1ace1352a_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29613_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1ace1352a_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1a9e31caa_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ce99a403_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ce99a6bc_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1ace1352a_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1ce998c09_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1ace1352a_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1ce999e80_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ce99b3e3_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ce99ac50_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ce99b129_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1ace1352a_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1ce99a1a0_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a93db595_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a93db8a3_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a93dbb6c_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a93dbe7a_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a93dc244_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a93dc50d_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a93dc7c7_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a93dcba1_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a93dce6a_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	_1ace1b522_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a93dd234_StdInternalNosafe)))), jule::Str("opt-internal-nosafe", 19), 0LL, jule::Str("Special optimizations for std::internal::nosafe", 47));
	jule::Slice<jule::Str> _32213_content = ({
		auto except = _1a9e2cd83_Parse(_29813_fs.ptr(), (*(_29416_args)));
		(except.ok()) ? (except.result) : ({
			_1a8027523_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1a9e3384a_checkCompilerFlag();
	_1a9e344b6_checkCppStdFlag();
	_1a9e33e33_checkTargetFlag(&(_29613_target));
	_1a9e34142_checkOptFlag(&(_29513_opt));
	return _32213_content;;
}



inline void _1a9e3495b_setupSemaFlags(jule::I64* _33524_flags) {
	if (_1ce99a403_Shadowing) {
		(*(_33524_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a93d5847_IR> _1a9e34c03_buildIr(jule::Slice<jule::Str>* _34113_args) {
	jule::Slice<jule::Str> _3429_content = _1a9e3474c_checkFlags(_34113_args);;
	jule::I64 _34413_semaFlags = static_cast<jule::I64>(0LL);;
	_1a9e3495b_setupSemaFlags(&(_34413_semaFlags));
	if ((_3429_content.len() == 0LL)) {
		_1a8027523_Throw(_1a4deb84b_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3429_content.len() > 1LL)) {
		_1a8027523_Throw((jule::Str("undefined content: ", 19) + _3429_content[1LL]));
	};
	jule::Str _35214_path;;
	jule::Bool _35220_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a4d6562d_Abs(_3429_content[0LL]);
		_35214_path = __jule_assign_result.__jule_result_arg0;
		_35220_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35220_ok))) {
		_1a8027523_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1d0a35536_Status> _3589_inf = ({
		auto except = static__1a4d673aa_Of(_1a4e90648_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a8027523_Throw(_1a4deb84b_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_1d0a35536_Status>(nullptr);});
	});;
	if ((!(_1d0a358ee_IsDir(_3589_inf.ptr())))) {
		_1a8027523_Throw(_1a4deb84b_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a93d5847_IR> _36614_ir;;
	jule::Slice<_1a4deb40b_Log> _36618_logs;;
	({
		__jule_tuple_x_1a93d5847_IR__jule_tuple_s_1a4deb40b_Log __jule_assign_result = static__1a93d5c87_Build(_35214_path, _34413_semaFlags);
		_36614_ir = __jule_assign_result.__jule_result_arg0;
		_36618_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36614_ir == nullptr) && (_36618_logs == nullptr))) {
		_1a8027523_Throw(_1a4deb84b_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_35214_path, &__jule_any_type5)})));
	};
	if ((_36618_logs != nullptr)) {
		static__1a8026aa5_PrintLogs(&(_36618_logs));
		_1a8027523_Throw(jule::Str());
	};
	return _36614_ir;;
}



inline void _1a9e34e12_compileCommand(jule::Slice<jule::Str>* _38124_args) {
	(*(_38124_args))=(*(_38124_args)).slice(1LL);
	if ((*(_38124_args))[0LL].equal("test", 4)) {
		_1ce99a986_Test=true;
		(*(_38124_args))=(*(_38124_args)).slice(1LL);
	};
	jule::Ptr<_1a93d5847_IR> _38713_ir = _1a9e34c03_buildIr(_38124_args);;
	;
	if ((!(_1ce99a986_Test))) {
		jule::Ptr<_1a88cc25c_Fn> _39217_main = _1a894239e_FindFn(_38713_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_39217_main == nullptr)) {
			_1a8027523_Throw(_1a4deb84b_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1a9e336d5_applyTargetIndependentOptimizations(&(_38713_ir));
	_1a93d6c00_Order(_38713_ir.ptr());
	jule::Str _40310_compiler;;
	jule::Str _40320_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a9e33295_genCompileCmd(_1a9e33493_getCompilePath(), &(_38713_ir));
		_40310_compiler = __jule_assign_result.__jule_result_arg0;
		_40320_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a9da8935_ObjectCoder> _40513_oc = static__1a9da8d0e_New(&(_38713_ir), _1a9da7093_SerializationInfo{._field_Compiler=_40310_compiler, ._field_CompilerCommand=_40320_compilerCmd});;
	if (_1ce99a986_Test) {
		jule::Ptr<_1a9620367_TestCoder> _41017_tc = static__1a9620796_New(&(_40513_oc));;
		_1a96219c8_Serialize(_41017_tc);
	} else {
		_1a9db4e19_Serialize(_40513_oc);
	};
	jule::Str _4169_path = _1a9e33493_getCompilePath();;
	jule::Ptr<_1d0a32de6_File> _41713_file = _1a9e3221c_openOutput(&(_4169_path));;
	({
		auto except = _1d0a34821_WriteStr(_41713_file.ptr(), &(_40513_oc.get()._field_Obj));
		if (!except.ok()) {
			_1a8027523_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _1d0a349ec_Close(_41713_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:421:5"));
	});
	if ((!(_1ce99a6bc_Transpilation))) {
		_1a9e3267e_compileIr(_40310_compiler, _40320_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1a4e915e4_init();
	_1a5534d63_init();
	_1a4e9652d_init();
	_1a9e31e64_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}